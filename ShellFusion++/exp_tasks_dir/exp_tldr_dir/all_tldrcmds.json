{
    "7z": {
        "common": {
            "Examples": {
                "Archive a file or directory": "7z a {{archived.7z}} {{path/to/file_or_directory}}",
                "Archive using a specific archive type": "7z a -t{{zip|gzip|bzip2|tar}} {{archived.7z}} {{path/to/file_or_directory}}",
                "Encrypt an existing archive (including headers)": "7z a {{encrypted.7z}} -p{{password}} -mhe=on {{archived.7z}}",
                "Extract an archive to stdout": "7z x {{archived.7z}} -so",
                "Extract an archive with user-defined output path": "7z x {{archived.7z}} -o{{path/to/output}}",
                "Extract an existing 7z file with original directory structure": "7z x {{archived.7z}}",
                "List available archive types": "7z i",
                "List the contents of an archive file": "7z l {{archived.7z}}"
            },
            "Explanation": "A file archiver with high compression ratio.",
            "More Information Link": "https://www.7-zip.org/"
        }
    },
    "7za": {
        "common": {
            "Examples": {
                "Archive a file or directory": "7za a {{archived.7z}} {{path/to/file_or_directory}}",
                "Archive using a specific archive type": "7za a -t{{zip|gzip|bzip2|tar}} {{archived}} {{path/to/file_or_directory}}",
                "Extract an existing 7z file with original directory structure": "7za x {{archived}}",
                "List available archive types": "7za i",
                "List the contents of an archive file": "7za l {{archived}}"
            },
            "Explanation": "A file archiver with high compression ratio.\nA standalone version of `7z` with support for fewer archive types.",
            "More Information Link": "https://www.7-zip.org/"
        }
    },
    "7zr": {
        "common": {
            "Examples": {
                "Archive a file or directory": "7zr a {{archived.7z}} {{path/to/file_or_directory}}",
                "Extract an existing 7z file with original directory structure": "7zr x {{archived.7z}}",
                "List the contents of an archive file": "7zr l {{archived.7z}}"
            },
            "Explanation": "A file archiver with high compression ratio.\nA standalone version of `7z` that only supports .7z files.",
            "More Information Link": "https://www.7-zip.org/"
        }
    },
    "AdGuardHome": {
        "common": {
            "Examples": {
                "Install or uninstall AdGuard Home as a service": "AdGuardHome --service {{install|uninstall}}",
                "Reload the configuration for the AdGuard Home service": "AdGuardHome --service reload",
                "Run AdGuard Home": "AdGuardHome",
                "Run AdGuard Home with a specific config": "AdGuardHome --config {{path/to/AdGuardHome.yaml}}",
                "Set the work directory for data to be stored in": "AdGuardHome --work-dir {{path/to/directory}}",
                "Start the AdGuard Home service": "AdGuardHome --service start",
                "Stop or restart the AdGuard Home service": "AdGuardHome --service {{stop|restart}}"
            },
            "Explanation": "A network-wide software for blocking ads & tracking.",
            "More Information Link": "https://github.com/AdguardTeam/AdGuardHome"
        }
    },
    "Chezmoi": {
        "common": {
            "Examples": {
                "Apply the changes": "chezmoi -v apply",
                "Edit the source state of a tracked dotfile": "chezmoi edit {{path/to/file}}",
                "Fetch the latest changes from a remote repository": "chezmoi update",
                "Initialize chezmoi on your machine": "chezmoi init",
                "See changes chezmoi would make": "chezmoi diff",
                "Set chezmoi up on another machine by downloading existing dotfiles from a git repo": "chezmoi init {{https://example.com/path/to/repository.git}}",
                "Tell chezmoi to manage a dotfile": "chezmoi add {{path/to/file}}"
            },
            "Explanation": "A multi-machine dotfile manager, written in Go.",
            "More Information Link": "https://chezmoi.io"
        }
    },
    "GetFileInfo": {
        "osx": {
            "Examples": {
                "Display infomation about a given file": "GetFileInfo {{path/to/filename}}",
                "Display the creator of a given file": "GetFileInfo -c {{path/to/filename}}",
                "Display the date and time a given file was created": "GetFileInfo -d {{path/to/filename}}",
                "Display the date and time a given file was last modified": "GetFileInfo -m {{path/to/filename}}"
            },
            "Explanation": "Get information about a file in an HFS+ directory.",
            "More Information Link": ""
        }
    },
    "Homeshick": {
        "linux": {
            "Examples": {
                "Add a file to your castle": "homeshick track {{castle_name}} {{path/to/file}}",
                "Clone a castle": "homeshick clone {{github_username}}/{{repository_name}}",
                "Create a new castle": "homeshick generate {{castle_name}}",
                "Go to a castle": "homeshick cd {{castle_name}}",
                "Symlink all files from a castle": "homeshick link {{castle_name}}"
            },
            "Explanation": "Synchronize Git dotfiles.",
            "More Information Link": "https://github.com/andsens/homeshick/wiki"
        }
    },
    "IPython": {
        "common": {
            "Examples": {
                "Clear the IPython history database, deleting all entries": "ipython history clear",
                "Create default IPython profile": "ipython profile create",
                "Enter an interactive IPython session after running a Python script": "ipython -i {{script.py}}",
                "Print the path to the directory for the default IPython profile": "ipython locate profile",
                "Start an interactive IPython session": "ipython"
            },
            "Explanation": "A Python shell with automatic history, dynamic object introspection, easier configuration, command completion, access to the system shell and more.",
            "More Information Link": ""
        }
    },
    "Medusa": {
        "linux": {
            "Examples": {
                "Execute a brute force against a MySQL server using a file cointaining usernames and a hash": "medusa -M mysql -h host -U {{path/to/username_file}} -p {{hash}} -m PASS:HASH",
                "Execute a brute force against a list of SMB servers using a username and a pwdump file": "medusa -M smbnt -H {{path/to/hosts_file}} -C {{path/to/pwdump_file}} -u {{username}} -m PASS:HASH",
                "Execute a login attempt against a HTTP server using the username, password and user-agent specified": "medusa -M HTTP -h host -u {{username}} -p {{password}} -m USER-AGENT:\"{{Agent}}\"",
                "Execute brute force against an FTP server using a file containing usernames and a file containing passwords": "medusa -M ftp -h host -U {{path/to/username_file}} -P {{path/to/password_file}}"
            },
            "Explanation": "A modular and parallel login brute-forcer for a variety of protocols.",
            "More Information Link": ""
        }
    },
    "SC-IM": {
        "common": {
            "Examples": {
                "Center align the current cell": "|",
                "Edit number in the current cell": "e",
                "Edit string in the current cell": "E",
                "Enter a numeric constant into the current cell": "=",
                "Enter a string into the current cell": "< or >",
                "Start SC-IM": "scim {{filename}}.csv"
            },
            "Explanation": "A curses based, vim-like spreadsheet calculator.\nUse hjkl or arrow keys to navigate.",
            "More Information Link": "https://github.com/andmarti1424/sc-im"
        }
    },
    "Stolon": {
        "common": {
            "Examples": {
                "Get cluster data": "stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} clusterdata",
                "Get cluster specification": "stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} spec",
                "Get cluster status": "stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} status",
                "Update cluster specification with a patch in json format": "stolonctl --cluster-name {{cluster_name}} --store-backend {{store_backend}} --store-endpoints {{store_endpoints}} update --patch '{{cluster_spec}}'"
            },
            "Explanation": "A cloud native PostgreSQL manager for PostgreSQL high availability.",
            "More Information Link": "https://github.com/sorintlab/stolon"
        }
    },
    "VBoxManage": {
        "common": {
            "Examples": {
                "List all VirtualBox virtual machines": "VBoxManage list vms",
                "Show information about a particular virtual machine": "VBoxManage showvminfo {{name|uuid}}",
                "Shutdown down the virtual machine without saving its state": "VBoxManage controlvm {{name|uuid}} poweroff",
                "Shutdown the virtual machine and save its current state": "VBoxManage controlvm {{name|uuid}} savestate",
                "Start a virtual machine": "VBoxManage startvm {{name|uuid}}",
                "Start a virtual machine in headless mode": "VBoxManage startvm {{name|uuid}} -type headless",
                "Update VBox extension packs": "VBoxManage extpack install --replace {{VboxExtensionPackFileName}}"
            },
            "Explanation": "Command-line interface to VirtualBox.\nIncludes all the functionality of the GUI and more.",
            "More Information Link": "https://www.virtualbox.org/manual/ch08.html#vboxmanage-intro"
        }
    },
    "Xephyr": {
        "common": {
            "Examples": {
                "Create a black window with display ID \":2\"": "Xephyr -br -ac -noreset -screen {{800x600}} {{:2}}",
                "Start an X application on the new screen": "DISPLAY=:2 {{command_name}}"
            },
            "Explanation": "A nested X server that runs as an X application.",
            "More Information Link": ""
        }
    },
    "a2disconf": {
        "linux": {
            "Examples": {
                "Disable a configuration file": "sudo a2disconf {{configuration_file}}",
                "Don't show informative messages": "sudo a2disconf --quiet {{configuration_file}}"
            },
            "Explanation": "Disable an Apache configuration file on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2disconf.8.en.html"
        }
    },
    "a2dismod": {
        "linux": {
            "Examples": {
                "Disable a module": "sudo a2dismod {{module}}",
                "Don't show informative messages": "sudo a2dismod --quiet {{module}}"
            },
            "Explanation": "Disable an Apache module on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2dismod.8.en.html"
        }
    },
    "a2dissite": {
        "linux": {
            "Examples": {
                "Disable a virtual host": "sudo a2dissite {{virtual_host}}",
                "Don't show informative messages": "sudo a2dissite --quiet {{virtual_host}}"
            },
            "Explanation": "Disable an Apache virtual host on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2dissite.8.en.html"
        }
    },
    "a2enconf": {
        "linux": {
            "Examples": {
                "Don't show informative messages": "sudo a2enconf --quiet {{configuration_file}}",
                "Enable a configuration file": "sudo a2enconf {{configuration_file}}"
            },
            "Explanation": "Enable an Apache configuration file on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2enconf.8.en.html"
        }
    },
    "a2enmod": {
        "linux": {
            "Examples": {
                "Don't show informative messages": "sudo a2enmod --quiet {{module}}",
                "Enable a module": "sudo a2enmod {{module}}"
            },
            "Explanation": "Enable an Apache module on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2enmod.8.en.html"
        }
    },
    "a2ensite": {
        "linux": {
            "Examples": {
                "Don't show informative messages": "sudo a2ensite --quiet {{virtual_host}}",
                "Enable a virtual host": "sudo a2ensite {{virtual_host}}"
            },
            "Explanation": "Enable an Apache virtual host on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2ensite.8.en.html"
        }
    },
    "a2query": {
        "linux": {
            "Examples": {
                "Check if a specific module is installed": "sudo a2query -m {{module_name}}",
                "Display the Apache version": "sudo a2query -v",
                "Display the currently enabled Multi Processing Module": "sudo a2query -M",
                "List enabled Apache modules": "sudo a2query -m",
                "List enabled virtual hosts": "sudo a2query -s"
            },
            "Explanation": "Retrieve runtime configuration from Apache on Debian-based OSes.",
            "More Information Link": "https://manpages.debian.org/buster/apache2/a2query.1.en.html"
        }
    },
    "aapt": {
        "common": {
            "Examples": {
                "Create a new APK archive with files from the specified directory": "aapt package -F {{path/to/app.apk}} {{path/to/directory}}",
                "Display an app's metadata (version, permissions, etc.)": "aapt dump badging {{path/to/app.apk}}",
                "List files contained in an APK archive": "aapt list {{path/to/app.apk}}"
            },
            "Explanation": "Android Asset Packaging Tool.\nCompile and package an Android app's resources.",
            "More Information Link": ""
        }
    },
    "ab": {
        "common": {
            "Examples": {
                "Execute 100 HTTP GET requests to a given URL": "ab -n {{100}} {{url}}",
                "Execute 100 HTTP GET requests, processing up to 10 requests concurrently, to given URL": "ab -n {{100}} -c {{10}} {{url}}",
                "Execute 100 HTTP POST requests to a given URL, using a JSON payload from a file": "ab -n {{100}} -T {{application/json}} -p {{data.json}} {{url}}",
                "Set the maximum number of seconds to spend for benchmarking": "ab -t {{60}} {{url}}",
                "Use keep alive": "ab -k {{url}}"
            },
            "Explanation": "Apache Benchmarking tool. The simplest tool to perform a load testing.",
            "More Information Link": "https://httpd.apache.org/docs/2.4/programs/ab.html"
        }
    },
    "abduco": {
        "common": {
            "Examples": {
                "Attach to a session in read-only mode": "abduco -Ar {{name}}",
                "Attach to a session with `dvtm`, creating it if it doesn't exist": "abduco -A {{name}}",
                "Attach to a session, creating it if it doesn't exist": "abduco -A {{name}} {{bash}}",
                "Detach from a session": "Ctrl + \\",
                "List sessions": "abduco"
            },
            "Explanation": "Terminal session manager.",
            "More Information Link": "http://www.brain-dump.org/projects/abduco/"
        }
    },
    "ac": {
        "linux": {
            "Examples": {
                "Also display additional details": "ac --compatibility",
                "Print how long a particular user has been connected in hours": "ac --individual-totals {{username}}",
                "Print how long a particular user has been connected in hours per day (with total)": "ac --daily-totals --individual-totals {{username}}",
                "Print how long the current user has been connected in hours": "ac",
                "Print how long users have been connected in hours": "ac --individual-totals"
            },
            "Explanation": "Print statistics on how long users have been connected.",
            "More Information Link": ""
        }
    },
    "ack": {
        "common": {
            "Examples": {
                "Count the total number of matches for the term \"foo\"": "ack -ch {{foo}}",
                "Find files containing \"foo\"": "ack {{foo}}",
                "Find files of a specific type": "ack --ruby {{foo}}",
                "List all valid types": "ack --help-types",
                "Search a file for a specified string": "ack bar \"{{foo bar}}\" {{path/to/file}}",
                "Search a file for the specified regex pattern": "ack bar \"{{[bB]ar \\d+}}\" {{path/to/file}}",
                "Show the file names containing \"foo\" and number of matches in each file": "ack -cl {{foo}}"
            },
            "Explanation": "A search tool like grep, optimized for programmers.",
            "More Information Link": "https://beyondgrep.com/documentation/"
        }
    },
    "acpi": {
        "linux": {
            "Examples": {
                "Extract information from `/proc` instead of `/sys`": "acpi -p",
                "Show all information": "acpi -V",
                "Show battery information": "acpi",
                "Show cooling device information": "acpi -c",
                "Show thermal information": "acpi -t",
                "Show thermal information in Fahrenheit": "acpi -tf"
            },
            "Explanation": "Shows battery status or thermal information.",
            "More Information Link": "https://sourceforge.net/projects/acpiclient/files/acpiclient/"
        }
    },
    "act": {
        "common": {
            "Examples": {
                "Do not actually run the actions (i.e. a dry run)": "act -n",
                "List the available actions": "act -l",
                "Run a specific action": "act -a {{action_id}}",
                "Run a specific event": "act {{event_type}}",
                "Run the default event": "act",
                "Show verbose logs": "act -v"
            },
            "Explanation": "Execute GitHub Actions locally using Docker.",
            "More Information Link": "https://github.com/nektos/act"
        }
    },
    "adb": {
        "common": {
            "Examples": {
                "Check whether the adb server process is running and start it": "adb start-server",
                "Copy a file/directory from the target device": "adb pull {{path/to/device_file_or_directory}} {{path/to/local_destination_directory}}",
                "Copy a file/directory to the target device": "adb push {{path/to/local_file_or_directory}} {{path/to/device_destination_directory}}",
                "Get a list of connected devices": "adb devices",
                "Push an Android application to an emulator/device": "adb install -r {{path/to/file.apk}}",
                "Start a remote shell in the target emulator/device instance": "adb shell",
                "Terminate the adb server process": "adb kill-server"
            },
            "Explanation": "Android Debug Bridge: communicate with an Android emulator instance or connected Android devices.",
            "More Information Link": "https://developer.android.com/studio/command-line/adb"
        }
    },
    "adb install": {
        "common": {
            "Examples": {
                "Grant all permissions listed in the app manifest": "adb install -g {{path/to/file.apk}}",
                "Push an Android application to an emulator/device": "adb install {{path/to/file.apk}}",
                "Quickly update an installed package by only updating the parts of the APK that changed": "adb install --fastdeploy {{path/to/file.apk}}",
                "Reinstall an existing app, keeping its data": "adb install -r {{path/to/file.apk}}"
            },
            "Explanation": "Android Debug Bridge Install: Push packages to an Android emulator instance or connected Android devices.",
            "More Information Link": "https://developer.android.com/studio/command-line/adb"
        }
    },
    "adb reverse": {
        "common": {
            "Examples": {
                "List all reverse socket connections from emulators and devices": "adb reverse --list",
                "Remove a reverse socket connections from an emulator or device": "adb reverse --remove tcp:{{remote_port}}",
                "Remove all reverse socket connections from all emulators and devices": "adb reverse --remove-all",
                "Reverse a TCP port from an emulator or device to localhost": "adb reverse tcp:{{remote_port}} tcp:{{local_port}}"
            },
            "Explanation": "Android Debug Bridge Reverse: reverse socket connections from an Android emulator instance or connected Android devices.",
            "More Information Link": "https://developer.android.com/studio/command-line/adb"
        }
    },
    "adb shell": {
        "common": {
            "Examples": {
                "Clear the data of an application on an emulator or device": "adb shell pm clear {{package}}",
                "Get all the properties from emulator or device": "adb shell getprop",
                "Revert all runtime permissions to their default": "adb shell pm reset-permissions",
                "Revoke a dangerous permission for an application": "adb shell pm revoke {{package}} {{permission}}",
                "Start a remote interactive shell on the emulator/device": "adb shell",
                "Start an activity on emulator/device": "adb shell am start -n {{package}}/{{activity}}",
                "Start the home activity on an emulator or device": "adb shell am start -W -c android.intent.category.HOME -a android.intent.action.MAIN",
                "Trigger a key event": "adb shell input keyevent {{keycode}}"
            },
            "Explanation": "Android Debug Bridge Shell: Run remote shell commands on an Android emulator instance or connected Android devices.",
            "More Information Link": "https://developer.android.com/studio/command-line/adb"
        }
    },
    "add-apt-repository": {
        "linux": {
            "Examples": {
                "Add a new apt repository": "add-apt-repository {{repository_spec}}",
                "Enable source packages": "add-apt-repository --enable-source {{repository_spec}}",
                "Remove an apt repository": "add-apt-repository --remove {{repository_spec}}",
                "Update the package cache after adding a repository": "add-apt-repository --update {{repository_spec}}"
            },
            "Explanation": "Manages apt repository definitions.",
            "More Information Link": ""
        }
    },
    "addpart": {
        "linux": {
            "Examples": {
                "Tell the kernel about the existence of the specified partition": "addpart {{device}} {{partition}} {{start}} {{length}}"
            },
            "Explanation": "Tells the Linux kernel about the existence of the specified partition.\nThe command is a simple wrapper around the `add partition` ioctl.",
            "More Information Link": "https://linux.die.net/man/8/addpart"
        }
    },
    "addr2line": {
        "linux": {
            "Examples": {
                "Demangle the function name for C++ code": "addr2line --exe={{path/to/executable}} --functions --demangle {{address}}",
                "Display the filename and line number of the source code from an instruction address of an executable": "addr2line --exe={{path/to/executable}} {{address}}",
                "Display the function name, filename and line number": "addr2line --exe={{path/to/executable}} --functions {{address}}"
            },
            "Explanation": "Convert addresses of a binary into file names and line numbers.",
            "More Information Link": ""
        }
    },
    "adduser": {
        "linux": {
            "Examples": {
                "Add an existing user to the specified group": "adduser {{username}} {{group}}",
                "Create a new user belonging to the specified group": "adduser --ingroup {{group}} {{username}}",
                "Create a new user with a default home directory and prompt the user to set a password": "adduser {{username}}",
                "Create a new user with a home directory at the specified path": "adduser --home {{path/to/home}} {{username}}",
                "Create a new user with the specified shell set as the login shell": "adduser --shell {{path/to/shell}} {{username}}",
                "Create a new user without a home directory": "adduser --no-create-home {{username}}"
            },
            "Explanation": "User addition utility.",
            "More Information Link": ""
        }
    },
    "afinfo": {
        "osx": {
            "Examples": {
                "Display help for full usage": "afinfo -h",
                "Display info of a given audio file": "afinfo {{path/to/file}}",
                "Print a one line description of the audio file": "afinfo -b {{path/to/file}}",
                "Print metadata info and contents of the audio file's InfoDictionary": "afinfo -i {{path/to/file}}",
                "Print output in xml format": "afinfo -x {{path/to/file}}",
                "Print warnings for the audio file if any": "afinfo --warnings {{path/to/file}}"
            },
            "Explanation": "Audio file metadata parser for OS X.\nBuilt-in command of OS X.",
            "More Information Link": ""
        }
    },
    "afplay": {
        "osx": {
            "Examples": {
                "Play a sound file (waits until playback ends)": "afplay {{path/to/file}}",
                "Play a sound file at 2x speed (playback rate)": "afplay --rate {{2}} {{path/to/file}}",
                "Play a sound file at half speed": "afplay --rate {{0.5}} {{path/to/file}}",
                "Play the first N seconds of a sound file": "afplay --time {{seconds}} {{path/to/file}}"
            },
            "Explanation": "Command-line audio player.",
            "More Information Link": ""
        }
    },
    "ag": {
        "common": {
            "Examples": {
                "Find \"foo\" in files with a name matching \"bar\"": "ag {{foo}} -G {{bar}}",
                "Find files containing \"FOO\" case-insensitively, and print only the match, rather than the whole line": "ag -i -o {{FOO}}",
                "Find files containing \"foo\" in a specific directory": "ag {{foo}} {{path/to/directory}}",
                "Find files containing \"foo\", and print the line matches in context": "ag {{foo}}",
                "Find files containing \"foo\", but only list the filenames": "ag -l {{foo}}",
                "Find files whose contents match a regular expression": "ag '{{^ba(r|z)$}}'",
                "Find files with a name matching \"foo\"": "ag -g {{foo}}"
            },
            "Explanation": "The Silver Searcher. Like ack, but aims to be faster.",
            "More Information Link": "https://github.com/ggreer/the_silver_searcher"
        }
    },
    "airpaste": {
        "common": {
            "Examples": {
                "Create/Join channel": "airpaste {{channel_name}}",
                "Receive file": "airpaste > {{path/to/file}}",
                "Send file": "airpaste < {{path/to/file}}",
                "Send text": "echo {{text}} | airpaste",
                "Wait for message and display when received": "airpaste"
            },
            "Explanation": "Share messages and files on the same network.",
            "More Information Link": ""
        }
    },
    "airport": {
        "osx": {
            "Examples": {
                "Disassociate from current airport network": "sudo airport -z",
                "Scan for available wireless networks": "airport -s",
                "Show current wireless status information": "airport -I",
                "Sniff wireless traffic on channel 1": "airport sniff {{1}}"
            },
            "Explanation": "Wireless network configuration utility.",
            "More Information Link": ""
        }
    },
    "ajson": {
        "common": {
            "Examples": {
                "Read JSON from a URL and evaluate a specified JSONPath expression": "ajson '{{avg($..price)}}' '{{https://example.com/api/}}'",
                "Read JSON from a file and execute a specified JSONPath expression": "ajson '{{$..json[?(@.path)]}}' {{path/to/file.json}}",
                "Read JSON from stdin and execute a specified JSONPath expression": "cat {{path/to/file.json}} | ajson '{{$..json[?(@.path)]}}'",
                "Read some simple JSON and calculate a value": "echo '{{3}}' | ajson '{{2 * pi * $}}'"
            },
            "Explanation": "Executes JSONPath on JSON objects.",
            "More Information Link": "https://github.com/spyzhov/ajson"
        }
    },
    "alacritty": {
        "common": {
            "Examples": {
                "Open a new alacritty window": "alacritty",
                "Run a command in a new alacritty window": "alacritty -e {{command}}",
                "Run in a specific directory": "alacritty --working-directory {{path/to/directory}}",
                "Run with live config reload enabled (can also be enabled by default in alacritty.yml)": "alacritty --live-config-reload --config-file {{path/to/config.yml}}",
                "Specify alternative configuration file (defaults to $XDG_CONFIG_HOME/alacritty/alacritty.yml)": "alacritty --config-file {{path/to/config.yml}}"
            },
            "Explanation": "Cross-platform, GPU-accelerated terminal emulator.",
            "More Information Link": "https://github.com/jwilm/alacritty"
        }
    },
    "alex": {
        "common": {
            "Examples": {
                "Analyze a specific file": "alex {{textfile.md}}",
                "Analyze all files in the current directory": "alex",
                "Analyze all markdown files except `example.md`": "alex *.md !{{example.md}}",
                "Analyze text from `stdin`": "echo {{His network looks good}} | alex --stdin"
            },
            "Explanation": "A tool that catches insensitive, inconsiderate writing.\nIt helps you find gender favouring, polarising, race related, religion inconsiderate, or other unequal phrasing in text.",
            "More Information Link": "https://github.com/get-alex/alex"
        }
    },
    "alias": {
        "common": {
            "Examples": {
                "Create `la` as a shortcut for `ls -a`": "alias {{la}}=\"{{ls -a}}\"",
                "Create a generic alias": "alias {{word}}=\"{{command}}\"",
                "List all aliases": "alias",
                "Remove an aliased command": "unalias {{word}}",
                "Turn `rm` into an interactive command": "alias {{rm}}=\"{{rm -i}}\"",
                "View the command associated to a given alias": "alias {{word}}"
            },
            "Explanation": "Creates aliases -- words that are replaced by a command string.\nAliases expire with the current shell session, unless they're defined in the shell's configuration file, e.g. `~/.bashrc`.",
            "More Information Link": ""
        }
    },
    "alpine": {
        "linux": {
            "Examples": {
                "Open alpine directly to the message composition screen to send an email to a given email address": "alpine {{email@example.net}}",
                "Open alpine normally": "alpine",
                "Quit alpine": "'q' then 'y'"
            },
            "Explanation": "An email client and Usenet newsgroup program with a pico/nano-inspired interface.\nSupports most modern email services through IMAP.",
            "More Information Link": ""
        }
    },
    "amixer": {
        "linux": {
            "Examples": {
                "Turn down the master volume by 10%": "amixer -D pulse sset Master {{10%-}}",
                "Turn up the master volume by 10%": "amixer -D pulse sset Master {{10%+}}"
            },
            "Explanation": "Mixer for ALSA soundcard driver.",
            "More Information Link": ""
        }
    },
    "androguard": {
        "common": {
            "Examples": {
                "Decompile Java code from an app": "androguard decompile {{path/to/app.apk}} --output {{path/to/directory}}",
                "Display Android app manifest": "androguard axml {{path/to/app.apk}}",
                "Display app metadata (version and app ID)": "androguard apkid {{path/to/app.apk}}"
            },
            "Explanation": "Reverse engineering tool for Android applications. Written in Python.",
            "More Information Link": "https://github.com/androguard/androguard"
        }
    },
    "ansible": {
        "common": {
            "Examples": {
                "Display facts about a group of hosts by invoking the setup module": "ansible {{group}} -m setup",
                "Execute a command on a group of hosts by invoking command module with arguments": "ansible {{group}} -m command -a '{{my_command}}'",
                "Execute a command using a custom inventory file": "ansible {{group}} -i {{inventory_file}} -m command -a '{{my_command}}'",
                "Execute a command with administrative privileges": "ansible {{group}} --become --ask-become-pass -m command -a '{{my_command}}'",
                "List hosts belonging to a group": "ansible {{group}} --list-hosts",
                "Ping a group of hosts by invoking the ping module": "ansible {{group}} -m ping"
            },
            "Explanation": "Manage groups of computers remotely over SSH.\nUse the /etc/ansible/hosts file to add new groups/hosts.",
            "More Information Link": "https://www.ansible.com/"
        }
    },
    "ansible-galaxy": {
        "common": {
            "Examples": {
                "Create a new role": "ansible-galaxy init {{role_name}}",
                "Install a role": "ansible-galaxy install {{username.role_name}}",
                "List installed roles": "ansible-galaxy list",
                "Remove a role": "ansible-galaxy remove {{username.role_name}}",
                "Search for a given role": "ansible-galaxy search {{role_name}}"
            },
            "Explanation": "Create and manage Ansible roles.",
            "More Information Link": "https://docs.ansible.com/ansible/latest/cli/ansible-galaxy.html"
        }
    },
    "ansible-playbook": {
        "common": {
            "Examples": {
                "Run tasks in a playbook starting at a specific task": "ansible-playbook {{playbook}} --start-at {{task_name}}",
                "Run tasks in playbook": "ansible-playbook {{playbook}}",
                "Run tasks in playbook for the given tags": "ansible-playbook {{playbook}} --tags {{tag1,tag2}}",
                "Run tasks in playbook with custom host inventory": "ansible-playbook {{playbook}} -i {{inventory_file}}",
                "Run tasks in playbook with extra variables defined in a json file": "ansible-playbook {{playbook}} -e \"@{{variables.json}}\"",
                "Run tasks in playbook with extra variables defined via the command line": "ansible-playbook {{playbook}} -e \"{{variable1}}={{value1}} {{variable2}}={{value2}}\""
            },
            "Explanation": "Execute tasks defined in playbook on remote machines over SSH.",
            "More Information Link": "https://docs.ansible.com/ansible/latest/cli/ansible-playbook.html"
        }
    },
    "ansible-vault": {
        "common": {
            "Examples": {
                "Create a new encrypted vault file using a vault key file to encrypt it": "ansible-vault create --vault-password-file={{password_file}} {{vault_file}}",
                "Create a new encrypted vault file with a prompt for a password": "ansible-vault create {{vault_file}}",
                "Encrypt a string using Ansible's encrypted string format, displaying interactive prompts": "ansible-vault encrypt_string",
                "Encrypt an existing file using an optional password file": "ansible-vault encrypt --vault-password-file={{password_file}} {{vault_file}}",
                "Re-key already encrypted vault file with a new password file": "ansible-vault rekey --vault-password-file={{old_password_file}} --new-vault-password-file={{new_password_file}} {{vault_file}}",
                "View an encrypted file, using a password file to decrypt": "ansible-vault view --vault-password-file={{password_file}} {{vault_file}}"
            },
            "Explanation": "Encrypts & decrypts values, data structures and files within Ansible projects.",
            "More Information Link": "https://docs.ansible.com/ansible/latest/user_guide/vault.html#id17"
        }
    },
    "ansiweather": {
        "common": {
            "Examples": {
                "Display a forecast showing symbols and daylight data for your current location": "ansiweather -s {{true}} -d {{true}}",
                "Display a forecast showing wind and humidity data for your current location": "ansiweather -w {{true}} -h {{true}}",
                "Display a forecast using metric units for the next five days for Rzeszow, Poland": "ansiweather -u {{metric}} -f {{5}} -l {{Rzeszow,PL}}"
            },
            "Explanation": "A shell script for displaying the current weather conditions in your terminal.",
            "More Information Link": "https://github.com/fcambus/ansiweather"
        }
    },
    "ant": {
        "common": {
            "Examples": {
                "Build a project using build file other than `build.xml`": "ant -f {{buildfile.xml}}",
                "Build a project with default build file `build.xml`": "ant",
                "Execute all targets that do not depend on fail target(s)": "ant -k",
                "Print debugging information": "ant -d",
                "Print information on possible targets for this project": "ant -p"
            },
            "Explanation": "Apache Ant.\nTool for building and managing Java-based projects.",
            "More Information Link": "https://ant.apache.org"
        }
    },
    "apache2ctl": {
        "linux": {
            "Examples": {
                "List loaded modules": "sudo apache2ctl -M",
                "Restart the Apache daemon": "sudo apache2ctl restart",
                "Start the Apache daemon. Throw a message if it is already running": "sudo apache2ctl start",
                "Stop the Apache daemon": "sudo apache2ctl stop",
                "Test syntax of the configuration file": "sudo apache2ctl -t"
            },
            "Explanation": "The CLI tool to administrate HTTP web server Apache.\nThis command comes with Debian based OSes, for RHEL based ones see `httpd`.",
            "More Information Link": ""
        }
    },
    "apachectl": {
        "osx": {
            "Examples": {
                "Start the org.apache.httpd launchd job": "apachectl start",
                "Stop the launchd job": "apachectl stop",
                "Stop, then start launchd job": "apachectl restart"
            },
            "Explanation": "Apache HTTP Server control interface for macOS.",
            "More Information Link": ""
        }
    },
    "apg": {
        "common": {
            "Examples": {
                "Create a password that doesn't appear in a dictionary (the dictionary file has to be provided)": "apg -r {{dictionary_file}}",
                "Create a password with 16 characters": "apg -m {{16}}",
                "Create a password with at least 1 symbol (S), 1 number (N), 1 uppercase (C), 1 lowercase (L)": "apg -M SNCL",
                "Create a password with maximum length of 16": "apg -x {{16}}",
                "Create random passwords (default password length is 8)": "apg"
            },
            "Explanation": "Creates arbitrarily complex random passwords.",
            "More Information Link": ""
        }
    },
    "apk": {
        "linux": {
            "Examples": {
                "Get info about a specific package": "apk info {{package}}",
                "Install a new package": "apk add {{package}}",
                "Remove a package": "apk del {{package}}",
                "Repair package or upgrade it without modifying main dependencies": "apk fix {{package}}",
                "Search package via keyword": "apk search {{keyword}}",
                "Update repository indexes from all remote repositories": "apk update"
            },
            "Explanation": "Alpine Linux package management tool.",
            "More Information Link": ""
        }
    },
    "apktool": {
        "common": {
            "Examples": {
                "Build a folder into an APK file": "apktool b {{path/to/directory}}",
                "Decode an APK file": "apktool d {{file.apk}}",
                "Install and store frameworks": "apktool if {{framework.apk}}"
            },
            "Explanation": "Reverse engineer APK files.",
            "More Information Link": "https://ibotpeaches.github.io/Apktool/"
        }
    },
    "aplay": {
        "linux": {
            "Examples": {
                "Play a specific file (sampling rate, bit depth, etc. will be automatically determined for the file format)": "aplay {{path/to/file}}",
                "Play the first 10 seconds of a specific file at 2500Hz": "aplay --duration={{10}} --rate={{2500}} {{path/to/file}}",
                "Play the raw file as a 22050Hz, mono, 8-bit, Mu-Law `.au` file": "aplay --channels={{1}} --file-type {{raw}} --rate={{22050}} --format={{mu_law}} {{path/to/file}}"
            },
            "Explanation": "Command-line sound player for ALSA soundcard driver.",
            "More Information Link": "https://linux.die.net/man/1/aplay"
        }
    },
    "apm": {
        "common": {
            "Examples": {
                "Install packages from http://atom.io/packages and themes from http://atom.io/themes": "apm install {{package_name}}",
                "Remove packages/themes": "apm remove {{package_name}}",
                "Upgrade packages/themes": "apm upgrade {{package_name}}"
            },
            "Explanation": "Atom editor Package Manager.\nSee `atom`.",
            "More Information Link": "https://github.com/atom/apm"
        }
    },
    "apport-bug": {
        "linux": {
            "Examples": {
                "Report a bug about a specific executable": "apport-bug {{path/to/executable}}",
                "Report a bug about a specific package": "apport-bug {{package}}",
                "Report a bug about a specific process": "apport-bug {{PID}}",
                "Report a bug about the whole system": "apport-bug"
            },
            "Explanation": "File a bug report on Ubuntu.",
            "More Information Link": "https://wiki.ubuntu.com/Apport"
        }
    },
    "apropos": {
        "common": {
            "Examples": {
                "Search for keyword": "apropos {{regular_expression}}",
                "Search for pages that only contain all of the expressions given (AND search)": "apropos {{regular_expression_1}} -a {{regular_expression_2}} -a {{regular_expression_3}",
                "Search without restricting output to terminal width": "apropos -l {{regular_expression}}"
            },
            "Explanation": "Search in manpages, for example to find a new command.",
            "More Information Link": ""
        }
    },
    "apt": {
        "linux": {
            "Examples": {
                "Install a package, or update it to the latest available version": "sudo apt install {{package}}",
                "List all packages": "apt list",
                "List installed packages": "apt list --installed",
                "Remove a package (using `purge` instead also removes its configuration files)": "sudo apt remove {{package}}",
                "Search for a given package": "apt search {{package}}",
                "Show information for a package": "apt show {{package}}",
                "Update the list of available packages and versions (it's recommended to run this before other `apt` commands)": "sudo apt update",
                "Upgrade all installed packages to their newest available versions": "sudo apt upgrade"
            },
            "Explanation": "Package management utility for Debian based distributions.\nRecommended replacement for apt-get when used interactively in Ubuntu versions 16.04 and later.",
            "More Information Link": ""
        }
    },
    "apt-add-repository": {
        "linux": {
            "Examples": {
                "Add a new apt repository": "apt-add-repository {{repository_spec}}",
                "Enable source packages": "apt-add-repository --enable-source {{repository_spec}}",
                "Remove an apt repository": "apt-add-repository --remove {{repository_spec}}",
                "Update the package cache after adding a repository": "apt-add-repository --update {{repository_spec}}"
            },
            "Explanation": "Manages apt repository definitions.",
            "More Information Link": ""
        }
    },
    "apt-cache": {
        "linux": {
            "Examples": {
                "Search for a package in your current sources": "apt-cache search {{query}}",
                "Show dependencies for a package": "apt-cache depends {{package}}",
                "Show information about a package": "apt-cache show {{package}}",
                "Show packages that depend on a particular package": "apt-cache rdepends {{package}}",
                "Show whether a package is installed and up to date": "apt-cache policy {{package}}"
            },
            "Explanation": "Debian and Ubuntu package query tool.",
            "More Information Link": ""
        }
    },
    "apt-file": {
        "linux": {
            "Examples": {
                "List the contents of a specific package": "apt-file list {{package_name}}",
                "Search for packages that contain the specified file or path": "apt-file search {{part/of/filename}}",
                "Update the metadata database": "sudo apt update"
            },
            "Explanation": "Search for files in apt packages, including ones not yet installed.",
            "More Information Link": ""
        }
    },
    "apt-get": {
        "linux": {
            "Examples": {
                "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded": "apt-get autoclean",
                "Install a package, or update it to the latest available version": "apt-get install {{package}}",
                "Remove a package": "apt-get remove {{package}}",
                "Remove a package and its configuration files": "apt-get purge {{package}}",
                "Remove all packages that are no longer needed": "apt-get autoremove",
                "Update the list of available packages and versions (it's recommended to run this before other `apt-get` commands)": "apt-get update",
                "Upgrade all installed packages to their newest available versions": "apt-get upgrade",
                "Upgrade installed packages (like `upgrade`), but remove obsolete packages and install additional packages to meet new dependencies": "apt-get dist-upgrade"
            },
            "Explanation": "Debian and Ubuntu package management utility.\nSearch for packages using `apt-cache`.",
            "More Information Link": ""
        }
    },
    "apt-key": {
        "linux": {
            "Examples": {
                "Add a key from keyserver with only key id": "apt-key adv --keyserver {{pgp.mit.edu}} --recv {{KEYID}}",
                "Add a key to the trusted keystore": "apt-key add {{public_key_file.asc}}",
                "Add a remote key to the trusted keystore": "wget -qO - {{https://host.tld/filename.key}} | apt-key add -",
                "Delete a key from the trusted keystore": "apt-key del {{key_id}}",
                "List trusted keys": "apt-key list"
            },
            "Explanation": "Key management utility for the APT Package Manager on Debian and Ubuntu.",
            "More Information Link": ""
        }
    },
    "apt-mark": {
        "linux": {
            "Examples": {
                "Allow a package to be updated again": "sudo apt-mark unhold {{package_name}}",
                "Hold a package at its current version and prevent updates to it": "sudo apt-mark hold {{package_name}}",
                "Mark a package as automatically installed": "sudo apt-mark auto {{package_name}}",
                "Show held packages that aren't being updated": "apt-mark showhold",
                "Show manually installed packages": "apt-mark showmanual"
            },
            "Explanation": "Utility to change the status of installed packages.",
            "More Information Link": ""
        }
    },
    "aptitude": {
        "linux": {
            "Examples": {
                "Install a new package and its dependencies": "aptitude install {{package}}",
                "Put an installed package on hold to prevent it from being automatically upgraded": "aptitude hold '?installed({{package}})'",
                "Remove a package and all packages depending on it": "aptitude remove {{package}}",
                "Search for a package": "aptitude search {{package}}",
                "Search for an installed package (`?installed` is an aptitude search term)": "aptitude search '?installed({{package}})'",
                "Synchronize list of packages and versions available. This should be run first, before running subsequent aptitude commands": "aptitude update",
                "Upgrade installed packages (like `aptitude upgrade`) including removing obsolete packages and installing additional packages to meet new package dependencies": "aptitude full-upgrade",
                "Upgrade installed packages to newest available versions": "aptitude upgrade"
            },
            "Explanation": "Debian and Ubuntu package management utility.",
            "More Information Link": ""
        }
    },
    "ar": {
        "common": {
            "Examples": {
                "Create an archive with files and an accompanying object file index": "ar -rs {{libfoo.a}} {{foo.o}} {{bar.o}} {{baz.o}}",
                "Extract all members from an archive": "ar -x {{libfoo.a}}",
                "Insert an object file index (equivalent to using `ranlib`)": "ar -s {{libfoo.a}}",
                "List the members of an archive": "ar -t {{libfoo.a}}",
                "Replace or add files to an archive": "ar -r {{libfoo.a}} {{foo.o}} {{bar.o}} {{baz.o}}"
            },
            "Explanation": "Create, modify, and extract from archives (.a, .so, .o).",
            "More Information Link": ""
        }
    },
    "arc": {
        "common": {
            "Examples": {
                "Push Git changes": "arc land",
                "Send the changes to Differential for review": "arc diff",
                "Show pending revision information": "arc list",
                "Update Git commit messages after review": "arc amend"
            },
            "Explanation": "Arcanist: A CLI for Phabricator.",
            "More Information Link": "https://secure.phabricator.com/book/phabricator/article/arcanist/"
        }
    },
    "arch": {
        "common": {
            "Examples": {
                "Display the system's architecture": "arch"
            },
            "Explanation": "Display the name of the system architecture.\nSee also `uname`.",
            "More Information Link": ""
        }
    },
    "archey": {
        "linux": {
            "Examples": {
                "Show system information": "archey"
            },
            "Explanation": "Simple tool for stylishly displaying system information.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Show system information": "archey",
                "Show system information without IP address check": "archey --offline",
                "Show system information without colored output": "archey --nocolor",
                "Show system information, using MacPorts instead of Homebrew": "archey --macports"
            },
            "Explanation": "Simple tool for stylishly displaying system information.",
            "More Information Link": ""
        }
    },
    "arecord": {
        "linux": {
            "Examples": {
                "Allow interactive interface (e.g. use space-bar or enter to play or pause)": "arecord --interactive",
                "List all sound cards and digital audio devices": "arecord --list-devices",
                "Record a snippet and save it as mp3 (finish with Ctrl-C when done)": "arecord -vv --format=cd --file-type raw | lame -r - {{path/to/file.mp3}}",
                "Record a snippet in \"CD\" quality (finish with Ctrl-C when done)": "arecord -vv --format=cd {{path/to/file.wav}}",
                "Record a snippet in \"CD\" quality, with a fixed duration of 10 seconds": "arecord -vv --format=cd --duration={{10}} {{path/to/file.wav}}"
            },
            "Explanation": "Sound recorder for ALSA soundcard driver.",
            "More Information Link": "https://linux.die.net/man/1/arecord"
        }
    },
    "aria2": {
        "common": {
            "Examples": {
                "Download URIs from a file": "aria2c -i {{uris.txt}}",
                "Download a resource from multiple sources": "aria2c {{http://mirror1.org/myLinux.iso}} {{http://mirror2.org/myLinux.iso}}",
                "Download a web resource": "aria2c {{http://example.org/myLinux.iso}}",
                "Download from a BitTorrent Magnet URI": "aria2c {{'magnet:?xt=urn:btih:248D0A1CD08284299DE78D5C1ED359BB46717D8C'}}",
                "Download from a BitTorrent URI": "aria2c {{http://example.org/myLinux.torrent}}",
                "Download from a Metalink URI": "aria2c {{http://example.org/myLinux.metalink}}",
                "Download using 2 connections per host": "aria2c -x{{2}} {{http://example.org/myLinux.iso}}"
            },
            "Explanation": "A lightweight multi-protocol & multi-source command-line download utility.\nSupports HTTP, HTTPS, FTP, SFTP, BitTorrent and Metalink.",
            "More Information Link": "https://aria2.github.io/"
        }
    },
    "aria2c": {
        "common": {
            "Examples": {
                "Download a URI to a file": "aria2c {{url}}",
                "Download from multiple sources": "aria2c {{url_1}} {{url_2}}",
                "Download the URIs listed in a file": "aria2c -i {{filename}}",
                "Download the contents of an URL to a file": "aria2c -o {{filename}} {{url}}",
                "Download with multiple connections": "aria2c -s {{connections_num}} {{url}}",
                "FTP download with username and password": "aria2c --ftp-user={{username}} --ftp-passwd={{password}} {{url}}",
                "Limit download speed in bytes/s": "aria2c --max-download-limit={{speed}} {{url}}"
            },
            "Explanation": "Fast download utility.\nSupports HTTP(S), FTP, SFTP, BitTorrent, and Metalink.",
            "More Information Link": "https://aria2.github.io"
        }
    },
    "arithmetic": {
        "linux": {
            "Examples": {
                "Specify a range. Addition and multiplication problems would feature numbers between 0 and range, inclusive. Subtraction and division problems would have required result and number to be operated on, between 0 and range": "arithmetic -r {{7}}",
                "Specify one or more arithmetic [o]peration symbols to get problems on them": "arithmetic -o {{+|-|x|/}}",
                "Start an arithmetic quiz": "arithmetic"
            },
            "Explanation": "Quiz on simple arithmetic problems.",
            "More Information Link": "https://manpages.debian.org/bsdgames/arithmetic.6.en.html"
        }
    },
    "ark": {
        "linux": {
            "Examples": {
                "Change extraction directory": "ark --batch --destination {{path/to/directory}} {{archive}}",
                "Create an archive if it does not exist and add files to it": "ark --add-to {{archive}} {{file1}} {{file2}}",
                "Extract an archive into the current directory": "ark --batch {{archive}}"
            },
            "Explanation": "KDE archiving tool.",
            "More Information Link": "https://docs.kde.org/stable5/en/kdeutils/ark/"
        }
    },
    "arp": {
        "common": {
            "Examples": {
                "Clear the entire cache": "sudo arp -a -d",
                "Create an entry": "arp -s {{address}} {{mac_address}}",
                "Delete a specific entry": "arp -d {{address}}",
                "Show current arp table": "arp -a"
            },
            "Explanation": "Show and manipulate your system's ARP cache.",
            "More Information Link": ""
        }
    },
    "arp-scan": {
        "linux": {
            "Examples": {
                "Scan an IP network with a custom bitmask": "arp-scan {{192.168.1.1}}/{{24}}",
                "Scan an IP network with a custom net mask": "arp-scan {{10.0.0.0}}:{{255.255.255.0}}",
                "Scan an IP network within a custom range": "arp-scan {{127.0.0.0}}-{{127.0.0.31}}",
                "Scan the current local network": "arp-scan --localnet"
            },
            "Explanation": "Send ARP packets to hosts (specified as IP addresses or hostnames) to scan the local network.",
            "More Information Link": ""
        }
    },
    "arping": {
        "common": {
            "Examples": {
                "Broadcast ARP request packets to update neighbours' ARP caches": "arping -U {{ip_to_broadcast}}",
                "Detect duplicated IP addresses in the network by sending ARP requests with a 3 seconds timeout": "arping -D -w {{3}} {{ip_to_check}}",
                "Ping a host a specific number of times": "arping -c {{count}} {{host_ip}}",
                "Ping a host and stop at the first reply": "arping -f {{host_ip}}",
                "Ping a host by ARP request packets": "arping {{host_ip}}",
                "Ping a host on a specific interface": "arping -I {{interface}} {{host_ip}}"
            },
            "Explanation": "Discover and probe hosts in a network using the ARP protocol.\nUseful for MAC address discovery.",
            "More Information Link": "https://github.com/ThomasHabets/arping"
        }
    },
    "as": {
        "linux": {
            "Examples": {
                "Assemble a file, writing the output to a.out": "as {{file.s}}",
                "Assemble the output to a given file": "as {{file.s}} -o {{out.o}}",
                "Generate output faster by skipping whitespace and comment preprocessing. (Should only be used for trusted compilers)": "as -f {{file.s}}",
                "Include a given path to the list of directories to search for files specified in .include directives": "as -I {{path/to/directory}} {{file.s}}"
            },
            "Explanation": "Portable GNU assembler.\nPrimarily intended to assemble output from `gcc` to be used by `ld`.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Assemble a file, writing the output to a.out": "as {{file.s}}",
                "Assemble the output to a given file": "as {{file.s}} -o {{out.o}}",
                "Generate output faster by skipping whitespace and comment preprocessing. (Should only be used for trusted compilers)": "as -f {{file.s}}",
                "Include a given path to the list of directories to search for files specified in .include directives": "as -I {{path/to/directory}} {{file.s}}"
            },
            "Explanation": "Portable GNU assembler.\nPrimarily intended to assemble output from `gcc` to be used by `ld`.",
            "More Information Link": ""
        }
    },
    "asar": {
        "common": {
            "Examples": {
                "Archive a file or directory": "asar pack {{path/to/file_or_directory}} {{archived.asar}}",
                "Extract a specific file from an archive": "asar extract-file {{archived.asar}} {{file}}",
                "Extract an archive": "asar extract {{archived.asar}}",
                "List the contents of an archive file": "asar list {{archived.asar}}"
            },
            "Explanation": "A file archiver for the Electron platform.",
            "More Information Link": "https://github.com/electron/asar"
        }
    },
    "ascii": {
        "linux": {
            "Examples": {
                "Show ASCII aliases in short, script-friendly mode": "ascii -t {{a}}",
                "Show ASCII aliases of a character": "ascii {{a}}",
                "Show ASCII aliases of multiple characters": "ascii -s {{tldr}}",
                "Show ASCII table in binary": "ascii -b",
                "Show ASCII table in decimal": "ascii -d",
                "Show ASCII table in hexadecimal": "ascii -x",
                "Show ASCII table in octal": "ascii -o",
                "Show options summary and complete ASCII table": "ascii"
            },
            "Explanation": "Show ASCII character aliases.",
            "More Information Link": "http://www.catb.org/~esr/ascii/"
        }
    },
    "asciinema": {
        "common": {
            "Examples": {
                "Associate the local install of `asciinema` with an asciinema.org account": "asciinema auth",
                "Make a new recording (once finished, user will be prompted to upload it or save it locally)": "asciinema rec",
                "Make a new recording and save it to a local file": "asciinema rec {{path/to/file}}.cast",
                "Make a new recording, limiting any idle time to at most 2.5 seconds": "asciinema rec -i {{2.5}}",
                "Print the full output of a locally saved recording": "asciinema cat {{path/to/file}}.cast",
                "Replay a terminal recording from a local file": "asciinema play {{path/to/file}}.cast",
                "Replay a terminal recording hosted on asciinema.org": "asciinema play https://asciinema.org/a/{{cast_id}}",
                "Upload a locally saved terminal session to asciinema.org": "asciinema upload {{path/to/file}}.cast"
            },
            "Explanation": "Record and replay terminal sessions, and optionally share them on asciinema.org.",
            "More Information Link": "https://asciinema.org/"
        }
    },
    "asdf": {
        "common": {
            "Examples": {
                "Install a plugin": "asdf plugin-add {{name}}",
                "Install a specific version of a package": "asdf install {{name}} {{version}}",
                "List all available plugins": "asdf plugin-list-all",
                "List all available versions for a package": "asdf list-all {{name}}",
                "Set global version for a package": "asdf global {{name}} {{version}}",
                "Set local version for a package": "asdf local {{name}} {{version}}"
            },
            "Explanation": "Command line interface for managing versions of different packages.",
            "More Information Link": "https://asdf-vm.com"
        }
    },
    "aspell": {
        "linux": {
            "Examples": {
                "List misspelled words from standard input": "cat {{file}} | aspell list",
                "List misspelled words from standard input and ignore words from personal word list": "cat {{file}} | aspell --personal={{personal-word-list.pws}} {{list}}",
                "Run aspell with different language (takes two letter ISO 639 language code)": "aspell --lang={{cs}}",
                "Show available dictionary languages": "aspell dicts",
                "Spell check a single file": "aspell check {{path/to/file}}"
            },
            "Explanation": "Interactive spell checker.",
            "More Information Link": ""
        }
    },
    "asr": {
        "osx": {
            "Examples": {
                "Clone volumes without the use of an intermediate disk image": "sudo asr restore --source {{path/to/volume}} --target {{path/to/cloned_volume}}",
                "Erase the target volume before restoring": "sudo asr restore --source {{image_name}}.dmg --target {{path/to/volume}} --erase",
                "Restore a disk image to a target volume": "sudo asr restore --source {{image_name}}.dmg --target {{path/to/volume}}",
                "Skip verification after restoring": "sudo asr restore --source {{image_name}}.dmg --target {{path/to/volume}} --noverify"
            },
            "Explanation": "Restore (copy) a disk image onto a volume.\nThe command name stands for Apple Software Restore.",
            "More Information Link": ""
        }
    },
    "assimp": {
        "common": {
            "Examples": {
                "Convert a file to one of the supported output formats, using the default parameters": "assimp export {{input_file.stl}} {{output_file.obj}}",
                "Convert a file using custom parameters (the dox_cmd.h file in assimp's source code lists available parameters)": "assimp export {{input_file.stl}} {{output_file.obj}} {{parameters}}",
                "Display a summary of a 3D file's contents": "assimp info {{path/to/file}}",
                "Get help on a specific subcommand (e.g. the parameters specific to it)": "assimp {{subcommand}} --help",
                "List all supported export formats": "assimp listexport",
                "List all supported import formats": "assimp listext",
                "List all supported subcommands (\"verbs\")": "assimp help"
            },
            "Explanation": "Command-line client for the Open Asset Import Library.\nSupports loading of 40+ 3D file formats, and exporting to several popular 3D formats.",
            "More Information Link": "http://www.assimp.org/"
        }
    },
    "assoc": {
        "windows": {
            "Examples": {
                "Display all associated filetypes": "assoc",
                "Display the associated filetype for a specific extension": "assoc {{.txt}}",
                "Modify the associated filetype for a specific extension": "assoc {{.txt}}={{txtfile}}"
            },
            "Explanation": "Display or modify file extension associations.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/assoc"
        }
    },
    "asterisk": {
        "linux": {
            "Examples": {
                "Reload chan_SIP configuration": "asterisk -r -x \"sip reload\"",
                "Show active calls and channels": "asterisk -r -x \"core show channels\"",
                "Show chan_SIP clients (phones)": "asterisk -r -x \"sip show peers\"",
                "Show voicemail mailboxes": "asterisk -r -x \"voicemail show users\"",
                "Terminate a channel": "asterisk -r -x \"hangup request {{channel_ID}}\"",
                "[R]econnect to a running server, and turn on logging 3 levels of [v]erbosity": "asterisk -r -vvv",
                "[R]econnect to a running server, run a single command, and return": "asterisk -r -x \"{{command}}\""
            },
            "Explanation": "Telephone and exchange (phone) server.\nUsed for running the server itself, and managing an already running instance.",
            "More Information Link": "https://wiki.asterisk.org/wiki/display/AST/Home"
        }
    },
    "astronomer": {
        "common": {
            "Examples": {
                "Scan a repository": "astronomer {{tldr-pages/tldr-node-client}}",
                "Scan a repository including comparative reports": "astronomer {{tldr-pages/tldr-node-client}} --verbose",
                "Scan the maximum amount of stars in the repository": "astronomer {{tldr-pages/tldr-node-client}} --stars {{50}}"
            },
            "Explanation": "Tool that detects illegitimate stars from bot accounts on GitHub projects.",
            "More Information Link": "https://github.com/Ullaakut/astronomer"
        }
    },
    "astyle": {
        "common": {
            "Examples": {
                "Apply a custom indent using spaces. Choose between 2 and 20 spaces": "astyle --indent=spaces={{number_of_spaces}} {{path/to/file}}",
                "Apply a custom indent using tabs. Choose between 2 and 20 tabs": "astyle --indent=tab={{number_of_tabs}} {{path/to/file}}",
                "Apply the allman style with broken braces": "astyle --style=allman {{path/to/file}}",
                "Apply the default style of 4 spaces per indent and no formatting changes": "astyle {{source_file}}",
                "Apply the java style with attached braces": "astyle --style=java {{path/to/file}}"
            },
            "Explanation": "Source code indenter, formatter, and beautifier for the C, C++, C# and Java programming languages.\nUpon running, a copy of the original file is created with an \".orig\" appended to the original file name.",
            "More Information Link": "http://astyle.sourceforge.net/"
        }
    },
    "at": {
        "common": {
            "Examples": {
                "Execute a command from standard input at 10:00 AM today": "echo \"{{./make_db_backup.sh}}\" | at 1000",
                "Execute commands from a given file next Tuesday": "at -f {{path/to/file}} 9:30 PM Tue",
                "Execute commands from standard input in 5 minutes (press `Ctrl + D` when done)": "at now + 5 minutes"
            },
            "Explanation": "Execute commands once at a later time.\nService atd (or atrun) should be running for the actual executions.",
            "More Information Link": ""
        },
        "linux": {
            "Examples": {
                "Display a system notification at 11pm on February 18th": "echo \"notify-send '{{Wake up!}}'\" | at {{11pm}} {{Feb 18}}",
                "Execute a script at the given time": "at {{hh:mm}} -f {{path/to/file}}",
                "Execute the commands and email the result using a local mailing program such as sendmail": "at {{hh:mm}} -m",
                "Open an `at` prompt to create a new set of scheduled commands, press `Ctrl + D` to save and exit": "at {{hh:mm}}"
            },
            "Explanation": "Executes commands at a specified time.",
            "More Information Link": ""
        }
    },
    "atom": {
        "common": {
            "Examples": {
                "Open Atom in safe mode (does not load any additional packages)": "atom --safe",
                "Open a file or directory": "atom {{path/to/file_or_directory}}",
                "Open a file or directory in a new window": "atom -n {{path/to/file_or_directory}}",
                "Open a file or directory in an existing window": "atom --add {{path/to/file_or_directory}}",
                "Prevent Atom from forking into the background, keeping Atom attached to the terminal": "atom --foreground",
                "Wait for Atom window to close before returning (useful for git commit editor)": "atom --wait"
            },
            "Explanation": "A cross-platform pluggable text editor.\nPlugins are managed by `apm`.",
            "More Information Link": "https://atom.io/"
        }
    },
    "atoum": {
        "common": {
            "Examples": {
                "Initialise a configuration file": "atoum --init",
                "Load a custom bootstrap file before running tests": "atoum --bootstrap-file {{path/to/file}}",
                "Run a specific directory of tests": "atoum -d {{path/to/directory}}",
                "Run a specific test file": "atoum -f {{path/to/file}}",
                "Run all tests": "atoum",
                "Run all tests under a specific namespace": "atoum -ns {{namespace}}",
                "Run all tests with a specific tag": "atoum -t {{tag}}",
                "Run tests using the specified configuration file": "atoum -c {{path/to/file}}"
            },
            "Explanation": "A simple, modern and intuitive unit testing framework for PHP.",
            "More Information Link": "http://atoum.org"
        }
    },
    "atq": {
        "common": {
            "Examples": {
                "Show jobs from queue named 'a' (queues have single-character names)": "atq -q {{a}}",
                "Show jobs of all users (run as super user)": "sudo atq",
                "Show the current user's scheduled jobs": "atq"
            },
            "Explanation": "Show jobs scheduled by `at` or `batch` commands.",
            "More Information Link": ""
        }
    },
    "atrm": {
        "common": {
            "Examples": {
                "Remove job number 10": "atrm {{10}}",
                "Remove many jobs, separated by spaces": "atrm {{15}} {{17}} {{22}}"
            },
            "Explanation": "Remove jobs scheduled by `at` or `batch` commands.\nTo find job numbers use `atq`.",
            "More Information Link": ""
        }
    },
    "attrib": {
        "windows": {
            "Examples": {
                "Add the hidden attribute to a directory": "attrib +H {{path\\to\\directory}}",
                "Add the read-only attribute to a file": "attrib +R {{document.txt}}",
                "Display the attributes of the files and directories in the current directory and sub-directories": "attrib /S /D",
                "Display the attributes of the files in the current directory": "attrib",
                "Display the attributes of the files in the current directory and sub-directories": "attrib /S",
                "Remove the system and hidden attributes of a file": "attrib -S -H {{document.txt}}"
            },
            "Explanation": "Displays or changes file and directory attributes.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/attrib"
        }
    },
    "auracle": {
        "linux": {
            "Examples": {
                "Display AUR packages that match a regular expression": "auracle search '{{regex}}'",
                "Display package information for a space-separated list of AUR packages": "auracle info {{package1}} {{package2}}",
                "Display the `PKGBUILD` file (build information) for a space-separated list of AUR packages": "auracle show {{package1}} {{package2}}",
                "Display updates for installed AUR packages": "auracle outdated"
            },
            "Explanation": "Command line tool used to interact with Arch Linux's User Repository, commonly referred to as the AUR.",
            "More Information Link": "https://github.com/falconindy/auracle"
        }
    },
    "authconfig": {
        "linux": {
            "Examples": {
                "Configure the server to use a different password hashing algorithm": "authconfig --update --passalgo={{algorithm}}",
                "Disable LDAP authentication": "authconfig --update --disableldapauth",
                "Display the current configuration (or dry run)": "authconfig --test",
                "Enable Kerberos": "authconfig --update --enablekrb5",
                "Enable LDAP authentication": "authconfig --update --enableldapauth",
                "Enable Network Information Service (NIS)": "authconfig --update --enablenis",
                "Enable Winbind (Active Directory) authentication": "authconfig --update --enablewinbindauth",
                "Enable local authorization": "authconfig --update --enablelocauthorize"
            },
            "Explanation": "A CLI interface for configuring system authentication resources.",
            "More Information Link": ""
        }
    },
    "autoflake": {
        "common": {
            "Examples": {
                "Remove unused imports from multiple files and display the diffs": "autoflake --remove-all-unused-imports {{file1.py}} {{file2.py}} {{file3.py}}",
                "Remove unused variables from a file, overwriting the file": "autoflake --remove-unused-variables --in-place {{file.py}}",
                "Remove unused variables from a single file and display the diff": "autoflake --remove-unused-variables {{file.py}}",
                "Remove unused variables recursively from all files in a directory, overwriting each file": "autoflake --remove-unused-variables --in-place --recursive {{path/to/directory}}"
            },
            "Explanation": "A tool to remove unused imports and variables from Python code.",
            "More Information Link": "https://github.com/myint/autoflake"
        }
    },
    "autojump": {
        "common": {
            "Examples": {
                "Jump to a directory that contains the given pattern": "j {{pattern}}",
                "Jump to a sub-directory (child) of the current directory that contains the given pattern": "jc {{pattern}}",
                "Open a directory that contains the given pattern in the operating system file manager": "jo {{pattern}}",
                "Remove non-existing directories from the autojump database": "j --purge",
                "Show the entries in the autojump database": "j -s"
            },
            "Explanation": "Quickly jump among the directories you visit the most.\nAliases like j or jc are provided for even less typing.",
            "More Information Link": "https://github.com/wting/autojump"
        }
    },
    "autorandr": {
        "linux": {
            "Examples": {
                "Change the profile": "autorandr -l {{profile_name}}",
                "Save the current screen layout": "autorandr -s {{profile_name}}",
                "Set the default profile": "autorandr -d {{profile_name}}",
                "Show the saved profiles": "autorandr"
            },
            "Explanation": "Automatically change screen layout.",
            "More Information Link": ""
        }
    },
    "autossh": {
        "common": {
            "Examples": {
                "Fork before executing ssh (runs in the background) and don't open a remote shell": "autossh -f -M {{monitor_port}} -N {{ssh_command}}",
                "Open an SSH session which forwards a local port to a remote one, restarting if necessary": "autossh -M {{monitor_port}} -L {{local_port}}:localhost:{{remote_port}} {{user}}@{{host}}",
                "Open an SSH session, restarting when a monitoring port fails return data": "autossh -M {{monitor_port}} {{ssh_command}}",
                "Run autossh in the background with debug output logged to a file and ssh verbose output logged to a second file": "AUTOSSH_DEBUG=1 AUTOSSH_LOGFILE={{log_file}} autossh -f -M {{monitor_port}} -v -E {{ssh_log_file}} {{ssh_command}}",
                "Run autossh in the background, with no monitoring port, instead relying on SSH keep-alives every 10 seconds to detect failure": "autossh -f -M 0 -N -o \"ServerAliveInterval 10\" -o \"ServerAliveCountMax 3\" {{ssh_command}}",
                "Run autossh in the background, with no monitoring port, no remote shell, exiting if the port forward fails": "autossh -f -M 0 -N -o \"ServerAliveInterval 10\" -o \"ServerAliveCountMax 3\" -o ExitOnForwardFailure=yes -L {{local_port}}:localhost:{{remote_port}} {{user}}@{{host}}"
            },
            "Explanation": "Runs, monitors and restarts SSH connections.\nAuto-reconnects to keep port forwarding tunnels up. Accepts all ssh flags.",
            "More Information Link": "https://harding.motd.ca/autossh"
        }
    },
    "avahi-browse": {
        "linux": {
            "Examples": {
                "Limit the search to a particular domain": "avahi-browse --all --domain={{domain}}",
                "List all domains": "avahi-browse --browse-domains",
                "List all services available on the local network along with their addresses and ports while ignoring local ones": "avahi-browse --all --resolve --ignore-local"
            },
            "Explanation": "Displays services and hosts exposed on the local network via mDNS/DNS-SD.\nAvahi is compatible with Bonjour (Zeroconf) found in Apple devices.",
            "More Information Link": "https://www.avahi.org/"
        }
    },
    "avrdude": {
        "common": {
            "Examples": {
                "List available AVR devices": "avrdude -p \\?",
                "List available AVR programmers": "avrdude -c \\?",
                "Read AVR microcontroller": "avrdude -p {{AVR_device}} -c {{programmer}} -U flash:r:{{file.hex}}:i",
                "Write AVR microcontroller": "avrdude -p {{AVR_device}} -c {{programmer}} -U flash:w:{{file.hex}}"
            },
            "Explanation": "Driver program for Atmel AVR microcontrollers programming.",
            "More Information Link": "https://www.nongnu.org/avrdude/"
        }
    },
    "awk": {
        "common": {
            "Examples": {
                "Print all values starting from the third column": "awk '{for (i=3; i <= NF; i++) printf $i\"\"FS; print\"\"}' {{filename}}",
                "Print different values based on conditions": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
                "Print every third line starting from the first line": "awk 'NR%3==1' {{filename}}",
                "Print the fifth column (a.k.a. field) in a space-separated file": "awk '{print $5}' {{filename}}",
                "Print the last column of each line in a file, using a comma (instead of space) as a field separator": "awk -F ',' '{print $NF}' {{filename}}",
                "Print the second column of the lines containing \"something\" in a space-separated file": "awk '/{{something}}/ {print $2}' {{filename}}",
                "Sum the values in the first column and pretty-print the values and then the total": "awk '{s+=$1; print $1} END {print \"--------\"; print s}' {{filename}}",
                "Sum the values in the first column of a file and print the total": "awk '{s+=$1} END {print s}' {{filename}}"
            },
            "Explanation": "A versatile programming language for working on files.",
            "More Information Link": "https://github.com/onetrueawk/awk"
        }
    },
    "aws": {
        "common": {
            "Examples": {
                "Configure the AWS Command Line": "aws configure wizard",
                "Configure the AWS Command Line using SSO": "aws configure sso",
                "Generate a JSON CLI Skeleton (useful for infrastructure as code)": "aws dynamodb update-table --generate-cli-skeleton",
                "Get an interactive wizard for an AWS resource": "aws dynamodb wizard {{new-table}}",
                "Get the caller identity (used to troubleshoot permissions)": "aws sts get-caller-identity",
                "List AWS resources in a region and output in yaml": "aws dynamodb list-tables --region {{us-east-1}} --output yaml",
                "See help text for the AWS command": "aws {{command}} help",
                "Use auto prompt to help with a command": "aws iam create-user --cli-auto-prompt"
            },
            "Explanation": "The official CLI tool for Amazon Web Services.\nWizard, SSO, Resource Autocompletion, and YAML options are v2 only.",
            "More Information Link": "https://aws.amazon.com/cli"
        }
    },
    "aws ec2": {
        "common": {
            "Examples": {
                "Create a snapshot from an EC2 volume": "aws ec2 create-snapshot --volume-id {{volume_id}}",
                "Delete an EC2 volume": "aws ec2 delete-volume --volume-id {{volume_id}}",
                "Display information about a specific instance": "aws ec2 describe-instances --instance-ids {{instance_id}}",
                "Display information about all EC2 volumes": "aws ec2 describe-volumes",
                "Display information about all instances": "aws ec2 describe-instances",
                "List available AMIs (Amazon Machine Images)": "aws ec2 describe-images",
                "Show help for specific EC2 subcommand": "aws ec2 {{subcommand}} help",
                "Show list of all available EC2 commands": "aws ec2 help"
            },
            "Explanation": "CLI for AWS EC2.\nProvides secure and resizable computing capacity in the AWS cloud to enable faster development and deployment of applications.",
            "More Information Link": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/ec2/index.html"
        }
    },
    "aws glue": {
        "common": {
            "Examples": {
                "Create a dev endpoint": "aws glue create-dev-endpoint --endpoint-name {{name}} --role-arn {{role_arn_used_by_endpoint}}",
                "List jobs": "aws glue list-jobs",
                "List triggers": "aws glue list-triggers",
                "Start a job": "aws glue start-job-run --job-name {{job_name}}",
                "Start a trigger": "aws glue start-trigger --name {{trigger_name}}",
                "Start running a workflow": "aws glue start-workflow-run --name {{workflow_name}}"
            },
            "Explanation": "CLI for AWS Glue.\nDefines the public endpoint for the AWS Glue service.",
            "More Information Link": "https://docs.aws.amazon.com/cli/latest/reference/glue/index.html"
        }
    },
    "aws iam": {
        "common": {
            "Examples": {
                "Describe an IAM policy": "aws iam get-policy --policy-arn arn:aws:iam::aws:policy/{{policy_name}}",
                "Get users in a group": "aws iam get-group --group-name {{group_name}}",
                "List access keys": "aws iam list-access-keys",
                "List access keys for a specific user": "aws iam list-access-keys --user-name {{user_name}}",
                "List groups": "aws iam list-groups",
                "List policies": "aws iam list-policies",
                "List users": "aws iam list-users",
                "Show `aws iam` help page (including all available iam commands)": "aws iam help"
            },
            "Explanation": "CLI for AWS IAM.",
            "More Information Link": "https://awscli.amazonaws.com/v2/documentation/api/latest/reference/iam/index.html"
        }
    },
    "aws kinesis": {
        "common": {
            "Examples": {
                "Get a shard iterator for reading from the oldest message in a stream's shard": "aws kinesis get-shard-iterator --shard-iterator-type TRIM_HORIZON --stream-name {{name}} --shard-id {{id}}",
                "List the shards available on a stream": "aws kinesis list-shards --stream-name {{name}}",
                "Read records from a shard, using a shard iterator": "aws kinesis get-records --shard-iterator {{iterator}}",
                "Show all streams in the account": "aws kinesis list-streams",
                "Write a record to a Kinesis stream with inline base64 encoding": "aws kinesis put-record --stream-name {{name}} --partition-key {{key}} --data \"$( echo \"{{my raw message}}\" | base64 )\"",
                "Write one record to a Kinesis stream": "aws kinesis put-record --stream-name {{name}} --partition-key {{key}} --data {{base64_encoded_message}}"
            },
            "Explanation": "Official AWS CLI for Amazon Kinesis streaming data services.",
            "More Information Link": "https://docs.aws.amazon.com/cli/latest/reference/kinesis/index.html#cli-aws-kinesis"
        }
    },
    "aws quicksight": {
        "common": {
            "Examples": {
                "Display detailed information about a dataset": "aws quicksight describe-data-set --aws-account-id {{aws_account_id}} --data-set-id {{data_set_id}}",
                "Display who has access to the dataset and what kind of actions they can perform on the dataset": "aws quicksight describe-data-set-permissions --aws-account-id {{aws_account_id}} --data-set-id {{data_set_id}}",
                "List dashboards": "aws quicksight list-dashboards --aws-account-id {{aws_account_id}}",
                "List datasets": "aws quicksight list-data-sets --aws-account-id {{aws_account_id}}",
                "List groups": "aws quicksight list-groups --aws-account-id {{aws_account_id}} --namespace default",
                "List users": "aws quicksight list-users --aws-account-id {{aws_account_id}} --namespace default"
            },
            "Explanation": "CLI for AWS QuickSight.\nAccess QuickSight entities.",
            "More Information Link": "https://docs.aws.amazon.com/cli/latest/reference/quicksight/index.html"
        }
    },
    "aws s3": {
        "common": {
            "Examples": {
                "Preview changes only": "aws s3 {{any_command}} --dryrun",
                "Remove file from bucket": "aws s3 rm s3://{{bucket}}/{{path/to/file}}",
                "Show files in a bucket": "aws s3 ls {{bucket_name}}",
                "Sync files and directories from bucket to local": "aws s3 sync s3://{{bucket_name}} {{path/to/target}}",
                "Sync files and directories from local to bucket": "aws s3 sync {{path/to/files}} s3://{{bucket_name}}",
                "Sync files and directories with exclusions": "aws s3 sync {{path/to/files}} s3://{{bucket_name}} --exclude {{path/to/file}} --exclude {{path/to/directory}}/*"
            },
            "Explanation": "CLI for AWS S3 - provides storage through web services interfaces.",
            "More Information Link": "https://aws.amazon.com/cli"
        }
    },
    "aws-google-auth": {
        "common": {
            "Examples": {
                "Login [a]sking which role to use (in case of several available SAML roles)": "aws-google-auth -u {{example@example.com}} -I {{$GOOGLE_IDP_ID}} -S {{$GOOGLE_SP_ID}} -d {{3600}} -a",
                "Login with Google SSO using the IDP and SP identifiers and set the credentials duration to one hour": "aws-google-auth -u {{example@example.com}} -I {{$GOOGLE_IDP_ID}} -S {{$GOOGLE_SP_ID}} -d {{3600}}",
                "Resolve aliases for AWS accounts": "aws-google-auth -u {{example@example.com}} -I {{$GOOGLE_IDP_ID}} -S {{$GOOGLE_SP_ID}} -d {{3600}} -a --resolve-aliases",
                "Show help information": "aws-google-auth -h"
            },
            "Explanation": "Command line tool to acquire AWS temporary (STS) credentials using Google Apps as a federated (Single Sign-On) provider.",
            "More Information Link": "https://github.com/cevoaustralia/aws-google-auth"
        }
    },
    "aws-vault": {
        "common": {
            "Examples": {
                "Add credentials to the secure keystore": "aws-vault add {{profile}}",
                "Execute a command with AWS credentials in the environment": "aws-vault exec {{profile}} -- {{aws s3 ls}}",
                "List profiles, along with their credentials and sessions": "aws-vault list",
                "Open a browser window and login to the AWS Console": "aws-vault login {{profile}}",
                "Remove credentials from the secure keystore": "aws-vault remove {{profile}}",
                "Rotate AWS credentials": "aws-vault rotate {{profile}}"
            },
            "Explanation": "A vault for securely storing and accessing AWS credentials in development environments.",
            "More Information Link": "https://github.com/99designs/aws-vault"
        }
    },
    "awslogs": {
        "common": {
            "Examples": {
                "Get logs for any streams in the specified group between 1 and 2 hours ago": "awslogs get {{/var/log/syslog}} --start='{{2h ago}}' --end='{{1h ago}}'",
                "Get logs that match a specific Cloudwatch Logs Filter pattern": "awslogs get {{/aws/lambda/my_lambda_group}} --filter-pattern='{{ERROR}}'",
                "List existing streams for the specified group": "awslogs streams {{/var/log/syslog}}",
                "List log groups": "awslogs groups",
                "Watch logs for any streams in the specified group": "awslogs get {{/var/log/syslog}} ALL --watch"
            },
            "Explanation": "Queries groups, streams and events from Amazon Cloudwatch logs.",
            "More Information Link": "https://github.com/jorgebastida/awslogs"
        }
    },
    "axel": {
        "common": {
            "Examples": {
                "Download a URL to a file": "axel {{url}}",
                "Download and specify filename": "axel {{url}} -o {{filename}}",
                "Download with multiple connections": "axel -n {{connections_num}} {{url}}",
                "Limit download speed (bytes per second)": "axel -s {{speed}} {{url}}",
                "Search for mirrors": "axel -S {{mirrors_num}} {{url}}"
            },
            "Explanation": "Download accelerator.\nSupports HTTP, HTTPS, and FTP.",
            "More Information Link": "https://github.com/axel-download-accelerator/axel"
        }
    },
    "az": {
        "common": {
            "Examples": {
                "List all Azure Managed Disks": "az disk list",
                "List all Azure virtual machines": "az vm list",
                "Log in to Azure": "az login",
                "Manage Azure Kubernetes Services": "az aks",
                "Manage Azure Network resources": "az network",
                "Manage azure subscription information": "az account"
            },
            "Explanation": "The official CLI tool for Microsoft Azure.",
            "More Information Link": "https://docs.microsoft.com/cli/azure"
        }
    },
    "azcopy": {
        "windows": {
            "Examples": {
                "Copy a container directly between two Azure storage accounts": "azcopy copy 'https://{{source-storage-account-name}}.blob.core.windows.net/{{container-name}}' 'https://{{destination-storage-account-name}}.blob.core.windows.net/{{container-name}}'",
                "Display detailed usage information": "azcopy --help",
                "Login to an Azure Tenant": "azopy login",
                "Synchronize a local directory and delete files in the destination if they no longer exist in the source": "azcopy sync '{{path/to/source}}' 'https://{{storage-account-name}}.blob.core.windows.net/{{container-name}}' --recursive --delete-destination=true",
                "Upload a local file": "azcopy copy '{{path/to/source/file}}' 'https://{{storage-account-name}}.blob.core.windows.net/{{container-name}}/{{blob-name}}'",
                "Upload files with `.txt` and `.jpg` extensions": "azcopy copy '{{path/to/source}}' 'https://{{storage-account-name}}.blob.core.windows.net/{{container-name}}' --include-pattern '{{*.txt;*.jpg}}'"
            },
            "Explanation": "A file transfer tool for uploading to Azure Cloud Storage Accounts.",
            "More Information Link": "https://docs.microsoft.com/azure/storage/common/storage-use-azcopy-v10"
        }
    },
    "b2sum": {
        "common": {
            "Examples": {
                "Calculate BLAKE2 checksums for multiple files": "b2sum {{filename1}} {{filename2}}",
                "Calculate the BLAKE2 checksum for a file": "b2sum {{filename1}}",
                "Calculate the BLAKE2 checksum from `stdin`": "{{somecommand}} | b2sum",
                "Read a file of BLAKE2 sums and filenames and verify all files have matching checksums": "b2sum -c {{filename.b2}}"
            },
            "Explanation": "Calculate BLAKE2 cryptographic checksums.",
            "More Information Link": "https://blake2.net/#su"
        }
    },
    "babel": {
        "common": {
            "Examples": {
                "Choose a set of presets for output formatting": "babel {{path/to/input_file}} --presets {{presets}}",
                "Ignore specified comma-separated files in a directory": "babel {{path/to/input_directory}} --ignore {{ignored_files}}",
                "Output all available options": "babel --help",
                "Transpile a specified input file and output to `stdout`": "babel {{path/to/file}}",
                "Transpile a specified input file and output to a specific file": "babel {{path/to/input_file}} --out-file {{path/to/output_file}}",
                "Transpile a whole directory of files": "babel {{path/to/input_directory}}",
                "Transpile and output as minified JavaScript": "babel {{path/to/input_file}} --minified",
                "Transpile the input file every time it is changed": "babel {{path/to/input_file}} --watch"
            },
            "Explanation": "A transpiler which converts code from JavaScript ES6/ES7 syntax to ES5 syntax.",
            "More Information Link": "https://babeljs.io/"
        }
    },
    "badblocks": {
        "common": {
            "Examples": {
                "Search a disk for bad blocks by using a non-destructive read-only test": "sudo badblocks {{/dev/sda}}",
                "Search an unmounted disk for bad blocks with a destructive write test": "sudo badblocks -w {{/dev/sda}}",
                "Search an unmounted disk for bad blocks with a destructive write test and show verbose status": "sudo badblocks -svw {{/dev/sda}}",
                "Search an unmounted disk for bad blocks with a non-destructive read-write test": "sudo badblocks -n {{/dev/sda}}",
                "Search an unmounted disk in destructive mode and output found blocks to a file": "sudo badblocks -o {{/path/to/file}} -w {{/dev/sda}}",
                "Search an unmounted disk in destructive mode with improved speed using 4K block size and 64K block count": "sudo badblocks -w -b {{4096}} -c {{65536}} {{/dev/sda}}"
            },
            "Explanation": "Search a device for bad blocks.\nSome usages of badblocks can cause destructive actions, such as erasing all the data on a disk, including the partition table.",
            "More Information Link": ""
        }
    },
    "balena": {
        "common": {
            "Examples": {
                "Create a balenaCloud or openBalena application": "balena app create {{app_name}}",
                "Flash a balenaOS image to a local drive": "balena local flash {{path/to/balenaos.img}} --drive {{drive_location}}",
                "List all balenaCloud or openBalena applications within the account": "balena apps",
                "List all devices associated with the balenaCloud or openBalena account": "balena devices",
                "Login to the balenaCloud account": "balena login"
            },
            "Explanation": "Interact with the balenaCloud, openBalena and the balena API from the command line.",
            "More Information Link": "https://www.balena.io/docs/reference/cli/"
        }
    },
    "banner": {
        "common": {
            "Examples": {
                "Print the text message as a banner with a width of 50 characters": "banner -w {{50}} \"{{Hello World}}\"",
                "Print the text message as a large banner (quotes are optional)": "banner \"{{Hello World}}\"",
                "Read text from `stdin`": "banner"
            },
            "Explanation": "Print the given argument as a large ASCII art.",
            "More Information Link": ""
        }
    },
    "base32": {
        "common": {
            "Examples": {
                "Decode a file": "base32 -d {{filename}}",
                "Decode from `stdin`": "{{somecommand}} | base32 -d",
                "Encode a file": "base32 {{filename}}",
                "Encode from `stdin`": "{{somecommand}} | base32"
            },
            "Explanation": "Encode or decode file or standard input to/from Base32, to standard output.",
            "More Information Link": ""
        }
    },
    "base64": {
        "common": {
            "Examples": {
                "Decode a file": "base64 -d {{filename}}",
                "Decode from `stdin`": "{{somecommand}} | base64 -d",
                "Encode a file": "base64 {{filename}}",
                "Encode from `stdin`": "{{somecommand}} | base64"
            },
            "Explanation": "Encode or decode file or standard input to/from Base64, to standard output.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Decode a file": "base64 -D -i {{base64_file}}",
                "Decode from `stdin`": "echo -n {{base64_text}} | base64 -D",
                "Encode a file": "base64 -i {{plain_file}}",
                "Encode from `stdin`": "echo -n {{plain_text}} | base64"
            },
            "Explanation": "Encode and decode using Base64 representation.",
            "More Information Link": ""
        }
    },
    "basename": {
        "common": {
            "Examples": {
                "Show only the file name from a path": "basename {{path/to/file}}",
                "Show only the file name from a path, with a suffix removed": "basename {{path/to/file}} {{suffix}}",
                "Show only the rightmost directory name from a path": "basename {{path/to/directory/}}"
            },
            "Explanation": "Remove leading directory portions from a path.",
            "More Information Link": ""
        }
    },
    "bash": {
        "common": {
            "Examples": {
                "Execute a command": "bash -c \"{{command}}\"",
                "Print the version information of bash (use `echo $BASH_VERSION` to show just the version without license information)": "bash --version",
                "Run commands from `stdin`": "bash -s",
                "Run commands from a file": "bash {{file.sh}}",
                "Run commands from a file, logging all commands executed to the terminal": "bash -x {{file.sh}}",
                "Run commands from a file, stopping at the first error": "bash -e {{file.sh}}",
                "Start interactive shell": "bash"
            },
            "Explanation": "Bourne-Again SHell.\n`sh`-compatible command line interpreter.",
            "More Information Link": "https://gnu.org/software/bash"
        }
    },
    "bashmarks": {
        "common": {
            "Examples": {
                "Delete a bookmark": "d {{bookmark_name}}",
                "Go to a bookmarked directory": "g {{bookmark_name}}",
                "List available bookmarks": "l",
                "Print a bookmarked directory's contents": "p {{bookmark_name}}",
                "Save the current directory as \"bookmark_name\"": "s {{bookmark_name}}"
            },
            "Explanation": "Save and jump to commonly used directories using 1 character commands.",
            "More Information Link": "https://github.com/huyng/bashmarks"
        }
    },
    "bat": {
        "common": {
            "Examples": {
                "Append several files into the target file": "bat {{file1}} {{file2}} >> {{target_file}}",
                "Concatenate several files into the target file": "bat {{file1}} {{file2}} > {{target_file}}",
                "Display all supported languages": "bat --list-languages",
                "Number all output lines": "bat -n {{file}}",
                "Print the contents of a file to the standard output": "bat {{file}}",
                "Syntax highlight a json file": "bat --language json {{file.json}}"
            },
            "Explanation": "Print and concatenate files.\nA `cat` clone with syntax highlighting and Git integration.",
            "More Information Link": "https://github.com/sharkdp/bat"
        }
    },
    "batch": {
        "common": {
            "Examples": {
                "Execute a command from standard input": "echo \"{{./make_db_backup.sh}}\" | batch",
                "Execute commands from a given file": "batch -f {{path/to/file}}",
                "Execute commands from standard input (press `Ctrl + D` when done)": "batch"
            },
            "Explanation": "Execute commands at a later time when the system load levels permit.\nService atd (or atrun) should be running for the actual executions.",
            "More Information Link": ""
        }
    },
    "bc": {
        "common": {
            "Examples": {
                "Calculate expression and force number of decimal places to 10": "bc <<< \"scale=10; 5 / 3\"",
                "Calculate expression with sine and cosine using mathlib": "bc -l <<< \"s(1) + c(1)\"",
                "Calculate the result of an expression": "bc <<< \"(1 + 2) * 2 ^ 2\"",
                "Run calculator in interactive mode using the standard math library": "bc -l"
            },
            "Explanation": "Calculator.",
            "More Information Link": ""
        }
    },
    "beanstalkd": {
        "common": {
            "Examples": {
                "Persist work queues by saving them to disk": "beanstalkd -b {{path/to/persistence_directory}}",
                "Start beanstalkd listening on a custom port and address": "beanstalkd -l {{ip_address}} -p {{port_number}}",
                "Start beanstalkd, listening on port 11300": "beanstalkd",
                "Sync to the persistence directory every 500 milliseconds": "beanstalkd -b {{path/to/persistence_directory}} -f {{500}}"
            },
            "Explanation": "A simple and generic work-queue server.",
            "More Information Link": "https://beanstalkd.github.io/"
        }
    },
    "bedtools": {
        "common": {
            "Examples": {
                "Convert bam-formatted file to a bed-formatted one": "bedtools bamtobed -i {{path/to/file}}.bam > {{path/to/file}}.bed",
                "Find for all features in {{file_1}}.bed the closest one in {{file_2}}.bed and write their distance in an extra column (input files must be sorted)": "bedtools closest -a {{path/to/file_1}}.bed -b {{path/to/file_2}}.bed -d",
                "Group file {{path/to/file}} based on the first three and the fifth column and summarize the sixth column by summing it up": "bedtools groupby -i {{path/to/file}} -c 1-3,5 -g 6 -o sum",
                "Intersect two files with a left outer join, i.e. report each feature from {{file_1}} and NULL if no overlap with {{file_2}}": "bedtools intersect -a {{path/to/file_1}} -b {{path/to/file_2}} -lof > {{path/to/output_file}}",
                "Intersect two files with respect to the sequences' strand and save the result to {{path/to/output_file}}": "bedtools intersect -a {{path/to/file_1}} -b {{path/to/file_2}} -s > {{path/to/output_file}}",
                "Using more efficient algorithm to intersect two pre-sorted files": "bedtools intersect -a {{path/to/file_1}} -b {{path/to/file_2}} -sorted > {{path/to/output_file}}"
            },
            "Explanation": "A swiss-army knife of tools for genomic-analysis tasks.\nUsed to intersect, group, convert and count data in BAM, BED, GFF/GTF, VCF format.",
            "More Information Link": "https://bedtools.readthedocs.io/en/latest/"
        }
    },
    "beep": {
        "linux": {
            "Examples": {
                "Play a beep": "beep",
                "Play a beep at a specified frequency (Hz) and duration (milliseconds)": "beep -f {{frequency}} -l {{duration}}",
                "Play a beep that repeats": "beep -r {{repetitions}}",
                "Play each new frequency and duration as a distinct beep": "beep -f {{frequency}} -l {{duration}} -n -f {{frequency}} -l {{duration}}",
                "Play the C major scale": "beep -f 262 -n -f 294 -n -f 330 -n -f 349 -n -f 392 -n -f 440 -n -f 494 -n -f 523"
            },
            "Explanation": "A utility to beep the PC speaker.",
            "More Information Link": ""
        }
    },
    "behat": {
        "common": {
            "Examples": {
                "Display a list of definitions in your test suites": "behat --definitions",
                "Initialise a new Behat project": "behat --init",
                "Run all tests": "behat",
                "Run all tests from the specified suite": "behat --suite={{suite_name}}",
                "Run tests and output results to a file": "behat --out {{path/to/file}}",
                "Run tests with a specific output formatter": "behat --format {{pretty|progress}}"
            },
            "Explanation": "A PHP framework for Behaviour-Driven Development.",
            "More Information Link": "https://behat.org"
        }
    },
    "berks": {
        "common": {
            "Examples": {
                "Install cookbook dependencies into a local repo": "berks install",
                "Update a specific cookbook and its dependencies": "berks update {{cookbook}}",
                "Upload a cookbook to the Chef server": "berks upload {{cookbook}}",
                "View the dependencies of a cookbook": "berks contingent {{cookbook}}"
            },
            "Explanation": "Chef cookbook dependency manager.",
            "More Information Link": "https://docs.chef.io/berkshelf.html"
        }
    },
    "betterlockscreen": {
        "linux": {
            "Examples": {
                "Change the lock screen background": "betterlockscreen -u {{path/to/image.png}}",
                "Lock the screen": "betterlockscreen --lock",
                "Lock the screen, showing some custom text": "betterlockscreen -l pixel -t \"{{custom lock screen text}}\"",
                "Lock the screen, with a custom monitor off timeout in seconds": "betterlockscreen --off {{5}} -l"
            },
            "Explanation": "Simple, minimal lock screen.",
            "More Information Link": ""
        }
    },
    "bg": {
        "common": {
            "Examples": {
                "Resume a specific job (use `jobs -l` to get its ID) and run it in the background": "bg {{job_id}}",
                "Resume most recently suspended job and run it in the background": "bg"
            },
            "Explanation": "Resumes jobs that have been suspended (e.g. using `Ctrl + Z`), and keeps them running in the background.",
            "More Information Link": ""
        }
    },
    "binwalk": {
        "linux": {
            "Examples": {
                "Analyze the entropy of a binary, saving the plot with the same name as the binary and `.png` extension appended": "binwalk --entropy --save {{path/to/binary}}",
                "Combine entropy, signature and opcodes analysis in a single command": "binwalk --entropy --signature --opcodes {{path/to/binary}}",
                "Extract files from a binary with the specified file signature": "binwalk --dd '{{png image:png}}' {{path/to/binary}}",
                "Extract files from a binary, specifying the output directory": "binwalk --extract --directory {{output_directory}} {{path/to/binary}}",
                "Recursively extract files from a binary limiting the recursion depth to 2": "binwalk --extract --matryoshka --depth {{2}} {{path/to/binary}}",
                "Scan a binary file": "binwalk {{path/to/binary}}"
            },
            "Explanation": "Firmware Analysis Tool.",
            "More Information Link": "https://github.com/ReFirmLabs/binwalk"
        }
    },
    "bison": {
        "common": {
            "Examples": {
                "Be verbose when compiling": "bison --verbose",
                "Compile a bison definition file": "bison {{path/to/file.y}}",
                "Compile in debug mode, which causes the resulting parser to write additional information to the standard output": "bison --debug {{path/to/file.y}}",
                "Specify the output filename": "bison --output {{path/to/output.c}} {{path/to/file.y}}"
            },
            "Explanation": "GNU parser generator.",
            "More Information Link": "https://www.gnu.org/software/bison/"
        }
    },
    "bitcoin-cli": {
        "common": {
            "Examples": {
                "Export the wallet information to a text file": "bitcoin-cli dumpwallet \"{{path/to/file}}\"",
                "Generate one or more blocks": "bitcoin-cli generate {{num_blocks}}",
                "List all outputs from previous transactions available to fund outgoing transactions": "bitcoin-cli listunspent",
                "Print high-level information about the wallet": "bitcoin-cli getwalletinfo",
                "Send a transaction to a given address": "bitcoin-cli sendtoaddress \"{{address}}\" {{amount}}"
            },
            "Explanation": "Command-line client to interact with the Bitcoin daemon via RPC calls.\nUses the configuration defined in `bitcoin.conf`.",
            "More Information Link": "https://en.bitcoin.it/wiki/Running_Bitcoin#Command-line_arguments"
        }
    },
    "bitwise": {
        "linux": {
            "Examples": {
                "Convert a C-style calculation": "bitwise  \"{{0x123 + 0x20 - 30 / 50}}\"",
                "Convert from decimal": "bitwise {{12345}}",
                "Convert from hexadecimal": "bitwise {{0x563d}}",
                "Run using interactive mode": "bitwise"
            },
            "Explanation": "Multi base interactive calculator supporting dynamic base conversion and bit manipulation.",
            "More Information Link": "https://github.com/mellowcandle/bitwise"
        }
    },
    "black": {
        "common": {
            "Examples": {
                "Auto-format a file or directory emitting exclusively error messages to stderr": "black --quiet {{path/to/file_or_directory}}",
                "Auto-format a file or entire directory": "black {{path/to/file_or_directory}}",
                "Format the code passed in as a string": "black -c {{path/to/file_or_directory}}",
                "Output a diff for each file on stdout": "black --diff {{path/to/file_or_directory}}",
                "Return the status without writing the files back": "black --check {{path/to/file_or_directory}}"
            },
            "Explanation": "A Python auto code formatter.",
            "More Information Link": "https://github.com/psf/black"
        }
    },
    "blackfire": {
        "common": {
            "Examples": {
                "Initialise and configure the Blackfire client": "blackfire config",
                "Launch the Blackfire agent": "blackfire agent",
                "Launch the Blackfire agent on a specific socket": "blackfire agent --socket=\"{{tcp://127.0.0.1:8307}}\"",
                "Run the profiler and collect 10 samples": "blackfire --samples={{10}} run {{php path/to/file.php}}",
                "Run the profiler and output results as JSON": "blackfire --json run {{php path/to/file.php}}",
                "Run the profiler on a specific program": "blackfire run {{php path/to/file.php}}",
                "Upload a profiler file to the Blackfire web service": "blackfire upload {{path/to/file}}",
                "View the status of profiles on the Blackfire web service": "blackfire status"
            },
            "Explanation": "A command line profiling tool for PHP.",
            "More Information Link": "https://blackfire.io"
        }
    },
    "blender": {
        "common": {
            "Examples": {
                "Render all frames of an animation in the background, without loading the UI (output is saved to `/tmp`)": "blender -b {{filename}}.blend -a",
                "Render an animation at a specific resolution, by passing a Python expression": "blender -b {{filename}}.blend --python-expr '{{import bpy; bpy.data.scenes[0].render.resolution_percentage = 25}}' -a",
                "Render an animation using a specific image naming pattern, in a path relative (`//`) to the .blend file": "blender -b {{filename}}.blend -o //{{render/frame_###.png}} -a",
                "Render the 10th frame of an animation as a single image, saved to an existing directory (absolute path)": "blender -b {{filename}}.blend -o {{/path/to/output_directory}} -f {{10}}",
                "Render the animation of a specific scene, starting at frame 10 and ending at frame 500": "blender -b {{filename}}.blend -S {{scene_name}} -s {{10}} -e {{500}} -a",
                "Render the second last frame in an animation as a JPEG image, saved to an existing directory (relative path)": "blender -b {{filename}}.blend -o //{{output_directory}} -F {{JPEG}} -f {{-2}}",
                "Start an interactive Blender session in the terminal with a python console (do `import bpy` after starting)": "blender -b --python-console"
            },
            "Explanation": "Command-line interface to the Blender 3D computer graphics application.\nArguments are executed in the order they are given.",
            "More Information Link": "https://docs.blender.org/manual/en/latest/render/workflows/command_line.html"
        }
    },
    "bless": {
        "osx": {
            "Examples": {
                "FOLDER MODE: bless a volume with only Mac OS X or Darwin, and create the BootX and boot.efi files as needed": "bless --folder {{/Volumes/Mac OS X/System/Library/CoreServices}} --bootinfo --bootefi",
                "INFO MODE: gather information about the currently selected volume (as determined by the firmware), suitable for piping to a program capable of parsing Property Lists": "bless --info --plist",
                "MOUNT MODE: set a volume containing either Mac OS 9 and Mac OS X to be the active volume": "bless --mount {{/Volumes/Mac OS}} --setBoot",
                "NETBOOT MODE: set the system to NetBoot and broadcast for an available server": "bless --netboot --server {{bsdp://255.255.255.255}}"
            },
            "Explanation": "Set volume bootability and startup disk options.",
            "More Information Link": ""
        }
    },
    "blkdiscard": {
        "linux": {
            "Examples": {
                "Discard all sectors on a device, removing all data": "blkdiscard /dev/{{device}}",
                "Discard the first 100MB of a device": "blkdiscard --length {{100MB}} /dev/{{device}}",
                "Securely discard all blocks on a device, removing all data": "blkdiscard --secure /dev/{{device}}"
            },
            "Explanation": "Discards device sectors on storage devices. Useful for SSDs.",
            "More Information Link": ""
        }
    },
    "blkid": {
        "linux": {
            "Examples": {
                "List all partitions": "sudo blkid",
                "List all partitions in a table, including current mountpoints": "sudo blkid -o list"
            },
            "Explanation": "Lists all recognized partitions and their Universally Unique Identifier (UUID).",
            "More Information Link": ""
        }
    },
    "bluetoothctl": {
        "linux": {
            "Examples": {
                "Connect a paired device": "bluetoothctl -- connect {{mac_address}}",
                "Disconnect a paired device": "bluetoothctl -- disconnect {{mac_address}}",
                "Enter the bluetoothctl shell": "bluetoothctl",
                "List devices": "bluetoothctl -- devices",
                "Pair a device": "bluetoothctl -- pair {{mac_address}}",
                "Remove a device": "bluetoothctl -- remove {{mac_address}}"
            },
            "Explanation": "Handling bluetooth devices from the shell.",
            "More Information Link": ""
        }
    },
    "bmaptool": {
        "common": {
            "Examples": {
                "Copy a compressed image file into sdb": "bmaptool copy --bmap {{blockmap.bmap}} {{source.img.gz}} {{/dev/sdb}}",
                "Copy an image file into sdb": "bmaptool copy --bmap {{blockmap.bmap}} {{source.img}} {{/dev/sdb}}",
                "Copy an image file into sdb without using a blockmap": "bmaptool copy --nobmap {{source.img}} {{/dev/sdb}}",
                "Create a blockmap from image file": "bmaptool create -o {{blockmap.bmap}} {{source.img}}"
            },
            "Explanation": "Create or copy block maps intelligently (designed to be faster than `cp` or `dd`).",
            "More Information Link": "https://source.tizen.org/documentation/reference/bmaptool"
        }
    },
    "bmon": {
        "linux": {
            "Examples": {
                "Display data transfer rates in bits per second": "bmon -b",
                "Display the list of all the interfaces": "bmon -a",
                "Set interval (in seconds) in which rate per counter is calculated": "bmon -R {{2.0}}",
                "Set policy to define which network interface(s) is/are displayed": "bmon -p {{interface_1,interface_2,interface_3}}"
            },
            "Explanation": "Monitor bandwidth and capture network related statistics.",
            "More Information Link": ""
        }
    },
    "boot": {
        "common": {
            "Examples": {
                "Build a single \"uberjar\"": "boot jar",
                "Build for development (if using the boot/new template)": "boot dev",
                "Build for production (if using the boot/new template)": "boot prod",
                "Generate scaffolding for a new project based on a template": "boot --dependencies boot/new new --template {{template_name}} --name {{project_name}}",
                "Learn about a command": "boot cljs --help",
                "Start a REPL session either with the project or standalone": "boot repl"
            },
            "Explanation": "Build tooling for the Clojure programming language.",
            "More Information Link": "https://github.com/boot-clj/boot"
        }
    },
    "borg": {
        "common": {
            "Examples": {
                "Backup a directory into the repository, creating an archive called \"Monday\"": "borg create --progress {{/path/to/repo_directory}}::{{Monday}} {{/path/to/source_directory}}",
                "Display help on creating archives": "borg create --help",
                "Extract a specific directory from the \"Monday\" archive in a remote repository, excluding all *.ext files": "borg extract {{user}}@{{host}}:{{/path/to/repo_directory}}::{{Monday}} {{path/to/target_directory}} --exclude '{{*.ext}}'",
                "Initialise a (local) repository": "borg init {{/path/to/repo_directory}}",
                "List all archives in a repository": "borg list {{/path/to/repo_directory}}",
                "Mount a repository as a FUSE filesystem": "borg mount {{/path/to/repo_directory}}::{{Monday}} {{/path/to/mountpoint}}",
                "Prune a repository by deleting all archives older than 7 days, listing changes": "borg prune --keep-within {{7d}} --list {{/path/to/repo_directory}}"
            },
            "Explanation": "Deduplicating backup tool.\nCreates local or remote backups that are mountable as filesystems.",
            "More Information Link": "https://borgbackup.readthedocs.io/en/stable/usage/general.html"
        }
    },
    "bosh": {
        "common": {
            "Examples": {
                "Create local alias for director": "bosh alias-env {{environment_name}} -e {{ip_address|url}} --ca-cert {{ca_certificate}}",
                "List deployments": "bosh -e {{environment}} deployments",
                "List environment virtual machines": "bosh -e {{environment}} vms -d {{deployment}}",
                "List environments": "bosh environments",
                "Login to the director": "bosh login -e {{environment}}",
                "Show current cloud config": "bosh -e {{environment}} cloud-config",
                "Ssh into virtual machine": "bosh -e {{environment}} ssh {{virtual_machine}} -d {{deployment}}",
                "Upload stemcell": "bosh -e {{environment}} upload-stemcell {{stemcell_file|url}}"
            },
            "Explanation": "Command line tool to deploy and manage the bosh director.",
            "More Information Link": "https://bosh.io/docs/cli-v2/"
        }
    },
    "bower": {
        "common": {
            "Examples": {
                "Create a bower.json file for your package": "bower init",
                "Display help information about a bower command": "bower help {{command}}",
                "Install a project's dependencies, listed in its bower.json": "bower install",
                "Install a specific dependency version, and add it to bower.json": "bower install {{local_name}}={{package}}#{{version}} --save",
                "Install one or more packages to the bower_components directory": "bower install {{package}} {{package}}",
                "List local packages and possible updates": "bower list",
                "Uninstall packages locally from the bower_components directory": "bower uninstall {{package}} {{package}}"
            },
            "Explanation": "A package manager optimized for front-end web development.\nA package can be a GitHub user/repo shorthand, a Git endpoint, a URL or a registered package.",
            "More Information Link": "https://bower.io/"
        }
    },
    "box": {
        "common": {
            "Examples": {
                "Compile a new Phar file": "box compile",
                "Compile a new Phar file using a specific config file": "box compile -c {{path/to/config}}",
                "Display all available commands and options": "box help",
                "Display information about a specific Phar file": "box info {{path/to/phar_file}}",
                "Display information about the PHAR PHP extension": "box info",
                "Validate the first found config file in the working directory": "box validate",
                "Verify the signature of a specific Phar file": "box verify {{path/to/phar_file}}"
            },
            "Explanation": "A PHP application for building and managing Phars.",
            "More Information Link": "https://github.com/box-project/box"
        }
    },
    "bpftrace": {
        "linux": {
            "Examples": {
                "Display bpftrace version": "bpftrace -V",
                "Do a dry run and display the output in eBPF format": "sudo bpftrace -d -e '{{one_line_program}}'",
                "List all available probes": "sudo bpftrace -l",
                "Run a one-liner program (e.g syscall count by program)": "sudo bpftrace -e '{{tracepoint:raw_syscalls:sys_enter { @[comm] = count(); }}}'",
                "Run a program from a file": "sudo bpftrace {{path/to/file}}",
                "Trace a program by PID": "sudo bpftrace -e '{{tracepoint:raw_syscalls:sys_enter /pid == 123/ { @[comm] = count(); }}}'"
            },
            "Explanation": "High-level tracing language for Linux eBPF.",
            "More Information Link": "https://github.com/iovisor/bpftrace"
        }
    },
    "bpytop": {
        "linux": {
            "Examples": {
                "Change settings": "M",
                "Search for running programs or processes": "f",
                "Show version": "bpytop -v",
                "Start bpytop": "bpytop",
                "Start in minimal mode without memory and networking boxes": "bpytop -m",
                "Toggle minimal mode": "m"
            },
            "Explanation": "Display dynamic real-time information about running processes with graphs. Similar to `gtop` and `htop`.",
            "More Information Link": "https://github.com/aristocratos/bpytop"
        }
    },
    "brctl": {
        "linux": {
            "Examples": {
                "Add an interface to an existing bridge": "sudo brctl addif {{bridge_name}} {{interface_name}}",
                "Create a new ethernet bridge interface": "sudo brctl add {{bridge_name}}",
                "Delete an existing ethernet bridge interface": "sudo brctl del {{bridge_name}}",
                "Remove an interface from an existing bridge": "sudo brctl delif {{bridge_name}} {{interface_name}}",
                "Show a list with information about currently existing ethernet bridges": "sudo brctl show"
            },
            "Explanation": "Ethernet bridge administration.",
            "More Information Link": ""
        }
    },
    "brew": {
        "linux": {
            "Examples": {
                "Check the local Linuxbrew installation for potential problems": "brew doctor",
                "Display information about a formula (version, installation path, dependencies, etc.)": "brew info {{formula}}",
                "Fetch the newest version of Linuxbrew and of all formulae from GitHub": "brew update",
                "Install the latest stable version of a formula (use `--devel` for development versions)": "brew install {{formula}}",
                "List all installed formulae": "brew list",
                "Search for available formulas": "brew search {{text}}",
                "Show formulae that have a more recent version available": "brew outdated",
                "Upgrade an installed formula (if no formula name is given, all installed formulae are upgraded)": "brew upgrade {{formula}}"
            },
            "Explanation": "The Homebrew package manager for Linux.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Check the local Homebrew installation for potential problems": "brew doctor",
                "Display information about a formula (version, installation path, dependencies, etc.)": "brew info {{formula}}",
                "Fetch the newest version of Homebrew and of all formulae from GitHub": "brew update",
                "Install the latest stable version of a formula (use `--devel` for development versions)": "brew install {{formula}}",
                "List all installed formulae": "brew list",
                "List installed formulae that are not dependencies of another installed formula": "brew leaves",
                "Remove old versions of installed formulae (if no formula name is given, all installed formulae are processed)": "brew cleanup {{formula}}",
                "Search for available formulae and casks": "brew search {{text}}",
                "Upgrade an installed formula (if no formula name is given, all installed formulae are upgraded)": "brew upgrade {{formula}}"
            },
            "Explanation": "Package manager for macOS.",
            "More Information Link": "https://brew.sh"
        }
    },
    "brew bundle": {
        "osx": {
            "Examples": {
                "Check if there is anything to install or upgrade in the Brewfile": "brew bundle check",
                "Create a Brewfile from all installed packages": "brew bundle dump",
                "Install packages from a Brewfile at the current path": "brew bundle",
                "Install packages from a specific Brewfile at a specific path": "brew bundle --file={{path/to/file}}",
                "Output a list of all entries in the Brewfile": "brew bundle list --all",
                "Uninstall all formulae not listed in the Brewfile": "brew bundle cleanup --force"
            },
            "Explanation": "Bundler for Homebrew, Homebrew Cask and the Mac App Store.",
            "More Information Link": "https://github.com/Homebrew/homebrew-bundle"
        }
    },
    "brew cask": {
        "osx": {
            "Examples": {
                "Display information about a given cask": "brew cask info {{cask_name}}",
                "Install a cask": "brew cask install {{cask_name}}",
                "List all installed casks": "brew list --cask",
                "List installed casks that have newer versions available": "brew outdated --cask",
                "Search for formulas and casks": "brew search {{text}}",
                "Uninstall a cask": "brew cask uninstall {{cask_name}}",
                "Uninstall a cask and remove related settings and files": "brew cask zap {{cask_name}}",
                "Upgrade an installed cask (if no cask name is given, all installed casks are upgraded)": "brew upgrade --cask {{cask_name}}"
            },
            "Explanation": "Package manager for macOS applications distributed as binaries.",
            "More Information Link": "https://github.com/Homebrew/homebrew-cask"
        }
    },
    "brightness": {
        "osx": {
            "Examples": {
                "Set the brightness to 100%:": "brightness {{1}}",
                "Set the brightness to 50%:": "brightness {{0.5}}",
                "Show current brightness": "brightness -l"
            },
            "Explanation": "Get and set the brightness level of all internal and certain external displays.",
            "More Information Link": ""
        }
    },
    "browser-sync": {
        "common": {
            "Examples": {
                "Create configuration file": "browser-sync init",
                "Start a server from a specific directory": "browser-sync start --server {{path/to/directory}} --files {{path/to/directory}}",
                "Start a server from local directory, watching all css files in some directory": "browser-sync start --server --files '{{path/to/directory/*.css}}'",
                "Start browser-sync from config file": "browser-sync start --config {{config_file}}"
            },
            "Explanation": "Starts local web server that updates browser on file changes.",
            "More Information Link": "https://browsersync.io/docs/command-line"
        }
    },
    "btm": {
        "common": {
            "Examples": {
                "Enable basic mode, removing charts and condensing data (similar to `top`)": "btm --basic",
                "Refresh every 250 milliseconds and show the last 30 seconds in the charts": "btm --rate 250 --default_time_value 30000",
                "Show also battery charge and health status": "btm --battery",
                "Show the default layout (cpu, memory, temperatures, disk, network, and processes)": "btm",
                "Use big dots instead of small ones in charts": "btm --dot_marker"
            },
            "Explanation": "An alternative to `top`.\nAims to be lightweight, cross-platform and more graphical than `top`.",
            "More Information Link": "https://github.com/ClementTsang/bottom"
        }
    },
    "btrfs": {
        "linux": {
            "Examples": {
                "Create subvolume": "sudo btrfs subvolume create {{path/to/subvolume}}",
                "Enable quota": "sudo btrfs quota enable {{path/to/subvolume}}",
                "List subvolumes": "sudo btrfs subvolume list {{path/to/mount_point}}",
                "Show quota": "sudo btrfs qgroup show {{path/to/subvolume}}",
                "Show space usage information": "sudo btrfs filesystem df {{path/to/mount_point}}"
            },
            "Explanation": "A filesystem based on the copy-on-write (COW) principle for Linux.",
            "More Information Link": ""
        }
    },
    "buku": {
        "common": {
            "Examples": {
                "Add bookmark with tags \"search engine\" and \"privacy\"": "buku --add {{https://example.com}} {{search engine}}, {{privacy}}",
                "Delete a bookmark": "buku --delete {{bookmark_id}}",
                "Display all bookmarks matching \"keyword\" and with \"privacy\" tag": "buku {{keyword}} --stag {{privacy}}",
                "Open editor to edit a bookmark": "buku --write {{bookmark_id}}",
                "Remove \"search engine\" tag from a bookmark": "buku --update {{bookmark_id}} --tag {{-}} {{search engine}}"
            },
            "Explanation": "Command-line browser-independent bookmark manager.",
            "More Information Link": "https://github.com/jarun/Buku"
        }
    },
    "bundle": {
        "common": {
            "Examples": {
                "Create a new gem skeleton": "bundle gem {{gemname}}",
                "Install all gems defined in the `Gemfile` expected in the working directory": "bundle install",
                "List installed gems in the `Gemfile` with newer versions available": "bundle outdated",
                "Update all gems by the rules defined in the `Gemfile` and regenerate `Gemfile.lock`": "bundle update",
                "Update one or more specific gem(s) defined in the `Gemfile`": "bundle update {{gemname}} {{gemname}}",
                "Update one or more specific gems(s) defined in the `Gemfile` but only to the next patch version": "bundle update --patch {{gemname}} {{gemname}}",
                "Update update all gems within the given group in the `Gemfile`": "bundle update --group {{development}}"
            },
            "Explanation": "Dependency manager for the Ruby programming language.",
            "More Information Link": "https://bundler.io/man/bundle.1.html"
        }
    },
    "bup": {
        "common": {
            "Examples": {
                "Backup a directory to the repository": "bup -d {{path/to/repository}} save -n {{backup_name}} {{path/to/directory}}",
                "Initialize a backup repository in the specified local directory": "bup -d {{path/to/repository}} init",
                "Prepare a given directory before taking a backup": "bup -d {{path/to/repository}} index {{path/to/directory}}",
                "Restore a specific backup snapshot to a target directory": "bup -d {{path/to/repository}} restore -C {{path/to/target_directory}} {{backup_name}}",
                "Show the backup snapshots currently stored in the repository": "bup -d {{path/to/repository}} ls"
            },
            "Explanation": "Backup system based on the git packfile format, providing incremental saves and global deduplication.",
            "More Information Link": "https://github.com/bup/bup"
        }
    },
    "buzzphrase": {
        "common": {
            "Examples": {
                "Generate a string of three random phrases containing an adjective, a past tense verb and a plural noun": "buzzphrase",
                "Output 4 phrases formatted as present participle [V]erb + [a]djective + singular [n]oun + [f]inal": "buzzphrase {{4 '{V} {a} {n} {f}'}}",
                "Output a phrase formatted as [i]mperative verb + past tense [v]erb + [a]djective + plural [N]oun": "buzzphrase {{'{i} {v} {a} {N}'}}"
            },
            "Explanation": "Node.js command line tool to output a random buzzphrase.",
            "More Information Link": "https://github.com/atomantic/buzzphrase"
        }
    },
    "bw": {
        "common": {
            "Examples": {
                "Create a folder in Bitwarden vault": "{{echo -n '{\"name\":\"My Folder1\"}' | base64}} | bw create folder",
                "Display a particular item from Bitwarden vault": "bw get item {{github}}",
                "Log in to a Bitwarden user account": "bw login",
                "Log out of a Bitwarden user account": "bw logout",
                "Search and display items from Bitwarden vault": "bw list items --search {{github}}"
            },
            "Explanation": "A CLI to access and manage a Bitwarden vault.",
            "More Information Link": "https://help.bitwarden.com/article/cli/"
        }
    },
    "bzip2": {
        "common": {
            "Examples": {
                "Compress a file": "bzip2 {{path/to/file_to_compress}}",
                "Decompress a file": "bzip2 -d {{path/to/compressed_file.bz2}}",
                "Decompress a file to standard output": "bzip2 -dc {{path/to/compressed_file.bz2}}"
            },
            "Explanation": "A block-sorting file compressor.",
            "More Information Link": "http://bzip.org"
        }
    },
    "c99": {
        "common": {
            "Examples": {
                "Compile source file(s) and create an executable": "c99 {{file.c}}",
                "Compile source file(s) and create an executable with a custom name": "c99 -o {{executable_name}} {{file.c}}",
                "Compile source file(s) and create object file(s)": "c99 -c {{file.c}}",
                "Compile source file(s), link with object file(s), and create an executable": "c99 {{file.c}} {{file.o}}"
            },
            "Explanation": "Compiles C programs according to the ISO C standard.",
            "More Information Link": ""
        }
    },
    "cabal": {
        "common": {
            "Examples": {
                "Build the project in the current directory": "cabal build",
                "Create a new Haskell project in the current directory": "cabal init",
                "Download and install a package": "cabal install {{package_name}}",
                "Run tests of the project in the current directory": "cabal test",
                "Search and list packages from Hackage": "cabal list {{search_string}}",
                "Show information about a package": "cabal info {{package_name}}"
            },
            "Explanation": "Command line interface to the Haskell package infrastructure (Cabal).\nManage Haskell projects and Cabal packages from the Hackage package repository.",
            "More Information Link": "https://cabal.readthedocs.io/en/latest/intro.html"
        }
    },
    "caffeinate": {
        "osx": {
            "Examples": {
                "Prevent from sleeping for 1 hour (3600 seconds)": "caffeinate -u -t {{3600}}",
                "Prevent from sleeping until a command completes": "caffeinate -s {{command}}",
                "Prevent from sleeping until you type Ctrl-C": "caffeinate -i"
            },
            "Explanation": "Prevent mac from sleeping.",
            "More Information Link": ""
        }
    },
    "cake": {
        "common": {
            "Examples": {
                "Build the metadata cache": "cake schema_cache build --connection {{connection}}",
                "Clear a single cache table": "cake schema_cache clear {{table_name}}",
                "Clear configuration caches": "cake cache clear_all",
                "Clear the metadata cache": "cake schema_cache clear",
                "Display a list of available routes": "cake routes",
                "Display basic information about the current app and available commands": "cake",
                "Start a REPL interactive shell instance": "cake console",
                "Start a development web server (defaults to port 8765)": "cake server"
            },
            "Explanation": "The command line processor for the CakePHP framework.",
            "More Information Link": "https://cakephp.org"
        }
    },
    "cal": {
        "linux": {
            "Examples": {
                "Display a calendar for a specific month and year": "cal {{month}} {{year}}",
                "Display a calendar for a specific year (4 digits)": "cal {{year}}",
                "Display a calendar for the current month": "cal",
                "Display previous, current and next month": "cal -3",
                "Use monday as the first day of the week": "cal --monday"
            },
            "Explanation": "Prints calendar information, with the current day highlighted.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Display a calendar for a specific month (1-12 or name)": "cal -m {{month}}",
                "Display a calendar for a specific month and year": "cal {{month}} {{year}}",
                "Display a calendar for a specific year (4 digits)": "cal {{year}}",
                "Display a calendar for the current month": "cal",
                "Display a calendar for the current year": "cal -y",
                "Display date of Easter (Western Christian churches) in a given year": "ncal -e {{year}}",
                "Display previous, current and next month": "cal -3"
            },
            "Explanation": "Prints calendar information.",
            "More Information Link": ""
        }
    },
    "calc": {
        "linux": {
            "Examples": {
                "Perform a calculation in non-interactive mode": "calc -p '{{85 * (36 / 4)}}'",
                "Start calc in interactive mode": "calc"
            },
            "Explanation": "An interactive arbitrary-precision calculator on the terminal.",
            "More Information Link": ""
        }
    },
    "calcurse": {
        "linux": {
            "Examples": {
                "Copy local objects to the CalDAV server and vice versa": "calcurse-caldav --init=two-way",
                "Print the appointments and events for the current day and exit": "calcurse --appointment",
                "Remove all local calcurse items and import remote objects": "calcurse-caldav --init=keep-remote",
                "Remove all remote objects and push local calcurse items": "calcurse-caldav --init=keep-local",
                "Start calcurse on interactive mode": "calcurse"
            },
            "Explanation": "A text-based calendar and scheduling application for the command line.",
            "More Information Link": "https://calcurse.org"
        }
    },
    "calendar": {
        "common": {
            "Examples": {
                "Look [A]head, showing events for the next 30 days": "calendar -A {{30}}",
                "Look [B]ack, showing events for the previous 7 days": "calendar -B {{7}}",
                "Show events for today and tomorrow (or the weekend on Friday) from the default calendar": "calendar",
                "Show events from a custom calendar [f]ile": "calendar -f {{path/to/file}}"
            },
            "Explanation": "Display upcoming events from a calendar file.",
            "More Information Link": ""
        }
    },
    "calibre-server": {
        "common": {
            "Examples": {
                "Password protect the server": "calibre-server --username {{username}} --password {{password}}",
                "Start a server to distribute ebooks. Access at http://localhost:8080": "calibre-server",
                "Start server on different port. Access at http://localhost:port": "calibre-server --port {{port}}"
            },
            "Explanation": "A server application that can be used to distribute ebooks over a network.\nEbooks must be imported into the library using the GUI or calibredb before.\nPart of the Calibre ebook library.",
            "More Information Link": "https://manual.calibre-ebook.com/generated/en/calibre-server.html"
        }
    },
    "calibredb": {
        "common": {
            "Examples": {
                "Add one or more ebooks to the library": "calibredb add {{file1 file2 …}}",
                "List ebooks in the library with additional information": "calibredb list",
                "Recursively add all ebooks under a directory to the library": "calibredb add -r {{path/to/directory}}",
                "Remove one or more ebooks from the library. You need ebook-ids (see above)": "calibredb remove {{id1 id2 …}}",
                "Search for ebooks displaying additional information": "calibredb list --search {{search_term}}",
                "Search for just ids of ebooks": "calibredb search {{search_term}}"
            },
            "Explanation": "Tool to manipulate the your ebook database.\nPart of the Calibre ebook library.",
            "More Information Link": "https://manual.calibre-ebook.com/generated/en/calibredb.html"
        }
    },
    "carbon-now": {
        "common": {
            "Examples": {
                "Create an image from a file using default settings": "carbon-now {{file}}",
                "Create an image from a text in clipboard using default settings": "carbon-now --from-clipboard",
                "Create an image from standard input using default settings": "{{input}} | carbon-now",
                "Create images from previously saved preset": "carbon-now -p {{preset}} {{file}}",
                "Create images interactively for custom settings and optionally save a preset": "carbon-now -i {{file}}",
                "End at a specific line of text": "carbon-now -e {{line}} {{file}}",
                "Open image in a browser instead of saving": "carbon-now --open {{file}}",
                "Start at a specified line of text": "carbon-now -s {{line}} {{file}}"
            },
            "Explanation": "Create beautiful images of code.\nMore at <https://github.com/mixn/carbon-now-cli>.",
            "More Information Link": ""
        }
    },
    "cargo": {
        "common": {
            "Examples": {
                "Build the Rust project in the current directory": "cargo build",
                "Build using a specific number of threads (default is the number of CPU cores)": "cargo build -j {{jobs}}",
                "Create a new binary or library Rust project in the current directory": "cargo init --{{bin|lib}}",
                "Create a new binary or library Rust project in the specified directory": "cargo new {{path/to/directory}} --{{bin|lib}}",
                "Install a crate": "cargo install {{crate_name}}",
                "List installed crates": "cargo install --list",
                "Search for crates": "cargo search {{search_string}}"
            },
            "Explanation": "Rust package manager.\nManage Rust projects and their module dependencies (crates).",
            "More Information Link": "https://crates.io/"
        }
    },
    "cargo build": {
        "common": {
            "Examples": {
                "Build a specific package": "cargo build --package {{package}}",
                "Build all packages in the workspace": "cargo build --workspace",
                "Build artifacts in release mode, with optimizations": "cargo build --release",
                "Build only the specified binary": "cargo --bin {{name}}",
                "Build only the specified test target": "cargo build --test {{testname}}",
                "Build the package or packages defined by the `Cargo.toml` manifest file in the local path": "cargo build",
                "Require that `Cargo.lock` is up to date": "cargo build --locked"
            },
            "Explanation": "Compile a local package and all of its dependencies.",
            "More Information Link": "https://doc.rust-lang.org/cargo/commands/cargo-build.html"
        }
    },
    "cargo clippy": {
        "common": {
            "Examples": {
                "Apply Clippy suggestion automatically (experimental and only supported on the nightly channel)": "cargo clippy --fix -Z unstable-options",
                "Require that `Cargo.lock` is up to date": "cargo clippy --locked",
                "Run checks and ignore warnings": "cargo clippy -- -A warnings",
                "Run checks for a package": "cargo clippy --package {{package}}",
                "Run checks on all packages in the workspace": "cargo clippy --workspace",
                "Run checks over the code in the current directory": "cargo clippy",
                "Treat warnings as errors": "RUSTFLAGS=\"-Dwarnings\" cargo clippy -- -D warnings"
            },
            "Explanation": "A collection of lints to catch common mistakes and improve your Rust code.",
            "More Information Link": "https://github.com/rust-lang/rust-clippy"
        }
    },
    "cargo doc": {
        "common": {
            "Examples": {
                "Build and view the default package documentation in the browser": "cargo doc --open",
                "Build documentation without accessing the network": "cargo doc --offline",
                "View a particular package's documentation": "cargo doc --open --package {{package}}",
                "View a particular package's documentation offline": "cargo doc --open --offline --package {{package}}"
            },
            "Explanation": "Build and view Rust package documentation offline.",
            "More Information Link": "https://doc.rust-lang.org/cargo/commands/cargo-doc.html"
        }
    },
    "cargo rustc": {
        "common": {
            "Examples": {
                "Build a specific package": "cargo rustc --package {{package}}",
                "Build artifacts in release mode, with optimizations": "cargo rustc --release",
                "Build only the specified binary": "cargo --bin {{name}}",
                "Build the package or packages defined by the `Cargo.toml` manifest file in the current working directory": "cargo rustc",
                "Check if your package uses unsafe code": "cargo rustc --lib -- -D unsafe-code",
                "Compile with [s]ize optimization (`z` also turns off loop vectorization)": "cargo rustc -- -C opt-level {{s|z}}",
                "Compile with architecture-specific optimizations for the current CPU": "cargo rustc --release -- -C target-cpu=native",
                "Compile with speed optimization": "cargo rustc -- -C opt-level {{1|2|3}}"
            },
            "Explanation": "Compile a Rust package, and pass extra options to the compiler.",
            "More Information Link": "https://doc.rust-lang.org/cargo/commands/cargo-rustc.html"
        }
    },
    "cargo test": {
        "common": {
            "Examples": {
                "Only run tests containing a specific string in their names": "cargo test {{testname}}",
                "Require that `Cargo.lock` is up to date": "cargo test --locked",
                "Run tests for a package": "cargo test --package {{package}}",
                "Set the number of simultaneous running test cases": "cargo test -- --test-threads={{count}}",
                "Test all packages in the workspace": "cargo test --workspace",
                "Test artifacts in release mode, with optimizations": "cargo test --release"
            },
            "Explanation": "Execute the unit and integration tests of a Rust package.",
            "More Information Link": "https://doc.rust-lang.org/cargo/commands/cargo-test.html"
        }
    },
    "carthage": {
        "osx": {
            "Examples": {
                "Download and rebuild the current version of dependencies (without updating them)": "carthage bootstrap",
                "Download the latest version of all dependencies mentioned in Cartfile, and build them": "carthage update",
                "Rebuild a specific dependency": "carthage build {{dependency}}",
                "Update dependencies, but don't build any of them": "carthage update --no-build",
                "Update dependencies, but only build for iOS": "carthage update --platform ios"
            },
            "Explanation": "A dependency management tool for Cocoa applications.",
            "More Information Link": ""
        }
    },
    "case": {
        "common": {
            "Examples": {
                "Combine patterns with |, use * as a fallback pattern": "case {{$tocount}} in {{[wW]|words}}) {{wc -w README}}; ;; {{[lL]|lines}}) {{wc -l README}}; ;; *) {{echo \"what?\"}}; ;; esac",
                "Match a variable against string literals to decide which command to run": "case {{$tocount}} in {{words}}) {{wc -w README}}; ;; {{lines}}) {{wc -l README}}; ;; esac"
            },
            "Explanation": "Branch based on the value of an expression.",
            "More Information Link": ""
        }
    },
    "cat": {
        "common": {
            "Examples": {
                "Append several files into the target file": "cat {{file1}} {{file2}} >> {{target_file}}",
                "Concatenate several files into the target file": "cat {{file1}} {{file2}} > {{target_file}}",
                "Display non-printable and whitespace characters (with `M-` prefix if non-ASCII)": "cat -v -t -e {{file}}",
                "Number all output lines": "cat -n {{file}}",
                "Print the contents of a file to the standard output": "cat {{file}}"
            },
            "Explanation": "Print and concatenate files.",
            "More Information Link": ""
        }
    },
    "cd": {
        "common": {
            "Examples": {
                "Go to home directory of current user": "cd",
                "Go to the given directory": "cd {{path/to/directory}}",
                "Go to the previously chosen directory": "cd -",
                "Go up to the parent of the current directory": "cd .."
            },
            "Explanation": "Change the current working directory.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display the name of the current directory": "cd",
                "Go to a directory in a different drive": "cd {{path/to/directory}} /d",
                "Go to a directory in the same drive": "cd {{path/to/directory}}",
                "Go up to the parent of the current directory": "cd .."
            },
            "Explanation": "Displays the name of or changes the current working directory.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/cd"
        }
    },
    "ceph": {
        "linux": {
            "Examples": {
                "Check cluster health status": "ceph status",
                "Check cluster usage stats": "ceph df",
                "Create a storage pool": "ceph osd pool create {{pool_name}} {{page_number}}",
                "Delete a storage pool": "ceph osd pool delete {{pool_name}}",
                "Get the statistics for the placement groups in a cluster": "ceph pg dump --format {{plain}}",
                "Rename a storage pool": "ceph osd pool rename {{current_name}} {{new_name}}",
                "Self-repair pool storage": "ceph pg repair {{pool_name}}"
            },
            "Explanation": "A unified storage system.",
            "More Information Link": "https://ceph.io"
        }
    },
    "certbot": {
        "linux": {
            "Examples": {
                "Obtain a new certificate via apache authorization, installing the new certificate automatically": "sudo certbot --apache --domain {{subdomain.example.com}}",
                "Obtain a new certificate via nginx authorization, installing the new certificate automatically": "sudo certbot --nginx --domain {{subdomain.example.com}}",
                "Obtain a new certificate via webroot authorization, but do not install it automatically": "sudo certbot certonly --webroot --webroot-path {{path/to/webroot}} --domain {{subdomain.example.com}}",
                "Obtain an untrusted test certificate instead": "sudo certbot --webroot --webroot-path {{path/to/webroot}} --domain {{subdomain.example.com}} --test-cert",
                "Renew all Let's Encrypt certificates that expire in 30 days or less (don't forget to restart any servers that use them afterwards)": "sudo certbot renew",
                "Simulate the obtaining of a new certificate, but don't actually save any new certificates to disk": "sudo certbot --webroot --webroot-path {{path/to/webroot}} --domain {{subdomain.example.com}} --dry-run"
            },
            "Explanation": "The Let's Encrypt Agent for automatically obtaining and renewing TLS certificates.\nSuccessor to `letsencrypt`.",
            "More Information Link": "https://certbot.eff.org/docs/using.html"
        }
    },
    "cewl": {
        "linux": {
            "Examples": {
                "Create a wordlist file from the given URL up to 2 links depth": "cewl --depth {{2}} --write {{path/to/wordlist.txt}} {{url}}",
                "Output a wordlist from the given URL in debug mode including email addresses": "cewl --debug --email {{url}}",
                "Output a wordlist from the given URL through a proxy": "cewl --proxy_host {{host}} --proxy_port {{port}} {{url}}",
                "Output a wordlist from the given URL using HTTP Basic or Digest authentication": "cewl --auth_type {{basic|digest}} --auth_user {{username}} --auth_pass {{password}} {{url}}",
                "Output an alpha-numeric wordlist from the given URL with words of minimum 5 characters": "cewl --with-numbers --min_word_length {{5}} {{url}}"
            },
            "Explanation": "URL spidering tool for making a cracking wordlist from web content.",
            "More Information Link": "https://digi.ninja/projects/cewl.php"
        }
    },
    "cf": {
        "common": {
            "Examples": {
                "Connect an application to a service": "cf bind-service {{app_name}} {{service_name}}",
                "Create a service instance": "cf create-service {{service}} {{plan}} {{service_name}}",
                "Push an app using the default settings": "cf push {{app_name}}",
                "Run a script whose code is included in the app, but runs independently": "cf run-task {{app_name}} \"{{script_command}}\" --name {{task_name}}",
                "Start an interactive SSH session with a VM hosting an app": "cf ssh {{app_name}}",
                "View a dump of recent app logs": "cf logs {{app_name}} --recent",
                "View the services available from your organization": "cf marketplace"
            },
            "Explanation": "Command line tool to manage apps and services on Cloud Foundry.",
            "More Information Link": "https://docs.cloudfoundry.org"
        }
    },
    "chage": {
        "linux": {
            "Examples": {
                "Disable password expiration": "sudo chage -M -1 {{username}}",
                "Enable password expiration in 10 days": "sudo chage -M {{10}} {{username}}",
                "Force user to change password on next log in": "sudo chage -d 0",
                "List password information for the user": "chage -l {{username}}",
                "Set account expiration date": "sudo chage -E {{YYYY-MM-DD}}"
            },
            "Explanation": "Change user account and password expiry information.",
            "More Information Link": ""
        }
    },
    "chars": {
        "common": {
            "Examples": {
                "Look up a character by its Unicode code point": "chars {{U+1F63C}}",
                "Look up a character by its value": "chars '{{ß}}'",
                "Look up a control character": "chars \"{{^C}}\"",
                "Look up possible characters given an ambiguous code point": "chars {{10}}"
            },
            "Explanation": "Display names and codes for various ASCII and Unicode characters and code points.",
            "More Information Link": "https://github.com/antifuchs/chars"
        }
    },
    "chattr": {
        "linux": {
            "Examples": {
                "Make a file or directory immutable to changes and deletion, even by superuser": "chattr +i {{path/to/file_or_directory}}",
                "Make a file or directory mutable": "chattr -i {{path/to/file_or_directory}}",
                "Recursively make an entire directory and contents immutable": "chattr -R +i {{path/to/directory}}"
            },
            "Explanation": "Change attributes of files or directories.",
            "More Information Link": ""
        }
    },
    "chcon": {
        "common": {
            "Examples": {
                "Change only the range/level part of SELinux security context": "chcon -l {{range/level}} {{filename}}",
                "Change only the role part of SELinux security context": "chcon -r {{role}} {{filename}}",
                "Change only the type part of SELinux security context": "chcon -t {{type}} {{filename}}",
                "Change only the user part of SELinux security context": "chcon -u {{user}} {{filename}}",
                "Change the full SELinux security context of a file": "chcon {{user}}:{{role}}:{{type}}:{{range/level}} {{filename}}",
                "Change the security context of a target file, using a reference file": "chcon --reference={{reference_file}} {{target_file}}",
                "View security context of a file": "ls -lZ {{path/to/file}}"
            },
            "Explanation": "Change SELinux security context of a file or files/directories.",
            "More Information Link": ""
        }
    },
    "chcpu": {
        "linux": {
            "Examples": {
                "Disable CPUs via a list of CPU ID numbers": "chcpu -d {{1,3}}",
                "Enable a set of CPUs via a range of CPU ID numbers": "chcpu -e {{1-10}}"
            },
            "Explanation": "Enable/disable a system's CPUs.",
            "More Information Link": ""
        }
    },
    "cheat": {
        "common": {
            "Examples": {
                "Edit the cheat sheet for a command": "cheat -e {{command}}",
                "Get the current cheat version": "cheat -v",
                "List the available cheat sheets": "cheat -l",
                "Search available the cheat sheets for a specified command name": "cheat -s {{command}}",
                "Show example usage of a command": "cheat {{command}}"
            },
            "Explanation": "Create and view interactive cheat sheets on the command-line.",
            "More Information Link": "https://github.com/cheat/cheat"
        }
    },
    "check-support-status": {
        "linux": {
            "Examples": {
                "Display only packages whose support has ended": "check-support-status --type {{ended}}",
                "Display packages whose support is limited, has already ended or will end earlier than the distribution's end of life": "check-support-status",
                "Skip printing a headline": "check-support-status --no-heading"
            },
            "Explanation": "Identify installed Debian packages for which support has had to be limited or prematurely ended.",
            "More Information Link": "https://manpages.debian.org/buster/debian-security-support/check-support-status.1.en.html"
        }
    },
    "chflags": {
        "osx": {
            "Examples": {
                "Recursively set the `uchg` flag for a directory": "chflags -R {{uchg}} {{path/to/directory}}",
                "Recursively unset the `uchg` flag for a directory": "chflags -R {{nouchg}} {{path/to/directory}}",
                "Set the `hidden` flag for a file": "chflags {{hidden}} {{path/to/file}}",
                "Unset the `hidden` flag for a file": "chflags {{nohidden}} {{path/to/file}}"
            },
            "Explanation": "Change file or directory flags.",
            "More Information Link": ""
        }
    },
    "chfn": {
        "linux": {
            "Examples": {
                "Update a user's \"Home Phone Number\" field for the output of `finger`": "chfn -h {{new_home_telephone_number}} {{username}}",
                "Update a user's \"Name\" field in the output of `finger`": "chfn -f {{new_display_name}} {{username}}",
                "Update a user's \"Office Phone Number\" field for the output of `finger`": "chfn -p {{new_office_telephone_number}} {{username}}",
                "Update a user's \"Office Room Number\" field for the output of `finger`": "chfn -o {{new_office_room_number}} {{username}}"
            },
            "Explanation": "Update `finger` info for a user.",
            "More Information Link": ""
        }
    },
    "chgrp": {
        "common": {
            "Examples": {
                "Change the owner group of a file/directory": "chgrp {{group}} {{path/to/file_or_directory}}",
                "Change the owner group of a file/directory to match a reference file": "chgrp --reference={{path/to/reference_file}} {{path/to/file_or_directory}}",
                "Change the owner group of a symbolic link": "chgrp -h {{group}} {{path/to/symlink}}",
                "Recursively change the owner group of a directory and its contents": "chgrp -R {{group}} {{path/to/directory}}"
            },
            "Explanation": "Change group ownership of files and directories.",
            "More Information Link": ""
        }
    },
    "chisel": {
        "common": {
            "Examples": {
                "Connect to a Chisel server and tunnel a specific host and port to a remote server and port": "chisel client {{server_ip}}:{{server_port}} {{local_host}}:{{local_port}}:{{remote_server}}:{{remote_port}}",
                "Connect to a Chisel server and tunnel a specific port to a remote server and port": "chisel client {{server_ip}}:{{server_port}} {{local_port}}:{{remote_server}}:{{remote_port}}",
                "Connect to a Chisel server using username and password authentication": "chisel client --auth {{username}}:{{password}} {{server_ip}}:{{server_port}} {{local_port}}:{{remote_server}}:{{remote_port}}",
                "Run a Chisel server": "chisel server",
                "Run a Chisel server listening to a specific port": "chisel server -p {{server_port}}",
                "Run a chisel server that accepts authenticated connections using username and password": "chisel server --auth {{username}}:{{password}}"
            },
            "Explanation": "Create TCP tunnels. Includes both client and server.",
            "More Information Link": "https://github.com/jpillora/chisel"
        }
    },
    "chkconfig": {
        "linux": {
            "Examples": {
                "Disable service at boot": "chkconfig {{ntpd}} off",
                "Disable service at boot for runlevel 3": "chkconfig --level {{3}} {{ntpd}} off",
                "Enable service at boot": "chkconfig {{sshd}} on",
                "Enable service at boot for runlevels 2, 3, 4, and 5": "chkconfig --level {{2345}} {{sshd}} on",
                "List services with runlevel": "chkconfig --list",
                "Show a service's runlevel": "chkconfig --list {{ntpd}}"
            },
            "Explanation": "Manage the runlevel of services on CentOS 6.",
            "More Information Link": ""
        }
    },
    "chkdsk": {
        "windows": {
            "Examples": {
                "Change the log file size to the specified size (only for NTFS)": "chkdsk /l{{size}}",
                "Dismount a specific volume before checking": "chkdsk {{volume}} /x",
                "Fix errors on a specific volume": "chkdsk {{volume}} /f",
                "Specify the drive letter (followed by a colon), mount point, or volume name to check": "chkdsk {{volume}}"
            },
            "Explanation": "Check file system and volume metadata for errors.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/chkdsk"
        }
    },
    "chmod": {
        "common": {
            "Examples": {
                "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite": "chmod -R g+w,o+w {{directory}}",
                "Give [a]ll users rights to [r]ead and e[x]ecute": "chmod a+rx {{file}}",
                "Give [o]thers (not in the file owner's group) the same rights as the [g]roup": "chmod o=g {{file}}",
                "Give the [u]ser rights to [r]ead and [w]rite to a file/directory": "chmod u+rw {{file_or_directory}}",
                "Give the [u]ser who owns a file the right to e[x]ecute it": "chmod u+x {{file}}",
                "Remove all rights from [o]thers": "chmod o= {{file}}",
                "Remove e[x]ecutable rights from the [g]roup": "chmod g-x {{file}}"
            },
            "Explanation": "Change the access permissions of a file or directory.",
            "More Information Link": ""
        }
    },
    "choco": {
        "windows": {
            "Examples": {
                "Call general help": "choco -?",
                "Call help on a specific command": "choco {{command}} -?",
                "Check the Chocolatey version": "choco --version",
                "Execute Chocolatey command": "choco {{command}}"
            },
            "Explanation": "A command line interface for the Chocolatey package manager.\nSee `choco install`, `choco upgrade` and other pages for additional information.",
            "More Information Link": "https://chocolatey.org"
        }
    },
    "choco feature": {
        "windows": {
            "Examples": {
                "Disable a feature": "choco feature disable --name {{name}}",
                "Display a list of available features": "choco feature list",
                "Enable a feature": "choco feature enable --name {{name}}"
            },
            "Explanation": "Interact with features with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-feature"
        }
    },
    "choco info": {
        "windows": {
            "Examples": {
                "Display information for a local package only": "choco info {{package}} --local-only",
                "Display information on a specific package": "choco info {{package}}",
                "Provide a username and password for authentication": "choco info {{package}} --user {{username}} --password {{password}}",
                "Specify a custom source to receive packages information from": "choco info {{package}} --source {{source_url|alias}}"
            },
            "Explanation": "Display detailed information about a package with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-info"
        }
    },
    "choco install": {
        "windows": {
            "Examples": {
                "Allow installing multiple versions of a package": "choco install {{package}} --allow-multiple",
                "Confirm all prompts automatically": "choco install {{package}} --yes",
                "Install a specific \"nuspec\" or \"nupkg\" file": "choco install {{path/to/file}}",
                "Install a specific version of a package": "choco install {{package}} --version {{version}}",
                "Install one or more space-separated packages": "choco install {{package(s)}}",
                "Install packages from a custom configuration file": "choco install {{path/to/packages.config}}",
                "Provide a username and password for authentication": "choco install {{package}} --user {{username}} --password {{password}}",
                "Specify a custom source to receive packages from": "choco install {{package}} --source {{source_url|alias}}"
            },
            "Explanation": "Install one or more packages with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-install"
        }
    },
    "choco list": {
        "windows": {
            "Examples": {
                "Display a list including local programs": "choco list --include-programs",
                "Display all available packages": "choco list",
                "Display all locally installed packages": "choco list --local-only",
                "Display only approved packages": "choco list --approved-only",
                "Provide a username and password for authentication": "choco list --user {{username}} --password {{password}}",
                "Specify a custom source to display packages from": "choco list --source {{source_url|alias}}"
            },
            "Explanation": "Display a list of packages with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-list"
        }
    },
    "choco new": {
        "windows": {
            "Examples": {
                "Create a new package in a custom output directory": "choco new {{package_name}} --output-directory {{path/to/directory}}",
                "Create a new package skeleton": "choco new {{package_name}}",
                "Create a new package with a specific maintainer name": "choco new {{package_name}} --maintainer {{maintainer_name}}",
                "Create a new package with a specific version": "choco new {{package_name}} --version {{version}}",
                "Create a new package with specific 32-bit and 64-bit installer urls": "choco new {{package_name}} url=\"{{url}}\" url64=\"{{url}}\""
            },
            "Explanation": "Generate new package specification files with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-new"
        }
    },
    "choco outdated": {
        "windows": {
            "Examples": {
                "Display a list of outdated packages in table format": "choco outdated",
                "Ignore pinned packages in the output": "choco outdated --ignore-pinned",
                "Provide a username and password for authentication": "choco outdated --user {{username}} --password {{password}}",
                "Specify a custom source to check packages from": "choco outdated --source {{source_url|alias}}"
            },
            "Explanation": "Check for outdated packages with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-outdated"
        }
    },
    "choco pack": {
        "windows": {
            "Examples": {
                "Package a NuGet specification specifying the version of the resulting file": "choco pack {{path/to/specification}} --version {{version}}",
                "Package a NuGet specification to a nupkg file": "choco pack {{path/to/specification}}",
                "Package a NuGet specification to a specific directory": "choco pack {{path/to/specification}} --output-directory {{path/to/output_directory}}"
            },
            "Explanation": "Package a NuGet specification into a nupkg file.",
            "More Information Link": "https://chocolatey.org/docs/commands-pack"
        }
    },
    "choco pin": {
        "windows": {
            "Examples": {
                "Display a list of pinned packages and their versions": "choco pin list",
                "Pin a package at a specific version": "choco pin add --name {{package}} --version {{version}}",
                "Pin a package at its current version": "choco pin add --name {{package}}",
                "Remove a pin for a specific package": "choco pin remove --name {{package}}"
            },
            "Explanation": "Pin a package at a specific version with Chocolatey.\nPinned packages are skipped automatically when upgrading.",
            "More Information Link": "https://chocolatey.org/docs/commands-pin"
        }
    },
    "choco search": {
        "windows": {
            "Examples": {
                "Confirm all prompts automatically": "choco search {{query}} --yes",
                "Only include exact matches in the results": "choco search {{query}} --exact",
                "Provide a username and password for authentication": "choco search {{query}} --user {{username}} --password {{password}}",
                "Search for a package": "choco search {{query}}",
                "Search for a package locally": "choco search {{query}} --local-only",
                "Specify a custom source to search for packages in": "choco search {{query}} --source {{source_url|alias}}"
            },
            "Explanation": "Search for a local or remote package with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-search"
        }
    },
    "choco source": {
        "windows": {
            "Examples": {
                "Add a new package source": "choco source add --name {{name}} --source {{url}}",
                "Add a new package source with a client certificate": "choco source add --name {{name}} --source {{url}} --cert {{path/to/certificate}}",
                "Add a new package source with credentials": "choco source add --name {{name}} --source {{url}} --user {{username}} --password {{password}}",
                "Disable a package source": "choco source disable --name {{name}}",
                "Enable a package source": "choco source enable --name {{name}}",
                "List currently available sources": "choco source list",
                "Remove a package source": "choco source remove --name {{name}}"
            },
            "Explanation": "Manage sources for packages with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-source"
        }
    },
    "choco uninstall": {
        "windows": {
            "Examples": {
                "Confirm all prompts automatically": "choco uninstall {{package}} --yes",
                "Remove all dependencies when uninstalling": "choco uninstall {{package}} --remove-dependencies",
                "Uninstall a specific version of a package": "choco uninstall {{package}} --version {{version}}",
                "Uninstall all packages": "choco uninstall all",
                "Uninstall one or more space-separated packages": "choco uninstall {{package(s)}}"
            },
            "Explanation": "Uninstall one or more packages with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-uninstall"
        }
    },
    "choco upgrade": {
        "windows": {
            "Examples": {
                "Confirm all prompts automatically": "choco upgrade {{package}} --yes",
                "Provide a username and password for authentication": "choco upgrade {{package}} --user {{username}} --password {{password}}",
                "Specify a custom source to receive packages from": "choco upgrade {{package}} --source {{source_url|alias}}",
                "Upgrade all except specified comma-separated packages": "choco upgrade all --except \"{{package(s)}}\"",
                "Upgrade all packages": "choco upgrade all",
                "Upgrade one or more space-separated packages": "choco upgrade {{package(s)}}",
                "Upgrade to a specific version of a package": "choco upgrade {{package}} --version {{version}}"
            },
            "Explanation": "Upgrade one or more packages with Chocolatey.",
            "More Information Link": "https://chocolatey.org/docs/commands-upgrade"
        }
    },
    "choco-apikey": {
        "windows": {
            "Examples": {
                "Display a list of sources and their API keys": "choco apikey",
                "Display a specific source and its API key": "choco apikey --source \"{{source_url}}\"",
                "Remove an API key for a source": "choco apikey --source \"{{source_url}}\" --remove",
                "Set an API key for a source": "choco apikey --source \"{{source_url}}\" --key \"{{api_key}}\""
            },
            "Explanation": "Manage API keys for Chocolatey sources.",
            "More Information Link": "https://chocolatey.org/docs/commands-apikey"
        }
    },
    "choice": {
        "windows": {
            "Examples": {
                "A,B and C as list of choices to be used": "choice /c {{ABC}}",
                "Display help message": "choice /?",
                "Specify a message to display before the list of choices. If `/m` is not specified, only the choice prompt is displayed": "choice /m {{message}} /C {{ABC}}",
                "Specify that the choices are case-sensitive": "choice /CS {{AaBb}}",
                "Specify the number of seconds to pause before using the default choice specified by `/d`": "choice /C {{AaBb}} /t {{3}} /d {{b}}",
                "Use the default [Y,N] list of choices": "choice"
            },
            "Explanation": "Prompts the user to select one item from a list of single-character choices in a batch program, and then returns the index of the selected choice.\nIf used without parameters, choice displays the default choices Y and N.\nMore Information: <https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/choice>.",
            "More Information Link": ""
        }
    },
    "chown": {
        "common": {
            "Examples": {
                "Change the owner of a file/directory to match a reference file": "chown --reference={{path/to/reference_file}} {{path/to/file_or_directory}}",
                "Change the owner of a symbolic link": "chown -h {{user}} {{path/to/symlink}}",
                "Change the owner user and group of a file/directory": "chown {{user}}:{{group}} {{path/to/file_or_directory}}",
                "Change the owner user of a file/directory": "chown {{user}} {{path/to/file_or_directory}}",
                "Recursively change the owner of a directory and its contents": "chown -R {{user}} {{path/to/directory}}"
            },
            "Explanation": "Change user and group ownership of files and directories.",
            "More Information Link": ""
        }
    },
    "chroma": {
        "common": {
            "Examples": {
                "Highlight a source file with C++ lexer and output to an SVG image, using the Monokai style": "chroma --lexer=\"{{c++}}\" --formatter=\"{{svg}}\" --syle=\"{{monokai}}\" {{source_file}} > {{svg_file}}",
                "Highlight a source file with Go lexer and output to a HTML file": "chroma --lexer=\"{{go}}\" --formatter=\"{{html}}\" {{source_file}} > {{html_file}}",
                "Highlight a source file with python lexer and output to terminal": "chroma --lexer=\"{{python}}\" {{source_file}}"
            },
            "Explanation": "Chroma is a general-purpose syntax highlighting library and corresponding command, for Go.",
            "More Information Link": "https://github.com/alecthomas/chroma"
        }
    },
    "chromium": {
        "common": {
            "Examples": {
                "Open a file": "chromium {{path/to/file.html}}",
                "Open an URL": "chromium {{example.com}}",
                "Open in a new window": "chromium --new-window {{example.com}}",
                "Open in app mode (without toolbars, URL bar, buttons, etc.)": "chromium --app='{{https://example.com}}'",
                "Open in incognito mode": "chromium --incognito {{example.com}}",
                "Use a proxy server": "chromium --proxy-server=\"{{socks5://hostname:66}}\" {{example.com}}"
            },
            "Explanation": "Open-source web browser from Google.",
            "More Information Link": "https://chromium.org"
        }
    },
    "chroot": {
        "common": {
            "Examples": {
                "Run command as new root directory": "chroot {{/path/to/new/root}} {{command}}",
                "Specify user and group (ID or name) to use": "chroot --userspec={{user:group}}"
            },
            "Explanation": "Run command or interactive shell with special root directory.",
            "More Information Link": ""
        }
    },
    "chsh": {
        "common": {
            "Examples": {
                "Change shell": "chsh -s {{path/to/shell_binary}} {{username}}"
            },
            "Explanation": "Change user's login shell.",
            "More Information Link": ""
        }
    },
    "cipher": {
        "windows": {
            "Examples": {
                "Decrypt a file or directory": "cipher /d:{{path/to/file_or_directory}}",
                "Encrypt a file or directory": "cipher /e:{{path/to/file_or_directory}}",
                "Securely remove a file or directory": "cipher /w:{{path/to/file_or_directory}}"
            },
            "Explanation": "Encrypt or decrypt files on NTFS drives.",
            "More Information Link": ""
        }
    },
    "cksum": {
        "common": {
            "Examples": {
                "Display a 32 bit checksum, size in bytes and filename": "cksum {{filename}}"
            },
            "Explanation": "Calculates CRC checksums and byte counts of a file.\nNote, on old UNIX systems the CRC implementation may differ.",
            "More Information Link": ""
        }
    },
    "clamav": {
        "linux": {
            "Examples": {
                "Scan a file for viruses": "clamscan {{path/to/file}}",
                "Scan directories recursively and move them into quarantine": "clamscan --recursive --move={{directory}}",
                "Scan directories recursively and print out infected files": "clamscan --recursive --infected {{path/to/directory}}",
                "Update virus definitions": "freshclam"
            },
            "Explanation": "Open-source anti-virus program.\nDesigned especially for e-mail scanning on mail gateways, but can be used in other contexts.",
            "More Information Link": "https://www.clamav.net"
        }
    },
    "clamscan": {
        "common": {
            "Examples": {
                "Move infected files to a specific directory": "clamscan --move {{path/to/quarantine_directory}}",
                "Output the scan report to a log file": "clamscan --log {{path/to/log_file}}",
                "Remove infected files": "clamscan --remove yes",
                "Scan a file for vulnerabilities": "clamscan {{path/to/file}}",
                "Scan all files recursively in a specific directory": "clamscan -r {{path/to/directory}}",
                "Scan data from `stdin`": "{{command}} | clamscan -",
                "Scan the current directory and output only infected files": "clamscan --infected",
                "Specify a virus database file or directory of files": "clamscan --database {{path/to/database_file_or_directory}}"
            },
            "Explanation": "A command line virus scanner.",
            "More Information Link": "https://www.clamav.net"
        }
    },
    "clang": {
        "common": {
            "Examples": {
                "Activate output of all errors and warnings": "clang {{input_source.c}} -Wall -o {{output_executable}}",
                "Compile a source code file into an executable binary": "clang {{input_source.c}} -o {{output_executable}}",
                "Compile source code into LLVM Intermediate Representation (IR)": "clang -S -emit-llvm {{file.c}} -o {{file.ll}}",
                "Include libraries located at a different path than the source file": "clang {{input_source.c}} -o {{output_executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}"
            },
            "Explanation": "Compiler for C, C++, and Objective-C source files. Can be used as a drop-in replacement for GCC.",
            "More Information Link": "https://clang.llvm.org/docs/ClangCommandLineReference.html"
        }
    },
    "clang-format": {
        "common": {
            "Examples": {
                "Format a file and print the result to `stdout`": "clang-format {{path/to/file}}",
                "Format a file in-place": "clang-format -i {{path/to/file}}",
                "Format a file using a predefined coding style": "clang-format --style={{LLVM|Google|Chromium|Mozilla|WebKit}} {{path/to/file}}",
                "Format a file using the `.clang-format` file in one of the parent directories of the source file": "clang-format --style=file {{path/to/file}}",
                "Generate a custom `.clang-format` file": "clang-format --style={{LLVM|Google|Chromium|Mozilla|WebKit}} --dump-config > {{.clang-format}}"
            },
            "Explanation": "Tool to auto-format C/C++/Java/JavaScript/Objective-C/Protobuf/C# code.",
            "More Information Link": "https://clang.llvm.org/docs/ClangFormat.html"
        }
    },
    "clear": {
        "common": {
            "Examples": {
                "Clear the screen (equivalent to pressing Control-L in Bash shell)": "clear",
                "Clear the screen but keep the terminal's scrollback buffer": "clear -x",
                "Indicate the type of terminal to clean (defaults to the value of the environment variable `TERM`)": "clear -T {{type_of_terminal}}",
                "Show the version of `ncurses` used by `clear`": "clear -V"
            },
            "Explanation": "Clears the screen of the terminal.",
            "More Information Link": ""
        }
    },
    "clementine": {
        "common": {
            "Examples": {
                "Load a playlist file": "clementine --load {{path/to/playlist.ext}}",
                "Open Clementine": "clementine",
                "Play the 5th track in the currently loaded playlist": "clementine --play-track {{5}}",
                "Skip to the next track": "clementine --next",
                "Skip to the previous track": "clementine --previous",
                "Start playing a music file": "clementine {{url/or/path/to/file.ext}}",
                "Stop playback": "clementine --stop",
                "Toggle between pausing and playing": "clementine --play-pause"
            },
            "Explanation": "A modern music player and library organizer.",
            "More Information Link": "https://www.clementine-player.org"
        }
    },
    "clip": {
        "windows": {
            "Examples": {
                "Copy text with a trailing newline to the Windows clipboard": "echo {{some text}} | clip",
                "Copy text without a trailing newline to the Windows clipboard": "echo | set /p=\"some text\" | clip",
                "Copy the contents of a file to the Windows clipboard": "clip < {{path/to/file.ext}}",
                "Pipe command line output to the Windows clipboard": "{{dir}} | clip"
            },
            "Explanation": "Copy input content to the Windows clipboard.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/clip"
        }
    },
    "cloc": {
        "common": {
            "Examples": {
                "Compare 2 directory structures and count the differences between them": "cloc --diff {{path/to/directory/one}} {{path/to/directory/two}}",
                "Count all the lines of code in a directory": "cloc {{path/to/directory}}",
                "Count all the lines of code in a directory, displaying a progress bar during the counting process": "cloc --progress=1 {{path/to/directory}}",
                "Count all the lines of code in a directory, displaying the results for each file instead of each language": "cloc --by-file {{path/to/directory}}",
                "Ignore files that are ignored by VCS, such as files specified in .gitignore": "cloc --vcs git {{path/to/directory}}"
            },
            "Explanation": "Count, and compute differences of, lines of source code and comments.",
            "More Information Link": "https://github.com/AlDanial/cloc"
        }
    },
    "clockwork-cli": {
        "common": {
            "Examples": {
                "Monitor Clockwork logs for a specific project": "clockwork-cli {{path/to/directory}}",
                "Monitor Clockwork logs for multiple projects": "clockwork-cli {{path/to/directory1 path/to/directory2 …}}",
                "Monitor Clockwork logs for the current project": "clockwork-cli"
            },
            "Explanation": "A command line interface for the Clockwork PHP debugging framework.",
            "More Information Link": "https://github.com/ptrofimov/clockwork-cli"
        }
    },
    "cls": {
        "windows": {
            "Examples": {
                "Clear the screen": "cls"
            },
            "Explanation": "Clears the screen.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/cls"
        }
    },
    "cmake": {
        "common": {
            "Examples": {
                "Generate a Makefile and use it to compile a project in a separate \"build\" directory (out-of-source build)": "cmake -H. -B{{build}} && make -C {{build}}",
                "Generate a Makefile and use it to compile a project in the same directory as the source": "cmake && make"
            },
            "Explanation": "Cross-platform build system generator.\nIt generates Makefiles, Visual Studio projects or others, depending on the target system.",
            "More Information Link": "https://cmake.org/cmake/help/v3.2/manual/cmake.1.html"
        }
    },
    "cmark": {
        "common": {
            "Examples": {
                "Convert data from standard input to latex": "cmark --to latex",
                "Convert straight quotes to smart quotes": "cmark --smart --to html {{filename.md}}",
                "Render a Commonmark Markdown file to HTML": "cmark --to html {{filename.md}}",
                "Validate utf8 characters": "cmark --validate-utf8 {{filename.md}}"
            },
            "Explanation": "Converts CommonMark Markdown formatted text to other formats.",
            "More Information Link": "https://github.com/commonmark/cmark"
        }
    },
    "cmatrix": {
        "common": {
            "Examples": {
                "Display red text": "cmatrix -C {{red}}",
                "Enable asynchronous scrolling": "cmatrix -a",
                "Enable rainbow mode": "cmatrix -r",
                "Set screen update delay to 2 centiseconds": "cmatrix -u {{2}}"
            },
            "Explanation": "Shows a scrolling Matrix like screen in the terminal.",
            "More Information Link": "https://github.com/abishekvashok/cmatrix"
        }
    },
    "cmd": {
        "windows": {
            "Examples": {
                "Disable the usage of `echo` in command output": "cmd /q",
                "Enable or disable command extensions": "cmd /e:{{on|off}}",
                "Enable or disable environment variable expansion": "cmd /v:{{on|off}}",
                "Enable or disable file or directory autocompletion": "cmd /f:{{on|off}}",
                "Force output to use unicode encoding": "cmd /u",
                "Run the specified command and then enter an interactive shell": "cmd /k \"{{command}}\"",
                "Run the specified command and then exit": "cmd /c \"{{command}}\"",
                "Start a new instance of the command interpreter": "cmd"
            },
            "Explanation": "The Windows command interpreter.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/cmd"
        }
    },
    "cmp": {
        "common": {
            "Examples": {
                "Find the byte number and differing bytes of every difference": "cmp -l {{file1}} {{file2}}",
                "Find the byte number and line number of the first difference between the files": "cmp {{file1}} {{file2}}"
            },
            "Explanation": "Compare two files.",
            "More Information Link": ""
        }
    },
    "cmstp": {
        "windows": {
            "Examples": {
                "Install a specific profile": "cmstp \"{{path/to/profile}}\"",
                "Install for all users (requires administrator privileges)": "cmstp /au \"{{path/to/profile}}\"",
                "Install silently without any prompts": "cmstp /s \"{{path/to/profile}}\"",
                "Install without checking for dependencies": "cmstp /nf \"{{path/to/profile}}\"",
                "Install without creating a desktop shortcut": "cmstp /ns \"{{path/to/profile}}\"",
                "Only install for the current user": "cmstp /su \"{{path/to/profile}}\"",
                "Uninstall a specific profile": "cmstp /u \"{{path/to/profile}}\"",
                "Uninstall silently without a confirmation prompt": "cmstp /u /s \"{{path/to/profile}}\""
            },
            "Explanation": "A command line tool for managing connection service profiles.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/cmstp"
        }
    },
    "cmus": {
        "linux": {
            "Examples": {
                "Add file/directory to library": ":add {{path/to/file_or_directory}}",
                "Open cmus from specified directory": "cmus {{path/to/directory}}",
                "Pause/unpause current song": "c",
                "Quit cmus": "q",
                "Toggle shuffle mode on/off": "s"
            },
            "Explanation": "Commandline Music Player.\nUse arrow keys to navigate, `<enter/return>` to select, and numbers 1-8 switch between different views.",
            "More Information Link": ""
        }
    },
    "code": {
        "common": {
            "Examples": {
                "Compare two files in VS Code": "code -d {{file1}} {{file2}}",
                "Open VS Code": "code",
                "Open VS Code with super user (sudo) permissions": "sudo code {{path/to/file_or_directory}} --user-data-dir",
                "Open a file or directory in VS Code": "code {{path/to/file_or_directory}}",
                "Open a file or directory in the currently open VS Code window": "code --reuse-window {{path/to/file_or_directory}}",
                "Open the current directory in VS Code": "code ."
            },
            "Explanation": "Visual Studio Code.",
            "More Information Link": "https://github.com/microsoft/vscode"
        }
    },
    "codesign": {
        "osx": {
            "Examples": {
                "Sign an application with a certificate": "codesign -s \"{{My Company Name}}\" {{/path/to/App.app}}",
                "Verify the certificate of an application": "codesign -v {{/path/to/App.app}}"
            },
            "Explanation": "Create and manipulate code signatures for macOS.",
            "More Information Link": ""
        }
    },
    "coffee": {
        "common": {
            "Examples": {
                "Compile to JavaScript and save to a file with the same name": "coffee --compile {{path/to/file.coffee}}",
                "Compile to JavaScript and save to a given output file": "coffee --compile {{path/to/file.coffee}} --output {{path/to/file.js}}",
                "Run a script": "coffee {{path/to/file.coffee}}",
                "Run interactive REPL": "coffee --interactive",
                "Watch script for changes and re-run script": "coffee --watch {{path/to/file.coffee}}"
            },
            "Explanation": "Executes CoffeeScript scripts or compiles them into JavaScript.",
            "More Information Link": "https://coffeescript.org#cli"
        }
    },
    "collectd": {
        "linux": {
            "Examples": {
                "Don't fork into the background": "collectd -f",
                "Show usage help, including the program version": "collectd -h",
                "Specify a custom PID file location": "collectd -P {{path/to/file}}",
                "Specify a custom configuration file location": "collectd -C {{path/to/file}}",
                "Start collectd": "collectd",
                "Test plugin data collection functionality and then exit": "collectd -T",
                "Test the configuration file and then exit": "collectd -t"
            },
            "Explanation": "System statistics collection daemon.",
            "More Information Link": "https://collectd.org/"
        }
    },
    "color": {
        "windows": {
            "Examples": {
                "List available color values and detailed information": "color /?",
                "Set the console colors to the default values": "color",
                "Set the console foreground and background to a specific color": "color {{foreground_code}}{{background_code}}"
            },
            "Explanation": "Set the console foreground and background colors.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/color"
        }
    },
    "colordiff": {
        "common": {
            "Examples": {
                "Compare files": "colordiff {{file1}} {{file2}}",
                "Ignore case differences in file contents": "colordiff -i {{file1}} {{file2}}",
                "Ignore white spaces": "colordiff -w {{file1}} {{file2}}",
                "Output in two columns": "colordiff -y {{file1}} {{file2}}",
                "Report when two files are the same": "colordiff -s {{file1}} {{file2}}"
            },
            "Explanation": "A tool to colorize diff output.\nThe Perl script colordiff is a wrapper for `diff` and produces the same output but with pretty syntax highlighting. Colour schemes can be customized.",
            "More Information Link": "https://github.com/kimmel/colordiff"
        }
    },
    "colrm": {
        "linux": {
            "Examples": {
                "Remove first column of `stdin`": "colrm {{1 1}}",
                "Remove from 3rd column till the end of each line": "colrm {{3}}",
                "Remove from the 3rd column till the 5th column of each line": "colrm {{3 5}}"
            },
            "Explanation": "Remove columns from `stdin`.",
            "More Information Link": ""
        }
    },
    "column": {
        "common": {
            "Examples": {
                "Fill columns before filling rows": "printf \"header1\\nbar\\nfoobar\\n\" | column -c {{30}} -x",
                "Format output for a 30 characters wide display": "printf \"header1 header2\\nbar foo\\n\" | column -c {{30}}",
                "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
                "Split columns automatically and auto-align in a tabular format": "printf \"header1 header2\\nbar foo\\n\" | column -t"
            },
            "Explanation": "Format standard input or file into multiple columns.\nRows are filled before columns; default separator is whitespace.",
            "More Information Link": ""
        }
    },
    "comm": {
        "common": {
            "Examples": {
                "Get lines only found in first file, saving the result to a third file": "comm -23 {{file1}} {{file2}} > {{file1_only}}",
                "Print lines only found in second file, when the files aren't sorted": "comm -13 <(sort {{file1}}) <(sort {{file2}})",
                "Print only lines common to both files": "comm -12 {{file1}} {{file2}}",
                "Print only lines common to both files, reading one file from `stdin`": "cat {{file1}} | comm -12 - {{file2}}",
                "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines": "comm {{file1}} {{file2}}"
            },
            "Explanation": "Select or reject lines common to two files. Both files must be sorted.",
            "More Information Link": ""
        }
    },
    "command": {
        "common": {
            "Examples": {
                "Display the path to the executable or the alias definition of a specific command": "command -v {{command_name}}",
                "Execute the ls program literally, even if an ls alias exists": "command {{ls}}"
            },
            "Explanation": "Command forces the shell to execute the program and ignore any functions, builtins and aliases with the same name.",
            "More Information Link": ""
        }
    },
    "comp": {
        "windows": {
            "Examples": {
                "Compare files case-insensitively": "comp /c {{path/to/file_1}} {{path/to/file_2}}",
                "Compare files interactively": "comp",
                "Compare only the first 5 lines of each file": "comp /n={{5}} {{path/to/file_1}} {{path/to/file_2}}",
                "Compare two sets of files": "comp {{path/to/directory_1/*}} {{path/to/directory_2/*}}",
                "Compare two specified files": "comp {{path/to/file_1}} {{path/to/file_2}}",
                "Display differences in ASCII format": "comp /a {{path/to/file_1}} {{path/to/file_2}}",
                "Display differences in decimal format": "comp /d {{path/to/file_1}} {{path/to/file_2}}",
                "Display line numbers for differences": "comp /l {{path/to/file_1}} {{path/to/file_2}}"
            },
            "Explanation": "Compare the contents of two files or sets of files.\nUse wildcards (*) to compare sets of files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/comp"
        }
    },
    "compare": {
        "common": {
            "Examples": {
                "Compare 2 images": "compare {{image1.png}} {{image2.png}} {{diff.png}}",
                "Compare 2 images using a custom metric": "compare -verbose -metric {{PSNR}} {{image1.png}} {{image2.png}} {{diff.png}}"
            },
            "Explanation": "View the difference between 2 images.",
            "More Information Link": "https://imagemagick.org/script/compare.php"
        }
    },
    "compgen": {
        "linux": {
            "Examples": {
                "List all aliases": "compgen -a",
                "List all commands that you could run": "compgen -c",
                "List all functions that you could run": "compgen -A function",
                "See all available commands/aliases starting with 'ls'": "compgen -ac {{ls}}",
                "Show shell reserved key words": "compgen -k"
            },
            "Explanation": "A built-in command for auto-completion in bash, which is called on pressing TAB key twice.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "List all aliases": "compgen -a",
                "List all commands that you could run": "compgen -c",
                "List all functions that you could run": "compgen -A function",
                "See all available commands/aliases starting with 'ls'": "compgen -ac {{ls}}",
                "Show shell reserved key words": "compgen -k"
            },
            "Explanation": "A built-in command for auto-completion in bash, which is called on pressing TAB key twice.",
            "More Information Link": ""
        }
    },
    "complete": {
        "common": {
            "Examples": {
                "Apply a command that performs autocompletion to another command": "complete -C {{autocomplete_command}} {{command}}",
                "Apply a function that performs autocompletion to a command": "complete -F {{function}} {{command}}",
                "Apply autocompletion without appending a space to the completed word": "complete -o nospace -F {{function}} {{command}}"
            },
            "Explanation": "Provides argument autocompletion to shell commands.",
            "More Information Link": ""
        }
    },
    "compose": {
        "linux": {
            "Examples": {
                "Compose action can be used to compose any existing file or new on default mailcap edit tool": "compose {{filename}}",
                "With `run-mailcap`": "run-mailcap --action=compose {{filename}}"
            },
            "Explanation": "An alias to a `run-mailcap`'s action compose.\nOriginally `run-mailcap` is used to mime-type/file.",
            "More Information Link": ""
        }
    },
    "composer": {
        "common": {
            "Examples": {
                "Add a package as a dependency for this project, adding it to `composer.json`": "composer require {{user/package_name}}",
                "Install all the dependencies in this project's `composer.json` and create `composer.lock`": "composer install",
                "Interactively create a `composer.json` file": "composer init",
                "Learn more about why a dependency can't be installed": "composer why-not {{user/package_name}}",
                "Uninstall a package from this project, removing it as a dependency from `composer.json`": "composer remove {{user/package_name}}",
                "Update all the dependencies in this project's `composer.json` and note versions in `composer.lock` file": "composer update",
                "Update composer lock only after updating `composer.json` manually": "composer update --lock",
                "Update composer to its latest version": "composer self-update"
            },
            "Explanation": "A package-based dependency manager for PHP projects.",
            "More Information Link": "https://getcomposer.org/"
        }
    },
    "conda": {
        "common": {
            "Examples": {
                "Create a new environment, installing named packages into it": "conda create --name {{environment_name}} {{python=2.7 matplotlib}}",
                "Delete an environment (remove all packages)": "conda remove --name {{environment_name}} --all",
                "Delete unused packages and caches": "conda clean --all",
                "Install packages into the current environment": "conda install {{python=3.4 numpy}}",
                "List all environments": "conda info --envs",
                "List currently installed packages in current environment": "conda list",
                "Load or unload an environment": "conda {{activate|deactivate}} {{environment_name}}",
                "Search conda channels for a package by name": "conda search {{package_name}}"
            },
            "Explanation": "Package, dependency and environment management for any programming language.",
            "More Information Link": "https://github.com/conda/conda"
        }
    },
    "conky": {
        "linux": {
            "Examples": {
                "Align conky on the desktop": "conky -a {{{top,bottom,middle}_{left,right,middle}}}",
                "Create a new default config": "conky -C > ~/.conkyrc",
                "Launch conky with a given config file": "conky -c {{path/to/config}}",
                "Launch with default, built-in config": "conky",
                "Pause for 5 seconds at startup before launching": "conky -p {{5}}",
                "Start in the background (daemonize)": "conky -d"
            },
            "Explanation": "Light-weight system monitor for X.",
            "More Information Link": "https://github.com/brndnmtthws/conky"
        }
    },
    "consul": {
        "common": {
            "Examples": {
                "Check the Consul version": "consul --version",
                "Show general help": "consul --help",
                "Show help for a sub-command": "consul {{sub-command}} --help"
            },
            "Explanation": "Distributed key-value store with health checking and service discovery.",
            "More Information Link": "https://www.consul.io/docs/commands/index.html"
        }
    },
    "consul-kv": {
        "common": {
            "Examples": {
                "Delete a key-value pair": "consul kv delete {{key}}",
                "Read a value from the key-value store": "consul kv get {{key}}",
                "Store a new key-value pair": "consul kv put {{key}} {{value}}"
            },
            "Explanation": "Distributed key-value store with health checking and service discovery.",
            "More Information Link": "https://learn.hashicorp.com/consul/getting-started/kv"
        }
    },
    "convert": {
        "common": {
            "Examples": {
                "Convert an image from JPG to PNG": "convert {{image.jpg}} {{image.png}}",
                "Create a gif from a series of images with 100ms delay between them": "convert {{image1.png}} {{image2.png}} {{image3.png}} -delay {{10}} {{animation.gif}}",
                "Create an image with nothing but a solid background": "convert -size {{800x600}} \"xc:{{#ff0000}}\" {{image.png}}",
                "Horizontally append images": "convert {{image1.png}} {{image2.png}} {{image3.png}} +append {{image123.png}}",
                "Scale an image 50% its original size": "convert {{image.png}} -resize 50% {{image2.png}}",
                "Scale an image keeping the original aspect ratio to a maximum dimension of 640x480": "convert {{image.png}} -resize 640x480 {{image2.png}}",
                "Vertically append images": "convert {{image1.png}} {{image2.png}} {{image3.png}} -append {{image123.png}}"
            },
            "Explanation": "Imagemagick image conversion tool.",
            "More Information Link": "https://imagemagick.org/script/convert.php"
        }
    },
    "convmv": {
        "common": {
            "Examples": {
                "Convert filename encoding and rename the file to the new encoding": "convmv -f {{from_encoding}} -t {{to_encoding}} --notest {{input_file}}",
                "Test filename encoding conversion (don't actually change the filename)": "convmv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}"
            },
            "Explanation": "Convert filenames (NOT file content) from one encoding to another.",
            "More Information Link": "https://www.j3e.de/linux/convmv/man/"
        }
    },
    "copyq": {
        "common": {
            "Examples": {
                "Copy a JPEG image into the clipboard": "copyq copy image/jpeg < {{image.jpg}}",
                "Copy a file's contents into the clipboard": "copyq copy < {{file.txt}}",
                "Insert raw text into the clipboard history": "copyq add -- {{text1}} {{text2}} {{text3}}",
                "Insert text containing escape sequences ('\\n', '\\t') into the clipboard history": "copyq add {{firstline\\nsecondline}}",
                "Launch CopyQ to store clipboard history": "copyq",
                "Print the content of the first 3 items in the clipboard history": "copyq read 0 1 2",
                "Show current clipboard content": "copyq clipboard"
            },
            "Explanation": "Clipboard manager with advanced features.",
            "More Information Link": "https://hluk.github.io/CopyQ/"
        }
    },
    "cordova": {
        "common": {
            "Examples": {
                "Add a cordova platform": "cordova platform add {{platform}}",
                "Add a cordova plugin": "cordova plugin add {{pluginid}}",
                "Create a cordova project": "cordova create {{path}} {{package_name}} {{project_name}}",
                "Display the current workspace status": "cordova info",
                "Remove a cordova platform": "cordova platform remove {{platform}}",
                "Remove a cordova plugin": "cordova plugin remove {{pluginid}}"
            },
            "Explanation": "Mobile apps with HTML, CSS & JS.",
            "More Information Link": "https://cordova.apache.org/docs/en/latest/guide/cli/"
        }
    },
    "cotton": {
        "common": {
            "Examples": {
                "Disable certificate verification (insecure mode)": "cotton -u {{base_url}} -i {{file}}.md",
                "Stop running when a test fails": "cotton -u {{base_url}} -s {{file}}.md",
                "Use a specific base url": "cotton -u {{base_url}} {{file}}.md"
            },
            "Explanation": "Markdown test specification runner.",
            "More Information Link": "https://github.com/chonla/cotton"
        }
    },
    "couchdb": {
        "common": {
            "Examples": {
                "Kill the background process (Note: It will respawn if needed)": "couchdb -k",
                "Shutdown the background process": "couchdb -d",
                "Start couchdb": "couchdb",
                "Start couchdb as a background process": "couchdb -b",
                "Start couchdb interactive shell": "couchdb -i"
            },
            "Explanation": "Command line interface for Apache CouchDB database server.",
            "More Information Link": "https://couchdb.apache.org"
        }
    },
    "cowsay": {
        "common": {
            "Examples": {
                "List all available characters": "cowsay -l",
                "Print a stoned thinking ASCII cow": "cowthink -s \"I'm just a cow, not a great thinker ...\"",
                "Print an ASCII cow saying \"Hello world!\"": "cowsay \"Hello world!\"",
                "Print an ASCII dragon saying \"Hello!\"": "cowsay -f dragon \"Hello!\"",
                "Use text from standard input for the balloon": "echo \"Hello!\" | cowsay"
            },
            "Explanation": "Generate an ASCII character (by default a cow) saying or thinking something.",
            "More Information Link": "https://github.com/tnalpgge/rank-amateur-cowsay"
        }
    },
    "cp": {
        "common": {
            "Examples": {
                "Copy a directory recursively, in verbose mode (shows files as they are copied)": "cp -vR {{path/to/source_directory}} {{path/to/target_directory}}",
                "Copy a file into another directory, keeping the filename": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
                "Copy a file to another location": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
                "Copy text files to another location, in interactive mode (prompts user before overwriting)": "cp -i {{*.txt}} {{path/to/target_directory}}",
                "Dereference symbolic links before copying": "cp -L {{link}} {{path/to/target_directory}}",
                "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)": "cp -R {{path/to/source_directory}} {{path/to/target_directory}}"
            },
            "Explanation": "Copy files and directories.",
            "More Information Link": ""
        },
        "linux": {
            "Examples": {
                "Copy a directory recursively, in verbose mode (shows files as they are copied)": "cp -vr {{path/to/source_directory}} {{path/to/target_directory}}",
                "Copy a file into another directory, keeping the filename": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
                "Copy a file to another location": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
                "Copy text files to another location, in interactive mode (prompts user before overwriting)": "cp -i {{*.txt}} {{path/to/target_directory}}",
                "Dereference symbolic links before copying": "cp -L {{link}} {{path/to/target_directory}}",
                "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
                "Use the full path of source files, creating any missing intermediate directories when copying": "cp --parents {{source/path/to/file}} {{path/to/target_file}}"
            },
            "Explanation": "Copy files and directories.",
            "More Information Link": ""
        }
    },
    "cpdf": {
        "common": {
            "Examples": {
                "Create a new document from an existing one with additional metadata": "cpdf -set-metadata {{path/to/metadata.xml}} {{path/to/source_document.pdf}} -o {{path/to/destination_document.pdf}}",
                "Decrypt a document using the owner password `fred`": "cpdf -decrypt {{path/to/encrypted_document.pdf}} owner={{fred}} -o {{path/to/decrypted_document.pdf}}",
                "Encrypt a document using 128bit encryption, providing `fred` as owner password and `joe` as user password": "cpdf -encrypt {{128bit}} {{fred}} {{joe}} {{path/to/source_document.pdf}} -o {{path/to/encrypted_document.pdf}}",
                "Merge two documents into a new one": "cpdf -merge {{path/to/source_document_one.pdf}} {{path/to/source_document_two.pdf}} -o {{path/to/destination_document.pdf}}",
                "Select pages 1, 2, 3 and 6 from a source document and write those to a destination document": "cpdf {{path/to/source_document.pdf}} {{1-3,6}} -o {{path/to/destination_document.pdf}}",
                "Show the annotations of a document": "cpdf -list-annotations {{path/to/document.pdf}}",
                "Show the bookmarks of a document": "cpdf -list-bookmarks {{path/to/document.pdf}}",
                "Split a document into ten-page chunks, writing them to chunk001.pdf, chunk002.pdf, etc": "cpdf -split {{path/to/document.pdf}} -o {{path/to/chunk%%%.pdf}} -chunk {{10}}"
            },
            "Explanation": "CLI to manipulate existing PDF files in a variety of ways.",
            "More Information Link": "https://www.coherentpdf.com/cpdfmanual/cpdfmanual.html"
        }
    },
    "cpio": {
        "common": {
            "Examples": {
                "Copy all files and directories in a directory and add them [o]nto an archive, in [v]erbose mode": "find {{path/to/directory}} | cpio -ov > {{archive.cpio}}",
                "P[i]ck all files from an archive, generating [d]irectories where needed, in [v]erbose mode": "cpio -idv < {{archive.cpio}}",
                "Take a list of file names from standard input and add them [o]nto an archive in cpio's binary format": "echo \"{{file1}} {{file2}} {{file3}}\" | cpio -o > {{archive.cpio}}"
            },
            "Explanation": "Copies files in and out of archives.\nSupports the following archive formats: cpio's custom binary, old ASCII, new ASCII, crc, HPUX binary, HPUX old ASCII, old tar, and POSIX.1 tar.",
            "More Information Link": "https://www.gnu.org/software/cpio"
        }
    },
    "cppcheck": {
        "common": {
            "Examples": {
                "Check a Microsoft Visual Studio project (`*.vcxproj`) or solution (`*.sln`)": "cppcheck --project={{path/to/project.sln}}",
                "Check a given file, ignoring specific tests": "cppcheck --suppress={{test_id1}} --suppress={{test_id2}} {{path/to/file.cpp}}",
                "Check a given file, specifying which tests to perform (by default only errors are shown)": "cppcheck --enable={{error|warning|style|performance|portability|information|all}} {{path/to/file.cpp}}",
                "Check the current directory, providing paths for include files located outside it (e.g. external libraries)": "cppcheck -I {{include/directory_1}} -I {{include/directory_2}} .",
                "List available tests": "cppcheck --errorlist",
                "Recursively check a given directory, and don't print progress messages": "cppcheck --quiet {{path/to/directory}}",
                "Recursively check the current directory, showing progress on the screen and logging error messages to a file": "cppcheck . 2> cppcheck.log"
            },
            "Explanation": "A static analysis tool for C/C++ code.\nInstead of syntax errors, it focuses on the types of bugs that compilers normally do not detect.",
            "More Information Link": "http://cppcheck.sourceforge.net"
        }
    },
    "cppclean": {
        "common": {
            "Examples": {
                "Run in a project's directory": "cppclean {{path/to/project}}",
                "Run on a project where the headers are in the \"inc1/\" and \"inc2/\" directories": "cppclean {{path/to/project}} --include-path={{inc1}} --include-path={{inc2}}",
                "Run on a specific file \"main.cpp\"": "cppclean {{main.cpp}}",
                "Run on the current directory, excluding the \"build\" directory": "cppclean {{.}} --exclude={{build}}"
            },
            "Explanation": "Find unused code in C++ projects.",
            "More Information Link": "https://github.com/myint/cppclean"
        }
    },
    "cpufreq-aperf": {
        "linux": {
            "Examples": {
                "Calculate only once": "sudo cpufreq-aperf -o",
                "Start calculating for CPU 1 only": "sudo cpufreq-aperf -c {{1}}",
                "Start calculating with a 3 seconds refresh interval for all CPU cores": "sudo cpufreq-aperf -i {{3}}",
                "Start calculating, defaulting to all CPU cores and 1 second refresh interval": "sudo cpufreq-aperf"
            },
            "Explanation": "Calculate the average CPU frequency over a time period.\nRequires root privileges.",
            "More Information Link": ""
        }
    },
    "cpufreq-info": {
        "linux": {
            "Examples": {
                "Show CPU frequency information for all CPUs": "cpufreq-info",
                "Show CPU frequency information for the specified CPU": "cpufreq-info -c {{cpu_number}}",
                "Show available CPU frequency policies": "cpufreq-info -g",
                "Show current CPU work frequency in a human-readable format, according to the cpufreq kernel module": "cpufreq-info -f -m",
                "Show current CPU work frequency in a human-readable format, by reading it from hardware (only available to root)": "sudo cpufreq-info -w -m",
                "Show the allowed minimum and maximum CPU frequency": "cpufreq-info -l",
                "Show the current minimum and maximum CPU frequency and policy in table format": "cpufreq-info -o"
            },
            "Explanation": "A tool to show CPU frequency information.",
            "More Information Link": ""
        }
    },
    "cpufreq-set": {
        "linux": {
            "Examples": {
                "Set the CPU frequency policy of CPU 1 to \"userspace\"": "sudo cpufreq-set -c {{1}} -g {{userspace}}",
                "Set the current maximum CPU frequency of CPU 1": "sudo cpufreq-set -c {{1}} --max {{max_frequency}}",
                "Set the current minimum CPU frequency of CPU 1": "sudo cpufreq-set -c {{1}} --min {{min_frequency}}",
                "Set the current work frequency of CPU 1": "sudo cpufreq-set -c {{1}} -f {{work_frequency}}"
            },
            "Explanation": "A tool to modify CPU frequency settings.\nThe frequency value should range between the output of command `cpufreq-info -l`.",
            "More Information Link": ""
        }
    },
    "cpuid": {
        "linux": {
            "Examples": {
                "Display information for all CPUs": "cpuid",
                "Display information only for the current CPU": "cpuid -1",
                "Display raw hex information with no decoding": "cpuid -r"
            },
            "Explanation": "Display detailed information about all CPUs.",
            "More Information Link": ""
        }
    },
    "cpulimit": {
        "linux": {
            "Examples": {
                "Kill its process if the program's CPU usage goes over 50%": "cpulimit --limit 50 --kill -- {{program}}",
                "Launch a given program and limit it to only use 50% of the CPU": "cpulimit --limit {{50}} -- {{program arg1 arg2 ...}}",
                "Launch a program, limit its CPU usage to 50% and run cpulimit in the background": "cpulimit --limit {{50}} --background -- {{program}}",
                "Limit an existing process with PID 1234 to only use 25% of the CPU": "cpulimit --pid {{1234}} --limit {{25%}}",
                "Limit an existing program by its executable name": "cpulimit --exe {{program}} --limit {{25}}",
                "Throttle both it and its child processes so that none go about 25% CPU": "cpulimit --limit {{25}} --monitor-forks -- {{program}}"
            },
            "Explanation": "A tool to throttle the CPU usage of other processes.",
            "More Information Link": "http://cpulimit.sourceforge.net/"
        }
    },
    "cradle": {
        "common": {
            "Examples": {
                "Connect to a server": "cradle connect {{server_name}}",
                "Display general help": "cradle help",
                "Display help for a specific command": "cradle {{command}} help",
                "Execute a Cradle command": "cradle {{command}}"
            },
            "Explanation": "The Cradle PHP framework.\nSee `cradle-install`, `cradle-deploy` and other pages for additional information.",
            "More Information Link": "https://cradlephp.github.io"
        }
    },
    "cradle deploy": {
        "common": {
            "Examples": {
                "Deploy Cradle to a server": "cradle deploy production",
                "Deploy static assets including the \"upload\" directory": "cradle deploy s3 --include-upload",
                "Deploy static assets including the Yarn \"components\" directory": "cradle deploy s3 --include-yarn",
                "Deploy static assets to Amazon S3": "cradle deploy s3"
            },
            "Explanation": "Manage Cradle deployments.",
            "More Information Link": "https://cradlephp.github.io/docs/3.B.-Reference-Command-Line-Tools.html#deploy"
        }
    },
    "cradle elastic": {
        "common": {
            "Examples": {
                "Populate the ElasticSearch indices for a specific package": "cradle elastic populate {{package_name}}",
                "Populate the ElasticSearch indices for all packages": "cradle elastic populate",
                "Submit the ElasticSearch schema": "cradle elastic map",
                "Submit the ElasticSearch schema for a specific package": "cradle elastic map {{package_name}}",
                "Truncate the ElasticSearch index": "cradle elastic flush",
                "Truncate the ElasticSearch index for a specific package": "cradle elastic flush {{package_name}}"
            },
            "Explanation": "Manage the ElasticSearch instances for a Cradle instance.",
            "More Information Link": "https://cradlephp.github.io/docs/3.B.-Reference-Command-Line-Tools.html#elastic"
        }
    },
    "cradle install": {
        "common": {
            "Examples": {
                "Forcefully overwrite files": "cradle install --force",
                "Install Cradle's components (User will be prompted for further details)": "cradle install",
                "Skip running SQL migrations": "cradle install --skip-sql",
                "Skip running package updates": "cradle install --skip-versioning",
                "Use specific database details": "cradle install -h {{hostname}} -u {{username}} -p {{password}}"
            },
            "Explanation": "Installs the Cradle PHP framework components.",
            "More Information Link": "https://cradlephp.github.io/docs/3.B.-Reference-Command-Line-Tools.html#install"
        }
    },
    "cradle package": {
        "common": {
            "Examples": {
                "Display a list of available packages": "cradle package list",
                "Install a package from Packagist": "cradle package install {{package}}",
                "Install a specific version of a package": "cradle package install {{package}} {{version}}",
                "Remove a specific package": "cradle package remove {{package}}",
                "Search for a package": "cradle package search {{package}}",
                "Update a package": "cradle package update {{package}}",
                "Update a package to a specific version": "cradle package update {{package}} {{version}}"
            },
            "Explanation": "Manage packages for a Cradle instance.",
            "More Information Link": "https://cradlephp.github.io/docs/3.B.-Reference-Command-Line-Tools.html#package"
        }
    },
    "cradle sql": {
        "common": {
            "Examples": {
                "Empty the database tables for a specific package": "cradle sql flush {{package_name}}",
                "Empty the entire database": "cradle sql flush",
                "Populate the tables for a specific package": "cradle sql populate {{package_name}}",
                "Populate the tables for all packages": "cradle sql populate",
                "Rebuild the database schema": "cradle sql build",
                "Rebuild the database schema for a specific package": "cradle sql build {{package_name}}"
            },
            "Explanation": "Manage Cradle SQL databases.",
            "More Information Link": "https://cradlephp.github.io/docs/3.B.-Reference-Command-Line-Tools.html#sql"
        }
    },
    "create_ap": {
        "linux": {
            "Examples": {
                "Choose a different WiFi adapter driver": "create_ap --driver {{wifi_adapter}} {{wlan0}} {{eth0}} {{access_point_ssid}} {{passphrase}}",
                "Create a bridged network with Internet sharing": "create_ap -m bridge {{wlan0}} {{eth0}} {{access_point_ssid}} {{passphrase}}",
                "Create a bridged network with Internet sharing and a pre-configured bridge interface": "create_ap -m bridge {{wlan0}} {{br0}} {{access_point_ssid}} {{passphrase}}",
                "Create an access point without Internet sharing": "create_ap -n {{wlan0}} {{acces_point_ssid}} {{passphrase}}",
                "Create an access port for Internet sharing from the same WiFi interface": "create_ap {{wlan0}} {{wlan0}} {{access_point_ssid}} {{passphrase}}",
                "Create an open network with no passphrase": "create_ap {{wlan0}} {{eth0}} {{access_point_ssid}}",
                "Use a WPA + WPA2 passphrase": "create_ap {{wlan0}} {{eth0}} {{access_point_ssid}} {{passphrase}}"
            },
            "Explanation": "Create an AP (Access Point) at any channel.",
            "More Information Link": ""
        }
    },
    "croc": {
        "common": {
            "Examples": {
                "Display parameters and options for a croc command": "croc {{send|relay}} --help",
                "Host a croc relay on the default ports": "croc relay",
                "Receive a file or folder on receiving machine": "croc {{passphrase}}",
                "Receive and connect over a custom relay": "croc --relay {{ip_to_relay}} {{passphrase}}",
                "Send a file or folder": "croc send {{path/to/file}}",
                "Send a file or folder with a specific passphrase": "croc send --code {{passphrase}} {{path/to/file}}",
                "Send and connect over a custom relay": "croc --relay {{ip_to_relay}} send {{path/to/file}}"
            },
            "Explanation": "Send and receive files easily and securely over any network.",
            "More Information Link": "https://github.com/schollz/croc"
        }
    },
    "crontab": {
        "common": {
            "Examples": {
                "Edit the crontab file for a specific user": "sudo crontab -e -u {{user}}",
                "Edit the crontab file for the current user": "crontab -e",
                "Remove all cron jobs for the current user": "crontab -r",
                "Sample job which runs a certain script at 02:30 every Friday": "30 2 * * Fri {{/absolute/path/to/script.sh}}",
                "Sample job which runs at 10:00 every day (* means any value)": "0 10 * * * {{command_to_execute}}",
                "Sample job which runs every minute on the 3rd of April": "* * 3 Apr * {{command_to_execute}}",
                "View a list of existing cron jobs for current user": "crontab -l"
            },
            "Explanation": "Schedule cron jobs to run on a time interval for the current user.\nJob definition format: \"(min) (hour) (day_of_month) (month) (day_of_week) command_to_execute\".",
            "More Information Link": ""
        }
    },
    "crunch": {
        "common": {
            "Examples": {
                "Output a list of all permutations of abc (lengths are not processed)": "crunch {{1}} {{1}} -p {{abc}}",
                "Output a list of all permutations of the given strings (lengths are not processed)": "crunch {{1}} {{1}} -p {{abc}} {{def}} {{ghi}}",
                "Output a list of hexadecimal words of length 8": "crunch {{8}} {{8}} {{0123456789abcdef}}",
                "Output a list of words generated according to the given pattern and a maximum number of duplicate letters": "crunch {{5}} {{5}} {{abcde123}} -t {{@@@12}} -d 2@",
                "Output a list of words of length 1 to 3 with only lowercase characters": "crunch {{1}} {{3}}",
                "Write a list of words in chunk files of a given size, starting with the given string": "crunch {{3}} {{5}} -o {{START}} -b {{10kb}} -s {{abc}}",
                "Write a list of words in compressed chunk files with a specified number of words": "crunch {{1}} {{5}} -o {{START}} -c {{1000}} -z {{gzip|bzip2|lzma|7z}}",
                "Write a list of words stopping with the given string and inverting the wordlist": "crunch {{1}} {{5}} -o {{START}} -e {{abcde}} -i"
            },
            "Explanation": "Wordlist generator.",
            "More Information Link": "https://sourceforge.net/projects/crunch-wordlist/"
        }
    },
    "cryfs": {
        "common": {
            "Examples": {
                "Automatically unmount after ten minutes of inactivity": "cryfs --unmount-idle {{10}} {{path/to/cipher_dir}} {{path/to/mount_point}}",
                "Mount an encrypted filesystem. The initialization wizard will be started on the first execution": "cryfs {{path/to/cipher_dir}} {{path/to/mount_point}}",
                "Show a list of supported ciphers": "cryfs --show-ciphers",
                "Unmount an encrypted filesystem": "cryfs-unmount {{path/to/mount_point}}"
            },
            "Explanation": "A cryptographic filesystem for the cloud.",
            "More Information Link": "https://www.cryfs.org/"
        }
    },
    "cryptsetup": {
        "linux": {
            "Examples": {
                "Change the LUKS volume's passphrase": "cryptsetup luksChangeKey {{/dev/sda1}}",
                "Initialize a LUKS volume (overwrites all data on the partition)": "cryptsetup luksFormat {{/dev/sda1}}",
                "Open a LUKS volume and create a decrypted mapping at /dev/mapper/{{target}}": "cryptsetup luksOpen {{/dev/sda1}} {{target}}",
                "Remove an existing mapping": "cryptsetup luksClose {{target}}"
            },
            "Explanation": "Manage plain dm-crypt and LUKS (Linux Unified Key Setup) encrypted volumes.",
            "More Information Link": ""
        }
    },
    "crystal": {
        "common": {
            "Examples": {
                "Compile a file and all dependencies to a single executable": "crystal build {{path/to/file.cr}}",
                "Create a project directory for a Crystal application": "crystal init app {{application_name}}",
                "Display all help options": "crystal help",
                "Run a Crystal file": "crystal {{path/to/file.cr}}",
                "Start a local interactive server for testing the language": "crystal play"
            },
            "Explanation": "Tool for managing Crystal source code.",
            "More Information Link": "https://crystal-lang.org/reference/using_the_compiler"
        }
    },
    "csc": {
        "common": {
            "Examples": {
                "Automatically generate XML documentation": "csc /doc:{{path/to/output.xml}} {{path/to/input_file.cs}}",
                "Compile into a '.dll' library instead of an executable": "csc /target:library {{path/to/input_file.cs}}",
                "Compile one or more C# files to a CIL executable": "csc {{path/to/input_file_a.cs}} {{path/to/input_file_b.cs}}",
                "Embed a resource": "csc /resource:{{path/to/resource_file}} {{path/to/input_file.cs}}",
                "Reference another assembly": "csc /reference:{{path/to/library.dll}} {{path/to/input_file.cs}}",
                "Specify an icon": "csc /win32icon:{{path/to/icon.ico}} {{path/to/input_file.cs}}",
                "Specify the output filename": "csc /out:{{path/to/filename}} {{path/to/input_file.cs}}",
                "Strongly-name the resulting assembly with a keyfile": "csc /keyfile:{{path/to/keyfile}} {{path/to/input_file.cs}}"
            },
            "Explanation": "The Microsoft C# Compiler.",
            "More Information Link": "https://docs.microsoft.com/dotnet/csharp/language-reference/compiler-options/command-line-building-with-csc-exe"
        }
    },
    "csplit": {
        "linux": {
            "Examples": {
                "Split a file at a line matching a regular expression": "csplit {{file}} /{{regex}}/",
                "Split a file at line 5 and use a custom prefix for the output files": "csplit {{file}} {{5}} -f {{prefix}}",
                "Split a file at lines 5 and 23": "csplit {{file}} {{5}} {{23}}",
                "Split a file every 5 lines (this will fail if the total number of lines is not divisible by 5)": "csplit {{file}} {{5}} {*}",
                "Split a file every 5 lines, ignoring exact-division error": "csplit -k {{file}} {{5}} {*}"
            },
            "Explanation": "Split a file into pieces.\nThis generates files named \"xx00\", \"xx01\", and so on.",
            "More Information Link": ""
        }
    },
    "csshX": {
        "osx": {
            "Examples": {
                "Connect to a pre-defined cluster from /etc/clusters": "csshX cluster1",
                "Connect to multiple hosts": "csshX {{hostname1}} {{hostname2}}",
                "Connect to multiple hosts with a given SSH key": "csshX {{user@hostname1}} {{user@hostname2}} '--ssh_args' '-i {{path/to/ssh_key.pem}}'"
            },
            "Explanation": "Cluster SSH tool for MacOS.",
            "More Information Link": "https://github.com/brockgr/csshx"
        }
    },
    "csslint": {
        "common": {
            "Examples": {
                "Lint a single CSS file": "csslint {{file.css}}",
                "Lint multiple CSS files": "csslint {{file1.css}} {{file2.css}} {{file3.css}}",
                "List all possible style rules": "csslint --list-rules",
                "Specify certain rules as errors (which result in a non-zero exit code)": "csslint --errors={{errors,universal-selector,imports}} {{file.css}}",
                "Specify certain rules as warnings": "csslint --warnings={{box-sizing,selector-max,floats}} {{file.css}}",
                "Specify certain rules to completely ignore": "csslint --ignore={{ids,rules-count,shorthand}} {{file.css}}"
            },
            "Explanation": "A linter for CSS code.",
            "More Information Link": "https://github.com/CSSLint/csslint/wiki/Command-line-interface"
        }
    },
    "csvclean": {
        "common": {
            "Examples": {
                "Clean a CSV file": "csvclean {{bad.csv}}",
                "List locations of syntax errors in a CSV file": "csvclean -n {{bad.csv}}"
            },
            "Explanation": "Finds and cleans common syntax errors in CSV files.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvclean.html"
        }
    },
    "csvcut": {
        "common": {
            "Examples": {
                "Extract all columns **except** the fourth one": "csvcut -C {{4}} {{data.csv}}",
                "Extract the columns named \"id\" and \"first name\" (in that order)": "csvcut -c {{id,\"first name\"}} {{data.csv}}",
                "Extract the first and third columns": "csvcut -c {{1,3}} {{data.csv}}",
                "Print indices and names of all columns": "csvcut -n {{data.csv}}"
            },
            "Explanation": "Filter and truncate CSV files. Like Unix's `cut` command, but for tabular data.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvcut.html"
        }
    },
    "csvformat": {
        "common": {
            "Examples": {
                "Convert delimiters to a custom character": "csvformat -D \"{{custom_character}}\" {{data.csv}}",
                "Convert line endings to carriage return (^M) + line feed": "csvformat -M \"{{\\r\\n}}\" {{data.csv}}",
                "Convert to a tab-delimited file (TSV)": "csvformat -T {{data.csv}}",
                "Maximize use of quote characters": "csvformat -U 1 {{data.csv}}",
                "Minimize use of quote characters": "csvformat -U 0 {{data.csv}}"
            },
            "Explanation": "Convert a CSV file to a custom output format.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvformat.html"
        }
    },
    "csvgrep": {
        "common": {
            "Examples": {
                "Find rows in which columns 3 or 4 match a certain regex pattern": "csvgrep -c {{3,4}} -r {{regex_pattern}} {{data.csv}}",
                "Find rows in which the \"name\" column does NOT include the string \"John Doe\"": "csvgrep -i -c {{name}} -m \"{{John Doe}}\" {{data.csv}}",
                "Find rows that have a certain string in column 1": "csvgrep -c {{1}} -m {{string_to_match}} {{data.csv}}"
            },
            "Explanation": "Filter CSV rows with string and pattern matching.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvgrep.html"
        }
    },
    "csvkit": {
        "common": {
            "Examples": {
                "Run a command on a CSV file with a custom delimiter": "{{cmd}} -d {{delimiter}} {{filename.csv}}",
                "Run a command on a CSV file with a custom quote character": "{{cmd}} -q {{quote_char}} {{filename.csv}}",
                "Run a command on a CSV file with a tab as a delimiter (overrides -d)": "{{cmd}} -t {{filename.csv}}",
                "Run a command on a CSV file with no header row": "{{cmd}} -H {{filename.csv}}"
            },
            "Explanation": "Manipulation toolkit for CSV files.\nSee the individual commands: `csvclean`, `csvcut`, `csvformat`, `csvgrep`, `csvlook`, `csvpy`, `csvsort`, `csvstat`.",
            "More Information Link": "https://csvkit.readthedocs.io/en/0.9.1/cli.html"
        }
    },
    "csvlook": {
        "common": {
            "Examples": {
                "View a CSV file": "csvlook {{data.csv}}"
            },
            "Explanation": "Render a CSV file in the console as a fixed-width table.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvlook.html"
        }
    },
    "csvpy": {
        "common": {
            "Examples": {
                "Load a CSV file into a `CSVKitDictReader` object": "csvpy --dict {{data.csv}}",
                "Load a CSV file into a `CSVKitReader` object": "csvpy {{data.csv}}"
            },
            "Explanation": "Loads a CSV file into a Python shell.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvpy.html"
        }
    },
    "csvsort": {
        "common": {
            "Examples": {
                "Sort a CSV file by column 2, then by column 4": "csvsort -c {{2,4}} {{data.csv}}",
                "Sort a CSV file by column 9": "csvsort -c {{9}} {{data.csv}}",
                "Sort a CSV file by the \"name\" column in descending order": "csvsort -r -c {{name}} {{data.csv}}",
                "Sort a CSV file without inferring data types": "csvsort --no-inference -c {{columns}} {{data.csv}}"
            },
            "Explanation": "Sorts CSV files.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvsort.html"
        }
    },
    "csvsql": {
        "common": {
            "Examples": {
                "Generate a `CREATE TABLE` SQL statement for a CSV file": "csvsql {{path/to/data.csv}}",
                "Import a CSV file into an SQL database": "csvsql --insert --db \"{{mysql://user:password@host/database}}\" {{data.csv}}",
                "Run an SQL query on a CSV file": "csvsql --query \"{{select * from 'data'}}\" {{data.csv}}"
            },
            "Explanation": "Generate SQL statements for a CSV file or execute those statements directly on a database.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvsql.html"
        }
    },
    "csvstat": {
        "common": {
            "Examples": {
                "Show all stats for all columns": "csvstat {{data.csv}}",
                "Show all stats for columns 2 and 4": "csvstat -c {{2,4}} {{data.csv}}",
                "Show sums for all columns": "csvstat --sum {{data.csv}}",
                "Show the max value length for column 3": "csvstat -c {{3}} --len {{data.csv}}",
                "Show the number of unique values in the \"name\" column": "csvstat -c {{name}} --unique {{data.csv}}"
            },
            "Explanation": "Print descriptive statistics for all columns in a CSV file.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/csvstat.html"
        }
    },
    "csvtool": {
        "common": {
            "Examples": {
                "Extract lines from a CSV file where the second column exactly matches 'Foo'": "csvtool --column {{2}} --search '{{^Foo$}}' {{path/to/file.csv}}",
                "Extract lines from a CSV file where the second column starts with 'Bar'": "csvtool --column {{2}} --search '{{^Bar}}' {{path/to/file.csv}}",
                "Extract the second and fourth columns from a CSV file": "csvtool --column {{2,4}} {{path/to/file.csv}}",
                "Extract the second column from a CSV file": "csvtool --column {{2}} {{path/to/file.csv}}",
                "Find lines in a CSV file where the second column ends with 'Baz' and then extract the third and sixth columns": "csvtool --column {{2}} --search '{{Baz$}}' {{path/to/file.csv}} | csvtool --no-header --column {{3,6}}"
            },
            "Explanation": "Utility to filter and extract data from CSV formatted sources.",
            "More Information Link": "https://github.com/maroofi/csvtool"
        }
    },
    "ctags": {
        "common": {
            "Examples": {
                "Generate tags for a single file, and output them to a file named \"tags\" in the current directory, overwriting the file if it exists": "ctags {{path/to/file}}",
                "Generate tags for all files in the current directory and all subdirectories": "ctags --recurse",
                "Generate tags for all files in the current directory, and output them to a specific file, overwriting the file if it exists": "ctags -f {{filename}} *"
            },
            "Explanation": "Generates an index (or tag) file of language objects found in source files for many popular programming languages.",
            "More Information Link": "https://ctags.io/"
        }
    },
    "ctest": {
        "common": {
            "Examples": {
                "Run a single test based on its name, or filter on a regular expression": "ctest --output-on-failure -R '^{{test_name}}$'",
                "Run all tests defined in the CMake project, executing 4 jobs at a time in parallel": "ctest -j{{4}} --output-on-failure",
                "Show a list of available tests": "ctest -N"
            },
            "Explanation": "CMake test driver program.",
            "More Information Link": "https://gitlab.kitware.com/cmake/community/wikis/doc/ctest/Testing-With-CTest"
        }
    },
    "ctrlaltdel": {
        "linux": {
            "Examples": {
                "Get current setting": "ctrlaltdel",
                "Set CRTL+ALT+DEL to reboot immediately, without any preparation": "sudo ctrlaltdel hard",
                "Set CTRL+ALT+DEL to reboot \"normally\", giving processes a chance to exit first (send SIGINT to PID1)": "sudo ctrlaltdel soft"
            },
            "Explanation": "Utility to control what happens when CTRL+ALT+DEL is pressed.",
            "More Information Link": ""
        }
    },
    "curl": {
        "common": {
            "Examples": {
                "Download a file, following [L]ocation redirects, and automatically [C]ontinuing (resuming) a previous file transfer": "curl -O -L -C - {{http://example.com/filename}}",
                "Download a file, saving the output under the filename indicated by the URL": "curl -O {{http://example.com/filename}}",
                "Download the contents of an URL to a file": "curl {{http://example.com}} -o {{filename}}",
                "Pass a user name and password for server authentication": "curl -u myusername:mypassword {{http://example.com}}",
                "Pass client certificate and key for a resource, skipping certificate validation": "curl --cert {{client.pem}} --key {{key.pem}} --insecure {{https://example.com}}",
                "Send a request with an extra header, using a custom HTTP method": "curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}",
                "Send data in JSON format, specifying the appropriate content-type header": "curl -d {{'{\"name\":\"bob\"}'}} -H {{'Content-Type: application/json'}} {{http://example.com/users/1234}}",
                "Send form-encoded data (POST request of type `application/x-www-form-urlencoded`). Use `-d @file_name` or `-d @'-'` to read from STDIN": "curl -d {{'name=bob'}} {{http://example.com/form}}"
            },
            "Explanation": "Transfers data from or to a server.\nSupports most protocols, including HTTP, FTP, and POP3.",
            "More Information Link": "https://curl.haxx.se"
        }
    },
    "cut": {
        "common": {
            "Examples": {
                "Cut out everything from the 3rd character to the end of each line": "cut -c {{3-}}",
                "Cut out the 2nd and 10th fields of each line, using a semicolon as a delimiter": "cut -d'{{;}}' -f{{2,10}}",
                "Cut out the fields 3 through to the end of each line, using a space as a delimiter": "cut -d'{{ }}' -f{{3-}}",
                "Cut out the fifth field of each line, using a colon as a field delimiter (default delimiter is tab)": "cut -d'{{:}}' -f{{5}}",
                "Cut out the first sixteen characters of each line of `stdin`": "cut -c {{1-16}}",
                "Cut out the first sixteen characters of each line of the given files": "cut -c {{1-16}} {{file}}"
            },
            "Explanation": "Cut out fields from `stdin` or files.",
            "More Information Link": ""
        }
    },
    "daemonize": {
        "linux": {
            "Examples": {
                "Run a command as a daemon": "daemonize {{command}} {{command_arguments}}",
                "Use a lock file to ensure that only one instance runs at a time": "daemonize -l {{path/to/lockfile}} {{command}} {{command_arguments}}",
                "Use the specified user account": "sudo daemonize -u {{user}} {{command}} {{command_arguments}}",
                "Write the pid to the specified file": "daemonize -p {{path/to/pidfile}} {{command}} {{command_arguments}}"
            },
            "Explanation": "Run a command (that does not daemonize itself) as a Unix daemon.",
            "More Information Link": "http://software.clapper.org/daemonize/"
        }
    },
    "darkhttpd": {
        "common": {
            "Examples": {
                "Listen only on specified IP address (by default, the server listens on all interfaces)": "darkhttpd {{path/to/docroot}} --addr {{ip_address}}",
                "Start server on specified port (port 8080 by default if running as non-root user)": "darkhttpd {{path/to/docroot}} --port {{port}}",
                "Start server serving the specified document root": "darkhttpd {{path/to/docroot}}"
            },
            "Explanation": "Darkhttpd web server.",
            "More Information Link": "https://unix4lyfe.org/darkhttpd"
        }
    },
    "dash": {
        "linux": {
            "Examples": {
                "Execute a command": "dash -c \"{{command}}\"",
                "Run commands from a file": "dash {{file.sh}}",
                "Run commands from a file, logging all commands executed to the terminal": "dash -x {{file.sh}}",
                "Start interactive shell": "dash"
            },
            "Explanation": "Debian Almquist Shell.\nModern POSIX-compliant implementation of `sh` (isn't Bash compatible).",
            "More Information Link": ""
        }
    },
    "datamash": {
        "linux": {
            "Examples": {
                "Get max, min, mean and median of a single column of numbers": "seq 3 | datamash max 1 min 1 mean 1 median 1",
                "Get the mean of a single column of float numbers (floats must use \",\" and not \".\")": "echo -e '1.0\\n2.5\\n3.1\\n4.3\\n5.6\\n5.7' | tr '.' ',' | datamash mean 1",
                "Get the mean of a single column of numbers ignoring \"Na\" and \"NaN\" (literal) strings": "echo -e '1\\n2\\nNa\\n3\\nNaN' | datamash --narm mean 1",
                "Get the mean of a single column of numbers with a given decimal precision": "echo -e '1\\n2\\n3\\n4\\n5\\n5' | datamash -R {{number_of_decimals_wanted}} mean 1"
            },
            "Explanation": "Tool to perform basic numeric, textual and statistical operations on input textual data files.",
            "More Information Link": ""
        }
    },
    "date": {
        "common": {
            "Examples": {
                "Convert a specific date to the Unix timestamp format": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
                "Display a specific date (represented as a Unix timestamp) using the default format": "date -d @1473305798",
                "Display the current date as a Unix timestamp (seconds since the Unix epoch)": "date +%s",
                "Display the current date in UTC and ISO 8601 format": "date -u +\"%Y-%m-%dT%H:%M:%S%Z\"",
                "Display the current date using the RFC-3339 format (`YYYY-MM-DD hh:mm:ss TZ`)": "date --rfc-3339=s",
                "Display the current date using the default locale's format": "date +\"%c\""
            },
            "Explanation": "Set or display the system date.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Display a specific date (represented as a Unix timestamp) using the default format": "date -r 1473305798",
                "Display the current date as a Unix timestamp (seconds since the Unix epoch)": "date +%s",
                "Display the current date in UTC and ISO 8601 format": "date -u +\"%Y-%m-%dT%H:%M:%S%Z\"",
                "Display the current date using the default locale's format": "date +\"%c\""
            },
            "Explanation": "Set or display the system date.",
            "More Information Link": ""
        }
    },
    "dbus-daemon": {
        "linux": {
            "Examples": {
                "Force the message bus to write to the system log for messages": "dbus-daemon --syslog",
                "Output the process id to `stdout`": "dbus-daemon --print-pid",
                "Run the daemon with a configuration file": "dbus-daemon --config-file {{path/to/file}}",
                "Run the daemon with the standard per-login-session message bus configuration": "dbus-daemon --session",
                "Run the daemon with the standard systemwide message bus configuration": "dbus-daemon --system",
                "Set the address to listen on and override the configuration value for it": "dbus-daemon --address {{address}}"
            },
            "Explanation": "The D-Bus message daemon, allowing multiple programs to exchange messages.",
            "More Information Link": ""
        }
    },
    "dc": {
        "common": {
            "Examples": {
                "Calculate 4 times 5 [4 5 *], subtract 17 [17 -], and [p]rint the output (using echo)": "echo \"4 5 * 17 - p\"| dc",
                "Calculate the golden ratio, phi: Set number of decimal places to 100 [100 k], square root of 5 [5 v] plus 1 [1 +], divided by 2 [2 /], and [p]rint result": "dc -e \"100 k 5 v 1 + 2 / p\"",
                "Execute dc script in file": "dc -f {{file}}",
                "Run calculator in interactive mode": "dc",
                "Set number of decimal places to 7 [7 k], calculate 5 divided by -3 [5 _3 /] and [p]rint (using dc -e)": "dc -e \"7 k 5 _3 / p\""
            },
            "Explanation": "An arbitrary precision calculator. Uses reverse polish notation (RPN).",
            "More Information Link": ""
        }
    },
    "dcfldd": {
        "common": {
            "Examples": {
                "Copy a disk to a raw image file and hash the image using SHA256": "dcfldd if=/dev/{{disk_device}} of={{file.img}} hash=sha256 hashlog={{file.hash}}",
                "Copy a disk to a raw image file, hashing each 1GB chunk": "dcfldd if=/dev/{{disk_device}} of={{file.img}} hash={{sha512|sha384|sha256|sha1|md5}} hashlog={{file.hash}} hashwindow={{1G}}"
            },
            "Explanation": "Enhanced version of dd for forensics and security.",
            "More Information Link": "http://dcfldd.sourceforge.net/"
        }
    },
    "dcg": {
        "common": {
            "Examples": {
                "Directly specify the kind of code to generate": "dcg {{service|plugin|theme|module|form}}",
                "Generate the code in a specific directory": "dcg --directory {{path/to/directory}}",
                "Start a wizard to choose what kind of code (e.g. module, service, form, etc.) to generate": "dcg"
            },
            "Explanation": "Drupal code generator.",
            "More Information Link": "https://github.com/Chi-teck/drupal-code-generator"
        }
    },
    "dd": {
        "common": {
            "Examples": {
                "Benchmark the write performance of a disk": "dd if=/dev/zero of={{file_1GB}} bs=1024 count=1000000",
                "Check progress of an ongoing dd operation (Run this command from another shell)": "kill -USR1 $(pgrep ^dd)",
                "Clone a drive to another drive with 4MB block, ignore error and show progress": "dd if=/dev/{{source_drive}} of=/dev/{{dest_drive}} bs=4M conv=noerror status=progress",
                "Generate a file of 100 random bytes by using kernel random driver": "dd if=/dev/urandom of={{random_file}} bs=100 count=1",
                "Make a bootable usb drive from an isohybrid file (such like archlinux-xxx.iso) and show the progress": "dd if={{file.iso}} of=/dev/{{usb_drive}} status=progress"
            },
            "Explanation": "Convert and copy a file.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Benchmark the write performance of a disk": "dd if=/dev/zero of={{file_1GB}} bs=1024 count=1000000",
                "Clone a drive to another drive with 4MB block and ignore error": "dd if=/dev/{{source_drive}} of=/dev/{{dest_drive}} bs=4m conv=noerror",
                "Generate a file of 100 random bytes by using kernel random driver": "dd if=/dev/urandom of={{random_file}} bs=100 count=1",
                "Make a bootable usb drive from an isohybrid file (such like archlinux-xxx.iso)": "dd if={{file.iso}} of=/dev/{{usb_drive}}"
            },
            "Explanation": "Convert and copy a file.",
            "More Information Link": ""
        }
    },
    "ddrescue": {
        "linux": {
            "Examples": {
                "Clone Disk A to Disk B, creating a log file": "sudo ddrescue --force --no-scrape {{/dev/sda}} {{/dev/sdb}} {{path/to/log.txt}}",
                "Take an image of a device, creating a log file": "sudo ddrescue {{/dev/sdb}} {{path/to/image.dd}} {{path/to/log.txt}}"
            },
            "Explanation": "Data recovery tool that reads data from damaged block devices.",
            "More Information Link": "https://www.gnu.org/software/ddrescue/"
        }
    },
    "debchange": {
        "linux": {
            "Examples": {
                "Add a changelog entry to close the bug with specified ID": "debchange --closes {{bug_id}}",
                "Add a changelog entry to the current version": "debchange --append",
                "Add a new version for a non-maintainer upload to the changelog": "debchange --nmu"
            },
            "Explanation": "Tool for maintenance of the debian/changelog file in a Debian source package.",
            "More Information Link": "https://manpages.debian.org/debchange"
        }
    },
    "debman": {
        "linux": {
            "Examples": {
                "Read a man page for a command that is provided by a specified package name": "debman -p {{package_name}} {{command_name}}",
                "Read a man page in a .deb file": "debman -f {{path/to/filename.deb}} {{command_name}}",
                "Specify a package version to download": "debman -p {{package_name}}={{version}} {{command_name}}"
            },
            "Explanation": "Read man pages from uninstalled packages.",
            "More Information Link": ""
        }
    },
    "debugfs": {
        "linux": {
            "Examples": {
                "Close the filesystem": "close -a",
                "List all available commands": "lr",
                "Open the filesystem in read only mode": "debugfs {{/dev/sdXN}}",
                "Open the filesystem in read write mode": "debugfs -w {{/dev/sdXN}}",
                "Read commands from a specified file, execute them and then exit": "debugfs -f {{path/to/cmd_file}} {{/dev/sdXN}}",
                "View the filesystem stats in debugfs console": "stats"
            },
            "Explanation": "An interactive ext2/ext3/ext4 filesystem debugger.",
            "More Information Link": ""
        }
    },
    "debuild": {
        "linux": {
            "Examples": {
                "Build a binary package only": "debuild -b",
                "Build the package in the current directory": "debuild",
                "Do not run lintian after building the package": "debuild --no-lintian"
            },
            "Explanation": "Tool to build a Debian package from source.",
            "More Information Link": "https://manpages.debian.org/debuild"
        }
    },
    "decaffeinate": {
        "common": {
            "Examples": {
                "Convert a CoffeeScript file to JavaScript": "decaffeinate {{path/to/file.coffee}}",
                "Convert a CoffeeScript v2 file to JavaScript": "decaffeinate --use-cs2 {{path/to/file.coffee}}",
                "Convert a CoffeeScript, allowing named exports": "decaffeinate --loose-js-modules {{path/to/file.coffee}}",
                "Convert require and module.exports to import and export": "decaffeinate --use-js-modules {{path/to/file.coffee}}"
            },
            "Explanation": "Move your CoffeeScript source to modern JavaScript.",
            "More Information Link": "https://decaffeinate-project.org"
        }
    },
    "deemix": {
        "common": {
            "Examples": {
                "Create a portable deemix config in the current directory": "deemix --portable --bitrate {{bitrate}} --path {{path}} {{url}}",
                "Download a track or playlist": "deemix {{https://www.deezer.com/us/track/00000000}}",
                "Download to a specific path": "deemix --bitrate {{bitrate}} --path {{path}} {{url}}",
                "Download track / playlist at a specific bitrate": "deemix --bitrate {{FLAC|MP3}} {{url}}"
            },
            "Explanation": "A barebone deezer downloader library built from the ashes of Deezloader Remix.\nIt can be used as a standalone CLI app or implemented in an UI using the API.\nMore Information: <https://deemix.app>.",
            "More Information Link": ""
        }
    },
    "defaults": {
        "osx": {
            "Examples": {
                "Delete all defaults of an application": "defaults delete {{application}}",
                "Read default values for an application option": "defaults read -app {{application}} {{option}}",
                "Read system defaults for an application option": "defaults read {{application}} {{option}}",
                "Speed up Mission Control animations": "defaults write com.apple.Dock expose-animation-duration -float 0.1",
                "Write the default value of an application option": "defaults write {{application}} {{option}} {{-type}} {{value}}"
            },
            "Explanation": "Read and write macOS user configuration for applications.",
            "More Information Link": ""
        }
    },
    "del": {
        "windows": {
            "Examples": {
                "Delete files based on specified attributes": "del {{file_pattern}} /a {{attribute}}",
                "Delete one or more space-separated files or patterns": "del {{file_pattern}}",
                "Display the help and list available attributes": "del /?",
                "Do not prompt when deleting files based on a global wildcard": "del {{file_pattern}} /q",
                "Force the deletion of read-only files": "del {{file_pattern}} /f",
                "Prompt for confirmation before deleting each file": "del {{file_pattern}} /p",
                "Recursively delete file(s) from all subdirectories": "del {{file_pattern}} /s"
            },
            "Explanation": "Delete one or more files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/del"
        }
    },
    "delta": {
        "common": {
            "Examples": {
                "Compare files or directories": "delta {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}",
                "Compare files or directories, ignoring any git configuration settings": "delta --no-gitconfig {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}",
                "Compare files or directories, showing the differences side by side": "delta --side-by-side {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}",
                "Compare files or directories, showing the line numbers": "delta --line-numbers {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}",
                "Compare, rendering commit hashes, file names, and line numbers as hyperlinks, according to the hyperlink spec for terminal emulators": "delta --hyperlinks {{path/to/old_file_or_directory}} {{path/to/new_file_or_directory}}",
                "Display supported languages and associated file extensions": "delta --list-languages",
                "Display the current settings": "delta --show-config"
            },
            "Explanation": "A viewer for git and diff output.",
            "More Information Link": "https://github.com/dandavison/delta"
        }
    },
    "deluge": {
        "common": {
            "Examples": {
                "Download a torrent": "deluge {{url|magnet|path/to/file}}",
                "Download a torrent and launch the specified user interface": "deluge -u {{gtk|web|console}} {{url|magnet|path/to/file}}",
                "Download a torrent and output the log to a file": "deluge -l {{path/to/log_file}} {{url|magnet|path/to/file}}",
                "Download a torrent using a specific configuration file": "deluge -c {{path/to/configuration_file}} {{url|magnet|path/to/file}}"
            },
            "Explanation": "A command line BitTorrent client.",
            "More Information Link": "https://deluge-torrent.org"
        }
    },
    "deluge-console": {
        "common": {
            "Examples": {
                "Add a torrent to the daemon": "add {{url|magnet|path/to/file}}",
                "Connect to a Deluge daemon instance": "connect {{hostname}}:{{port}}",
                "Display information about a specific torrent": "info {{torrent_id}}",
                "Display information about all torrents": "info",
                "Pause a torrent": "pause {{torrent_id}}",
                "Remove a torrent from the daemon": "rm {{torrent_id}}",
                "Resume a torrent": "resume {{torrent_id}}",
                "Start the interactive console interface": "deluge-console"
            },
            "Explanation": "An interactive interface for the Deluge BitTorrent client.",
            "More Information Link": "https://deluge-torrent.org"
        }
    },
    "deluged": {
        "common": {
            "Examples": {
                "Start the Deluge daemon": "deluged",
                "Start the Deluge daemon and output the log to a file": "deluged -l {{path/to/log_file}}",
                "Start the Deluge daemon on a specific port": "deluged -p {{port}}",
                "Start the Deluge daemon using a specific configuration file": "deluged -c {{path/to/configuration_file}}"
            },
            "Explanation": "A daemon process for the Deluge BitTorrent client.",
            "More Information Link": "https://deluge-torrent.org"
        }
    },
    "deluser": {
        "common": {
            "Examples": {
                "Remove a user": "deluser {{name}}",
                "Remove a user along with their home directory and mail spool": "deluser -r {{name}}",
                "Remove a user from a group": "deluser {{name}} {{group}}"
            },
            "Explanation": "Remove a user account or remove a user from a group.",
            "More Information Link": ""
        }
    },
    "deno": {
        "common": {
            "Examples": {
                "Install an executable script from a URL": "deno install --allow-net --allow-read {{file_server}} {{https://deno.land/std/http/file_server.ts}}",
                "Run a JavaScript or TypeScript file": "deno {{path/to/file.ts}}",
                "Run a file from a URL": "deno {{https://deno.land/std/examples/welcome.ts}}",
                "Run a file with network access enabled": "deno --allow-net {{path/to/file.ts}}",
                "Start a REPL (interactive shell)": "deno"
            },
            "Explanation": "A secure runtime for JavaScript and TypeScript.",
            "More Information Link": "https://deno.land/"
        }
    },
    "dep": {
        "common": {
            "Examples": {
                "Connect to a remote host via ssh": "dep ssh {{hostname}}",
                "Deploy an application to a remote host": "dep deploy {{hostname}}",
                "Display help for a command": "dep help {{command}}",
                "Interactively initialize deployer in the local path (use a framework template with `--template={{template}}`)": "dep init",
                "List commands": "dep list",
                "Rollback to the previous working release": "dep rollback",
                "Run any arbitrary command on the remote hosts": "dep run \"{{command}}\""
            },
            "Explanation": "A CLI tool for deployment of PHP applications.\nNote: The Go command `dep` with the same name is deprecated and archived.",
            "More Information Link": "https://deployer.org"
        }
    },
    "detox": {
        "common": {
            "Examples": {
                "Remove spaces and other undesirable characters from a file's name": "detox {{file}}",
                "Remove spaces and other undesirable characters from all files in a directory tree": "detox -r {{directory}}",
                "Show how detox would rename all of the files in a directory tree": "detox --dry-run -r {{directory}}"
            },
            "Explanation": "Renames files to make them easier to work with.\nIt removes spaces and other such annoyances like duplicate underline characters.",
            "More Information Link": "https://github.com/dharple/detox"
        }
    },
    "devfsadm": {
        "sunos": {
            "Examples": {
                "Cleanup any dangling /dev links and scan for new device": "devfsadm -C -v",
                "Dry-run - output what would be changed but make no modifications": "devfsadm -C -v -n",
                "Scan for new disks": "devfsadm -c disk"
            },
            "Explanation": "Administration command for `/dev`. Maintains the `/dev` namespace.",
            "More Information Link": ""
        }
    },
    "dexdump": {
        "common": {
            "Examples": {
                "Display header information of DEX files contained in an APK file": "dexdump -f {{path/to/file.apk}}",
                "Display the dis-assembled output of executable sections": "dexdump -d {{path/to/file.apk}}",
                "Extract classes and methods from an APK file": "dexdump {{path/to/file.apk}}",
                "Output results to a file": "dexdump -o {{path/to/file}} {{path/to/file.apk}}"
            },
            "Explanation": "Display information about Android DEX files.",
            "More Information Link": ""
        }
    },
    "dexter": {
        "common": {
            "Examples": {
                "Create and authenticate a user with Google OIDC": "dexter auth -i {{client-id}} -s {{client-secret}}",
                "Override the default kube config location": "dexter auth -i {{client-id}} -s {{client-secret}} --kube-config {{sample/config}}"
            },
            "Explanation": "Tool for authenticating the kubectl users with OpenId Connect.",
            "More Information Link": "https://github.com/gini/dexter"
        }
    },
    "df": {
        "common": {
            "Examples": {
                "Display all filesystems and their disk usage": "df",
                "Display all filesystems and their disk usage in human readable form": "df -h",
                "Display filesystems but exclude the specified type": "df -x {{squashfs}} -x {{tmpfs}}",
                "Display statistics on the number of free inodes": "df -i",
                "Display the filesystem and its disk usage containing the given file or directory": "df {{path/to/file_or_directory}}"
            },
            "Explanation": "Gives an overview of the filesystem disk space usage.",
            "More Information Link": ""
        }
    },
    "dfc": {
        "common": {
            "Examples": {
                "Display all filesystems including pseudo, duplicate and inaccessible filesystems": "dfc -a",
                "Display filesystems and their disk usage in human readable form with colours and graphs": "dfc",
                "Display filesystems containing \"ext\" in the filesystem type": "dfc -t ext",
                "Display filesystems without colour": "dfc -c never"
            },
            "Explanation": "Gives an overview of the filesystem disk space usage with colours and graphs.",
            "More Information Link": "https://projects.gw-computing.net/projects/dfc/wiki"
        }
    },
    "dget": {
        "linux": {
            "Examples": {
                "Download a binary package": "dget {{package_name}}",
                "Download a package source tarball from its .dsc file but don't extract it": "dget -d {{http://deb.debian.org/debian/pool/main/h/haskell-tldr/haskell-tldr_0.4.0-2.dsc}}",
                "Download and extract a package source from its .dsc file": "dget {{http://deb.debian.org/debian/pool/main/h/haskell-tldr/haskell-tldr_0.4.0-2.dsc}}"
            },
            "Explanation": "Download Debian packages.",
            "More Information Link": "https://manpages.debian.org/dget"
        }
    },
    "dhclient": {
        "common": {
            "Examples": {
                "Get an IP address for the `eth0` interface": "sudo dhclient {{eth0}}",
                "Release an IP address for the `eth0` interface": "sudo dhclient -r {{eth0}}"
            },
            "Explanation": "DHCP client.",
            "More Information Link": ""
        }
    },
    "dhcpwn": {
        "common": {
            "Examples": {
                "Flood the network with IP requests": "dhcpwn --interface {{network_interface}} flood --count {{number_of_requests}}",
                "Sniff local DHCP traffic": "dhcpwn --interface {{network_interface}} sniff"
            },
            "Explanation": "Test DHCP IP exhaustion attacks and sniff local DHCP traffic.",
            "More Information Link": "https://github.com/mschwager/dhcpwn"
        }
    },
    "diff": {
        "common": {
            "Examples": {
                "Compare directories recursively (shows names for differing files/directories as well as changes made to files)": "diff -r {{old_directory}} {{new_directory}}",
                "Compare directories, only showing the names of files that differ": "diff -rq {{old_directory}} {{new_directory}}",
                "Compare files (lists changes to turn `old_file` into `new_file`)": "diff {{old_file}} {{new_file}}",
                "Compare files, ignoring white spaces": "diff -w {{old_file}} {{new_file}}",
                "Compare files, showing the differences in unified format (as used by `git diff`)": "diff -u {{old_file}} {{new_file}}",
                "Compare files, showing the differences side by side": "diff -y {{old_file}} {{new_file}}"
            },
            "Explanation": "Compare files and directories.",
            "More Information Link": ""
        }
    },
    "diff3": {
        "linux": {
            "Examples": {
                "Compare files": "diff3 {{file1}} {{file2}} {{file3}}",
                "Show all changes, outlining conflicts": "diff3 --show-all {{file1}} {{file2}} {{file3}}"
            },
            "Explanation": "Compare three files line by line.",
            "More Information Link": ""
        }
    },
    "diffoscope": {
        "common": {
            "Examples": {
                "Compare two directories and control whether directory metadata is considered": "diffoscope --exclude-directory-metadata {{auto|yes|no|recursive}} {{path/to/directory1}} {{path/to/directory2}}",
                "Compare two directories excluding files with a name matching a specified pattern": "diffoscope --exclude {{pattern}} {{path/to/directory1}} {{path/to/directory2}}",
                "Compare two files": "diffoscope {{path/to/file1}} {{path/to/file2}}",
                "Compare two files and write a HTML-report to a file (use `-` for `stdout`)": "diffoscope --html {{path/to/outfile|-}} {{path/to/file1}} {{path/to/file2}}",
                "Compare two files without displaying a progress bar": "diffoscope --no-progress {{path/to/file1}} {{path/to/file2}}"
            },
            "Explanation": "Compare files, archives, and directories.",
            "More Information Link": "https://diffoscope.org"
        }
    },
    "diffstat": {
        "common": {
            "Examples": {
                "Display changes in a histogram": "diff {{file1}} {{file2}} | diffstat",
                "Display inserted, deleted and modified changes as a table": "diff {{file1}} {{file2}} | diffstat -t"
            },
            "Explanation": "Create a histogram from the output of the `diff` command.",
            "More Information Link": ""
        }
    },
    "dig": {
        "common": {
            "Examples": {
                "Find authoritative name servers for the zone and display SOA records": "dig +nssearch {{example.com}}",
                "Get all types of records for a given domain name": "dig {{example.com}} ANY",
                "Lookup the IP(s) associated with a hostname (A records)": "dig +short {{example.com}}",
                "Lookup the mail server(s) associated with a given domain name (MX record)": "dig +short {{example.com}} MX",
                "Perform a reverse DNS lookup on an IP address (PTR record)": "dig -x {{8.8.8.8}}",
                "Perform iterative queries and display the entire trace path to resolve a domain name": "dig +trace {{example.com}}",
                "Specify an alternate DNS server to query": "dig @{{8.8.8.8}} {{example.com}}"
            },
            "Explanation": "DNS Lookup utility.",
            "More Information Link": ""
        }
    },
    "dir": {
        "windows": {
            "Examples": {
                "Show the contents of a given directory": "dir {{path/to/directory}}",
                "Show the contents of a given directory, including hidden ones": "dir {{path/to/directory}} /A",
                "Show the contents of the current directory": "dir",
                "Show the contents of the current directory, including hidden ones": "dir /A"
            },
            "Explanation": "List directory contents.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/dir"
        }
    },
    "dircolors": {
        "common": {
            "Examples": {
                "Output commands for Bourne shell": "dircolors --bourne-shell",
                "Output commands for C shell": "dircolors --c-shell",
                "Output commands to set LS_COLOR using colors from a file": "dircolors {{file}}",
                "Output commands to set LS_COLOR using default colors": "dircolors",
                "View the default colors for file types and extensions": "dircolors --print-data"
            },
            "Explanation": "Output commands to set the LS_COLOR environment variable and style `ls`, `dir`, etc.",
            "More Information Link": ""
        }
    },
    "direnv": {
        "common": {
            "Examples": {
                "Edit the `.envrc` file in the default text editor and reload the environment on exit": "direnv allow",
                "Grant direnv permission to load the specified .envrc": "direnv allow",
                "Print some debug status information": "direnv status",
                "Revoke the authorization of a given .envrc": "direnv deny",
                "Trigger a reload of the environment": "direnv reload"
            },
            "Explanation": "Shell extension to load and unload environment variables depending on the current directory.",
            "More Information Link": "https://github.com/direnv/direnv"
        }
    },
    "dirname": {
        "common": {
            "Examples": {
                "Calculate the parent directory of a given path": "dirname {{path/to/file_or_directory}}",
                "Calculate the parent directory of multiple paths": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
                "Delimit output with a NUL character instead of a newline (useful when combining with `xargs`)": "dirname --zero {{path/to/directory_a}} {{path/to/file_b}}"
            },
            "Explanation": "Calculates the parent directory of a given file or directory path.",
            "More Information Link": ""
        }
    },
    "dirs": {
        "common": {
            "Examples": {
                "Clear the directory stack": "dirs -c",
                "Display only the nth entry in the directory stack, starting at 0": "dirs +{{N}}",
                "Display the directory stack with a space between each entry": "dirs",
                "Display the directory stack with one entry per line": "dirs -p"
            },
            "Explanation": "Displays or manipulates the directory stack.\nThe directory stack is a list of recently visited directories that can be manipulated with the `pushd` and `popd` commands.",
            "More Information Link": ""
        }
    },
    "dirsearch": {
        "common": {
            "Examples": {
                "Scan a list of web servers for common paths with the `.php` extension": "dirsearch --url-list {{path/to/url-list.txt}} --extensions {{php}}",
                "Scan a web server for common paths with common extensions": "dirsearch --url {{url}} --extensions-list",
                "Scan a web server for user-defined paths with common extensions": "dirsearch --url {{url}} --extensions-list --wordlist {{path/to/url-paths.txt}}",
                "Scan a web server using a cookie": "dirsearch --url {{url}} --extensions {{php}} --cookie {{cookie}}",
                "Scan a web server using the `HEAD` HTTP method": "dirsearch --url {{url}} --extensions {{php}} --http-method {{HEAD}}",
                "Scan a web server, saving the results to a `.json` file": "dirsearch --url {{url}} --extensions {{php}} --json-report {{path/to/report.json}}"
            },
            "Explanation": "Web path scanner.",
            "More Information Link": "https://github.com/maurosoria/dirsearch"
        }
    },
    "diskutil": {
        "osx": {
            "Examples": {
                "Eject a CD/DVD (unmount first)": "diskutil eject {{/dev/disk1}}",
                "List all currently available disks, partitions and mounted volumes": "diskutil list",
                "Repair the filesystem data structures of a volume": "diskutil repairVolume {{/dev/diskX}}",
                "Unmount a volume": "diskutil unmountDisk {{/dev/diskX}}"
            },
            "Explanation": "Utility to manage local disks and volumes.",
            "More Information Link": ""
        }
    },
    "disown": {
        "linux": {
            "Examples": {
                "Disown a specific job": "disown %{{job_number}}",
                "Disown all jobs": "disown -a",
                "Disown the current job": "disown",
                "Keep job (do not disown it), but mark it so that no future SIGHUP is received on shell exit": "disown -h %{{job_number}}"
            },
            "Explanation": "Allow sub-processes to live beyond the shell that they are attached to.\nSee also the `jobs` command.",
            "More Information Link": ""
        }
    },
    "ditto": {
        "osx": {
            "Examples": {
                "Copy a given file or directory, while retaining the original file permissions": "ditto -rsrc {{path/to/source}} {{path/to/destination}}",
                "Overwrite contents of destination directory with contents of source directory": "ditto {{path/to/source}} {{path/to/destination}}",
                "Print a line to the Terminal window for every file that's being copied": "ditto -V {{path/to/source}} {{path/to/destination}}"
            },
            "Explanation": "Copy files and directories.",
            "More Information Link": ""
        }
    },
    "dive": {
        "common": {
            "Examples": {
                "Analyze a Docker image": "dive {{your_image_tag}}",
                "Build an image and start analyzing it": "dive build -t {{some_tag}}"
            },
            "Explanation": "A tool for exploring a Docker image, layer contents, and discovering ways to shrink it.",
            "More Information Link": "https://github.com/wagoodman/dive"
        }
    },
    "django-admin": {
        "common": {
            "Examples": {
                "Check the current version of Django": "django-admin --version",
                "Create a new app for the current project": "django-admin startapp {{app_name}}",
                "Create a new django project": "django-admin startproject {{project_name}}",
                "Display more information for the given command": "django-admin help {{command}}"
            },
            "Explanation": "Django’s utility for administrative tasks.",
            "More Information Link": "https://docs.djangoproject.com/en/3.0/ref/django-admin/"
        }
    },
    "dmenu": {
        "linux": {
            "Examples": {
                "Display a menu of the output of the `ls` command": "{{ls}} | dmenu",
                "Display a menu with custom items separated by a new line (`\\n`)": "echo -e \"{{red}}\\n{{green}}\\n{{blue}}\" | dmenu",
                "Display dmenu at the bottom of the screen": "ls | dmenu -b",
                "Launch dmenu on a specific monitor": "ls | dmenu -m {{1}}",
                "Let the user choose between multiple items and save the selected one to a file": "echo -e \"{{red}}\\n{{green}}\\n{{blue}}\" | dmenu > {{color.txt}}"
            },
            "Explanation": "Dynamic menu.\nCreates a menu from a text input with each item on a new line.",
            "More Information Link": ""
        }
    },
    "dmesg": {
        "linux": {
            "Examples": {
                "Colorize output (available in kernels 3.5.0 and newer)": "dmesg -L",
                "Show how much physical memory is available on this system": "dmesg | grep -i memory",
                "Show kernel error messages": "dmesg --level err",
                "Show kernel messages": "dmesg",
                "Show kernel messages 1 page at a time": "dmesg | less",
                "Show kernel messages and keep reading new ones, similar to `tail -f` (available in kernels 3.5.0 and newer)": "dmesg -w",
                "Show kernel messages in human-readable form (available in kernels 3.5.0 and newer)": "dmesg -H",
                "Show kernel messages with a timestamp (available in kernels 3.5.0 and newer)": "dmesg -T"
            },
            "Explanation": "Write the kernel messages to standard output.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Show how much physical memory is available on this system": "dmesg | grep -i memory",
                "Show kernel messages": "dmesg",
                "Show kernel messages 1 page at a time": "dmesg | less"
            },
            "Explanation": "Write the kernel messages to standard output.",
            "More Information Link": ""
        },
        "sunos": {
            "Examples": {
                "Show how much physical memory is available on this system": "dmesg | grep -i memory",
                "Show kernel messages": "dmesg",
                "Show kernel messages 1 page at a time": "dmesg | less"
            },
            "Explanation": "Write the kernel messages to standard output.",
            "More Information Link": ""
        }
    },
    "dmidecode": {
        "linux": {
            "Examples": {
                "Show BIOS information": "sudo dmidecode -t bios",
                "Show CPU information": "sudo dmidecode -t processor",
                "Show all DMI table contents": "sudo dmidecode",
                "Show memory information": "sudo dmidecode -t memory",
                "Show the BIOS version": "sudo dmidecode -s bios-version",
                "Show the system's serial number": "sudo dmidecode -s system-serial-number"
            },
            "Explanation": "Display the DMI (alternatively known as SMBIOS) table contents in a human-readable format.\nRequires root privileges.",
            "More Information Link": ""
        }
    },
    "dnf": {
        "linux": {
            "Examples": {
                "Display details about a package": "dnf info {{package}}",
                "Find which packages provide a given file": "dnf provides {{file}}",
                "Install a new package": "sudo dnf install {{package}}",
                "Install a new package and assume yes to all questions": "sudo dnf -y install {{package}}",
                "List installed packages": "dnf list --installed",
                "Remove a package": "sudo dnf remove {{package}}",
                "Search packages via keywords": "dnf search {{keywords}}",
                "Upgrade installed packages to the newest available versions": "sudo dnf upgrade"
            },
            "Explanation": "Package management utility for RHEL, Fedora, and CentOS (replaces yum).",
            "More Information Link": "https://dnf.readthedocs.io/"
        }
    },
    "dnsrecon": {
        "linux": {
            "Examples": {
                "Scan a domain and save the results to a SQLite database": "dnsrecon --domain {{example.com}} --db {{path/to/database.sqlite}}",
                "Scan a domain, performing DNS cache snooping": "dnsrecon --domain {{example.com}} --type snoop --name_server {{nameserver.example.com}} --dictionary {{path/to/dictionary.txt}}",
                "Scan a domain, performing a Google enumeration and saving the results to a CSV file": "dnsrecon --domain {{example.com}} -g --csv",
                "Scan a domain, performing a reverse lookup of IP ranges from the SPF record and saving the results to a JSON file": "dnsrecon --domain {{example.com}} -s --json",
                "Scan a domain, performing zone walking": "dnsrecon --domain {{example.com}} --type zonewalk",
                "Scan a domain, specifying the nameserver and performing a zone transfer": "dnsrecon --domain {{example.com}} --name_server {{nameserver.example.com}} --type axfr",
                "Scan a domain, using a dictionary of subdomains and hostnames for bruteforcing": "dnsrecon --domain {{example.com}} --dictionary {{path/to/dictionary.txt}} --type brt"
            },
            "Explanation": "DNS enumeration tool.",
            "More Information Link": "https://github.com/darkoperator/dnsrecon"
        }
    },
    "do-release-upgrade": {
        "linux": {
            "Examples": {
                "Upgrade to the latest development release": "sudo do-release-upgrade --devel-release",
                "Upgrade to the latest proposed release": "sudo do-release-upgrade --proposed",
                "Upgrade to the latest release": "sudo do-release-upgrade"
            },
            "Explanation": "The Ubuntu release upgrader.",
            "More Information Link": ""
        }
    },
    "doas": {
        "common": {
            "Examples": {
                "Launch the default shell as root": "doas -s",
                "Make `doas` request a password even after it was supplied earlier": "doas -L",
                "Parse a config file and check if the execution of a command as another user is allowed": "doas -C {{config_file}} {{command}}",
                "Run a command as another user": "doas -u {{user}} {{command}}",
                "Run a command as root": "doas {{command}}"
            },
            "Explanation": "Executes a command as another user.",
            "More Information Link": "https://man.openbsd.org/doas"
        }
    },
    "docker": {
        "common": {
            "Examples": {
                "Fetch and follow the logs of a container": "docker logs -f {{container_name}}",
                "List all docker containers (running and stopped)": "docker ps -a",
                "List currently running docker containers": "docker ps",
                "Open a shell inside of an already running container": "docker exec -it {{container_name}} {{sh}}",
                "Pull an image from a docker registry": "docker pull {{image}}",
                "Remove a stopped container": "docker rm {{container_name}}",
                "Start a container from an image, with a custom name": "docker run --name {{container_name}} {{image}}",
                "Start or stop an existing container": "docker {{start|stop}} {{container_name}}"
            },
            "Explanation": "Manage Docker containers and images.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/cli/"
        }
    },
    "docker build": {
        "common": {
            "Examples": {
                "Build a docker image and tag it": "docker build --tag {{name:tag}} .",
                "Build a docker image from a Dockerfile at a specified URL": "docker build {{github.com/creack/docker-firefox}}",
                "Build a docker image using a specific Dockerfile": "docker build --file {{Dockerfile}} .",
                "Build a docker image using the Dockerfile in the current directory": "docker build .",
                "Build with custom build-time variables": "docker build --build-arg {{HTTP_PROXY=http://10.20.30.2:1234}} --build-arg {{FTP_PROXY=http://40.50.60.5:4567}} .",
                "Do not use the cache when building the image": "docker build --no-cache --tag {{name:tag}} ."
            },
            "Explanation": "Build an image from a Dockerfile.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/build/"
        }
    },
    "docker container": {
        "common": {
            "Examples": {
                "Create a new image from a container's changes": "docker container commit {{container_name}}",
                "Display detailed information on one or more containers": "docker container inspect {{container_name}}",
                "Export a container's filesystem as a tar archive": "docker container export {{container_name}}",
                "Kill one or more running containers": "docker container kill {{container_name}}",
                "List currently running Docker containers": "docker container ls",
                "Pause all processes within one or more containers": "docker container pause {{container_name}}",
                "Start one or more stopped containers": "docker container start {{container1_name}} {{container2_name}}",
                "Stop one or more running containers": "docker container stop {{container_name}}"
            },
            "Explanation": "Manage Docker containers.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/container/"
        }
    },
    "docker exec": {
        "common": {
            "Examples": {
                "Enter an interactive shell session on an already-running container": "docker exec -it {{container_name}} {{/bin/bash}}",
                "Run a command in background on existing container but keep `stdin` open": "docker exec -i -d {{container_name}} {{command}}",
                "Run a command in the background (detached) on a running container": "docker exec -d {{container_name}} {{command}}",
                "Select the working directory for a given command to execute into": "docker exec -it -w {{path/to/directory}} {{container_name}} {{command}}",
                "Set an environment variable in a running bash session": "docker exec -it -e {{variable_name}}={{value}} {{container_name}} {{/bin/bash}}"
            },
            "Explanation": "Execute a command on an already running Docker container.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/exec/"
        }
    },
    "docker images": {
        "common": {
            "Examples": {
                "List all Docker images": "docker images",
                "List all Docker images including intermediates": "docker images -a",
                "List all Docker images not used by any container": "docker images --filter dangling=true",
                "List the output in quiet mode (only numeric IDs)": "docker images -q"
            },
            "Explanation": "Manage Docker images.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/images/"
        }
    },
    "docker inspect": {
        "common": {
            "Examples": {
                "Display a container's IP address": "docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' {{container}}",
                "Display all port bindings": "docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}} {{$p}} -> {{(index $conf 0).HostPort}} {{end}}' {{container}}",
                "Display information about a container, image, or volume using a name or ID": "docker inspect {{container|image|ID}}",
                "Display the configuration information as JSON": "docker inspect --format='{{json .Config}}' {{container}}",
                "Display the image name of the container": "docker inspect --format='{{.Config.Image}}' {{container}}",
                "Display the path to the container's log file": "docker inspect --format='{{.LogPath}}' {{container}}",
                "Show help": "docker inspect"
            },
            "Explanation": "Return low-level information on Docker objects.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/inspect/"
        }
    },
    "docker logs": {
        "common": {
            "Examples": {
                "Print last 5 lines": "docker logs {{container_name}} --tail {{5}}",
                "Print logs and append them with timestamps": "docker logs -t {{container_name}}",
                "Print logs and follow them": "docker logs -f {{container_name}}",
                "Print logs from a certain point in time of container execution (i.e. 23m, 10s, 2013-01-02T13:23:37)": "docker logs {{container_name}} --until {{time}}",
                "Print logs from a container": "docker logs {{container_name}}"
            },
            "Explanation": "Print container logs.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/logs"
        }
    },
    "docker network": {
        "common": {
            "Examples": {
                "Connect a container to a network using a name or ID": "docker network connect {{network_name}} {{container_name|ID}}",
                "Create a user defined network": "docker network create --driver {{driver_name}} {{network_name}}",
                "Disconnect a container from a network": "docker network disconnect {{network_name}} {{container_name|ID}}",
                "Display detailed information of a space-separated list of networks": "docker network inspect {{network_name}}",
                "List all available and configured networks on docker daemon": "docker network ls",
                "Remove a space-separated list of unused networks": "docker network rm {{network_name}}",
                "Remove all unused (not referenced by any container) networks": "docker network prune"
            },
            "Explanation": "Create and manage docker networks.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/network/"
        }
    },
    "docker ps": {
        "common": {
            "Examples": {
                "Filter containers by exit status code": "docker ps --all --filter=\"exited={{code}}\"",
                "Filter containers by status (created, running, removing, paused, exited and dead)": "docker ps --filter=\"status={{status}}\"",
                "Filter containers that contain a substring in their name": "docker ps --filter=\"name={{name}}\"",
                "Filter containers that mount a specific volume or have a volume mounted in a specific path": "docker ps --filter=\"volume={{path/to/directory}}\" --format \"table {{.ID}}\\t{{.Image}}\\t{{.Names}}\\t{{.Mounts}}\"",
                "Filter containers that share a given image as an ancestor": "docker ps --filter \"ancestor={{image}}:{{tag}}\"",
                "List all docker containers (running and stopped)": "docker ps --all",
                "List currently running docker containers": "docker ps",
                "Show the latest created container (includes all states)": "docker ps --latest"
            },
            "Explanation": "List Docker containers.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/ps/"
        }
    },
    "docker rmi": {
        "common": {
            "Examples": {
                "Force remove an image": "docker rmi --force {{image}}",
                "Remove an image without deleting untagged parents": "docker rmi --no-prune {{image}}",
                "Remove one or more images given their names": "docker rmi {{image1 image2 ...}}",
                "Show help": "docker rmi"
            },
            "Explanation": "Remove one or more Docker images.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/rmi/"
        }
    },
    "docker run": {
        "common": {
            "Examples": {
                "Run command in a new container from a tagged image": "docker run {{image:tag}} {{command}}",
                "Run command in a new container in background and display its ID": "docker run -d {{image}} {{command}}",
                "Run command in a new container with bind mounted volumes": "docker run -v {{path/to/host_path}}:{{path/to/container_path}} {{image}} {{command}}",
                "Run command in a new container with passed environment variables": "docker run -e '{{variable}}={{value}}' -e {{variable}} {{image}} {{command}}",
                "Run command in a new container with published ports": "docker run -p {{host_port}}:{{container_port}} {{image}} {{command}}",
                "Run command in a one-off container in interactive mode and pseudo-TTY": "docker run --rm -it {{image}} {{command}}"
            },
            "Explanation": "Run a command in a new Docker container.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/run/"
        }
    },
    "docker start": {
        "common": {
            "Examples": {
                "Show help": "docker start",
                "Start a container, attaching `stdout` and `stderr` and forwarding signals": "docker start --attach {{container}}",
                "Start a docker container": "docker start {{container}}",
                "Start one or more space-separated containers": "docker start {{container(s)}}"
            },
            "Explanation": "Start one or more stopped containers.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/start/"
        }
    },
    "docker system": {
        "common": {
            "Examples": {
                "Display real-time events from containers streamed as valid JSON Lines": "docker system events --filter 'type=container' --format '{{json .}}'",
                "Display real-time events from the Docker daemon": "docker system events",
                "Display system-wide information": "docker system info",
                "Remove unused data": "docker system prune",
                "Remove unused data created more than a specified amount of time in the past": "docker system prune --filter=\"until={{hours}}h{{minutes}}m\"",
                "Show detailed information on disk usage": "docker system df --verbose",
                "Show docker disk usage": "docker system df",
                "Show help": "docker system"
            },
            "Explanation": "Manage Docker data and display system-wide information.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/system/"
        }
    },
    "docker-compose": {
        "common": {
            "Examples": {
                "Create and start all containers in the background using a `docker-compose.yml` file from the current directory": "docker-compose up -d",
                "Follow logs for a specific container": "docker-compose logs --follow {{container_name}}",
                "Follow logs for all containers": "docker-compose logs --follow",
                "List all running containers": "docker-compose ps",
                "Start all containers using an alternate compose file": "docker-compose --file {{path/to/file}} up",
                "Start all containers, rebuild if necessary": "docker-compose up --build",
                "Stop all running containers": "docker-compose stop",
                "Stop and remove all containers, networks, images, and volumes": "docker-compose down --rmi all --volumes"
            },
            "Explanation": "Run and manage multi container docker applications.",
            "More Information Link": "https://docs.docker.com/compose/reference/overview/"
        }
    },
    "docker-machine": {
        "common": {
            "Examples": {
                "Create a new docker machine with specific name": "docker-machine create {{name}}",
                "Get the status of a machine": "docker-machine status {{name}}",
                "Inspect information about a machine": "docker-machine inspect {{name}}",
                "List currently running docker machines": "docker-machine ls",
                "Start a machine": "docker-machine start {{name}}",
                "Stop a machine": "docker-machine stop {{name}}"
            },
            "Explanation": "Create and manage machines running Docker.",
            "More Information Link": "https://docs.docker.com/machine/reference/"
        }
    },
    "dockerd": {
        "linux": {
            "Examples": {
                "Run and set a specific log level": "dockerd --log-level={{debug|info|warn|error|fatal}}",
                "Run docker daemon": "dockerd",
                "Run docker daemon and config it to listen to specific sockets(unix,tcp)": "dockerd --host unix://{{path/to/tmp.sock}} --host tcp://{{ip}}",
                "Run in debug mode": "dockerd --debug",
                "Run with specific daemon PID file": "dockerd --pidfile {{path/to/pid_file}}"
            },
            "Explanation": "A persistent process to start and manage docker containers.",
            "More Information Link": "https://docs.docker.com/engine/reference/commandline/dockerd/"
        }
    },
    "dokku": {
        "common": {
            "Examples": {
                "Create an app": "dokku apps:create {{app_name}}",
                "Install plugin": "dokku plugin:install {{full_repo_url}}",
                "Link database to an app": "dokku {{db}}:link {{db_name}} {{app_name}}",
                "List running apps": "dokku apps",
                "Remove an app": "dokku apps:destroy {{app_name}}"
            },
            "Explanation": "Docker powered mini-Heroku (PaaS).\nEasily deploy multiple apps to your server in different languages using a single `git-push` command.",
            "More Information Link": "https://github.com/dokku/dokku"
        }
    },
    "dos2unix": {
        "linux": {
            "Examples": {
                "Change the line endings of a file": "dos2unix {{filename}}",
                "Create a copy with Unix-style line endings": "dos2unix -n {{filename}} {{new_filename}}"
            },
            "Explanation": "Change DOS-style line endings to Unix-style.\nReplaces CRLF with CR.",
            "More Information Link": ""
        }
    },
    "doskey": {
        "windows": {
            "Examples": {
                "Create a new macro": "doskey {{name}} = \"{{command}}\"",
                "Create a new macro for a specific executable": "doskey /exename={{executable}} {{name}} = \"{{command}}\"",
                "Display all commands that are stored in memory": "doskey /history",
                "List available macros": "doskey /macros",
                "Load macros from a file": "doskey /macrofile = {{macinit}}",
                "Remove a macro": "doskey {{name}} =",
                "Save macros to a file for portability": "doskey /macros > {{macinit}}"
            },
            "Explanation": "Manage macros, windows commands and command lines.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/doskey"
        }
    },
    "dot": {
        "common": {
            "Examples": {
                "Create an SVG from DOT file": "dot -Tsvg -o {{path/to/out_file.svg}} {{path/to/file.dot}}",
                "Render an image file and determine output filename based on input filename and selected format": "dot -Tpng -O {{path/to/file.dot}}"
            },
            "Explanation": "A command-line tool to produce layered drawings of directed graphs.",
            "More Information Link": ""
        }
    },
    "dotnet": {
        "common": {
            "Examples": {
                "Build and execute the .NET project in the current directory": "dotnet run",
                "Initialize a new .NET project": "dotnet new {{template_short_name}}",
                "Restore nuget packages": "dotnet restore",
                "Run a packaged dotnet application (only needs the runtime, the rest of the commands require the .NET Core SDK installed)": "dotnet {{path/to/application.dll}}"
            },
            "Explanation": "Cross platform .NET command line tools for .NET Core.",
            "More Information Link": "https://docs.microsoft.com/dotnet/core/tools"
        }
    },
    "dotnet build": {
        "common": {
            "Examples": {
                "Compile a .NET project or solution in debug mode": "dotnet build {{path/to/project_or_solution}}",
                "Compile for a specific runtime": "dotnet build --runtime {{runtime_identifier}}",
                "Compile in release mode": "dotnet build",
                "Compile the project or solution in the current directory": "dotnet build",
                "Compile with a specific verbosity level": "dotnet build --verbosity {{quiet|minimal|normal|detailed|diagnostic}}",
                "Compile without restoring dependencies": "dotnet build --no-restore",
                "Specify the output directory": "dotnet build --output {{path/to/directory}}"
            },
            "Explanation": "Builds a .NET application and its dependencies.",
            "More Information Link": "https://docs.microsoft.com/dotnet/core/tools/dotnet-build"
        }
    },
    "dotnet publish": {
        "common": {
            "Examples": {
                "Compile a .NET project in release mode": "dotnet publish --configuration Release {{path/to/project_file}}",
                "Compile a .NET project without restoring dependencies": "dotnet publish --no-restore {{path/to/project_file}}",
                "Package the application into a platform-specific single-file executable": "dotnet publish --runtime {{runtime_identifier}} -p:PublishSingleFile=true {{path/to/project_file}}",
                "Publish the .NET Core runtime with your application for the specified runtime": "dotnet publish --self-contained true --runtime {{runtime_identifier}} {{path/to/project_file}}",
                "Specify the output directory": "dotnet publish --output {{path/to/directory}} {{path/to/project_file}}",
                "Trim unused libraries to reduce the deployment size of an application": "dotnet publish --self-contained true --runtime {{runtime_identifier}} -p:PublishTrimmed=true {{path/to/project_file}}"
            },
            "Explanation": "Publish a .NET application and its dependencies to a folder for deployment to a hosting system.",
            "More Information Link": "https://docs.microsoft.com/dotnet/core/tools/dotnet-publish"
        }
    },
    "dotnet restore": {
        "common": {
            "Examples": {
                "Force all dependencies to be resolved even if the last restore was successful": "dotnet restore --force",
                "Restore dependencies for a .NET project or solution in a specific location": "dotnet restore {{path/to/project_or_solution}}",
                "Restore dependencies for a .NET project or solution in the current directory": "dotnet restore",
                "Restore dependencies using package source failures as warnings": "dotnet restore --ignore-failed-sources",
                "Restore dependencies with a specific verbosity level": "dotnet restore --verbosity {{quiet|minimal|normal|detailed|diagnostic}}",
                "Restore dependencies without caching the HTTP requests": "dotnet restore --no-cache"
            },
            "Explanation": "Restores the dependencies and tools of a .NET project.",
            "More Information Link": "https://docs.microsoft.com/dotnet/core/tools/dotnet-restore"
        }
    },
    "doxygen": {
        "common": {
            "Examples": {
                "Generate a default template configuration file \"Doxyfile\"": "doxygen -g",
                "Generate a template configuration file": "doxygen -g {{path/to/config_file}}",
                "Generate documentation using an existing configuration file": "doxygen {{path/to/config_file}}"
            },
            "Explanation": "A documentation system for various programming languages.",
            "More Information Link": "http://www.doxygen.nl"
        }
    },
    "dpkg": {
        "linux": {
            "Examples": {
                "Find out which package owns a file": "dpkg -S {{filename}}",
                "Install a package": "dpkg -i {{path/to/file.deb}}",
                "List a package's contents": "dpkg -L {{package_name}}",
                "List contents of a local package file": "dpkg -c {{path/to/file.deb}}",
                "List installed packages": "dpkg -l {{pattern}}",
                "Remove a package": "dpkg -r {{package_name}}"
            },
            "Explanation": "Debian package manager.",
            "More Information Link": "https://manpages.debian.org/buster/dpkg/dpkg.1.en.html"
        }
    },
    "dpkg-deb": {
        "linux": {
            "Examples": {
                "Create a package from a specified directory": "dpkg-deb --build {{path/to/directory}}",
                "Display information about a package": "dpkg-deb --info {{path/to/file.deb}}",
                "Display the package's name and version on one line": "dpkg-deb --show {{path/to/file.deb}}",
                "Extract package's contents into a directory": "dpkg-deb --extract {{path/to/file.deb}} {{path/to/directory}}",
                "List the package's contents": "dpkg-deb --contents {{path/to/file.deb}}"
            },
            "Explanation": "Pack, unpack and provide information about Debian archives.",
            "More Information Link": "https://manpages.debian.org/buster/dpkg/dpkg-deb.1.en.html"
        }
    },
    "dpkg-query": {
        "linux": {
            "Examples": {
                "List all files installed by a package": "dpkg-query -L {{package_name}}",
                "List all installed packages": "dpkg-query -l",
                "List installed packages matching a pattern": "dpkg-query -l '{{pattern}}'",
                "Show information about a package": "dpkg-query -s {{package_name}}"
            },
            "Explanation": "A tool that shows information about installed packages.",
            "More Information Link": ""
        }
    },
    "drill": {
        "common": {
            "Examples": {
                "Get all types of records for a given domain name": "drill any {{example.com}}",
                "Lookup the IP(s) associated with a hostname (A records)": "drill {{example.com}}",
                "Lookup the mail server(s) associated with a given domain name (MX record)": "drill mx {{example.com}}",
                "Perform DNSSEC trace from root servers down to a domain name": "drill -TD {{example.com}}",
                "Perform a reverse DNS lookup on an IP address (PTR record)": "drill -x {{8.8.8.8}}",
                "Show DNSKEY record(s) for a domain name": "drill -s dnskey {{example.com}}",
                "Specify an alternate DNS server to query": "drill {{example.com}} @{{8.8.8.8}}"
            },
            "Explanation": "Perform various DNS queries.",
            "More Information Link": ""
        }
    },
    "driverquery": {
        "windows": {
            "Examples": {
                "Display a list of all installed device drivers": "driverquery",
                "Display a list of drivers for a remote machine": "driverquery /s {{hostname}} /u {{username}} /p {{password}}",
                "Display a list of drivers in the specified format": "driverquery /fo {{table|list|csv}}",
                "Display a list of drivers with a column to indicate if they are signed": "driverquery /si",
                "Display a list of drivers with verbose information": "driverquery /v",
                "Display detailed usage information": "driverquery /?",
                "Exclude the header in the output list": "driverquery /nh"
            },
            "Explanation": "Display information about installed device drivers.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/driverquery"
        }
    },
    "drupal": {
        "common": {
            "Examples": {
                "Clear all caches": "drupal cache:rebuild",
                "Install a module": "drupal module:install {{module_name}}",
                "Uninstall a module": "drupal module:uninstall {{module_name}}",
                "View current Drupal installation status": "drupal site:status"
            },
            "Explanation": "CLI for Drupal.\nGenerates boilerplate code, interacts with and debugs Drupal projects.",
            "More Information Link": "https://drupalconsole.com/"
        }
    },
    "drupal-check": {
        "common": {
            "Examples": {
                "Check the code excluding a comma-separated list of directories": "drupal-check --exclude-dir {{path/to/excluded_directory}},{{path/to/excluded_files/*.php}} {{path/to/directory}}",
                "Check the code in a specific directory for deprecations": "drupal-check {{path/to/directory}}",
                "Don't show a progress bar": "drupal-check --no-progress {{path/to/directory}}",
                "Perform static analysis to detect bad coding practices": "drupal-check --analysis {{path/to/directory}}"
            },
            "Explanation": "Check Drupal PHP code for deprecations.",
            "More Information Link": "https://github.com/mglaman/drupal-check"
        }
    },
    "drush": {
        "common": {
            "Examples": {
                "Clear CSS and JavaScript caches": "drush cc css-js",
                "Clear all caches": "drush cr",
                "Enable module \"foo\"": "drush en {{foo}}",
                "Uninstall module \"foo\"": "drush pmu {{foo}}"
            },
            "Explanation": "A command-line shell and scripting interface for Drupal.",
            "More Information Link": "https://www.drush.org"
        }
    },
    "drutil": {
        "osx": {
            "Examples": {
                "Burn a directory as an ISO9660 filesystem onto a DVD. Don't verify and eject when complete": "drutil burn -noverify -eject -iso9660",
                "Eject a disk from the drive": "drutil eject"
            },
            "Explanation": "Interact with DVD burners.",
            "More Information Link": ""
        }
    },
    "dstat": {
        "linux": {
            "Examples": {
                "Display CPU and memory statistics only": "dstat --cpu --mem",
                "Display CPU, disk, net, paging and system statistics": "dstat",
                "Display battery percentage and remaining battery time": "dstat --battery --battery-remain",
                "Display statistics every 5 seconds and 4 updates only": "dstat {{5}} {{4}}",
                "Display the process using the most memory and most CPU": "dstat --top-mem --top-cpu",
                "List all available dstat plugins": "dstat --list"
            },
            "Explanation": "Versatile tool for generating system resource statistics.",
            "More Information Link": "http://dag.wieers.com/home-made/dstat"
        }
    },
    "du": {
        "common": {
            "Examples": {
                "List the human-readable size of all .jpg files in subdirectories of the current directory, and show a cumulative total at the end": "du -ch */*.jpg",
                "List the human-readable sizes of a directory and any subdirectories, up to N levels deep": "du -h --max-depth=N {{path/to/directory}}",
                "List the human-readable sizes of a directory and of all the files and directories within it": "du -ah {{path/to/directory}}",
                "List the sizes of a directory and any subdirectories, in human-readable form (i.e. auto-selecting the appropriate unit for each size)": "du -h {{path/to/directory}}",
                "List the sizes of a directory and any subdirectories, in the given unit (B/KB/MB)": "du -{{b|k|m}} {{path/to/directory}}",
                "Show the size of a single directory, in human readable units": "du -sh {{path/to/directory}}"
            },
            "Explanation": "Disk usage: estimate and summarize file and directory space usage.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "List the human-readable size of all .jpg files in subdirectories of the current directory, and show a cumulative total at the end": "du -ch */*.jpg",
                "List the human-readable sizes of a directory and any subdirectories, up to N levels deep": "du -h -d {{N}} {{path/to/directory}}",
                "List the human-readable sizes of a directory and of all the files and directories within it": "du -ah {{path/to/directory}}",
                "List the sizes of a directory and any subdirectories, in human-readable form (i.e. auto-selecting the appropriate unit for each size)": "du -h {{path/to/directory}}",
                "List the sizes of a directory and any subdirectories, in the given unit (KB/MB/GB)": "du -{{k|m|g}} {{path/to/directory}}",
                "Show the size of a single directory, in human readable units": "du -sh {{path/to/directory}}"
            },
            "Explanation": "Disk usage: estimate and summarize file and directory space usage.",
            "More Information Link": ""
        }
    },
    "dua": {
        "common": {
            "Examples": {
                "Aggregate the consumed space of one or more directories or files": "dua aggregate",
                "Analyze specific directory": "dua {{path/to/directory}}",
                "Count hard-linked files each time they are seen": "dua --count-hard-links",
                "Display apparent size instead of disk usage": "dua --apparent-size",
                "Format printing byte counts": "dua --format {{metric|binary|bytes|GB|GiB|MB|MiB}}",
                "Launch the terminal user interface": "dua interactive",
                "Set the number of threads to be used": "dua --threads {{count}}"
            },
            "Explanation": "Dua (Disk Usage Analyzer) is a tool to conveniently learn about the usage of disk space of a given directory.",
            "More Information Link": "https://github.com/Byron/dua-cli"
        }
    },
    "dumpe2fs": {
        "linux": {
            "Examples": {
                "Display ext2, ext3 and ext4 filesystem information": "dumpe2fs {{/dev/sdXN}}",
                "Display the blocks which are reserved as bad in the filesystem": "dumpe2fs -b {{/dev/sdXN}}",
                "Force display filesystem information even with non-recognisable feature flags": "dumpe2fs -f {{/dev/sdXN}}",
                "Only display the superblock information and not any of the block group descriptor detail information": "dumpe2fs -h {{/dev/sdXN}}",
                "Print the detailed group information block numbers in hexadecimal format": "dumpe2fs -x {{/dev/sdXN}}"
            },
            "Explanation": "Print the super block and blocks group information for ext2/ext3/ext4 filesystems.\nUnmount the partition before running this command using `umount {{device}}`.",
            "More Information Link": "https://linux.die.net/man/8/dumpe2fs"
        }
    },
    "dunstify": {
        "linux": {
            "Examples": {
                "Show a notification with a given title and message": "dunstify \"{{Title}}\" \"{{Message}}\"",
                "Show a notification with specified urgency": "dunstify \"{{Title}}\" \"{{Message}}\" -u {{low|normal|critical}}",
                "Specify a message ID (overwrites any previous messages with the same ID)": "dunstify \"{{Title}}\" \"{{Message}}\" -r {{123}}",
                "To see other possible options": "notify-send --help"
            },
            "Explanation": "A notification tool that is an extension of notify-send, but has more features based around dunst.\nWorks with all options that work for notify-send.",
            "More Information Link": ""
        }
    },
    "duperemove": {
        "linux": {
            "Examples": {
                "Deduplicate duplicate extents on a Btrfs or XFS (experimental) filesystem": "duperemove -r -d {{path/to/directory}}",
                "Limit I/O threads (for hashing and dedupe stage) and CPU threads (for duplicate extent finding stage)": "duperemove -r -d --hashfile={{path/to/hashfile}} --io-threads={{N}} --cpu-threads={{N}} {{path/to/directory}}",
                "Search for duplicate extents in a directory and show them": "duperemove -r {{path/to/directory}}",
                "Use a hash file to store extent hashes (less memory usage and can be reused on subsequent runs)": "duperemove -r -d --hashfile={{path/to/hashfile}} {{path/to/directory}}"
            },
            "Explanation": "Finds duplicate filesystem extents and optionally schedule them for deduplication.\nAn extent is small part of a file inside the filesystem.\nOn some filesystems one extent can be referenced multiple times, when parts of the content of the files are identical.",
            "More Information Link": "https://markfasheh.github.io/duperemove/"
        }
    },
    "duplicity": {
        "common": {
            "Examples": {
                "Backup a directory to Amazon S3, doing a full backup every month": "duplicity --full-if-older-than {{1M}} --use-new-style s3://{{bucket_name[/prefix]}}",
                "Backup a directory via FTPS to a remote machine, encrypting it with a password": "FTP_PASSWORD={{ftp_login_password}} PASSPHRASE={{encryption_password}} duplicity {{path/to/source/directory}} {{ftps://user@hostname/target/directory/path/}}",
                "Delete versions older than 1 year from a backup stored on a WebDAV share": "FTP_PASSWORD={{webdav_login_password}} duplicity remove-older-than {{1Y}} --force {{webdav[s]://user@hostname[:port]/some_dir}}",
                "List the available backups": "duplicity collection-status \"file://{{absolute/path/to/backup/directory}}\"",
                "List the files in a backup stored on a remote machine, via ssh": "duplicity list-current-files --time {{YYYY-MM-DD}} scp://{{user@hostname}}/path/to/backup/dir",
                "Restore a subdirectory from a GnuPG-encrypted local backup to a given location": "PASSPHRASE={{gpg_key_password}} duplicity restore --encrypt-key {{gpg_key_id}} --file-to-restore {{relative/path/restoredirectory}} file://{{absolute/path/to/backup/directory}} {{path/to/directory/to/restore/to}}"
            },
            "Explanation": "Creates incremental, compressed, encrypted and versioned backups.\nCan also upload the backups to a variety of backend services.",
            "More Information Link": "http://duplicity.nongnu.org"
        }
    },
    "duti": {
        "osx": {
            "Examples": {
                "Display all handlers of a given UTI": "duti -l {{uti}}",
                "Display information about the default application for a given extension": "duti -x {{ext}}",
                "Display the default handler for a given UTI": "duti -d {{uti}}",
                "Set Finder as the default handler for the ftp:// URL scheme": "duti -s {{com.apple.Finder}} {{ftp}}",
                "Set Safari as the default handler for HTML documents": "duti -s {{com.apple.Safari}} {{public.html}} all",
                "Set VLC as the default viewer for files with .m4v extensions": "duti -s {{org.videolan.vlc}} {{m4v}} viewer"
            },
            "Explanation": "Set default applications for document types and URL schemes on macOS.",
            "More Information Link": ""
        }
    },
    "dvc": {
        "common": {
            "Examples": {
                "Check the DVC version": "dvc --version",
                "Display general help": "dvc --help",
                "Display help about a specific subcommand": "dvc {{subcommand}} --help",
                "Execute a DVC subcommand": "dvc {{subcommand}}"
            },
            "Explanation": "Data Version Control: like `git` for data.",
            "More Information Link": "https://dvc.org/"
        }
    },
    "dvc add": {
        "common": {
            "Examples": {
                "Add a single target file to the index": "dvc add {{path/to/file}}",
                "Add a target directory to the index": "dvc add {{path/to/directory}}",
                "Add a target file with a custom `.dvc` filename": "dvc add --file {{custom_name.dvc}} {{path/to/file}}",
                "Recursively add all the files in a given target directory": "dvc add --recursive {{path/to/directory}}"
            },
            "Explanation": "Add changed files to the index.",
            "More Information Link": "https://dvc.org/doc/command-reference/add"
        }
    },
    "dvc checkout": {
        "common": {
            "Examples": {
                "Checkout a specific version of a target from a different Git commit/tag/branch": "git checkout {{commit_hash|tag|branch}} {{target}} && dvc checkout {{target}}",
                "Checkout the latest version of all target files and directories": "dvc checkout",
                "Checkout to latest version of a specified target": "dvc checkout {{target}}"
            },
            "Explanation": "Checkout data files and directories from cache.",
            "More Information Link": "https://dvc.org/doc/command-reference/checkout"
        }
    },
    "dvc commit": {
        "common": {
            "Examples": {
                "Commit changes to a specified DVC-tracked target": "dvc commit {{target}}",
                "Commit changes to all DVC-tracked files and directories": "dvc commit",
                "Recursively commit all DVC-tracked files in a directory": "dvc commit --recursive {{path/to/directory}}"
            },
            "Explanation": "Record changes to DVC-tracked files in the project.",
            "More Information Link": "https://dvc.org/doc/command-reference/commit"
        }
    },
    "dvc config": {
        "common": {
            "Examples": {
                "Get the config value for a specified key for the current project": "dvc config {{key}}",
                "Get the name of the default remote": "dvc config core.remote",
                "Set a local, global, or system level config value": "dvc config --local/global/system {{key}} {{value}}",
                "Set the config value for a key on a project level": "dvc config {{key}} {{value}}",
                "Set the project's default remote": "dvc config core.remote {{remote_name}}",
                "Unset a project level config value for a given key": "dvc config --unset {{key}}",
                "Unset the project's default remote": "dvc config --unset core.remote"
            },
            "Explanation": "Low level command to manage custom configuration options for dvc repositories.\nThese configurations can be on project, local, global, or system level.",
            "More Information Link": "https://dvc.org/doc/command-reference/config"
        }
    },
    "dvc dag": {
        "common": {
            "Examples": {
                "Export the pipeline in the dot format": "dvc dag --dot > {{path/to/pipeline.dot}}",
                "Visualize the entire pipeline": "dvc dag",
                "Visualize the pipeline stages up to a specified target stage": "dvc dag {{target}}"
            },
            "Explanation": "Visualize the pipeline(s) defined in `dvc.yaml`.",
            "More Information Link": "https://dvc.org/doc/command-reference/dag"
        }
    },
    "dvc destroy": {
        "common": {
            "Examples": {
                "Destroy the current project": "dvc destroy",
                "Force destroy the current project": "dvc destroy --force"
            },
            "Explanation": "Remove all DVC files and directories from a DVC project.",
            "More Information Link": "https://dvc.org/doc/command-reference/destroy"
        }
    },
    "dvc diff": {
        "common": {
            "Examples": {
                "Compare DVC tracked files from different Git commits, tags, and branches w.r.t the current workspace": "dvc diff {{commit_hash/tag/branch}}",
                "Compare DVC tracked files, along with their latest hash": "dvc diff --show-hash {{commit}}",
                "Compare DVC tracked files, displaying the output as JSON": "dvc diff --show-json --show-hash {{commit}}",
                "Compare DVC tracked files, displaying the output as Markdown": "dvc diff --show-md --show-hash {{commit}}",
                "Compare the changes in DVC tracked files from 1 git commit to another": "dvc diff {{revision_b}} {{revision_a}}"
            },
            "Explanation": "Show changes in DVC tracked file and directories.",
            "More Information Link": "https://dvc.org/doc/command-reference/diff"
        }
    },
    "dvc fetch": {
        "common": {
            "Examples": {
                "Fetch changes for all branch and tags": "dvc fetch --all-branches --all-tags",
                "Fetch changes for all commits": "dvc fetch --all-commits",
                "Fetch changes from a specific remote upstream repository": "dvc fetch --remote {{remote_name}}",
                "Fetch the latest changes for a specific target/s": "dvc fetch {{target/s}}",
                "Fetch the latest changes from the default remote upstream repository (if set)": "dvc fetch"
            },
            "Explanation": "Download DVC tracked files and directories from a remote repository.",
            "More Information Link": "https://dvc.org/doc/command-reference/fetch"
        }
    },
    "dvc freeze": {
        "common": {
            "Examples": {
                "Freeze 1 or more specified stages": "dvc freeze {{stage_name_a}} [{{stage_name_b}} ...]"
            },
            "Explanation": "Freeze stages in the DVC pipeline.\nThis prevents DVC from tracking changes in stage dependencies and re-execution until unfreeze.\nSee also `dvs unfreeze`.",
            "More Information Link": "https://dvc.org/doc/command-reference/freeze"
        }
    },
    "dvc gc": {
        "common": {
            "Examples": {
                "Garbage collect from the cache, including a specific cloud remote storage": "dvc gc --all-commits --cloud --remote {{remote_name}}",
                "Garbage collect from the cache, including the default cloud remote storage (if set)": "dvc gc --all-commits --cloud",
                "Garbage collect from the cache, keeping only versions referenced by branch, tags, and commits": "dvc gc --all-branches --all-tags --all-commits",
                "Garbage collect from the cache, keeping only versions referenced by the current workspace": "dvc gc --workspace"
            },
            "Explanation": "Remove unused files and directories from the cache or remote storage.",
            "More Information Link": "https://dvc.org/doc/command-reference/gc"
        }
    },
    "dvc init": {
        "common": {
            "Examples": {
                "Initialize DVC in a subdirectory": "cd {{path/to/subdir}} && dvc init --sudir",
                "Initialize DVC without Git": "dvc init --no-scm",
                "Initialize a new local repository": "dvc init"
            },
            "Explanation": "Initialize a new local DVC repository.",
            "More Information Link": "https://dvc.org/doc/command-reference/init"
        }
    },
    "dvc unfreeze": {
        "common": {
            "Examples": {
                "Unfreeze 1 or more specified stages": "dvc unfreeze {{stage_name_a}} [{{stage_name_b}} ...]"
            },
            "Explanation": "Unfreeze stages in the DVC pipeline.\nThis allows DVC to start tracking changes in stage dependencies again after they were frozen.\nSee also `dvc freeze`.",
            "More Information Link": "https://dvc.org/doc/command-reference/unfreeze"
        }
    },
    "e2freefrag": {
        "linux": {
            "Examples": {
                "Check how many free blocks are present as contiguous and aligned free space": "e2freefrag {{/dev/sdXN}}",
                "Specify chunk size in kilobytes to print how many free chunks are available": "e2freefrag -c {{chunk_size_in_kb}} {{/dev/sdXN}}"
            },
            "Explanation": "Print the free space fragmentation information for ext2/ext3/ext4 filesystems.",
            "More Information Link": "https://linux.die.net/man/8/e2freefrag"
        }
    },
    "e2fsck": {
        "linux": {
            "Examples": {
                "Check filesystem and automatically repair any damaged blocks": "e2fsck -p {{/dev/sdXN}}",
                "Check filesystem in read only mode": "e2fsck -c {{/dev/sdXN}}",
                "Check filesystem, reporting any damaged blocks": "e2fsck {{/dev/sdXN}}"
            },
            "Explanation": "Check a Linux ext2/ext3/ext4 filesystem. The filesystem should be unmounted at the time the command is run.",
            "More Information Link": ""
        }
    },
    "e2label": {
        "linux": {
            "Examples": {
                "Change the volume label on a specific ext partition": "e2label {{/dev/sda1}} \"{{label_name}}\""
            },
            "Explanation": "Change the label on an ext2/ext3/ext4 filesystem.",
            "More Information Link": ""
        }
    },
    "e4defrag": {
        "linux": {
            "Examples": {
                "Defragment the filesystem": "e4defrag {{/dev/sdXN}}",
                "Print errors and the fragmentation count before and after each file": "e4defrag -v {{/dev/sdXN}}",
                "See how fragmented a filesystem is": "e4defrag -c {{/dev/sdXN}}"
            },
            "Explanation": "Defragment an ext4 filesystem.",
            "More Information Link": ""
        }
    },
    "ebook-convert": {
        "common": {
            "Examples": {
                "Convert Markdown or HTML to ebook with TOC, title and author": "ebook-convert {{source}} {{destination}} --level1-toc=\"//h:h1\" --level2-toc=\"//h:h2\" --level3-toc=\"//h:h3\" --title={{title}} --authors={{author}}",
                "Convert an ebook into another format": "ebook-convert {{source}} {{destination}}"
            },
            "Explanation": "Can be used to convert ebooks between common formats, e.g., pdf, epub and mobi.\nPart of the Calibre ebook library tool.",
            "More Information Link": "https://manual.calibre-ebook.com/generated/en/ebook-convert.html"
        }
    },
    "ebuild": {
        "linux": {
            "Examples": {
                "Clean the temporary build directories for the build file": "ebuild {{path/to/file.ebuild}} clean",
                "Compile the extracted sources": "ebuild {{path/to/file.ebuild}} compile",
                "Create or update the package manifest": "ebuild {{path/to/file.ebuild}} manifest",
                "Extract the sources to a temporary build directory": "ebuild {{path/to/file.ebuild}} unpack",
                "Fetch sources if they do not exist": "ebuild {{path/to/file.ebuild}} fetch",
                "Fetch, unpack, compile, install and qmerge the specified ebuild file": "ebuild {{path/to/file.ebuild}} merge",
                "Install the package to a temporary install directory": "ebuild {{path/to/file.ebuild}} install",
                "Install the temporary files to the live filesystem": "ebuild {{path/to/file.ebuild}} qmerge"
            },
            "Explanation": "A low level interface to the Gentoo Portage system.",
            "More Information Link": ""
        }
    },
    "echo": {
        "common": {
            "Examples": {
                "Append a message to the file": "echo \"{{Hello World}}\" >> {{file.txt}}",
                "Enable interpretation of backslash escapes (special characters)": "echo -e \"{{Column 1\\tColumn 2}}\"",
                "Print a message with environment variables": "echo \"{{My path is $PATH}}\"",
                "Print a message without the trailing newline": "echo -n \"{{Hello World}}\"",
                "Print a text message. Note: quotes are optional": "echo \"{{Hello World}}\""
            },
            "Explanation": "Print given arguments.",
            "More Information Link": ""
        }
    },
    "ect": {
        "common": {
            "Examples": {
                "Compress a file": "ect {{filename.png}}",
                "Compress a file with the highest compression level and multithreading": "ect -9 --mt-deflate {{filename.png}}",
                "Compress all the files in a directory recursively, keeping the original modification time": "ect -keep -recurse {{directory}}"
            },
            "Explanation": "Efficient Compression Tool (or ECT) is a C++ file optimizer. It supports PNG, JPEG, GZIP and ZIP files.",
            "More Information Link": "https://github.com/fhanau/Efficient-Compression-Tool"
        }
    },
    "ed": {
        "common": {
            "Examples": {
                "Add text to the current document. Mark completion by entering a period by itself in a new line": "a<Enter>{{text_to_insert}}<Enter>.",
                "Print the entire document (`,` is a shortcut to the range `1,$` which covers the start to the end of the document)": ",p",
                "Quit ed": "q",
                "Start ed editing an existing file (this shows the byte count of the loaded file)": "ed -p : {{path/to/file}}",
                "Start ed, editing an empty document (which can be saved as a new file in the current directory)": "ed",
                "Start ed, editing an empty document, with `:` as a command prompt indicator": "ed -p :",
                "Toggle the printing of error explanations. (By default, explanations are not printed and only a `?` appears)": "H",
                "Write the current document to a new file (the filename can be omitted if `ed` was called with an existing file)": "w {{filename}}"
            },
            "Explanation": "The original Unix text editor.",
            "More Information Link": ""
        }
    },
    "edit": {
        "linux": {
            "Examples": {
                "Edit action can be used to view any file on default mailcap explorer": "edit {{filename}}",
                "With `run-mailcap`": "run-mailcap --action=edit {{filename}}"
            },
            "Explanation": "An alias to a `run-mailcap`'s action edit.\nOriginally `run-mailcap` is used to process/edit mime-type/file.",
            "More Information Link": ""
        }
    },
    "edquota": {
        "linux": {
            "Examples": {
                "Duplicate a quota to other users": "sudo edquota -p {{reference_user}} {{destination_user1}} {{destination_user2}}",
                "Edit quota for a group": "sudo edquota --group {{group}}",
                "Edit quota of a specific user": "sudo edquota --user {{username}}",
                "Edit quota of the current user": "edquota --user $(whoami)",
                "Edit the default grace period": "sudo edquota -t",
                "Restrict operations to a given filesystem (by default edquota operates on all filesystems with quotas)": "sudo edquota --file-system {{filesystem}}"
            },
            "Explanation": "Edit quotas for a user or group. By default it operates on all filesystems with quotas.\nQuota information is stored permanently in the `quota.user` and `quota.group` files in the root of the filesystem.",
            "More Information Link": ""
        }
    },
    "efibootmgr": {
        "linux": {
            "Examples": {
                "Add UEFI Shell v2 as a boot option": "sudo efibootmgr -c -d {{/dev/sda1}} -l {{\\EFI\\tools\\Shell.efi}} -L \"{{UEFI Shell}}\"",
                "Change the current boot order": "sudo efibootmgr -o {{0002,0008,0001,0005}}",
                "Delete a boot option": "sudo efibootmgr -b {{0008}} --delete-bootnum",
                "List the current settings / bootnums": "efibootmgr",
                "List the filepaths": "efibootmgr -v"
            },
            "Explanation": "Manipulate the UEFI Boot Manager (the Bootoptions).",
            "More Information Link": ""
        }
    },
    "eix": {
        "linux": {
            "Examples": {
                "Exclude results from search": "eix --not --license {{license}}",
                "Search by package license": "eix --license {{license}}",
                "Search for a package": "eix {{package_name}}",
                "Search for installed packages": "eix --installed {{package_name}}",
                "Search in package descriptions": "eix --description \"{{description}}\""
            },
            "Explanation": "Utilities for searching local Gentoo packages.\nUpdate local package cache using `eix-update`.",
            "More Information Link": ""
        }
    },
    "eject": {
        "linux": {
            "Examples": {
                "Display the default device": "eject -d",
                "Eject a cd drive": "eject -r {{/dev/cdrom}}",
                "Eject a floppy drive": "eject -f {{/mnt/floppy}}",
                "Eject a specific device (the default order is cd-rom, scsi, floppy and tape)": "eject {{/dev/cdrom}}",
                "Eject a tape drive": "eject -q {{/mnt/tape}}",
                "Eject the default device": "eject",
                "Toggle whether a device's tray is open or closed": "eject -T {{/dev/cdrom}}"
            },
            "Explanation": "Eject cds, floppy disks and tape drives.",
            "More Information Link": ""
        }
    },
    "electrum": {
        "common": {
            "Examples": {
                "Connect only to a specific electrum-server instance": "electrum -p socks5:{{127.0.0.1}}:9050 -s {{56ckl5obj37gypcu.onion}}:50001:t -1",
                "Create a new wallet": "electrum -w {{new_wallet.dat}} create",
                "Create a signed transaction offline": "electrum mktx {{recipient}} {{amount}} -f 0.0000001 -F {{from}} -o",
                "Display all wallet receiving addresses": "electrum listaddresses -a",
                "Restore an existing wallet from seed offline": "electrum -w {{recovery_wallet.dat}} restore -o",
                "Sign a message": "electrum signmessage {{address}} {{message}}",
                "Verify a message": "electrum verifymessage {{address}} {{signature}} {{message}}"
            },
            "Explanation": "Ergonomic Bitcoin wallet and private key management.",
            "More Information Link": "https://electrum.org"
        }
    },
    "elinks": {
        "common": {
            "Examples": {
                "Dump output of webpage to console, colorizing the text with ANSI control codes": "elinks -dump -dump-color-mode {{1}} {{url}}",
                "Quit elinks": "Ctrl + C",
                "Start elinks": "elinks"
            },
            "Explanation": "A text based browser similar to lynx.",
            "More Information Link": "http://elinks.or.cz"
        }
    },
    "elixir": {
        "common": {
            "Examples": {
                "Evaluate Elixir code by passing it as an argument": "elixir -e \"{{code}}\"",
                "Run an Elixir file": "elixir {{path/to/file}}"
            },
            "Explanation": "Elixir programming language interpreter.",
            "More Information Link": "https://elixir-lang.org"
        }
    },
    "elm": {
        "common": {
            "Examples": {
                "Compile an Elm file, output the result to a Javascript file": "elm make {{source}} --output={{destination}}.js",
                "Compile an Elm file, output the result to an index.html file": "elm make {{source}}",
                "Initialize an Elm project, generates an elm.json file": "elm init",
                "Install Elm package from https://package.elm-lang.org": "elm install {{author}}/{{package}}",
                "Start interactive Elm shell": "elm repl",
                "Start local web server that compiles Elm files on page load": "elm reactor"
            },
            "Explanation": "Compile and run Elm source files.",
            "More Information Link": "https://elm-lang.org"
        }
    },
    "emacs": {
        "common": {
            "Examples": {
                "Open a file": "emacs {{path/to/file}}",
                "Open a file at a specified line number": "emacs +{{line_number}} {{path/to/file}}",
                "Quit": "Ctrl + X, Ctrl + C",
                "Save a file": "Ctrl + X, Ctrl + S",
                "Start in console mode (without X window)": "emacs -nw"
            },
            "Explanation": "The extensible, customizable, self-documenting, real-time display editor.",
            "More Information Link": "https://www.gnu.org/software/emacs"
        }
    },
    "emacsclient": {
        "common": {
            "Examples": {
                "Eval command in a new emacs frame": "emacsclient -c -e '({{command}})'",
                "Open a file in an existing emacs frame and return immediately": "emacsclient -n {{filename}}",
                "Open file in a new emacs frame": "emacsclient -c {{filename}}",
                "Open file in console mode (without X window)": "emacsclient -nw {{filename}}",
                "Open files in an existing Emacs server (using GUI if available)": "emacsclient {{filename}}"
            },
            "Explanation": "Open files in an existing emacs server.",
            "More Information Link": "https://www.emacswiki.org/emacs/EmacsClient"
        }
    },
    "ember": {
        "common": {
            "Examples": {
                "Build the project": "ember build",
                "Build the project in production mode": "ember build -prod",
                "Create a new Ember addon": "ember addon {{my_new_addon}}",
                "Create a new Ember application": "ember new {{my_new_app}}",
                "Install an ember-cli addon": "ember install {{name_of_addon}}",
                "Run a blueprint to generate something like a route or component": "ember generate {{type}} {{name}}",
                "Run the development server": "ember serve",
                "Run the test suite": "ember test"
            },
            "Explanation": "The Ember.js command line utility.\nUsed for creating and maintaining Ember.js applications.",
            "More Information Link": "https://cli.emberjs.com"
        }
    },
    "emerge": {
        "linux": {
            "Examples": {
                "Install a new package, with confirmation": "emerge -av {{package_name}}",
                "Remove a package, with confirmation": "emerge -Cav {{package_name}}",
                "Remove orphaned packages (that were installed only as dependencies)": "emerge -avc",
                "Resume a failed updated, skipping the failing package": "emerge --resume --skipfirst",
                "Search the package database for a keyword": "emerge -S {{keyword}}",
                "Synchronize all packages": "emerge --sync",
                "Update all packages, including dependencies": "emerge -uDNav @world"
            },
            "Explanation": "Gentoo Linux package manager utility.",
            "More Information Link": ""
        }
    },
    "emulator": {
        "common": {
            "Examples": {
                "Display the help": "emulator -help",
                "Display the webcams on your development computer that are available for emulation": "emulator -avd {{name}} -webcam-list",
                "Start an Android emulator device": "emulator -avd {{name}}",
                "Start an emulator overriding the facing back camera setting (use `-camera-front` for front camera)": "emulator -avd {{name}} -camera-back {{none|emulated|webcamN}}",
                "Start an emulator with a given SD card partition image file": "emulator -avd {{name}} -sdcard {{path/to/sdcard.img}}",
                "Start an emulator with network latency": "emulator -avd {{name}} -netdelay {{gsm|hscsd|gprs|edge|hsdpa|lte|evdo|none}}",
                "Start an emulator, making all TCP connections through a specified HTTP/HTTPS proxy (port number is required)": "emulator -avd {{name}} -http-proxy {{http://example.com:80}}",
                "Start an emulator, with a maximun network speed": "emulator -avd {{name}} -netspeed {{gsm|hscsd|gprs|edge|hsdpa|lte|evdo|full}}"
            },
            "Explanation": "Manager Android emulators from the command line.",
            "More Information Link": "https://developer.android.com/studio/run/emulator-commandline"
        }
    },
    "enca": {
        "common": {
            "Examples": {
                "Convert file(s) to a specific encoding": "enca -L {{language}} -x {{to_encoding}} {{file1 file2 ...}}",
                "Create a copy of an existing file using a different encoding": "enca -L {{language}} -x {{to_encoding}} < {{original_file}} > {{new_file}}",
                "Detect file(s) encoding according to the system's locale": "enca {{file1 file2 ...}}",
                "Detect file(s) encoding specifying a language in the POSIX/C locale format (e.g. zh_CN, en_US)": "enca -L {{language}} {{file1 file2 ...}}"
            },
            "Explanation": "Detect and convert the encoding of text files.",
            "More Information Link": "https://github.com/nijel/enca"
        }
    },
    "enscript": {
        "common": {
            "Examples": {
                "Display available syntax highlighting languages and file formats": "enscript --help-highlight",
                "Generate a PostScript file from a text file": "enscript {{path/to/input_file}} --output={{path/to/output_file}}",
                "Generate a PostScript file with a landscape layout, splitting the page into columns (maximum 9)": "enscript {{path/to/input_file}} --columns={{num}} --landscape --output={{path/to/output_file}}",
                "Generate a PostScript file with syntax highlighting and color for a specified language": "enscript {{path/to/input_file}} --color=1 --highlight={{language}} --output={{path/to/output_file}}",
                "Generate a file in a different language than PostScript": "enscript {{path/to/input_file}} --language={{html|rtf|...}} --output={{path/to/output_file}}"
            },
            "Explanation": "Convert text files to PostScript, HTML, RTF, ANSI, and overstrikes.",
            "More Information Link": "https://www.gnu.org/software/enscript"
        }
    },
    "entr": {
        "common": {
            "Examples": {
                "Rebuild and test with `make` if any `.c` source files in the current directory change": "{{ls *.c}} | entr {{'make && make test'}}",
                "Rebuild with `make` if any file in any subdirectory changes": "{{ag -l}} | entr {{make}}",
                "Run a command with the changed file (`/_`) as an argument": "{{ls *.sql}} | entr {{psql -f}} /_",
                "Send a `SIGTERM` to any previously spawned ruby subprocesses before executing `ruby main.rb`": "{{ls *.rb}} | entr -r {{ruby main.rb}}"
            },
            "Explanation": "Run arbitrary commands when files change.",
            "More Information Link": ""
        }
    },
    "enum4linux": {
        "linux": {
            "Examples": {
                "Enumerate using given login credentials": "enum4liux -u {{user_name}} -p {{password}} {{remote_host}}",
                "Get OS information": "enum4liux -o {{remote_host}}",
                "List shares": "enum4liux -S {{remote_host}}",
                "List usernames from a given host": "enum4liux -U {{remote_host}}",
                "Try to enumerate using all methods": "enum4linux -a {{remote_host}}"
            },
            "Explanation": "Tool for enumerating Windows and Samba information from remote systems.\nIt attempts to offer similar functionality to enum.exe formerly available from www.bindview.com.",
            "More Information Link": ""
        }
    },
    "env": {
        "common": {
            "Examples": {
                "Clear the environment and run a program": "env -i {{program}}",
                "Remove variable from the environment and run a program": "env -u {{variable}} {{program}}",
                "Run a program. Often used in scripts after the shebang (#!) for looking up the path to the program": "env {{program}}",
                "Set a variable and run a program": "env {{variable}}={{value}} {{program}}",
                "Set multiple variables and run a program": "env {{variable1}}={{value}} {{variable2}}={{value}} {{variable3}}={{value}} {{program}}",
                "Show the environment": "env"
            },
            "Explanation": "Show the environment or run a program in a modified environment.",
            "More Information Link": ""
        }
    },
    "envoy": {
        "common": {
            "Examples": {
                "Connect to the specified server via SSH": "envoy ssh {{server_name}}",
                "Dump a task as a bash script for inspection": "envoy run --pretend {{task_name}}",
                "Initialise a configuration file": "envoy init {{host_name}}",
                "Run a task": "envoy run {{task_name}}",
                "Run a task and continue on failure": "envoy run --continue {{task_name}}",
                "Run a task from a specific project": "envoy run --path {{path/to/directory}} {{task_name}}"
            },
            "Explanation": "A PHP-based task manager for Laravel remote servers.",
            "More Information Link": "https://laravel.com/docs/envoy"
        }
    },
    "envsubst": {
        "common": {
            "Examples": {
                "Replace environment variables in `stdin` and output to `stdout`": "echo '{{$HOME}}' | envsubst",
                "Replace environment variables in an input file and output to `stdout`": "envsubst < {{path/to/input_file}}",
                "Replace environment variables in an input file and output to a file": "envsubst < {{path/to/input_file}} > {{path/to/output_file}}",
                "Replace environment variables in an input file from a space-separated list": "envsubst '{{$USER $SHELL $HOME}}' < {{path/to/input_file}}"
            },
            "Explanation": "Substitutes environment variables with their value in shell format strings.\nVariables to be replaced should be in either `${var}` or `$var` format.",
            "More Information Link": ""
        }
    },
    "equery": {
        "linux": {
            "Examples": {
                "List all files installed by a package": "equery files --tree {{package_name}}",
                "List all installed packages": "equery list '*'",
                "List all packages that a given package depends on": "equery depgraph {{package_name}}",
                "List all packages that depend on a given package": "equery depends {{package_name}}",
                "Search for installed packages in the Portage tree and in overlays": "equery list -po {{package_name}}"
            },
            "Explanation": "View information about Portage packages.",
            "More Information Link": ""
        }
    },
    "erl": {
        "common": {
            "Examples": {
                "Compile and run sequential Erlang program as a common script and then exit": "erlc {{files}} && erl -noshell '{{mymodule:myfunction(arguments)}}, init:stop().'",
                "Connect to a running Erlang node": "erl -remsh {{nodename}}@{{hostname}} -sname {{custom_shortname}} -hidden -setcookie {{cookie_of_remote_node}}",
                "Tell the Erlang shell to load modules from a directory": "erl -pa {{directory_with_beam_files}}"
            },
            "Explanation": "Run and manage programs in the Erlang programming language.",
            "More Information Link": "https://www.erlang.org"
        }
    },
    "eslint": {
        "common": {
            "Examples": {
                "Create eslint config": "eslint --init",
                "Fix lint issues": "eslint --fix",
                "Lint on a given set of files": "eslint {{filename}}.js {{filename1}}.js",
                "Lint with config": "eslint -c {{path/to/config_file}} {{app/src}}"
            },
            "Explanation": "A pluggable linting utility for JavaScript and JSX.",
            "More Information Link": "https://eslint.org"
        }
    },
    "espeak": {
        "common": {
            "Examples": {
                "Save output to a WAV audio file, rather than speaking it directly": "espeak -w {{filename.wav}} \"It's GNU plus Linux\"",
                "Speak a file aloud": "espeak -f {{filename}}",
                "Speak a phrase aloud": "espeak \"I like to ride my bike.\"",
                "Use a different voice": "espeak -v {{voice}}"
            },
            "Explanation": "Uses text-to-speech to speak through the default sound device.",
            "More Information Link": "http://espeak.sourceforge.net"
        }
    },
    "etckeeper": {
        "linux": {
            "Examples": {
                "Check if there are uncommitted changes (only returns an exit code)": "sudo etckeeper unclean",
                "Commit all changes in /etc": "sudo etckeeper commit {{message}}",
                "Destroy existing repo and stop tracking changes": "sudo etckeeper uninit",
                "Run arbitrary git commands": "sudo etckeeper vcs {{status}}",
                "Set up a git repo and perform various setup tasks (run from /etc)": "sudo etckeeper init"
            },
            "Explanation": "Track system configuration files in git.",
            "More Information Link": "http://etckeeper.branchable.com/"
        }
    },
    "ethtool": {
        "linux": {
            "Examples": {
                "Set the link speed, duplex mode, and parameter autonegotiation for a given interface": "ethtool -s {{eth0}} speed {{10|100|1000}} duplex {{half|full}} autoneg {{on|off}}"
            },
            "Explanation": "Display and modify Network Interface Controller (NIC) parameters.",
            "More Information Link": "http://man7.org/linux/man-pages/man8/ethtool.8.html"
        }
    },
    "eva": {
        "common": {
            "Examples": {
                "Calculate an expression forcing the number of decimal places to 5": "eva --fix {{5}} \"{{5 / 3}}\"",
                "Calculate an expression with sine and cosine": "eva \"{{sin(1) + cos(1)}}\"",
                "Calculate the result of an expression": "eva \"{{(1 + 2) * 2 ^ 2}}\"",
                "Run the calculator in interactive mode": "eva"
            },
            "Explanation": "Simple calculator REPL, similar to `bc`, with syntax highlighting and persistent history.",
            "More Information Link": "https://github.com/NerdyPepper/eva"
        }
    },
    "eval": {
        "linux": {
            "Examples": {
                "Call `echo` with the \"foo\" argument": "eval \"{{echo foo}}\"",
                "Set a variable in the current shell": "eval \"{{foo=bar}}\""
            },
            "Explanation": "Execute arguments as a single command in the current shell and return its result.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Call `echo` with the \"foo\" argument": "eval \"{{echo foo}}\"",
                "Set a variable in the current shell": "eval \"{{foo=bar}}\""
            },
            "Explanation": "Execute arguments as a single command in the current shell and return its result.",
            "More Information Link": ""
        }
    },
    "eventcreate": {
        "windows": {
            "Examples": {
                "Create a new event with a given id (1-1000) in the log": "eventcreate /t {{success|error|warning|information}} /id {{id}} /d \"{{message}}\"",
                "Create an event in a remote machine's event log": "eventcreate /s {{hostname}} /u {{username}} /p {{password}} /t {{type}} /id {{id}} /d \"{{message}}\"",
                "Create an event in a specific event log": "eventcreate /l {{log_name}} /t {{type}} /id {{id}} /d \"{{message}}\"",
                "Create an event with a specific source": "eventcreate /so {{source_name}} /t {{type}} /id {{id}} /d \"{{message}}\""
            },
            "Explanation": "Create custom entries in the event log.\nEvent IDs can be any number between 1 and 1000.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/eventcreate"
        }
    },
    "evil-winrm": {
        "common": {
            "Examples": {
                "Connect to a host": "evil-winrm --ip {{ip}} --user {{user}} --password {{password}}",
                "Connect to a host, passing the password hash": "evil-winrm --ip {{ip}} --user {{user}} --hash {{nt_hash}}",
                "Connect to a host, specifying folders for scripts and executables": "evil-winrm --ip {{ip}} --user {{user}} --password {{password}} --scripts {{path/to/scripts}} --executables {{path/to/executables}}",
                "Connect to a host, using SSL": "evil-winrm --ip {{ip}} --user {{user}} --password {{password}} --ssl --pub-key {{path/to/pubkey}} --priv-key {{path/to/privkey}}",
                "Get a list of loaded PowerShell functions": "PS > menu",
                "Invoke a binary on the host from the `--executables` folder": "PS > Invoke-Binary {{binary.exe}}",
                "Load a PowerShell script from the `--scripts` folder": "PS > {{script.ps1}}",
                "Upload a file to the host": "PS > upload {{path/to/local/file}} {{path/to/remote/file}}"
            },
            "Explanation": "Windows Remote Management (WinRM) shell for pentesting.\nOnce connected, we get a PowerShell prompt on the target host.",
            "More Information Link": "https://github.com/Hackplayers/evil-winrm"
        }
    },
    "exa": {
        "common": {
            "Examples": {
                "Display a tree of files, three levels deep": "exa --long --tree --level={{3}}",
                "List all files, including hidden files": "exa --all",
                "List files one per line": "exa --oneline",
                "List files sorted by modification date (oldest first)": "exa --long --sort={{modified}}",
                "List files with the largest at the top": "exa --reverse --sort={{size}}",
                "Long format list (permissions, ownership, size and modification date) of all files": "exa --long --all"
            },
            "Explanation": "A modern replacement for `ls` (List directory contents).",
            "More Information Link": "https://the.exa.website"
        }
    },
    "exec": {
        "common": {
            "Examples": {
                "Replace with the specified command and change the process name": "exec -a {{process_name}} {{command -with -flags}}",
                "Replace with the specified command and login using the default shell": "exec -l {{command -with -flags}}",
                "Replace with the specified command using the current environment variables": "exec {{command -with -flags}}",
                "Replace with the specified command, clearing environment variables": "exec -c {{command -with -flags}}"
            },
            "Explanation": "Replace the current process with another process.",
            "More Information Link": ""
        }
    },
    "exif": {
        "linux": {
            "Examples": {
                "Change the value of the \"Artist\" tag to John Smith and save to new.jpg": "exif --output={{new.jpg}} --ifd={{0}} --tag=\"{{Artist}}\" --set-value=\"{{John Smith}}\" --no-fixup {{image.jpg}}",
                "Extract the image thumbnail into the file thumbnail.jpg": "exif --extract-thumbnail --output={{thumbnail.jpg}} {{image.jpg}}",
                "Show a table listing known EXIF tags and whether each one exists in an image": "exif --list-tags --no-fixup {{image.jpg}}",
                "Show all recognized EXIF information in an image": "exif {{path/to/image.jpg}}",
                "Show the raw contents of the \"Model\" tag in the given image": "exif --ifd={{0}} --tag={{Model}} --machine-readable {{image.jpg}}"
            },
            "Explanation": "Show and change EXIF information in JPEG files.",
            "More Information Link": "https://github.com/libexif/exif/"
        }
    },
    "exiftool": {
        "common": {
            "Examples": {
                "Move the date at which all JPEG photos in the current directory were taken 1 day and 2 hours backward": "exiftool \"-AllDates-=0:0:1 2:0:0\" -ext jpg",
                "Move the date at which all photos in a directory were taken 1 hour forward": "exiftool \"-AllDates+=0:0:0 1:0:0\" {{path/to/directory}}",
                "Only change the `DateTimeOriginal` field subtracting 1.5 hours, without keeping backups": "exiftool -DateTimeOriginal-=1.5 -overwrite_original",
                "Recursively rename all JPEG photos in a directory based on the `DateTimeOriginal` field": "exiftool '-filename<DateTimeOriginal' -d %Y-%m-%d_%H-%M-%S%%lc.%%e {{path/to/directory}} -r -ext jpg",
                "Remove all EXIF metadata from the given files": "exiftool -All= {{file1 file2 ...}}"
            },
            "Explanation": "Read and write meta information in files.",
            "More Information Link": "https://exiftool.org"
        }
    },
    "exit": {
        "common": {
            "Examples": {
                "Exit the shell with the exit code of the last command executed": "exit",
                "Exit the shell with the specified exit code": "exit {{exit_code}}"
            },
            "Explanation": "Exit the shell.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Quit the current CMD instance": "exit",
                "Quit the current batch script": "exit /b",
                "Quit using a specific exit code": "exit {{exit_code}}"
            },
            "Explanation": "Quit the current CMD instance or the current batch file.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/exit"
        }
    },
    "exiv2": {
        "common": {
            "Examples": {
                "Delete all metadata from an image": "exiv2 -d a {{path/to/file}}",
                "Delete all metadata, preserving the file timestamp": "exiv2 -d a -k {{path/to/file}}",
                "Print a summary of the image Exif metadata": "exiv2 {{path/to/file}}",
                "Print all metadata (Exif, IPTC, XMP) with interpreted values": "exiv2 -P kt {{path/to/file}}",
                "Print all metadata with raw values": "exiv2 -P kv {{path/to/file}}",
                "Rename the file, prepending the date and time from metadata (not from the file timestamp)": "exiv2 -r {{'%Y%m%d_%H%M%S_:basename:'}} {{path/to/file}}"
            },
            "Explanation": "Image metadata manipulation tool.",
            "More Information Link": "https://www.exiv2.org/manpage.html"
        }
    },
    "expand": {
        "common": {
            "Examples": {
                "Convert tabs in each file to spaces, writing to standard output": "expand {{file}}",
                "Convert tabs to spaces, reading from standard input": "expand",
                "Do not convert tabs after non blanks": "expand -i {{file}}",
                "Have tabs a certain number of characters apart, not 8": "expand -t={{number}} {{file}}",
                "Use a comma separated list of explicit tab positions": "expand -t={{1,4,6}}"
            },
            "Explanation": "Convert tabs to spaces.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display the list of files in a source Cabinet file": "expand {{path/to/file.cab}} {{path/to/directory}} -d",
                "Ignore the directory structure when uncompressing, and add them to a single directory": "expand {{path/to/file.cab}} {{path/to/directory}} -i",
                "Uncompress a single-file Cabinet file to the specified directory": "expand {{path/to/file.cab}} {{path/to/directory}}",
                "Uncompress a specific file from a Cabinet file": "expand {{path/to/file.cab}} {{path/to/directory}} -f:{{file}}",
                "Uncompress all files from the Cabinet file": "expand {{path/to/file.cab}} {{path/to/directory}} -f:*"
            },
            "Explanation": "Uncompress one or more Windows Cabinet files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/expand"
        }
    },
    "expect": {
        "linux": {
            "Examples": {
                "Enter an interactive REPL (use `exit` or Ctrl + D to exit)": "expect -i",
                "Execute a specified expect script": "expect -c \"{{commands}}\"",
                "Execute an expect script from a file": "expect {{path/to/file}}"
            },
            "Explanation": "Script executor that interacts with other programs that require user input.",
            "More Information Link": "https://linux.die.net/man/1/expect"
        }
    },
    "explorer": {
        "windows": {
            "Examples": {
                "Open Windows Explorer": "explorer",
                "Open Windows Explorer in a specific directory": "explorer {{path/to/directory}}",
                "Open Windows Explorer in the current directory": "explorer ."
            },
            "Explanation": "The Windows File Explorer.",
            "More Information Link": ""
        }
    },
    "export": {
        "linux": {
            "Examples": {
                "Append something to the PATH variable": "export PATH=$PATH:{{path/to/append}}",
                "Mark a shell function for export": "export -f {{FUNCTION_NAME}}",
                "Remove an environment variable": "export -n {{VARIABLE}}",
                "Set a new environment variable": "export {{VARIABLE}}={{value}}"
            },
            "Explanation": "Command to mark shell variables in the current environment to be exported with any newly forked child processes.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Append something to the PATH variable": "export PATH=$PATH:{{path/to/append}}",
                "Remove an environment variable": "export -n {{VARIABLE}}",
                "Set a new environment variable": "export {{VARIABLE}}={{value}}"
            },
            "Explanation": "Command to mark shell variables in the current environment to be exported with any newly forked child processes.",
            "More Information Link": ""
        }
    },
    "expose": {
        "common": {
            "Examples": {
                "Register your authentication token": "expose token {{token}}",
                "Run the Expose server": "expose serve",
                "Run the Expose server with a specific hostname": "expose serve {{hostname}}",
                "Share a local url": "expose share {{url}}",
                "Share the current working directory": "expose",
                "Share the current working directory with a specific subdomain": "expose --subdomain={{subdomain}}"
            },
            "Explanation": "An open source tunnel application for sharing websites.",
            "More Information Link": "https://beyondco.de/docs/expose"
        }
    },
    "expr": {
        "common": {
            "Examples": {
                "Evaluate logical or math expression with an operator ('+', '-', '*', '&', '|', etc.). Special symbols should be escaped": "expr {{first_argument}} {{operator}} {{second_argument}}",
                "Extract part of the string": "echo $(expr substr {{string}} {{position_to_start}} {{number_of_characters}}",
                "Extract part of the string which matches a regular expression": "echo $(expr {{string}} : '\\({{regular_expression}}\\)')",
                "Get position of the first character in 'string' that matches 'substring'": "echo $(expr index {{string}} {{substring}})",
                "Get string length": "expr length {{string}}"
            },
            "Explanation": "Evaluate expressions and manipulate strings.",
            "More Information Link": ""
        }
    },
    "extrace": {
        "linux": {
            "Examples": {
                "Display the user running each process": "sudo extrace -u",
                "Print the current working directory of each process": "sudo extrace -d",
                "Resolve the full path of each executable": "sudo extrace -l",
                "Run a command and only trace descendants of this command": "sudo extrace {{command}}",
                "Trace all program executions occurring on the system": "sudo extrace"
            },
            "Explanation": "Trace exec() calls.",
            "More Information Link": "https://github.com/chneukirchen/extrace"
        }
    },
    "extundelete": {
        "linux": {
            "Examples": {
                "Restore a directory from a path relative to root (Do not start the path with `/`)": "extundelete {{/dev/sdXN}} --restore-directory {{path/to/directory}}",
                "Restore a file from a path relative to root (Do not start the path with `/`)": "extundelete {{/dev/sdXN}} --restore-file {{path/to/file}}",
                "Restore all deleted files inside partition N on device X": "sudo extundelete {{/dev/sdXN}} --restore-all",
                "Restore all files deleted after January 1st, 2020 (in Unix time)": "extundelete {{/dev/sdXN}} --restore-all --after {{1577840400}}"
            },
            "Explanation": "Recover deleted files from ext3 or ext4 partitions by parsing the journal.\nSee also `date` for Unix time information and `umount` for unmounting partitions.",
            "More Information Link": "http://extundelete.sourceforge.net"
        }
    },
    "eyeD3": {
        "linux": {
            "Examples": {
                "Set the album of all the MP3 files in a directory": "eyeD3 --album \"{{Album Name}}\" {{*.mp3}}",
                "Set the front cover art for an MP3 file": "eyeD3 --add-image {{front_cover.jpeg}}:FRONT_COVER: {{filename.mp3}}",
                "Set the title of an MP3 file": "eyeD3 --title \"{{A Title}}\" {{filename.mp3}}",
                "View information about an MP3 file": "eyeD3 {{filename.mp3}}"
            },
            "Explanation": "Read and manipulate metadata of MP3 files.",
            "More Information Link": "https://eyed3.readthedocs.io/en/latest/"
        }
    },
    "f3fix": {
        "common": {
            "Examples": {
                "Fill a fake flash drive with a single partition that matches its real capacity": "sudo f3fix {{/dev/device_name}}",
                "Mark the partition as bootable": "sudo f3fix --boot {{/dev/device_name}}",
                "Specify the filesystem": "sudo f3fix --fs-type={{filesystem_type}} {{/dev/device_name}}"
            },
            "Explanation": "Edit the partition table of a fake flash drive.\nSee also `f3probe`, `f3write`, `f3read`.",
            "More Information Link": "http://oss.digirati.com.br/f3/"
        }
    },
    "f3probe": {
        "common": {
            "Examples": {
                "Probe a block device": "sudo f3probe {{path/to/block_device}}",
                "Time disk operations": "sudo f3probe --time-ops {{path/to/block_device}}",
                "Use the minimum about of RAM possible": "sudo f3probe --min-memory {{path/to/block_device}}"
            },
            "Explanation": "Probe a block device (e.g. a flash drive or a microSD card) for counterfeit flash memory.\nSee also `f3read`, `f3write`, `f3fix`.",
            "More Information Link": "https://github.com/AltraMayor/f3"
        }
    },
    "f3read": {
        "common": {
            "Examples": {
                "Validate a device by checking the files in a given directory": "f3read {{path/to/mount_point}}"
            },
            "Explanation": "Validate .h2w files to test the real capacity of the drive.\nSee also `f3write`, `f3probe`, `f3fix`.",
            "More Information Link": "http://oss.digirati.com.br/f3/"
        }
    },
    "f3write": {
        "common": {
            "Examples": {
                "Limit the write speed": "f3write --max-write-rate={{kb_per_second}} {{path/to/mount_point}}",
                "Write test files to a given directory, filling the drive": "f3write {{path/to/mount_point}}"
            },
            "Explanation": "Fill a drive out with .h2w files to test its real capacity.\nSee also `f3read`, `f3probe`, `f3fix`.",
            "More Information Link": "http://oss.digirati.com.br/f3/"
        }
    },
    "f5fpc": {
        "linux": {
            "Examples": {
                "Open a new VPN connection": "sudo f5fpc --start",
                "Open a new VPN connection to a specific host": "sudo f5fpc --start --host {{host.example.com}}",
                "Show the current VPN status": "sudo f5fpc --info",
                "Shutdown the VPN connection": "sudo f5fpc --stop",
                "Specify a username (user will be prompted for a password)": "sudo f5fpc --start --host {{host.example.com}} --username {{user}}"
            },
            "Explanation": "A proprietry commercial SSL VPN client by BIG-IP Edge.",
            "More Information Link": ""
        }
    },
    "factor": {
        "common": {
            "Examples": {
                "Display the prime-factorization of a number": "factor {{number}}",
                "Take the input from `stdin` if no argument is specified": "echo {{number}} | factor"
            },
            "Explanation": "Prints the prime factorization of a number.",
            "More Information Link": ""
        }
    },
    "fail2ban-client": {
        "linux": {
            "Examples": {
                "Remove the specified IP from the jail service's ban list": "fail2ban-client set {{jail}} unbanip {{ip}}",
                "Retrieve current status of the jail service": "fail2ban-client status {{jail}}",
                "Verify fail2ban server is alive": "fail2ban-client ping"
            },
            "Explanation": "Configure and control fail2ban server.",
            "More Information Link": "https://github.com/fail2ban/fail2ban"
        }
    },
    "faketime": {
        "linux": {
            "Examples": {
                "Fake the time to this evening, before printing the result of `date`": "faketime '{{today 23:30}}' {{date}}",
                "Open a new `bash` shell, which uses yesterday as the current date": "faketime '{{yesterday}}' {{bash}}",
                "Simulate how any program would act next friday night": "faketime '{{next Friday 1 am}}' {{path/to/any/program}}"
            },
            "Explanation": "Fake the system time for a given command.",
            "More Information Link": "https://manpages.ubuntu.com/manpages/trusty/man1/faketime.1.html"
        }
    },
    "fallocate": {
        "linux": {
            "Examples": {
                "Reserve a file taking up 700MB of disk space": "fallocate --length {{700M}} {{path/to/file}}",
                "Shrink 20MB of space after 100MB in a file": "fallocate --collapse-range --offset {{100M}} --length {{20M}} {{path/to/file}}",
                "Shrink an already allocated file by 200MB": "fallocate --collapse-range --length {{200M}} {{path/to/file}}"
            },
            "Explanation": "Reserve or deallocate disk space to files.\nThe utility allocates space without zeroing.",
            "More Information Link": ""
        }
    },
    "false": {
        "common": {
            "Examples": {
                "Return an exit code of 1": "false"
            },
            "Explanation": "Returns an exit code of 1.",
            "More Information Link": ""
        }
    },
    "fastboot": {
        "common": {
            "Examples": {
                "Display all information of a device": "fastboot getvar all",
                "Display connected devices": "fastboot devices",
                "Flash a custom recovery image": "fastboot flash recovery {{file.img}}",
                "Flash a given image": "fastboot flash {{file.zip}}",
                "Reboot the device from fastboot mode into fastboot mode again": "fastboot reboot bootloader",
                "Relock the bootloader": "fastboot oem lock",
                "Unlock the bootloader": "fastboot oem unlock"
            },
            "Explanation": "Communicate with connected Android devices when in bootloader mode (the one place `adb` doesn't work).",
            "More Information Link": "https://android.googlesource.com/platform/system/core/+/master/fastboot/#fastboot"
        }
    },
    "fatlabel": {
        "linux": {
            "Examples": {
                "Get the label of a FAT32 partition": "fatlabel {{/dev/sda1}}",
                "Set the label of a FAT32 partition": "fatlabel {{/dev/sdc3}} \"{{new_label}}\""
            },
            "Explanation": "Sets or gets the label of a FAT32 partition.",
            "More Information Link": ""
        }
    },
    "fc": {
        "linux": {
            "Examples": {
                "List recent commands from history": "fc -l",
                "Open in the default system editor": "fc",
                "Specify an editor to open with": "fc -e {{'emacs'}}"
            },
            "Explanation": "Open the most recent command and edit it.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "List recent commands from history": "fc -l",
                "Open in the default system editor": "fc",
                "Specify an editor to open with": "fc -e {{'emacs'}}"
            },
            "Explanation": "Open the most recent command and edit it.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Compare 2 specified files": "fc {{path/to/file_1}} {{path/to/file_2}}",
                "Compare files as ASCII text": "fc /l {{path/to/file_1}} {{path/to/file_2}}",
                "Compare files as Unicode text": "fc /u {{path/to/file_1}} {{path/to/file_2}}",
                "Compare files as binary": "fc /b {{path/to/file_1}} {{path/to/file_2}}",
                "Compress whitespace (tabs and spaces) for comparisons": "fc /w {{path/to/file_1}} {{path/to/file_2}}",
                "Disable tab-to-space expansion": "fc /t {{path/to/file_1}} {{path/to/file_2}}",
                "Perform a case-insensitive comparison": "fc /c {{path/to/file_1}} {{path/to/file_2}}"
            },
            "Explanation": "Compare the differences between two files or sets of files.\nUse wildcards (*) to compare sets of files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/fc"
        }
    },
    "fc-cache": {
        "linux": {
            "Examples": {
                "Erase font cache files, then generate new font cache files": "fc-cache -r",
                "Force a rebuild of all font cache files, without checking if cache is up-to-date": "fc-cache -f",
                "Generate font cache files": "fc-cache"
            },
            "Explanation": "Scan font directories in order to build font cache files.",
            "More Information Link": ""
        }
    },
    "fc-list": {
        "linux": {
            "Examples": {
                "Return a list of installed fonts in your system": "fc-list",
                "Return a list of installed fonts with given name": "fc-list | grep '{{DejaVu Serif}}'",
                "Return the number of installed fonts in your system": "fc-list | wc -l"
            },
            "Explanation": "List available fonts installed on the system.",
            "More Information Link": ""
        }
    },
    "fc-match": {
        "linux": {
            "Examples": {
                "Return a sorted list of best matching fonts": "fc-match -s '{{DejaVu Serif}}'"
            },
            "Explanation": "Match available fonts.",
            "More Information Link": ""
        }
    },
    "fc-pattern": {
        "linux": {
            "Examples": {
                "Display default information about a font": "fc-pattern -d '{{DejaVu Serif}}'"
            },
            "Explanation": "Shows information about a font matching a pattern.",
            "More Information Link": ""
        }
    },
    "fcrackzip": {
        "linux": {
            "Examples": {
                "Benchmark cracking performance": "fcrackzip --benchmark",
                "Brute-force a password containing only digits, starting from the password `12345`": "fcrackzip --brute-force --length 5 --charset 1 --init-password 12345 {{archive}}",
                "Brute-force a password in verbose mode with a length of 3 characters that only contains lowercase characters, `$` and `%`": "fcrackzip -v --brute-force --length 3 --charset a:$% {{archive}}",
                "Brute-force a password that contains only lowercase and special characters": "fcrackzip --brute-force --length 4 --charset a! {{archive}}",
                "Brute-force a password with a length of 4 to 8 characters, and contains only alphanumeric characters (order matters)": "fcrackzip --brute-force --length 4-8 --charset aA1 {{archive}}",
                "Crack a password using a wordlist": "fcrackzip --use-unzip --dictionary --init-password {{wordlist}} {{archive}}"
            },
            "Explanation": "ZIP archive password cracking utility.",
            "More Information Link": ""
        }
    },
    "fd": {
        "common": {
            "Examples": {
                "Find files in a specific directory": "fd {{pattern}} {{path/to/dir}}",
                "Find files that begin with \"foo\"": "fd {{'^foo'}}",
                "Find files with a specific extension": "fd --extension {{txt}}",
                "Include ignored and hidden files in the search": "fd --hidden --no-ignore {{pattern}}",
                "Recursively find files matching the given pattern in the current directory": "fd {{pattern}}"
            },
            "Explanation": "An alternative to `find`.\nAims to be faster and easier to use than `find`.",
            "More Information Link": "https://github.com/sharkdp/fd"
        }
    },
    "fdesetup": {
        "osx": {
            "Examples": {
                "Add FileVault enabled user": "sudo fdesetup add -usertoadd user1",
                "Disable FileVault": "sudo fdesetup disable",
                "Enable FileVault": "sudo fdesetup enable",
                "Get current FileVault status": "fdesetup status",
                "List current FileVault enabled users": "sudo fdesetup list"
            },
            "Explanation": "Set and retrieve FileVault related information.",
            "More Information Link": ""
        }
    },
    "fdisk": {
        "linux": {
            "Examples": {
                "List partitions": "fdisk -l",
                "Start the partition manipulator": "fdisk {{/dev/sda}}"
            },
            "Explanation": "A program for managing partition tables and partitions on a hard disk.",
            "More Information Link": ""
        }
    },
    "fdroid": {
        "common": {
            "Examples": {
                "Build a specific app": "fdroid build {{app_id}}",
                "Build a specific app in a build server VM": "fdroid build {{app_id}} --server",
                "Check if the metadata is formatted correctly": "fdroid lint --format {{app_id}}",
                "Fix the formatting automatically (if possible)": "fdroid rewritemeta {{app_id}}",
                "Install the app on every connected device": "fdroid install {{app_id}}",
                "Publish the app to the local repository": "fdroid publish {{app_id}}"
            },
            "Explanation": "F-Droid build tool.\nF-Droid is an installable catalogue of FOSS (Free and Open Source Software) applications for the Android platform.",
            "More Information Link": "https://f-droid.org/"
        }
    },
    "fdroidcl": {
        "common": {
            "Examples": {
                "Display info about an app": "fdroidcl show {{app_id}}",
                "Download an APK file": "fdroidcl download {{app_id}}",
                "Fetch the F-Droid index": "fdroidcl update",
                "Install an app on a connected device": "fdroidcl install {{app_id}}",
                "Search for an app in the index": "fdroidcl search {{search_pattern}}"
            },
            "Explanation": "F-Droid CLI client.",
            "More Information Link": "https://github.com/mvdan/fdroidcl"
        }
    },
    "fdupes": {
        "common": {
            "Examples": {
                "Search a single directory": "fdupes {{directory}}",
                "Search all directories recursively": "fdupes -r {{directory}}",
                "Search multiple directories": "fdupes {{directory1}} {{directory2}}",
                "Search multiple directories, one recursively": "fdupes {{directory1}} -R {{directory2}}"
            },
            "Explanation": "Finds duplicate files in a given set of directories.",
            "More Information Link": "https://github.com/adrianlopezroche/fdupes"
        }
    },
    "feedreader": {
        "linux": {
            "Examples": {
                "Add a URL for a feed to follow": "feedreader --addFeed={{feed_url}}",
                "Download all images from a specific article": "feedreader --url={{feed_url}} --grabImages={{article_path}}",
                "Grab a specific article using its URL": "feedreader --grabArticle={{article_url}}",
                "Play media from a URL": "feedreader --playMedia={{article_url}}",
                "Print the count of unread articles": "feedreader --unreadCount"
            },
            "Explanation": "A GUI desktop RSS client.",
            "More Information Link": "https://jangernert.github.io/FeedReader/"
        }
    },
    "feh": {
        "linux": {
            "Examples": {
                "Create a montage of all images within a directory. Outputs as a new image": "feh --montage --thumb-height {{150}} --thumb-width {{150}} --index-info \"{{%nn%wx%h}}\" --output {{path/to/montage_image.png}}",
                "Exit after the last image": "feh --cycle-once {{path/to/images}}",
                "Set the slideshow cycle delay": "feh --slideshow-delay {{seconds}} {{path/to/images}}",
                "Set your wallpaper (centered, filled, maximized, scaled or tiled)": "feh --bg-{{center|fill|max|scale|tile}} {{path/to/image}}",
                "View images locally or using a URL": "feh {{path/to/images}}",
                "View images recursively": "feh --recursive {{path/to/images}}",
                "View images without window borders": "feh --borderless {{path/to/images}}"
            },
            "Explanation": "Lightweight image viewing utility.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Exit after the last image": "feh --cycle-once {{path/to/images}}",
                "Set the slideshow cycle delay": "feh --slideshow-delay {{seconds}} {{path/to/images}}",
                "Set your wallpaper (centered, filled, maximized, scaled or tiled)": "feh --bg-{{center|fill|max|scale|tile}} {{path/to/image}}",
                "View images locally or using a URL": "feh {{path/to/images}}",
                "View images recursively": "feh --recursive {{path/to/images}}",
                "View images without window borders": "feh --borderless {{path/to/images}}"
            },
            "Explanation": "Lightweight image viewing utility.",
            "More Information Link": ""
        }
    },
    "ffmpeg": {
        "common": {
            "Examples": {
                "Combine numbered images (frame_1.jpg, frame_2.jpg, etc) into a video or GIF": "ffmpeg -i {{frame_%d.jpg}} -f image2 {{video.mpg|video.gif}}",
                "Convert AVI video to MP4. AAC Audio @ 128kbit, h264 Video @ CRF 23": "ffmpeg -i {{input_video}}.avi -codec:audio aac -b:audio 128k -codec:video libx264 -crf 23 {{output_video}}.mp4",
                "Convert MP4 video to VP9 codec. For the best quality, use a CRF value (recommended range 15-35) and -b:video MUST be 0": "ffmpeg -i {{input_video}}.mp4 -codec:video libvpx-vp9 -crf {{30}} -b:video 0 -codec:audio libopus -vbr on -threads {{number_of_threads}} {{output_video}}.webm",
                "Convert frames from a video or GIF into individual numbered images": "ffmpeg -i {{video.mpg|video.gif}} {{frame_%d.png}}",
                "Extract the sound from a video and save it as MP3": "ffmpeg -i {{video.mp4}} -vn {{sound}}.mp3",
                "Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image": "ffmpeg -ss {{mm:ss}} -i {{video.mp4}} -frames 1 -s {{128x128}} -f image2 {{image.png}}",
                "Remux MKV video to MP4 without re-encoding audio or video streams": "ffmpeg -i {{input_video}}.mkv -codec copy {{output_video}}.mp4",
                "Trim a video from a given start time mm:ss to an end time mm2:ss2 (omit the -to flag to trim till the end)": "ffmpeg -ss {{mm:ss}} -to {{mm2:ss2}} -i {{video.mp4}} -codec copy {{output.mp4}}"
            },
            "Explanation": "Video conversion tool.",
            "More Information Link": "https://ffmpeg.org"
        }
    },
    "ffprobe": {
        "common": {
            "Examples": {
                "Display all available stream info for a media file": "ffprobe -v error -show_entries {{input.mp4}}",
                "Display media duration": "ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}",
                "Display the average bit rate of a video": "ffprobe -v error -select_streams v:0 -show_entries stream=bit_rate -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}",
                "Display the frame rate of a video": "ffprobe -v error -select_streams v:0 -show_entries stream=avg_frame_rate -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}",
                "Display the width or height of a video": "ffprobe -v error -select_streams v:0 -show_entries stream={{width|height}} -of default=noprint_wrappers=1:nokey=1 {{input.mp4}}"
            },
            "Explanation": "Multimedia stream analyzer.",
            "More Information Link": "https://ffmpeg.org/ffprobe.html"
        }
    },
    "ffsend": {
        "common": {
            "Examples": {
                "Download a file": "ffsend download {{url}}",
                "Download a file protected by password": "ffsend download {{file}} -p {{password}}",
                "Upload a file": "ffsend upload {{file}}",
                "Upload a file and allow 4 downloads": "ffsend upload {{file}} -d {{4}}",
                "Upload a file with password": "ffsend upload {{file}} -p {{password}}"
            },
            "Explanation": "Easily and securely share files from command line.",
            "More Information Link": "https://gitlab.com/timvisee/ffsend"
        }
    },
    "fg": {
        "common": {
            "Examples": {
                "Bring a specific job to foreground": "fg {{job_id}}",
                "Bring most recently suspended background job to foreground": "fg"
            },
            "Explanation": "Run jobs in foreground.",
            "More Information Link": ""
        }
    },
    "fgrep": {
        "common": {
            "Examples": {
                "Count the number of lines that match the given string in a file": "fgrep -c {{search_string}} {{path/to/file}}",
                "Display all lines except those that contain the given regular expression": "fgrep -v {{^regex$}} {{path/to/file}}",
                "Display filenames whose content matchs the regular expression at least once": "fgrep -l {{^regex$}} {{path/to/file1}} {{path/to/file2}}",
                "Search for an exact string in a file": "fgrep {{search_string}} {{path/to/file}}",
                "Search only lines that match entirely in files": "fgrep -x {{path/to/file1}} {{path/to/file2}}",
                "Show the line number in the file along with the line matched": "fgrep -n {{search_string}} {{path/to/file}}"
            },
            "Explanation": "Matches patterns in files.\nSupports simple patterns and regular expressions.",
            "More Information Link": ""
        }
    },
    "figlet": {
        "common": {
            "Examples": {
                "Generate by directly inputting text": "figlet {{input_text}}",
                "Pipe command output through figlet": "{{command}} | figlet",
                "Show available figlet fonts": "showfigfonts {{optional_string_to_display}}",
                "Use a custom font file": "figlet {{input_text}} -f {{font_filename}}"
            },
            "Explanation": "Generate ASCII banners from user input.",
            "More Information Link": ""
        }
    },
    "file": {
        "linux": {
            "Examples": {
                "Allow file to work with special or device files": "file -s {{filename}}",
                "Determine the mime encoding type of a file": "file -i {{filename}}",
                "Don't stop at first file type match; keep going until the end of the file": "file -k {{filename}}",
                "Give a description of the type of the specified file. Works fine for files with no file extension": "file {{filename}}",
                "Look inside a zipped file and determine the file type(s) inside": "file -z {{foo.zip}}"
            },
            "Explanation": "Determine file type.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Allow file to work with special or device files": "file -s {{filename}}",
                "Determine the mime encoding type of a file": "file -I {{filename}}",
                "Don't stop at first file type match; keep going until the end of the file": "file -k {{filename}}",
                "Give a description of the type of the specified file. Works fine for files with no file extension": "file {{filename}}",
                "Look inside a zipped file and determine the file type(s) inside": "file -z {{foo.zip}}"
            },
            "Explanation": "Determine file type.",
            "More Information Link": ""
        }
    },
    "filefrag": {
        "linux": {
            "Examples": {
                "Display a report for a specific file": "filefrag {{path/to/file}}",
                "Display a report for space-separated list of files": "filefrag {{path/to/file1}} {{path/to/file2}}",
                "Display a report using a 1024 byte blocksize": "filefrag -b {{path/to/file}}",
                "Display a report with verbose information": "filefrag -v {{path/to/files}}",
                "Display mapping of extended attributes": "filefrag -x {{path/to/files}}",
                "Sync the file before requesting the mapping": "filefrag -s {{path/to/files}}"
            },
            "Explanation": "Report how badly fragmented a particular file might be.",
            "More Information Link": "https://linux.die.net/man/8/filefrag"
        }
    },
    "fin": {
        "common": {
            "Examples": {
                "Display logs of a specific container": "fin logs {{container_name}}",
                "Display logs of a specific container and follow the log": "fin logs -f {{container_name}}",
                "Open a shell into a specific container": "fin bash {{container_name}}",
                "Start the project in the current directory": "fin project start",
                "Stop the project in the current directory": "fin project stop"
            },
            "Explanation": "Docksal command line utility.",
            "More Information Link": "https://docs.docksal.io/fin/fin/"
        }
    },
    "find": {
        "common": {
            "Examples": {
                "Find directories matching a given name, in case-insensitive mode": "find {{root_path}} -type d -iname '{{*lib*}}'",
                "Find files by extension": "find {{root_path}} -name '{{*.ext}}'",
                "Find files by matching multiple patterns": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
                "Find files matching a given pattern, excluding specific paths": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
                "Find files matching a given size range": "find {{root_path}} -size {{+500k}} -size {{-10M}}",
                "Find files matching a path pattern": "find {{root_path}} -path '{{**/lib/**/*.ext}}'",
                "Find files modified in the last 7 days, and delete them": "find {{root_path}} -mtime {{-7}} -delete",
                "Run a command for each file (use `{}` within the command to access the filename)": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;"
            },
            "Explanation": "Find files or directories under the given directory tree, recursively.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display line numbers with the list of lines": "find {{string}} {{path/to/file_or_directory}} /n",
                "Display lines that do not contain the specified string": "find {{string}} {{path/to/file_or_directory}} /v",
                "Display the count of lines that contain the specified string": "find {{string}} {{path/to/file_or_directory}} /c",
                "Find lines that contain a specified string": "find {{string}} {{path/to/file_or_directory}}"
            },
            "Explanation": "Find a specified string in one or more files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/find"
        }
    },
    "findfs": {
        "linux": {
            "Examples": {
                "Search block devices by filesystem label": "findfs LABEL={{label}}",
                "Search by filesystem UUID": "findfs UUID={{uuid}}",
                "Search by partition UUID (GPT partition table only)": "findfs PARTUUID={{partition_uuid}}",
                "Search by partition label (GPT or MAC partition table)": "findfs PARTLABEL={{partition_label}}"
            },
            "Explanation": "Finds a filesystem by label or UUID.",
            "More Information Link": "https://mirrors.edge.kernel.org/pub/linux/utils/util-linux"
        }
    },
    "findmnt": {
        "linux": {
            "Examples": {
                "Find filesystems in specific type": "findmnt -t {{ext4}}",
                "Find filesystems with specific label": "findmnt LABEL={{BigStorage}}",
                "List all mounted filesystems": "findmnt",
                "Search for a device": "findmnt {{/dev/sdb1}}",
                "Search for a mountpoint": "findmnt {{/}}"
            },
            "Explanation": "Find your filesystem.",
            "More Information Link": ""
        }
    },
    "findstr": {
        "windows": {
            "Examples": {
                "Display only the filenames that contain a match": "findstr /m \"{{query}}\" *",
                "Display the line number before each matching line": "findstr /n \"{{query}}\" *",
                "Find a literal string (containing spaces) in all text files": "findstr /c:\"{{query}}\" *.txt",
                "Find space-separated string(s) in a piped command's output": "{{dir}} | findstr \"{{query}}\"",
                "Find space-separated string(s) in all files": "findstr \"{{query}}\" *",
                "Find space-separated string(s) in all files recur[s]ively": "findstr /s \"{{query}}\" *",
                "Find strings in all files using regular expressions": "findstr /r \"{{expression}}\" *",
                "Find strings using a case-insensitive search": "findstr /i \"{{query}}\" *\""
            },
            "Explanation": "Find specified text within one or more files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/findstr"
        }
    },
    "finger": {
        "common": {
            "Examples": {
                "Display information about a specific user": "finger {{username}}",
                "Display information about currently logged in users": "finger",
                "Display the user's login name, real name, terminal name, and other information": "finger -s",
                "Prevent matching against user's names and only use login names": "finger -m",
                "Produce multi-line output format displaying same information as `-s` as well as user's home directory, home phone number, login shell, mail status, etc.": "finger -l"
            },
            "Explanation": "User information lookup program.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display help information": "finger /?",
                "Display information about a specific user": "finger {{user}}@{{host}}",
                "Display information about all users on the specified host": "finger @{{host}}",
                "Display information in a longer format": "finger {{user}}@{{host}} -l"
            },
            "Explanation": "Return information about one or more users on a specified system.\nThe remote system must be running the Finger service.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/finger"
        }
    },
    "firebase": {
        "common": {
            "Examples": {
                "Deploy code and assets to the project in the current directory": "firebase deploy",
                "Display the help": "firebase help",
                "List existing firebase projects": "firebase project:list",
                "Login": "firebase login",
                "Setup a firebase in the current directory": "firebase init {{options}} {{feature}}"
            },
            "Explanation": "Firebase Command Line Interface (CLI) Tools.\nUsed to test, manage, and deploy your Firebase project from the command line.",
            "More Information Link": "https://github.com/firebase/firebase-tools"
        }
    },
    "firefox": {
        "common": {
            "Examples": {
                "Launch Firefox and open a web page": "firefox {{https://www.duckduckgo.com}}",
                "Launch Firefox in safe mode, with all extensions disabled": "firefox --safe-mode",
                "Open a new window": "firefox --new-window {{https://www.duckduckgo.com}}",
                "Open a private (incognito) window": "firefox --private-window",
                "Search for \"wikipedia\" using the default search engine": "firefox --search \"{{wikipedia}}\"",
                "Set Firefox as the default browser": "firefox --setDefaultBrowser",
                "Take a screenshot of a web page in headless mode": "firefox --headless --screenshot {{path/to/output_file.png}} {{https://example.com/}}",
                "Use a specific profile to allow multiple separate instances of Firefox to run at once": "firefox --profile {{path/to/directory}} {{https://example.com/}}"
            },
            "Explanation": "A free and open source web browser.",
            "More Information Link": "https://developer.mozilla.org/en-US/docs/Mozilla/Command_Line_Options"
        }
    },
    "firejail": {
        "linux": {
            "Examples": {
                "Integrate firejail with your desktop environment": "sudo firecfg",
                "List network activity from running sandboxes": "firejail --netstats",
                "List running sandboxes": "firejail --list",
                "Open a restricted Mozilla Firefox": "firejail {{firefox}}",
                "Shutdown a running sandbox": "firejail --shutdown={{7777}}",
                "Start a restricted Apache server on a known interface and address": "firejail --net={{eth0}} --ip={{192.168.1.244}} {{/etc/init.d/apache2}} {{start}}"
            },
            "Explanation": "Securely sandboxes processes to containers using built-in Linux capabilities.",
            "More Information Link": ""
        }
    },
    "firewall-cmd": {
        "linux": {
            "Examples": {
                "Permanently close the port for a service in the specified zone (like port `80` when in the `public` zone)": "firewall-cmd --permanent --zone={{public}} --remove-service={{http}}",
                "Permanently move the interface into the block zone, effectively blocking all communication": "firewall-cmd --permanent --zone={{block}} --change-interface={{enp1s0}}",
                "Permanently open the port for a service in the specified zone (like port `443` when in the `public` zone)": "firewall-cmd --permanent --zone={{public}} --add-service={{https}}",
                "Permanently open two arbitrary ports in the specified zone": "firewall-cmd --permanent --zone={{public}} --add-port={{25565/tcp}} --add-port={{19132/udp}}",
                "Reload firewalld to force rule changes to take effect": "firewall-cmd --reload",
                "View the available firewall zones": "firewall-cmd --get-active-zones",
                "View the rules which are currently applied": "firewall-cmd --list-all"
            },
            "Explanation": "The firewalld command line client.",
            "More Information Link": ""
        }
    },
    "fish": {
        "common": {
            "Examples": {
                "Check a file for syntax errors": "fish --no-execute {{file.fish}}",
                "Display version information and exit": "fish --version",
                "Execute a command": "fish -c \"{{command}}\"",
                "Run commands from a file": "fish {{file.fish}}",
                "Set and export environmental variables that persist across restarts": "set -Ux {{variable_name}} {{variable_value}}",
                "Start interactive shell": "fish"
            },
            "Explanation": "The Friendly Interactive SHell.\nA command-line interpreter designed to be user friendly.",
            "More Information Link": "https://fishshell.com"
        }
    },
    "fisher": {
        "common": {
            "Examples": {
                "Edit 'fishfile' by hand with your favorite editor and install multiple plugins": "{{editor}} ~/.config/fish/fishfile; fisher",
                "Install a plugin from a GitHub gist": "fisher {{gist_url}}",
                "Install one or more plugins": "fisher {{plugin1}} {{plugin2}}",
                "List installed plugins": "fisher ls",
                "Remove one or more plugins": "fisher rm {{plugin1}} {{plugin2}}",
                "Show available plugins": "fisher ls-remote",
                "Update plugins": "fisher up"
            },
            "Explanation": "Fisher, a fish-shell plugin manager.\nInstall plugins by name or from a managed 'fishfile' for bundled installs.",
            "More Information Link": "https://github.com/jorgebucaran/fisher"
        }
    },
    "fkill": {
        "common": {
            "Examples": {
                "Kill the process by pid, name or port": "fkill {{pid|name|:port}}",
                "Run without arguments to use the interactive interface": "fkill"
            },
            "Explanation": "Fabulously kill processes. Cross-platform.",
            "More Information Link": "https://github.com/sindresorhus/fkill"
        }
    },
    "flac": {
        "common": {
            "Examples": {
                "Decode a flac file to wav, specifying the output file": "flac -d -o {{path/to/output.wav}} {{path/to/file.flac}}",
                "Encode a wav file to flac (this will create a flac file in the same location as the wav file)": "flac {{path/to/file.wav}}",
                "Encode a wav file to flac, specifying the output file": "flac -o {{path/to/output.flac}} {{path/to/file.wav}}",
                "Test a flac file for the correct encoding": "flac -t {{path/to/file.flac}}"
            },
            "Explanation": "Encodes, decodes and tests flac files.",
            "More Information Link": "https://xiph.org/flac"
        }
    },
    "flameshot": {
        "linux": {
            "Examples": {
                "Delay the screenshot for N milliseconds and output to clipboard": "flameshot full --delay {{2000}} --clipboard",
                "Launch flameshot in gui mode": "flameshot launcher",
                "Set the save path to write screenshots to": "flameshot full --path {{path/to/directory}}",
                "Take a full screen screenshot": "flameshot full",
                "Take a screenshot by clicking and dragging": "flameshot gui"
            },
            "Explanation": "Screenshot utility with a gui interface.\nSupports basic image editing, such as text, shapes, colors, and imgur.",
            "More Information Link": "https://flameshot.js.org"
        }
    },
    "flash": {
        "linux": {
            "Examples": {
                "Change the previewer from default `bat` to `cat`": "flash -p {{cat}}",
                "Display a list of available commands": "flash -h",
                "Display information about the flashcard system": "flash -i",
                "Display the program version": "flash -v",
                "Open a menu of available flashcard decks for selection": "flash"
            },
            "Explanation": "Flash cards in the terminal.",
            "More Information Link": "https://github.com/tallguyjenks/fla.sh"
        }
    },
    "flask": {
        "common": {
            "Examples": {
                "Run a Python interactive shell in the app's context": "flask shell",
                "Run a development server": "flask run",
                "Show the routes for the app": "flask routes"
            },
            "Explanation": "A general utility script for Flask applications. Loads the application defined in the `FLASK_APP` environment variable.",
            "More Information Link": "https://flask.palletsprojects.com/en/1.1.x/cli/"
        }
    },
    "flatpak": {
        "linux": {
            "Examples": {
                "Add a remote source": "flatpak remote-add --if-not-exists {{remote_name}} {{remote_url}}",
                "Install an application from a remote source": "flatpak install {{remote}} {{name}}",
                "List all configured remote sources": "flatpak remote-list",
                "List all installed applications and runtimes": "flatpak list",
                "Run an installed application": "flatpak run {{name}}",
                "Update all installed applications and runtimes": "flatpak update"
            },
            "Explanation": "Build, install and run flatpak applications and runtimes.",
            "More Information Link": ""
        }
    },
    "flex": {
        "common": {
            "Examples": {
                "Compile a C file generated by flex": "cc {{path/to/lex.yy.c}} --output {{executable}}",
                "Generate an analyser from a flex file": "flex {{analyser.l}}",
                "Specify the output file": "flex --outfile {{analyser.c}} {{analyser.l}}"
            },
            "Explanation": "Lexical analyser generator. Based on `lex`.\nGiven the specification for a lexical analyser, generates C code implementing it.",
            "More Information Link": ""
        }
    },
    "fls": {
        "common": {
            "Examples": {
                "Analyse a single partition, providing the sector offset at which the filesystem starts in the image": "fls -r -m {{C:}} -o {{sector}} {{path/to/image_file}}",
                "Analyse a single partition, providing the timezone of the original system": "fls -r -m {{C:}} -z {{timezone}} {{/dev/loop1p1}}",
                "Build a recursive fls list over a device, output paths will start with C": "fls -r -m {{C:}} {{/dev/loop1p1}}"
            },
            "Explanation": "List files and directories in an image file or device.",
            "More Information Link": "https://wiki.sleuthkit.org/index.php?title=Fls"
        }
    },
    "flutter": {
        "common": {
            "Examples": {
                "Check the Flutter version": "flutter --version",
                "Display general help": "flutter help",
                "Display help about a specific command": "flutter help {{command}}",
                "Execute a Flutter command": "flutter {{command}}",
                "List or change Flutter channel": "flutter channel {{stable|beta|dev|master}}",
                "Run Flutter on all started emulators and connected devices": "flutter run -d all",
                "Run tests in a terminal from the root of the project": "flutter test {{test/example_test.dart}}",
                "Show information about the installed tooling": "flutter doctor"
            },
            "Explanation": "Google's free, open source, and cross-platform mobile app SDK.",
            "More Information Link": "https://github.com/flutter/flutter/wiki/The-flutter-tool"
        }
    },
    "fly": {
        "common": {
            "Examples": {
                "Authenticate with and save concourse target": "fly --target {{target_name}} login --team-name {{team_name}} -c {{https://ci.example.com}}",
                "Destroy pipeline": "fly -t {{target_name}} destroy-pipeline --pipeline {{pipeline_name}}",
                "List pipelines": "fly -t {{target_name}} pipelines",
                "List targets": "fly targets",
                "Show pipeline configuration": "fly -t {{target_name}} get-pipeline --pipeline {{pipeline_name}}",
                "Unpause pipeline": "fly -t {{target_name}} unpause-pipeline --pipeline {{pipeline_name}}",
                "Update local copy of fly": "fly -t {{target_name}} sync",
                "Upload or update a pipeline": "fly -t {{target_name}} set-pipeline --config {{pipeline.yml}} --pipeline {{pipeline_name}}"
            },
            "Explanation": "Command line tool for concourse-ci.",
            "More Information Link": "https://concourse-ci.org/fly.html"
        }
    },
    "fmt": {
        "common": {
            "Examples": {
                "Reformat a file": "fmt {{path/to/file}}",
                "Reformat a file producing output lines of (at most) `n` characters": "fmt -w {{n}} {{path/to/file}}",
                "Reformat a file with uniform spacing (1 space between words and 2 spaces between paragraphs)": "fmt -u {{path/to/file}}",
                "Reformat a file without joining lines shorter than the given width together": "fmt -s {{path/to/file}}"
            },
            "Explanation": "Reformat a text file by joining its paragraphs and limiting the line width to given number of characters (75 by default).",
            "More Information Link": ""
        }
    },
    "fnm": {
        "common": {
            "Examples": {
                "Install a specific version of Node.js": "fnm install {{node_version}}",
                "List all available Node.js versions and highlight the default one": "fnm ls",
                "Set the default Node.js version": "fnm default {{node_version}}",
                "Uninstall a given Node.js version": "fnm uninstall {{node_version}}",
                "Use a specific version of Node.js in the current shell": "fnm use {{node_version}}"
            },
            "Explanation": "Fast Node.js version manager.\nInstall, uninstall or switch between Node.js versions.\nMore info: <https://github.com/Schniz/fnm>.",
            "More Information Link": ""
        }
    },
    "fold": {
        "common": {
            "Examples": {
                "Wrap each line to default width (80 characters)": "fold {{file}}",
                "Wrap each line to width \"30\"": "fold -w30 {{file}}",
                "Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped)": "fold -w5 -s {{file}}"
            },
            "Explanation": "Wraps each line in an input file to fit a specified width and prints it to the standard output.",
            "More Information Link": ""
        }
    },
    "fondue": {
        "windows": {
            "Examples": {
                "Enable a specific Windows feature": "fondue /enable-feature:{{feature}}",
                "Hide all output messages to the user": "fondue /enable-feature:{{feature}} /hide-ux:all",
                "Specify a caller process name for error reporting": "fondue /enable-feature:{{feature}} /caller-name:{{name}}"
            },
            "Explanation": "A command line installer for optional Windows features.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/fondue"
        }
    },
    "for": {
        "common": {
            "Examples": {
                "Perform a command in every directory": "for d in *; do (cd $d; {{command}}); done",
                "Perform a command with different arguments": "for argument in 1 2 3; do {{command $argument}}; done"
            },
            "Explanation": "Shell loop over parameters.",
            "More Information Link": ""
        }
    },
    "foreman": {
        "linux": {
            "Examples": {
                "Run one-off commands with the process's environment": "foreman run {{command}}",
                "Start a specific application": "foreman start {{process}}",
                "Start all processes except the one named \"worker\"": "foreman start -m all=1,{{worker}}=0",
                "Start an application with a specified Procfile": "foreman start -f {{Procfile}}",
                "Start an application with the Procfile in the current directory": "foreman start",
                "Validate Procfile format": "foreman check"
            },
            "Explanation": "Manage Procfile-based applications.",
            "More Information Link": ""
        }
    },
    "forever": {
        "common": {
            "Examples": {
                "List running \"forever\" processes (along with IDs and other details of \"forever\" processes)": "forever list",
                "Start running a file forever (as a daemon)": "forever {{script}}",
                "Stop a running \"forever\" process": "forever stop {{ID|pid|script}}"
            },
            "Explanation": "Server-side JavaScript application that makes sure Node.js applications run indefinitely (restarts after exit).",
            "More Information Link": "https://github.com/foreversd/forever"
        }
    },
    "forfiles": {
        "windows": {
            "Examples": {
                "Run the specified command for each file": "forfiles /c \"{{command}}\"",
                "Search for files in a specific directory": "forfiles /p {{path/to/directory}}",
                "Search for files in the current directory": "forfiles",
                "Search for files older than 5 days": "forfiles /d {{+5}}",
                "Search for files recursively": "forfiles /s",
                "Search for files using a specific glob mask": "forfiles /m {{glob_pattern}}"
            },
            "Explanation": "Select one or more files to execute a specified command on.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/forfiles"
        }
    },
    "fortune": {
        "common": {
            "Examples": {
                "List the available quotation database files": "fortune -f",
                "Print a long quotation": "fortune -l",
                "Print a quotation": "fortune",
                "Print a quotation from one of the database files listed by `fortune -f`": "fortune {{filename}}",
                "Print a short quotation": "fortune -s",
                "Print an offensive quotation": "fortune -o"
            },
            "Explanation": "Print a random quotation (fortune-cookie style).",
            "More Information Link": ""
        }
    },
    "fossa": {
        "common": {
            "Examples": {
                "Analyze built dependencies": "fossa analyze",
                "Generate reports": "fossa report",
                "Initialize a `.fossa.yml` configuration file": "fossa init",
                "Run a default project build": "fossa build",
                "Test current revision against the FOSSA scan status and exit with errors if issues are found": "fossa test"
            },
            "Explanation": "CLI for the Fossa service - Generate realtime license audits, vulnerability scans and reports about dependencies licenses.",
            "More Information Link": "https://github.com/fossas/fossa-cli"
        }
    },
    "fping": {
        "common": {
            "Examples": {
                "List alive hosts within a subnet generated from a netmask": "fping -a -g 192.168.1.0/24",
                "List alive hosts within a subnet generated from an IP range": "fping -a -g 192.168.1.1 192.168.1.254",
                "List unreachable hosts within a subnet generated from a netmask": "fping -u -g 192.168.1.0/24"
            },
            "Explanation": "A more powerful ping which can ping multiple hosts.",
            "More Information Link": "https://fping.org"
        }
    },
    "free": {
        "linux": {
            "Examples": {
                "Display memory in Bytes/KB/MB/GB": "free -{{b|k|m|g}}",
                "Display memory in human readable units": "free -h",
                "Display system memory": "free",
                "Refresh the output every 2 seconds": "free -s {{2}}"
            },
            "Explanation": "Display amount of free and used memory in the system.",
            "More Information Link": ""
        }
    },
    "fsck": {
        "linux": {
            "Examples": {
                "Check filesystem /dev/sda, reporting any damaged blocks": "fsck {{/dev/sda}}",
                "Check filesystem /dev/sda, reporting any damaged blocks and automatically repairing them": "fsck -a {{/dev/sda}}",
                "Check filesystem /dev/sda, reporting any damaged blocks and interactively letting the user choose to repair each one": "fsck -r {{/dev/sda}}"
            },
            "Explanation": "Check the integrity of a filesystem or repair it. The filesystem should be unmounted at the time the command is run.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Check filesystem /dev/sda only if it is clean, reporting any damaged blocks and automatically repairing them": "fsck -fy {{/dev/sda}}",
                "Check filesystem /dev/sda only if it is clean, reporting any damaged blocks and interactively letting the user choose to repair each one": "fsck -f {{/dev/sda}}",
                "Check filesystem /dev/sda, reporting any damaged blocks": "fsck {{/dev/sda}}",
                "Check filesystem /dev/sda, reporting whether it has been cleanly unmounted": "fsck -q {{/dev/sda}}"
            },
            "Explanation": "Check the integrity of a filesystem or repair it. The filesystem should be unmounted at the time the command is run.\nIt is a wrapper that calls `fsck_hfs`, `fsck_apfs`, `fsck_msdos`, `fsck_exfat`, and `fsck_udf` as needed.",
            "More Information Link": ""
        }
    },
    "fselect": {
        "common": {
            "Examples": {
                "Find old-school rap 320kbps MP3 files": "fselect path from {{path/to/directory}} where genre = {{Rap}} and bitrate = {{320}} and mp3_year lt {{2000}}",
                "Find square images": "fselect path from {{path/to/directory}} where width = height",
                "Select full path and size from temporary or config files in a given directory": "fselect size, path from {{path/to/directory}} where name = {{'*.cfg'}} or name = {{'*.tmp'}}",
                "Select only the first 5 results and output as JSON": "fselect size, path from {{path/to/directory}} limit {{5}} into json",
                "Use SQL aggregate functions to calculate minimum, maximum and average size of files in a directory": "fselect \"{{MIN(size), MAX(size), AVG(size), SUM(size), COUNT(*)}} from {{path/to/directory}}\""
            },
            "Explanation": "Find files with SQL-like queries.",
            "More Information Link": "https://github.com/jhspetersson/fselect"
        }
    },
    "fstrim": {
        "linux": {
            "Examples": {
                "Display statistics after trimming": "sudo fstrim --verbose {{/}}",
                "Trim unused blocks on a specified partition": "sudo fstrim {{/}}",
                "Trim unused blocks on all mounted partitions that support it": "sudo fstrim --all"
            },
            "Explanation": "Discard unused blocks on a mounted filesystem.\nOnly supported by flash memory devices such as SSDs and microSD cards.",
            "More Information Link": ""
        }
    },
    "fswatch": {
        "common": {
            "Examples": {
                "Filter by event type, eg. Updated, Deleted or Created": "fswatch --event {{Updated}} {{path/to/directory}} | xargs -n 1 {{bash_command}}",
                "Print the absolute paths of the changed files": "fswatch {{path/to/directory}} | xargs -n 1 -I {} echo {}",
                "Run a bash command on file creation, update or deletion": "fswatch {{path/to/file}} | xargs -n 1 {{bash_command}}",
                "Watch one or more files and/or directories": "fswatch {{path/to/file}} {{path/to/directory}} {{path/to/another_directory/**/*.js}} | xargs -n 1 {{bash_command}}"
            },
            "Explanation": "A cross-platform file change monitor.",
            "More Information Link": "https://emcrisostomo.github.io/fswatch"
        }
    },
    "fswebcam": {
        "common": {
            "Examples": {
                "Take a picture": "fswebcam {{filename}}",
                "Take a picture from selected device(Default is /dev/video0)": "fswebcam -d {{device}} {{filename}}",
                "Take a picture with custom resolution": "fswebcam -r {{width}}x{{height}} {{filename}}",
                "Take a picture with timestamp(timestamp string is formatted by strftime)": "fswebcam --timestamp {{timestamp}} {{filename}}"
            },
            "Explanation": "Small and simple webcam for *nix.",
            "More Information Link": "https://www.sanslogic.co.uk/fswebcam"
        }
    },
    "ftp": {
        "common": {
            "Examples": {
                "Connect to an FTP server": "ftp {{ftp.example.com}}",
                "Delete multiple files on the remote server": "mdelete {{*.txt}}",
                "Download multiple files (glob expression)": "mget {{*.png}}",
                "Rename a file on the remote server": "rename {{original_filename}} {{new_filename}}",
                "Switch to binary transfer mode (graphics, compressed files, etc)": "binary",
                "Transfer multiple files without prompting for confirmation on every file": "prompt off",
                "Upload multiple files (glob expression)": "mput {{*.zip}}"
            },
            "Explanation": "Tools to interact with a server via File Transfer Protocol.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Connect to a remote FTP server interactively": "ftp {{host}}",
                "Delete multiple files on the remote server": "mdelete {{*.txt}}",
                "Disable automatic login upon initial connection": "ftp -n {{host}}",
                "Display detailed help": "ftp --help",
                "Download multiple files (glob expression)": "mget {{*.png}}",
                "Log in as an anonymous user": "ftp -A {{host}}",
                "Run a file containing a list of FTP commands": "ftp -s:{{path/to/file}} {{host}}",
                "Upload multiple files (glob expression)": "mput {{*.zip}}"
            },
            "Explanation": "Interactively transfer files between a local and remote FTP server.",
            "More Information Link": ""
        }
    },
    "ftype": {
        "windows": {
            "Examples": {
                "Display a list of all file types": "ftype",
                "Display the associated program for a specific file type": "ftype {{file_type}}",
                "Set the associated program for a specific file type": "ftype {{file_type}}=\"{{path/to/executable_command}}\""
            },
            "Explanation": "Display or modify file types used for file extension association.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/ftype"
        }
    },
    "fuck": {
        "common": {
            "Examples": {
                "Set the `fuck` alias to `thefuck` tool": "eval \"$(thefuck --alias)\"",
                "Try to match a rule for the previous command": "fuck"
            },
            "Explanation": "Corrects your previous console command.",
            "More Information Link": "https://github.com/nvbn/thefuck"
        }
    },
    "func": {
        "common": {
            "Examples": {
                "Create a new function": "func new",
                "Create a new functions project": "func init {{project}}",
                "Download all settings from an existing function app": "func azure functionapp fetch-app-settings {{function}}",
                "Get the connection string for a specific storage account": "func azure storage fetch-connection-string {{storage_account}}",
                "Publish your code to a function app in Azure": "func azure functionapp publish {{function}}",
                "Run functions locally": "func start"
            },
            "Explanation": "Azure Functions Core Tools: Develop and test Azure Functions locally.\nLocal functions can connect to live Azure services, and can deploy a function app to an Azure subscription.",
            "More Information Link": "https://docs.microsoft.com/azure/azure-functions/functions-run-local"
        }
    },
    "fuser": {
        "linux": {
            "Examples": {
                "Find which processes are accessing a file or directory": "fuser {{path/to/file_or_directory}}",
                "Find which processes are accessing the filesystem containing a specific file or directory": "fuser --mount {{path/to/file_or_directory}}",
                "Identify processes using a TCP socket": "fuser --namespace tcp {{port}}",
                "Kill all processes accessing a file or directory (sends the `SIGKILL` signal)": "fuser --kill {{path/to/file_or_directory}}",
                "Show more fields (`USER`, `PID`, `ACCESS` and `COMMAND`)": "fuser --verbose {{path/to/file_or_directory}}"
            },
            "Explanation": "Display process IDs currently using files or sockets.",
            "More Information Link": ""
        }
    },
    "fzf": {
        "common": {
            "Examples": {
                "Select multiple files with `Shift + Tab` and write to a file": "find {{path/to/search_files}} -type f | fzf -m > {{filename}}",
                "Start finder on all files from arbitrary locations": "find {{path/to/search}} -type f | fzf",
                "Start finder on entries that not match pyc and match exactly travis": "fzf -q \"!pyc 'travis\"",
                "Start finder on entries that start with core and end with either go, rb, or py": "fzf -q \"^core go$ | rb$ | py$\"",
                "Start finder on running processes": "ps aux | fzf",
                "Start finder with a given query": "fzf -q \"{{query}}\""
            },
            "Explanation": "Command line fuzzy finder.",
            "More Information Link": "https://github.com/junegunn/fzf"
        }
    },
    "gatsby": {
        "common": {
            "Examples": {
                "Create a new site": "gatsby new {{site_name}}",
                "Create a new site with a Gatsby 'starter'": "gatsby new {{site_name}} {{url_of_starter_github_repo}}",
                "Perform a production build and generate static HTML": "gatsby build",
                "Start a live-reloading local development server": "gatsby develop",
                "Start a local server which serves the production build": "gatsby serve"
            },
            "Explanation": "Static site generator for React.",
            "More Information Link": "https://gatsbyjs.org"
        }
    },
    "gcal": {
        "common": {
            "Examples": {
                "Change starting day of week to 1st day of the week (Monday)": "gcal --starting-day={{1}}",
                "Display calendar for the current month": "gcal",
                "Display calendar for the month of February of the year 2010": "gcal {{2}} {{2010}}",
                "Display the previous, current and next month surrounding today": "gcal .",
                "Provide calendar sheet with week numbers": "gcal --with-week-number"
            },
            "Explanation": "Displays calendar.",
            "More Information Link": "https://www.gnu.org/software/gcal"
        }
    },
    "gcalcli": {
        "common": {
            "Examples": {
                "Add an event to calendar. Triggers interactive prompt": "gcalcli --calendar \"{{calendar_name}}\" add",
                "Display an ASCII calendar of events by week": "gcalcli calw",
                "Display an ASCII calendar of events for a month": "gcalcli calm",
                "List events from a specific calendar": "gcalcli --calendar {{calendar_name}} agenda",
                "List your events for all your calendars over the next 7 days": "gcalcli agenda",
                "Quick-add an event to your calendar": "gcalcli --calendar {{calendar_name}} quick \"{{mm/dd}} {{HH:MM}} {{event_name}}\"",
                "Show events starting from or between specific dates (also takes relative dates e.g. \"tomorrow\")": "gcalcli agenda {{mm/dd}} [{{mm/dd}}]"
            },
            "Explanation": "Command line tool to interact with Google Calendar.\nRequests Google API authorization upon first launch.",
            "More Information Link": "https://github.com/insanum/gcalcli"
        }
    },
    "gcc": {
        "common": {
            "Examples": {
                "Allow warnings, debug symbols in output": "gcc {{source.c}} -Wall -Og -o {{executable}}",
                "Compile multiple source files into executable": "gcc {{source1.c}} {{source2.c}} -o {{executable}}",
                "Compile source code into Assembler instructions": "gcc -S {{source.c}}",
                "Compile source code without linking": "gcc -c {{source.c}}",
                "Include libraries from a different path": "gcc {{source.c}} -o {{executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}"
            },
            "Explanation": "Preprocess and compile C and C++ source files, then assemble and link them together.",
            "More Information Link": "https://gcc.gnu.org"
        }
    },
    "gcloud": {
        "common": {
            "Examples": {
                "Display all Google Compute Engine instances in a project. Instances from all zones are listed by default": "gcloud compute instances list",
                "List all properties in one's active configuration": "gcloud config list",
                "Login to Google account": "gcloud auth login",
                "SSH into a virtual machine instance": "gcloud compute ssh {{user}}@{{instance}}",
                "Set the active project": "gcloud config set project {{project_name}}",
                "Show help for a given command": "gcloud help {{command}}",
                "Update a kubeconfig file with the appropriate credentials to point kubectl to a specific cluster in Google Kubernetes Engine": "gcloud container clusters get-credentials {{cluster_name}}",
                "Update all gcloud CLI components": "gcloud components update"
            },
            "Explanation": "The official CLI tool for Google Cloud Platform.",
            "More Information Link": "https://cloud.google.com/sdk/gcloud"
        }
    },
    "gcov": {
        "linux": {
            "Examples": {
                "Do not create a `gcov` output file": "gcov --no-output {{path/to/file.cpp}}",
                "Generate a coverage report named `file.cpp.gcov`": "gcov {{path/to/file.cpp}}",
                "Write branch frequencies as the number of branches taken, rather than the percentage": "gcov --branch-counts {{path/to/file.cpp}}",
                "Write branch frequencies to the output file and print summary information to `stdout` as a percentage": "gcov --branch-probabilities {{path/to/file.cpp}}",
                "Write file level as well as function level summaries": "gcov --function-summaries {{path/to/file.cpp}}",
                "Write individual execution counts for every basic block": "gcov --all-blocks {{path/to/file.cpp}}"
            },
            "Explanation": "Code coverage analysis and profiling tool that discovers untested parts of a program.\nAlso displays a copy of source code annotated with execution frequencies of code segments.",
            "More Information Link": "https://gcc.gnu.org/onlinedocs/gcc/Invoking-Gcov.html"
        }
    },
    "gdb": {
        "common": {
            "Examples": {
                "Attach a process to gdb": "gdb -p {{procID}}",
                "Debug an executable": "gdb {{executable}}",
                "Debug with a core file": "gdb -c {{core}} {{executable}}",
                "Execute given GDB commands upon start": "gdb -ex \"{{commands}}\" {{executable}}",
                "Start gdb and pass arguments to the executable": "gdb --args {{executable}} {{argument1}} {{argument2}}"
            },
            "Explanation": "The GNU Debugger.",
            "More Information Link": "https://www.gnu.org/software/gdb"
        }
    },
    "gdrive": {
        "common": {
            "Examples": {
                "Create a new revision of an id using a given file or folder": "gdrive update {{id}} {{path/to/file_or_folder}}",
                "Download file or directory by id to current directory": "gdrive download {{id}}",
                "Download to a given local path by its id": "gdrive download --path {{path/to/folder}} {{id}}",
                "Upload a local path to the parent folder with the specified id": "gdrive upload -p {{id}} {{path/to/file_or_folder}}"
            },
            "Explanation": "Command line tool to interact with Google Drive.\nFolder/file id can be obtained from the Google Drive folder or id url.",
            "More Information Link": "https://github.com/gdrive-org/gdrive"
        }
    },
    "gedit": {
        "linux": {
            "Examples": {
                "Display a list of supported encodings": "gedit --list-encodings",
                "Open a text file": "gedit {{path/to/file}}",
                "Open a text file with a specific encoding": "gedit --encoding={{UTF-8}} {{path/to/file}}",
                "Open multiple text files": "gedit {{file1 file2 ...}}"
            },
            "Explanation": "Text editor of the GNOME Desktop project.",
            "More Information Link": ""
        }
    },
    "gem": {
        "common": {
            "Examples": {
                "Install latest version of a gem": "gem install {{gemname}}",
                "Install specific version of a gem": "gem install {{gemname}} --version {{1.0.0}}",
                "Install the latest matching (SemVer) version of a gem": "gem install {{gemname}} --version '~> {{1.0}}'",
                "List all local gems": "gem list",
                "Search for remote gem(s) and show all available versions": "gem search {{regexp}} --all",
                "Uninstall a gem": "gem uninstall {{gemname}}",
                "Uninstall specific version of a gem": "gem uninstall {{gemname}} --version {{1.0.0}}",
                "Update a gem": "gem update {{gemname}}"
            },
            "Explanation": "Interact with the package manager for the Ruby programming language.",
            "More Information Link": "https://rubygems.org"
        }
    },
    "genie": {
        "linux": {
            "Examples": {
                "Initialize the bottle (run once, at start)": "genie -i",
                "Run a login shell inside the bottle": "genie -s",
                "Run a specified command inside the bottle": "genie -c {{command}}"
            },
            "Explanation": "Set up and use a \"bottle\" namespace to run systemd under WSL (Windows Subsystem for Linux).\nTo run these from Windows rather than an already-running distribution, precede them with `wsl`.",
            "More Information Link": "https://github.com/arkane-systems/genie"
        }
    },
    "genkernel": {
        "linux": {
            "Examples": {
                "Apply changes to the kernel configuration before compiling and installing": "sudo genkernel --menuconfig all",
                "Automatically compile and install a generic kernel": "sudo genkernel all",
                "Build and install the bzImage|initramfs|kernel|ramdisk only": "sudo genkernel {{bzImage|initramfs|kernel|ramdisk}}",
                "Generate a kernel with a custom name": "sudo genkernel --kernname={{custom_name}} all",
                "Use a kernel source outside of the default directory /usr/src/linux": "sudo genkernel --kerneldir={{path/to/directory}} all"
            },
            "Explanation": "Gentoo Linux utility to compile and install kernels.",
            "More Information Link": ""
        }
    },
    "getent": {
        "linux": {
            "Examples": {
                "Find a username by UID": "getent passwd 1000",
                "Get list of all groups": "getent group",
                "Get list of all services": "getent services",
                "Perform a reverse DNS lookup": "getent hosts {{host}}",
                "See the members of a group": "getent group {{group_name}}"
            },
            "Explanation": "Get entries from Name Service Switch libraries.",
            "More Information Link": ""
        }
    },
    "getfacl": {
        "linux": {
            "Examples": {
                "Display the file access control list": "getfacl {{path/to/file_or_directory}}",
                "Display the file access control list with numeric user and group IDs": "getfacl -n {{path/to/file_or_directory}}",
                "Display the file access control list with tabular output format": "getfacl -t {{path/to/file_or_directory}}"
            },
            "Explanation": "Get file access control lists.",
            "More Information Link": ""
        }
    },
    "geth": {
        "common": {
            "Examples": {
                "Connect to the Ropsten test network": "geth --testnet",
                "Connect to the main Ethereum network and automatically download the full node": "geth",
                "Create a new account": "geth account new",
                "Enable mining": "geth --mine"
            },
            "Explanation": "The go-ethereum command line interface.",
            "More Information Link": "https://geth.ethereum.org"
        }
    },
    "getmac": {
        "windows": {
            "Examples": {
                "Display detailed usage information": "getmac /?",
                "Display the MAC addresses for a remote machine": "getmac /s {{hostname}} /u {{username}} /p {{password}}",
                "Display the MAC addresses for the current system": "getmac",
                "Display the MAC addresses with verbose information": "getmac /v",
                "Display the details in a specific format": "getmac /fo {{table|list|csv}}",
                "Exclude the header in the output list": "getmac /nh"
            },
            "Explanation": "Display the MAC addresses of a system.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/getmac"
        }
    },
    "gh": {
        "common": {
            "Examples": {
                "Check out pull requests locally": "gh pr checkout {{pr_number}}",
                "Check the status of a repository's pull requests": "gh pr status",
                "Clone a repository locally": "gh repo clone {{owner}}/{{repository}}",
                "Create a new issue": "gh issue create",
                "Create a pull request": "gh pr create",
                "View a pull request in the browser": "gh pr view --web {{pr_number}}",
                "View an issue in the browser": "gh issue view --web {{issue_number}}",
                "View and filter a repository’s open issues": "gh issue list"
            },
            "Explanation": "Work seamlessly with GitHub from the command line.",
            "More Information Link": "https://cli.github.com/"
        }
    },
    "gh auth": {
        "common": {
            "Examples": {
                "Check if you are logged in": "gh auth status",
                "Log out": "gh auth logout",
                "Login with a specific GitHub Enterprise Server": "gh auth login --hostname {{github.example.com}}",
                "Login with a token from standard input (created in https://github.com/settings/tokens)": "echo {{your_token}} | gh auth login --with-token",
                "Login with interactive prompt": "gh auth login"
            },
            "Explanation": "Authenticate with a GitHub host from the command line.",
            "More Information Link": "https://cli.github.com/manual/gh_auth"
        }
    },
    "gh config": {
        "common": {
            "Examples": {
                "Disable interactive prompts": "gh config set prompt {{disabled}}",
                "Display what Git protocol is being used": "gh config get git_protocol",
                "Reset to default text editor": "gh config set editor {{\"\"}}",
                "Set a specific configuration value": "gh config set {{key}} {{value}}",
                "Set protocol to SSH": "gh config set git_protocol {{ssh}}",
                "Set text editor to Vim": "gh config set editor {{vim}}"
            },
            "Explanation": "Change configuration for GitHub cli.",
            "More Information Link": "https://cli.github.com/manual/gh_config"
        }
    },
    "gh release": {
        "common": {
            "Examples": {
                "Create a new release": "gh release create {{tag}}",
                "Delete a specific release": "gh release delete {{tag}}",
                "Display information about a specific release": "gh release view {{tag}}",
                "Download assets from a specific release": "gh release download {{tag}}",
                "List releases in a GitHub repository, limited to 30 items": "gh release list",
                "Upload assets to a specific release": "gh release upload {{tag}} {{path/to/file1}} {{path/to/file2}}"
            },
            "Explanation": "Manage GitHub releases from the command line.",
            "More Information Link": "https://cli.github.com/manual/gh_release"
        }
    },
    "gh-pr": {
        "common": {
            "Examples": {
                "Approve the pull request of the current branch": "gh pr review --approve",
                "Check out a pull request locally": "gh pr checkout {{pr_number}}",
                "Create a pull request": "gh pr create",
                "Merge the pull request associated with the current branch, removing the branch on both the local and the remote": "gh pr merge",
                "View the changes made in the PR": "gh pr diff"
            },
            "Explanation": "Manage GitHub pull requests from the command line.",
            "More Information Link": "https://cli.github.com/manual/gh_pr"
        }
    },
    "ghc": {
        "common": {
            "Examples": {
                "Compile a single file": "ghc {{file.hs}}",
                "Compile using extra optimization": "ghc -O {{file.hs}}",
                "Evaluate a single expression": "ghc -e {{expression}}",
                "Find and compile all modules in the current directory": "ghc Main",
                "Run Haskell interactive interpreter (REPL)": "ghci",
                "Stop compilation after generating object files (.o)": "ghc -c {{file.hs}}"
            },
            "Explanation": "The Glasgow Haskell Compiler.\nCompiles and links Haskell source files.",
            "More Information Link": "https://www.haskell.org/ghc"
        }
    },
    "ghci": {
        "common": {
            "Examples": {
                "Start a REPL (interactive shell)": "ghci",
                "Start a REPL and enable a language option": "ghci -X{{language_option}}",
                "Start a REPL and enable some level of compiler warnings (e.g. `all` or `compact`)": "ghci -W{{warning_level}}",
                "Start a REPL and load the specified Haskell source file": "ghci {{source_file.hs}}",
                "Start a REPL with a colon-separated list of directories for finding source files": "ghci -i{{path/to/directory1}}:{{path/to/directory2}}"
            },
            "Explanation": "The Glasgow Haskell Compiler's interactive environment.",
            "More Information Link": "https://downloads.haskell.org/ghc/latest/docs/html/users_guide/ghci.html"
        }
    },
    "ghdl": {
        "common": {
            "Examples": {
                "Analyze a VHDL source file and produce an object file": "ghdl -a {{filename.vhdl}}",
                "Check the syntax of a VHDL source file": "ghdl -s {{filename.vhdl}}",
                "Display the help page": "ghdl --help",
                "Elaborate a design (where `{{design}}` is the name of a configuration unit, entity unit or architecture unit)": "ghdl -e {{design}}",
                "Run an elaborated design": "ghdl -r {{design}}",
                "Run an elaborated design and dump output to a waveform file": "ghdl -r {{design}} --wave={{output.ghw}}"
            },
            "Explanation": "Open-source simulator for the VHDL language.",
            "More Information Link": "http://ghdl.free.fr"
        }
    },
    "ghost": {
        "common": {
            "Examples": {
                "Check the system for any potential hiccups when on install or update of Ghost": "ghost doctor",
                "Install Ghost in the current directory": "ghost install",
                "Restart the Ghost instance": "ghost restart",
                "Run a Ghost instance directly (used by process managers and for debugging)": "ghost run",
                "Start an instance of Ghost": "ghost start",
                "View or edit Ghost configuration": "ghost config {{key}} {{value}}",
                "View running Ghost processes": "ghost ls",
                "View the logs of a Ghost instance": "ghost log {{name}}"
            },
            "Explanation": "A blogging platform and headless CMS.",
            "More Information Link": "https://ghost.org"
        }
    },
    "gibo": {
        "common": {
            "Examples": {
                "List available boilerplates": "gibo list",
                "Search for boilerplates containing a given string": "gibo search {{string}}",
                "Update available local boilerplates": "gibo update",
                "Write a boilerplate to .gitignore": "gibo dump {{boilerplate}} >>{{.gitignore}}",
                "Write a boilerplate to `stdout`": "gibo dump {{boilerplate}}"
            },
            "Explanation": "Fetch gitignore boilerplates.",
            "More Information Link": "https://github.com/simonwhitaker/gibo"
        }
    },
    "gifsicle": {
        "common": {
            "Examples": {
                "Extract frames from an animation": "gifsicle {{anim.gif}} '#0' > {{firstframe.gif}}",
                "Make a GIF animation with gifsicle": "gifsicle --delay={{10}} --loop *.gif > {{anim.gif}}",
                "Optimise a GIF": "gifsicle --batch --optimize=3 {{amin.gif}}",
                "You can also edit animations by replacing, deleting, or inserting frames": "gifsicle -b {{anim.gif}} --replace '#0' {{new.gif}}"
            },
            "Explanation": "Create GIFs.",
            "More Information Link": "https://www.lcdf.org/gifsicle"
        }
    },
    "gist": {
        "common": {
            "Examples": {
                "Create a gist from any number of text files": "gist {{file.txt}} {{file2.txt}}",
                "Create a private gist with a description": "gist -p -d \"{{A meaningful description}}\" {{file.txt}}",
                "List all gists for the currently logged in user": "gist -l {{username}}",
                "List your public and private gists": "gist -l",
                "Login in gist on this computer": "gist --login",
                "Read contents from `stdin` and create a gist from it": "{{echo \"hello world\"}} | gist",
                "Use the id from the gist URL to modify or include a file": "gist -u {{GIST_ID}} {{file.txt}}"
            },
            "Explanation": "Upload code to https://gist.github.com.",
            "More Information Link": "https://github.com/defunkt/gist"
        }
    },
    "git": {
        "common": {
            "Examples": {
                "Check the Git version": "git --version",
                "Execute a Git subcommand": "git {{subcommand}}",
                "Execute a Git subcommand on a custom repository root path": "git -C {{path/to/repo}} {{subcommand}}",
                "Execute a Git subcommand with a given configuration set": "git -c '{{config.key}}={{value}}' {{subcommand}}",
                "Show general help": "git --help",
                "Show help on a Git subcommand (like `commit`, `log`, etc.)": "git help {{subcommand}}"
            },
            "Explanation": "Distributed version control system.",
            "More Information Link": "https://git-scm.com/"
        }
    },
    "git add": {
        "common": {
            "Examples": {
                "Add a file to the index": "git add {{path/to/file}}",
                "Add all files (tracked and untracked)": "git add -A",
                "Also add ignored files": "git add -f",
                "Interactively stage a file": "git add -i",
                "Interactively stage parts of a given file": "git add -p {{path/to/file}}",
                "Interactively stage parts of files": "git add -p",
                "Only add already tracked files": "git add -u"
            },
            "Explanation": "Adds changed files to the index.",
            "More Information Link": "https://git-scm.com/docs/git-add"
        }
    },
    "git am": {
        "common": {
            "Examples": {
                "Abort the process of applying a patch file": "git am --abort",
                "Apply a patch file": "git am {{path/to/file.patch}}",
                "Apply as much of a patch file as possible, saving failed hunks to reject files": "git am --reject {{path/to/file.patch}}"
            },
            "Explanation": "Apply patch files. Useful when receiving commits via email.\nSee also `git format-patch`, which can generate patch files.",
            "More Information Link": "https://git-scm.com/docs/git-am"
        }
    },
    "git annex": {
        "common": {
            "Examples": {
                "Add a file": "git annex add {{path/to/file_or_directory}}",
                "Get a file or directory": "git annex get {{path/to/file_or_directory}}",
                "Help": "git annex help",
                "Initialize a repo with git annex": "git annex init",
                "Show the current status of a file or directory": "git annex status {{path/to/file_or_directory}}",
                "Synchronize a local repository with a remote": "git annex {{remote}}"
            },
            "Explanation": "Manage files with git, without checking their contents in.\nWhen a file is annexed, its content is moved into a key-value store, and a symlink is made that points to the content.",
            "More Information Link": "https://git-annex.branchable.com"
        }
    },
    "git apply": {
        "common": {
            "Examples": {
                "Apply a remote patch file": "curl {{https://example.com/file.patch}} | git apply",
                "Apply and add the patched files to the index": "git apply --index {{path/to/file}}",
                "Apply the patch in reverse": "git apply --reverse {{path/to/file}}",
                "Output diffstat for the input and apply the patch": "git apply --stat --apply {{path/to/file}}",
                "Print messages about the patched files": "git apply --verbose {{path/to/file}}",
                "Store the patch result in the index without modifying the working tree": "git apply --cache {{path/to/file}}"
            },
            "Explanation": "Apply a patch to files and/or to the index.",
            "More Information Link": "https://git-scm.com/docs/git-apply"
        }
    },
    "git archive": {
        "common": {
            "Examples": {
                "Create a tar archive from the contents of a specific directory": "git archive --output={{path/to/file.tar}} HEAD:{{path/to/directory}}",
                "Create a tar archive from the contents of the current HEAD and print it to standard output": "git archive --verbose HEAD",
                "Create a tar archive from the contents of the latest commit on a specific branch": "git archive --output={{path/to/file.tar}} {{branch_name}}",
                "Create a zip archive from the current HEAD and print it to standard output": "git archive --verbose --format=zip HEAD",
                "Prepend a path to each file to archive it inside a specific directory": "git archive --output={{path/to/file.tar}} --prefix={{path/to/prepend}}/ HEAD",
                "Same as above, but write the zip archive to file": "git archive --verbose --output={{path/to/file.zip}} HEAD"
            },
            "Explanation": "Create an archive of files from a named tree.",
            "More Information Link": "https://git-scm.com/docs/git-archive"
        }
    },
    "git bisect": {
        "common": {
            "Examples": {
                "After `git bisect` pinpoints the faulty commit, end the bisect session and return to the previous branch": "git bisect reset",
                "For each commit that `git bisect` selects, mark it as \"bad\" or \"good\" after testing it for the issue": "git bisect {{good|bad}}",
                "Skip a commit during a bisect (e.g. one that fails the tests due to a different issue)": "git bisect skip",
                "Start a bisect session on a commit range bounded by a known buggy commit, and a known clean (typically older) one": "git bisect start {{bad_commit}} {{good_commit}}"
            },
            "Explanation": "Use binary search to find the commit that introduced a bug.\nGit automatically jumps back and forth in the commit graph to progressively narrow down the faulty commit.",
            "More Information Link": "https://git-scm.com/docs/git-bisect"
        }
    },
    "git blame": {
        "common": {
            "Examples": {
                "Print file with author email and commit hash on each line": "git blame -e {{file}}",
                "Print file with author name and commit hash on each line": "git blame {{file}}"
            },
            "Explanation": "Show commit hash and last author on each line of a file.",
            "More Information Link": "https://git-scm.com/docs/git-blame"
        }
    },
    "git branch": {
        "common": {
            "Examples": {
                "Create new branch based on a specific commit": "git branch {{branch_name}} {{commit_hash}}",
                "Create new branch based on the current commit": "git branch {{branch_name}}",
                "Delete a local branch (must not have it checked out to do this)": "git branch -d {{branch_name}}",
                "Delete a remote branch": "git push {{remote_name}} --delete {{remote_branch_name}}",
                "List all branches (local and remote)": "git branch -a",
                "List local branches. The current branch is highlighted by `*`": "git branch",
                "Rename a branch (must not have it checked out to do this)": "git branch -m {{old_branch_name}} {{new_branch_name}}",
                "Show the name of the current branch": "git branch --show-current"
            },
            "Explanation": "Main git command for working with branches.",
            "More Information Link": "https://git-scm.com/docs/git-branch"
        }
    },
    "git bundle": {
        "common": {
            "Examples": {
                "Create a bundle file of all branches": "git bundle create {{path/to/file.bundle}} --all",
                "Create a bundle file of the last 5 commits of the current branch": "git bundle create {{path/to/file.bundle}} -{{5}} {{HEAD}}",
                "Create a bundle file of the latest 7 days": "git bundle create {{path/to/file.bundle}} --since={{7.days}} {{HEAD}}",
                "Create a bundle file that contains all objects and references of a specific branch": "git bundle create {{path/to/file.bundle}} {{branch_name}}",
                "Print to the standard output the list of references contained in a bundle": "git bundle unbundle {{path/to/file.bundle}}",
                "Unbundle a specific branch from a bundle file into the current repository": "git pull {{path/to/file.bundle}} {{branch_name}}",
                "Verify that a bundle file is valid and can be applied to the current repository": "git bundle verify {{path/to/file.bundle}}"
            },
            "Explanation": "Package objects and references into an archive.",
            "More Information Link": "https://git-scm.com/docs/git-bundle"
        }
    },
    "git cat-file": {
        "common": {
            "Examples": {
                "Get the [s]ize of the HEAD commit in bytes": "git cat-file -s HEAD",
                "Get the [t]ype (blob, tree, commit, tag) of a given git object": "git cat-file -t {{8c442dc3}}",
                "Pretty-[p]rint the contents of a given git object based on its type": "git cat-file -p {{HEAD~2}}"
            },
            "Explanation": "Provide content or type and size information for git repository objects.",
            "More Information Link": "https://git-scm.com/docs/git-cat-file"
        }
    },
    "git check-ignore": {
        "common": {
            "Examples": {
                "Check whether a file or directory is ignored": "git check-ignore {{path/to/file_or_directory}}",
                "Check whether multiple files or directories are ignored": "git check-ignore {{path/to/file}} {{path/to/directory}}",
                "Do not check the index (used to debug why paths were tracked and not ignored)": "git check-ignore --no-index {{path/to/files_or_directories}}",
                "Include details about the matching pattern for each path": "git check-ignore --verbose {{path/to/files_or_directories}}",
                "Use pathnames, one per line, from `stdin`": "git check-ignore --stdin < {{path/to/file_list}}"
            },
            "Explanation": "Analyse and debug Git ignore / exclude (\".gitignore\") files.",
            "More Information Link": "https://git-scm.com/docs/git-check-ignore"
        }
    },
    "git checkout": {
        "common": {
            "Examples": {
                "Create and switch to a new branch": "git checkout -b {{branch_name}}",
                "Create and switch to a new branch based on a specific reference (branch, remote/branch, tag are examples of valid references)": "git checkout -b {{branch_name}} {{reference}}",
                "Discard all unstaged changes in the current directory (see `git reset` for more undo-like commands)": "git checkout .",
                "Discard unstaged changes to a given file": "git checkout {{filename}}",
                "Replace a file in the current directory with the version of it committed in a given branch": "git checkout {{branch_name}} -- {{filename}}",
                "Switch to an existing local branch": "git checkout {{branch_name}}",
                "Switch to an existing remote branch": "git checkout --track {{remote_name}}/{{branch_name}}",
                "Switch to the previously checked out branch": "git checkout -"
            },
            "Explanation": "Checkout a branch or paths to the working tree.",
            "More Information Link": "https://git-scm.com/docs/git-checkout"
        }
    },
    "git cherry": {
        "common": {
            "Examples": {
                "Limit commits to those within a given limit": "git cherry {{origin}} {{topic}} {{base}}",
                "Show commits (and their messages) with equivalent commits upstream": "git cherry -v",
                "Specify a different upstream and topic branch": "git cherry {{origin}} {{topic}}"
            },
            "Explanation": "Find commits that have yet to be applied upstream.",
            "More Information Link": "https://git-scm.com/docs/git-cherry"
        }
    },
    "git cherry-pick": {
        "common": {
            "Examples": {
                "Add the changes of a commit to the working directory, without creating a commit": "git cherry-pick -n {{commit}}",
                "Apply a commit to the current branch": "git cherry-pick {{commit}}",
                "Apply a range of commits to the current branch (see also `git rebase --onto`)": "git cherry-pick {{start_commit}}~..{{end_commit}}",
                "Apply multiple (non-sequential) commits to the current branch": "git cherry-pick {{commit_1}} {{commit_2}}"
            },
            "Explanation": "Apply the changes introduced by existing commits to the current branch.\nTo apply changes to another branch, first use `git checkout` to switch to the desired branch.",
            "More Information Link": "https://git-scm.com/docs/git-cherry-pick"
        }
    },
    "git clean": {
        "common": {
            "Examples": {
                "Delete files that are not tracked by git": "git clean",
                "Delete untracked files, including ignored files in `.gitignore` and `.git/info/exclude`": "git clean -x",
                "Forcefully delete directories that are not tracked by git": "git clean -fd",
                "Forcefully delete files that are not tracked by git": "git clean -f",
                "Interactively delete files that are not tracked by git": "git clean -i",
                "Show what files would be deleted without actually deleting them": "git clean --dry-run"
            },
            "Explanation": "Remove untracked files from the working tree.",
            "More Information Link": "https://git-scm.com/docs/git-clean"
        }
    },
    "git clone": {
        "common": {
            "Examples": {
                "Clone a local repository": "git clone -l {{path/to/local/repository}}",
                "Clone an existing repository": "git clone {{remote_repository_location}}",
                "Clone an existing repository and its submodules": "git clone --recursive {{remote_repository_location}}",
                "Clone an existing repository only fetching the 10 most recent commits on the default branch (useful to save time)": "git clone --depth {{10}} {{remote_repository_location}}",
                "Clone quietly": "git clone -q {{remote_repository_location}}"
            },
            "Explanation": "Clone an existing repository.",
            "More Information Link": "https://git-scm.com/docs/git-clone"
        }
    },
    "git commit": {
        "common": {
            "Examples": {
                "Auto stage all modified files and commit with a message": "git commit -a -m {{message}}",
                "Commit only specific (already staged) files": "git commit {{path/to/my/file1}} {{path/to/my/file2}}",
                "Commit staged files to the repository with a message": "git commit -m {{message}}",
                "Update the last commit by adding the currently staged changes, changing the commit's hash": "git commit --amend"
            },
            "Explanation": "Commit files to the repository.",
            "More Information Link": "https://git-scm.com/docs/git-commit"
        }
    },
    "git config": {
        "common": {
            "Examples": {
                "Edit the git configuration for the current repository in the default editor": "git config --edit",
                "Edit the global git configuration in the default editor": "git config --global --edit",
                "Get the value of a given configuration entry": "git config alias.unstage",
                "List all configuration entries that have been defined either locally or globally": "git config --list",
                "List only global configuration entries (stored in `~/.gitconfig`)": "git config --list --global",
                "List only local configuration entries (stored in `.git/config` in the current repository)": "git config --list --local",
                "Revert a global configuration entry to its default value": "git config --global --unset alias.unstage",
                "Set the global value of a given configuration entry": "git config --global alias.unstage \"reset HEAD --\""
            },
            "Explanation": "Manage custom configuration options for git repositories.\nThese configurations can be local (for the current repository) or global (for the current user).",
            "More Information Link": "https://git-scm.com/docs/git-config"
        }
    },
    "git describe": {
        "common": {
            "Examples": {
                "Create a name for the last commit of a given branch": "git describe {{branch_name}}",
                "Create a name with 4 digits for the abbreviated commit hash": "git describe --abbrev={{4}}",
                "Create a unique name for the current commit (the name contains the most recent annotated tag, the number of additional commits, and the abbreviated commit hash)": "git describe",
                "Describe a git tag": "git describe {{v1.0.0}}",
                "Generate a name with the tag reference path": "git describe --all"
            },
            "Explanation": "Give an object a human readable name based on an available ref.",
            "More Information Link": "https://git-scm.com/docs/git-describe"
        }
    },
    "git diff": {
        "common": {
            "Examples": {
                "Compare a single file between two branches or commits": "git diff {{branch_1}}..{{branch_2}} [--] {{path/to/file}}",
                "Compare different files from the current branch to other branch": "git diff {{branch}}:{{path/to/file2}} {{path/to/file}}",
                "Output a summary of file creations, renames and mode changes since a given commit": "git diff --summary {{commit}}",
                "Show all uncommitted changes (including staged ones)": "git diff HEAD",
                "Show changes from all commits since a given date/time (a date expression, e.g. \"1 week 2 days\" or an ISO date)": "git diff 'HEAD@{3 months|weeks|days|hours|seconds ago}'",
                "Show only names of changed files since a given commit": "git diff --name-only {{commit}}",
                "Show only staged (added, but not yet committed) changes": "git diff --staged",
                "Show unstaged, uncommitted changes": "git diff"
            },
            "Explanation": "Show changes to tracked files.",
            "More Information Link": "https://git-scm.com/docs/git-diff"
        }
    },
    "git difftool": {
        "common": {
            "Examples": {
                "List available diff tools": "git difftool --tool-help",
                "Set the default diff tool to meld": "git config --global diff.tool \"{{meld}}\"",
                "Use a specific tool (opendiff) to show changes since a given commit": "git difftool --tool={{opendiff}} {{commit}}",
                "Use the default diff tool to show staged changes": "git difftool --staged"
            },
            "Explanation": "Show file changes using external diff tools. Accepts the same options and arguments as git diff.",
            "More Information Link": "https://git-scm.com/docs/git-difftool"
        }
    },
    "git fetch": {
        "common": {
            "Examples": {
                "Also fetch tags from the remote upstream repository": "git fetch --tags",
                "Delete local references to remote branches that have been deleted upstream": "git fetch --prune",
                "Fetch new branches from a specific remote upstream repository": "git fetch {{remote_name}}",
                "Fetch the latest changes from all remote upstream repositories": "git fetch --all",
                "Fetch the latest changes from the default remote upstream repository (if set)": "git fetch"
            },
            "Explanation": "Download objects and refs from a remote repository.",
            "More Information Link": "https://git-scm.com/docs/git-fetch"
        }
    },
    "git flow": {
        "common": {
            "Examples": {
                "Finish development on a feature branch, merging it into the `develop` branch and deleting it": "git flow feature finish {{feature}}",
                "Get a feature published by another user": "git flow feature pull origin {{feature}}",
                "Initialize it inside an existing git repository": "git flow init",
                "Publish a feature to the remote server": "git flow feature publish {{feature}}",
                "Start developing on a feature branch based on `develop`": "git flow feature start {{feature}}"
            },
            "Explanation": "A collection of Git extensions to provide high-level repository operations.",
            "More Information Link": "https://github.com/nvie/gitflow"
        }
    },
    "git format-patch": {
        "common": {
            "Examples": {
                "Create an auto-named .patch file for all the unpushed commits": "git format-patch {{origin}}",
                "Write a .patch file for all the commits between 2 revisions to `stdout`": "git format-patch {{revision_1}}..{{revision_2}}",
                "Write a .patch file for the 3 latest commits": "git format-patch -{{3}}"
            },
            "Explanation": "Prepare .patch files. Useful when emailing commits elsewhere.\nSee also `git am`, which can apply generated .patch files.",
            "More Information Link": "https://git-scm.com/docs/git-format-patch"
        }
    },
    "git fsck": {
        "common": {
            "Examples": {
                "Check the current repository": "git fsck",
                "List all root nodes found": "git fsck --root",
                "List all tags found": "git fsck --tags"
            },
            "Explanation": "Verify the validity and connectivity of nodes in a Git repository index.\nDoes not make any modifications. See `git gc` for cleaning up dangling blobs.",
            "More Information Link": "https://git-scm.com/docs/git-fsck"
        }
    },
    "git gc": {
        "common": {
            "Examples": {
                "Aggressively optimise, takes more time": "git gc --aggressive",
                "Do not prune loose objects (prunes by default)": "git gc --no-prune",
                "Optimise the repository": "git gc",
                "Suppress all output": "git gc --quiet",
                "View full usage": "git gc --help"
            },
            "Explanation": "Optimise the local repository by cleaning unnecessary files.",
            "More Information Link": "https://git-scm.com/docs/git-gc"
        }
    },
    "git help": {
        "common": {
            "Examples": {
                "Display a list of all available git subcommands": "git help --all",
                "Display help about a specific git subcommand": "git help {{subcommand}}",
                "Display help about a specific git subcommand in a web browser": "git help --web {{subcommand}}",
                "List all possible configuration variables": "git help --config",
                "List the available guides": "git help --guide"
            },
            "Explanation": "Display help information about git.",
            "More Information Link": "https://git-scm.com/docs/git-help"
        }
    },
    "git ignore": {
        "common": {
            "Examples": {
                "Generate a .gitignore template": "git ignore {{item_a,item_b,item_n}}",
                "List available templates": "git ignore list"
            },
            "Explanation": "Generate .gitignore files from predefined templates.",
            "More Information Link": "https://docs.gitignore.io/install/command-line"
        }
    },
    "git init": {
        "common": {
            "Examples": {
                "Initialize a barebones repository, suitable for use as a remote over ssh": "git init --bare",
                "Initialize a new local repository": "git init"
            },
            "Explanation": "Initializes a new local Git repository.",
            "More Information Link": "https://git-scm.com/docs/git-init"
        }
    },
    "git instaweb": {
        "common": {
            "Examples": {
                "Also auto-launch a web browser": "git instaweb --start --browser",
                "Launch a gitweb server for the current git repository": "git instaweb --start",
                "Listen on a specific port": "git instaweb --start --port {{1234}}",
                "Listen only on localhost": "git instaweb --start --local",
                "Restart the currently running gitweb server": "git instaweb --restart",
                "Stop the currently running gitweb server": "git instaweb --stop",
                "Use a specified http daemon": "git instaweb --start --httpd {{lighttpd|apache2|mongoose|plackup|webrick}}"
            },
            "Explanation": "Helper to launch a gitweb server.",
            "More Information Link": "https://git-scm.com/docs/git-instaweb"
        }
    },
    "git lfs": {
        "common": {
            "Examples": {
                "Change the Git LFS endpoint URL (useful if the LFS server is separate from the Git server)": "git config -f .lfsconfig lfs.url {{lfs_endpoint_url}}",
                "Checkout all Git LFS objects": "git lfs checkout",
                "Fetch all Git LFS objects": "git lfs fetch",
                "Initialise Git LFS": "git lfs install",
                "List tracked files that have been commited": "git lfs ls-files",
                "List tracked patterns": "git lfs track",
                "Push all Git LFS objects to the remote server (useful if errors are encountered)": "git lfs push --all {{remote_name}} {{branch_name}}",
                "Track files that match a glob": "git lfs track '{{*.bin}}'"
            },
            "Explanation": "Work with large files in Git repositories.",
            "More Information Link": "https://git-lfs.github.com"
        }
    },
    "git log": {
        "common": {
            "Examples": {
                "Show a graph of all commits, tags and branches in the entire repo": "git log --oneline --decorate --all --graph",
                "Show a graph of commits in the current branch using only the first line of each commit message": "git log --oneline --graph",
                "Show an overview of which file(s) changed in each commit": "git log --stat",
                "Show commits between two dates": "git log --before={{date}} --after={{date}}",
                "Show only commits whose messages include a given string (case-insensitively)": "git log -i --grep {{search_string}}",
                "Show the history of a particular file or directory, including differences": "git log -p {{path/to/file_or_directory}}",
                "Show the last N commits from a certain author": "git log -n {{number}} --author={{author}}",
                "Show the sequence of commits starting from the current one, in reverse chronological order of the git repository in the current working directory": "git log"
            },
            "Explanation": "Show a history of commits.",
            "More Information Link": "https://git-scm.com/docs/git-log"
        }
    },
    "git ls-files": {
        "common": {
            "Examples": {
                "Show deleted files": "git ls-files --deleted",
                "Show ignored and untracked files": "git ls-files --others",
                "Show modified and deleted files": "git ls-files --modified"
            },
            "Explanation": "Show information about files in the index and the working tree.",
            "More Information Link": "https://git-scm.com/docs/git-ls-files"
        }
    },
    "git ls-remote": {
        "common": {
            "Examples": {
                "Show all references from a remote repositiory based on name or url": "git ls-remote {{repositiory-url}}",
                "Show all references in the default remote repositoiory": "git ls-remote",
                "Show only heads references in the default remote repository": "git ls-remote --heads",
                "Show only tags references in the default remote repository": "git ls-remote --tags",
                "Show references from a remote repositiory filtered by a pattern": "git ls-remote {{repositiory-name}} \"{{pattern}}\""
            },
            "Explanation": "Git command for listing references in a remote repository based on name or URL.\nIf no name or URL are given, then the configured upstream branch will be used, or remote origin if the former is not configured.",
            "More Information Link": "https://git-scm.com/docs/git-ls-remote.html"
        }
    },
    "git ls-tree": {
        "common": {
            "Examples": {
                "List only the filenames of the tree on a commit": "git ls-tree --name-only {{commit_hash}}",
                "List the contents of the tree on a branch": "git ls-tree {{branch_name}}",
                "List the contents of the tree on a commit, recursing into subtrees": "git ls-tree -r {{commit_hash}}"
            },
            "Explanation": "List the contents of a tree object.",
            "More Information Link": "https://git-scm.com/docs/git-ls-tree"
        }
    },
    "git merge": {
        "common": {
            "Examples": {
                "Abort a merge in case of conflicts": "git merge --abort",
                "Edit the merge message": "git merge -e {{branch_name}}",
                "Merge a branch and create a merge commit": "git merge --no-ff {{branch_name}}",
                "Merge a branch into your current branch": "git merge {{branch_name}}"
            },
            "Explanation": "Merge branches.",
            "More Information Link": "https://git-scm.com/docs/git-merge"
        }
    },
    "git mergetool": {
        "common": {
            "Examples": {
                "Don't prompt before each invocation of the merge tool": "git mergetool --no-prompt",
                "Explicitly use the GUI merge tool (see the `merge.guitool` config variable)": "git mergetool --gui",
                "Explicitly use the regular merge tool (see the `merge.tool` config variable)": "git mergetool --no-gui",
                "Launch the default merge tool to resolve conflicts": "git mergetool",
                "Launch the merge tool identified by a name": "git mergetool --tool {{tool_name}}",
                "List valid merge tools": "git mergetool --tool-help"
            },
            "Explanation": "Run merge conflict resolution tools to resolve merge conflicts.",
            "More Information Link": "https://git-scm.com/docs/git-mergetool"
        }
    },
    "git mv": {
        "common": {
            "Examples": {
                "Move file inside the repo and add the movement to the next commit": "git mv {{path/to/file}} {{new/path/to/file}}",
                "Overwrite the file in the target path if it exists": "git mv --force {{file}} {{target}}",
                "Rename file and add renaming to the next commit": "git mv {{filename}} {{new_filename}}"
            },
            "Explanation": "Move or rename files and update the git index.",
            "More Information Link": "https://git-scm.com/docs/git-mv"
        }
    },
    "git notes": {
        "common": {
            "Examples": {
                "Append a note to a specified object (opens the default text editor)": "git notes append {{object}}",
                "Append a note to a specified object, specifying the message": "git notes append --message=\"{{message_text}}\"",
                "Copy a note from one object to another": "git notes copy {{source_object}} {{target_object}}",
                "Edit an existing note (defaults to HEAD)": "git notes edit [{{object}}]",
                "List all notes and the objects they are attached to": "git notes list",
                "List all notes attached to a given object (defaults to HEAD)": "git notes list [{{object}}]",
                "Remove all the notes added to a specified object": "git notes remove {{object}}",
                "Show the notes attached to a given object (defaults to HEAD)": "git notes show [{{object}}]"
            },
            "Explanation": "Add or inspect object notes.",
            "More Information Link": "https://git-scm.com/docs/git-notes"
        }
    },
    "git pr": {
        "common": {
            "Examples": {
                "Check out a pull request for a specific remote": "git pr {{pr_number}} {{remote}}",
                "Check out a pull request from its URL": "git pr {{url}}",
                "Check out a specific pull request": "git pr {{pr_number}}",
                "Clean up old pull request branches": "git pr clean"
            },
            "Explanation": "Check out GitHub pull requests locally.",
            "More Information Link": "https://github.com/tj/git-extras/blob/master/Commands.md#git-pr"
        }
    },
    "git prune": {
        "common": {
            "Examples": {
                "Prune unreachable objects and display what has been pruned to `stdout`": "git prune --verbose",
                "Prune unreachable objects while showing progress": "git prune --progress",
                "Report what would be removed by git prune without removing it": "git prune --dry-run"
            },
            "Explanation": "Git command for pruning all unreachable objects from the object database.\nThis command is often not used directely but as an internal command that is used by git gc.",
            "More Information Link": "https://git-scm.com/docs/git-prune"
        }
    },
    "git pull": {
        "common": {
            "Examples": {
                "Download changes from default remote repository and merge it": "git pull",
                "Download changes from default remote repository and use fast forward": "git pull --rebase",
                "Download changes from given remote repository and branch, then merge them into HEAD": "git pull {{remote_name}} {{branch}}"
            },
            "Explanation": "Fetch branch from a remote repository and merge it to local repository.",
            "More Information Link": "https://git-scm.com/docs/git-pull"
        }
    },
    "git push": {
        "common": {
            "Examples": {
                "Delete a branch in a remote repository": "git push {{remote_name}} --delete {{remote_branch}}",
                "Publish tags that aren't yet in the remote repository": "git push --tags",
                "Publish the current branch to a remote repository, setting the remote branch name": "git push {{remote_name}} -u {{remote_branch}}",
                "Remove remote branches that don't have a local counterpart": "git push --prune {{remote_name}}",
                "Send changes on all local branches to their counterparts in a given remote repository": "git push --all {{remote_name}}",
                "Send local changes in a given branch to its remote counterpart": "git push {{remote_name}} {{local_branch}}",
                "Send local changes in the current branch to its remote counterpart": "git push"
            },
            "Explanation": "Push commits to a remote repository.",
            "More Information Link": "https://git-scm.com/docs/git-push"
        }
    },
    "git rebase": {
        "common": {
            "Examples": {
                "Abort a rebase in progress (e.g. if it is interrupted by a merge conflict)": "git rebase --abort",
                "Auto-resolve any conflicts by favoring the working branch version (`theirs` keyword has reversed meaning in this case)": "git rebase -X theirs {{branch_name}}",
                "Continue a rebase that was interrupted by a merge failure, after editing conflicting files": "git rebase --continue",
                "Continue a rebase that was paused due to merge conflicts, by skipping the conflicted commit": "git rebase --skip",
                "Move part of the current branch onto a new base, providing the old base to start from": "git rebase --onto {{new_base}} {{old_base}}",
                "Reapply the last 5 commits in-place, stopping to allow them to be reordered, omitted, combined or modified": "git rebase -i {{HEAD~5}}",
                "Rebase the current branch on top of another specified branch": "git rebase {{new_base_branch}}",
                "Start an interactive rebase, which allows the commits to be reordered, omitted, combined or modified": "git rebase -i {{target_base_branch_or_commit_hash}}"
            },
            "Explanation": "Reapply commits from one branch on top of another branch.\nCommonly used to \"move\" an entire branch to another base, creating copies of the commits in the new location.",
            "More Information Link": "https://git-scm.com/docs/git-rebase"
        }
    },
    "git reflog": {
        "common": {
            "Examples": {
                "Show only the 5 latest entries in the reflog": "git reflog -n {{5}}",
                "Show the reflog for HEAD": "git reflog",
                "Show the reflog for a given branch": "git reflog {{branch_name}}"
            },
            "Explanation": "Show a log of changes to local references like HEAD, branches or tags.",
            "More Information Link": "https://git-scm.com/docs/git-reflog"
        }
    },
    "git remote": {
        "common": {
            "Examples": {
                "Add a remote": "git remote add {{remote_name}} {{remote_url}}",
                "Change the URL of a remote (use `--add` to keep the existing URL)": "git remote set-url {{remote_name}} {{new_url}}",
                "Remove a remote": "git remote remove {{remote_name}}",
                "Rename a remote": "git remote rename {{old_name}} {{new_name}}",
                "Show a list of existing remotes, their names and URL": "git remote -v",
                "Show information about a remote": "git remote show {{remote_name}}"
            },
            "Explanation": "Manage set of tracked repositories (\"remotes\").",
            "More Information Link": "https://git-scm.com/docs/git-remote"
        }
    },
    "git repack": {
        "common": {
            "Examples": {
                "Also remove redundant objects after packing": "git repack -d",
                "Pack unpacked objects in the current directory": "git repack"
            },
            "Explanation": "Pack unpacked objects in a git repository.",
            "More Information Link": "https://git-scm.com/docs/git-repack"
        }
    },
    "git replace": {
        "common": {
            "Examples": {
                "Delete existing replace refs for the given objects": "git replace --delete {{object}}",
                "Edit an object’s content interactively": "git replace --edit {{object}}",
                "Replace any commit with a different one, leaving other commits unchanged": "git replace {{object}} {{replacement}}"
            },
            "Explanation": "Create, list, and delete refs to replace objects.",
            "More Information Link": "https://git-scm.com/docs/git-replace"
        }
    },
    "git request-pull": {
        "common": {
            "Examples": {
                "Produce a request summarizing the changes between the v0.1 release on the `foo` branch and the local `bar` branch": "git request-pull {{v0.1}} {{https://example.com/project}} {{foo:bar}}",
                "Produce a request summarizing the changes between the v1.1 release and a specified branch": "git request-pull {{v1.1}} {{https://example.com/project}} {{branch_name}}"
            },
            "Explanation": "Generate a request asking the upstream project to pull changes into its tree.",
            "More Information Link": "https://git-scm.com/docs/git-request-pull"
        }
    },
    "git reset": {
        "common": {
            "Examples": {
                "Discard any uncommitted changes, staged or not (for only unstaged changes, use `git checkout`)": "git reset --hard",
                "Reset the repository to a given commit, discarding committed, staged and uncommitted changes since then": "git reset --hard {{commit}}",
                "Undo the last commit, keeping its changes (and any further uncommitted changes) in the filesystem": "git reset HEAD~",
                "Undo the last two commits, adding their changes to the index, i.e. staged for commit": "git reset --soft HEAD~2",
                "Unstage everything": "git reset",
                "Unstage portions of a file": "git reset -p {{path/to/file}}",
                "Unstage specific file(s)": "git reset {{path/to/file(s)}}"
            },
            "Explanation": "Undo commits or unstage changes, by resetting the current git HEAD to the specified state.\nIf a path is passed, it works as \"unstage\"; if a commit hash or branch is passed, it works as \"uncommit\".",
            "More Information Link": "https://git-scm.com/docs/git-reset"
        }
    },
    "git restore": {
        "common": {
            "Examples": {
                "Restore a deleted file from the contents of the current commit (HEAD)": "git restore {{path/to/file}}",
                "Restore a file to a version from a different commit": "git restore --source {{commit}} {{path/to/file}}",
                "Undo any uncommitted changes to tracked files, reverting to the current HEAD": "git restore ."
            },
            "Explanation": "Restore working tree files. Requires git version 2.23+.\nSee also `git checkout`.",
            "More Information Link": "https://git-scm.com/docs/git-restore/"
        }
    },
    "git rev-list": {
        "common": {
            "Examples": {
                "List all commits on the current branch": "git rev-list {{HEAD}}",
                "List all merge commits on a specific commit": "git rev-list --merges {{commit}}",
                "List commits more recent than a specific date, on a specific branch": "git rev-list --since={{'2019-12-01 00:00:00'}} {{branch_name}}"
            },
            "Explanation": "List revisions (commits) in reverse chronological order.",
            "More Information Link": "https://git-scm.com/docs/git-rev-list"
        }
    },
    "git rev-parse": {
        "common": {
            "Examples": {
                "Get the absolute path to the root directory": "git rev-parse --show-toplevel",
                "Get the commit hash of a branch": "git rev-parse {{branch_name}}",
                "Get the current branch name": "git rev-parse --abbrev-ref {{HEAD}}"
            },
            "Explanation": "Display metadata related to specific revisions.",
            "More Information Link": "https://git-scm.com/docs/git-rev-parse"
        }
    },
    "git revert": {
        "common": {
            "Examples": {
                "Don't create new commits, just change the working tree": "git revert -n {{0c01a9..9a1743}}",
                "Revert multiple commits": "git revert {{branch_name~5..branch_name~2}}",
                "Revert the 5th last commit": "git revert HEAD~{{4}}",
                "Revert the most recent commit": "git revert {{@}}"
            },
            "Explanation": "Create new commits which reverse the effect of earlier ones.",
            "More Information Link": "https://git-scm.com/docs/git-revert"
        }
    },
    "git rm": {
        "common": {
            "Examples": {
                "Remove directory": "git rm -r {{directory}}",
                "Remove file from repository index and filesystem": "git rm {{file}}",
                "Remove file from repository index but keep it untouched locally": "git rm --cached {{file}}"
            },
            "Explanation": "Remove files from repository index and local filesystem.",
            "More Information Link": "https://git-scm.com/docs/git-rm"
        }
    },
    "git send-email": {
        "common": {
            "Examples": {
                "Review and edit the email message for each patch you're about to send": "git send-email -{{number of commits}} --annotate",
                "Send a given commit": "git send-email -1 {{commit}}",
                "Send an introductory email message for the patch series": "git send-email -{{number of commits}} --compose",
                "Send multiple (e.g. 10) commits in the current branch": "git send-email {{-10}}",
                "Send the last commit in the current branch": "git send-email -1"
            },
            "Explanation": "Send a collection of patches as emails.\nPatches can be specified as files, directions, or a revision list.",
            "More Information Link": "https://git-scm.com/docs/git-send-email"
        }
    },
    "git shortlog": {
        "common": {
            "Examples": {
                "View a summary of all the commits made, grouped alphabetically by author name": "git shortlog",
                "View a summary of all the commits made, grouped by the commiter identities (name and email)": "git shortlog -c",
                "View a summary of all the commits made, sorted by the number of commits made": "git shortlog -n",
                "View a summary of the last 5 commits (i.e. specify a revision range)": "git shortlog HEAD~{{5}}..HEAD",
                "View all users, emails and the number of commits in all branches": "git shortlog -sne --all",
                "View all users, emails and the number of commits in the current branch": "git shortlog -sne"
            },
            "Explanation": "Summarizes the `git log` output.",
            "More Information Link": "https://git-scm.com/docs/git-shortlog"
        }
    },
    "git show": {
        "common": {
            "Examples": {
                "Show a commit's message in a single line, suppressing the diff output": "git show --oneline -s {{commit}}",
                "Show information about a given commit": "git show {{commit}}",
                "Show information about the 3rd commit from the tip of a branch": "git show {{branch}}~{{3}}",
                "Show information about the commit associated with a given tag": "git show {{tag}}",
                "Show information about the latest commit (hash, message, changes, and other metadata)": "git show",
                "Show only the list of the files changed in a commit": "git show --stat {{commit}}",
                "Show the contents of a file as it was at a given revision (e.g. branch, tag or commit)": "git show {{revision}}:{{path/to/file}}"
            },
            "Explanation": "Show various types of git objects (commits, tags, etc.).",
            "More Information Link": "https://git-scm.com/docs/git-show"
        }
    },
    "git show-branch": {
        "common": {
            "Examples": {
                "Compare a given branch with the current branch": "git show-branch --current {{commit|branch_name|ref}}",
                "Compare all remote tracking branches": "git show-branch --remotes",
                "Compare both local and remote tracking branches": "git show-branch --all",
                "Compare commits in the history of multiple commits or branches": "git show-branch {{branch_name|ref|commit}}",
                "Display the commit name instead of the relative name": "git show-branch --sha1-name --current {{current|branch_name|ref}}",
                "Keep going a given number of commits past the common ancester": "git show-branch --more {{5}} {{commit|branch_name|ref}} {{commit|branch_name|ref}} {{...}}",
                "List the latest commits in all branches": "git show-branch --all --list",
                "Show a summary of the latest commit on a branch": "git show-branch {{branch_name|ref|commit}}"
            },
            "Explanation": "Show branches and their commits.",
            "More Information Link": "https://git-scm.com/docs/git-show-branch"
        }
    },
    "git show-ref": {
        "common": {
            "Examples": {
                "Show all refs in the repository": "git show-ref",
                "Show only heads references": "git show-ref --heads",
                "Show only tags references": "git show-ref --tags",
                "Verify that a given reference exists": "git show-ref --verify {{path/to/ref}}"
            },
            "Explanation": "Git command for listing references.",
            "More Information Link": "https://git-scm.com/docs/git-show-ref"
        }
    },
    "git sizer": {
        "common": {
            "Examples": {
                "Report all statistics": "git sizer -v",
                "Report only statistics that have a level of concern greater than 0": "git sizer",
                "See additional options": "git sizer -h"
            },
            "Explanation": "Computes various Git repository size metrics and alerts you to any that might cause problems or inconvenience.",
            "More Information Link": "https://github.com/github/git-sizer"
        }
    },
    "git stage": {
        "common": {
            "Examples": {
                "Add a file to the index": "git stage {{path/to/file}}",
                "Add all files (tracked and untracked)": "git stage -A",
                "Also add ignored files": "git stage -f",
                "Interactively stage a file": "git stage -i",
                "Interactively stage parts of a given file": "git stage -p {{path/to/file}}",
                "Interactively stage parts of files": "git stage -p",
                "Only add already tracked files": "git stage -u"
            },
            "Explanation": "Add file contents to the staging area.\nSynonym of `git add`.",
            "More Information Link": "https://git-scm.com/docs/git-stage"
        }
    },
    "git stash": {
        "common": {
            "Examples": {
                "Apply a stash (default is stash@{0}), and remove it from the stash list if applying doesn't cause conflicts": "git stash pop {{optional_stash_name}}",
                "Apply a stash (default is the latest, named stash@{0})": "git stash apply {{optional_stash_name_or_commit}}",
                "Drop a stash (default is stash@{0})": "git stash drop {{optional_stash_name}}",
                "Drop all stashes": "git stash clear",
                "Interactively select parts of changed files for stashing": "git stash -p",
                "List all stashes (shows stash name, related branch and message)": "git stash list",
                "Stash current changes, except new (untracked) files": "git stash [push -m {{optional_stash_message}}]",
                "Stash current changes, including new (untracked) files": "git stash -u"
            },
            "Explanation": "Stash local Git changes in a temporary area.",
            "More Information Link": "https://git-scm.com/docs/git-stash"
        }
    },
    "git status": {
        "common": {
            "Examples": {
                "Don't show untracked files in the output": "git status --untracked-files=no",
                "Give output in [s]hort format": "git status -s",
                "Show changed files which are not yet added for commit": "git status",
                "Show output in [s]hort format along with [b]ranch info": "git status -sb"
            },
            "Explanation": "Show the changes to files in a git repository.\nLists changed, added and deleted files compared to the currently checked-out commit.",
            "More Information Link": "https://git-scm.com/docs/git-status"
        }
    },
    "git submodule": {
        "common": {
            "Examples": {
                "Add a git repository as a submodule": "git submodule add {{repository_url}}",
                "Add a git repository as a submodule at the specified directory": "git submodule add {{repository_url}} {{path/to/directory}}",
                "Install a repository's specified submodules": "git submodule update --init --recursive",
                "Update every submodule to its latest commit": "git submodule foreach git pull"
            },
            "Explanation": "Inspects, updates and manages submodules.",
            "More Information Link": "https://git-scm.com/docs/git-submodule"
        }
    },
    "git subtree": {
        "common": {
            "Examples": {
                "Add a git repository as a subtree": "git subtree add --prefix={{path/to/directory/}} --squash {{repository_url}} {{branch_name}}",
                "Extract a new project history from the history of a subtree": "git subtree split --prefix={{path/to/directory/}} {{repository_url}} -b {{branch_name}}",
                "Merge recent changes up to the latest subtree commit into the subtree": "git subtree merge --prefix={{path/to/directory/}} --squash {{repository_url}} {{branch_name}}",
                "Push commits to a subtree repository": "git subtree push --prefix={{path/to/directory/}} {{repository_url}} {{branch_name}}",
                "Update subtree repository to its latest commit": "git subtree pull --prefix={{path/to/directory/}} {{repository_url}} {{branch_name}}"
            },
            "Explanation": "Tool to manage project dependencies as subprojects.",
            "More Information Link": "https://manpages.debian.org/testing/git-man/git-subtree.1.en.html"
        }
    },
    "git svn": {
        "common": {
            "Examples": {
                "Clone a SVN repository starting at a given revision number": "git svn clone -r{{1234}}:HEAD {{https://svn.example.net/subversion/repo}} {{local_dir}}",
                "Clone an SVN repository": "git svn clone {{https://example.com/subversion_repo}} {{local_dir}}",
                "Commit back to the SVN repository": "git svn dcommit",
                "Fetch updates from the remote SVN repository without changing the git HEAD": "git svn fetch",
                "Update local clone from the remote SVN repository": "git svn rebase"
            },
            "Explanation": "Bidirectional operation between a Subversion repository and Git.",
            "More Information Link": "https://git-scm.com/docs/git-svn"
        }
    },
    "git switch": {
        "common": {
            "Examples": {
                "Create a new branch and switch to it": "git switch --create {{branch_name}}",
                "Create a new branch based on an existing commit and switch to it": "git switch --create {{branch_name}} {{commit}}",
                "Switch to a branch and automatically merge the current branch and any uncommitted changes into it": "git switch --merge {{branch_name}}",
                "Switch to a branch and update all submodules to match": "git switch --recurse-submodules {{branch_name}}",
                "Switch to an existing branch": "git switch {{branch_name}}",
                "Switch to the previous branch": "git switch -"
            },
            "Explanation": "Switch between git branches. Requires git version 2.23+.\nSee also `git checkout`.",
            "More Information Link": "https://git-scm.com/docs/git-switch/"
        }
    },
    "git tag": {
        "common": {
            "Examples": {
                "Create a tag with the given name pointing to a given commit": "git tag {{tag_name}} {{commit}}",
                "Create a tag with the given name pointing to the current commit": "git tag {{tag_name}}",
                "Create an annotated tag with the given message": "git tag {{tag_name}} -m {{tag_message}}",
                "Delete the tag with the given name": "git tag -d {{tag_name}}",
                "Get updated tags from upstream": "git fetch --tags",
                "List all tags": "git tag",
                "List all tags whose ancestors include a given commit": "git tag --contains {{commit}}"
            },
            "Explanation": "Create, list, delete or verify tags.\nA tag is a static reference to a specific commit.",
            "More Information Link": "https://git-scm.com/docs/git-tag"
        }
    },
    "git update-index": {
        "common": {
            "Examples": {
                "Pretend that a modified file is unchanged (`git status` will not show this as changed)": "git update-index --skip-worktree {{path/to/modified_file}}"
            },
            "Explanation": "Git command for manipulating the index.",
            "More Information Link": "https://git-scm.com/docs/git-update-index"
        }
    },
    "git update-ref": {
        "common": {
            "Examples": {
                "Delete a ref, useful for soft resetting the first commit": "git update-ref -d {{HEAD}}",
                "Update ref with a message": "git update-ref -m {{message}} {{HEAD}} {{4e95e05}}"
            },
            "Explanation": "Git command for creating, updating, and deleting git refs.",
            "More Information Link": "https://git-scm.com/docs/git-update-ref"
        }
    },
    "git worktree": {
        "common": {
            "Examples": {
                "Create a new directory with a new branch checked out into it": "git worktree add {{path/to/directory}} -b {{new_branch}}",
                "Create a new directory with the specified branch checked out into it": "git worktree add {{path/to/directory}} {{branch}}",
                "List all the working directories attached to this repository": "git worktree list",
                "Remove a worktree (after deleting worktree directory)": "git worktree prune"
            },
            "Explanation": "Manage multiple working trees attached to the same repository.",
            "More Information Link": "https://git-scm.com/docs/git-worktree"
        }
    },
    "git-grep": {
        "common": {
            "Examples": {
                "Search for a string across all branches": "git grep {{search_string}} $(git rev-list --all)",
                "Search for a string at a specific point in history": "git grep {{search_string}} {{HEAD~2}}",
                "Search for a string in files matching a pattern in tracked files": "git grep {{search_string}} -- {{file_glob_pattern}}",
                "Search for a string in tracked files": "git grep {{search_string}}",
                "Search for a string in tracked files, including submodules": "git grep --recurse-submodules {{search_string}}"
            },
            "Explanation": "Find strings inside files anywhere in a repository's history.\nAccepts a lot of the same flags as regular `grep`.",
            "More Information Link": "https://git-scm.com/docs/git-grep"
        }
    },
    "git-imerge": {
        "common": {
            "Examples": {
                "Abort imerge operation, and return to the previous branch": "git-imerge remove && git checkout {{previous_branch}}",
                "Continue imerge operation after resolving conflicts (`git add` the conflicted files, first)": "git imerge continue --no-edit",
                "Show ASCII diagram of in-progress merge or rebase": "git imerge diagram",
                "Start imerge-based merge (checkout the branch to merge into, first)": "git imerge merge {{branch_to_be_merged}}",
                "Start imerge-based rebase (checkout the branch to be rebased, first)": "git imerge rebase {{branch_to_rebase_onto}}",
                "Wrap up imerge operation, after all conflicts are resolved": "git imerge finish"
            },
            "Explanation": "Perform a merge or rebase between two git branches incrementally.\nConflicts between branches are tracked down to pairs of individual commits, to simplify conflict resolution.",
            "More Information Link": "https://github.com/mhagger/git-imerge"
        }
    },
    "github-label-sync": {
        "common": {
            "Examples": {
                "Keep labels that aren't in `labels.json`": "github-label-sync --access-token {{token}} --allow-added-labels {{repository_name}}",
                "Perform a dry run instead of actually synchronising labels": "github-label-sync --access-token {{token}} --dry-run {{repository_name}}",
                "Synchronise labels using a local `labels.json` file": "github-label-sync --access-token {{token}} {{repository_name}}",
                "Synchronise labels using a specific labels JSON file": "github-label-sync --access-token {{token}} --labels {{url|path/to/json_file}} {{repository_name}}",
                "Synchronise using the `GITHUB_ACCESS_TOKEN` environment variable": "github-label-sync {{repository_name}}"
            },
            "Explanation": "A command line interface for synchronising GitHub labels.",
            "More Information Link": "https://npmjs.com/package/github-label-sync"
        }
    },
    "gitk": {
        "common": {
            "Examples": {
                "Show at most 100 changes in all branches": "gitk --max-count={{100}} --all",
                "Show commits made since 1 week ago": "gitk --since=\"{{1 week ago}}\"",
                "Show commits older than 1/1/2016": "gitk --until=\"{{1/1/2015}}\"",
                "Show repository browser for a specific file or directory": "gitk {{path/to/file_or_directory}}",
                "Show the repository browser for the current git repository": "gitk"
            },
            "Explanation": "A graphical git repository browser.",
            "More Information Link": "https://git-scm.com/docs/gitk"
        }
    },
    "gitlab": {
        "common": {
            "Examples": {
                "Create a new project": "gitlab create_project {{project_name}}",
                "Get info about a specific commit": "gitlab commit {{project_name}} {{commit_hash}}",
                "Get info about jobs in a CI pipeline": "gitlab pipeline_jobs {{project_name}} {{pipeline_id}}",
                "Start a specific CI job": "gitlab job_play {{project_name}} {{job_id}}"
            },
            "Explanation": "Ruby wrapper and CLI for the GitLab API.",
            "More Information Link": "https://narkoz.github.io/gitlab/"
        }
    },
    "gitlab-ctl": {
        "common": {
            "Examples": {
                "Display the logs of a specific service": "sudo gitlab-ctl tail {{nginx}}",
                "Display the logs of every service and keep reading until `Ctrl + C` is pressed": "sudo gitlab-ctl tail",
                "Display the status of a specific service": "sudo gitlab-ctl status {{nginx}}",
                "Display the status of every service": "sudo gitlab-ctl status",
                "Restart a specific service": "sudo gitlab-ctl restart {{nginx}}",
                "Restart every service": "sudo gitlab-ctl restart"
            },
            "Explanation": "CLI tool for managing the GitLab omnibus.",
            "More Information Link": "https://docs.gitlab.com/omnibus/maintenance/"
        }
    },
    "gitlab-runner": {
        "common": {
            "Examples": {
                "Check if the registered runners can connect to GitLab": "sudo gitlab-runner verify",
                "Display the status of the runner service": "sudo gitlab-runner status",
                "Register a runner": "sudo gitlab-runner register --url {{https://gitlab.example.com}} --registration-token {{token}} --name {{name}}",
                "Register a runner with a Docker executor": "sudo gitlab-runner register --url {{https://gitlab.example.com}} --registration-token {{token}} --name {{name}} --executor {{docker}}",
                "Restart the runner service": "sudo gitlab-runner restart",
                "Unregister a runner": "sudo gitlab-runner unregister --name {{name}}"
            },
            "Explanation": "CLI tool for managing GitLab runners.",
            "More Information Link": "https://docs.gitlab.com/runner/"
        }
    },
    "gitsome": {
        "common": {
            "Examples": {
                "Enter the gitsome shell (optional), to enable autocompletion and interactive help for git (and gh) commands": "gitsome",
                "List notifications for the current account (as would be seen in https://github.com/notifications)": "gh notifications",
                "List the current account's starred repos, filtered by a given search string": "gh starred \"{{python 3}}\"",
                "Setup GitHub integration with the current account": "gh configure",
                "View the recent activity feed for a given GitHub user, using the default pager (e.g. `less`)": "gh feed {{torvalds}} -p",
                "View the recent activity feed of a given GitHub repository": "gh feed {{tldr-pages/tldr}}"
            },
            "Explanation": "A terminal-based interface for GitHub, accessed via the `gh` command.\nIt also provides menu-style autocomplete suggestions for `git` commands.",
            "More Information Link": "https://github.com/donnemartin/gitsome"
        }
    },
    "gixy": {
        "common": {
            "Examples": {
                "Analyze nginx configuration (default path: /etc/nginx/nginx.conf)": "gixy",
                "Analyze nginx configuration but skip specific tests": "gixy --skips {{http_splitting}}",
                "Analyze nginx configuration files on the specific path": "gixy {{path/to/configuration_file_1}} {{path/to/configuration_file_2}}",
                "Analyze nginx configuration with the specific severity level": "gixy {{-l|-ll|-lll}}"
            },
            "Explanation": "Analyze nginx configuration files.",
            "More Information Link": "https://github.com/yandex/gixy"
        }
    },
    "glab": {
        "common": {
            "Examples": {
                "Clone a repository into a specific directory": "glab repo clone {{user}}/{{repository}} {{directory}}",
                "Create a merge request": "glab mr create",
                "Create a new issue": "glab issue create",
                "List merge requests": "glab mr list",
                "List pipelines": "glab pipeline list",
                "View and filter the current repository's open issues": "glab issue list"
            },
            "Explanation": "GitLab CLI tool to help working with GitLab from the command line.",
            "More Information Link": "https://clementsam.tech/glab/"
        }
    },
    "glances": {
        "common": {
            "Examples": {
                "Connect to a Glances server": "glances -c {{hostname}}",
                "Require a password in (web) server mode": "glances -s --password",
                "Run in server mode to allow connections from other Glances clients": "glances -s",
                "Run in terminal": "glances",
                "Run in web server mode to show results in browser": "glances -w"
            },
            "Explanation": "A cross-platform system monitoring tool.",
            "More Information Link": "https://nicolargo.github.io/glances/"
        }
    },
    "glib-compile-resources": {
        "common": {
            "Examples": {
                "Compile resources in \"file.gresource.xml\" to a chosen target file, with .c, .h or .gresource extension": "glib-compile-resources --generate --target={{file.ext}} {{file.gresource.xml}}",
                "Compile resources referenced in \"file.gresource.xml\" to a .gresource binary": "glib-compile-resources {{file.gresource.xml}}",
                "Compile resources referenced in \"file.gresource.xml\" to a C source file": "glib-compile-resources --generate-source {{file.gresource.xml}}",
                "Print a list of resource files referenced in \"file.gresource.xml\"": "glib-compile-resources --generate-dependencies {{file.gresource.xml}}"
            },
            "Explanation": "Compiles resource files (e.g. images) into a binary resource bundle.\nThese may be linked into GTK applications using the GResource API.",
            "More Information Link": ""
        }
    },
    "glow": {
        "common": {
            "Examples": {
                "Render a markdown file to the terminal": "glow {{path/to/file}}",
                "Run glow and select a file to view": "glow",
                "View a GitHub/GitLab README": "glow {{github.com/owner/repository}}",
                "View a file from a URL": "glow {{https://example.com/file.md}}",
                "View a markdown file using a paginator": "glow -p {{path/to/file}}"
            },
            "Explanation": "Render Markdown in the terminal.\nMore infomration: <https://github.com/charmbracelet/glow>.",
            "More Information Link": ""
        }
    },
    "gnome-extensions": {
        "linux": {
            "Examples": {
                "Disable a specific extension": "gnome-extension disable \"{{extension_id}}\"",
                "Display help for a subcommand (like `list`)": "gnome-extensions help {{subcommand}}",
                "Display information about a specific extension": "gnome-extensions info \"{{extension_id}}\"",
                "Display the version": "gnome-extensions version",
                "Enable a specific extension": "gnome-extensions enable \"{{extension_id}}\"",
                "List all the installed extensions": "gnome-extensions list",
                "Uninstall a specific extension": "gnome-extension unistall \"{{extension_id}}\""
            },
            "Explanation": "Manage gnome extensions from the terminal.",
            "More Information Link": "https://wiki.gnome.org/Projects/GnomeShell/Extensions"
        }
    },
    "gnome-terminal": {
        "linux": {
            "Examples": {
                "Open a new GNOME terminal window": "gnome-terminal",
                "Open a new tab in the last opened window instead": "gnome-terminal --tab",
                "Run a specific command in a new terminal window": "gnome-terminal -- {{command}}",
                "Set the title of the new tab": "gnome-terminal --tab --title \"{{title}}\""
            },
            "Explanation": "The GNOME Terminal emulator.",
            "More Information Link": ""
        }
    },
    "gnomon": {
        "common": {
            "Examples": {
                "Set a high threshold of 0.5 seconds for the elapsed time; exceeding which the timestamp will be colored bright red": "{{npm test}} | gnomon --high {{0.5}}",
                "Set a medium threshold of 0.2 seconds (Timestamp will be colored bright yellow)": "{{npm test}} | gnomon --medium {{0.2}}",
                "Show an absolute timestamp in UTC": "{{npm test}} | gnomon --type=absolute",
                "Show number of seconds since the start of the process": "{{npm test}} | gnomon --type=elapsed-total",
                "Use UNIX (or DOS) pipes to pipe the `stdout` of any command through gnomon": "{{npm test}} | gnomon"
            },
            "Explanation": "Utility to annotate console logging statements with timestamps and find slow processes.",
            "More Information Link": "https://github.com/paypal/gnomon"
        }
    },
    "gnuplot": {
        "common": {
            "Examples": {
                "Persist the graph plot preview window after gnuplot exits": "gnuplot --persist {{path/to/definition.plt}}",
                "Plot the graph for the specified graph definition file": "gnuplot {{path/to/definition.plt}}",
                "Set the output format by executing a command before loading the definition file": "gnuplot -e \"{{set output \"path/to/filename.png\" size 1024,768}}\" {{path/to/definition.plt}}",
                "Start the interactive graph plotting shell": "gnuplot"
            },
            "Explanation": "A graph plotter that outputs in several formats.",
            "More Information Link": "http://www.gnuplot.info/"
        }
    },
    "go": {
        "common": {
            "Examples": {
                "Compile a source file into a named executable": "go build -o {{executable}} {{file}}.go",
                "Compile and install the current package": "go install",
                "Compile and run a source file (it has to contain a `main` package)": "go run {{file}}.go",
                "Compile the package present in the current directory": "go build",
                "Download and install a package, specified by its import path": "go get {{package_path}}",
                "Execute all test cases of the current package (files have to end with `_test.go`)": "go test",
                "Initialize a new module in the current directory": "go mod init {{module_name}}"
            },
            "Explanation": "Tool for managing go source code.",
            "More Information Link": "https://golang.org"
        }
    },
    "go bug": {
        "common": {
            "Examples": {
                "Open a web page to start a bug report": "go bug"
            },
            "Explanation": "Report a bug.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Start_a_bug_report"
        }
    },
    "go build": {
        "common": {
            "Examples": {
                "Compile a file": "go build {{path/to/main.go}}",
                "Compile a main package into an executable, with data race detection": "go build -race -o {{path/to/executable}} {{path/to/main/package}}",
                "Compile a package": "go build -o {{path/to/binary}} {{path/to/package}}",
                "Compile, specifying the output filename": "go build -o {{path/to/binary}} {{path/to/source.go}}"
            },
            "Explanation": "Compile Go sources.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Compile_packages_and_dependencies"
        }
    },
    "go clean": {
        "common": {
            "Examples": {
                "Delete all cached test results": "go clean -testcache",
                "Delete the build cache": "go clean -cache",
                "Delete the module cache": "go clean -modcache",
                "Print the remove commands instead of actually removing anything": "go clean -n"
            },
            "Explanation": "Remove object files and cached files.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Remove_object_files_and_cached_files"
        }
    },
    "go doc": {
        "common": {
            "Examples": {
                "Show a specific symbol": "go doc -all -src {{encoding/json.Number}}",
                "Show also documentation of symbols": "go doc -all {{encoding/json}}",
                "Show also sources": "go doc -all -src {{encoding/json}}",
                "Show documentation for the current package": "go doc",
                "Show package documentation and exported symbols": "go doc {{encoding/json}}"
            },
            "Explanation": "Show documentation for a package or symbol.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Show_documentation_for_package_or_symbol"
        }
    },
    "go env": {
        "common": {
            "Examples": {
                "Reset an environment variable's value": "go env -u {{GOBIN}}",
                "Set an environment variable to a value": "go env -w {{GOBIN}}={{path/to/directory}}",
                "Show a specific environment variable": "go env {{GOPATH}}",
                "Show all environment variables": "go env"
            },
            "Explanation": "Manage environment variables used by the Go toolchain.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Print_Go_environment_information"
        }
    },
    "go fix": {
        "common": {
            "Examples": {
                "Update packages to use new APIs": "go fix {{packages}}"
            },
            "Explanation": "Update packages to use new APIs.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Update_packages_to_use_new_APIs"
        }
    },
    "go generate": {
        "common": {
            "Examples": {
                "Generate Go files by running commands within source files": "go generate"
            },
            "Explanation": "Generate Go files by running commands within source files.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Generate_Go_files_by_processing_source"
        }
    },
    "go list": {
        "common": {
            "Examples": {
                "List module dependencies and available updates": "go list -m -u all",
                "List packages": "go list ./...",
                "List packages in json format": "go list -json time net/http",
                "List standard packages": "go list std"
            },
            "Explanation": "List packages or modules.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-List_packages_or_modules"
        }
    },
    "go mod": {
        "common": {
            "Examples": {
                "Add missing and remove unused modules": "go mod tidy",
                "Copy sources of all dependencies into the vendor directory": "go mod vendor",
                "Download modules to local cache": "go mod download",
                "Initialize new module in current directory": "go mod init {{moduleName}}",
                "Verify dependencies have expected content": "go mod verify"
            },
            "Explanation": "Module maintenance.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Module_maintenance"
        }
    },
    "go version": {
        "common": {
            "Examples": {
                "Print Go version": "go version",
                "Print the Go version used to build the named executable file": "go version {{path/to/executable}}"
            },
            "Explanation": "Print Go version.",
            "More Information Link": "https://golang.org/cmd/go/#hdr-Print_Go_version"
        }
    },
    "gocryptfs": {
        "common": {
            "Examples": {
                "Change the password": "gocryptfs --passwd {{path/to/cipher_dir}}",
                "Initialize an encrypted filesystem": "gocryptfs -init {{path/to/cipher_dir}}",
                "Make an encrypted snapshot of a plain directory": "gocryptfs --reverse {{path/to/plain_dir}} {{path/to/cipher_dir}}",
                "Mount an encrypted filesystem": "gocryptfs {{path/to/cipher_dir}} {{path/to/mount_point}}",
                "Mount with the explicit master key instead of password": "gocryptfs --masterkey {{path/to/cipher_dir}} {{path/to/mount_point}}"
            },
            "Explanation": "Encrypted overlay filesystem written in Go.",
            "More Information Link": "https://github.com/rfjakob/gocryptfs"
        }
    },
    "godoc": {
        "common": {
            "Examples": {
                "Create an index file": "godoc -write_index -index_files={{path/to/file}}",
                "Display help for package \"fmt\"": "godoc {{fmt}}",
                "Display help for the function \"Printf\" of \"fmt\" package": "godoc {{fmt}} {{Printf}}",
                "Serve documentation as a web server on port \"6060\"": "godoc -http=:{{6060}}",
                "Use the given index file to search the docs": "godoc -http=:{{6060}} -index -index_files={{path/to/file}}"
            },
            "Explanation": "Show documentation for go packages.",
            "More Information Link": "https://godoc.org/"
        }
    },
    "godot": {
        "common": {
            "Examples": {
                "Edit a project (the current directory must contain a `project.godot` file)": "godot -e",
                "Execute a standalone GDScript file (the script must inherit from `SceneTree` or `MainLoop`)": "godot -s {{script.gd}}",
                "Export a project for a given export preset (the preset must be defined in the project)": "godot --export {{preset}} {{output_path}}",
                "Open the project manager even if the current directory contains a `project.godot` file": "godot -p",
                "Run a project if the current directory contains a `project.godot` file, otherwise open the project manager": "godot"
            },
            "Explanation": "An open source 2D and 3D game engine.",
            "More Information Link": "https://godotengine.org/"
        }
    },
    "gofmt": {
        "common": {
            "Examples": {
                "Format a file and display the result to the console": "gofmt {{source.go}}",
                "Format a file, and then simplify the code, overwriting the original file": "gofmt -s -w {{source.go}}",
                "Format a file, overwriting the original file in-place": "gofmt -w {{source.go}}",
                "Print all (including spurious) errors": "gofmt -e {{source.go}}"
            },
            "Explanation": "Tool for formatting Go source code.",
            "More Information Link": "https://golang.org/cmd/gofmt/"
        }
    },
    "goimports": {
        "common": {
            "Examples": {
                "Display diffs and write the result back to the source file": "goimports -w -d {{file}}.go",
                "Display the completed import source file": "goimports {{file}}.go",
                "Set the import prefix string after 3rd-party packages (comma-separated list)": "goimports -local {{/path/to/package}} {{file}}.go",
                "Write the result back to the source file instead of the standard output": "goimports -w {{file}}.go"
            },
            "Explanation": "Updates Go import lines, adding missing ones and removing unreferenced ones.",
            "More Information Link": "https://godoc.org/golang.org/x/tools/cmd/goimports"
        }
    },
    "google-chrome": {
        "linux": {
            "Examples": {
                "Run with a custom profile directory": "google-chrome --user-data-dir={{path/to/directory}}",
                "Run without CORS validation, useful to test an API": "google-chrome --user-data-dir={{path/to/directory}} --disable-web-security"
            },
            "Explanation": "The web browser from Google.",
            "More Information Link": "https://chrome.google.com"
        }
    },
    "googler": {
        "common": {
            "Examples": {
                "Disable automatic spelling correction": "googler -x {{keyword}}",
                "For more help in interactive mode": "?",
                "Perform in-place self-upgrade": "googler -u",
                "Search Google and open the first result in web browser": "googler -j {{keyword}}",
                "Search Google for a keyword": "googler {{keyword}}",
                "Search one site for a keyword": "googler -w {{site}} {{keyword}}",
                "Show Google search result in JSON format": "googler --json {{keyword}}",
                "Show N search results (default 10)": "googler -n {{N}} {{keyword}}"
            },
            "Explanation": "Search Google from command line.",
            "More Information Link": "https://github.com/jarun/googler"
        }
    },
    "gopass": {
        "common": {
            "Examples": {
                "Create a new entry": "gopass new",
                "Initialise the configuration settings": "gopass init",
                "Mount a shared git store": "gopass mounts add {{store_name}} {{git_repo_url}}",
                "Search interactively using a keyword": "gopass show {{keyword}}",
                "Search using a keyword": "gopass find {{keyword}}",
                "Show a particular password entry": "gopass {{store_name|path/to/directory|email@email.com}}",
                "Show all stores": "gopass mounts",
                "Sync all mounted stores": "gopass sync"
            },
            "Explanation": "Standard Unix Password Manager for Teams. Written in Go.",
            "More Information Link": "https://www.gopass.pw"
        }
    },
    "gops": {
        "common": {
            "Examples": {
                "Display a process tree": "gops tree",
                "Print all go processes running locally": "gops",
                "Print more information about a process": "gops {{pid}}",
                "Print the current runtime memory statistics": "gops memstats {{pid|addr}}",
                "Print the current stack trace from a target program": "gops stack {{pid|addr}}"
            },
            "Explanation": "CLI tool which lists and diagnoses Go processes currently running on your system.",
            "More Information Link": "https://github.com/google/gops"
        }
    },
    "goreload": {
        "common": {
            "Examples": {
                "Reload whenever any file changes": "goreload --all",
                "Set a custom log prefix (defaults to \"goreload\")": "goreload --logPrefix {{prefix}} {{file}}.go",
                "Set the name of the binary file to watch (defaults to \".goreload\")": "goreload -b {{path/to/binary}} {{file}}.go"
            },
            "Explanation": "Live reload utility for Go programs.",
            "More Information Link": "https://github.com/acoshift/goreload"
        }
    },
    "gotty": {
        "common": {
            "Examples": {
                "Share result of command": "gotty {{command}}",
                "Share with credential (Basic Auth)": "gotty -w -c {{username}}:{{password}} {{shell}}",
                "Share with write permission": "gotty -w {{shell}}"
            },
            "Explanation": "Share your terminal as a web application.",
            "More Information Link": "https://github.com/yudai/gotty"
        }
    },
    "gource": {
        "common": {
            "Examples": {
                "Run gource in a directory (if it isn't the repository's root directory, the root is sought up from there)": "gource {{path/to/repository}}",
                "Run gource in the current directory, with a custom output resolution": "gource -{{width}}x{{height}}",
                "Set a custom time scale for the animation": "gource -c {{time_scale_multiplier}}",
                "Set a title for the animation": "gource --title {{title}}",
                "Set fullscreen mode and a custom background color": "gource -f -b {{hex_color_code}}",
                "Set how long each day should be in the animation (this combines with -c, if provided)": "gource -s {{seconds}}"
            },
            "Explanation": "Renders an animated tree diagram of Git, SVN, Mercurial and Bazaar repositories.\nIt shows files and directories being created, modified or removed over time.",
            "More Information Link": "https://gource.io"
        }
    },
    "gox": {
        "common": {
            "Examples": {
                "Compile Go program in the current directory for all operating systems and architecture combinations": "gox",
                "Compile current directory for a particular operating system": "gox -os=\"{{os}}\"",
                "Compile current directory for a single operating system and architecture combination": "gox -osarch=\"{{os}}/{{arch}}\"",
                "Download and compile a Go program from a remote URL": "gox {{url_1}} {{url_2}}"
            },
            "Explanation": "A tool for cross-compiling Go programs.",
            "More Information Link": "https://github.com/mitchellh/gox"
        }
    },
    "gpasswd": {
        "linux": {
            "Examples": {
                "Add a user to the named group": "gpasswd -a {{user}} {{group}}",
                "Create a password for the named group": "gpasswd {{group}}",
                "Define group administrators": "sudo gpasswd -A {{user1,user2}} {{group}}",
                "Remove a user from the named group": "gpasswd -d {{user}} {{group}}",
                "Set the list of group members": "sudo gpasswd -M {{user1,user2}} {{group}}"
            },
            "Explanation": "Administer \"/etc/group\" and \"/etc/gshadow\".",
            "More Information Link": ""
        }
    },
    "gpg": {
        "common": {
            "Examples": {
                "Decrypt a specified file, writing the result to the standard output": "gpg2 --decrypt {{path/to/doc.txt.gpg}}",
                "Encrypt a specified file for a specified recipient, writing the output to a new file with `.gpg` appended": "gpg2 --encrypt --recipient {{alice@example.com}} {{path/to/doc.txt}}",
                "Encrypt a specified file with only a passphrase, writing the output to a new file with `.gpg` appended": "gpg2 --symmetric {{path/to/doc.txt}}",
                "Export the private key with a specified email address to the standard output": "gpg2 --export-secret-keys --armor {{alice@example.com}}",
                "Export the public key of a specified email address to the standard output": "gpg2 --export --armor {{alice@example.com}}",
                "Import a public key": "gpg2 --import {{path/to/public_key.gpg}}",
                "List imported keys": "gpg2 --list-keys"
            },
            "Explanation": "GNU Privacy Guard 2.",
            "More Information Link": "https://docs.releng.linuxfoundation.org/en/latest/gpg.html"
        }
    },
    "gpg-zip": {
        "common": {
            "Examples": {
                "Decrypt archive.gpg into a directory of the same name": "gpg-zip --decrypt {{path/to/archive.gpg}}",
                "Encrypt a directory into archive.gpg using a passphrase": "gpg-zip --symmetric --output {{archive.gpg}} {{path/to/directory}}",
                "List the contents of the encrypted archive.gpg": "gpg-zip --list-archive {{path/to/archive.gpg}}"
            },
            "Explanation": "Encrypt files and directories in an archive using GPG.",
            "More Information Link": ""
        }
    },
    "gpgv": {
        "common": {
            "Examples": {
                "Add a file to the list of keyrings (a single exported key also counts as a keyring)": "gpgv --keyring {{./alice.keyring}} {{path/to/signature}} {{path/to/file}}",
                "Verify a signed file": "gpgv {{path/to/file}}",
                "Verify a signed file using a detached signature": "gpgv {{path/to/signature}} {{path/to/file}}"
            },
            "Explanation": "Verify OpenPGP signatures.",
            "More Information Link": "https://www.gnupg.org/documentation/manuals/gnupg/gpgv.html"
        }
    },
    "gplusplus": {
        "common": {
            "Examples": {
                "Choose a language standard to compile for(C++98/C++11/C++14/C++17)": "g++ {{source.cpp}} -std={{language_standard}} -o {{output_executable}}",
                "Compile a source code file into an executable binary": "g++ {{source.cpp}} -o {{output_executable}}",
                "Display (almost) all errors and warnings": "g++ {{source.cpp}} -Wall -o {{output_executable}}",
                "Include libraries located at a different path than the source file": "g++ {{source.cpp}} -o {{output_executable}} -I{{header_path}} -L{{library_path}} -l{{library_name}}"
            },
            "Explanation": "Compiles C++ source files.\nPart of GCC (GNU Compiler Collection).",
            "More Information Link": "https://gcc.gnu.org"
        }
    },
    "gradle": {
        "common": {
            "Examples": {
                "Clear the build directory": "gradle clean",
                "Compile a package": "gradle build",
                "Compile and Release package": "gradle assembleRelease",
                "Exclude test task": "gradle build -x {{test}}",
                "Run in offline mode to prevent gradle from accessing the network during builds": "gradle build --offline"
            },
            "Explanation": "Gradle is an open source build automation system.",
            "More Information Link": "https://gradle.org"
        }
    },
    "grep": {
        "common": {
            "Examples": {
                "Invert match for excluding specific strings": "grep -v {{search_pattern}}",
                "Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match": "grep -{{C|B|A}} 3 {{search_pattern}} {{path/to/file}}",
                "Print file name with the corresponding line number for each match": "grep -Hn {{search_pattern}} {{path/to/file}}",
                "Search for a pattern [R]ecursively in the current directory, showing matching line [n]umbers, [I]gnoring non-text files": "grep -RIn {{search_pattern}} .",
                "Search for a pattern within a file": "grep {{search_pattern}} {{path/to/file}}",
                "Search for an exact string": "grep -F {{exact_string}} {{path/to/file}}",
                "Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode": "grep -Ei {{search_pattern}} {{path/to/file}}",
                "Use the standard input instead of a file": "cat {{path/to/file}} | grep {{search_pattern}}"
            },
            "Explanation": "Matches patterns in input text.\nSupports simple patterns and regular expressions.",
            "More Information Link": ""
        }
    },
    "grex": {
        "common": {
            "Examples": {
                "Add {min, max} quantifier representation for repeating sub-strings": "grex -r {{space_separated_strings}}",
                "Generate a case-insensitive regex": "grex -i {{space_separated_strings}}",
                "Generate a simple regular expression": "grex {{space_separated_strings}}",
                "Replace digits with '\\d'": "grex -d {{space_separated_strings}}",
                "Replace spaces with '\\s'": "grex -s {{space_separated_strings}}",
                "Replace unicode word character with '\\w'": "grex -w {{space_separated_strings}}"
            },
            "Explanation": "Simple command line tool to generate regular expressions.",
            "More Information Link": "https://github.com/pemistahl/grex"
        }
    },
    "groff": {
        "common": {
            "Examples": {
                "Process a roff file using the `tbl` and `pic` preprocessors, and the `me` macro set": "groff -t -p -me -T utf8 {{foo.me}}",
                "Render a man page as plain text, and display the result": "groff -man -T utf8 {{manpage.1}}",
                "Render a man page into an HTML file": "groff -man -T html {{manpage.1}} > {{page.html}}",
                "Render a man page using the ASCII output device, and display it using a pager": "groff -man -T ascii {{manpage.1}} | less",
                "Run a `groff` command with preprocessor and macro options guessed by the `grog` utility": "eval \"$(grog -T utf8 {{foo.me}})\""
            },
            "Explanation": "Typesetting program that reads plain text mixed with formatting commands and produces formatted output.\nIt is the GNU replacement for the `troff` and `nroff` Unix commands for text formatting.",
            "More Information Link": "https://www.gnu.org/software/groff"
        }
    },
    "groupadd": {
        "linux": {
            "Examples": {
                "Create a new Linux group": "groupadd {{group_name}}",
                "Create new group with a specific groupid": "groupadd {{group_name}} -g {{group_id}}"
            },
            "Explanation": "Add user groups to the system.",
            "More Information Link": ""
        }
    },
    "groupdel": {
        "linux": {
            "Examples": {
                "Delete an existing group": "groupdel {{group_name}}"
            },
            "Explanation": "Delete existing user groups from the system.",
            "More Information Link": ""
        }
    },
    "groupmod": {
        "linux": {
            "Examples": {
                "Change the group id": "groupmod -g {{new_group_id}} {{old_group_name}}",
                "Change the group name": "groupmod -n {{new_group_name}} {{old_group_name}}"
            },
            "Explanation": "Modify existing user groups in the system.",
            "More Information Link": ""
        }
    },
    "groups": {
        "common": {
            "Examples": {
                "Print group memberships for a list of users": "groups {{username1}} {{username2}} {{username3}}",
                "Print group memberships for a specific user": "groups {{username}}",
                "Print group memberships for the current user": "groups"
            },
            "Explanation": "Print group memberships for a user.",
            "More Information Link": ""
        }
    },
    "grpcurl": {
        "common": {
            "Examples": {
                "List all methods in a particular service": "grpcurl {{grpc.server.com:443}} list {{my.custom.server.Service}}",
                "List all services exposed by a server": "grpcurl {{grpc.server.com:443}} list",
                "Send a request with a header and a body": "grpcurl -H \"{{Authorization: Bearer $token}}\" -d {{'{\"foo\": \"bar\"}'}} {{grpc.server.com:443}} {{my.custom.server.Service/Method}}",
                "Send an empty request": "grpcurl {{grpc.server.com:443}} {{my.custom.server.Service/Method}}"
            },
            "Explanation": "Like cURL, but for gRPC: CLI tool for interacting with gRPC servers.",
            "More Information Link": "https://github.com/fullstorydev/grpcurl"
        }
    },
    "grumphp": {
        "common": {
            "Examples": {
                "Check every versioned file": "grumphp run",
                "Register the Git hooks": "grumphp git:init",
                "Trigger the pre-commit hook manually": "grumphp git:pre-commit"
            },
            "Explanation": "A PHP Composer plugin that enables source code quality checks.",
            "More Information Link": "https://github.com/phpro/grumphp"
        }
    },
    "grunt": {
        "common": {
            "Examples": {
                "List all available options": "grunt --help",
                "Perform a dry-run without writing any files": "grunt --no-write",
                "Run one or more specific space-separated task(s)": "grunt {{task_name}}",
                "Run the default task process": "grunt",
                "Specify an additional directory to scan for tasks in": "grunt --tasks {{path/to/directory}}",
                "Specify an alternative base path for relative files": "grunt --base {{path/to/directory}}",
                "Specify an alternative configuration file": "grunt --gruntfile {{path/to/file}}"
            },
            "Explanation": "A JavaScript task runner for automating processes.",
            "More Information Link": "https://github.com/gruntjs/grunt-cli"
        }
    },
    "gs": {
        "linux": {
            "Examples": {
                "Convert PDF file (pages 1 through 3) to an image with 150 dpi resolution": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=jpeg -r150 -dFirstPage={{1}} -dLastPage={{3}} -sOutputFile={{output_%d.jpg}} {{input.pdf}}",
                "Convert from PostScript file to PDF file": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input.ps}}",
                "Extract pages from a PDF file": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input.pdf}}",
                "Merge PDF files": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input1.pdf}} {{input2.pdf}}",
                "Reduce PDF file size to 150 dpi images for reading on a ebook device": "gs -dNOPAUSE -dQUIET -dBATCH -sDEVICE=pdfwrite -dPDFSETTINGS=/ebook -sOutputFile={{output.pdf}} {{input.pdf}}",
                "To view a file": "gs -dQUIET -dBATCH {{file.pdf}}"
            },
            "Explanation": "GhostScript is a PDF and PostScript interpreter.",
            "More Information Link": ""
        }
    },
    "gtop": {
        "common": {
            "Examples": {
                "Show the system stats dashboard": "gtop",
                "Sort by CPU usage": "c",
                "Sort by memory usage": "m"
            },
            "Explanation": "System monitoring dashboard for the terminal.",
            "More Information Link": "https://github.com/aksakalli/gtop"
        }
    },
    "guacd": {
        "common": {
            "Examples": {
                "Bind to a specific port on localhost": "guacd -b {{127.0.0.1}} -l {{4823}}",
                "Start in debug mode, keeping the process in the foreground": "guacd -f -L {{debug}}",
                "Start with TLS support": "guacd -C {{my-cert.crt}} -K {{my-key.pem}}",
                "Write the PID to a file": "guacd -p {{path/to/file.pid}}"
            },
            "Explanation": "Apache Guacamole proxy daemon.\nSupport loader for client plugins to interface between the Guacamole protocol and any arbitrary remote desktop protocol (e.g. RDP, VNC, Other).",
            "More Information Link": "https://guacamole.apache.org/"
        }
    },
    "guake": {
        "linux": {
            "Examples": {
                "Close the terminal": "Super+X",
                "Go to the previous tab": "Ctrl+PageUp",
                "Open a new tab": "Ctrl+Shift+T",
                "Search the selected text in the browser": "Shift+Ctrl+L",
                "Toggle Guake visiblity": "F12",
                "Toggle fullscreen mode": "F11"
            },
            "Explanation": "A drop-down terminal for GNOME.",
            "More Information Link": ""
        }
    },
    "guetzli": {
        "common": {
            "Examples": {
                "Compress a JPEG image": "guetzli {{input.jpg}} {{output.jpg}}",
                "Compress a JPEG image with desired visual quality (84-100)": "guetzli --quality {{quality_value}} {{input.jpg}} {{output.jpg}}",
                "Create compressed JPEG image from PNG image": "guetzli {{input.png}} {{output.jpg}}"
            },
            "Explanation": "JPEG image compression utility.",
            "More Information Link": "https://github.com/google/guetzli"
        }
    },
    "guile": {
        "common": {
            "Examples": {
                "Execute a Scheme expression": "guile -c \"{{expression}}\"",
                "Execute the script in a given Scheme file": "guile {{script.scm}}",
                "Listen on a port or a Unix domain socket (the default is port 37146) for remote REPL connections": "guile --listen={{port_or_socket}}",
                "Start the Guile Scheme REPL": "guile"
            },
            "Explanation": "Guile Scheme interpreter.",
            "More Information Link": "https://www.gnu.org/software/guile"
        }
    },
    "guix package": {
        "linux": {
            "Examples": {
                "Install a new package": "guix package -i {{package_name}}",
                "List generations": "guix package -l",
                "List installed packages": "guix package -I",
                "Remove a package": "guix package -r {{package_name}}",
                "Roll back to the previous generation": "guix package --roll-back",
                "Search the package database for a regular expression": "guix package -s \"{{search_pattern}}\""
            },
            "Explanation": "Install, upgrade and remove Guix packages, or rollback to previous configurations.",
            "More Information Link": ""
        }
    },
    "gulp": {
        "common": {
            "Examples": {
                "Run individual tasks": "gulp {{task}} {{othertask}}",
                "Run the default task": "gulp"
            },
            "Explanation": "JavaScript task runner and streaming build system.\nTasks are defined within gulpfile.js at the project root.",
            "More Information Link": "https://github.com/gulpjs/gulp-cli"
        }
    },
    "gunicorn": {
        "common": {
            "Examples": {
                "Listen on port 8080 on localhost": "gunicorn --bind {{localhost}}:{{8080}} {{import.path:app_object}}",
                "Run Python web app": "gunicorn {{import.path:app_object}}",
                "Run app over HTTPS": "gunicorn --certfile {{cert.pem}} --keyfile {{key.pem}} {{import.path:app_object}}",
                "Turn on live reload": "gunicorn --reload {{import.path:app_object}}",
                "Use 4 worker processes for handling requests": "gunicorn --workers {{4}} {{import.path:app_object}}",
                "Use 4 worker threads for handling requests": "gunicorn --threads {{4}} {{import.path:app_object}}"
            },
            "Explanation": "Python WSGI HTTP Server.",
            "More Information Link": "https://gunicorn.org/"
        }
    },
    "gunzip": {
        "common": {
            "Examples": {
                "Extract a file from an archive, replacing the original file if it exists": "gunzip {{archive.tar.gz}}",
                "Extract a file to a target destination": "gunzip -c {{archive.tar.gz}} > {{archive.tar}}",
                "List the contents of a compressed file": "gunzip -l {{file.txt.gz}}"
            },
            "Explanation": "Extract file(s) from a gzip (.gz) archive.",
            "More Information Link": ""
        }
    },
    "gzip": {
        "common": {
            "Examples": {
                "Compress a file specifying the output filename": "gzip -c {{file.ext}} > {{compressed_file.ext.gz}}",
                "Compress a file, replacing it with a gzipped compressed version": "gzip {{file.ext}}",
                "Decompress a file, replacing it with the original uncompressed version": "gzip -d {{file.ext}}.gz",
                "Decompress a gzipped file specifying the output filename": "gzip -c -d {{file.ext}}.gz > {{uncompressed_file.ext}}",
                "Specify the compression level. 1=Fastest (Worst), 9=Slowest (Best), Default level is 6": "gzip -9 -c {{file.ext}} > {{compressed_file.ext.gz}}"
            },
            "Explanation": "Compress/uncompress files with gzip compression (LZ77).",
            "More Information Link": ""
        }
    },
    "halt": {
        "linux": {
            "Examples": {
                "Halt the machine": "halt",
                "Power the machine off": "halt --poweroff",
                "Reboot the machine": "halt --reboot"
            },
            "Explanation": "Halt, power-off or reboot the machine.",
            "More Information Link": "https://www.freedesktop.org/software/systemd/man/halt.html"
        }
    },
    "handbrakecli": {
        "common": {
            "Examples": {
                "Convert a video file to MKV (AAC 160kbit audio and x264 CRF20 video)": "handbrakecli -i {{input.avi}} -o {{output.mkv}} -e x264 -q 20 -B 160",
                "Convert an AVI video to MP4 using the Android preset": "handbrakecli --preset=\"Android\" -i {{input.ext}} -o {{output.mp4}}",
                "List available presets": "handbrakecli --preset-list",
                "Resize a video file to 320x240": "handbrakecli -i {{input.mp4}} -o {{output.mp4} -w 320 -l 240"
            },
            "Explanation": "Command-line interface to the HandBrake video conversion tool.",
            "More Information Link": "https://handbrake.fr/"
        }
    },
    "hangups": {
        "common": {
            "Examples": {
                "Set a refresh token for hangups": "hangups --token-path {{/path/to/token}}",
                "Start hangups": "hangups",
                "View troubeshooting information and help": "hangups -h"
            },
            "Explanation": "Third party command line client for Google Hangouts.",
            "More Information Link": "https://github.com/tdryer/hangups"
        }
    },
    "hardinfo": {
        "linux": {
            "Examples": {
                "Print report to standard output": "hardinfo -r",
                "Save report to HTML file": "hardinfo -r -f html > hardinfo.html",
                "Start hardinfo": "hardinfo"
            },
            "Explanation": "Show hardware information in GUI window.",
            "More Information Link": ""
        }
    },
    "haxelib": {
        "common": {
            "Examples": {
                "Install a Haxe library": "haxelib install {{libname}}",
                "Install the development version of a library from a Git repository": "haxelib git {{libname}} {{git_url}}",
                "Search for a Haxe library": "haxelib search {{keyword}}",
                "Upgrade all installed Haxe libraries": "haxelib upgrade"
            },
            "Explanation": "Haxe Library Manager.",
            "More Information Link": "https://lib.haxe.org/"
        }
    },
    "hdiutil": {
        "osx": {
            "Examples": {
                "Create an ISO image from the contents of a directory": "hdiutil makehybrid -o {{path/to/output_file}} {{path/to/directory}}",
                "List mounted images": "hdiutil info",
                "Mount an image": "hdiutil attach {{path/to/image_file}}",
                "Unmount an image": "hdiutil detach /Volumes/{{volume_name}}"
            },
            "Explanation": "Utility to create and manage disk images.",
            "More Information Link": ""
        }
    },
    "hdparm": {
        "linux": {
            "Examples": {
                "Display the device's current power mode status": "sudo hdparm -C /dev/{{device}}",
                "Force a drive to immediately enter standby mode (usually causes a drive to spin down)": "sudo hdparm -y /dev/{{device}}",
                "Get the Advanced Power Management level": "sudo hdparm -B /dev/{{device}}",
                "Put the drive into idle (low-power) mode, also setting its standby timeout": "sudo hdparm -S {{standby_timeout}} {{device}}",
                "Request the identification info of a given device": "sudo hdparm -I /dev/{{device}}",
                "Set the Advanced Power Management value (values 1-127 permit spin-down, and values 128-254 do not)": "sudo hdparm -B {{1}} /dev/{{device}}"
            },
            "Explanation": "Get and set SATA and IDE hard drive parameters.",
            "More Information Link": ""
        }
    },
    "head": {
        "common": {
            "Examples": {
                "Output everything but the last few bytes of a file": "head -c -{{size_in_bytes}} {{filename}}",
                "Output everything but the last few lines of a file": "head -n -{{count_of_lines}} {{filename}}",
                "Output the first few bytes of a file": "head -c {{size_in_bytes}} {{filename}}",
                "Output the first few lines of a file": "head -n {{count_of_lines}} {{filename}}"
            },
            "Explanation": "Output the first part of files.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Output the first few bytes of a file": "head -c {{number_in_bytes}} {{filename}}",
                "Output the first few lines of a file": "head -n {{count_of_lines}} {{filename}}"
            },
            "Explanation": "Output the first part of files.",
            "More Information Link": ""
        }
    },
    "hello": {
        "linux": {
            "Examples": {
                "Print \"Hello, world!\"": "hello",
                "Print \"hello, world\", the traditional type": "hello --traditional",
                "Print a text message": "hello --greeting=\"{{greeting_text}}\""
            },
            "Explanation": "Print \"Hello, world!\", \"hello, world\" or a customizable text.",
            "More Information Link": "https://www.gnu.org/software/hello/"
        }
    },
    "helm": {
        "common": {
            "Examples": {
                "Add a new helm repository": "helm repo add {{repo_name}}",
                "Create a helm chart": "helm create {{chart_name}}",
                "Delete a helm repository": "helm repo remove {{repo_name}}",
                "Download helm chart as a tar archive": "helm get {{chart_release_name}}",
                "Install a helm chart": "helm install {{repo_name}}/{{chart_name}}",
                "List helm repositories": "helm repo list",
                "Update helm dependencies": "helm dependency update",
                "Update helm repositories": "helm repo update"
            },
            "Explanation": "Helm is a package manager for Kubernetes.",
            "More Information Link": "https://helm.sh/"
        }
    },
    "help2man": {
        "common": {
            "Examples": {
                "Display detailed help": "help2man --help",
                "Generate a man page for an executable": "help2man {{executable}}",
                "Output to a file instead of `stdout`": "help2man {{executable}} --output {{path/to/file}}",
                "Specify the \"name\" paragraph in the man page": "help2man {{executable}} --name {{name}}",
                "Specify the section for the man page (defaults to 1)": "help2man {{executable}} --section {{section}}"
            },
            "Explanation": "Produce simple man pages from an executable's `--help` and `--version` output.",
            "More Information Link": "https://www.gnu.org/software/help2man"
        }
    },
    "heroku": {
        "common": {
            "Examples": {
                "Create a heroku app": "heroku create",
                "List dynos (Heroku virtual machines) for an app": "heroku ps --app {{app_name}}",
                "Login to your heroku account": "heroku login",
                "Permanently destroy an app": "heroku destroy --app {{app_name}}",
                "Run a one-off process inside a dyno (Heroku virtual machine)": "heroku run {{process_name}} --app {{app_name}}",
                "Show logs for an app": "heroku logs --app {{app_name}}"
            },
            "Explanation": "Create and manage Heroku apps from the command line.",
            "More Information Link": "https://www.heroku.com/"
        }
    },
    "hexdump": {
        "linux": {
            "Examples": {
                "Display the hexadecimal representation of a file, but interpret only n bytes of the input": "hexdump -C -n{{number_of_bytes}} {{file}}",
                "Display the input offset in hexadecimal and its ASCII representation in two columns": "hexdump -C {{file}}",
                "Print the hexadecimal representation of a file": "hexdump {{file}}"
            },
            "Explanation": "An ASCII, decimal, hexadecimal, octal dump.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Display the hexadecimal representation of a file, but interpret only n bytes of the input": "hexdump -C -n{{number_of_bytes}} {{file}}",
                "Display the input offset in hexadecimal and its ASCII representation in two columns": "hexdump -C {{file}}",
                "Print the hexadecimal representation of a file": "hexdump {{file}}"
            },
            "Explanation": "An ASCII, decimal, hexadecimal, octal dump.",
            "More Information Link": ""
        }
    },
    "hexo": {
        "common": {
            "Examples": {
                "Clean the cache file (`db.json`) and generated files (`public/`)": "hexo clean",
                "Create a new article": "hexo new {{layout}} {{title}}",
                "Deploy the website": "hexo deploy",
                "Generate static files": "hexo generate",
                "Initialize a website": "hexo init {{path/to/directory}}",
                "Start a local server": "hexo server"
            },
            "Explanation": "A fast, simple & powerful blog framework.",
            "More Information Link": "https://hexo.io/"
        }
    },
    "hexyl": {
        "common": {
            "Examples": {
                "Print 512 bytes starting at the 1024th byte": "hexyl -r {{1024}}:+{{512}} {{path/to/file}}",
                "Print bytes 512 through 1024 of a file": "hexyl -r {{512}}:{{1024}} {{path/to/file}}",
                "Print the hexadecimal representation of a file": "hexyl {{path/to/file}}",
                "Print the hexadecimal representation of the first n bytes of a file": "hexyl -n {{n}} {{path/to/file}}"
            },
            "Explanation": "A simple hex viewer for the terminal. Uses colored output to distinguish different categories of bytes.",
            "More Information Link": "https://github.com/sharkdp/hexyl"
        }
    },
    "hg": {
        "common": {
            "Examples": {
                "Call general help": "hg help",
                "Call help on a command": "hg help {{command}}",
                "Check the Mercurial version": "hg --version",
                "Execute Mercurial command": "hg {{command}}"
            },
            "Explanation": "A command line interface for Mercurial, a distributed source control management system.\nSee `hg-add`, `hg-commit` and other pages for additional information.",
            "More Information Link": "https://www.mercurial-scm.org"
        }
    },
    "hg add": {
        "common": {
            "Examples": {
                "Add all unstaged files matching a specified pattern": "hg add --include {{pattern}}",
                "Add all unstaged files, excluding those that match a specified pattern": "hg add --exclude {{pattern}}",
                "Add files or directories to the staging area": "hg add {{path/to/file}}",
                "Perform a test-run without performing any actions": "hg add --dry-run",
                "Recursively add sub-repositories": "hg add --subrepos"
            },
            "Explanation": "Adds specified files to the staging area for the next commit in Mercurial.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#add"
        }
    },
    "hg branch": {
        "common": {
            "Examples": {
                "Create a new branch for the next commit": "hg branch {{branch_name}}",
                "Show the name of the currently active branch": "hg branch"
            },
            "Explanation": "Create or show a branch name.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#branch"
        }
    },
    "hg clone": {
        "common": {
            "Examples": {
                "Clone a repository to a specific revision, tag or branch, keeping the entire history": "hg clone --updaterev {{revision}} {{remote_repository_source}}",
                "Clone a repository to a specified directory": "hg clone {{remote_repository_source}} {{destination_path}}",
                "Clone a repository to the head of a specific branch, ignoring later commits": "hg clone --branch {{branch}} {{remote_repository_source}}",
                "Clone a repository up to a specific revision without any newer history": "hg clone --rev {{revision}} {{remote_repository_source}}",
                "Clone a repository with only the \".hg\" directory, without checking out files": "hg clone --noupdate {{remote_repository_source}}"
            },
            "Explanation": "Create a copy of an existing repository in a new directory.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#clone"
        }
    },
    "hg commit": {
        "common": {
            "Examples": {
                "Commit a specific file or directory": "hg commit {{path/to/file_or_directory}}",
                "Commit all files matching a specified pattern": "hg commit --include {{pattern}}",
                "Commit all files, excluding those that match a specified pattern": "hg commit --exclude {{pattern}}",
                "Commit staged files to the repository": "hg commit",
                "Commit using the interactive mode": "hg commit --interactive",
                "Commit with a specific message": "hg commit --message {{message}}"
            },
            "Explanation": "Commit all staged or specified files to the repository.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#commit"
        }
    },
    "hg init": {
        "common": {
            "Examples": {
                "Initialise a new repository in the current directory": "hg init",
                "Initialise a new repository in the specified directory": "hg init {{path/to/directory}}"
            },
            "Explanation": "Create a new repository in the specified directory.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#init"
        }
    },
    "hg log": {
        "common": {
            "Examples": {
                "Display revisions committed by a specific user": "hg log --user {{user}}",
                "Display the entire revision history of the repository": "hg log",
                "Display the log information for a specific revision": "hg log --rev {{revision}}",
                "Display the revision history for a specific branch": "hg log --branch {{branch}}",
                "Display the revision history for a specific date": "hg log --date {{date}}",
                "Display the revision history with an ASCII graph": "hg log --graph",
                "Display the revision history with file names matching a specified pattern": "hg log --include {{pattern}}",
                "Display the revision history, excluding file names that match a specified pattern": "hg log --exclude {{pattern}}"
            },
            "Explanation": "Display the revision history of the repository.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#log"
        }
    },
    "hg pull": {
        "common": {
            "Examples": {
                "Pull changes even when the remote repository is unrelated": "hg pull --force",
                "Pull from a specified source repository": "hg pull {{path/to/source_repository}}",
                "Pull from the \"default\" source path": "hg pull",
                "Specify a specific bookmark to pull": "hg pull --bookmark {{bookmark}}",
                "Specify a specific branch to pull": "hg pull --branch {{branch}}",
                "Specify a specific revision changeset to pull up to": "hg pull --rev {{revision}}",
                "Update the local repository to the head of the remote": "hg pull --update"
            },
            "Explanation": "Pull changes from a specified repository to the local repository.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#pull"
        }
    },
    "hg push": {
        "common": {
            "Examples": {
                "Push a new branch if it does not exist (disabled by default)": "hg push --new-branch",
                "Push changes to a specified remote repository": "hg push {{path/to/destination_repository}}",
                "Push changes to the \"default\" remote path": "hg push",
                "Specify a specific bookmark to push": "hg push --bookmark {{bookmark}}",
                "Specify a specific branch to push": "hg push --branch {{branch}}",
                "Specify a specific revision changeset to push": "hg push --rev {{revision}}"
            },
            "Explanation": "Push changes from the local repository to a specified destination.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#push"
        }
    },
    "hg remove": {
        "common": {
            "Examples": {
                "Recursively remove sub-repositories": "hg remove --subrepos",
                "Remove all staged files matching a specified pattern": "hg remove --include {{pattern}}",
                "Remove all staged files, excluding those that match a specified pattern": "hg remove --exclude {{pattern}}",
                "Remove files from the repository that have been physically removed": "hg remove --after",
                "Remove files or directories from the staging area": "hg remove {{path/to/file}}"
            },
            "Explanation": "Remove specified files from the staging area.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#remove"
        }
    },
    "hg root": {
        "common": {
            "Examples": {
                "Display the root location of the current repository": "hg root",
                "Display the root location of the specified repository": "hg root --cwd {{path/to/directory}}"
            },
            "Explanation": "Display the root location of a Hg repository.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#root"
        }
    },
    "hg serve": {
        "common": {
            "Examples": {
                "Start a web server instance": "hg serve",
                "Start a web server instance on the specified listening address": "hg serve --address {{address}}",
                "Start a web server instance on the specified port": "hg serve --port {{port}}",
                "Start a web server instance using the specified SSL certificate bundle": "hg serve --certificate {{path/to/certificate}}",
                "Start a web server instance using the specified theme (see the templates directory)": "hg serve --style {{style}}",
                "Start a web server instance with a specific identifier": "hg serve --name {{name}}"
            },
            "Explanation": "Start a standalone Mercurial web server for browsing repositories.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#serve"
        }
    },
    "hg status": {
        "common": {
            "Examples": {
                "Display changes in the working directory compared to a specified changeset": "hg status --rev {{revision}}",
                "Display files, excluding those that match a specified glob pattern": "hg status --exclude {{pattern}}",
                "Display only added files": "hg status --added",
                "Display only deleted (but tracked) files": "hg status --deleted",
                "Display only files matching a specified glob pattern": "hg status --include {{pattern}}",
                "Display only modified files": "hg status --modified",
                "Display only removed files": "hg status --removed",
                "Display the status of changed files": "hg status"
            },
            "Explanation": "Show files that have changed in the working directory.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#status"
        }
    },
    "hg update": {
        "common": {
            "Examples": {
                "Update and discard uncommitted changes": "hg update --clean",
                "Update to the last commit matching a specified date": "hg update --date {{dd-mm-yyyy}}",
                "Update to the specified revision": "hg update --rev {{revision}}",
                "Update to the tip of the current branch": "hg update"
            },
            "Explanation": "Update the working directory to a specified changeset.",
            "More Information Link": "https://www.mercurial-scm.org/doc/hg.1.html#update"
        }
    },
    "history": {
        "common": {
            "Examples": {
                "Clear the commands history list (only for current `bash` shell)": "history -c",
                "Delete the history entry at the specified offset": "history -d {{offset}}",
                "Display the commands history list with line numbers": "history",
                "Display the last 20 commands": "history {{20}}",
                "Overwrite history file with history of current `bash` shell (often combined with `history -c` to purge history)": "history -w"
            },
            "Explanation": "Command Line history.",
            "More Information Link": ""
        }
    },
    "hive": {
        "common": {
            "Examples": {
                "Run HiveQL": "hive -e \"{{hiveql_query}}\"",
                "Run a HiveQL file with a variable substitution": "hive --define {{key}}={{value}} -f {{path/to/file.sql}}",
                "Run a HiveQL with HiveConfig (e.g. `mapred.reduce.tasks=32`)": "hive --hiveconf {{conf_name}}={{conf_value}}",
                "Start a Hive interactive shell": "hive"
            },
            "Explanation": "CLI tool for Apache Hive.",
            "More Information Link": "https://cwiki.apache.org/confluence/display/Hive/LanguageManual+Cli"
        }
    },
    "hlint": {
        "linux": {
            "Examples": {
                "Automatically apply most suggestions": "hlint {{path/to/file}} --refactor",
                "Check all Haskell files and generate a report": "hlint {{path/to/directory}} --report",
                "Display additional options": "hlint {{path/to/file}} --refactor-options",
                "Display suggestions for a given file": "hlint {{path/to/file}} options",
                "Generate a settings file ignoring all outstanding hints": "hlint {{path/to/file}} --default > {{.hlint.yaml}}"
            },
            "Explanation": "Tool for suggesting improvements to Haskell code.",
            "More Information Link": "http://hackage.haskell.org/package/hlint"
        }
    },
    "hn": {
        "common": {
            "Examples": {
                "View _number_ of stories on Hacker News": "hn --limit {{number}}",
                "View stories on Hacker News": "hn",
                "View stories on Hacker News sorted by submission date": "hn --latest",
                "View stories on Hacker News, and keep the list open after selecting a link": "hn --keep-open"
            },
            "Explanation": "Command-line interface for Hacker News.",
            "More Information Link": "https://github.com/rafaelrinaldi/hn-cli"
        }
    },
    "home-manager": {
        "common": {
            "Examples": {
                "Activate the configuration and switch to it": "home-manager switch",
                "Activate the configuration defined in `~/.config/nixpkgs/home.nix`": "home-manager build"
            },
            "Explanation": "Manage a user environment using Nix.",
            "More Information Link": "https://github.com/rycee/home-manager"
        }
    },
    "host": {
        "common": {
            "Examples": {
                "Lookup A, AAAA, and MX records of a domain": "host {{domain}}",
                "Lookup a field (CNAME, TXT,...) of a domain": "host -t {{field}} {{domain}}",
                "Reverse lookup an IP": "host {{ip_address}}",
                "Specify an alternate DNS server to query": "host {{domain}} {{8.8.8.8}}"
            },
            "Explanation": "Lookup Domain Name Server.",
            "More Information Link": ""
        }
    },
    "hostapd": {
        "common": {
            "Examples": {
                "Start an access point": "sudo hostapd {{path/to/hostapd.conf}}",
                "Start an access point, forking into the background": "sudo hostapd -B {{path/to/hostapd.conf}}"
            },
            "Explanation": "Start an access point using a wireless interface.",
            "More Information Link": "https://w1.fi/hostapd/"
        }
    },
    "hostess": {
        "common": {
            "Examples": {
                "Add a domain pointing to your machine to your hosts file": "hostess add {{local.example.com}} {{127.0.0.1}}",
                "Disable a domain (but don't remove it completely)": "hostess off {{local.example.com}}",
                "List domains, target ips and on/off status": "hostess list",
                "Remove a domain from your hosts file": "hostess del {{local.example.com}}"
            },
            "Explanation": "An idempotent command-line utility for managing your /etc/hosts file.",
            "More Information Link": "https://github.com/cbednarski/hostess"
        }
    },
    "hostid": {
        "common": {
            "Examples": {
                "Display the numeric identifier for the current host in hexadecimal": "hostid"
            },
            "Explanation": "Prints the numeric identifier for the current host (not necessarily the IP address).",
            "More Information Link": ""
        }
    },
    "hostname": {
        "linux": {
            "Examples": {
                "Set current host name": "hostname {{new_hostname}}",
                "Show all network addresses of the host": "hostname -I",
                "Show current host name": "hostname",
                "Show the FQDN (Fully Qualified Domain Name)": "hostname --fqdn",
                "Show the network address of the host name": "hostname -i"
            },
            "Explanation": "Show or set the system's host name.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Set current host name": "hostname {{new_hostname}}",
                "Show current host name": "hostname"
            },
            "Explanation": "Show or set the system's host name.",
            "More Information Link": ""
        }
    },
    "hostnamectl": {
        "linux": {
            "Examples": {
                "Get the hostname of the computer": "hostnamectl",
                "Set the hostname of the computer": "sudo hostnamectl set-hostname \"{{some_hostname}}\""
            },
            "Explanation": "Get or set the hostname of the computer.",
            "More Information Link": ""
        }
    },
    "hping": {
        "common": {
            "Examples": {
                "Perform a charge test on port 80": "hping3 --flood -p {{80}} -S {{192.168.1.1}}",
                "Ping an IP address over TCP on a specific port": "hping3 -p {{80}} -S {{192.168.1.1}}",
                "Ping an IP address over UDP on port 80": "hping3 --udp -p {{80}} -S {{192.168.1.1}}",
                "Ping localhost over TCP": "hping3 {{localhost}}",
                "Scan a set of TCP ports on a specific IP address": "hping3 --scan {{80,3000,9000}} -S {{192.168.1.1}}"
            },
            "Explanation": "Command-line oriented TCP/IP packet assembler and analyzer.\nInspired by the `ping` command.",
            "More Information Link": "http://www.hping.org"
        }
    },
    "hr": {
        "common": {
            "Examples": {
                "Print a horizontal rule": "hr",
                "Print a horizontal rule with a custom string": "hr {{string}}",
                "Print a multiline horizontal rule": "hr {{string_a}} {{string_b}} {{string_c}}"
            },
            "Explanation": "Print a horizontal rule in the terminal.",
            "More Information Link": ""
        }
    },
    "hsd-cli": {
        "common": {
            "Examples": {
                "Broadcast a local transaction": "hsd-cli broadcast {{transaction_hex}}",
                "Execute an RPC command": "hsd-cli rpc {{command}} {{args}}",
                "Reset the chain to the specified block": "hsd-cli reset {{height_or_hash}}",
                "Retrieve a mempool snapshot": "hsd-cli mempool",
                "Retrieve information about the current server": "hsd-cli info",
                "View a block by height or hash": "hsd-cli block {{height_or_hash}}",
                "View a coin by its hash index or address": "hsd-cli coin {{hash_index_or_address}}",
                "View a transaction by address or hash": "hsd-cli tx {{address_or_hash}}"
            },
            "Explanation": "The command line REST tool for the Handshake blockchain.",
            "More Information Link": "https://handshake.org"
        }
    },
    "hsw-cli": {
        "common": {
            "Examples": {
                "Lock the current wallet": "hsw-cli lock",
                "Send a transaction with the specified coin amount to an address": "hsw-cli send {{address}} {{1.05}}",
                "Unlock the current wallet (timeout in seconds)": "hsw-cli unlock {{passphrase}} {{timeout}}",
                "View details about a transaction": "hsw-cli tx {{transaction_hash}}",
                "View the current wallet's balance": "hsw-cli balance",
                "View the current wallet's details": "hsw-cli get",
                "View the current wallet's pending transactions": "hsw-cli pending",
                "View the current wallet's transaction history": "hsw-cli history"
            },
            "Explanation": "The command line REST tool for the Handshake wallet.",
            "More Information Link": "https://npmjs.com/package/hs-client"
        }
    },
    "html5validator": {
        "common": {
            "Examples": {
                "Ignore specific directory names": "html5validator --root {{path/to/directory}} --blacklist \"{{node_modules vendor}}\"",
                "Match multiple files using a glob pattern": "html5validator --root {{path/to/directory}} --match \"{{*.html *.php}}\"",
                "Output the log at a specific verbosity level": "html5validator --root {{path/to/directory}} --log {{debug|info|warning}}",
                "Output the results in a specific format": "html5validator --format {{gnu|xml|json|text}} {{path/to/file}}",
                "Show warnings as well as errors": "html5validator --show-warnings {{path/to/file}}",
                "Validate a specific file": "html5validator {{path/to/file}}",
                "Validate all HTML files in a specific directory": "html5validator --root {{path/to/directory}}"
            },
            "Explanation": "A command line tool for testing HTML5 validity.",
            "More Information Link": "https://github.com/svenkreiss/html5validator"
        }
    },
    "htop": {
        "linux": {
            "Examples": {
                "Get help about interactive commands": "?",
                "Sort processes by a column (use `--sort-key help` for a column list)": "htop -s {{column_name}}",
                "Start htop": "htop",
                "Start htop displaying only processes owned by given user": "htop -u {{username}}"
            },
            "Explanation": "Display dynamic real-time information about running processes. An enhanced version of `top`.",
            "More Information Link": ""
        }
    },
    "htpasswd": {
        "common": {
            "Examples": {
                "Add user to htpasswd file in batch mode without an interactive password prompt (for script usage)": "htpasswd -b {{path/to/file}} {{username}} {{password}}",
                "Add user to htpasswd file or update existing user": "htpasswd {{path/to/file}} {{username}}",
                "Create/overwrite htpasswd file": "htpasswd -c {{path/to/file}} {{username}}",
                "Delete user from htpasswd file": "htpasswd -D {{path/to/file}} {{username}}",
                "Display a string with username (plain text) and password (md5)": "htpasswd -nbm {{username}} {{password}}",
                "Verify user password": "htpasswd -v {{path/to/file}} {{username}}"
            },
            "Explanation": "Create and manage htpasswd files to protect web server directories using basic authentication.",
            "More Information Link": "https://httpd.apache.org/docs/current/programs/htpasswd.html"
        }
    },
    "htpdate": {
        "linux": {
            "Examples": {
                "Compensate the systematisch clock drift": "sudo htpdate -x {{host}}",
                "Perform simulation of syncronization, without any action": "htpdate -q {{host}}",
                "Set time immediate after the syncronization": "sudo htpdate -s {{host}}",
                "Synchronize date and time": "sudo htpdate {{host}}"
            },
            "Explanation": "Synchronize local date and time via HTTP headers from web servers.",
            "More Information Link": "http://www.vervest.org/htp/"
        }
    },
    "http": {
        "common": {
            "Examples": {
                "Download a URL to a file": "http -d {{example.org}}",
                "Include an extra header": "http {{example.org}} {{X-MyHeader:123}}",
                "Pass a user name and password for server authentication": "http -a {{username:password}} {{example.org}}",
                "Send JSON object": "http {{example.org}} {{name='bob'}}",
                "Send form-encoded data": "http -f {{example.org}} {{name='bob'}} {{profile_picture@'bob.png'}}",
                "Specify an HTTP method": "http {{HEAD}} {{example.org}}",
                "Specify raw request body via `stdin`": "cat {{data.txt}} | http PUT {{example.org}}"
            },
            "Explanation": "HTTPie: HTTP client, aims to be easier to use than cURL.",
            "More Information Link": "https://httpie.org"
        }
    },
    "http-prompt": {
        "linux": {
            "Examples": {
                "Launch a session targeting the default url of http://localhost:8000 or the previous session": "http-prompt",
                "Launch a session with a given url": "http-prompt {{http://example.com}}",
                "Launch a session with some initial options": "http-prompt {{localhost:8000/api}} --auth {{username:password}}"
            },
            "Explanation": "An interactive command-line HTTP client featuring autocomplete and syntax highlighting.",
            "More Information Link": ""
        }
    },
    "http_load": {
        "linux": {
            "Examples": {
                "Emulate 1000 requests at 20 requests per second, based on a given URL list file": "http_load -rate {{20}} -fetches {{1000}} {{path/to/urls.txt}}",
                "Emulate 1000 requests at 5 concurrent requests at a time, based on a given URL list file": "http_load -parallel {{5}} -fetches {{1000}} {{path/to/urls.txt}}",
                "Emulate 20 requests based on a given URL list file per second for 60 seconds": "http_load -rate {{20}} -seconds {{60}} {{path/to/urls.txt}}",
                "Emulate 5 concurrent requests based on a given URL list file for 60 seconds": "http_load -parallel {{5}} -seconds {{60}} {{path/to/urls.txt}}"
            },
            "Explanation": "A HTTP benchmarking tool.\nRuns multiple HTTP fetches in parallel to test the throughput of a web server.",
            "More Information Link": "http://www.acme.com/software/http_load/"
        }
    },
    "httpflow": {
        "common": {
            "Examples": {
                "Capture traffic on all interfaces": "httpflow -i {{any}}",
                "Read packets from pcap format binary file": "httpflow -r {{out.cap}}",
                "Use a bpf-style capture to filter the results": "httpflow {{host httpbin.org or host baidu.com}}",
                "Use a regexp to filter requests by urls": "httpflow -u '{{regex}}'",
                "Write the output to a directory": "httpflow -w {{path/to/directory}}"
            },
            "Explanation": "A command line utility to capture and dump HTTP streams.",
            "More Information Link": "https://github.com/six-ddc/httpflow"
        }
    },
    "httpie": {
        "linux": {
            "Examples": {
                "Download a file": "http --download {{https://example.com}}",
                "Send a DELETE request with a given request header": "http DELETE {{https://example.com/todos/7}} {{API-Key:foo}}",
                "Send a GET request (default method with no request data)": "http {{https://example.com}}",
                "Send a POST request (default method with request data)": "http {{https://example.com}} {{hello=World}}",
                "Send a POST request with redirected input": "http {{https://example.com}} < {{file.json}}",
                "Send a PUT request with a given json body": "http PUT {{https://example.com/todos/7}} {{hello=world}}",
                "Show the whole HTTP exchange (both request and response)": "http -v {{https://example.com}}"
            },
            "Explanation": "A user friendly command line HTTP tool.",
            "More Information Link": ""
        }
    },
    "httping": {
        "common": {
            "Examples": {
                "Ping the specified url": "httping -g {{url}}",
                "Ping the web server on `host` and `port`": "httping -h {{host}} -p {{port}}",
                "Ping the web server on `host` using HTTP basic authentication": "httping -g http://{{host}} -U {{username}} -P {{password}}",
                "Ping the web server on `host` using a TLS connection": "httping -l -g https://{{host}}"
            },
            "Explanation": "Measure the latency and throughput of a web server.",
            "More Information Link": "https://www.vanheusden.com/httping"
        }
    },
    "httpry": {
        "common": {
            "Examples": {
                "Filter output by a comma-separated list of HTTP verbs": "httpry -m {{get|post|put|head|options|delete|trace|connect|patch}}",
                "Listen on a specific interface and save output to a binary pcap format file": "httpry {{eth0}} -b {{path/to/file.pcap}}",
                "Read from an input capture file and filter by IP": "httpry -r {{path/to/file.log}} '{{host 192.168.5.25}}'",
                "Run as daemon process": "httpry -d -o {{path/to/file.log}}",
                "Save output to a file": "httpry -o {{path/to/file.log}}"
            },
            "Explanation": "A lightweight packet sniffer for displaying and logging HTTP traffic.\nIt can be run in real-time displaying the traffic as it is parsed, or as a daemon process that logs to an output file.",
            "More Information Link": "http://dumpsterventures.com/jason/httpry/"
        }
    },
    "hub": {
        "common": {
            "Examples": {
                "Clone a repository you own, using just the repository name rather than the full URL": "hub clone {{repo_name}}",
                "Clone another user's repository, using their github username and the repository name": "hub clone {{username}}/{{repo_name}}",
                "Create a PR of the current (already pushed) branch, reusing the message from the first commit": "hub pull-request --no-edit",
                "Create a fork of the current repository (cloned from another user) under your github profile": "hub fork",
                "Create a new branch with the contents of a pull request and switch to it": "hub pr checkout {{pr_number}}",
                "Push the current local branch to github and create a PR for it in the original repository": "hub push {{remote_name}} && hub pull-request",
                "Upload the current (local-only) repository to your github account": "hub create"
            },
            "Explanation": "A wrapper for git that adds commands for working with GitHub-based projects.\nIf set up as instructed by `hub alias`, one can use `git` to run `hub` commands.",
            "More Information Link": "https://hub.github.com"
        }
    },
    "hugo": {
        "common": {
            "Examples": {
                "Build a site including pages that are marked as a \"draft\"": "hugo --buildDrafts",
                "Build a site to a given directory": "hugo --destination {{path/to/destination}}",
                "Build a site to the `./public/` directory": "hugo",
                "Build a site, start up a webserver to serve it, and automatically reload when pages are edited": "hugo server",
                "Create a new Hugo site": "hugo new site {{path/to/site}}",
                "Create a new Hugo theme (themes may also be downloaded from https://themes.gohugo.io/)": "hugo new theme {{theme_name}}",
                "Create a new page": "hugo new {{section_name}}/{{filename}}"
            },
            "Explanation": "Template-based static site generator. Uses modules, components, and themes.",
            "More Information Link": "https://gohugo.io"
        }
    },
    "hunspell": {
        "common": {
            "Examples": {
                "Check the spelling of a file": "hunspell {{path/to/file}}",
                "Check the spelling of a file with the en_US dictionary": "hunspell -d {{en_US}} {{path/to/file}}",
                "List misspelled words in a file": "hunspell -l {{path/to/file}}"
            },
            "Explanation": "Check spelling.",
            "More Information Link": "https://hunspell.github.io/"
        }
    },
    "hwclock": {
        "linux": {
            "Examples": {
                "Display the current time as reported by the hardware clock": "hwclock",
                "Write the current hardware clock time to the software clock": "hwclock --hctosys",
                "Write the current software clock time to the hardware clock (sometimes used during system setup)": "hwclock --systohc"
            },
            "Explanation": "Used for reading or changing the hardware clock. Usually requires root.",
            "More Information Link": ""
        }
    },
    "hydra": {
        "common": {
            "Examples": {
                "Guess FTP credentials using usernames and passwords lists, specifying the number of threads": "hydra -L {{path/to/usernames.txt}} -P {{path/to/wordlist.txt}} -t {{n_tasks}} {{host_ip}} {{ftp}}",
                "Guess IMAP credentials on a range of hosts using a list of colon-separated username/password pairs": "hydra -C {{path/to/username_password_pairs.txt}} {{imap://[host_range_cidr]}}",
                "Guess MySQL credentials using a username and a passwords list, exiting when a username/password pair is found": "hydra -l {{username}} -P {{path/to/wordlist.txt}} -f {{host_ip}} {{mysql}}",
                "Guess POP3 credentials on a list of hosts using usernames and passwords lists, exiting when a username/password pair is found": "hydra -L {{path/to/usernames.txt}} -P {{path/to/wordlist.txt}} -M {{path/to/hosts.txt}} -F {{pop3}}",
                "Guess RDP credentials using a username and a passwords list, showing each attempt": "hydra -l {{username}} -P {{path/to/wordlist.txt}} -V {{rdp://host_ip}}",
                "Guess SSH credentials using a given username and a list of passwords": "hydra -l {{username}} -P {{path/to/wordlist.txt}} {{host_ip}} {{ssh}}",
                "Guess Telnet credentials using a list of usernames and a single password, specifying a non-standard port and IPv6": "hydra -L {{path/to/usernames.txt}} -p {{password}} -s {{port}} -6 {{host_ip}} {{telnet}}",
                "Start Hydra's wizard": "hydra-wizard"
            },
            "Explanation": "Online password guessing tool.\nProtocols supported include FTP, HTTP(S), SMTP, SNMP, XMPP, SSH, and more.",
            "More Information Link": "https://github.com/vanhauser-thc/thc-hydra"
        }
    },
    "hyperfine": {
        "common": {
            "Examples": {
                "Change minimum number of benchmarking runs": "hyperfine --min-runs {{7}} '{{make}}'",
                "Perform benchmark with warmup": "hyperfine --warmup {{5}} '{{make}}'",
                "Run a basic benchmark, performing at least 10 runs": "hyperfine '{{make}}'",
                "Run a benchmark where a single parameter changes for each run": "hyperfine --prepare '{{make clean}}' --parameter-scan {{num_threads}} {{1}} {{10}} '{{make -j {num_threads}}}'",
                "Run a command before each benchmark run (to clear caches, etc.)": "hyperfine --prepare '{{make clean}}' '{{make}}'",
                "Run a comparative benchmark": "hyperfine '{{make target1}}' '{{make target2}}'"
            },
            "Explanation": "A command-line benchmarking tool.",
            "More Information Link": "https://github.com/sharkdp/hyperfine/"
        }
    },
    "i3lock": {
        "linux": {
            "Examples": {
                "Disable the unlock indicator (removes feedback on keypress)": "i3lock -u",
                "Display mouse pointer instead of hiding it ('default' for default pointer, 'win' for a MS Windows pointer)": "i3lock -p {{default|win}}",
                "Lock screen to a PNG background": "i3lock -i {{path/to/picture.png}}",
                "Lock screen to a PNG background displayed in multiple monitors, with enabled mouse pointer": "i3lock -i {{path/to/picture.png}} -p {{default|win}} -t",
                "Lock screen with a simple color background (rrggbb format)": "i3lock -c {{0000ff}}"
            },
            "Explanation": "Simple screen locker built for the i3 window manager.",
            "More Information Link": "https://i3wm.org/i3lock"
        }
    },
    "i7z": {
        "linux": {
            "Examples": {
                "Start i7z (needs to be run in super user mode)": "sudo i7z"
            },
            "Explanation": "An Intel CPU (only i3, i5 and i7) realtime reporting tool.",
            "More Information Link": ""
        }
    },
    "icalBuddy": {
        "osx": {
            "Examples": {
                "Show a formated list separated by calendar for all events today": "icalBuddy -f -sc eventsToday",
                "Show events in a time range": "icalBuddy eventsFrom:'{{start date}}' to:'{{end date}}'",
                "Show events later today": "icalBuddy -n eventsToday",
                "Show tasks for a specified number of days": "icalBuddy -n tasksDueBefore:today+{{days}}",
                "Show uncompleted tasks": "icalBuddy uncompletedTasks"
            },
            "Explanation": "Command-line utility for printing events and tasks from the macOS calendar database.",
            "More Information Link": "https://hasseg.org/icalBuddy/"
        }
    },
    "iconv": {
        "common": {
            "Examples": {
                "Convert file to a specific encoding, and print to `stdout`": "iconv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}",
                "Convert file to the current locale's encoding, and output to a file": "iconv -f {{from_encoding}} {{input_file}} > {{output_file}}",
                "List supported encodings": "iconv -l"
            },
            "Explanation": "Converts text from one encoding to another.",
            "More Information Link": ""
        }
    },
    "id": {
        "common": {
            "Examples": {
                "Display an arbitrary user's id (UID), group id (GID) and groups to which they belong": "id {{username}}",
                "Display current user's id (UID), group id (GID) and groups to which they belong": "id",
                "Display the current group identity as a number": "id -g",
                "Display the current user identity as a number": "id -u"
            },
            "Explanation": "Display current user and group identity.",
            "More Information Link": ""
        }
    },
    "id3tag": {
        "common": {
            "Examples": {
                "Get more help": "id3tag --help",
                "Set album title of all MP3 files in the current directory": "id3tag --album={{album}} {{*.mp3}}",
                "Set artist and title tag of an MP3 file": "id3tag --artist={{artist}} --title={{title}} {{path/to/file.mp3}}"
            },
            "Explanation": "Tool for reading, writing, and manipulating ID3v1 and ID3v2 tags of MP3 files.",
            "More Information Link": ""
        }
    },
    "identify": {
        "common": {
            "Examples": {
                "Collect dimensions of all jpeg files under current directory": "identify -format \"%f,%w,%h\\n\" *.{{jpg}} > {{filelist.csv}}"
            },
            "Explanation": "Command line utility of Image Magick project to describe the format and characteristics of one or more image files.",
            "More Information Link": "https://imagemagick.org/script/identify.php"
        }
    },
    "iex": {
        "common": {
            "Examples": {
                "Start a session that remembers history": "iex --erl \"-kernel shell_history enabled\"",
                "Start an interactive session": "iex",
                "Start and load Mix project files": "iex -S mix"
            },
            "Explanation": "IEx is the interactive shell for Elixir.",
            "More Information Link": "https://hexdocs.pm/iex"
        }
    },
    "if": {
        "common": {
            "Examples": {
                "Echo a different thing depending on a command's success": "{{command}} && echo \"success\" || echo \"failure\"",
                "Full if syntax": "if {{condition}}; then echo \"true\"; else echo \"false\"; fi",
                "If directory not exists": "if [[ ! -d {{path/to/directory}} ]]; then echo \"true\"; else echo \"false\"; fi",
                "List available if conditions": "help test",
                "Test if a file exists": "if [[ -e {{filename}} ]]; then echo \"true\"; else echo \"false\"; fi",
                "Test if a given variable is empty": "if [[ -z $GIT_BRANCH ]]; then echo \"true\"; else echo \"false\"; fi"
            },
            "Explanation": "Simple shell conditional.",
            "More Information Link": ""
        }
    },
    "ifconfig": {
        "common": {
            "Examples": {
                "Assign IP address to eth0 interface": "ifconfig eth0 {{ip_address}}",
                "Disable eth0 interface": "ifconfig eth0 down",
                "Display details of all interfaces, including disabled interfaces": "ifconfig -a",
                "Enable eth0 interface": "ifconfig eth0 up",
                "View network settings of an ethernet adapter": "ifconfig eth0"
            },
            "Explanation": "Network Interface Configurator.",
            "More Information Link": ""
        }
    },
    "ifdown": {
        "linux": {
            "Examples": {
                "Disable all interfaces which are enabled": "ifdown -a",
                "Disable interface eth0": "ifdown {{eth0}}"
            },
            "Explanation": "Disable network interfaces.",
            "More Information Link": ""
        }
    },
    "iftop": {
        "linux": {
            "Examples": {
                "Do not look up hostnames": "sudo iftop -n",
                "Do not show bar graphs of traffic": "sudo iftop -b",
                "Get help about interactive commands": "?",
                "Show the bandwidth usage": "sudo iftop",
                "Show the bandwidth usage of a given interface": "sudo iftop -i {{interface}}",
                "Show the bandwidth usage with port information": "sudo iftop -P"
            },
            "Explanation": "Show bandwidth usage on an interface by host.",
            "More Information Link": "https://linux.die.net/man/8/iftop"
        }
    },
    "ifup": {
        "linux": {
            "Examples": {
                "Enable all the interfaces defined with \"auto\" in /etc/network/interfaces": "ifup -a",
                "Enable interface eth0": "ifup {{eth0}}"
            },
            "Explanation": "Tool used to enable network interfaces.",
            "More Information Link": ""
        }
    },
    "ignite": {
        "common": {
            "Examples": {
                "Add an Ignite plugin to the project": "ignite add {{plugin_name}}",
                "Create a new React Native project": "ignite new {{project_name}}",
                "Generate file from a plugin": "ignite generate {{plugin_name}} {{filename}}",
                "Remove an Ignite plugin from the project": "ignite remove {{plugin_name}}"
            },
            "Explanation": "A CLI for React Native boilerplates, plugins, generators, and more.",
            "More Information Link": "https://infinite.red/ignite"
        }
    },
    "imapsync": {
        "common": {
            "Examples": {
                "Synchronize imap account between host1 and host2": "imapsync --host1 {{host1}} --user1 {{user1}} --password1 {{secret1}} --host2 {{host2}} --user2 {{user2}} --password2 {{secret2}}"
            },
            "Explanation": "Email IMAP tool for syncing, copying and migrating email mailboxes between two imap servers, one way, and without duplicates.",
            "More Information Link": "https://imapsync.lamiral.info"
        }
    },
    "imgcat": {
        "osx": {
            "Examples": {
                "Display an image on the command line": "imgcat {{filename}}"
            },
            "Explanation": "A utility to display images directly on the command line.\nRequires a compatible terminal such as iTerm2.",
            "More Information Link": ""
        }
    },
    "imgp": {
        "linux": {
            "Examples": {
                "Convert single images and/or whole directories containing valid image formats": "imgp -x {{1366x1000}} {{path/to/dir}} {{path/to/file}}",
                "Rotate an image clockwise by 90 degrees": "imgp -o {{90}} {{path/to/file}}",
                "Scale an image by 75% and overwrite the source image to a target resolution": "imgp -x {{75}} -w {{path/to/file}}"
            },
            "Explanation": "Command line image resizer and rotator for JPEG and PNG images.",
            "More Information Link": ""
        }
    },
    "import": {
        "common": {
            "Examples": {
                "Capture a specific window, given its ID as displayed by `xwininfo`, into the JPEG format": "import -window {{window_id}} {{output.jpg}}",
                "Capture contents of a remote X server screen in the PNG image format": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
                "Capture the entire X server screen in the PostScript image format": "import -window root {{output.postscript}}"
            },
            "Explanation": "Capture some or all of an X server screen, and save the image to a file.\nPart of the ImageMagick library.",
            "More Information Link": ""
        }
    },
    "in2csv": {
        "common": {
            "Examples": {
                "Convert a DBF file to a CSV file": "in2csv {{data.dbf}} > {{data.csv}}",
                "Convert a specific sheet from an XLSX file to CSV": "in2csv --sheet={{sheet_name}} {{data.xlsx}}",
                "Convert an XLS file to CSV": "in2csv {{data.xls}}",
                "Pipe a JSON file to in2csv": "cat {{data.json}} | in2csv -f json > {{data.csv}}"
            },
            "Explanation": "Converts various tabular data formats into CSV.\nIncluded in csvkit.",
            "More Information Link": "https://csvkit.readthedocs.io/en/latest/scripts/in2csv.html"
        }
    },
    "indent": {
        "common": {
            "Examples": {
                "Format C/C++ source according to the GNU style, saving the indented version to a different file": "indent --gnu-style {{path/to/source.c}} -o {{path/to/indented_source.c}}",
                "Format C/C++ source according to the Linux style guide, automatically back up the original files, and replace with the indented versions": "indent --linux-style {{path/to/source.c}} {{path/to/another_source.c}}",
                "Format C/C++ source according to the style of Kernigan & Ritchie (K&R), no tabs, 3 spaces per indent, and wrap lines at 120 characters": "indent --k-and-r-style --indent-level3 --no-tabs --line-length120  {{path/to/source.c}} -o {{path/to/indented_source.c}}"
            },
            "Explanation": "Change the appearance of a C/C++ program by inserting or deleting whitespace.",
            "More Information Link": "https://www.gnu.org/software/indent/"
        },
        "osx": {
            "Examples": {
                "Format C/C++ source according to the Berkeley style": "indent {{path/to/source.c}} {{path/to/indented_source.c}} -nbad -nbap -bc -br -c33 -cd33 -cdb -ce -ci4 -cli0 -di16 -fc1 -fcb -i4 -ip -l75 -lp -npcs -nprs -psl -sc -nsob -ts8",
                "Format C/C++ source according to the style of Kernigan & Ritchie (K&R)": "indent {{path/to/source.c}} {{path/to/indented_source.c}} -nbad -bap -nbc -br -c33 -cd33 -ncdb -ce -ci4 -cli0 -cs -d0 -di1 -nfc1 -nfcb -i4 -nip -l75 -lp -npcs -nprs -npsl -nsc -nsob"
            },
            "Explanation": "Change the appearance of a C/C++ program by inserting or deleting whitespace.",
            "More Information Link": "https://www.freebsd.org/cgi/man.cgi?query=indent"
        }
    },
    "infection": {
        "common": {
            "Examples": {
                "Analyse code using the configuration file (or create one if it does not exist)": "infection",
                "Display the mutation code that has been applied": "infection --show-mutations",
                "Only mutate lines of code that are covered by tests": "infection --only-covered",
                "Specify a minimum Mutation Score Indicator (MSI)": "infection --min-msi {{percentage}}",
                "Specify a minimum covered code MSI": "infection --min-covered-msi {{percentage}}",
                "Specify the log verbosity": "infection --log-verbosity {{default|all|none}}",
                "Use a specific number of threads": "infection --threads {{number_of_threads}}",
                "Use a specific test framework (defaults to phpunit)": "infection --test-framework {{phpunit|phpspec}}"
            },
            "Explanation": "A mutation testing framework for PHP.",
            "More Information Link": "https://infection.github.io"
        }
    },
    "influx": {
        "common": {
            "Examples": {
                "Connect to a specific host": "influx -host {{hostname}}",
                "Connect to an InfluxDB running on localhost with no credentials": "influx",
                "Connect with a specific username (will prompt for a password)": "influx -username {{username}} -password \"\"",
                "Execute a given command": "influx -execute \"{{influxql_command}}\"",
                "Return output in a specific format": "influx -execute \"{{influxql_command}}\" -format {{json|csv|column}}",
                "Use a specific database": "influx -database {{database_name}}"
            },
            "Explanation": "InfluxDB command-line client.",
            "More Information Link": "https://docs.influxdata.com/influxdb/v1.7/tools/shell/"
        }
    },
    "info": {
        "common": {
            "Examples": {
                "Start reading at given menu item node from top-level directory": "info {{menu_item}}",
                "Start reading at second menu item within first menu item manual": "info {{first_menu_item}} {{second_menu_item}}",
                "Start reading top-level directory menu": "info"
            },
            "Explanation": "Reads documentation stored in the info format.",
            "More Information Link": "https://en.wikipedia.org/wiki/Info_(Unix)"
        }
    },
    "initdb": {
        "common": {
            "Examples": {
                "Create a database at /usr/local/var/postgres": "initdb -D /usr/local/var/postgres"
            },
            "Explanation": "Create a PostgreSQL database on disk.",
            "More Information Link": "https://www.postgresql.org/docs/9.5/app-initdb.html"
        }
    },
    "inkscape": {
        "common": {
            "Examples": {
                "Duplicate the object with id=\"path123\", rotate the duplicate 90 degrees, save the file, and quit Inkscape": "inkscape {{filename.svg}} --select=path123 --verb=\"{{EditDuplicate;ObjectRotate90;FileSave;FileQuit}}\"",
                "Export a single object, given its ID, into a bitmap": "inkscape {{filename.svg}} -i {{id}} -o {{object.png}}",
                "Export an SVG document to PDF, converting all texts to paths": "inkscape {{filename.svg}} -o {{filename.pdf}} --export-text-to-path",
                "Export an SVG file into a bitmap of 600x400 pixels (aspect ratio distortion may occur)": "inkscape {{filename.svg}} -o {{filename.png}} -w {{600}} -h {{400}}",
                "Export an SVG file into a bitmap with the default format (PNG) and the default resolution (96 DPI)": "inkscape {{filename.svg}} -o {{filename.png}}",
                "Export the drawing (bounding box of all objects) of an SVG file into a bitmap": "inkscape {{filename.svg}} -o {{filename.png}} -D",
                "Open an SVG file in the Inkscape GUI": "inkscape {{filename.svg}}"
            },
            "Explanation": "An SVG (Scalable Vector Graphics) editing program.\nFor Inkscape versions up to 0.92.x, use -e instead of -o.",
            "More Information Link": "https://inkscape.org"
        }
    },
    "inkview": {
        "common": {
            "Examples": {
                "Preview an SVG": "inkview {{path/to/file.svg}}",
                "Preview multiple SVGs (use arrow keys to navigate)": "inkview {{path/to/file_a.svg}} {{path/to/file_b.svg}} {{path/to/file_c.svg}}"
            },
            "Explanation": "Inkscape graphical SVG previewer.\nAlso functions as a slideshow viewer.",
            "More Information Link": "http://wiki.inkscape.org/wiki/index.php/Inkview"
        }
    },
    "inotifywait": {
        "linux": {
            "Examples": {
                "Be quiet about watching for changes": "while inotifywait --quiet {{path/to/file}}; do {{command}}; done",
                "Exclude files matching a regular expression": "while inotifywait --recursive {{path/to/directory}} --exlude '{{regex}}'; do {{command}}; done",
                "Only watch for file modification events": "while inotifywait --event {{modify}} {{path/to/file}}; do {{command}}; done",
                "Run a command when a file changes": "while inotifywait {{path/to/file}}; do {{command}}; done",
                "Wait at most 30 seconds": "while inotifywait --timeout {{30}} {{path/to/file}}; do {{command}}; done",
                "Watch a directory recursively for changes": "while inotifywait --recursive {{path/to/directory}}; do {{command}}; done"
            },
            "Explanation": "Waits for changes to one or more files.",
            "More Information Link": ""
        }
    },
    "install": {
        "common": {
            "Examples": {
                "Copy files and apply access/modification times of source to destination": "install -p {{path/to/source}} {{path/to/destination}}",
                "Copy files to destination": "install {{path/to/source}} {{path/to/destination}}",
                "Copy files to destination, setting their `mode`": "install -m {{+x}} {{path/to/source}} {{path/to/destination}}",
                "Copy files to destination, setting their group ownership": "install -g {{user}} {{path/to/source}} {{path/to/destination}}",
                "Copy files to destination, setting their ownership": "install -o {{user}} {{path/to/source}} {{path/to/destination}}"
            },
            "Explanation": "Copy files and set attributes.\nCopy files (often executable) to a system location like `/usr/local/bin`, give them the appropriate permissions/ownership.",
            "More Information Link": ""
        }
    },
    "interdiff": {
        "common": {
            "Examples": {
                "Compare diff files": "interdiff {{old_file}} {{new_file}}",
                "Compare diff files, ignoring whitespace": "interdiff -w {{old_file}} {{new_file}}"
            },
            "Explanation": "Show differences between two diff files.",
            "More Information Link": "http://freshmeat.sourceforge.net/projects/patchutils"
        }
    },
    "inxi": {
        "linux": {
            "Examples": {
                "Print a full description of CPU, memory, disk, network and process information": "inxi -Fz",
                "Print a short summary of CPU, memory, hard drive and kernel information": "inxi",
                "Print information about the distribution's repository": "inxi -r"
            },
            "Explanation": "Print a summary of system information and resources for debugging purposes.",
            "More Information Link": ""
        }
    },
    "ionic": {
        "common": {
            "Examples": {
                "Check the health of a ionic app": "ionic doctor {{check}}",
                "Create a new project": "ionic start",
                "Generate new app component, directive, page, pipe, provider or tabs": "ionic g {{page}}",
                "Run app on an android/ios device": "ionic cordova run {{android|ios}} --device",
                "Show versions of ionic, cordova, environment, etc.": "ionic info",
                "Start a local dev server for app dev/testing": "ionic serve"
            },
            "Explanation": "A framework to build hybrid mobile apps.",
            "More Information Link": "https://ionicframework.com/docs/cli"
        }
    },
    "ionice": {
        "common": {
            "Examples": {
                "Print the I/O scheduling class and priority of a running process": "ionice -p {{pid}}",
                "Run a command with custom I/O scheduling class and priority": "ionice -c {{scheduling_class}} -n {{priority}} {{command}}",
                "Set I/O scheduling class of a running process": "ionice -c {{scheduling_class}} -p {{pid}}"
            },
            "Explanation": "Get or set program I/O scheduling class and priority.\nScheduling classes: 1 (realtime), 2 (best-effort), 3 (idle).\nPriority levels: 0 (the highest) - 7 (the lowest).",
            "More Information Link": ""
        }
    },
    "ioping": {
        "common": {
            "Examples": {
                "Measure disk seek rate on /dev/sda": "ioping -R /dev/sda",
                "Measure disk sequential speed on /dev/sda": "ioping -RL /dev/sda",
                "Measure latency on /tmp using 10 requests of 1 megabyte each": "ioping -c 10 -s 1M /tmp",
                "Show disk I/O latency using the default values and the current directory": "ioping ."
            },
            "Explanation": "Monitor I/O latency in real time.",
            "More Information Link": "https://github.com/koct9i/ioping"
        }
    },
    "iostat": {
        "linux": {
            "Examples": {
                "Display CPU statistics": "iostat -c",
                "Display a report of CPU and disk statistics since system startup": "iostat",
                "Display a report of CPU and disk statistics with units converted to megabytes": "iostat -m",
                "Display disk statistics with disk names (including LVM)": "iostat -N",
                "Display extended disk statistics with disk names for device \"sda\"": "iostat -xN {{sda}}",
                "Display incremental reports of CPU and disk statistics every 2 seconds": "iostat {{2}}"
            },
            "Explanation": "Report statistics for devices and partitions.",
            "More Information Link": ""
        }
    },
    "iotop": {
        "common": {
            "Examples": {
                "Show I/O usage in non-interactive mode": "iotop -b",
                "Show I/O usage of a given user": "iotop -u {{user}}",
                "Show I/O usage of given PID(s)": "iotop -p {{PID}}",
                "Show accumulated I/O instead of bandwidth": "iotop -a",
                "Show only I/O usage of processes(Default is to show all threads)": "iotop -P",
                "Show only processes or threads actually doing I/O": "iotop -o",
                "Start top-like I/O monitor": "iotop"
            },
            "Explanation": "Display a table of current I/O usage by processes or threads.",
            "More Information Link": "https://linux.die.net/man/1/iotop"
        }
    },
    "ip": {
        "linux": {
            "Examples": {
                "Add a default route": "ip route add default via {{ip}} dev {{interface}}",
                "Add/Delete an ip address to an interface": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
                "Display the routing table": "ip route",
                "List interfaces with brief link layer info": "ip -brief link",
                "List interfaces with brief network layer info": "ip -brief address",
                "List interfaces with detailed info": "ip address",
                "Make an interface up/down": "ip link set {{interface}} up/down",
                "Show neighbors (ARP table)": "ip neighbour"
            },
            "Explanation": "Show / manipulate routing, devices, policy routing and tunnels.",
            "More Information Link": ""
        }
    },
    "ip address": {
        "linux": {
            "Examples": {
                "Add an IP address to a network interface": "ip address add {{ip_address}} dev {{eth0}}",
                "Delete all IP addresses in a given scope from a network interface": "ip address flush dev {{eth0}} scope {{global|host|link}}",
                "Display information about a specific network interface": "ip address show dev {{eth0}}",
                "Filter to show only active network interfaces": "ip address show up",
                "List network interfaces and their associated IP addresses": "ip address",
                "Remove an IP address from a network interface": "ip address delete {{ip_address}} dev {{eth0}}"
            },
            "Explanation": "IP Address management subcommand.",
            "More Information Link": ""
        }
    },
    "ipcalc": {
        "linux": {
            "Examples": {
                "Display geographic information about a given IP address": "ipcalc -g {{1.2.3.4}}",
                "Show information about an address or network in CIDR notation": "ipcalc {{1.2.3.4}}/{{24}}",
                "Show information about an address or network with a given subnet mask": "ipcalc {{1.2.3.4}} {{255.255.255.0}}",
                "Show the broadcast address of an address or network": "ipcalc -b {{1.2.3.4}}/{{30}}",
                "Show the network address of provided IP address and netmask": "ipcalc -n {{1.2.3.4}}/{{24}}"
            },
            "Explanation": "Perform simple operations and calculations on IP addresses and networks.",
            "More Information Link": ""
        }
    },
    "ipcmk": {
        "linux": {
            "Examples": {
                "Create a message queue": "ipcmk --queue",
                "Create a semaphore": "ipcmk --semaphore {{element_size}}",
                "Create a shared memory segment": "ipcmk --shmem {{segment_size_in_bytes}}",
                "Create a shared memory segment with specific permissions (default is 0644)": "ipcmk --shmem {{segment_size_in_bytes}} {{octal_permissons}}"
            },
            "Explanation": "Create IPC (Inter-process Communication) resources.",
            "More Information Link": ""
        }
    },
    "ipconfig": {
        "windows": {
            "Examples": {
                "Free up the IP addresses for a network adapter": "ipconfig /release {{adapter}}",
                "Remove all data from the DNS cache": "ipconfig /flushdns",
                "Renew the IP addresses for a network adapter": "ipconfig /renew {{adapter}}",
                "Show a detailed list of network adapters": "ipconfig /all",
                "Show a list of network adapters": "ipconfig"
            },
            "Explanation": "Display and manage the network configuration of Windows.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/ipconfig"
        }
    },
    "ipcrm": {
        "linux": {
            "Examples": {
                "Delete a semaphore by ID": "ipcrm --semaphore-id {{semaphore_id}}",
                "Delete a semaphore by key": "ipcrm --semaphore-key {{semaphore_key}}",
                "Delete a shared memory segment by ID": "ipcrm --shmem-id {{shmem_id}}",
                "Delete a shared memory segment by key": "ipcrm --shmem-key {{shmem_key}}",
                "Delete all IPC resources": "ipcrm --all",
                "Delete an IPC queue by ID": "ipcrm --queue-id {{ipc_queue_id}}",
                "Delete an IPC queue by key": "ipcrm --queue-key {{ipc_queue_key}}"
            },
            "Explanation": "Delete IPC (Inter-process Communication) resources.",
            "More Information Link": ""
        }
    },
    "ipcs": {
        "common": {
            "Examples": {
                "General information about all the IPC": "ipcs -a",
                "Specific information about the Message Queue which has the id 32768": "ipcs -qi 32768"
            },
            "Explanation": "Display information about resources used in IPC (Inter-process Communication).",
            "More Information Link": ""
        }
    },
    "iperf": {
        "common": {
            "Examples": {
                "Run on client": "iperf -c {{server_address}}",
                "Run on client every 2 seconds": "iperf -c {{server_address}} -i {{2}}",
                "Run on client using UDP mode": "iperf -u -c {{server_address}} -p {{5001}}",
                "Run on client with 5 parallel threads": "iperf -c {{server_address}} -P {{5}}",
                "Run on server": "iperf -s",
                "Run on server using UDP mode and set server port to listen on 5001": "iperf -u -s -p {{5001}}"
            },
            "Explanation": "Measure network bandwidth between computers.",
            "More Information Link": "https://iperf.fr"
        }
    },
    "iperf3": {
        "common": {
            "Examples": {
                "Reverse direction of the test. Server sends data to the client": "iperf3 -c {{server}} -R",
                "Run an iperf3 server on a specific port": "iperf3 -s -p {{port}}",
                "Run iperf3 as a server": "iperf3 -s",
                "Run iperf3 in multiple parallel streams": "iperf3 -c {{server}} -P {{streams}}",
                "Start bandwidth test": "iperf3 -c {{server}}"
            },
            "Explanation": "Traffic generator for testing network bandwidth.",
            "More Information Link": "https://iperf.fr"
        }
    },
    "ipfs": {
        "common": {
            "Examples": {
                "Add a directory and its files recursively from local to the filesystem and print the relative hash": "ipfs add -r {{directory}}",
                "Add a file from local to the filesystem, pin it and print the relative hash": "ipfs add {{filename}}",
                "Display pinned files": "ipfs pin ls",
                "Pin a remote file locally": "ipfs pin add {{hash}}",
                "Remove unpinned files from local storage": "ipfs repo gc",
                "Save a remote file and give it a name but not pin it": "ipfs get {{hash}} -o {{filename}}",
                "Unpin a file from the local storage": "ipfs pin rm {{hash}}"
            },
            "Explanation": "Inter Planetary File System.\nA peer-to-peer hypermedia protocol. Aims to make the web more open.",
            "More Information Link": "https://ipfs.io"
        }
    },
    "iptables": {
        "linux": {
            "Examples": {
                "Append rule to chain policy for IP": "sudo iptables -A {{chain}} -s {{ip}} -j {{rule}}",
                "Append rule to chain policy for IP considering protocol and port": "sudo iptables -A {{chain}} -s {{ip}} -p {{protocol}} --dport {{port}} -j {{rule}}",
                "Delete chain rule": "sudo iptables -D {{chain}} {{rule_line_number}}",
                "Restore iptables configuration from a file": "sudo iptables-restore < {{path/to/iptables_file}}",
                "Save iptables configuration of a given table to a file": "sudo iptables-save -t {{tablename}} > {{path/to/iptables_file}}",
                "Set chain policy rule": "sudo iptables -P {{chain}} {{rule}}",
                "View chains, rules, and packet/byte counters for all tables": "sudo iptables -vnL"
            },
            "Explanation": "Program that allows configuration of tables, chains and rules provided by the Linux kernel firewall.",
            "More Information Link": ""
        }
    },
    "irssi": {
        "common": {
            "Examples": {
                "Change active window (starts at 1)": "/win {{window_number}}",
                "Exit the application cleanly and quitting any server(s)": "/quit",
                "Join a channel": "/join {{#channelname}}",
                "Open irssi and connect to a server with a nickname": "irssi -n {{nickname}} -c {{irc.example.com}}",
                "Open irssi and connect with a specific server on a given port": "irssi -c {{irc.example.com}} -p {{port}}",
                "View the help": "irssi --help"
            },
            "Explanation": "Text based IRC client.",
            "More Information Link": "https://irssi.org"
        }
    },
    "is-up": {
        "common": {
            "Examples": {
                "Check the status of the specified website": "is-up {{example.com}}"
            },
            "Explanation": "Check whether a website is up or down.",
            "More Information Link": "https://github.com/sindresorhus/is-up-cli"
        }
    },
    "iscc": {
        "windows": {
            "Examples": {
                "Compile a signed Inno Setup installer": "iscc /S={{name}}={{command}} {{path/to/file.iss}}",
                "Compile an Inno Setup script": "iscc {{path/to/file.iss}}",
                "Quietly compile an Inno Setup installer": "iscc /Q {{path/to/file.iss}}"
            },
            "Explanation": "Compiler for Inno Setup installers.\nIt compiles an Inno Setup scripts into an Windows installer executable.",
            "More Information Link": ""
        }
    },
    "isoinfo": {
        "linux": {
            "Examples": {
                "E[x]tract a specific file from an ISO image and send it out `stdout`": "isoinfo -i {{path/to/image.iso}} -x {{/PATH/TO/FILE/INSIDE/ISO.EXT}}",
                "List all the files included in an ISO image": "isoinfo -f -i {{path/to/image.iso}}",
                "Show header information for an ISO disk image": "isoinfo -d -i {{path/to/image.iso}}"
            },
            "Explanation": "Utility programs for dumping and verifying ISO disk images.",
            "More Information Link": ""
        }
    },
    "isosize": {
        "linux": {
            "Examples": {
                "Diplay the block count and block size of an ISO file": "isosize --sectors {{path/to/file.iso}}",
                "Display the size of an ISO file": "isosize {{path/to/file.iso}}",
                "Display the size of an ISO file divided by a given number (only usable when --sectors is not given)": "isosize --divisor={{number}} {{path/to/file.iso}}"
            },
            "Explanation": "Display the size of an ISO file.",
            "More Information Link": "https://linux.die.net/man/8/isosize"
        }
    },
    "istats": {
        "osx": {
            "Examples": {
                "Scan and print temperatures": "istats scan",
                "Show all CPU stats": "istats cpu",
                "Show all fan stats": "istats fan",
                "Show all the stats": "istats"
            },
            "Explanation": "CLI tool that shows statistics such as CPU temperature, fan speeds and battery status.",
            "More Information Link": "https://github.com/Chris911/iStats"
        }
    },
    "iverilog": {
        "common": {
            "Examples": {
                "Also display all warnings": "iverilog {{source.v}} -Wall -o {{executable}}",
                "Compile a source file into an executable": "iverilog {{source.v}} -o {{executable}}",
                "Compile and run explicitly using the VVP runtime": "iverilog -o {{execuable}} -tvvp {{source.v}}",
                "Compile using Verilog library files from a different path": "iverilog {{source.v}} -o {{executable}} -I{{path/to/library_directory}}",
                "Preprocess Verilog code without compiling": "iverilog -E {{source.v}}"
            },
            "Explanation": "Preprocesses and compiles Verilog HDL (IEEE-1364) code, into executable programs for simulation.",
            "More Information Link": "http://iverilog.icarus.com/"
        }
    },
    "iw": {
        "linux": {
            "Examples": {
                "Close the current connection": "iw dev {{wlp}} disconnect",
                "Join an open wireless network": "iw dev {{wlp}} connect {{SSID}}",
                "Scan for available wireless networks": "iw dev {{wlp}} scan",
                "Show information about the current connection": "iw dev {{wlp}} link"
            },
            "Explanation": "Show and manipulate wireless devices.",
            "More Information Link": ""
        }
    },
    "iwconfig": {
        "linux": {
            "Examples": {
                "Set the ESSID (network name) of the specified interface (e.g., eth0 or wlp2s0)": "iwconfig {{interface}} {{new_network_name}}",
                "Set the operating mode of the specified interface": "iwconfig {{interface}} mode {{ad hoc|Managed|Master|Repeater|Secondary|Monitor|Auto}}",
                "Show the parameters and statistics of all the interfaces": "iwconfig",
                "Show the parameters and statistics of the specified interface": "iwconfig {{interface}}"
            },
            "Explanation": "Configure and show the parameters of a wireless network interface.",
            "More Information Link": "https://linux.die.net/man/8/iwconfig"
        }
    },
    "iwctl": {
        "linux": {
            "Examples": {
                "Call general help": "iwctl --help",
                "Connect to a network with a station, if credentials are needed they will be asked": "iwctl station {{station}} connect {{network_name}}",
                "Display the networks found by a station": "iwctl station {{station}} get-networks",
                "Display your wifi stations": "iwctl station list",
                "Start looking for networks with a station": "iwctl station {{station}} scan",
                "Start the interactive mode, in this mode you can enter the commands directly, with autocompletion": "iwctl"
            },
            "Explanation": "A command line tool for controlling the iwd network supplicant.",
            "More Information Link": "https://iwd.wiki.kernel.org/gettingstarted"
        }
    },
    "jar": {
        "common": {
            "Examples": {
                "List a .jar/.war file content": "jar tf {{path/to/file.jar}}",
                "List a .jar/.war file content with verbose output": "jar tvf {{path/to/file.jar}}",
                "Recursively archive all files in the current directory into a .jar file": "jar cf {{file.jar}} *",
                "Unzip .jar/.war file to the current directory": "jar -xvf {{file.jar}}"
            },
            "Explanation": "Java Applications/Libraries Packager.",
            "More Information Link": "https://docs.oracle.com/javase/tutorial/deployment/jar/basicsindex.html"
        }
    },
    "jarsigner": {
        "common": {
            "Examples": {
                "Sign a JAR file": "jarsigner {{path/to/file.jar}} {{keystore_alias}}",
                "Sign a JAR file with a specific algorithm": "jarsigner -sigalg {{algorithm}} {{path/to/file.jar}} {{keystore_alias}}",
                "Verify the signature of a JAR file": "jarsigner -verify {{path/to/file.jar}}"
            },
            "Explanation": "Sign and verify Java Archive (JAR) files.",
            "More Information Link": "https://docs.oracle.com/javase/9/tools/jarsigner.htm"
        }
    },
    "java": {
        "common": {
            "Examples": {
                "Display JDK, JRE and HotSpot versions": "java -version",
                "Display usage information for the java command": "java -help",
                "Execute a .jar program": "java -jar {{filename.jar}}",
                "Execute a .jar program with debug waiting to connect on port 5005": "java -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=*:5005 -jar {{filename.jar}}",
                "Execute a java .class file that contains a main method by using just the class name": "java {{classname}}"
            },
            "Explanation": "Java Application Launcher.",
            "More Information Link": "https://java.com"
        }
    },
    "javac": {
        "common": {
            "Examples": {
                "Compile a .java file": "javac {{file.java}}",
                "Compile a .java file and place the resulting class file in a specific directory": "javac -d {{path/to/some/directory}} {{file.java}}",
                "Compile all .java files in current directory": "javac {{*.java}}",
                "Compile several .java files": "javac {{file1.java}} {{file2.java}} {{file3.java}}"
            },
            "Explanation": "Java Application Compiler.",
            "More Information Link": ""
        }
    },
    "javadoc": {
        "common": {
            "Examples": {
                "Generate documentation excluding some packages": "javadoc -exclude {{package_list}} {{path/to/java_source_code}}",
                "Generate documentation for Java source code and save the result in a directory": "javadoc -d {{path/to/directory/}} {{path/to/java_source_code}}",
                "Generate documentation with a specific encoding": "javadoc -docencoding {{UTF-8}} {{path/to/java_source_code}}"
            },
            "Explanation": "Generate Java API documentation in HTML format from source code.",
            "More Information Link": "https://docs.oracle.com/javase/9/javadoc/javadoc-command.htm"
        }
    },
    "jc": {
        "common": {
            "Examples": {
                "Convert command output to JSON via magic syntax": "jc {{ifconfig}}",
                "Convert command output to JSON via pipe": "{{ifconfig}} | jc {{--ifconfig}}",
                "Output pretty JSON via magic syntax": "jc -p {{ifconfig}}",
                "Output pretty JSON via pipe": "{{ifconfig}} | jc {{--ifconfig}} -p"
            },
            "Explanation": "A utility to convert the output of multiple commands to JSON.",
            "More Information Link": "https://github.com/kellyjonbrazil/jc"
        }
    },
    "jcal": {
        "common": {
            "Examples": {
                "Display a calendar for a specific month and year": "jcal {{year}} {{month}}",
                "Display a calendar for a specific year (4 digits)": "jcal {{year}}",
                "Display a calendar for the current month": "jcal",
                "Display the previous, current, and next months": "jcal -3"
            },
            "Explanation": "Display calendar information in the Jalali format, with the current day highlighted.",
            "More Information Link": "http://www.nongnu.org/jcal/"
        }
    },
    "jdupes": {
        "common": {
            "Examples": {
                "Search a single directory": "jdupes {{directory}}",
                "Search all directories recursively": "jdupes --recurse {{directory}}",
                "Search directory recursively and let user choose files to preserve": "jdupes --delete --recurse {{directory}}",
                "Search multiple directories": "jdupes {{directory1}} {{directory2}}",
                "Search multiple directories and follow subdirectores under directory2, not directory1": "jdupes {{directory1}} --recurse: {{directory2}}",
                "Search multiple directories and keep the directory order in result": "jdupes -O {{directory1}} {{directory2}} {{directory3}}"
            },
            "Explanation": "A powerful duplicate file finder and an enhanced fork of fdupes.",
            "More Information Link": "https://github.com/jbruchon/jdupes"
        }
    },
    "jekyll": {
        "common": {
            "Examples": {
                "Clean the site (removes site output and cache folder) without building": "jekyll clean",
                "Enable incremental regeneration": "jekyll serve --incremental",
                "Enable verbose output": "jekyll serve --verbose",
                "Generate a development server that will run at http://localhost:4000/": "jekyll serve",
                "Generate the current directory into \"./_site\"": "jekyll build"
            },
            "Explanation": "A simple, blog-aware, static site generator.",
            "More Information Link": "https://jekyllrb.com"
        }
    },
    "jenv": {
        "common": {
            "Examples": {
                "Add a java version to jEnv": "jenv add {{path/to/jdk_home}}",
                "Display all managed JDKs": "jenv versions",
                "Display the current JDK version used": "jenv version",
                "Enable a jEnv plugin": "jenv enable-plugin {{plugin_name}}",
                "Set the JDK version for the current shell session": "jenv shell {{java_version}}",
                "Set the global JDK version": "jenv global {{java_version}}"
            },
            "Explanation": "Command line tool to manage the \"JAVA_HOME\" environment variable.",
            "More Information Link": "https://www.jenv.be/"
        }
    },
    "jest": {
        "common": {
            "Examples": {
                "Run all available tests": "jest",
                "Run test suites related to a given source file": "jest --findRelatedTests {{path/to/source_file.js}}",
                "Run test suites related to all uncommitted files": "jest --onlyChanged",
                "Run the test suites from files whose paths match the given regex patterns": "jest {{test_file1}} {{path/to/test_file2.js}}",
                "Run the tests whose names match the given regex pattern": "jest --testNamePattern {{spec_name}}",
                "Show help": "jest --help",
                "Watch files for changes and automatically re-run related tests": "jest --watch"
            },
            "Explanation": "A zero-configuration JavaScript testing platform.",
            "More Information Link": "https://jestjs.io"
        }
    },
    "jhat": {
        "common": {
            "Examples": {
                "Analyze a dump letting jhat use up to 8GB RAM (2-4x dump size recommended)": "jhat -J-mx8G {{dump_file.bin}}",
                "Analyze a heap dump (from jmap), view via http on port 7000": "jhat {{dump_file.bin}}",
                "Analyze a heap dump, specifying an alternate port for the http server": "jhat -p {{port}} {{dump_file.bin}}"
            },
            "Explanation": "Java Heap Analysis Tool.",
            "More Information Link": ""
        }
    },
    "jhipster": {
        "common": {
            "Examples": {
                "Add a new entity to a generated project": "jhipster entity {{entity_name}}",
                "Apply lastest JHipster updates to the project": "jhipster upgrade",
                "Generate a CI/CD pipeline for your application": "jhipster ci-cd",
                "Generate a Kubernetes configuration for your application": "jhipster kubernetes",
                "Generate a simple backend project": "jhipster --skip-client",
                "Generate a simple frontend project": "jhipster --skip-server",
                "Generate a simple full-stack project (monolithic or microservices)": "jhipster",
                "Import a JDL file to configure your application (see: https://start.jhipster.tech/jdl-studio/)": "jhipster import-jdl {{first_file.jh second_file.jh ... n_file.jh}}"
            },
            "Explanation": "Web application generator using either monolithic or microservices architecture.",
            "More Information Link": "https://www.jhipster.tech/"
        }
    },
    "jigsaw": {
        "common": {
            "Examples": {
                "Build the site for development": "jigsaw build",
                "Build the site for production": "jigsaw build production",
                "Initialise a project": "jigsaw init",
                "Initialise a project using a starter template": "jigsaw init {{template_name}}",
                "Preview the site from the \"build_local\" directory": "jigsaw serve",
                "Preview the site from the \"build_production\" directory": "jigsaw serve {{build_production}}"
            },
            "Explanation": "A Laravel-based static site builder for PHP.",
            "More Information Link": "https://jigsaw.tighten.co"
        }
    },
    "jmap": {
        "common": {
            "Examples": {
                "Dump contents of the heap into a binary file for analysis with jhat": "jmap -dump:format=b,file={{filename}} {{java_pid}}",
                "Print heap summary information": "jmap -heap {{filename.jar}} {{java_pid}}",
                "Print histogram of heap usage by type": "jmap -histo {{java_pid}}",
                "Print shared object mappings for a java process (output like pmap)": "jmap {{java_pid}}"
            },
            "Explanation": "Java Memory Map Tool.",
            "More Information Link": ""
        }
    },
    "jobs": {
        "common": {
            "Examples": {
                "Show process IDs of all jobs": "jobs -p",
                "Show status and process IDs of all jobs": "jobs -l",
                "Show status of a particular job": "jobs {{job_id}}",
                "Show status of all jobs": "jobs"
            },
            "Explanation": "Display status of jobs in the current session.",
            "More Information Link": ""
        },
        "linux": {
            "Examples": {
                "Display information about jobs with changed status": "jobs -n",
                "Display process id of process group leader": "jobs -p",
                "Display running processes": "jobs -r",
                "Display stopped processes": "jobs -s",
                "List jobs and their process ids": "jobs -l",
                "View jobs spawned by the current shell": "jobs"
            },
            "Explanation": "BASH builtin for viewing information about processes spawned by the current shell.",
            "More Information Link": ""
        }
    },
    "john": {
        "common": {
            "Examples": {
                "Crack password hashes": "john {{path/to/hashes.txt}}",
                "Crack password hashes, enabling word mangling rules": "john --rules {{path/to/hashes.txt}}",
                "Crack password hashes, using a custom wordlist": "john --wordlist={{path/to/wordlist.txt}} {{path/to/hashes.txt}}",
                "Crack password hashes, using a specific hash format": "john --format={{md5crypt}} {{path/to/hashes.txt}}",
                "Display users' cracked passwords by user identifier from multiple files": "john --show --users={{user_ids}} {{path/to/hashes*}} {{path/to/other/hashes*}}",
                "List available hash formats": "john --list=formats",
                "Restore an interrupted cracking session from a state file, e.g. `mycrack.rec`": "john --restore={{path/to/mycrack.rec}}",
                "Show passwords cracked": "john --show {{path/to/hashes.txt}}"
            },
            "Explanation": "Password cracker.",
            "More Information Link": "https://www.openwall.com/john/"
        }
    },
    "join": {
        "common": {
            "Examples": {
                "Join field3 of file1 with field1 of file2": "join -1 {{3}} -2 {{1}} {{file1}} {{file2}}",
                "Join two files on the first (default) field": "join {{file1}} {{file2}}",
                "Join two files using a comma (instead of a space) as the field separator": "join -t {{','}} {{file1}} {{file2}}",
                "Produce a line for each unpairable line for file1": "join -a {{1}} {{file1}} {{file2}}"
            },
            "Explanation": "Join lines of two sorted files on a common field.",
            "More Information Link": ""
        }
    },
    "journalctl": {
        "linux": {
            "Examples": {
                "Filter messages within a time range (either timestamp or placeholders like \"yesterday\")": "journalctl --since {{now|today|yesterday|tomorrow}} --until {{YYYY-MM-DD HH:MM:SS}}",
                "Follow new messages (like `tail -f` for traditional syslog)": "journalctl -f",
                "Show all messages by a specific executable": "journalctl {{path/to/executable}}",
                "Show all messages by a specific process": "journalctl _PID={{pid}}",
                "Show all messages by a specific unit": "journalctl -u {{unit}}",
                "Show all messages from last boot": "journalctl -b -1",
                "Show all messages from this boot": "journalctl -b",
                "Show all messages with priority level 3 (errors) from this boot": "journalctl -b --priority={{3}}"
            },
            "Explanation": "Query the systemd journal.",
            "More Information Link": ""
        }
    },
    "jp2a": {
        "common": {
            "Examples": {
                "Colorize the ASCII output": "jp2a --colors {{path/to/image.jpeg}}",
                "Read JPEG image from a URL and print in ASCII": "jp2a {{www.example.com/image.jpeg}}",
                "Read JPEG image from a file and print in ASCII": "jp2a {{path/to/image.jpeg}}",
                "Specify characters to be used for the ASCII output": "jp2a --chars='{{..-ooxx@@}}' {{path/to/image.jpeg}}",
                "Write the ASCII output in HTML file format, suitable for viewing in web browsers": "jp2a --html --output={{path/to/output_file.html}} {{path/to/image.jpeg}}",
                "Write the ASCII output into a file": "jp2a --output={{path/to/output_file.txt}} {{path/to/image.jpeg}}"
            },
            "Explanation": "Convert JPEG images to ASCII.",
            "More Information Link": "https://csl.name/jp2a/"
        }
    },
    "jpegoptim": {
        "common": {
            "Examples": {
                "Force the output images to be progressive": "jpegoptim --all-progressive {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}",
                "Force the output images to have a fixed maximum filesize": "jpegoptim --size={{250k}} {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}",
                "Optimise JPEG images, stripping all non-essential data": "jpegoptim --strip-all {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}",
                "Optimise a set of JPEG images, retaining all associated data": "jpegoptim {{image1.jpeg}} {{image2.jpeg}} {{imageN.jpeg}}"
            },
            "Explanation": "Optimise JPEG images.",
            "More Information Link": "https://github.com/tjko/jpegoptim"
        }
    },
    "jpegtran": {
        "linux": {
            "Examples": {
                "Convert the image to grayscale": "jpegtran -grayscale {{path/to/image.jpg}} > {{path/to/output.jpg}}",
                "Crop the image to a rectangular region of width `W` and height `H` from the upper left corner, saving the output to a specific file": "jpegtran -crop {{W}}x{{H}} -outfile {{path/to/output.jpg}} {{path/to/image.jpg}}",
                "Crop the image to a rectangular region of width `W` and height `H`, starting at point `X` and `Y` from the upper left corner": "jpegtran -crop {{W}}x{{H}}+{{X}}+{{Y}} {{path/to/image.jpg}} > {{path/to/output.jpg}}",
                "Mirror an image horizontally or vertically": "jpegtran -flip {{horizontal|vertical}} {{path/to/image.jpg}} > {{path/to/output.jpg}}",
                "Rotate an image 90, 180 or 270 degrees clockwise": "jpegtran -rotate {{90|180|270}} {{path/to/image.jpg}} > {{path/to/output.jpg}}",
                "Transpose the image across the upper left to lower right axis": "jpegtran -transpose {{path/to/image.jpg}} > {{path/to/output.jpg}}",
                "Transverse the image across the upper right to lower left axis": "jpegtran -transverse {{path/to/image.jpg}} > {{path/to/output.jpg}}"
            },
            "Explanation": "Perform lossless transformation of JPEG files.",
            "More Information Link": "https://linux.die.net/man/1/jpegtran"
        }
    },
    "jps": {
        "common": {
            "Examples": {
                "Display the arguments passed to the JVM": "jps -v",
                "Display the arguments passed to the processes": "jps -m",
                "Display the full package name of all processes": "jps -l",
                "List all JVM processes": "jps",
                "List all JVM processes with only PID": "jps -q"
            },
            "Explanation": "Show JVM Process Status of current user.",
            "More Information Link": ""
        }
    },
    "jq": {
        "common": {
            "Examples": {
                "Combine multiple filters": "cat {{file.json}} | jq 'unique | sort | reverse'",
                "Output a JSON file, in pretty-print format": "jq . {{file.json}}",
                "Output all elements from arrays (or all the values from objects) in a JSON file": "jq '.[]' {{file.json}}",
                "Output the first element in a JSON file": "jq '.[0]' {{file.json}}",
                "Output the value of a given key of each element in a JSON text from `stdin`": "cat {{file.json}} | jq 'map(.{{key_name}})'",
                "Output the value of a given key of the first element in a JSON text from `stdin`": "cat {{file.json}} | jq '.[0].{{key_name}}'",
                "Output the value of a given key to a string (and disable JSON output)": "cat {{file.json}} | jq --raw-output '\"some text: \\(.{{key_name}})\"'",
                "Output the value of multiple keys as a new JSON object (assuming the input JSON has the keys `key_name` and `other_key_name`)": "cat {{file.json}} | jq '{{{my_new_key}}: .{{key_name}}, {{my_other_key}}: .{{other_key_name}}}'",
                "Read JSON objects from a file into an array, and output it (inverse of `jq .[]`)": "jq --slurp . {{file.json}}"
            },
            "Explanation": "A command-line JSON processor that uses a domain-specific language.",
            "More Information Link": "https://stedolan.github.io/jq"
        }
    },
    "jrnl": {
        "common": {
            "Examples": {
                "Edit all entries tagged with \"texas\" and \"history\"": "jrnl {{@texas}} -and {{@history}} --edit",
                "Insert a new entry with your editor": "jrnl",
                "Quickly insert a new entry": "jrnl {{today at 3am}}: {{title}}. {{content}}",
                "View everything that happened from the start of last year to the start of last march": "jrnl -from \"{{last year}}\" -until {{march}}",
                "View the last ten entries": "jrnl -n {{10}}"
            },
            "Explanation": "A simple journal application for your command line.",
            "More Information Link": "http://jrnl.sh"
        }
    },
    "json5": {
        "common": {
            "Examples": {
                "Convert JSON5 stdin to JSON `stdout`": "echo {{input}} | json5",
                "Convert a JSON5 file to JSON and output to `stdout`": "json5 {{path/to/input_file.json5}}",
                "Convert a JSON5 file to the specified JSON file": "json5 {{path/to/input_file.json5}} --out-file {{path/to/output_file.json}}",
                "Specify the number of spaces to indent by (or \"t\" for tabs)": "json5 --space {{indent_amount}}",
                "Validate a JSON5 file": "json5 {{path/to/input_file.json5}} --validate",
                "View available options": "json5 --help"
            },
            "Explanation": "A command-line tool for converting JSON5 files to JSON.",
            "More Information Link": "https://json5.org"
        }
    },
    "jstack": {
        "common": {
            "Examples": {
                "Print java stack traces for all threads in a java process": "jstack {{java_pid}}",
                "Print mixed mode (java/c++) stack traces for all threads in a java process": "jstack -m {{java_pid}}",
                "Print stack traces from java core dump": "jstack {{/usr/bin/java}} {{file.core}}"
            },
            "Explanation": "Java Stack Trace Tool.",
            "More Information Link": ""
        }
    },
    "julia": {
        "common": {
            "Examples": {
                "Evaluate a string containing Julia code": "julia -e '{{julia_code}}'",
                "Evaluate a string of Julia code, passing arguments to it": "julia -e '{{for x in ARGS; println(x); end}}' {{arguments}}",
                "Evaluate an expression and print the result": "julia -E '{{(1 - cos(pi/4))/2}}'",
                "Execute a Julia program and exit": "julia {{program.jl}}",
                "Execute a Julia program that takes arguments": "julia {{program.jl}} {{arguments}}",
                "Start Julia in parallel mode, using N worker processes": "julia -p {{N}}",
                "Start a Julia REPL session": "julia"
            },
            "Explanation": "A high-level, high-performance dynamic programming language for technical computing.",
            "More Information Link": "https://docs.julialang.org/en/v1/manual/getting-started/"
        }
    },
    "jupyter": {
        "common": {
            "Examples": {
                "Export a specific Jupyter notebook into another format": "jupyter nbconvert --to {{html|markdown|pdf|script}} {{example.ipynb}}",
                "List currently running notebook servers": "jupyter notebook list",
                "Open a specific Jupyter notebook": "jupyter notebook {{example.ipynb}}",
                "Start JupyterLab, if installed, in the current directory": "jupyter lab",
                "Start a Jupyter notebook server in the current directory": "jupyter notebook",
                "Start a server on a specific port": "jupyter notebook --port={{port}}",
                "Stop the currently running server": "jupyter notebook stop"
            },
            "Explanation": "Web application to create and share documents that contain code, visualizations and notes.\nPrimarily used for data analysis, scientific computing and machine learning.",
            "More Information Link": "https://jupyter.org"
        }
    },
    "jupytext": {
        "common": {
            "Examples": {
                "Convert a `.md` file to a notebook and run it": "jupytext --to notebook --execute {{notebook.md}}",
                "Convert a `.py` file to a notebook with no outputs": "jupytext --to notebook {{notebook.py}}",
                "Convert a notebook to a `.py` file": "jupytext --to py {{notebook.ipynb}}",
                "Turn a notebook into a paired `.ipynb`/`.py` notebook": "jupytext --set-formats ipynb,py {{notebook.ipynb}}",
                "Update all paired representations of a notebook": "jupytext --sync {{notebook.ipynb}}",
                "Update the input cells in a notebook and preserve outputs and metadata": "jupytext --update --to notebook {{notebook.py}}"
            },
            "Explanation": "Tool to convert Jupyter notebooks to plain text documents, and back again.",
            "More Information Link": "https://jupytext.readthedocs.io/en/latest/"
        }
    },
    "jwt": {
        "common": {
            "Examples": {
                "Decode a JWT": "jwt decode {{jwt_string}}",
                "Decode a JWT as a JSON string": "jwt decode -j {{jwt_string}}",
                "Encode a JSON string to a JWT": "jwt encode --alg {{HS256}} --secret {{1234567890}} '{{json_string}}'",
                "Encode key pair payload to JWT": "jwt encode --alg {{HS256}} --secret {{1234567890}} -P key=value"
            },
            "Explanation": "A command line tool to work with JSON Web Tokens (JWTs).\nEncryption algorithms available are HS256,HS384, HS512, RS256, RS384, RS512, ES256, ES384.\nFor more information: <https://github.com/mike-engel/jwt-cli>.",
            "More Information Link": ""
        }
    },
    "k6": {
        "common": {
            "Examples": {
                "Login to cloud service using secret token": "k6 login cloud --token {{secret}}",
                "Run load test locally": "k6 run {{script.js}}",
                "Run load test locally and discard response bodies (significantly faster)": "k6 run --discard-response-bodies {{script.js}}",
                "Run load test locally using InfluxDB to store results": "k6 run --out influxdb={{http://localhost:8086/k6db}} {{script.js}}",
                "Run load test locally using the base javascript compatibility mode (significantly faster)": "k6 run --compatibility-mode=base {{script.js}}",
                "Run load test locally with a given environment variable": "k6 run -e {{HOSTNAME=example.com}} {{script.js}}",
                "Run load test locally with a given number of virtual users and duration": "k6 run --vus {{10}} --duration {{30s}} {{script.js}}",
                "Run load test on cloud infrastructure": "k6 cloud {{script.js}}"
            },
            "Explanation": "Open source load testing tool and SaaS for engineering teams.",
            "More Information Link": "https://k6.io"
        }
    },
    "k8s-unused-secret-detector": {
        "common": {
            "Examples": {
                "Delete unused secrets in a specific namespace": "k8s-unused-secret-detector -n {{namespace}} | kubectl delete secret -n {{namespace}}",
                "Detect unused secrets": "k8s-unused-secret-detector",
                "Detect unused secrets in a specific namespace": "k8s-unused-secret-detector -n {{namespace}}"
            },
            "Explanation": "Command line interface tool for detecting unused Kubernetes secrets.",
            "More Information Link": "https://github.com/dtan4/k8s-unused-secret-detector"
        }
    },
    "k8sec": {
        "common": {
            "Examples": {
                "Dump secrets to a file": "k8sec dump -f {{path/to/file}} {{secret_name}}",
                "List a specific secret as a base64-encoded string": "k8sec list {{secret_name}} --base64",
                "List all secrets": "k8sec list",
                "Load secrets from a file": "k8sec load -f {{path/to/file}} {{secret_name}}",
                "Set a base64-encoded value": "k8sec set --base64 {{secret_name}} {{key=encoded_value}}",
                "Set a secret's value": "k8sec set {{secret_name}} {{key=value}}",
                "Unset a secret": "k8sec unset {{secret_name}}"
            },
            "Explanation": "Command line interface tool to manage Kubernetes secrets.",
            "More Information Link": "https://github.com/dtan4/k8sec"
        }
    },
    "kafkacat": {
        "common": {
            "Examples": {
                "Consume messages as a Kafka consumer group": "kafkacat -G {{group_id}} {{topic}} -b {{brokers}}",
                "Consume messages starting with the newest offset": "kafkacat -C -t {{topic}} -b {{brokers}}",
                "Consume messages starting with the oldest offset and exit after the last message is received": "kafkacat -C -t {{topic}} -b {{brokers}} -o beginning -e",
                "Get offset for a topic/partition for a specific point in time": "kafkacat -Q -t {{topic}}:{{partition}}:{{unix_timestamp}} -b {{brokers}}",
                "List metadata for a specific topic": "kafkacat -L -t {{topic}} -b {{brokers}}",
                "List metadata for all topics and brokers": "kafkacat -L -b {{brokers}}",
                "Publish message by reading from `stdin`": "echo {{message}} | kafkacat -P -t {{topic}} -b {{brokers}}",
                "Publish messages by reading from a file": "kafkacat -P -t {{topic}} -b {{brokers}} {{path/to/file}}"
            },
            "Explanation": "Apache Kafka producer and consumer tool.",
            "More Information Link": "https://github.com/edenhill/kafkacat"
        }
    },
    "kaggle": {
        "common": {
            "Examples": {
                "Download a specific file from a competition dataset": "kaggle competitions download {{competition}} -f {{filename}}",
                "View current configuration values": "kaggle config view"
            },
            "Explanation": "Official CLI for Kaggle implemented in Python 3.",
            "More Information Link": "https://github.com/Kaggle/kaggle-api"
        }
    },
    "kahlan": {
        "common": {
            "Examples": {
                "Run all specifications in the \"spec\" directory": "kahlan",
                "Run specifications and output using a reporter": "kahlan --reporter={{dot|bar|json|tap|verbose}}",
                "Run specifications using a specific configuration file": "kahlan --config={{path/to/configuration_file}}",
                "Run specifications with code coverage (detail can be between 0 and 4)": "kahlan --coverage={{detail_level}}"
            },
            "Explanation": "A unit and Behaviour Driven Development test framework for PHP.",
            "More Information Link": "https://kahlan.github.io"
        }
    },
    "kak": {
        "common": {
            "Examples": {
                "Enter insert mode from normal mode, to write text into the file": "i",
                "Escape insert mode, to go back to normal mode": "<Escape>",
                "Insert the contents of a file": "!cat {{path/to/file}}<Enter>",
                "Open a file and enter normal mode, to execute commands": "kak {{path/to/file}}",
                "Replace all instances of \"foo\" in the current file with \"bar\"": "%s{{foo}}<Enter>c{{bar}}<Escape>",
                "Save the current file": ":w<Enter>",
                "Search for numbers and select the first two": "/\\d+<Enter>N",
                "Un-select all secondary selections, and keep only the main one": "<Space>"
            },
            "Explanation": "Kakoune is a mode-based code editor implementing the \"multiple selections\" paradigm.\nData can be selected and simultaneously edited in different locations, using multiple selections; users can also connect to the same session for collaborative editing.",
            "More Information Link": "https://kakoune.org"
        }
    },
    "keepass2": {
        "common": {
            "Examples": {
                "Start KeePass 2, opening a specific password database": "keepass2 {{path/to/database.kbdx}}",
                "Start KeePass 2, opening the most recently-opened password database": "keepass2",
                "Use a specific key file to open a password database": "keepass2 {{path/to/database.kbdx}} -keyfile:{{path/to/key/file.key}}"
            },
            "Explanation": "A light-weight password manager.",
            "More Information Link": "https://keepass.info"
        }
    },
    "kexec": {
        "linux": {
            "Examples": {
                "Execute a currently loaded kernel": "kexec -e",
                "Load a new kernel": "kexec -l {{path/to/kernel}} --initrd={{path/to/initrd}} --command-line={{arguments}}",
                "Load a new kernel with current boot parameters": "kexec -l {{path/to/kernel}} --initrd={{path/to/initrd}} --reuse-cmdline",
                "Unload current kexec target kernel": "kexec -u"
            },
            "Explanation": "Directly reboot into a new kernel.",
            "More Information Link": ""
        }
    },
    "keybase": {
        "common": {
            "Examples": {
                "Add a new proof": "keybase prove {{service}} {{service_username}}",
                "Decrypt a file": "keybase decrypt --infile {{input_file}} --outfile {{output_file}}",
                "Encrypt a file": "keybase encrypt --infile {{input_file}} --outfile {{output_file}} {{receiver}}",
                "Follow another user": "keybase follow {{username}}",
                "Revoke current device, log out, and delete local data": "keybase deprovision",
                "Sign a file": "keybase sign --infile {{input_file}} --outfile {{output_file}}",
                "Verify a signed file": "keybase verify --infile {{input_file}} --outfile {{output_file}}"
            },
            "Explanation": "Key directory that maps social media identities to encryption keys in a publicly auditable manner.",
            "More Information Link": "https://keybase.io/docs/command_line"
        }
    },
    "khal": {
        "common": {
            "Examples": {
                "Add new event to personal calendar": "khal new -a {{personal}} {{2020-09-08}} {{18:00}} {{18:30}} \"{{Dentist appointment}}\"",
                "Print a calendar with a list of events for the next three months": "khal calendar",
                "Print all events scheduled in personal calendar for the next seven days": "khal list -a {{personal}} {{today}} {{7d}}",
                "Print all events scheduled not in personal calendar for tomorrow at 10:00": "khal at -d {{personal}} {{tomorrow}} {{10:00}}",
                "Start khal on interactive mode": "ikhal"
            },
            "Explanation": "A text-based calendar and scheduling application for the command line.",
            "More Information Link": "https://lostpackets.de/khal"
        }
    },
    "kill": {
        "common": {
            "Examples": {
                "List available signal names (to be used without the `SIG` prefix)": "kill -l",
                "Send a `SIGUSR1` signal to all processes with the given GID (group id)": "kill -{{SIGUSR1}} -{{group_id}}",
                "Signal the operating system to immediately terminate a program (which gets no chance to capture the signal)": "kill -{{9|KILL}} {{process_id}}",
                "Signal the operating system to pause a program until a SIGCONT (\"continue\") signal is received": "kill -{{17|STOP}} {{process_id}}",
                "Terminate a background job": "kill %{{job_id}}",
                "Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating": "kill -{{1|HUP}} {{process_id}}",
                "Terminate a program using the SIGINT (interrupt) signal. This is typically initiated by the user pressing `Ctrl + C`": "kill -{{2|INT}} {{process_id}}",
                "Terminate a program using the default SIGTERM (terminate) signal": "kill {{process_id}}"
            },
            "Explanation": "Sends a signal to a process, usually related to stopping the process.\nAll signals except for SIGKILL and SIGSTOP can be intercepted by the process to perform a clean exit.",
            "More Information Link": ""
        }
    },
    "killall": {
        "common": {
            "Examples": {
                "Force kill a process": "killall -KILL {{process_name}}",
                "Interactively ask for confirmation before termination": "killall -i {{process_name}}",
                "List available signal names (to be used without the 'SIG' prefix)": "killall --list",
                "Terminate a process using the SIGINT (interrupt) signal, which is the same signal sent by pressing `Ctrl + C`": "killall -INT {{process_name}}",
                "Terminate a process using the default SIGTERM (terminate) signal": "killall {{process_name}}"
            },
            "Explanation": "Send kill signal to all instances of a process by name (must be exact name).\nAll signals except SIGKILL and SIGSTOP can be intercepted by the process, allowing a clean exit.",
            "More Information Link": ""
        }
    },
    "kind": {
        "common": {
            "Examples": {
                "Create a local Kubernetes cluster": "kind create cluster --name {{cluster-name}}",
                "Delete one or more clusters": "kind delete clusters {{cluster-name}}",
                "Export the kubeconfig or the logs": "kind export {{kubeconfig|logs}}",
                "Get details about clusters, nodes, or the kubeconfig": "kind get {{clusters|nodes|kubeconfig}}"
            },
            "Explanation": "Tool for running local Kubernetes clusters using Docker container \"nodes\".\nDesigned for testing Kubernetes itself, but may be used for local development or continuous integration.",
            "More Information Link": "https://github.com/kubernetes-sigs/kind"
        }
    },
    "knife": {
        "common": {
            "Examples": {
                "Bootstrap a new node": "knife bootstrap {{fqdn_or_ip}}",
                "Edit a node": "knife node edit {{node_name}}",
                "Edit a role": "knife role edit {{role_name}}",
                "List all registered nodes": "knife node list",
                "Show a node": "knife node show {{node_name}}",
                "Upload a local cookbook to the Chef server": "knife cookbook upload {{cookbook_name}}",
                "View a data bag": "knife data bag show {{data_bag_name}} {{data_bag_item}}"
            },
            "Explanation": "CLI for interacting with a Chef server from a local Chef repo.",
            "More Information Link": "https://docs.chef.io/knife.html"
        }
    },
    "kompose": {
        "common": {
            "Examples": {
                "Convert a docker-compose file into Kubernetes resources file": "kompose convert -f {{docker-compose.yml}}",
                "Delete instantiated services/deployments from Kubernetes": "kompose down -f {{docker-compose.yml}}",
                "Deploy a dockerized application to Kubernetes": "kompose up -f {{docker-compose.yml}}"
            },
            "Explanation": "A tool to convert docker-compose applications to Kubernetes.",
            "More Information Link": "https://github.com/kubernetes/kompose"
        }
    },
    "konsole": {
        "linux": {
            "Examples": {
                "Open a Konsole in the background and bring to the front when Ctrl+Shift+F12 (by default) is pressed": "konsole --background-mode",
                "Open a Konsole with the emergency FALLBACK profile": "konsole --fallback-profile",
                "Open a new Konsole in a specific directory": "konsole --workdir {{path/to/directory}}",
                "Open a new tab": "konsole --new-tab",
                "Run a specific command and do not close the window after it exits": "konsole --noclose -e {{command}}"
            },
            "Explanation": "Konsole: The KDE terminal emulator.",
            "More Information Link": "https://konsole.kde.org"
        }
    },
    "kops": {
        "common": {
            "Examples": {
                "Create a cluster from the configuration specification": "kops create cluster -f {{cluster_name.yaml}}",
                "Create a new ssh public key": "kops create secret sshpublickey {{key_name}} -i {{~/.ssh/id_rsa.pub}}",
                "Delete a cluster": "kops delete cluster {{cluster_name}} --yes",
                "Export the cluster configurations into the ~/.kube/config file": "kops export kubecfg {{cluster_name}}",
                "Get the cluster configuration as yaml": "kops get cluster {{cluster_name}} -o yaml"
            },
            "Explanation": "Create, destroy, upgrade and maintain Kubernetes clusters from the command line.",
            "More Information Link": "https://github.com/kubernetes/kops/"
        }
    },
    "kosmorro": {
        "common": {
            "Examples": {
                "Generate a PDF (note: TeXLive must be installed)": "kosmorro --format={{pdf}} --output={{path/to/file.pdf}}",
                "Get ephemerides for Paris, France": "kosmorro --latitude={{48.7996}} --longitude={{2.3511}}",
                "Get ephemerides for Paris, France, in the UTC+2 timezone": "kosmorro --latitude={{48.7996}} --longitude={{2.3511}} --timezone={{2}}",
                "Get ephemerides for Paris, France, on June 9th, 2020": "kosmorro --latitude={{48.7996}} --longitude={{2.3511}} --date={{2020-06-09}}"
            },
            "Explanation": "Compute the ephemerides and the events for a given date, at a given position on Earth.",
            "More Information Link": "http://kosmorro.space"
        }
    },
    "kotlin": {
        "common": {
            "Examples": {
                "Display Kotlin and JVM version": "kotlin -version",
                "Run a jar file": "kotlin {{filename.jar}}"
            },
            "Explanation": "Kotlin Application Launcher.",
            "More Information Link": "https://kotlinlang.org"
        }
    },
    "kpackagetool5": {
        "linux": {
            "Examples": {
                "Install the package from a directory": "kpackagetool5 --type {{package_type}} --install {{path/to/directory}}",
                "List all known package types that can be installed": "kpackagetool5 --list-types",
                "List installed plasmoids (--global for all users)": "kpackagetool5 --type Plasma/Applet --list --global",
                "Remove a plasmoid by name": "kpackagetool5 --type Plasma/Applet --remove \"{{name}}\"",
                "Update installed package from a directory": "kpackagetool5 --type {{package_type}} --upgrade {{path/to/directory}}"
            },
            "Explanation": "KPackage Manager: Install, list, remove Plasma packages.",
            "More Information Link": "https://techbase.kde.org/Development/Tutorials/Plasma5/QML2/GettingStarted#Kpackagetool5"
        }
    },
    "kpartx": {
        "linux": {
            "Examples": {
                "Add partition mappings": "kpartx -a {{whole_disk.img}}",
                "Delete partition mappings": "kpartx -d {{whole_disk.img}}",
                "List partition mappings": "kpartx -l {{whole_disk.img}}"
            },
            "Explanation": "Create device maps from partition tables.",
            "More Information Link": ""
        }
    },
    "ksh": {
        "common": {
            "Examples": {
                "Execute a command": "ksh -c {{command}}",
                "Run commands from a file": "ksh {{file}}",
                "Run commands from a file and print them as they are executed": "ksh -x {{file}}",
                "Start interactive command line interpreter": "ksh"
            },
            "Explanation": "Korn Shell.\n`bash` and `sh`-compatible command line interpreter.",
            "More Information Link": "http://kornshell.com"
        }
    },
    "ksvgtopng5": {
        "linux": {
            "Examples": {
                "Convert an SVG file (should be an absolute path) to PNG": "ksvgtopng5 {{width}} {{height}} {{path/to/file.svg}} {{output_filename.png}}"
            },
            "Explanation": "Convert SVG files to PNG format.",
            "More Information Link": ""
        }
    },
    "kube-capacity": {
        "common": {
            "Examples": {
                "Include pods": "kube-capacity -p",
                "Include utilization": "kube-capacity -u",
                "Output a list of nodes with the total CPU and Memory resource requests and limits": "kube-capacity"
            },
            "Explanation": "A simple CLI that provides an overview of the resource requests, limits, and utilization in a Kubernetes cluster.\nCombine the best parts of `kubectl top` and `kubectl describe` into a CLI focused on cluster resources.",
            "More Information Link": "https://github.com/robscott/kube-capacity"
        }
    },
    "kube-fzf": {
        "common": {
            "Examples": {
                "Describe a pod": "describepod",
                "Exec into a pod's container": "execpod {{shell_command}}",
                "Get pod details (from all namespaces)": "findpod -a",
                "Get pod details (from current namespace)": "findpod",
                "Port-forward a pod": "pfpod {{port_number}}",
                "Tail pod logs": "tailpod"
            },
            "Explanation": "Shell commands for command line fuzzy searching of Kubernetes Pods.\nSee also `kubectl` for related commands.",
            "More Information Link": "https://github.com/thecasualcoder/kube-fzf"
        }
    },
    "kubeadm": {
        "common": {
            "Examples": {
                "Bootstrap a Kubernetes worker node and join it to a cluster": "kubeadm join --token {{token}}",
                "Check if the Kubernetes cluster is upgradeable and which versions are available": "kubeadm upgrade plan",
                "Create a Kubernetes master node": "kubeadm init",
                "Create a new bootstrap token with a TTL of 12 hours": "kubeadm token create --ttl {{12h0m0s}}",
                "Revert changes made to the host by 'kubeadm init' or 'kubeadm join'": "kubeadm reset",
                "Upgrade Kubernetes cluster to a specified version": "kubeadm upgrade apply {{version}}",
                "View the kubeadm ConfigMap containing the cluster's configuration": "kubeadm config view"
            },
            "Explanation": "Command line interface for creating and managing Kubernetes clusters.",
            "More Information Link": "https://kubernetes.io/docs/reference/setup-tools/kubeadm"
        }
    },
    "kubectl": {
        "common": {
            "Examples": {
                "Display an explanation of a specific field": "kubectl explain {{pods.spec.containers}}",
                "Display resource (CPU/Memory/Storage) usage of nodes or pods": "kubectl top {{pod|node}}",
                "List all information about a resource with more details": "kubectl get {{pod|service|deployment|ingress|...}} -o wide",
                "List all resources with different types": "kubectl get all",
                "Print the address of the master and cluster services": "kubectl cluster-info",
                "Print the logs for a container in a pod or specified resource": "kubectl logs {{pod_name}}",
                "Run command in an existing pod": "kubectl exec {{pod_name}} -- {{ls /}}",
                "Update specified pod with the label 'unhealthy' and the value 'true'": "kubectl label pods {{name}} unhealthy=true"
            },
            "Explanation": "Command line interface for running commands against Kubernetes clusters.",
            "More Information Link": "https://kubernetes.io/docs/reference/kubectl/"
        }
    },
    "kubectl describe": {
        "common": {
            "Examples": {
                "Show details of Kubernetes objects defined in a YAML manifest": "kubectl describe -f {{path/to/manifest}}.yaml",
                "Show details of nodes in a namespace": "kubectl describe nodes -n {{namespace}}",
                "Show details of pods in a namespace": "kubectl describe pods -n {{namespace}}",
                "Show the details of a specific node in a namespace": "kubectl describe nodes {{node_name}} -n {{namespace}}",
                "Show the details of a specific pod in a namespace": "kubectl describe pods {{pod_name}} -n {{namespace}}"
            },
            "Explanation": "Show details of Kubernetes objects and resources.",
            "More Information Link": "https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#describe"
        }
    },
    "kubectl get": {
        "common": {
            "Examples": {
                "Get Kubernetes objects defined in a YAML manifest": "kubectl get -f {{path/to/manifest}}.yaml",
                "Get all namespaces in the current cluster": "kubectl get namespaces",
                "Get deployments in a specified namespace": "kubectl get deployments -n {{namespace}}",
                "Get nodes in a specified namespace": "kubectl get nodes -n {{namespace}}",
                "Get pods in a specified namespace": "kubectl get pods -n {{namespace}}",
                "Get services in a specified namespace": "kubectl get services -n {{namespace}}"
            },
            "Explanation": "Get Kubernetes objects and resources.",
            "More Information Link": "https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands#get"
        }
    },
    "kubectx": {
        "common": {
            "Examples": {
                "Delete a named context": "kubectx -d {{name}}",
                "List the contexts": "kubectx",
                "Switch to a named context": "kubectx {{name}}",
                "Switch to the previous context": "kubectx -"
            },
            "Explanation": "Utility to manage and switch between `kubectl` contexts.",
            "More Information Link": "https://github.com/ahmetb/kubectx"
        }
    },
    "kubens": {
        "common": {
            "Examples": {
                "Change the active namespace": "kubens {{name}}",
                "List the namespaces": "kubens",
                "Switch to the previous namespace": "kubens -"
            },
            "Explanation": "Utility to switch between Kubernetes namespaces.",
            "More Information Link": "https://github.com/ahmetb/kubectx"
        }
    },
    "kubetail": {
        "common": {
            "Examples": {
                "Tail only a specific container from multiple pods": "kubetail {{my_app}} -c {{my_container}}",
                "Tail the logs of multiple pods (whose name starts with \"my_app\") in one go": "kubetail {{my_app}}",
                "To tail multiple applications at the same time separate them by comma": "kubetail {{my_app_1}},{{my_app_2}}",
                "To tail multiple containers from multiple pods": "kubetail {{my_app}} -c {{my_container_1}} -c {{my_container_2}}"
            },
            "Explanation": "Utility to tail multiple Kubernetes pod logs at the same time.",
            "More Information Link": "https://github.com/johanhaleby/kubetail"
        }
    },
    "kustomize": {
        "common": {
            "Examples": {
                "Build kustomization file and deploy it with `kubectl`": "kustomize build . | kubectl apply -f -",
                "Create kustomization file with resources and namespace": "kustomize create --resources {{deployment.yaml,service.yaml}} --namespace {{staging}}",
                "Search for kubernetes resources in the current directory to be added to the kustomization file": "kustomize create --autodetect",
                "Set an image in the kustomization file": "kustomize edit set image {{busybox=alpine:3.6}}"
            },
            "Explanation": "Kustomize is a tool to easily deploy resources for Kubernetes.",
            "More Information Link": "https://github.com/kubernetes-sigs/kustomize"
        }
    },
    "larasail": {
        "linux": {
            "Examples": {
                "Add a new Laravel site": "larasail host {{domain}} {{path/to/site_directory}}",
                "Retrieve the Larasail MySQL password": "larasail mysqlpass",
                "Retrieve the Larasail user password": "larasail pass",
                "Set up the server with Laravel dependencies using a specific PHP version": "larasail setup {{php71}}",
                "Set up the server with Laravel dependencies using the default PHP version": "larasail setup"
            },
            "Explanation": "A CLI tool for managing Laravel on Digital Ocean servers.",
            "More Information Link": "https://github.com/thedevdojo/larasail"
        }
    },
    "laravel": {
        "common": {
            "Examples": {
                "Create a new Laravel application": "laravel new {{name}}",
                "Install the Laravel Jetstream scaffolding": "laravel new {{name}} --jet",
                "Install the Laravel Jetstream scaffolding with a specific stack": "laravel new {{name}} --jet --stack {{livewire|inertia}}",
                "Install the Laravel Jetstream scaffolding with support for teams": "laravel new {{name}} --jet --teams",
                "List the available installer commands": "laravel list",
                "Overwrite if the directory already exists": "laravel new {{name}} --force",
                "Use the latest development release": "laravel new {{name}} --dev"
            },
            "Explanation": "A command line installer for the Laravel framework.",
            "More Information Link": "https://laravel.com"
        }
    },
    "laravel-zero": {
        "common": {
            "Examples": {
                "Create a new Laravel Zero application": "laravel-zero new {{name}}",
                "List the available installer commands": "laravel-zero list",
                "Update the installer to the latest version": "laravel-zero self-update"
            },
            "Explanation": "A command line installer for the Laravel Zero framework.",
            "More Information Link": "https://laravel-zero.com"
        }
    },
    "last": {
        "common": {
            "Examples": {
                "Print the full date and time for entries and then display the hostname column last to prevent truncation": "last -F -a",
                "Specify how many of the last logins to show": "last -n {{login_count}}",
                "View all logins by a specific user and show the ip address instead of the hostname": "last {{username}} -i",
                "View all recorded reboots (i.e., the last logins of the pseudo user \"reboot\")": "last reboot",
                "View all recorded shutdowns (i.e., the last logins of the pseudo user \"shutdown\")": "last shutdown",
                "View last logins, their duration and other information as read from /var/log/wtmp": "last"
            },
            "Explanation": "View the last logged in users.",
            "More Information Link": ""
        }
    },
    "lastb": {
        "linux": {
            "Examples": {
                "Show a list of all last logged in users": "sudo lastb",
                "Show a list of all last logged in users and translate the IP into a hostname": "sudo lastb --dns",
                "Show a list of all last logged in users since a given time": "sudo lastb --since {{YYYY-MM-DD}}",
                "Show a list of all last logged in users until a given time": "sudo lastb --until {{YYYY-MM-DD}}",
                "Show a list of all logged in users at a specific time": "sudo lastb --present {{hh:mm}}"
            },
            "Explanation": "Show a listing of last logged in users.",
            "More Information Link": ""
        }
    },
    "lastcomm": {
        "linux": {
            "Examples": {
                "Display commands executed by a given user": "lastcomm --user {{user}}",
                "Display information about a given command executed on the system": "lastcomm --command {{command}}",
                "Display information about commands executed on a given terminal": "lastcomm --tty {{terminal_name}}",
                "Print informations about all of the commands in the acct (record file)": "lastcomm"
            },
            "Explanation": "Show last commands executed.",
            "More Information Link": "https://manpages.debian.org/stable/acct/lastcomm.1.en.html"
        }
    },
    "lastlog": {
        "linux": {
            "Examples": {
                "Display lastlog record of the specified user": "lastlog -u {{username}}",
                "Display records before than 7 days": "lastlog -b {{7}}",
                "Display records more recent than 3 days": "lastlog -t {{3}}",
                "Display the most recent login of all users": "lastlog"
            },
            "Explanation": "Show the most recent login of all users or of a given user.",
            "More Information Link": ""
        }
    },
    "latexmk": {
        "common": {
            "Examples": {
                "Clean up all temporary tex files in the current directory": "latexmk -c",
                "Clean up temporary tex files created for a specific tex file": "latexmk -c {{source.tex}}",
                "Compile a dvi (DeVice Independent file) document from every source": "latexmk",
                "Compile a dvi document from a specific source file": "latexmk {{source.tex}}",
                "Compile a pdf document": "latexmk -pdf {{source.tex}}",
                "Force the generation of a document even if there are errors": "latexmk -f {{source.tex}}"
            },
            "Explanation": "Compile LaTeX source files into finished documents.\nAutomatically does multiple runs when needed.",
            "More Information Link": "https://mg.readthedocs.io/latexmk.html"
        }
    },
    "launchctl": {
        "osx": {
            "Examples": {
                "Activate a system-wide daemon to be loaded whenever the system boots up (even if no user logs in)": "sudo launchctl load /Library/LaunchDaemons/{{system_daemon}}.plist",
                "Activate a user-specific agent to be loaded into `launchd` whenever the user logs in": "launchctl load ~/Library/LaunchAgents/{{my_script}}.plist",
                "Activate an agent which requires root privileges to run and/or should be loaded whenever any user logs in (note the absence of `~` in the path)": "sudo launchctl load /Library/LaunchAgents/{{root_script}}.plist",
                "Manually kill the process associated with a known agent/daemon, if it is running": "launchctl stop {{my_script}}",
                "Manually run a known (loaded) agent/daemon, even if it is not the right time (note: this command uses the agent's label, rather than the filename)": "launchctl start {{my_script}}",
                "Show all loaded agents/daemons, with the PID if the process they specify is currently running, and the exit code returned the last time they ran": "launchctl list",
                "Unload a currently loaded agent, e.g. to make changes (note: the plist file is automatically loaded into `launchd` after a reboot and/or logging in)": "launchctl unload ~/Library/LaunchAgents/{{my_script}}.plist"
            },
            "Explanation": "A command-line interface to Apple's `launchd` manager for launch daemons (system-wide services) and launch agents (per-user programs).\n`launchd` loads XML-based `*.plist` files placed in the appropriate locations, and runs the corresponding commands according to their defined schedule.",
            "More Information Link": ""
        }
    },
    "ldapsearch": {
        "common": {
            "Examples": {
                "Combine multiple boolean logic filters": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} '(&({{memberOf=group1}})({{memberOf=group2}})(!({{memberOf=group3}})))' displayName",
                "Invert the filter": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '(!(memberOf={{group1}}))' displayName",
                "Query an LDAP server for all items that are a member of the given group and return the object's displayName value": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' displayName",
                "Query an LDAP server with a no-newline password file for all items that are a member of the given group and return the object's displayName value": "ldapsearch -D '{{admin_DN}}' -y '{{password_file}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' displayName",
                "Return 5 items that match the given filter": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' -z 5 displayName",
                "Return all items that are members of at least 1 of the specified groups": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} '(|({{memberOf=group1}})({{memberOf=group1}})({{memberOf=group3}}))' displayName",
                "Return all items that are part of multiple groups, returning the display name for each item": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} '(&({{memberOf=group1}})({{memberOf=group2}})({{memberOf=group3}}))' \"displayName\"",
                "Wait up to 7 seconds for a response": "ldapsearch -D '{{admin_DN}}' -w '{{password}}' -h {{ldap_host}} -b {{base_ou}} '{{memberOf=group1}}' -l 7 displayName"
            },
            "Explanation": "CLI utility for querying an LDAP directory.",
            "More Information Link": ""
        }
    },
    "ldconfig": {
        "linux": {
            "Examples": {
                "Print the libraries in the cache and check whether a given library is present": "ldconfig -p | grep {{library_name}}",
                "Update symlinks and rebuild the cache (usually run when a new library is installed)": "sudo ldconfig",
                "Update the symlinks for a given directory": "sudo ldconfig -n {{path/to/directory}}"
            },
            "Explanation": "Configure symlinks and cache for shared library dependencies.",
            "More Information Link": ""
        }
    },
    "ldd": {
        "linux": {
            "Examples": {
                "Display shared library dependencies of a binary": "ldd {{path/to/binary}}",
                "Display unused direct dependencies": "ldd -u {{path/to/binary}}"
            },
            "Explanation": "Display shared library dependencies.",
            "More Information Link": ""
        }
    },
    "leave": {
        "common": {
            "Examples": {
                "Remind to leave at noon": "leave {{1200}}",
                "Remind to leave in 4 hours and 4 minutes": "leave +{{0404}}",
                "Set a reminder at a given time": "leave {{time_to_leave}}",
                "Set a reminder in a specific amount of time": "leave +{{amount_of_time}}"
            },
            "Explanation": "Remind when it's time to leave.\nTo remove reminders use `kill $(pidof leave)`.",
            "More Information Link": ""
        }
    },
    "lebab": {
        "common": {
            "Examples": {
                "Display a list of the available transformations": "lebab --help",
                "Replace all `.js` files in-place in the specified directory, glob or file": "lebab --replace {{directory|glob|file}}",
                "Transpile a file to `stdout`": "lebab {{path/to/input_file}}",
                "Transpile a file to the specified output file": "lebab {{path/to/input_file}} --out-file {{path/to/output_file}}",
                "Transpile using one or more comma-separated transformations": "lebab --transform {{transformation}}"
            },
            "Explanation": "A JavaScript modernizer for transpiling code to ES6/ES7.\nTransformations must be provided for all examples.",
            "More Information Link": "https://github.com/lebab/lebab"
        }
    },
    "legit": {
        "linux": {
            "Examples": {
                "List all branches and their publication status": "git branches {{glob_pattern}}",
                "Publish a specified branch to the remote server": "git publish {{branch_name}}",
                "Remove a branch from the remote server": "git unpublish {{branch_name}}",
                "Remove the last commit from the history": "git undo {{--hard}}",
                "Switch to a specified branch, stashing and restoring unstaged changes": "git switch {{target_branch}}",
                "Synchronize current branch, automatically merging or rebasing, and stashing and unstashing": "git sync"
            },
            "Explanation": "Complementary command-line interface for Git.",
            "More Information Link": "https://frostming.github.io/legit"
        }
    },
    "lein": {
        "common": {
            "Examples": {
                "Generate scaffolding for a new project based on a template": "lein new {{template_name}} {{project_name}}",
                "Package up the project files and all its dependencies into a jar file": "lein uberjar",
                "Run the project's \"-main\" function with optional args": "lein run {{args}}",
                "Run the project's tests": "lein test",
                "Start a REPL session either with the project or standalone": "lein repl"
            },
            "Explanation": "Manage clojure projects with declarative configuration.",
            "More Information Link": "https://leiningen.org"
        }
    },
    "less": {
        "common": {
            "Examples": {
                "Backward search for a string (press `n`/`N` to go to next/previous match)": "?{{something}}",
                "Exit": "q",
                "Follow the output of the currently opened file": "F",
                "Forward search for a string (press `n`/`N` to go to next/previous match)": "/{{something}}",
                "Go to end / start of file": "G (end), g (start)",
                "Open a file": "less {{source_file}}",
                "Open the current file in an editor": "v",
                "Page down / up": "<Space> (down), b (up)"
            },
            "Explanation": "Open a file for interactive reading, allowing scrolling and search.",
            "More Information Link": ""
        }
    },
    "lex": {
        "common": {
            "Examples": {
                "Compile a C file generated by Lex": "cc {{path/to/lex.yy.c}} --output {{executable}}",
                "Generate an analyser from a Lex file": "lex {{analyser.l}}",
                "Specify the output file": "lex {{analyser.l}} --outfile {{analyser.c}}"
            },
            "Explanation": "Lexical analyser generator.\nGiven the specification for a lexical analyser, generates C code implementing it.",
            "More Information Link": ""
        }
    },
    "lftp": {
        "linux": {
            "Examples": {
                "Connect to an FTP server": "lftp {{ftp.example.com}}",
                "Delete multiple files on the remote server": "mrm {{path/to/*.txt}}",
                "Download multiple files (glob expression)": "mget {{path/to/*.png}}",
                "Download or update an entire directory": "mirror {{path/to/remote_dir}} {{path/to/local_output_dir}}",
                "Rename a file on the remote server": "mv {{original_filename}} {{new_filename}}",
                "Upload multiple files (glob expression)": "mput {{path/to/*.zip}}",
                "Upload or update an entire directory": "mirror -R {{path/to/local_dir}} {{path/to/remote_output_dir}}"
            },
            "Explanation": "Sophisticated file transfer program.",
            "More Information Link": "https://linux.die.net/man/1/lftp"
        }
    },
    "libreoffice": {
        "linux": {
            "Examples": {
                "Convert all .doc files in current directory to pdf": "libreoffice --convert-to {{pdf}} {{*.doc}}",
                "Display the content of specific files": "libreoffice --cat {{path/to/file1}} {{path/to/file2}}",
                "Open a space-separated list of files in read-only mode": "libreoffice --view {{path/to/file1}} {{path/to/file2}}",
                "Print files to a specific printer": "libreoffice --pt {{printer_name}} {{path/to/file1}} {{path/to/file2}}"
            },
            "Explanation": "CLI for the powerful and free office suite LibreOffice.",
            "More Information Link": "https://www.libreoffice.org/"
        }
    },
    "license": {
        "common": {
            "Examples": {
                "Generate a license and save it to a file": "license -o {{filename}} {{license_name}}",
                "Generate a license with custom author name and year": "license --name {{author}} --year {{release_year}} {{license_name}}",
                "List all available licenses": "license ls",
                "Print a license to `stdout`, using the defaults (auto-detected author name, and current year)": "license {{license_name}}"
            },
            "Explanation": "Create license files for open-source projects.",
            "More Information Link": "https://nishanths.github.io/license"
        }
    },
    "light": {
        "linux": {
            "Examples": {
                "Add 20 percent to the current backlight value": "light -A {{20}}",
                "Get the current backlight value in percent": "light",
                "Reduce 20 percent from the current backlight value": "light -U {{20}}",
                "Set the backlight value to 50 percent": "light -S {{50}}"
            },
            "Explanation": "CLI to control the backlight of your screen.",
            "More Information Link": ""
        }
    },
    "light-arionum-cli": {
        "common": {
            "Examples": {
                "Display information about a specific transaction": "light-arionum-cli transaction {{transaction_id}}",
                "Display information about the current address' transactions": "light-arionum-cli transactions",
                "Display information about the current block": "light-arionum-cli block",
                "Display the balance of the current address": "light-arionum-cli balance",
                "Display the balance of the specified address": "light-arionum-cli balance {{address}}",
                "Export the current wallet information": "light-arionum-cli export",
                "Generate a new public/private key pair": "light-arionum-cli",
                "Send a transaction with an optional message": "light-arionum-cli send {{address}} {{value}} {{optional_message}}"
            },
            "Explanation": "The PHP light wallet for the Arionum cryptocurrency.",
            "More Information Link": "https://github.com/arionum/lightWalletCLI"
        }
    },
    "lilypond": {
        "common": {
            "Examples": {
                "Compile a lilypond file into a PDF": "lilypond {{path/to/file}}",
                "Compile into the specified format": "lilypond --formats={{format_dump}} {{path/to/file}}",
                "Compile the specified file, and also specify the output filename": "lilypond --output={{path/to/output_file}} {{path/to/input_file}}",
                "Compile the specified file, suppressing progress updates": "lilypond -s {{path/to/file}}",
                "Show the current version of lilypond": "lilypond --version"
            },
            "Explanation": "Typeset music and/or produce MIDI from file.",
            "More Information Link": "https://lilypond.org/index.html"
        }
    },
    "line": {
        "linux": {
            "Examples": {
                "Read input": "line"
            },
            "Explanation": "Read a single line of input.",
            "More Information Link": ""
        }
    },
    "link": {
        "common": {
            "Examples": {
                "Create a hard link from a new file to an existing file": "link {{path/to/existing_file}} {{path/to/new_file}}"
            },
            "Explanation": "Create a hard link to an existing file.\nFor more options, see the `ln` command.",
            "More Information Link": ""
        }
    },
    "linkchecker": {
        "common": {
            "Examples": {
                "Also check URLs that point to external domains": "linkchecker --check-extern {{https://example.com/}}",
                "Find broken links on https://example.com/": "linkchecker {{https://example.com/}}",
                "Ignore URLs that match a specific regex": "linkchecker --ignore-url {{regex}} {{https://example.com/}}",
                "Output results to a CSV file": "linkchecker --file-output {{csv}}/{{path/to/file}} {{https://example.com/}}"
            },
            "Explanation": "Command line client to check HTML documents and websites for broken links.",
            "More Information Link": "https://linkchecker.github.io/linkchecker/"
        }
    },
    "live-server": {
        "common": {
            "Examples": {
                "Proxy all requests for ROUTE to URL": "live-server --proxy={{/}}:{{http:localhost:3000}}",
                "Serve an index.html file and reload on changes": "live-server",
                "Specify a given file to serve": "live-server --open={{about.html}}",
                "Specify a port (default is 8080) from which to serve a file": "live-server --port={{8081}}"
            },
            "Explanation": "A simple development http server with live reload capability.",
            "More Information Link": "https://www.npmjs.com/package/live-server"
        }
    },
    "lldb": {
        "linux": {
            "Examples": {
                "Attach `lldb` to a running process with a given PID": "lldb -p {{pid}}",
                "Debug an executable": "lldb {{executable}}",
                "Wait for a new process to launch with a given name, and attach to it": "lldb -w -n {{process_name}}"
            },
            "Explanation": "The LLVM Low-Level Debugger.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Attach `lldb` to a running process with a given PID": "lldb -p {{pid}}",
                "Debug an executable": "lldb {{executable}}",
                "Wait for a new process to launch with a given name, and attach to it": "lldb -w -n {{process_name}}"
            },
            "Explanation": "The LLVM Low-Level Debugger.",
            "More Information Link": ""
        }
    },
    "ln": {
        "common": {
            "Examples": {
                "Create a hard link to a file": "ln {{path/to/file}} {{path/to/hardlink}}",
                "Create a symbolic link to a file or directory": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
                "Overwrite an existing symbolic to point to a different file": "ln -sf {{path/to/new_file}} {{path/to/symlink}}"
            },
            "Explanation": "Creates links to files and directories.",
            "More Information Link": ""
        }
    },
    "loc": {
        "common": {
            "Examples": {
                "Print lines of code in the current directory": "loc",
                "Print lines of code in the target directory": "loc {{path/to/directory}}",
                "Print lines of code with stats for individual files": "loc --files",
                "Print lines of code without .gitignore (etc.) files (e.g. two -u flags will additionally count hidden files and dirs)": "loc -u"
            },
            "Explanation": "Tool written in Rust that counts lines of code.",
            "More Information Link": "https://github.com/cgag/loc"
        }
    },
    "locate": {
        "linux": {
            "Examples": {
                "Look for a file by its exact filename (a pattern containing no globbing characters is interpreted as `*pattern*`)": "locate */{{filename}}",
                "Look for pattern in the database. Note: the database is recomputed periodically (usually weekly or daily)": "locate {{pattern}}",
                "Recompute the database. You need to do it if you want to find recently added files": "sudo updatedb"
            },
            "Explanation": "Find filenames quickly.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Look for a file by its exact filename (a pattern containing no globbing characters is interpreted as `*pattern*`)": "locate */{{filename}}",
                "Look for pattern in the database. Note: the database is recomputed periodically (usually weekly or daily)": "locate {{pattern}}",
                "Recompute the database. You need to do it if you want to find recently added files": "sudo /usr/libexec/locate.updatedb"
            },
            "Explanation": "Find filenames quickly.",
            "More Information Link": ""
        }
    },
    "locust": {
        "common": {
            "Examples": {
                "Connect locust slave to master": "locust --slave --host={{http://example.com}}",
                "Connect locust slave to master on a different machine": "locust --slave --master-host={{master_hostname}} --host={{http://example.com}}",
                "Load-test \"example.com\" with web interface using locustfile.py": "locust --host={{http://example.com}}",
                "Run test without web interface, spawning 1 user a second until there are 100 users": "locust --no-web --clients={{100}} --hatch-rate={{1}} --host={{http://example.com}}",
                "Start locust in master mode": "locust --master --host={{http://example.com}}",
                "Use a different test file": "locust --locustfile={{test_file.py}} --host={{http://example.com}}"
            },
            "Explanation": "Load-testing tool to determine number of concurrent users a system can handle.",
            "More Information Link": "https://locust.io"
        }
    },
    "logcat": {
        "linux": {
            "Examples": {
                "Display lines that match a regex": "logcat --regex {{regex}}",
                "Display system logs": "logcat",
                "Write system logs to a file": "logcat -f {{path/to/file}}"
            },
            "Explanation": "Dump a log of system messages.\nNative Android CLI tool.",
            "More Information Link": "https://developer.android.com/studio/command-line/logcat"
        }
    },
    "logger": {
        "linux": {
            "Examples": {
                "Log a message to syslog": "logger {{message}}",
                "Log messages with a given priority. Default is `user.notice`. See `man logger` for all priority options": "echo {{log_entry}} | logger --priority {{user.warning}}",
                "Send the output to a remote syslog server running at a given port. Default port is 514": "echo {{log_entry}} | logger --server {{hostname}} --port {{port}}",
                "Take input from `stdin` and log to syslog": "echo {{log_entry}} | logger",
                "Use a specific tag for every line logged. Default is the name of logged in user": "echo {{log_entry}} | logger --tag {{tag}}"
            },
            "Explanation": "Add messages to syslog (/var/log/syslog).",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Log a message to syslog": "logger {{message}}",
                "Log messages with a given priority. Default is `user.notice`. See `man logger` for all priority options": "echo {{log_entry}} | logger -p {{user.warning}}",
                "Send the output to a remote syslog server running at a given port. Default port is 514": "echo {{log_entry}} | logger -h {{hostname}} -P {{port}}",
                "Take input from `stdin` and log to syslog": "echo {{log_entry}} | logger",
                "Use a specific tag for every line logged. Default is the name of logged in user": "echo {{log_entry}} | logger -t {{tag}}"
            },
            "Explanation": "Add messages to syslog (/var/log/syslog).",
            "More Information Link": ""
        }
    },
    "login": {
        "linux": {
            "Examples": {
                "Login as a user": "login {{user}}",
                "Login as a user on a remote host": "login -h {{host}} {{user}}",
                "Login as user and preserve environment": "login -p {{user}}",
                "Login as user without authentication if user is preauthenticated": "login -f {{user}}"
            },
            "Explanation": "Initiates a session for a user.",
            "More Information Link": ""
        }
    },
    "logname": {
        "common": {
            "Examples": {
                "Display the currently logged in user's name": "logname"
            },
            "Explanation": "Shows the user's login name.",
            "More Information Link": ""
        }
    },
    "logoff": {
        "windows": {
            "Examples": {
                "Terminate a session by its name or id": "logoff {{session_name|session_id}}",
                "Terminate a session on a specific server connected through RDP": "logoff {{session_name|session_id}} /server:{{servername}}",
                "Terminate the current session": "logoff"
            },
            "Explanation": "Terminate a login session.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/logoff"
        }
    },
    "logsave": {
        "linux": {
            "Examples": {
                "Append the output to a log file, instead of replacing its current contents": "logsave -a {{logfile}} {{command}}",
                "Execute command with specified argument(s) and save its output to log file": "logsave {{path/to/logfile}} {{command}}",
                "Show verbose output": "logsave -v {{logfile}} {{command}}",
                "Take input from standard input and save it in a log file": "logsave {{logfile}} -"
            },
            "Explanation": "Save the output of a command in a logfile.",
            "More Information Link": "https://linux.die.net/man/8/logsave"
        }
    },
    "logstash": {
        "common": {
            "Examples": {
                "Check validity of a logstash configuration": "logstash --configtest --config {{logstash_config.conf}}",
                "Run logstash using configuration": "sudo logstash --config {{logstash_config.conf}}",
                "Run logstash with the most basic inline configuration string": "sudo logstash -e 'input {} filter {} output {}'"
            },
            "Explanation": "An ETL (extract, transform and load) tool.\nCommonly used to load data from various sources, like databases and log files, into elasticsearch.",
            "More Information Link": "https://www.elastic.co/products/logstash"
        }
    },
    "logwatch": {
        "linux": {
            "Examples": {
                "Analyze logs for a range of dates at certain level of detail": "logwatch --range {{yesterday|today|all|help}} --detail {{low|medium|others}}'",
                "Restrict report to only include information for a selected service": "logwatch --range {{all}} --service {{apache|pam_unix|etc}}"
            },
            "Explanation": "Summarizes many different logs for common services (e.g., apache, pam_unix, sshd, etc.) in a single report.",
            "More Information Link": ""
        }
    },
    "lolcat": {
        "common": {
            "Examples": {
                "Print a file to the console in rainbow colors": "lolcat {{path/to/file}}",
                "Print a file to the console with 24-bit (truecolor) rainbow colors": "lolcat -t {{path/to/file}}",
                "Print a file to the console with animated rainbow colors": "lolcat -a {{path/to/file}}",
                "Print the result of a text-producing command in rainbow colors": "{{fortune}} | lolcat"
            },
            "Explanation": "Put a rainbow in everything you `cat` to the console.",
            "More Information Link": "https://github.com/busyloop/lolcat"
        }
    },
    "look": {
        "osx": {
            "Examples": {
                "Look for lines ignoring case": "look -f {{prefix}} {{file}}",
                "Look for lines which begins with the given prefix": "look {{prefix}} {{file}}"
            },
            "Explanation": "Look for lines in sorted file.",
            "More Information Link": ""
        }
    },
    "lorem": {
        "common": {
            "Examples": {
                "Print 10 lines of Goethe's Faust": "lorem -l {{10}} --faust",
                "Print 40 random characters from Boccacio's Decameron": "lorem --randomize -c {{40}} --decamerone",
                "Print 5 sentences of Poe's Raven": "lorem -s {{5}} --raven",
                "Print the specified number of words": "lorem -n {{20}}"
            },
            "Explanation": "Create more or less random lorem ipsum text.",
            "More Information Link": ""
        }
    },
    "losetup": {
        "linux": {
            "Examples": {
                "Attach a file to a given loop device": "sudo losetup /dev/{{loop}} /{{path/to/file}}",
                "Attach a file to a new free loop device and scan the device for partitions": "sudo losetup --show --partscan -f /{{path/to/file}}",
                "Attach a file to a read-only loop device": "sudo losetup --read-only /dev/{{loop}} /{{path/to/file}}",
                "Detach a given loop device": "sudo losetup -d /dev/{{loop}}",
                "Detach all loop devices": "sudo losetup -D",
                "List loop devices with detailed info": "losetup -a"
            },
            "Explanation": "Set up and control loop devices.",
            "More Information Link": ""
        }
    },
    "lp": {
        "common": {
            "Examples": {
                "Print N copies of file to default printer (replace N with desired number of copies)": "lp -n {{N}} {{path/to/filename}}",
                "Print a file to a named printer (see `lpstat` command)": "lp -d {{printer_name}} {{path/to/filename}}",
                "Print a file to the default printer": "lp {{path/to/filename}}",
                "Print only certain pages to the default printer (print pages 1, 3-5, and 16)": "lp -P 1,3-5,16 {{path/to/filename}}",
                "Print the output of a command to the default printer (see `lpstat` command)": "echo \"test\" | lp",
                "Resume printing a job": "lp -i {{job_id}} -H resume"
            },
            "Explanation": "Print files.",
            "More Information Link": ""
        }
    },
    "lpass": {
        "common": {
            "Examples": {
                "Generate a new password for \"gmail.com\" with identifier \"myinbox\" and add to LastPass": "lpass generate --username {{username}} --url {{gmail.com}} {{myinbox}} {{password_length}}",
                "List all sites grouped by category": "lpass ls",
                "Login to your LastPass account, by entering your master password when prompted": "lpass login {{username}}",
                "Show login status": "lpass status",
                "Show password for a specified entry": "lpass show {{myinbox}} --password"
            },
            "Explanation": "Command line interface for the LastPass password manager.",
            "More Information Link": "https://github.com/lastpass/lastpass-cli"
        }
    },
    "lpr": {
        "common": {
            "Examples": {
                "Print 2 copies": "lpr -# {{2}} {{path/to/file}}",
                "Print a file to the default printer": "lpr {{path/to/file}}",
                "Print double sided in landscape": "lpr -o sides={{two-sided-short-edge}} {{path/to/file}}",
                "Print double sided in portrait": "lpr -o sides={{two-sided-long-edge}} {{path/to/file}}",
                "Print multiple pages per sheet": "lpr -o number-up={{2|4|6|9|16}} {{path/to/file}}",
                "Print to a named printer": "lpr -P {{printer}} {{path/to/file}}",
                "Set page size (more options may be available depending on setup)": "lpr -o media={{a4|letter|legal}} {{path/to/file}}"
            },
            "Explanation": "CUPS tool for printing files.\nSee also `lpstat` and `lpadmin` for listing and configuring printers.",
            "More Information Link": "http://www.CUPS.org"
        }
    },
    "lpstat": {
        "common": {
            "Examples": {
                "Display all available status information": "lpstat -t",
                "List printers present on the machine and whether they are enabled for printing": "lpstat -p",
                "Show a list of print jobs queued by the specified user": "lpstat -u {{user}}",
                "Show the default printer": "lpstat -d"
            },
            "Explanation": "Show status information about printers.",
            "More Information Link": ""
        }
    },
    "lrunzip": {
        "linux": {
            "Examples": {
                "Decompress a file": "lrunzip {{filename.lrz}}",
                "Decompress a file and silently overwrite files if they exist": "lrunzip -f {{filename.lrz}}",
                "Decompress a file using a specific number of processor threads": "lrunzip -p {{8}} {{filename.lrz}}",
                "Keep broken or damaged files instead of deleting them when decompressing": "lrunzip -K {{filename.lrz}}",
                "Specify output file name and/or path": "lrunzip -o {{outfilename}} {{filename.lrz}}"
            },
            "Explanation": "A large file decompression program.\nSee also `lrzip`, `lrztar`, `lrzuntar`.",
            "More Information Link": ""
        }
    },
    "lrzip": {
        "linux": {
            "Examples": {
                "Compress a file and password protect/encrypt it": "lrzip -e {{filename}}",
                "Compress a file with BZIP2 - good middle ground for compression/speed": "lrzip -b {{filename}}",
                "Compress a file with LZMA - slow compression, fast decompression": "lrzip {{filename}}",
                "Compress with LZO - light compression, extremely fast decompression": "lrzip -l {{filename}}",
                "Compress with ZPAQ - extreme compression, but very slow": "lrzip -z {{filename}}",
                "Override the number of processor threads to use": "lrzip -p {{8}} {{filename}}"
            },
            "Explanation": "A large file compression program.\nSee also `lrunzip`, `lrztar`, `lrzuntar`.",
            "More Information Link": ""
        }
    },
    "lrztar": {
        "linux": {
            "Examples": {
                "Archive a directory with `tar`, then compress": "lrztar {{path/to/directory}}",
                "Force overwriting of existing files": "lrztar -f {{path/to/directory}}",
                "Override the number of processor threads to use": "lrztar -p {{8}} {{path/to/directory}}",
                "Same as above, with ZPAQ - extreme compression, but very slow": "lrztar -z {{path/to/directory}}",
                "Specify the output file": "lrztar -o {{path/to/file}} {{path/to/directory}}"
            },
            "Explanation": "A wrapper for `lrzip` to simplify compression of directories.\nSee also: `tar`, `lrzuntar`, `lrunzip`.",
            "More Information Link": ""
        }
    },
    "lrzuntar": {
        "linux": {
            "Examples": {
                "Decompress from a file to the current directory": "lrzuntar {{path/to/archive.tar.lrz}}",
                "Decompress from a file to the current directory and silently overwrite items that already exist": "lrzuntar -f {{archive.tar.lrz}}",
                "Decompress from a file to the current directory using a specific number of processor threads": "lrzuntar -p {{8}} {{path/to/archive.tar.lrz}}",
                "Delete the compressed file after decompression": "lrzuntar -D {{path/to/archive.tar.lrz}}",
                "Specify the output path": "lrzuntar -O {{path/to/directory}} {{archive.tar.lrz}}"
            },
            "Explanation": "A wrapper for `lrunzip` to simplify decompression of directories.\nSee also: `lrztar`, `lrzip`.",
            "More Information Link": ""
        }
    },
    "ls": {
        "common": {
            "Examples": {
                "List all files, including hidden files": "ls -a",
                "List all files, with trailing `/` added to directory names": "ls -F",
                "List files one per line": "ls -1",
                "Long format list (permissions, ownership, size and modification date) of all files": "ls -la",
                "Long format list of all files, sorted by modification date (oldest first)": "ls -ltr",
                "Long format list sorted by size (descending)": "ls -lS",
                "Long format list with size displayed using human readable units (KB, MB, GB)": "ls -lh"
            },
            "Explanation": "List directory contents.",
            "More Information Link": ""
        }
    },
    "lsattr": {
        "linux": {
            "Examples": {
                "Display attributes of directories in the current directory": "lsattr -d",
                "Display the attributes of the files in the current directory": "lsattr",
                "List file attributes recursively in the current and subsequent directories": "lsattr -R",
                "List the attributes of files in a particular path": "lsattr {{path}}",
                "Show attributes of all the files in the current directory, including hidden ones": "lsattr -a"
            },
            "Explanation": "List file attributes on a Linux filesystem.",
            "More Information Link": ""
        }
    },
    "lsb_release": {
        "linux": {
            "Examples": {
                "Print a description (usually the full name) of the operating system": "lsb_release -d",
                "Print all available information": "lsb_release -a",
                "Print only the operating system name (ID), suppressing the field name": "lsb_release -i -s",
                "Print the release number and codename of the distribution, suppressing the field names": "lsb_release -rcs"
            },
            "Explanation": "Provides certain LSB (Linux Standard Base) and distribution-specific information.",
            "More Information Link": ""
        }
    },
    "lsblk": {
        "linux": {
            "Examples": {
                "Also list empty devices": "lsblk -a",
                "Exclude the devices specified by the comma-separated list of major device numbers": "lsblk -e {{1,7}}",
                "List all storage devices in a tree-like format": "lsblk",
                "Output info about block-device topology": "lsblk -t",
                "Output info about filesystems": "lsblk -f",
                "Print the SIZE column in bytes rather than in a human-readable format": "lsblk -b",
                "Use ASCII characters for tree formatting": "lsblk -i"
            },
            "Explanation": "Lists information about devices.",
            "More Information Link": ""
        }
    },
    "lscpu": {
        "linux": {
            "Examples": {
                "Display information about all CPUs": "lscpu",
                "Display information in a table": "lscpu --extended",
                "Display only information about offline CPUs in a table": "lscpu --extended --offline"
            },
            "Explanation": "Displays information about the CPU architecture.",
            "More Information Link": ""
        }
    },
    "lshw": {
        "linux": {
            "Examples": {
                "Launch the GUI": "sudo lshw -X",
                "List all disks and storage controllers in tabular format": "sudo lshw -class disk -class storage -short",
                "List all hardwares in tabular format": "sudo lshw -short",
                "Save all network interfaces to an HTML file": "sudo lshw -class network -html > {{interfaces.html}}"
            },
            "Explanation": "List detailed information about hardware configurations as root user.",
            "More Information Link": ""
        }
    },
    "lslocks": {
        "linux": {
            "Examples": {
                "List all local system locks": "lslocks",
                "List locks by PID input": "lslocks --pid {{PID}}",
                "List locks producing a raw output (no columns), and without column headers": "lslocks --raw --noheadings",
                "List locks with defined column headers": "lslocks --output {{PID}},{{COMMAND}},{{PATH}}",
                "List locks with json output to `stdout`": "lslocks --json"
            },
            "Explanation": "List local system locks.",
            "More Information Link": ""
        }
    },
    "lslogins": {
        "linux": {
            "Examples": {
                "Display last logins": "lslogins --last",
                "Display supplementary groups": "lslogins --supp-groups",
                "Display system accounts": "lslogins --system-accs",
                "Display user accounts": "lslogins --user-accs",
                "Display users belonging to a specific group": "lslogins --groups={{groups}}",
                "Display users in the system": "lslogins"
            },
            "Explanation": "Show information about users on a Linux system.",
            "More Information Link": "https://man7.org/linux/man-pages/man1/lslogins.1.html"
        }
    },
    "lsmod": {
        "linux": {
            "Examples": {
                "List all currently loaded kernel modules": "lsmod"
            },
            "Explanation": "Shows the status of linux kernel modules.\nSee also `modprobe`, which loads kernel modules.",
            "More Information Link": ""
        }
    },
    "lsof": {
        "common": {
            "Examples": {
                "Find the process that is listening on a local TCP port": "lsof -iTCP:{{port}} -sTCP:LISTEN",
                "Find the process that opened a local internet port": "lsof -i :{{port}}",
                "Find the processes that have a given file open": "lsof {{path/to/file}}",
                "List files opened by a specific process, given its PID": "lsof -p {{PID}}",
                "List files opened by the given command or process": "lsof -c {{process_or_command_name}}",
                "List files opened by the given user": "lsof -u {{username}}",
                "List open files in a directory": "lsof +D {{path/to/directory}}",
                "Only output the process ID (PID)": "lsof -t {{path/to/file}}"
            },
            "Explanation": "Lists open files and the corresponding processes.\nNote: Root privileges (or sudo) is required to list files opened by others.",
            "More Information Link": ""
        }
    },
    "lspci": {
        "linux": {
            "Examples": {
                "Display additional info": "lspci -v",
                "Display drivers and modules handling each device": "lspci -k",
                "Dump info in a readable form": "lspci -vm",
                "Show a brief list of devices": "lspci",
                "Show a specific device": "lspci -s {{00:18.3}}"
            },
            "Explanation": "List all PCI devices.",
            "More Information Link": ""
        }
    },
    "lsscsi": {
        "linux": {
            "Examples": {
                "List all SCSI devices": "lsscsi",
                "List all SCSI devices with detailed attributes": "lsscsi -L",
                "List all SCSI devices with human readable disk capacity": "lsscsi -s"
            },
            "Explanation": "List SCSI devices (or hosts) and their attributes.",
            "More Information Link": ""
        }
    },
    "lsusb": {
        "linux": {
            "Examples": {
                "List all the USB devices available": "lsusb",
                "List detailed information about a USB device": "lsusb -D {{device}}",
                "List devices with a specified vendor and product id only": "lsusb -d {{vendor}}:{{product}}",
                "List the USB hierarchy as a tree": "lsusb -t",
                "List verbose information about USB devices": "lsusb --verbose"
            },
            "Explanation": "Display information about USB buses and devices connected to them.",
            "More Information Link": ""
        }
    },
    "lt": {
        "common": {
            "Examples": {
                "Open the tunnel URL in the default web browser": "lt --port {{8000}} --open",
                "Print basic request info": "lt --port {{8000}} --print-requests",
                "Request a specific subdomain": "lt --port {{8000}} --subdomain {{subdomain}}",
                "Specify the upstream server doing the forwarding": "lt --port {{8000}} --host {{host}}",
                "Start tunnel from a specific port": "lt --port {{8000}}"
            },
            "Explanation": "Localtunnel exposes your localhost to the world for easy testing and sharing.",
            "More Information Link": "https://github.com/localtunnel/localtunnel"
        }
    },
    "ltrace": {
        "linux": {
            "Examples": {
                "Count library calls. Print a handy summary at the bottom": "ltrace -c {{/path/to/program}}",
                "Print (trace) library calls of a program binary": "ltrace ./{{program}}",
                "Trace calls to malloc and free, omit those done by libc": "ltrace -e malloc+free-@libc.so* {{/path/to/program}}",
                "Write to file instead of terminal": "ltrace -o {{file}} {{/path/to/program}}"
            },
            "Explanation": "Display dynamic library calls of a process.",
            "More Information Link": ""
        }
    },
    "lua": {
        "common": {
            "Examples": {
                "Execute a Lua expression": "lua -e '{{print( \"Hello World\" )}}",
                "Execute a Lua script": "lua {{script_name.lua}} {{--optional-argument}}",
                "Start an interactive Lua shell": "lua"
            },
            "Explanation": "A powerful, light-weight embeddable programming language.",
            "More Information Link": "https://www.lua.org"
        }
    },
    "luac": {
        "common": {
            "Examples": {
                "Compile a Lua source file to Lua bytecode": "luac -o {{byte_code.luac}} {{source.lua}}",
                "Do not include debug symbols in the output": "luac -s -o {{byte_code.luac}} {{source.lua}}"
            },
            "Explanation": "Lua bytecode compiler.",
            "More Information Link": "https://www.lua.org"
        }
    },
    "lumen": {
        "common": {
            "Examples": {
                "Create a new Lumen application": "lumen new {{application_name}}",
                "List the available installer commands": "lumen list"
            },
            "Explanation": "A command line installer for the Lumen micro-framework.",
            "More Information Link": "https://lumen.laravel.com"
        }
    },
    "lvcreate": {
        "linux": {
            "Examples": {
                "Create a 1500 megabyte linear logical volume named mylv in the volume group vg1": "lvcreate -L {{1500}} -n {{mylv}} {{vg1}}",
                "Create a logical volume called mylv that uses 60% of the total space in volume group vg1": "lvcreate -l {{60%VG}} -n {{mylv}} {{vg1}}",
                "Create a logical volume called mylv that uses all of the unallocated space in the volume group vg1": "lvcreate -l {{100%FREE}} -n {{mylv}} {{vg1}}",
                "Create a logical volume of 10 gigabytes in the volume group vg1": "lvcreate -L {{10G}} {{vg1}}"
            },
            "Explanation": "Creates a logical volume in an existing volume group.\nA volume group is a collection of logical and physical volumes.",
            "More Information Link": ""
        }
    },
    "lvextend": {
        "linux": {
            "Examples": {
                "Increase a volume's size by 40GB as well as the underlying filesystem": "lvextend --size +{{40G}} -r {{logical_volume}}",
                "Increase a volume's size to 100% of the free phyiscal volume space": "lvextend --size {{100}}%FREE {{logical_volume}}",
                "Increase a volume's size to 120GB": "lvextend --size {{120G}} {{logical_volume}}"
            },
            "Explanation": "Increase the size of a logical volume.",
            "More Information Link": ""
        }
    },
    "lvreduce": {
        "linux": {
            "Examples": {
                "Reduce a volume's size by 40GB as well as the underlying filesystem": "lvreduce --size -{{40G}} -r {{logical_volume}}",
                "Reduce a volume's size to 120GB": "lvreduce --size {{120G}} {{logical_volume}}"
            },
            "Explanation": "Reduce the size of a logical volume.",
            "More Information Link": ""
        }
    },
    "lvremove": {
        "linux": {
            "Examples": {
                "Remove a logical volume in a volume group": "sudo lvremove {{volume_group}}/{{logical_volume}}",
                "Remove all logical volumes in a volume group": "sudo lvremove {{volume_group}}"
            },
            "Explanation": "Remove one or more logical volumes.",
            "More Information Link": "https://sourceware.org/lvm2/"
        }
    },
    "lvresize": {
        "linux": {
            "Examples": {
                "Change a volume's size to 120GB": "lvresize -L {{120G}} {{logical_volume}}",
                "Increase a volume's size to 100% of the free phyiscal volume space": "lvresize --size {{100}}%FREE {{logical_volume}}",
                "Reduce a volume's size by 120GB as well as the underlying filesystem": "lvresize --size -{{120G}} -r {{logical_volume}}"
            },
            "Explanation": "Change the size of a logical volume.",
            "More Information Link": ""
        }
    },
    "lvs": {
        "linux": {
            "Examples": {
                "Append field to default display": "lvs -o +{{field_name}}",
                "Change default display to show more details": "lvs -v",
                "Display all logical volumes": "lvs -a",
                "Display information about logical volumes": "lvs",
                "Display only specific fields": "lvs -o {{field_name_1}},{{field_name_2}}",
                "Suppress heading line": "lvs --noheadings",
                "Use a separator to separate fields": "lvs --separator {{=}}"
            },
            "Explanation": "Display information about LVM logical volumes.",
            "More Information Link": "https://www.man7.org/linux/man-pages/man8/lvs.8.html"
        }
    },
    "lwp-request": {
        "common": {
            "Examples": {
                "Make a request and print request headers": "lwp-request -U -m {{METHOD}} {{http://example.com/some/path}}",
                "Make a request and print response headers and status chain": "lwp-request -E -m {{METHOD}} {{http://example.com/some/path}}",
                "Make a request with HTTP authentication": "lwp-request -C {{username}}:{{password}} -m {{METHOD}} {{http://example.com/some/path}}",
                "Make a request with a custom user agent": "lwp-request -H 'User-Agent: {{user_agent}} -m {{METHOD}} {{http://example.com/some/path}}",
                "Make a simple GET request": "lwp-request -m GET {{http://example.com/some/path}}",
                "Upload a file with a POST request": "cat {{/path/to/file}} | lwp-request -m POST {{http://example.com/some/path}}"
            },
            "Explanation": "Simple command-line HTTP client.\nBuilt with libwww-perl.",
            "More Information Link": "https://metacpan.org/pod/lwp-request"
        }
    },
    "lxc": {
        "linux": {
            "Examples": {
                "Create a new container from an image": "lxc init [{{remote}}:]{{image}} {{container}}",
                "List images matching a string. Omit the string to list all images": "lxc image list [{{remote}}:]{{match_string}}",
                "List local containers matching a string. Omit the string to list all local containers": "lxc list {{match_string}}",
                "Show detailed info about a container": "lxc info [{{remote}}:]{{container}}",
                "Start a container": "lxc start [{{remote}}:]{{container}}",
                "Stop a container": "lxc stop [{{remote}}:]{{container}}",
                "Take a snapshot of a container": "lxc snapshot [{{remote}}:]{{container}} {{snapshot}}"
            },
            "Explanation": "Manage Linux containers using the lxd REST API.\nAny container names or patterns can be prefixed with the name of a remote server.",
            "More Information Link": ""
        }
    },
    "lynis": {
        "linux": {
            "Examples": {
                "Check that Lynis is up-to-date": "sudo lynis update info",
                "Run a security audit of a Dockerfile": "sudo lynis audit dockerfile {{path/to/dockerfile}}",
                "Run a security audit of the system": "sudo lynis audit system"
            },
            "Explanation": "System and security auditing tool.",
            "More Information Link": "https://cisofy.com/documentation/lynis/"
        }
    },
    "lz4": {
        "common": {
            "Examples": {
                "Compress a file": "lz4 {{file}}",
                "Compress a file using the best compression": "lz4 -9 {{file}}",
                "Decompress a file": "lz4 -d {{file.lz4}}",
                "Decompress a file and write to `stdout`": "lz4 -dc {{file.lz4}}",
                "Decompress and unpack a directory and its contents": "lz4 -d {{dir.tar.lz4}} | tar -xv",
                "Package and compress a directory and its contents": "tar cvf - {{path/to/dir}} | lz4 - {{dir.tar.lz4}}"
            },
            "Explanation": "Compress or decompress .lz4 files.",
            "More Information Link": "https://github.com/lz4/lz4"
        }
    },
    "lzop": {
        "common": {
            "Examples": {
                "Compress a file into a new file with the .lzo suffix": "lzop {{file}}",
                "Compress a file, while specifing the compression level. 0 = Worst, 9 = Best (Default level is 3)": "lzop -{{level}} {{file}}",
                "Decompress a file": "lzop -d {{file}}.lzo"
            },
            "Explanation": "Compress or decompress files with LZO compression.",
            "More Information Link": "https://www.lzop.org/"
        }
    },
    "m": {
        "osx": {
            "Examples": {
                "Disable the firewall": "m firewall disable",
                "Enable Dock's auto hide feature": "m dock autohide YES",
                "Get the battery status": "m battery status",
                "List available filesystems for formatting": "m disk filesystems",
                "Turn off bluetooth": "m bluetooth off"
            },
            "Explanation": "Swiss Army Knife for macOS.",
            "More Information Link": ""
        }
    },
    "m4": {
        "common": {
            "Examples": {
                "Define a macro before processing files": "m4 -D{{macro_name}}={{macro_value}} {{path/to/file}}",
                "Process macros in a file": "m4 {{path/to/file}}"
            },
            "Explanation": "Macro processor.",
            "More Information Link": "https://www.gnu.org/software/m4"
        }
    },
    "mac2unix": {
        "linux": {
            "Examples": {
                "Change the line endings of a file": "mac2unix {{filename}}",
                "Create a copy with Unix-style line endings": "mac2unix -n {{filename}} {{new_filename}}"
            },
            "Explanation": "Change macOS-style line endings to Unix-style.\nReplaces LF with CR.",
            "More Information Link": ""
        }
    },
    "macchanger": {
        "linux": {
            "Examples": {
                "Reset interface to its permanent hardware MAC": "macchanger --permanent {{interface}}",
                "Set interface to a random MAC": "macchanger --random {{interface}}",
                "Set interface to a specific MAC": "macchanger --mac {{XX:XX:XX:XX:XX:XX}} {{interface}}",
                "View the current and permanent MAC addresses of a interface": "macchanger --show {{interface}}"
            },
            "Explanation": "Command-line utility for manipulating network interface MAC addresses.",
            "More Information Link": ""
        }
    },
    "magento": {
        "common": {
            "Examples": {
                "Deploy static assets": "magento setup:static-content:deploy",
                "Disable maintenance mode": "magento maintenance:disable",
                "Disable one or more space-separated modules": "magento module:disable {{module(s)}}",
                "Enable maintenance mode": "magento maintenance:enable",
                "Enable one or more space-separated modules": "magento module:enable {{module(s)}}",
                "List all available commands": "magento list",
                "Update code and dependency injection configuration": "magento setup:di:compile",
                "Update the database after enabling modules": "magento setup:upgrade"
            },
            "Explanation": "A CLI for managing the Magento PHP framework.",
            "More Information Link": "https://magento.com"
        }
    },
    "magick": {
        "common": {
            "Examples": {
                "Convert file type": "magick {{image.png}} {{image.jpg}}",
                "Convert images to individual PDF pages": "magick {{*.jpg}} +adjoin {{page-%d.pdf}}",
                "Create a GIF using images": "magick {{*.jpg}} {{images.gif}}",
                "Create checkerboard pattern": "magick -size {{640x480}} pattern:checkerboard {{checkerboard.png}}",
                "Resize an image, making a new copy": "magick convert -resize {{100x100}} {{image.jpg}} {{image.jpg}}"
            },
            "Explanation": "Create, edit, compose, or convert bitmap images.\nImageMagick version 7+. See `convert` for versions 6 and below.",
            "More Information Link": "https://imagemagick.org/"
        }
    },
    "mail": {
        "common": {
            "Examples": {
                "Send a tar.gz file as an attachment": "tar cvzf - {{path/to/directory1 path/to/directory2}} | uuencode {{data.tar.gz}} | mail --subject=\"{{subject line}}\" {{to_user@example.com}}",
                "Send a typed email message. The commandline below continues after pressing Enter key. Input CC email-id (optional) press Enter key. Input message text (can be multi-line). Press \"Ctrl-D\" key to complete the message text": "mail --subject=\"{{subject line}}\" {{to_user@example.com}}",
                "Send an email that contains file content": "mail --subject=\"{{$HOSTNAME filename.txt}}\" {{to_user@example.com}} < {{path/to/filename.txt}}"
            },
            "Explanation": "The command operates on the user's mailbox if no argument is given.\nTo send an email the message body is built from standard input.",
            "More Information Link": ""
        }
    },
    "mailx": {
        "common": {
            "Examples": {
                "Send mail (the content should be typed after the command, and ended with `Ctrl+D`)": "mailx -s \"{{subject}}\" {{to_addr}}",
                "Send mail specifying the sender address": "mailx -s \"{{subject}}\" -r {{from_addr}} {{to_addr}}",
                "Send mail to a recipient and CC to another address": "mailx -s \"{{subject}}\" -c {{cc_addr}} {{to_addr}}",
                "Send mail with an attachment": "mailx -a {{file}} -s \"{{subject}}\" {{to_addr}}",
                "Send mail with content passed from another command": "echo \"{{content}}\" | mailx -s \"{{subject}}\" {{to_addr}}",
                "Send mail with content read from a file": "mailx -s \"{{subject}}\" {{to_addr}} < {{content.txt}}"
            },
            "Explanation": "Send and receive mail.",
            "More Information Link": ""
        }
    },
    "make": {
        "common": {
            "Examples": {
                "Call a specific target": "make {{target}}",
                "Call a specific target, executing 4 jobs at a time in parallel": "make -j{{4}} {{target}}",
                "Call the first target specified in the Makefile (usually named \"all\")": "make",
                "Execute make from another directory": "make --directory {{directory}}",
                "Force making of a target, even if source files are unchanged": "make --always-make {{target}}",
                "Use a specific Makefile": "make --file {{file}}"
            },
            "Explanation": "Task runner for targets described in Makefile.\nMostly used to control the compilation of an executable from source code.",
            "More Information Link": ""
        }
    },
    "makebuildserver": {
        "common": {
            "Examples": {
                "Create a new virtual machine or update an existing one (if available)": "makebuildserver",
                "Force creating a fresh virtual machine": "makebuildserver --clean"
            },
            "Explanation": "Create an F-Droid build server virtual machine.",
            "More Information Link": "https://f-droid.org/en/docs/Build_Server_Setup/"
        }
    },
    "makensis": {
        "common": {
            "Examples": {
                "Compile a NSIS script": "makensis {{path/to/file.nsi}}",
                "Compile a NSIS script in strict mode (treat warnings as errors)": "makensis -WX {{path/to/file.nsi}}",
                "Print help for a specific command": "makensis -CMDHELP {{command}}"
            },
            "Explanation": "Cross-platform compiler for NSIS installers.\nIt compiles a NSIS script into a Windows installer executable.",
            "More Information Link": "https://nsis.sourceforge.io/Docs/Chapter3.html"
        }
    },
    "makepasswd": {
        "common": {
            "Examples": {
                "Generate a 10 characters long password": "makepasswd --chars {{10}}",
                "Generate a 5 to 10 characters long password": "makepasswd --minchars {{5}} --maxchars {{10}}",
                "Generate a password containing only the characters \"b\", \"a\" or \"r\"": "makepasswd --string {{bar}}",
                "Generate a random password (8 to 10 characters long, containing letters and numbers)": "makepasswd"
            },
            "Explanation": "Generate and encrypt passwords.",
            "More Information Link": "https://manpages.debian.org/stretch/makepasswd/makepasswd.1.en.html"
        }
    },
    "makepkg": {
        "linux": {
            "Examples": {
                "Make a package (run in the same directory as a PKGBUILD)": "makepkg",
                "Make a package and install its dependencies": "makepkg --syncdeps",
                "Make a package, but skip source checksums": "makepkg --skipchecksums",
                "Same as above, but install the package with `pacman` when done": "makepkg --syncdeps --install"
            },
            "Explanation": "Creates a package installable with the `pacman` package manager.\nRuns the commands from a PKGBUILD file to build the package.",
            "More Information Link": "https://wiki.archlinux.org/index.php/Makepkg"
        }
    },
    "man": {
        "common": {
            "Examples": {
                "Display the location of a manpage rather than the manpage itself": "man -w {{command}}",
                "Display the man page for a command": "man {{command}}",
                "Display the man page for a command from section 7": "man {{command}}.{{7}}",
                "Display the path searched for manpages": "man --path",
                "Search for manpages containing a search string": "man -k \"{{search string}}\""
            },
            "Explanation": "Format and display manual pages.",
            "More Information Link": ""
        }
    },
    "mandb": {
        "linux": {
            "Examples": {
                "Check the validity of manual pages": "mandb --test",
                "Create entries from scratch instead of updating": "mandb --create",
                "Do not purge obsolete entries": "mandb --no-purge",
                "Only process user databases": "mandb --user-db",
                "Purge and process manual pages": "mandb",
                "Update a single entry": "mandb --filename {{path/to/file}}"
            },
            "Explanation": "Manage the pre-formatted manual page database.",
            "More Information Link": ""
        }
    },
    "manpath": {
        "linux": {
            "Examples": {
                "Display the search path used to find man pages": "manpath",
                "Show the entire global manpath": "manpath --global"
            },
            "Explanation": "Determine the search path for manual pages.",
            "More Information Link": ""
        }
    },
    "mas": {
        "osx": {
            "Examples": {
                "Install all pending updates": "mas upgrade",
                "Install or update an application": "mas install {{product_identifier}}",
                "Search for an application, displaying the price alongside the results": "mas search {{application}} --price",
                "Show all installed applications and their product identifiers": "mas list",
                "Sign into the Mac App Store for the first time": "mas signin {{user@example.com}}"
            },
            "Explanation": "Command line interface for the Mac App Store.",
            "More Information Link": "https://github.com/mas-cli/mas"
        }
    },
    "mat2": {
        "common": {
            "Examples": {
                "List supported file formats": "mat2 --list",
                "Partially remove metadata from a file": "mat2 --lightweight {{path/to/file}}",
                "Remove metadata from a file": "mat2 {{path/to/file}}",
                "Remove metadata from a file and print detailed output to the console": "mat2 --verbose {{path/to/file}}",
                "Show metadata in a file without removing it": "mat2 --show {{path/to/file}}"
            },
            "Explanation": "Anonymise various file formats by removing metadata.",
            "More Information Link": "https://0xacab.org/jvoisin/mat2"
        }
    },
    "matlab": {
        "common": {
            "Examples": {
                "Execute a MATLAB statement": "matlab -r \"{{matlab_statement}}\"",
                "Run a MATLAB script": "matlab -r \"run({{path/to/script.m}})\"",
                "Run without splash screen during startup": "matlab -nosplash"
            },
            "Explanation": "Numerical computation environment by MathWorks.",
            "More Information Link": "https://uk.mathworks.com/help/matlab/"
        }
    },
    "mc": {
        "common": {
            "Examples": {
                "Start in black and white": "mc -b",
                "Start mc": "mc"
            },
            "Explanation": "Midnight Commander, a terminal based file manager.\nNavigate the directory structure using the arrow keys, the mouse or by typing the commands into the terminal.",
            "More Information Link": "https://midnight-commander.org"
        }
    },
    "mcookie": {
        "linux": {
            "Examples": {
                "Generate a random number": "mcookie",
                "Generate a random number, using a specific number of bytes from a file as a seed for the randomness": "mcookie --file {{path/to/file}} --max-size {{number_of_bytes}}",
                "Generate a random number, using the contents of a file as a seed for the randomness": "mcookie --file {{path/to/file}}",
                "Print the details of the randomness used, such as the origin and seed for each source": "mcookie --verbose"
            },
            "Explanation": "Generates random 128 bit hexadecimal numbers.",
            "More Information Link": ""
        }
    },
    "md5": {
        "osx": {
            "Examples": {
                "Calculate MD5 checksums for multiple files": "md5 {{filename1}} {{filename2}}",
                "Calculate the MD5 checksum for a file": "md5 {{filename}}",
                "Output only the md5 checksum (no filename)": "md5 -q {{filename}}",
                "Print a checksum of the given string": "md5 -s {{string}}"
            },
            "Explanation": "Calculate MD5 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "md5sum": {
        "common": {
            "Examples": {
                "Calculate MD5 checksums for multiple files": "md5sum {{filename1}} {{filename2}}",
                "Calculate the MD5 checksum for a file": "md5sum {{filename1}}",
                "Read a file of MD5SUMs and verify all files have matching checksums": "md5sum -c {{filename.md5}}"
            },
            "Explanation": "Calculate MD5 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "mdadm": {
        "linux": {
            "Examples": {
                "Add disk to array": "mdadm {{/path/to/raid_device_file}} -a {{/path/to/disk_device_file}}",
                "Create array": "mdadm --create {{/path/to/raid_device_file}} --level {{raid_level}} --raid-devices {{number_of_disks}} {{/path/to/disk_device_file}}",
                "Mark disk as failed": "mdadm {{/path/to/raid_device_file}} -f {{/path/to/disk_device_file}}",
                "Remove disk": "mdadm {{/path/to/raid_device_file}} -r {{/path/to/disk_device_file}}",
                "Show RAID info": "mdadm -D {{/path/to/raid_device_file}}",
                "Stop array": "mdadm -S {{/path/to/raid_device_file}}"
            },
            "Explanation": "RAID management utility.",
            "More Information Link": ""
        }
    },
    "mdbook": {
        "linux": {
            "Examples": {
                "Clean the directory with the generated book": "mdbook clean",
                "Create a mdbook project in a specific directory": "mdbook init {{path/to/directory}}",
                "Create a mdbook project in the current directory": "mdbook init",
                "Serve a book at `http://localhost:3000`, auto build when file changes": "mdbook serve",
                "Watch a set of markdown files and automatically build when a file is changed": "mdbook watch"
            },
            "Explanation": "Create online books by writing makrdown files.",
            "More Information Link": "https://rust-lang.github.io/mdBook/"
        }
    },
    "mdfind": {
        "osx": {
            "Examples": {
                "Find a file by its content": "mdfind {{query}}",
                "Find a file by its name": "mdfind -name {{file}}",
                "Find a file containing a string, in a given directory": "mdfind -onlyin {{directory}} {{query}}"
            },
            "Explanation": "List files matching a given query.",
            "More Information Link": ""
        }
    },
    "mdls": {
        "osx": {
            "Examples": {
                "Display a specific metadata attribute": "mdls -name {{attribute}} {{path/to/file}}",
                "Display the list of metadata attributes for file": "mdls {{path/to/file}}"
            },
            "Explanation": "Display the metadata attributes for a file.",
            "More Information Link": ""
        }
    },
    "mdp": {
        "common": {
            "Examples": {
                "Disable fading transitions": "mdp --nofade {{presentation.md}}",
                "Disable transparency in transparent terminals": "mdp --notrans {{presentation.md}}",
                "Invert font colors to use in terminals with light background": "mdp --invert {{presentation.md}}",
                "Launch a presentation in the terminal from a markdown file": "mdp {{presentation.md}}"
            },
            "Explanation": "A command-line based tool to make presentations from markdown files.",
            "More Information Link": "https://github.com/visit1985/mdp"
        }
    },
    "mdutil": {
        "osx": {
            "Examples": {
                "Erase the metadata stores and restart the indexing process": "mdutil -E {{path/to/volume}}",
                "Show the indexing status of the startup volume": "mdutil -s {{/}}",
                "Turn on/off the Spotlight indexing for a given volume": "mdutil -i {{on|off}} {{path/to/volume}}"
            },
            "Explanation": "Manage the metadata stores used by Spotlight for indexing.",
            "More Information Link": ""
        }
    },
    "mediainfo": {
        "common": {
            "Examples": {
                "Display metadata for a given file in the console": "mediainfo {{file}}",
                "Display the list of metadata attributes that can be extracted": "mediainfo --Info-Parameters",
                "Store the output to a given file along with displaying in the console": "mediainfo --Logfile={{out.txt}} {{file}}"
            },
            "Explanation": "Display metadata from video and audio files.",
            "More Information Link": "https://mediaarea.net/MediaInfo"
        }
    },
    "meld": {
        "common": {
            "Examples": {
                "Compare 2 directories": "meld {{path/to/directory_1}} {{path/to/directory_2}}",
                "Compare 2 files": "meld {{path/to/file_1}} {{path/to/file_2}}",
                "Compare 3 files": "meld {{path/to/file_1}} {{path/to/file_2}} {{path/to/file_3}}",
                "Compare multiple sets of files": "meld --diff {{path/to/file_1}} {{path/to/file_2}} --diff {{path/to/file_3}} {{path/to/file_4}}",
                "Open a comparison as a new tab in a pre-existing meld instance": "meld --newtab {{path/to/file_1}} {{path/to/file_2}}",
                "Start meld": "meld"
            },
            "Explanation": "Graphical diffing and merging tool.",
            "More Information Link": "https://meldmerge.org/"
        }
    },
    "mesg": {
        "common": {
            "Examples": {
                "Check terminal's openness to write messages": "mesg",
                "Disable receiving messages from the write command": "mesg n",
                "Enable receiving messages from the write command": "mesg y"
            },
            "Explanation": "Check or set a terminal's ability to receive messages from other users, usually from the write command.\nSee also `write`.",
            "More Information Link": ""
        }
    },
    "meshlabserver": {
        "common": {
            "Examples": {
                "Convert a WRL file to a OFF file, including the vertex and face normals in the output mesh": "meshlabserver -i {{input.wrl}} -o {{output.off}} -om vn fn",
                "Convert an STL file to an OBJ file": "meshlabserver -i {{input.stl}} -o {{output.obj}}",
                "Dump a list of all the available processing filters into a file": "meshlabserver -d {{filename}}",
                "Process a 3D file using a filter script created in the MeshLab GUI (Filters > Show current filter script > Save Script)": "meshlabserver -i {{input.ply}} -o {{output.ply}} -s {{filter_script.mlx}}",
                "Process a 3D file using a filter script, writing the output of the filters into a log file": "meshlabserver -i {{input.x3d}} -o {{output.x3d}} -s {{filter_script.mlx}} -l {{logfile}}"
            },
            "Explanation": "Command line interface for the MeshLab 3D mesh processing software.",
            "More Information Link": ""
        }
    },
    "meson": {
        "common": {
            "Examples": {
                "Build the project": "meson compile -C {{path/to/build_dir}}",
                "Configure builddir with default values": "meson setup {{build_dir}}",
                "Generate a c project with a given name and version": "meson init --language={{c}} --name={{myproject}} --version={{0.1}}",
                "Show the help": "meson --help",
                "Show version info": "meson --version"
            },
            "Explanation": "SCons-like build system that uses python as a front-end language and Ninja as a building backend.",
            "More Information Link": "https://mesonbuild.com"
        }
    },
    "meteor": {
        "common": {
            "Examples": {
                "Add a package to the project": "meteor add {{package_name}}",
                "Create a production build of the project as a tarball under the given directory": "meteor build {{path/to/directory}}",
                "Create a project under the given directory": "meteor create {{path/to/directory}}",
                "Display the list of packages the project is currently using": "meteor list",
                "Remove a package from the project": "meteor remove {{package_name}}",
                "Run a meteor project from its root directory in development mode": "meteor"
            },
            "Explanation": "Full-stack javascript platform for building web applications.",
            "More Information Link": "https://meteor.com"
        }
    },
    "micro": {
        "common": {
            "Examples": {
                "Cut the entire line": "Ctrl + K",
                "Execute a command": "Ctrl + E {{command}} <Enter>",
                "Open a file": "micro {{file}}",
                "Perform a substitution in the whole file": "Ctrl + E replaceall \"{{pattern}}\" \"{{replacement}}\" <Enter>",
                "Quit": "Ctrl + Q",
                "Search for a pattern in the file (press `Ctrl + N`/`Ctrl + P` to go to next/previous match)": "Ctrl + F \"{{pattern}}\" <Enter>"
            },
            "Explanation": "Micro is a modern and intuitive terminal-based text editor.\nYou can use your keyboard, but also your mouse to navigate and/or select text.",
            "More Information Link": "https://micro-editor.github.io"
        }
    },
    "microcom": {
        "linux": {
            "Examples": {
                "Establish a telnet connection to the specified host": "microcom --telnet {{hostname}}:{{port}}",
                "Open a serial port using the specified baud rate": "microcom --port {{path/to/serial_port}} --speed {{baud_rate}}"
            },
            "Explanation": "A minimalistic terminal program, used to access remote devices via a serial, CAN or telnet connection from the console.",
            "More Information Link": ""
        }
    },
    "middleman": {
        "common": {
            "Examples": {
                "Build the project in the current directory to prepare for deployment": "bundle exec middleman build",
                "Create a new Middleman project": "middleman init \"{{project_name}}\"",
                "Deploy the Middleman project in the current directory": "middleman deploy",
                "Start local server for current project on a specified port": "middleman server -p \"{{port}}\"",
                "Start local server for current project on port 4567": "middleman server"
            },
            "Explanation": "Static site generator written in Ruby.",
            "More Information Link": "https://middlemanapp.com/"
        }
    },
    "mimetype": {
        "linux": {
            "Examples": {
                "Determine the MIME type of stdin (does not check a filename)": "{{some_command}} | mimetype --stdin",
                "Display a description of the MIME type": "mimetype --describe {{path/to/file}}",
                "Display all the possible MIME types of a given file in confidence order": "mimetype --all {{path/to/file}}",
                "Display debug information about how the MIME type was determined": "mimetype --debug {{path/to/file}}",
                "Display only the MIME type, and not the filename": "mimetype --brief {{path/to/file}}",
                "Explicitly specify the 2-letter language code of the output": "mimetype --language {{path/to/file}}",
                "Print the MIME type of a given file": "mimetype {{path/to/file}}"
            },
            "Explanation": "Automatically determine the MIME type of a file.",
            "More Information Link": ""
        }
    },
    "minetest": {
        "common": {
            "Examples": {
                "Only write errors to the console": "minetest --quiet",
                "Start minetest in client mode": "minetest",
                "Start minetest in server mode": "minetest --server",
                "Write logs to a specific file": "minetest --logfile {{path/to/file}}"
            },
            "Explanation": "Multiplayer infinite-world block sandbox.\nSee also `minetestserver`, the server-only binary.",
            "More Information Link": "https://wiki.minetest.net/Minetest"
        }
    },
    "minetestserver": {
        "common": {
            "Examples": {
                "List available worlds": "minetestserver --world list",
                "List the available game IDs": "minetestserver --gameid list",
                "Listen on a specific port": "minetestserver --port {{34567}}",
                "Migrate to a different data backend": "minetestserver --migrate {{sqlite3|leveldb|redis}}",
                "Specify a game to use": "minetestserver --gameid {{game_id}}",
                "Specify the world name to load": "minetestserver --world {{world_name}}",
                "Start an interactive terminal after starting the server": "minetestserver --terminal",
                "Start the server": "minetestserver"
            },
            "Explanation": "Multiplayer infinite-world block sandbox server.\nSee also `minetest`, the graphical client.",
            "More Information Link": "https://wiki.minetest.net/Setting_up_a_server"
        }
    },
    "minikube": {
        "common": {
            "Examples": {
                "Access a service named my_service exposed via a node port and get the url": "minikube service {{my_service}} --url",
                "Delete the cluster": "minikube delete",
                "Get the IP address of the cluster": "minikube ip",
                "Open kubernetes dashboard in a browser": "minikube dashboard",
                "Start the cluster": "minikube start",
                "Stop the running cluster": "minikube stop"
            },
            "Explanation": "Tool to run Kubernetes locally.",
            "More Information Link": "https://github.com/kubernetes/minikube"
        }
    },
    "mitmdump": {
        "common": {
            "Examples": {
                "Filter a saved traffic file to just POST requests": "mitmdump -nr {{input_filename}} -w {{output_filename}} \"{{~m post}}\"",
                "Replay a saved traffic file": "mitmdump -nc {{filename}}",
                "Start a proxy and save all output to a file": "mitmdump -w {{filename}}"
            },
            "Explanation": "View, record, and programmatically transform HTTP traffic.\nThe command-line counterpart to mitmproxy.",
            "More Information Link": "https://docs.mitmproxy.org/stable/overview-tools/#mitmdump"
        }
    },
    "mitmproxy": {
        "common": {
            "Examples": {
                "Start mitmproxy bound to custom address and port": "mitmproxy -b {{ip_address}} -p {{port}}",
                "Start mitmproxy with default settings": "mitmproxy"
            },
            "Explanation": "An interactive man-in-the-middle HTTP proxy.",
            "More Information Link": "https://mitmproxy.org"
        }
    },
    "mix": {
        "common": {
            "Examples": {
                "Compile project": "mix compile",
                "Create a new project": "mix new {{project_name}}",
                "Execute a particular file": "mix run {{my_script.exs}}",
                "List all mix commands": "mix help",
                "Run project tests": "mix test"
            },
            "Explanation": "Mix is a build tool that provides tasks for creating, compiling, and testing Elixir projects, managing its dependencies, and more.",
            "More Information Link": "https://hexdocs.pm/mix"
        }
    },
    "mkcert": {
        "common": {
            "Examples": {
                "Generate certificate and private key for a given domain": "mkcert {{example.org}}",
                "Generate certificate and private key for multiple domains": "mkcert {{example.org}} {{myapp.dev}} {{127.0.0.1}}",
                "Generate wildcard certificate and private key for a given domain and its subdomains": "mkcert \"{{*.example.it}}\"",
                "Install the local CA in the system trust store": "mkcert -install",
                "Uninstall the local CA": "mkcert -uninstall"
            },
            "Explanation": "Tool for making locally-trusted development certificates.",
            "More Information Link": "https://github.com/FiloSottile/mkcert"
        }
    },
    "mkdir": {
        "common": {
            "Examples": {
                "Create a directory in current directory or given path": "mkdir {{directory}}",
                "Create directories recursively (useful for creating nested dirs)": "mkdir -p {{path/to/directory}}"
            },
            "Explanation": "Creates a directory.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Create a directory": "mkdir {{directory_name}}",
                "Recursively create a nested directory tree": "mkdir {{path/to/sub_directory_name}}"
            },
            "Explanation": "Creates a directory.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/mkdir"
        }
    },
    "mke2fs": {
        "linux": {
            "Examples": {
                "Create an ext2 filesystem in partition 1 of device b (`sdb1`)": "mkfs.ext2 {{/dev/sdb1}}",
                "Create an ext3 filesystem in partition 1 of device b (`sdb1`)": "mkfs.ext3 {{/dev/sdb1}}"
            },
            "Explanation": "Creates a Linux filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfifo": {
        "common": {
            "Examples": {
                "Create a named pipe at a given path": "mkfifo {{path/to/pipe}}"
            },
            "Explanation": "Makes FIFOs (named pipes).",
            "More Information Link": ""
        }
    },
    "mkfile": {
        "osx": {
            "Examples": {
                "Create a file of a given size and unit (bytes, KB, MB, GB)": "mkfile -n {{size}}{{b|k|m|g}} {{filename}}",
                "Create an empty file of 15 kilobytes": "mkfile -n {{15k}} {{filename}}",
                "Create two files of 4 megabytes each": "mkfile -n {{4m}} {{first_filename}} {{second_filename}}"
            },
            "Explanation": "Create one or more empty files of any size.",
            "More Information Link": ""
        }
    },
    "mkfs": {
        "linux": {
            "Examples": {
                "Build a Linux ext2 filesystem on a partition": "mkfs {{path/to/partition}}",
                "Build a filesystem of a specified type": "mkfs -t {{ext4}} {{path/to/partition}}",
                "Build a filesystem of a specified type and check for bad blocks": "mkfs -c -t {{ntfs}} {{path/to/partition}}"
            },
            "Explanation": "Build a Linux filesystem on a hard disk partition.\nThis command is deprecated in favor of filesystem specific mkfs.<type> utils.",
            "More Information Link": ""
        }
    },
    "mkfs.cramfs": {
        "linux": {
            "Examples": {
                "Create a ROM filesystem inside partition 1 on device b (`sdb1`)": "mkfs.cramfs {{/dev/sdb1}}",
                "Create a ROM filesystem with a volume-name": "mkfs.cramfs -n {{volume_name}} {{/dev/sdb1}}"
            },
            "Explanation": "Creates a ROM filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfs.exfat": {
        "linux": {
            "Examples": {
                "Create an exfat filesystem inside partition 1 on device b (`sdb1`)": "mkfs.exfat {{/dev/sdb1}}",
                "Create filesystem with a volume-id": "mkfs.exfat -i {{volume_id}} {{/dev/sdb1}}",
                "Create filesystem with a volume-name": "mkfs.exfat -n {{volume_name}} {{/dev/sdb1}}"
            },
            "Explanation": "Creates an exfat filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfs.ext4": {
        "linux": {
            "Examples": {
                "Create an ext4 filesystem inside partition 1 on device b (`sdb1`)": "sudo mkfs.ext4 {{/dev/sdb1}}",
                "Create an ext4 filesystem with a volume-label": "sudo mkfs.ext4 -L {{volume_label}} {{/dev/sdb1}}"
            },
            "Explanation": "Creates an ext4 filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfs.fat": {
        "linux": {
            "Examples": {
                "Create a fat filesystem inside partition 1 on device b (`sdb1`)": "mkfs.fat {{/dev/sdb1}}",
                "Create filesystem with a volume-id": "mkfs.fat -i {{volume_id}} {{/dev/sdb1}}",
                "Create filesystem with a volume-name": "mkfs.fat -n {{volume_name}} {{/dev/sdb1}}",
                "Use 5 instead of 2 file allocation tables": "mkfs.fat -f 5 {{/dev/sdb1}}"
            },
            "Explanation": "Creates an MS-DOS filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfs.minix": {
        "linux": {
            "Examples": {
                "Create a Minix filesystem inside partition 1 on device b (`sdb1`)": "mkfs.minix {{/dev/sdb1}}"
            },
            "Explanation": "Creates a Minix filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfs.ntfs": {
        "linux": {
            "Examples": {
                "Create a NTFS filesystem inside partition 1 on device b (`sdb1`)": "mkfs.ntfs {{/dev/sdb1}}",
                "Create filesystem with a volume-label": "mkfs.ntfs -L {{volume_label}} {{/dev/sdb1}}",
                "Create filesystem with specific UUID": "mkfs.ntfs -U {{UUID}} {{/dev/sdb1}}"
            },
            "Explanation": "Creates a NTFS filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkfs.vfat": {
        "linux": {
            "Examples": {
                "Create a.vfat filesystem inside partition 1 on device b (`sdb1`)": "mkfs.vfat {{/dev/sdb1}}",
                "Create filesystem with a volume-id": "mkfs.vfat -i {{volume_id}} {{/dev/sdb1}}",
                "Create filesystem with a volume-name": "mkfs.vfat -n {{volume_name}} {{/dev/sdb1}}",
                "Use 5 instead of 2 file allocation tables": "mkfs.vfat -f 5 {{/dev/sdb1}}"
            },
            "Explanation": "Creates an MS-DOS filesystem inside a partition.",
            "More Information Link": ""
        }
    },
    "mkisofs": {
        "linux": {
            "Examples": {
                "Create an ISO from a directory": "mkisofs -o {{filename.iso}} {{path/to/source_directory}}",
                "Set the disc label when creating an ISO": "mkisofs -o {{filename.iso}} -V \"{{label_name}}\" {{path/to/source_directory}}"
            },
            "Explanation": "Create ISO files from directories.\nAlso aliased as `genisoimage`.",
            "More Information Link": ""
        }
    },
    "mklink": {
        "windows": {
            "Examples": {
                "Create a directory junction": "mklink /j {{path/to/link}} {{path/to/source_file}}",
                "Create a hard link to a file": "mklink /h {{path/to/link}} {{path/to/source_file}}",
                "Create a symbolic link to a directory": "mklink /d {{path/to/link}} {{path/to/source_directory}}",
                "Create a symbolic link to a file": "mklink {{path/to/link}} {{path/to/source_file}}"
            },
            "Explanation": "Create symbolic links.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/mklink"
        }
    },
    "mknod": {
        "linux": {
            "Examples": {
                "Create a FIFO (queue) device": "sudo mknod {{path/to/device_file}} p",
                "Create a block device": "sudo mknod {{path/to/device_file}} b {{major_device_number}} {{minor_device_number}}",
                "Create a character device": "sudo mknod {{path/to/device_file}} c {{major_device_number}} {{minor_device_number}}",
                "Create a device file with default SELinux security context": "sudo mknod -Z {{path/to/device_file}} {{type}} {{major_device_number}} {{minor_device_number}}"
            },
            "Explanation": "Create block or character device special files.",
            "More Information Link": ""
        }
    },
    "mkswap": {
        "linux": {
            "Examples": {
                "Check a partition for bad blocks before creating the swap area": "sudo mkswap -c {{/dev/sdb7}}",
                "Setup a given partition as swap area": "sudo mkswap {{/dev/sdb7}}",
                "Specify a label for the file (to allow `swapon` to use the label)": "sudo mkswap -L {{swap1}} {{path/to/file}}",
                "Use a given file as swap area": "sudo mkswap {{path/to/file}}"
            },
            "Explanation": "Sets up a Linux swap area on a device or in a file.",
            "More Information Link": ""
        }
    },
    "mktemp": {
        "common": {
            "Examples": {
                "Create a temporary directory and return the absolute path to it": "mktemp -d",
                "Create a temporary file with a specified suffix": "mktemp --suffix \"{{.txt}}\"",
                "Create an empty temporary file and return the absolute path to it": "mktemp"
            },
            "Explanation": "Create a temporary file or directory.",
            "More Information Link": "https://www.gnu.org/software/autogen/mktemp.html"
        }
    },
    "mktorrent": {
        "common": {
            "Examples": {
                "Create a private torrent with a 2^21 KB piece size": "mktorrent -p -a {{tracker_announce_url}} -l {{21}} -o {{path/to/example.torrent}} {{path/to/file_or_directory}}",
                "Create a torrent with 2^21 KB as the piece size": "mktorrent -a {{tracker_announce_url}} -l {{21}} -o {{path/to/example.torrent}} {{path/to/file_or_directory}}",
                "Create a torrent with a comment": "mktorrent -c \"{{comment}}\" -a {{tracker_announce_url}} -l {{21}} -o {{path/to/example.torrent}} {{path/to/file_or_directory}}",
                "Create a torrent with multiple trackers": "mktorrent -a {{tracker_announce_url,tracker_announce_url_2}} -l {{21}} -o {{path/to/example.torrent}} {{path/to/file_or_directory}}",
                "Create a torrent with web seed URLs": "mktorrent -a {{tracker_announce_url}} -w {{web_seed_url}} -l {{21}} -o {{path/to/example.torrent}} {{path/to/file_or_directory}}"
            },
            "Explanation": "A CLI utility to create BitTorrent metainfo files.",
            "More Information Link": "https://github.com/Rudde/mktorrent"
        }
    },
    "mlr": {
        "common": {
            "Examples": {
                "Convert CSV to JSON, performing calculations and display those calculations": "mlr --icsv --ojson put '${{newField1}} = ${{oldFieldA}}/${{oldFieldB}}' {{example.csv}}",
                "Filter lines of a compressed CSV file treating numbers as strings": "mlr --prepipe 'gunzip' --csv filter -S '${{fieldName}} =~ \"{{regexp}}\"' {{example.csv.gz}}",
                "Pretty-print a CSV file in a tabular format": "mlr --icsv --opprint cat {{example.csv}}",
                "Receive JSON and format the output as vertical JSON": "echo '{\"hello\":\"world\", \"foo\":\"bar\"}' | mlr --ijson --ojson --jvstack cat",
                "Receive JSON data and pretty print the output": "echo '{\"hello\":\"world\"}' | mlr --ijson --opprint cat",
                "Sort alphabetically on a field": "mlr --icsv --opprint sort -f {{field}} {{example.csv}}",
                "Sort in descending numerical order on a field": "mlr --icsv --opprint sort -nr {{field}} {{example.csv}}"
            },
            "Explanation": "Miller is like `awk`, `sed`, `cut`, `join`, and `sort` for name-indexed data such as CSV, TSV, and tabular JSON.",
            "More Information Link": "https://johnkerl.org/miller/doc"
        }
    },
    "mmdc": {
        "common": {
            "Examples": {
                "Convert a file to the specified format (automatically determined from the file extension)": "mmdc --input {{input.mmd}} --output {{output.svg}}",
                "Specify the background color of the chart (e.g. `lime`, `\"#D8064F\"`, or `transparent`)": "mmdc --input {{input.mmd}} --output {{output.svg}} --backgroundColor {{color}}",
                "Specify the theme of the chart": "mmdc --input {{input.mmd}} --output {{output.svg}} --theme {{forest|dark|neutral|default}}"
            },
            "Explanation": "CLI for mermaid, a diagram generation tool with a domain-specific language.\nA mermaid definition file is taken as input and a SVG, PNG, or PDF file is generated as output.",
            "More Information Link": "https://mermaid-js.github.io/mermaid/"
        }
    },
    "mmls": {
        "common": {
            "Examples": {
                "Display nested partition tables": "mmls -t {{nested_table_type}} -o {{offset}} {{path/to/image_file}}",
                "Display the partition table in a split EWF image": "mmls -i ewf {{image.e01}} {{image.e02}}",
                "Display the partition table stored in an image file": "mmls {{path/to/image_file}}",
                "Display the partition table with an additional column for the partition size": "mmls -B -i {{path/to/image_file}}"
            },
            "Explanation": "Display the partition layout of a volume system.",
            "More Information Link": "https://wiki.sleuthkit.org/index.php?title=Mmls"
        }
    },
    "mmv": {
        "common": {
            "Examples": {
                "Append all .txt files into one file": "mmv -a \"{{*.txt}}\" \"{{all.txt}}\"",
                "Convert dates in filenames from \"M-D-Y\" format to \"D-M-Y\" format": "mmv \"{{[0-1][0-9]-[0-3][0-9]-[0-9][0-9][0-9][0-9].txt}}\" \"{{#3#4-#1#2-#5#6#7#8.txt}}\"",
                "Copy report6part4.txt to ./french/rapport6partie4.txt along with all similarly named files": "mmv -c \"{{report*part*.txt}}\" \"{{./french/rapport#1partie#2.txt}}\"",
                "Rename all files with a certain extension to a different extension": "mmv \"*{{.old_extension}}\" \"#1{{.new_extension}}\""
            },
            "Explanation": "Move and rename files in bulk.",
            "More Information Link": ""
        }
    },
    "mocha": {
        "common": {
            "Examples": {
                "Run tests contained at a specific location": "mocha {{directory/with/tests}}",
                "Run tests on changes to JavaScript files in the current directory and once initially": "mocha --watch",
                "Run tests that match a specific grep pattern": "mocha --grep {{^regex$}}",
                "Run tests with a specific reporter": "mocha --reporter {{reporter}}",
                "Run tests with default configuration or as configured in `mocha.opts`": "mocha"
            },
            "Explanation": "Execute Mocha JavaScript test runner.",
            "More Information Link": "https://mochajs.org"
        }
    },
    "modinfo": {
        "linux": {
            "Examples": {
                "List all attributes of a kernel module": "modinfo {{kernel_module}}",
                "List the specified attribute only": "modinfo -F {{author|description|license|parm|filename}} {{kernel_module}}"
            },
            "Explanation": "Extract information about a Linux kernel module.",
            "More Information Link": ""
        }
    },
    "modprobe": {
        "linux": {
            "Examples": {
                "Load a module into the kernel": "sudo modprobe {{module_name}}",
                "Pretend to load a module into the kernel, but don't actually do it": "sudo modprobe --dry-run {{module_name}}",
                "Remove a module and those that depend on it from the kernel": "sudo modprobe --remove-dependencies {{module_name}}",
                "Remove a module from the kernel": "sudo modprobe --remove {{module_name}}",
                "Show a kernel module's dependencies": "sudo modprobe --show-depends {{module_name}}"
            },
            "Explanation": "Add or remove modules from the Linux kernel.",
            "More Information Link": ""
        }
    },
    "module": {
        "linux": {
            "Examples": {
                "Display available modules": "module avail",
                "Display loaded modules": "module list",
                "Load a module": "module load {{module_name}}",
                "Search for a module by name": "module spider {{module_name}}",
                "Unload a specific loaded module": "module {{module_name}}",
                "Unload all loaded modules": "module purge"
            },
            "Explanation": "Modify a users' environment using the module command.",
            "More Information Link": "https://lmod.readthedocs.io/en/latest/010_user.html"
        }
    },
    "mogrify": {
        "common": {
            "Examples": {
                "Convert all PNG images in the directory to JPEG": "mogrify -format {{jpg}} {{*.png}}",
                "Double the brightness of all image files in the current directory": "mogrify -modulate {{200}} {{*}}",
                "Halve the saturation of all image files in the current directory": "mogrify -modulate {{100,50}} {{*}}",
                "Resize all JPEG images in the directory to 50% of their initial size": "mogrify -resize {{50%}} {{*.jpg}}",
                "Resize all images starting with \"DSC\" to 800x600": "mogrify -resize {{800x600}} {{DSC*}}"
            },
            "Explanation": "Perform operations on multiple images, such as resizing, cropping, flipping, and adding effects.\nChanges are applied directly to the original file.",
            "More Information Link": "https://imagemagick.org/script/mogrify.php"
        }
    },
    "molecule": {
        "common": {
            "Examples": {
                "Configure the instance": "molecule converge",
                "Create a new ansible role": "molecule init role --role-name {{role_name}}",
                "Login into the instance": "molecule login",
                "Run tests": "molecule test",
                "Start the instance": "molecule create"
            },
            "Explanation": "Molecule helps testing ansible roles.",
            "More Information Link": "https://molecule.readthedocs.io"
        }
    },
    "mongo": {
        "common": {
            "Examples": {
                "Connect to a database": "mongo {{database}}",
                "Connect to a database running on a given host on a given port": "mongo --host {{host}} --port {{port}} {{database}}",
                "Connect to a database with a given username; user will be prompted for password": "mongo --username {{username}} {{database}} --password",
                "Evaluate a javascript expression on the database": "mongo --eval '{{JSON.stringify(db.foo.findOne())}}' {{database}}"
            },
            "Explanation": "MongoDB interactive shell client.",
            "More Information Link": "https://docs.mongodb.com/manual/reference/program/mongo"
        }
    },
    "mongod": {
        "common": {
            "Examples": {
                "Specify a config file": "mongod --config {{filename}}",
                "Specify database profiling level. 0 is off, 1 is only slow operations, 2 is all": "mongod --profile {{0|1|2}}",
                "Specify the port to listen on": "mongod --port {{port}}"
            },
            "Explanation": "The MongoDB database server.",
            "More Information Link": "https://docs.mongodb.com/manual/reference/program/mongod"
        }
    },
    "mongodump": {
        "common": {
            "Examples": {
                "Connect to a given host running on a given port, and create a dump": "mongodump --host {{host}} --port {{port}}",
                "Create a dump of a given collection within a given database": "mongodump --collection {{collection_name}} --db {{database_name}}",
                "Create a dump of a given database": "mongodump --db {{database_name}}",
                "Create a dump of a given database with a given username; user will be prompted for password": "mongodump --username {{username}} {{database}} --password",
                "Create a dump of all databases (this will place the files inside a directory called \"dump\")": "mongodump",
                "Specify an output location for the dump": "mongodump --out {{path/to/directory}}"
            },
            "Explanation": "Utility to export the contents of a MongoDB instance.",
            "More Information Link": "https://docs.mongodb.com/manual/reference/program/mongodump"
        }
    },
    "mongorestore": {
        "common": {
            "Examples": {
                "Import a bson data dump from a directory to a MongoDB database": "mongorestore --db {{database_name}} {{path/to/directory}}",
                "Import a bson data dump from a directory to a given database in a MongoDB server host, running at a given port, with user authentication (user will be prompted for password)": "mongorestore --host {{database_host:port}} --db {{database_name}} --username {{username}} {{path/to/directory}} --password",
                "Import a collection from a bson file to a MongoDB database": "mongorestore --db {{database_name}} {{path/to/file}}",
                "Import a collection from a bson file to a given database in a MongoDB server host, running at a given port, with user authentication (user will be prompted for password)": "mongorestore --host {{database_host:port}} --db {{database_name}} --username {{username}} {{path/to/file}} --password"
            },
            "Explanation": "Utility to import a collection or database from a binary dump into a MongoDB instance.",
            "More Information Link": "https://docs.mongodb.com/manual/reference/program/mongorestore"
        }
    },
    "mono": {
        "linux": {
            "Examples": {
                "Run a .NET assembly": "mono {{path/to/program.exe}}",
                "Run a .NET assembly in debug mode": "mono --debug {{path/to/program.exe}}"
            },
            "Explanation": "Runtime for the .NET Framework.",
            "More Information Link": "https://www.mono-project.com/docs/"
        }
    },
    "monodevelop": {
        "common": {
            "Examples": {
                "Disable redirection of `stdout` and stderr to a log file": "monodevelop --no-redirect",
                "Enable performance monitoring": "monodevelop --perf-log",
                "Force opening a new window instead of switching to an existing one": "monodevelop --new-window",
                "Open a specific file": "monodevelop {{path/to/file}}",
                "Open a specific file with the caret at a specific position": "monodevelop {{path/to/file}};{{line_number}};{{column_number}}",
                "Start Monodevelop": "monodevelop"
            },
            "Explanation": "Cross platform IDE for C#, F# and more.",
            "More Information Link": "https://www.monodevelop.com/"
        }
    },
    "monodis": {
        "common": {
            "Examples": {
                "Disassemble an assembly to textual CIL": "monodis {{path/to/assembly.exe}}",
                "Extract all the embedded resources to the current directory": "monodis --mresources {{path/to/assembly.dll}}",
                "List all the methods in an assembly": "monodis --method {{path/to/assembly.exe}}",
                "List the references of an assembly": "monodis --assemblyref {{path/to/assembly.exe}}",
                "Save the output to a file": "monodis --output={{path/to/output.il}} {{path/to/assembly.exe}}",
                "Show a list of resources embedded within an assembly": "monodis --manifest {{path/to/assembly.dll}}",
                "Show information about an assembly": "monodis --assembly {{path/to/assembly.dll}}"
            },
            "Explanation": "The Mono Common Intermediate Language (CIL) disassembler.",
            "More Information Link": "https://www.mono-project.com/docs/tools+libraries/tools/monodis/"
        }
    },
    "monop": {
        "common": {
            "Examples": {
                "Hide obsolete members": "monop -r:{{path/to/assembly.dll}} --filter-obsolete {{Namespace.Path.To.Type}}",
                "List the other assemblies that a specified assembly references": "monop -r:{{path/to/assembly.dll}} --refs",
                "List the types in an assembly": "monop -r:{{path/to/assembly.exe}}",
                "Only show members defined in the specified Type": "monop -r:{{path/to/assembly.dll}} --only-declared {{Namespace.Path.To.Type}}",
                "Show private members": "monop -r:{{path/to/assembly.dll}} --private {{Namespace.Path.To.Type}}",
                "Show the structure of a Type built-in of the .NET Framework": "monop {{System.String}}",
                "Show the structure of a Type in a specific assembly": "monop -r:{{path/to/assembly.dll}} {{Namespace.Path.To.Type}}"
            },
            "Explanation": "Finds and displays signatures of Types and methods inside .NET assemblies.",
            "More Information Link": ""
        }
    },
    "mons": {
        "linux": {
            "Examples": {
                "Duplicate the primary monitor onto the secondary monitor, using the resolution of the primary monitor": "mons -d",
                "Enable only the primary monitor": "mons -o",
                "Enable only the secondary monitor": "mons -s",
                "Mirror the primary monitor onto the secondary monitor, using the resolution of the secondary monitor": "mons -m"
            },
            "Explanation": "A tool to quickly manage two displays.",
            "More Information Link": "https://github.com/Ventto/mons"
        }
    },
    "montage": {
        "common": {
            "Examples": {
                "Limit the number of rows and columns in the grid, causing input images to overflow into multiple output montages": "montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry +0+0 -tile 2x3 montage_%d.jpg",
                "Resize and crop images to completely fill their grid cells before tiling": "montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry +0+0 -resize 640x480^ -gravity center -crop 640x480+0+0 montage.jpg",
                "Set the grid cell size and resize images to fit it before tiling": "montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry 640x480+0+0 montage.jpg",
                "Tile images into a grid, automatically calculating the grid cell size from the largest image": "montage {{image1.png}} {{image2.jpg}} {{imageN.png}} -geometry +0+0 montage.jpg",
                "Tile images into a grid, automatically resizing images larger than the grid cell size": "montage {{image1.png}} {{image2.jpg}} {{imageN.png}} montage.jpg"
            },
            "Explanation": "Imagemagick image montage tool.\nTiles images into a customisable grid.",
            "More Information Link": "https://imagemagick.org/script/montage.php"
        }
    },
    "more": {
        "common": {
            "Examples": {
                "Exit": "q",
                "Open a file": "more {{source_file}}",
                "Page down": "<Space>",
                "Search for a string (press `n` to go to the next match)": "/{{something}}"
            },
            "Explanation": "Open a file for interactive reading, allowing scrolling and search (in forward direction only).",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Clear the screen before displaying the page": "more {{path/to/file}} /c",
                "Convert tabs to the specified number of spaces": "more {{path/to/file}} /t{{spaces}}",
                "Display full usage information": "more /?",
                "Display paginated output from `stdin`": "{{echo test}} | more",
                "Display paginated output from one or more files": "more {{path/to/file}}",
                "Display the output starting at line 5": "more {{path/to/file}} +{{5}}",
                "Enable extended interactive mode (see help for usage)": "more {{path/to/file}} /e"
            },
            "Explanation": "Display paginated output from `stdin` or a file.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/more"
        }
    },
    "moro": {
        "common": {
            "Examples": {
                "Add a note on the current working day": "moro note {{3 hours on project Foo}}",
                "Invoke `moro` without parameters a second time, to set the current time at the end of the working day": "moro",
                "Invoke `moro` without parameters, to set the current time as the start of the working day": "moro",
                "Show a report of time logs and notes for all working days on record": "moro report --all",
                "Show a report of time logs and notes for the current working day": "moro report",
                "Specify a custom time for the end of the working day": "moro bye {{17:30}}",
                "Specify a custom time for the start of the working day": "moro hi {{09:30}}"
            },
            "Explanation": "Track work time.",
            "More Information Link": "https://moro.js.org"
        }
    },
    "mosh": {
        "common": {
            "Examples": {
                "Connect to a remote server": "mosh {{username}}@{{remote_host}}",
                "Connect to a remote server using a specific port": "mosh --ssh=\"ssh -p {{2222}}\" {{username}}@{{remote_host}}",
                "Connect to a remote server with a specific identity (private key)": "mosh --ssh=\"ssh -i {{/path/to/key_file}}\" {{username}}@{{remote_host}}",
                "Run a command on a remote server": "mosh {{remote_host}} -- {{command -with -flags}}",
                "Select Mosh UDP port (useful when `{{remote_host}}` is behind a NAT)": "mosh -p {{124}} {{username}}@{{remote_host}}",
                "Usage when `mosh-server` binary is outside standard path": "mosh --server={{/path/to/bin/}}mosh-server {{remote_host}}"
            },
            "Explanation": "Mobile Shell (`mosh`) is a robust and responsive replacement for SSH.\n`mosh` persists connections to remote servers while roaming between networks.",
            "More Information Link": "https://mosh.org"
        }
    },
    "mosquitto": {
        "common": {
            "Examples": {
                "Daemonize by forking into the background": "mosquitto --daemon",
                "Listen on a specific port": "mosquitto --port {{8883}}",
                "Specify a configuration file to use": "mosquitto --config-file {{path/to/file.conf}}",
                "Start mosquitto": "mosquitto"
            },
            "Explanation": "An MQTT broker.",
            "More Information Link": "https://mosquitto.org/"
        }
    },
    "mosquitto_passwd": {
        "common": {
            "Examples": {
                "Add a new user to a password file (will prompt to enter the password)": "mosquitto_passwd {{path/to/password_file}} {{username}}",
                "Create the password file if it doesn't already exist": "mosquitto_passwd -c {{path/to/password_file}} {{username}}",
                "Delete the specified username instead": "mosquitto_passwd -D {{path/to/password_file}} {{username}}",
                "Upgrade an old plain-text password file to a hashed password file": "mosquitto_passwd -U {{path/to/password_file}}"
            },
            "Explanation": "Manage password files for mosquitto.\nSee also `mosquitto`, the MQTT server that this manages.",
            "More Information Link": "https://mosquitto.org/man/mosquitto_passwd-1.html"
        }
    },
    "mosquitto_pub": {
        "common": {
            "Examples": {
                "Publish a temperature value of 32 on the topic `sensors/temperature` to 192.168.1.1 (defaults to `localhost`) with Quality of Service (`QoS`) set to 1": "mosquitto_pub -h {{192.168.1.1}} -t {{sensors/temperature}} -m {{32}} -q {{1}}",
                "Publish light switch status and retain the message on the topic `switches/kitchen_lights/status` to a remote host because there may be a long period of time between light switch events": "mosquitto_pub -r -h \"{{iot.eclipse.org}}\" -t {{switches/kitchen_lights/status}} -m \"{{on}}\"",
                "Publish timestamp and temperature data on the topic `sensors/temperature` to a remote host on a non-standard port": "mosquitto_pub -h {{192.168.1.1}} -p {{1885}} -t {{sensors/temperature}} -m \"{{1266193804 32}}\"",
                "Read newline delimited data from `stdin` as a message and publish it to `sensors/temperature` topic": "{{echo data.txt}} | mosquitto_pub -t {{sensors/temperature}} -l",
                "Send the contents of a file (`data.txt`) as a message and publish it to `sensors/temperature` topic": "mosquitto_pub -t {{sensors/temperature}} -f {{data.txt}}",
                "Send the contents of a file (`data.txt`), by reading from `stdin` and send the entire input as a message and publish it to `sensors/temperature` topic": "mosquitto_pub -t {{sensors/temperature}} -s < {{data.txt}}"
            },
            "Explanation": "A simple MQTT version 3.1.1 client that will publish a single message on a topic and exit.",
            "More Information Link": "https://mosquitto.org/man/mosquitto_pub-1.html"
        }
    },
    "mosquitto_sub": {
        "common": {
            "Examples": {
                "Subscribe to all broker status messages publishing on `iot.eclipse.org` port `1885` and print published messages verbosely": "mosquitto_sub -v -h \"iot.eclipse.org\" -p 1885 -t {{\\$SYS/#}}",
                "Subscribe to multiple topics matching a given pattern. (+ takes any metric name)": "mosquitto_sub -t {{sensors/machines/+/temperature/+}}",
                "Subscribe to the topic `sensors/temperature` information with Quality of Service (`QoS`) set to 1. (The default hostname is `localhost` and port `1883`)": "mosquitto_sub -t {{sensors/temperature}} -q {{1}}"
            },
            "Explanation": "A simple MQTT version 3.1.1 client that will subscribe to topics and print the messages that it receives.",
            "More Information Link": "https://mosquitto.org/man/mosquitto_sub-1.html"
        }
    },
    "most": {
        "common": {
            "Examples": {
                "Edit current file": "e",
                "Exit": "Q",
                "Jump to the 100th line": "{{100}}j",
                "Move through opened files": ":O n",
                "Open a file": "most {{path/to/file}}",
                "Open a file at the first occurrence of \"string\"": "most {{file}} +/{{string}}",
                "Open several files": "most {{path/to/file1}} {{path/to/file2}}",
                "Split the current window in half": "<CTRL-x> o"
            },
            "Explanation": "Open one or several files for interactive reading, allowing scrolling and search.",
            "More Information Link": ""
        }
    },
    "mount": {
        "common": {
            "Examples": {
                "Mount a CD-ROM device (with the filetype ISO9660) to /cdrom (readonly)": "mount -t {{iso9660}} -o ro {{/dev/cdrom}} {{/cdrom}}",
                "Mount a device to a directory": "mount -t {{filesystem_type}} {{path/to/device_file}} {{path/to/target_directory}}",
                "Mount a directory to another directory": "mount --bind {{path/to/old_dir}} {{path/to/new_dir}}",
                "Mount a specific filesystem described in /etc/fstab (e.g. \"/dev/sda1 /my_drive ext2 defaults 0 2\")": "mount {{/my_drive}}",
                "Mount all the filesystem defined in /etc/fstab": "mount -a",
                "Show all mounted filesystems": "mount"
            },
            "Explanation": "Provides access to an entire filesystem in one directory.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Mount a share and retry up to 10 times if it fails": "mount -o retry={{retries}} \\\\{{computer_name}}\\{{share_name}} {{Z:}}",
                "Mount a share as an anonymous user": "mount -o anon \\\\{{computer_name}}\\{{share_name}} {{Z:}}",
                "Mount a share to the \"Z\" drive letter": "mount \\\\{{computer_name}}\\{{share_name}} {{Z:}}",
                "Mount a share to the next available drive letter": "mount \\\\{{computer_name}}\\{{share_name}} *",
                "Mount a share using a specific mount type": "mount -o mtype={{soft|hard}} \\\\{{computer_name}}\\{{share_name}} {{Z:}}",
                "Mount a share with a read timeout in seconds (defaults to 0.8, can be 0.9 or 1 to 60)": "mount -o timeout={{seconds}} \\\\{{computer_name}}\\{{share_name}} {{Z:}}",
                "Mount a share with forced case sensitivity": "mount -o casesensitive \\\\{{computer_name}}\\{{share_name}} {{Z:}}"
            },
            "Explanation": "Mount Network File System (NFS) network shares.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/mount"
        }
    },
    "mountpoint": {
        "linux": {
            "Examples": {
                "Check if a directory is a mountpoint": "mountpoint {{path/to/directory}}",
                "Check if a directory is a mountpoint without showing any output": "mountpoint -q {{path/to/directory}}",
                "Show major/minor numbers of a mountpoint's filesystem": "mountpoint --fs-devno {{path/to/directory}}"
            },
            "Explanation": "Test if a directory is a filesystem mountpoint.",
            "More Information Link": ""
        }
    },
    "mp4box": {
        "common": {
            "Examples": {
                "Add an SRT subtitle file into an MP4 file": "mp4box -add {{input_subs.srt}}:lang=eng -add {{input.mp4}} {{output.mp4}}",
                "Combine audio from one file and video from another": "mp4box -add {{input1.mp4}}#audio -add {{input2.mp4}}#video {{output.mp4}",
                "Display information about an existing MP4 file": "mp4box -info {{filename}}"
            },
            "Explanation": "MPEG-4 Systems Toolbox - Muxes streams into MP4 container.",
            "More Information Link": "https://gpac.wp.imt.fr/mp4box"
        }
    },
    "mpc": {
        "common": {
            "Examples": {
                "Forward or rewind the currently playing song": "mpc [+-]{{seconds}}",
                "Play next song": "mpc next",
                "Play previous song": "mpc prev",
                "Show information about the currently playing song": "mpc status",
                "Stop playing": "mpc stop",
                "Toggle play/pause": "mpc toggle"
            },
            "Explanation": "Music Player Client.\nProgram for controlling the Music Player Daemon (MPD).",
            "More Information Link": "https://www.musicpd.org/clients/mpc"
        }
    },
    "mpg321": {
        "common": {
            "Examples": {
                "Enable Basic Keys ( `*` or `/` - Increase or decrease volume, `n` - Skip song, `m` - Mute/unmute.) while playing": "mpg321 -K {{path/to/file_a|URL}} {{path/to/file_b|URL}} {{...}}",
                "Play a directory recursively": "mpg321 -B {{path/to/directory}}",
                "Play all files in the current folder and subfolders, randomly (until interrupted), with Basic Keys enabled": "mpg321 -B -Z -K .",
                "Play an audio source exactly N times (N=0 means forever)": "mpg321 -l {{N}} {{path/to/file_a|URL}} {{path/to/file_b|URL}} {{...}}",
                "Play files randomly until interrupted": "mpg321 -Z {{path/to/file_a|URL}} {{path/to/file_b|URL}} {{...}}",
                "Shuffle the files before playing them once": "mpg321 -z {{path/to/file_a|URL}} {{path/to/file_b|URL}} {{...}}"
            },
            "Explanation": "High Performance MPEG 1.0/2.0/2.5 Audio Player for Layer 1, 2, and 3.\nMpg321 was written (sometime in 1999) to be a drop-in replacement for the (previously) non-free mpg123 player.",
            "More Information Link": "http://mpg321.sourceforge.net/"
        }
    },
    "mpstat": {
        "linux": {
            "Examples": {
                "Display 5 reports, one by one, at 2 second intervals": "mpstat {{2}} {{5}}",
                "Display 5 reports, one by one, from a given processor, at 2 second intervals": "mpstat -P {{0}} {{2}} {{5}}",
                "Display CPU statistics every 2 seconds": "mpstat {{2}}"
            },
            "Explanation": "Report CPU statistics.",
            "More Information Link": ""
        }
    },
    "mpv": {
        "common": {
            "Examples": {
                "Decrease or increase playback speed by 10 %": "[ <or> ]",
                "Display the output of webcam or other video input device": "mpv /dev/{{video0}}",
                "Jump backward/forward 1 minute": "DOWN <or> UP",
                "Jump backward/forward 5 seconds": "LEFT <or> RIGHT",
                "Play a file at a specified speed (0.01 to 100, default 1)": "mpv --speed {{speed}} {{file}}",
                "Play a file using a profile defined in the `mpv.conf` file": "mpv --profile {{profile_name}} {{file}}",
                "Play a video or audio file": "mpv {{file}}",
                "Play a video or audio file from an URL": "mpv '{{https://www.youtube.com/watch?v=dQw4w9WgXcQ}}'"
            },
            "Explanation": "A audio/video player based on MPlayer.",
            "More Information Link": "https://mpv.io"
        }
    },
    "mr": {
        "common": {
            "Examples": {
                "Checkout all repositories to the latest version": "mr checkout",
                "Print the status of all repositories": "mr status",
                "Register a repository": "mr register",
                "Update repositories in 5 concurent jobs": "mr -j{{5}} update"
            },
            "Explanation": "Myrepos manages all your version control repositories at once.",
            "More Information Link": "https://myrepos.branchable.com"
        }
    },
    "msbuild": {
        "common": {
            "Examples": {
                "Build a specific project file": "msbuild {{path/to/project_file}}",
                "Build the first project file in the current directory": "msbuild",
                "Display detailed help information": "msbuild /help",
                "Display detailed information at the end of the log about how the project was configured": "msbuild {{path/to/project_file}} /detailedsummary",
                "Set one or more semicolon-separated properties": "msbuild {{path/to/project_file}} /property:{{name=value}}",
                "Set one or more semicolon-separated targets to build": "msbuild {{path/to/project_file}} /target:{{targets}}",
                "Set the build tools version to use": "msbuild {{path/to/project_file}} /toolsversion:{{version}}"
            },
            "Explanation": "The Microsoft build tool for Visual Studio project solutions.",
            "More Information Link": "https://docs.microsoft.com/visualstudio/msbuild"
        }
    },
    "msfvenom": {
        "common": {
            "Examples": {
                "Create an ELF binary with a reverse TCP handler": "msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST={{local_ip}} LPORT={{local_port}} -f elf > {{path/to/binary}}",
                "Create an EXE binary with a reverse TCP handler": "msfvenom -p windows/x64/meterpreter/reverse_tcp LHOST={{local_ip}} LPORT={{local_port}} -f exe > {{path/to/binary.exe}}",
                "List formats": "msfvenom -l formats",
                "List payloads": "msfvenom -l payloads",
                "Show payload options": "msfvenom -p {{payload}} --list-options"
            },
            "Explanation": "Manually generate payloads for metasploit.",
            "More Information Link": "https://github.com/rapid7/metasploit-framework/wiki/How-to-use-msfvenom"
        }
    },
    "msg": {
        "windows": {
            "Examples": {
                "Send a message from `stdin`": "echo \"{{message}}\" | msg {{username|session_name|session_id}}",
                "Send a message to a specific server": "msg /server:{{server_name}} {{username|session_name|session_id}}",
                "Send a message to a specified user or session": "msg {{username|session_name|session_id}} {{message}}",
                "Send a message to all users of the current machine": "msg *",
                "Set a delay in seconds for a message": "msg /time:{{seconds}}"
            },
            "Explanation": "Send a message to a specific user or session.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/msg"
        }
    },
    "msmtp": {
        "common": {
            "Examples": {
                "Send an email using a specific account configured in `~/.msmtprc`": "echo \"{{Hello world}}\" | msmtp --account={{account_name}} {{to@example.org}}",
                "Send an email using the default account configured in `~/.msmtprc`": "echo \"{{Hello world}}\" | msmtp {{to@example.org}}",
                "Send an email without a configured account. The password should be specified in the `~/.msmtprc` file": "echo \"{{Hello world}}\" | msmtp --host={{localhost}} --port={{999}} --from={{from@example.org}} {{to@example.org}}"
            },
            "Explanation": "An SMTP client.\nIt reads text from standard input and sends it to an SMTP server.",
            "More Information Link": "https://marlam.de/msmtp"
        }
    },
    "mssh": {
        "linux": {
            "Examples": {
                "Open a new window and connect to a group of servers predefined in `~/.mssh_clusters`": "mssh --alias {{alias_name}}",
                "Open a new window and connect to multiple SSH servers": "mssh {{user@host1}} {{user@host2}} {{...}}"
            },
            "Explanation": "GTK+ based SSH client for interacting with multiple SSH servers at once.",
            "More Information Link": ""
        }
    },
    "mtr": {
        "common": {
            "Examples": {
                "Disable IP address and host name mapping": "mtr -n {{host}}",
                "Force IP IPv4 or IPV6": "mtr -4 {{host}}",
                "Generate output after pinging each hop 10 times": "mtr -w {{host}}",
                "Traceroute to a host and continuously ping all intermediary hops": "mtr {{host}}",
                "Wait for a given time (in seconds) before sending another packet to the same hop": "mtr -i {{seconds}} {{host}}"
            },
            "Explanation": "Matt's Traceroute: combined traceroute and ping tool.",
            "More Information Link": "https://bitwizard.nl/mtr"
        }
    },
    "mullvad": {
        "linux": {
            "Examples": {
                "Check status of VPN tunnel": "mullvad status",
                "Enable LAN access while VPN is on": "mullvad lan set allow",
                "Establish the VPN tunnel": "mullvad connect",
                "Link your mullvad account with the specified account number": "mullvad account set {{account_number}}"
            },
            "Explanation": "CLI client for Mullvad VPN.",
            "More Information Link": "https://mullvad.net/"
        }
    },
    "multipass": {
        "common": {
            "Examples": {
                "Delete an instance by name": "multipass delete {{instance_name}}",
                "Launch a new instance, set its name and use a cloud-init configuration file": "multipass launch -n {{instance_name}} --cloud-init {{configuration_file}}",
                "List all the created instances and some of their properties": "multipass list",
                "List the aliases that can be used to launch an instance": "multipass find",
                "Mount a directory into a specific instance": "multipass mount {{path/to/local/directory}} {{instance_name}}:{{path/to/target/directory}}",
                "Open a shell prompt on a specific instance by name": "multipass shell {{instance_name}}",
                "Show the properties of an instance": "multipass info {{instance_name}}",
                "Start a specific instance by name": "multipass start {{instance_name}}"
            },
            "Explanation": "CLI to manage Ubuntu virtual machines using native hypervisors.",
            "More Information Link": "https://multipass.run/"
        }
    },
    "multitail": {
        "common": {
            "Examples": {
                "Automatically add new files to a window": "multitail -Q {{pattern}}",
                "Show 5 logfiles while merging 2 and put them in 2 columns with only one in the left column": "multitail -s 2 -sn 1,3 {{mergefile}} -I {{file1}} {{file2}} {{file3}} {{file4}}",
                "Tail all files in a directory in a single stream": "multitail -Q 1 '{{directory}}/*'",
                "Tail all files matching a pattern in a single stream": "multitail -Q 1 '{{pattern}}'"
            },
            "Explanation": "Extension of tail.",
            "More Information Link": "https://www.vanheusden.com/multitail/examples.php"
        }
    },
    "mutool": {
        "common": {
            "Examples": {
                "Concatenate two PDFs": "mutool merge -o {{output.pdf}} {{input1.pdf}} {{input2.pdf}}",
                "Convert pages 1-10 into 10 PNG images": "mutool convert -o {{image%d.png}} {{file.pdf}} {{1-10}}",
                "Convert pages 2, 3 and 5 of a PDF into text in the standard output": "mutool draw -F {{txt}} {{file.pdf}} {{2,3,5}}",
                "Extract all images, fonts and resources embedded in a PDF out into the current directory": "mutool extract {{input.pdf}}",
                "Query information about all content embedded in a PDF": "mutool info {{input.pdf}}"
            },
            "Explanation": "Convert PDF files, query information and extract data.",
            "More Information Link": "https://mupdf.com/docs"
        }
    },
    "mutt": {
        "common": {
            "Examples": {
                "Open the specified mailbox": "mutt -f {{mailbox}}",
                "Send an email and specify a subject and a cc recipient": "mutt -s {{subject}} -c {{cc@example.com}} {{recipient@example.com}}",
                "Send an email with files attached": "mutt -a {{file1}} {{file2}} -- {{recipient@example.com}}",
                "Specify a draft file containing the header and the body of the message, in RFC 5322 format": "mutt -H {{file}} {{recipient@example.com}}",
                "Specify a file to include as the message body": "mutt -i {{file}} {{recipient@example.com}}"
            },
            "Explanation": "Command-line email client.",
            "More Information Link": "http://mutt.org"
        }
    },
    "mv": {
        "common": {
            "Examples": {
                "Do not overwrite existing files at the target": "mv -n {{source}} {{target}}",
                "Do not prompt for confirmation before overwriting existing files": "mv -f {{source}} {{target}}",
                "Move files in arbitrary locations": "mv {{source}} {{target}}",
                "Move files in verbose mode, showing files after they are moved": "mv -v {{source}} {{target}}",
                "Prompt for confirmation before overwriting existing files, regardless of file permissions": "mv -i {{source}} {{target}}"
            },
            "Explanation": "Move or rename files and directories.",
            "More Information Link": ""
        }
    },
    "mvn": {
        "common": {
            "Examples": {
                "Clean and then package the code with a given build profile": "mvn clean -P{{profile}} package",
                "Compile a project": "mvn compile",
                "Compile and package the compiled code in its distributable format, such as a `jar`": "mvn package",
                "Compile and package, skipping unit tests": "mvn package -Dmaven.test.skip=true",
                "Delete build artifacts from the target directory": "mvn clean",
                "Do a clean and then invoke the package phase": "mvn clean package",
                "Install the built package in local maven repository. (This will invoke the compile and package commands too)": "mvn install",
                "Run a class with a main method": "mvn exec:java -Dexec.mainClass=\"{{com.example.Main}}\" -Dexec.args=\"{{arg1 arg2}}\""
            },
            "Explanation": "Apache Maven.\nTool for building and managing Java-based projects.",
            "More Information Link": "https://maven.apache.org"
        }
    },
    "mycli": {
        "common": {
            "Examples": {
                "Connect to a database (user will be prompted for a password)": "mycli -u {{username}} {{database_name}}",
                "Connect to a database on another host": "mycli -h {{database_host}} -P {{port}} -u {{username}} {{database_name}}",
                "Connect to a local database on port 3306, using the current user's username": "mycli {{database_name}}"
            },
            "Explanation": "A command line client for MySQL that can do auto-completion and syntax highlighting.",
            "More Information Link": "https://mycli.net"
        },
        "linux": {
            "Examples": {
                "Connect to a database on the specified host with the specified user": "mycli -u {{user}} -h {{host}} {{database_name}}",
                "Connect to a database with the currently logged in user": "mycli {{database_name}}",
                "Connect to a database with the specified user": "mycli -u {{user}} {{database_name}}"
            },
            "Explanation": "A CLI for MySQL, MariaDB, and Percona with auto-completion and syntax highlighting.",
            "More Information Link": ""
        }
    },
    "mysql": {
        "common": {
            "Examples": {
                "Connect to a database": "mysql {{database_name}}",
                "Connect to a database on another host": "mysql -h {{database_host}} {{database_name}}",
                "Connect to a database through a Unix socket": "mysql --socket {{path/to/socket.sock}}",
                "Connect to a database, user will be prompted for a password": "mysql -u {{user}} --password {{database_name}}",
                "Execute SQL statements in a script file (batch file)": "mysql -e \"source {{filename.sql}}\" {{database_name}}",
                "Restore a database from a backup created with `mysqldump` (user will be prompted for a password)": "mysql --user {{user}} --password {{database_name}} < {{path/to/backup.sql}}",
                "Restore all databases from a backup (user will be prompted for a password)": "mysql --user {{user}} --password < {{path/to/backup.sql}}"
            },
            "Explanation": "The MySQL command-line tool.",
            "More Information Link": "https://www.mysql.com/"
        }
    },
    "mysqldump": {
        "common": {
            "Examples": {
                "Backup all databases redirecting the output to a file (user will be prompted for a password)": "mysqldump --user {{user}} --password --all-databases > {{path/to/file.sql}}",
                "Create a backup (user will be prompted for a password)": "mysqldump --user {{user}} --password {{database_name}} -r {{path/to/file.sql}}"
            },
            "Explanation": "Backups MySQL databases.\nSee also `mysql` for restoring databases.",
            "More Information Link": "https://dev.mysql.com/doc/refman/en/mysqldump.html"
        }
    },
    "mytop": {
        "common": {
            "Examples": {
                "Connect with a specified username (the user will be prompted for a password)": "mytop -u {{user}} --prompt",
                "Connect with a specified username and password": "mytop -u {{user}} -p {{password}}",
                "Do not show any idle (sleeping) threads": "mytop -u {{user}} -p {{password}} --noidle",
                "Start mytop": "mytop"
            },
            "Explanation": "Display MySQL server performance info like `top`.",
            "More Information Link": "http://www.mysqlfanboy.com/mytop-3"
        }
    },
    "n": {
        "linux": {
            "Examples": {
                "Display installed versions and interactively activate one of them": "n",
                "Execute a file with a given version": "n use {{version}} {{file.js}}",
                "Install a given version of node. If the version is already installed, it will be activated": "n {{version}}",
                "Output binary path for a version": "n bin {{version}}",
                "Remove a version": "n rm {{version}}"
            },
            "Explanation": "Tool to manage multiple node versions.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Display installed versions and interactively activate one of them": "n",
                "Execute a file with a given version": "n use {{version}} {{file.js}}",
                "Install a given version of node. If the version is already installed, it will be activated": "n {{version}}",
                "Output binary path for a version": "n bin {{version}}",
                "Remove a version": "n rm {{version}}"
            },
            "Explanation": "Tool to manage multiple node versions.",
            "More Information Link": ""
        }
    },
    "named": {
        "linux": {
            "Examples": {
                "Listen for queries on a specific port instead of the default port `53`": "named -p {{port}}",
                "Read a custom configuration file": "named -c {{path/to/named.conf}}",
                "Read the default configuration file `/etc/named.conf`, read any initial data and listen for queries": "named",
                "Run the server in the foreground and do not daemonize": "named -f",
                "Use IPv4 or IPv6 only, even if the host machine is capable of utilising other protocols": "named {{-4|-6}}"
            },
            "Explanation": "Execute the DNS (Dynamic Name Service) server daemon that converts host names to IP addresses and vice versa.",
            "More Information Link": "https://linux.die.net/man/8/named"
        }
    },
    "namei": {
        "linux": {
            "Examples": {
                "Display the results in a long-listing format": "namei --long {{path/to/a}} {{path/to/b}} {{path/to/c}}",
                "Don't follow symlinks while resolving": "namei --nosymlinks {{path/to/a}} {{path/to/b}} {{path/to/c}}",
                "Resolve the pathnames specified as the argument parameters": "namei {{path/to/a}} {{path/to/b}} {{path/to/c}}",
                "Show owner and group name of each file": "namei --owners {{path/to/a}} {{path/to/b}} {{path/to/c}}",
                "Show the mode bits of each file type in the style of `ls`": "namei --modes {{path/to/a}} {{path/to/b}} {{path/to/c}}"
            },
            "Explanation": "Follows a pathname (which can be a symbolic link) until a terminal point is found (a file/directory/char device etc).\nThis program is useful for finding \"too many levels of symbolic links\" problems.",
            "More Information Link": ""
        }
    },
    "nano": {
        "common": {
            "Examples": {
                "Before modification, backup separately as `{{current_file_name}}~`": "nano -B {{filename}}",
                "Enable smooth scrolling": "nano -S {{filename}}",
                "Indent new lines to the previous lines' indentation": "nano -i {{filename}}",
                "Open a file positioning the cursor at the specified line and column": "nano +{{line}},{{column}} {{path/to/file}}",
                "Open a specific file": "nano {{path/to/file}}"
            },
            "Explanation": "Simple, easy to use command-line text editor. An enhanced, free Pico clone.",
            "More Information Link": "https://nano-editor.org"
        }
    },
    "nasm": {
        "common": {
            "Examples": {
                "Add a directory (must be written with trailing slash) to the include file search path before assembling": "nasm -i {{/path/to/include_dir/}} {{source.asm}}",
                "Assemble `source.asm` into a binary file `output_file`, in the specified format": "nasm -f {{format}} {{source.asm}} -o {{output_file}}",
                "Assemble `source.asm` into a binary file `source`, in the (default) raw binary format": "nasm {{source.asm}}",
                "Assemble and generate an assembly listing file": "nasm -l {{list_file}} {{source.asm}}",
                "List valid output formats (along with basic nasm help)": "nasm -hf"
            },
            "Explanation": "The Netwide Assembler, a portable 80x86 assembler.",
            "More Information Link": "https://nasm.us"
        }
    },
    "nativefier": {
        "common": {
            "Examples": {
                "Create a desktop app with a custom name": "nativefier --name {{name}} {{url}}",
                "Make a desktop app for a website": "nativefier {{url}}",
                "Use a custom icon, should be a PNG": "nativefier --icon {{path/to/icon.png}} {{url}}"
            },
            "Explanation": "Command-line tool to create a desktop app for any web site with minimal configuration.",
            "More Information Link": "https://github.com/jiahaog/nativefier"
        }
    },
    "nc": {
        "common": {
            "Examples": {
                "Act as proxy and forward data from a local TCP port to the given remote host": "nc -l {{local_port}} | nc {{hostname}} {{remote_port}}",
                "Client stay up after EOF": "nc -q {{timeout}} {{ip_address}}",
                "Connect to a certain port (you can then write to this port)": "nc {{ip_address}} {{port}}",
                "Listen on a specified port and print any data received": "nc -l {{port}}",
                "Receive a file": "nc {{ip_address}} {{port}} > {{file}}",
                "Scan the open ports of a specified host": "nc -v -z {{ip_address}} {{port}}",
                "Serve a file": "nc -l {{port}} < {{file}}",
                "Server stay up after client detach": "nc -k -l {{port}}",
                "Set a timeout": "nc -w {{timeout_in_seconds}} {{ipaddress}} {{port}}"
            },
            "Explanation": "Netcat is a versatile utility for working with TCP or UDP data.",
            "More Information Link": "https://nmap.org/ncat"
        }
    },
    "ncat": {
        "linux": {
            "Examples": {
                "Accept multiple connections and keep ncat open after they have been closed": "ncat -lk {{port}}",
                "Listen for input on the specified port and write it to the specified file": "ncat -l {{port}} > {{path/to/file}}",
                "Write output of specified file to the specified host on the specified port": "ncat {{address}} {{port}} < {{path/to/file}}"
            },
            "Explanation": "Use the normal `cat` functionality over networks.",
            "More Information Link": ""
        }
    },
    "ncdu": {
        "linux": {
            "Examples": {
                "Analyze a given directory": "ncdu {{path/to/directory}}",
                "Analyze the current working directory": "ncdu",
                "Exclude files that match a pattern, argument can be given multiple times to add more patterns": "ncdu --exclude '{{*.txt}}'",
                "Save results to a file": "ncdu -o {{path/to/file}}"
            },
            "Explanation": "Disk usage analyzer with an ncurses interface.",
            "More Information Link": ""
        }
    },
    "ncmpcpp": {
        "common": {
            "Examples": {
                "Connect to a music player daemon on a given host and port": "ncmpcpp --host {{ip}} --port {{port}}",
                "Display metadata of the current song to console": "ncmpcpp --current-song",
                "Use a different set of key bindings from a file": "ncmpcpp --bindings {{file}}",
                "Use a specified configuration file": "ncmpcpp --config {{file}}"
            },
            "Explanation": "A command line music player client for the Music Player Daemon.",
            "More Information Link": "https://rybczak.net/ncmpcpp"
        }
    },
    "ndctl": {
        "linux": {
            "Examples": {
                "Change the mode of a namespace to 'raw'": "ndctl create-namespace --reconfigure={{namespaceX.Y}} --mode={{raw}}",
                "Check a sector mode namespace for consistency, and repair if needed": "ndctl check-namespace --repair {{namespaceX.Y}}",
                "Create an 'fsdax' mode namespace": "ndctl create-namespace --mode={{fsdax}}",
                "List a specific namespace and include lots of additional information": "ndctl list -vvv --namespace={{namespaceX.Y}}",
                "List all namespaces, regions, and buses (including disabled ones)": "ndctl list --namespaces --regions --buses --idle",
                "Remove a namespace (when applicable) or reset it to an initial state": "ndctl destroy-namespace --force {{namespaceX.Y}}",
                "Run a monitor to watch for SMART health events for NVDIMMs on the 'ACPI.NFIT' bus": "ndctl monitor --bus={{ACPI.NFIT}}"
            },
            "Explanation": "Utility for managing Non-Volatile DIMMs.",
            "More Information Link": ""
        }
    },
    "ned": {
        "common": {
            "Examples": {
                "Preview results of a find and replace without updating the target files": "ned '{{^[sb]ad}}' --replace '{{happy}}' --stdout {{.}}",
                "Recursively search starting in the current directory, ignoring case": "ned --ignore-case --recursive '{{^[dl]og}}' {{.}}",
                "Replace changing case": "ned '{{([a-z]+) dog}}' --case-replacements --replace '{{\\U$1\\E! dog}}' --stdout {{.}}",
                "Replace using numbered group references": "ned '{{the ([a-z]+) dog and the ([a-z]+) dog}}' --replace '{{the $2 dog and the $1 dog}}' {{.}}",
                "Search always showing colored output": "ned --colors '{{^[dl]og}}' {{.}}",
                "Search ignoring certain files": "ned --recursive --exclude '{{*.htm}}' '{{^[dl]og}}' {{.}}",
                "Search never showing colored output": "ned --colors=never '{{^[dl]og}}' {{.}}",
                "Simple replace": "ned '{{dog}}' --replace '{{cat}}' {{.}}"
            },
            "Explanation": "Is like `grep` but with powerful replace capabilities.\nUnlike `sed`, as it isn't restricted to line oriented editing.",
            "More Information Link": "https://github.com/nevdelap/ned"
        }
    },
    "nemo": {
        "linux": {
            "Examples": {
                "Close all open nemo windows": "nemo --quit",
                "Open a new window showing the current directory": "nemo .",
                "Open a new window showing the user's home directory": "nemo"
            },
            "Explanation": "File manager and graphical shell for Cinnamon.",
            "More Information Link": "https://github.com/linuxmint/nemo"
        }
    },
    "neofetch": {
        "common": {
            "Examples": {
                "Enable/Disable CPU brand in output": "neofetch --cpu_brand {{on|off}}",
                "Hide/Show OS architecture": "neofetch --os_arch {{on|off}}",
                "Return the default config, and create it if it's the first time the program runs": "neofetch",
                "Trigger an info line from appearing in the output, where 'infoname' is the function name in the config file, e.g. memory": "neofetch --{{enable|disable}} {{infoname}}"
            },
            "Explanation": "CLI tool to display information about your operating system, software and hardware.",
            "More Information Link": "https://github.com/dylanaraps/neofetch"
        }
    },
    "nethogs": {
        "linux": {
            "Examples": {
                "Monitor bandwidth on multiple devices": "sudo nethogs {{device1}} {{device2}}",
                "Monitor bandwidth on specific device": "sudo nethogs {{device}}",
                "Specify refresh rate": "sudo nethogs -t {{seconds}}",
                "Start nethogs as root (default device is eth0)": "sudo nethogs"
            },
            "Explanation": "Monitor bandwidth usage per process.",
            "More Information Link": ""
        }
    },
    "netlify": {
        "common": {
            "Examples": {
                "Configure continuous deployment for a new or an existing site": "netlify init",
                "Deploy the contents of a directory to Netlify": "netlify deploy",
                "Login to the Netlify account": "netlify login",
                "Start a local dev server": "netlify dev"
            },
            "Explanation": "Deploy sites and configure continuous deployment to the Netlify platform.",
            "More Information Link": "https://www.netlify.com/docs/cli/"
        }
    },
    "netselect": {
        "linux": {
            "Examples": {
                "Choose the server with the lowest latency": "sudo netselect {{host_1}} {{host_2}}",
                "Define maximum TTL (time to live)": "sudo netselect -m {{10}} {{host_1}} {{host_2}}",
                "Display nameserver resolution and statistics": "sudo netselect -vv {{host_1}} {{host_2}}",
                "List available options": "netselect",
                "Print fastest N servers among the hosts": "sudo netselect -s {{N}} {{host_1}} {{host_2}} {{host_3}}"
            },
            "Explanation": "Speed test for choosing a fast network server.",
            "More Information Link": "https://github.com/apenwarr/netselect> ."
        }
    },
    "netselect-apt": {
        "linux": {
            "Examples": {
                "Create `sources.list` using the lowest latency server": "sudo netselect-apt",
                "Include non-free section": "sudo netselect-apt --non-free",
                "Specify Debian branch, stable is used by default": "sudo netselect-apt {{testing}}",
                "Specify a country for the mirror list lookup": "sudo netselect-apt -c {{India}}"
            },
            "Explanation": "Create a `sources.list` file for a Debian mirror with the lowest latency.",
            "More Information Link": "https://manpages.debian.org/buster/netselect-apt/netselect-apt.1.en.html"
        }
    },
    "netstat": {
        "linux": {
            "Examples": {
                "Display PID and program names": "netstat -p",
                "List all listening ports": "netstat -l",
                "List all ports": "netstat -a",
                "List information continuously": "netstat -c",
                "List listening TCP and UDP ports (+ user and process if you're root)": "netstat -lepunt",
                "List listening TCP ports": "netstat -t",
                "List routes and do not resolve IP to hostname": "netstat -rn",
                "Print the routing table": "netstat -nr"
            },
            "Explanation": "Displays network-related information such as open connections, open socket ports, etc.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Display PID and program names for a specific protocol": "netstat -p {{protocol}}",
                "List all listening ports": "netstat -l",
                "List all ports": "netstat -a",
                "List listening TCP ports": "netstat -t",
                "Print the routing table": "netstat -nr"
            },
            "Explanation": "Displays network-related information such as open connections, open socket ports, etc.",
            "More Information Link": ""
        }
    },
    "networksetup": {
        "osx": {
            "Examples": {
                "Connect to a particular Wi-Fi network": "networksetup -setairportnetwork {{en0}} \"{{Airport Network SSID}}\" {{password}}",
                "Get currently connected Wi-Fi network name (Wi-Fi device usually en0 or en1)": "networksetup -getairportnetwork {{en0}}",
                "List available network service providers (Ethernet, Wi-Fi, Bluetooth, etc)": "networksetup -listallnetworkservices",
                "Show network settings for a particular networking device": "networksetup -getinfo \"{{Wi-Fi}}\""
            },
            "Explanation": "Configuration tool for Network System Preferences.",
            "More Information Link": ""
        }
    },
    "newgrp": {
        "linux": {
            "Examples": {
                "Change user's primary group membership": "newgrp {{group_name}}",
                "Reset primary group membership to user's default group in /etc/passwd": "newgrp"
            },
            "Explanation": "Switch primary group membership.",
            "More Information Link": ""
        }
    },
    "newman": {
        "common": {
            "Examples": {
                "Run a collection (from a URL)": "newman run {{https://www.getpostman.com/collections/631643-f695cab7-6878-eb55-7943-ad88e1ccfd65-JsLv}}",
                "Run a collection (from a file)": "newman run {{path/to/collection.json}}"
            },
            "Explanation": "Collection runner for Postman.",
            "More Information Link": "https://github.com/postmanlabs/newman"
        }
    },
    "newsboat": {
        "common": {
            "Examples": {
                "Alternatively, add feeds manually": "echo {{http://example.com/path/to/feed}} >> \"${HOME}/.newsboat/urls\"",
                "First import feed URLs from an OPML file": "newsboat -i {{my-feeds.xml}}",
                "See keyboard shortcuts (the most relevant are visible in the status line)": "?",
                "Start newsboat and refresh all feeds on startup": "newsboat -r"
            },
            "Explanation": "An RSS/Atom feed reader for text terminals.",
            "More Information Link": "https://newsboat.org/"
        }
    },
    "nextflow": {
        "common": {
            "Examples": {
                "List all downloaded projects": "nextflow list",
                "Pull the latest version of a remote workflow from Bitbucket": "nextflow pull {{user/repo}} -hub bitbucket",
                "Remove cache and intermediate files for a specific run": "nextflow clean -force {{run_name}}",
                "Run a pipeline, use cached results from previous runs": "nextflow run {{main.nf}} -resume",
                "Run a specific release of a remote workflow from GitHub": "nextflow run {{user/repo}} -revision {{release_tag}}",
                "Run with a given work directory for intermediate files, save execution report": "nextflow run {{workflow}} -work-dir {{/path/to/directory}} -with-report {{report.html}}",
                "Show details of previous runs in current directory": "nextflow log",
                "Update Nextflow": "nextflow self-update"
            },
            "Explanation": "Tool for running computational pipelines. Mostly used for bioinformatics workflows.",
            "More Information Link": "https://www.nextflow.io"
        }
    },
    "nf-core": {
        "common": {
            "Examples": {
                "Bump software versions in pipeline recipe": "nf-core bump-version {{path/to/directory}} {{new_version}}",
                "Create a new pipeline skeleton": "nf-core create",
                "Download an nf-core pipeline for offline use": "nf-core download {{pipeline_name}}",
                "Launch an nf-core pipeline": "nf-core launch {{pipeline_name}}",
                "Lint the pipeline code": "nf-core lint {{path/to/directory}}",
                "List existing pipelines on nf-core": "nf-core list"
            },
            "Explanation": "The nf-core framework tools, to create, check and develop best-practice guidelines for Nextflow.",
            "More Information Link": "https://nf-co.re/tools"
        }
    },
    "nfsstat": {
        "windows": {
            "Examples": {
                "Display the recorded number of calls made to the NFS server": "nfsstat",
                "Reset the recorded number of calls made to the NFS server": "nfsstat -z"
            },
            "Explanation": "Display or reset the number of calls made to the NFS server.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/nfsstat"
        }
    },
    "nft": {
        "linux": {
            "Examples": {
                "Add a new chain to accept all inbound traffic": "sudo nft add chain {{inet}} {{filter}} {{input}} \\{ type {{filter}} hook {{input}} priority {{0}} \\; policy {{accept}} \\}",
                "Add a new rule to accept several TCP ports": "sudo nft add rule {{inet}} {{filter}} {{input}} {{tcp}} {{dport \\{ telnet, ssh, http, https \\} accept}}",
                "Add a new table with family \"inet\" and table \"filter\"": "sudo nft add table {{inet}} {{filter}}",
                "Delete a rule": "sudo nft delete rule {{inet}} {{filter}} {{input}} handle {{3}}",
                "Save current configuration": "sudo nft list ruleset > {{/etc/nftables.conf}}",
                "Show rule handles": "sudo nft --handle --numeric list chain {{family}} {{table}} {{chain}}",
                "View current configuration": "sudo nft list ruleset"
            },
            "Explanation": "Allows configuration of tables, chains and rules provided by the Linux kernel firewall.\nNftables replaces iptables.",
            "More Information Link": ""
        }
    },
    "ng": {
        "common": {
            "Examples": {
                "Add a new class to one's application": "ng generate class {{class_name}}",
                "Add a new component to one's application": "ng generate component {{component_name}}",
                "Add a new directive to one's application": "ng generate directive {{directive_name}}",
                "Build the application": "ng build",
                "Check the version of your current Angular installation": "ng version",
                "Create a new Angular application inside a directory": "ng new {{project_name}}",
                "Run the application with the following command in its root directory": "ng serve",
                "Run unit tests": "ng test"
            },
            "Explanation": "Command Line Interface (CLI) for creating and managing Angular applications.",
            "More Information Link": "https://angular.io/cli"
        }
    },
    "nginx": {
        "common": {
            "Examples": {
                "Reload the configuration by sending a signal with no downtime": "nginx -s reload",
                "Start server with a custom config file": "nginx -c {{config_file}}",
                "Start server with a prefix for all relative paths in the config file": "nginx -c {{config_file}} -p {{prefix/for/relative/paths}}",
                "Start server with the default config file": "nginx",
                "Test the configuration without affecting the running server": "nginx -t"
            },
            "Explanation": "Nginx web server.",
            "More Information Link": "https://nginx.org/en/"
        }
    },
    "ngrep": {
        "common": {
            "Examples": {
                "Capture traffic crossing port 22 of interface eth0": "ngrep -d {{eth0}} port {{22}}",
                "Capture traffic from or to a host": "ngrep host {{www.example.com}}",
                "Capture traffic of a specific interface": "ngrep -d {{eth0}}",
                "Capture traffic of all interfaces": "ngrep -d any",
                "Filter keyword 'User-Agent:' of interface eth0": "ngrep -d {{eth0}} '{{User-Agent:}}'"
            },
            "Explanation": "Filter network traffic packets using regular expressions.",
            "More Information Link": "https://github.com/jpr5/ngrep"
        }
    },
    "ngrok": {
        "common": {
            "Examples": {
                "Expose TCP traffic on a given port": "ngrok tcp {{22}}",
                "Expose TLS traffic for a specific host and port": "ngrok tls -hostname={{foo.com}} {{443}}",
                "Expose a local HTTP service on a given port": "ngrok http {{80}}",
                "Expose a local HTTP service on a specific host": "ngrok http {{foo.dev}}:{{80}}",
                "Expose a local HTTPS server": "ngrok http https://localhost"
            },
            "Explanation": "Reverse proxy that creates a secure tunnel from a public endpoint to a locally running web service.",
            "More Information Link": "https://ngrok.com"
        }
    },
    "nice": {
        "common": {
            "Examples": {
                "Launch a program with altered priority": "nice -n {{niceness_value}} {{command}}"
            },
            "Explanation": "Execute a program with a custom scheduling priority (niceness).\nNiceness values range from -20 (the highest priority) to 19 (the lowest).",
            "More Information Link": ""
        }
    },
    "nikto": {
        "common": {
            "Examples": {
                "Perform a basic Nikto scan against a target host": "perl nikto.pl -h {{192.168.0.1}}",
                "Scan multiple ports in the same scanning session": "perl nikto.pl -h {{192.168.0.1}} -p {{80,88,443}}",
                "Scan ports and protocols with full URL syntax": "perl nikto.pl -h {{https://192.168.0.1:443/}}",
                "Specify the port number when performing a basic scan": "perl nikto.pl -h {{192.168.0.1}} -p {{443}}",
                "Update to the latest plugins and databases": "perl nikto.pl -update"
            },
            "Explanation": "Web server scanner which performs tests against web servers for multiple items.",
            "More Information Link": "https://cirt.net/Nikto2"
        }
    },
    "nim": {
        "common": {
            "Examples": {
                "Build a release binary optimized for low file size": "nim compile -d:release --opt:size {{file.nim}}",
                "Compile a source file": "nim compile {{file.nim}}",
                "Compile a source file with release optimizations enabled": "nim compile -d:release {{file.nim}}",
                "Compile and run a source file": "nim compile -r {{file.nim}}",
                "Generate HTML documentation for a module (output will be placed in the current directory)": "nim doc {{file.nim}}"
            },
            "Explanation": "The Nim compiler.\nProcesses, compiles and links Nim language source files.",
            "More Information Link": "https://nim-lang.org"
        }
    },
    "nimble": {
        "common": {
            "Examples": {
                "Build a Nimble package": "nimble build",
                "Create a new Nimble package in the current directory": "nimble init",
                "Install a Nimble package": "nimble install",
                "Install a package": "nimble install {{package_name}}",
                "List installed packages": "nimble list -i",
                "Search for packages": "nimble search {{search_string}}"
            },
            "Explanation": "Package manager for the Nim programming language.\nManage Nim projects and their dependencies.",
            "More Information Link": "https://github.com/nim-lang/nimble"
        }
    },
    "ninja": {
        "common": {
            "Examples": {
                "Build a program in a given directory": "ninja -C {{path/to/directory}}",
                "Build in the current directory": "ninja",
                "Show help": "ninja -h",
                "Show targets (e.g. `install` and `uninstall`)": "ninja -t targets"
            },
            "Explanation": "A Build system designed to be fast.",
            "More Information Link": "https://ninja-build.org/manual.html"
        }
    },
    "nix": {
        "common": {
            "Examples": {
                "Optimise Nix store disk usage by combining duplicate files": "nix optimise-store",
                "Search for a package via its name or description": "nix search {{search_term}}",
                "Start a Nix shell with the specified packages available": "nix run {{nixpkgs.pkg1 nixpkgs.pkg2 nixpkgs.pkg3...}}",
                "Start an interactive environment for evaluating Nix expressions": "nix repl",
                "Upgrade Nix to the latest stable version": "nix upgrade-nix"
            },
            "Explanation": "Utilities for the Nix language and store.",
            "More Information Link": "https://nixos.org"
        }
    },
    "nix-build": {
        "common": {
            "Examples": {
                "Build a Nix expression": "nix-build --attr {{expression_name}}",
                "Build a sandboxed Nix expression (on non-nixOS)": "nix-build --attr {{expression_name}} --option sandbox true"
            },
            "Explanation": "Build a Nix expression.",
            "More Information Link": "https://nixos.org/releases/nix/latest/manual#sec-nix-build"
        }
    },
    "nix-collect-garbage": {
        "common": {
            "Examples": {
                "Delete all store paths older than 30 days": "sudo nix-collect-garbage --delete-older-than {{30d}}",
                "Delete all store paths unused by current generations of each profile": "sudo nix-collect-garbage --delete-old",
                "Simulate the deletion of old store paths": "sudo nix-collect-garbage --delete-old --dry-run"
            },
            "Explanation": "Delete unused and unreachable nix store paths.\nGenerations can be listed using `nix-env --list-generations`.",
            "More Information Link": "https://nixos.org/releases/nix/latest/manual/#sec-nix-collect-garbage"
        }
    },
    "nix-env": {
        "common": {
            "Examples": {
                "Install a package from a URL": "nix-env -i {{pkg_name}} --file {{example.com}}",
                "Install package": "nix-env -iA nixpkgs.{{pkg_name}}",
                "List all installed packages": "nix-env -q",
                "Query available packages": "nix-env -qa {{search_term}}",
                "Query installed packages": "nix-env -q {{search_term}}",
                "Uninstall package": "nix-env -e {{pkg_name}}",
                "Upgrade all packages": "nix-env -u",
                "Upgrade one package": "nix-env -u {{pkg_name}}"
            },
            "Explanation": "Manipulate or query Nix user environments.",
            "More Information Link": "https://nixos.org/releases/nix/latest/manual#sec-nix-env"
        }
    },
    "nixos-rebuild": {
        "linux": {
            "Examples": {
                "Build and activate the new configuration, but don't make a boot entry (for testing purposes)": "sudo nixos-rebuild test",
                "Build and switch to the new configuration, making it the boot default": "sudo nixos-rebuild switch",
                "Build and switch to the new configuration, making it the boot default and installing updates": "sudo nixos-rebuild switch --upgrade",
                "Build and switch to the new configuration, making it the boot default and naming the boot entry": "sudo nixos-rebuild switch -p {{name}}",
                "Build the configuration and open it in a virtual machine": "sudo nixos-rebuild build-vm",
                "Build the new configuration and make it the boot default without switching to it": "sudo nixos-rebuild boot",
                "Rollback changes to the configuration, switching to the previous generation": "sudo nixos-rebuild switch --rollback"
            },
            "Explanation": "Reconfigure a NixOS machine.",
            "More Information Link": "https://nixos.org/nixos/manual/#sec-changing-config"
        }
    },
    "nkf": {
        "common": {
            "Examples": {
                "Convert to SHIFT_JIS encoding": "nkf -s {{path/to/file.txt}}",
                "Convert to UTF-8 encoding": "nkf -w {{path/to/file.txt}}",
                "Convert to UTF-8 encoding and overwrite the file": "nkf -w --overwrite {{path/to/file.txt}}",
                "Decrypt mime file and overwrite": "nkf -m --overwrite {{path/to/file.txt}}",
                "Set new line code to CRLF and overwrite (windows type)": "nkf -c --overwrite {{path/to/file.txt}}",
                "Set new line code to LF and overwrite (unix type)": "nkf -d --overwrite {{path/to/file.txt}}"
            },
            "Explanation": "Network kanji filter.\nConverts kanji code from one encoding to another.",
            "More Information Link": ""
        }
    },
    "nl": {
        "common": {
            "Examples": {
                "Number all lines including blank lines": "nl -b a {{file}}",
                "Number non-blank lines in a file": "nl {{file}}",
                "Number only the body lines that match a basic regular expression (BRE) pattern": "nl -b p'FooBar[0-9]' {{file}}",
                "Number only the lines with printable text": "nl -t {{file}}",
                "Read from standard output": "cat {{file}} | nl {{options}} -"
            },
            "Explanation": "A utility for numbering lines, either from a file, or from standard input.",
            "More Information Link": ""
        }
    },
    "nm": {
        "linux": {
            "Examples": {
                "Demangle C++ symbols (make them readable)": "nm --demangle {{file.o}}",
                "List all symbols, even debugging symbols": "nm -a {{file.o}}",
                "List global (extern) functions in a file (prefixed with T)": "nm -g {{file.o}}",
                "List only undefined symbols in a file": "nm -u {{file.o}}"
            },
            "Explanation": "List symbol names in object files.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Demangle C++ symbols (make them readable)": "nm -demangle {{file.o}}",
                "List all symbols, even debugging symbols": "nm -a {{file.o}}",
                "List global (extern) functions in a file (prefixed with T)": "nm -g {{file.o}}",
                "List only undefined symbols in a file": "nm -u {{file.o}}"
            },
            "Explanation": "List symbol names in object files.",
            "More Information Link": ""
        }
    },
    "nmap": {
        "common": {
            "Examples": {
                "Also enable scripts, service detection, OS fingerprinting and traceroute": "nmap -A {{address_or_addresses}}",
                "Assume good network connection and speed up execution": "nmap -T4 {{address_or_addresses}}",
                "Check if an IP address is up, and guess the remote host's operating system": "nmap -O {{ip_or_hostname}}",
                "Like above, but also run a default 1000-port TCP scan if host seems up": "nmap {{ip_or_hostname}} {{optional_another_address}}",
                "Perform TCP and UDP scanning (use -sU for UDP only, -sZ for SCTP, -sO for IP)": "nmap -sSU {{address_or_addresses}}",
                "Perform TLS cipher scan against a host to determine supported ciphers and SSL/TLS protocols": "nmap --script ssl-enum-ciphers {{address_or_addresses}} -p 443",
                "Perform full port, service, version detection scan with all default NSE scripts active against a host to determin weaknesses and info": "nmap -sC -sV {{address_or_addresses}}",
                "Scan a specific list of ports (use -p- for all ports 1-65535)": "nmap -p {{port1,port2,…,portN}} {{address_or_addresses}}",
                "Try to determine whether the specified hosts are up and what are their names": "nmap -sn {{ip_or_hostname}} {{optional_another_address}}"
            },
            "Explanation": "Network exploration tool and security / port scanner.\nSome features only activate when Nmap is run with privileges.",
            "More Information Link": "https://nmap.org"
        }
    },
    "nmcli": {
        "linux": {
            "Examples": {
                "Call general help": "nmcli --help",
                "Call help on a command": "nmcli {{command}} --help",
                "Check the nmcli version": "nmcli --version",
                "Execute an `nmcli` command": "nmcli {{command}}"
            },
            "Explanation": "A command line tool for controlling NetworkManager.",
            "More Information Link": ""
        }
    },
    "nmcli connection": {
        "linux": {
            "Examples": {
                "Activate a connection by specifying an uuid": "nmcli connection up uuid {{uuid}}",
                "Create a static IPv4-only connection": "nmcli connection add ifname {{interface_name}} type {{ethernet}} ip4 {{10.0.0.7/8}} gw4 {{10.0.0.1}} ipv4.dns {{10.0.0.1}} ipv6.method {{ignore}}",
                "Create a static IPv6-only connection": "nmcli connection add ifname {{interface_name}} type {{ethernet}} ip6 {{2001:db8::2/64}} gw6 {{2001:db8::1}} ipv6.dns {{2001:db8::1}} ipv4.method {{ignore}}",
                "Create an auto-configured dual stack connection": "nmcli connection add ifname {{interface_name}} type {{ethernet}} ipv4.method {{auto}} ipv6.method {{auto}}",
                "Deactivate a connection": "nmcli connection down uuid {{uuid}}",
                "List all NetworkManager connections (shows name, uuid, type and device)": "nmcli connection"
            },
            "Explanation": "Connection management with NetworkManager.",
            "More Information Link": ""
        }
    },
    "nmcli device": {
        "linux": {
            "Examples": {
                "Connect to the Wi-Fi network with a specified name and password": "nmcli device wifi connect {{ssid}} password {{password}}",
                "Print the available Wi-Fi access points": "nmcli device wifi",
                "Print the statuses of all network interfaces": "nmcli device status"
            },
            "Explanation": "Hardware device management with NetworkManager.",
            "More Information Link": ""
        }
    },
    "nmon": {
        "linux": {
            "Examples": {
                "Save records to file (\"-s 300 -c 288\" by default)": "nmon -f",
                "Save records to file with a total of 240 measurements, by taking 30 seconds between each measurement": "nmon -f -s {{30}} -c {{240}}",
                "Start nmon": "nmon"
            },
            "Explanation": "A system administrator, tuner, and benchmark tool.",
            "More Information Link": ""
        }
    },
    "nmtui": {
        "linux": {
            "Examples": {
                "Connect to a given network": "nmtui connect {{name|uuid|device|SSID}}",
                "Edit/Add/Delete a given network": "nmtui edit {{name|id}}",
                "Open the user interface": "nmtui",
                "Set the system hostname": "nmtui hostname",
                "Show a list of available connections, with the option to activate or deactivate them": "nmtui connect"
            },
            "Explanation": "Text user interface for controlling NetworkManager.\nUse arrow keys to navigate, enter to select an option.",
            "More Information Link": ""
        }
    },
    "node": {
        "common": {
            "Examples": {
                "Activate inspector, pausing execution until a debugger is connected once source code is fully parsed": "node --no-lazy --inspect-brk {{path/to/file}}",
                "Evaluate JavaScript code by passing it as an argument": "node -e \"{{code}}\"",
                "Evaluate and print result, useful to see node's dependencies versions": "node -p \"{{process.versions}}\"",
                "Run a JavaScript file": "node {{path/to/file}}",
                "Start a REPL (interactive shell)": "node"
            },
            "Explanation": "Server-side JavaScript platform (Node.js).",
            "More Information Link": "https://nodejs.org"
        }
    },
    "nodemon": {
        "common": {
            "Examples": {
                "Execute the specified file and watch a specific file for changes": "nodemon --inspect {{path/to/file.js}}",
                "Ignore specific files": "nodemon --ignore {{path/to/file_or_directory}}",
                "Manually restart nodemon (note nodemon must already be active for this to work)": "rs",
                "Pass arguments to the node application": "nodemon {{path/to/file.js}} {{arguments}}",
                "Run non-node scripts": "nodemon --exec \"{{python --verbose}}\" {{path/to/file.py}}"
            },
            "Explanation": "Watch files and automatically restart a node application when changes are detected.",
            "More Information Link": "https://nodemon.io"
        }
    },
    "nodenv": {
        "common": {
            "Examples": {
                "Display a list of available versions": "nodenv install --list",
                "Display the Node.js version for the current directory": "nodenv version",
                "Display the location of a Node.js installed command (e.g. `npm`)": "nodenv which {{command}}",
                "Install a specific version of Node.js": "nodenv install {{version}}",
                "Use a specific version of Node.js across the whole system": "nodenv global {{version}}",
                "Use a specific version of Node.js with a directory": "nodenv local {{version}}"
            },
            "Explanation": "A tool to manage NodeJS versions.",
            "More Information Link": "https://github.com/nodenv/nodenv"
        }
    },
    "nohup": {
        "common": {
            "Examples": {
                "Run process that can live beyond the terminal": "nohup {{command options}}"
            },
            "Explanation": "Allows for a process to live when the terminal gets killed.",
            "More Information Link": ""
        }
    },
    "nokogiri": {
        "common": {
            "Examples": {
                "Load a specific initialisation file before parsing": "nokogiri {{url|path/to/file}} -C {{path/to/config_file}}",
                "Parse as a specific type": "nokogiri {{url|path/to/file}} --type {{xml|html}}",
                "Parse the contents of a url or file": "nokogiri {{url|path/to/file}}",
                "Parse using a specific encoding": "nokogiri {{url|path/to/file}} --encoding {{encoding}}",
                "Validate using a RELAX NG file": "nokogiri {{url|path/to/file}} --rng {{url|path/to/file}}"
            },
            "Explanation": "An HTML, XML, SAX and Reader parser.",
            "More Information Link": "https://nokogiri.org"
        }
    },
    "nologin": {
        "linux": {
            "Examples": {
                "Customize message for users with the login shell of `nologin`": "echo \"{{declined_login_message}}\" > /etc/nologin.txt",
                "Set a user's login shell to `nologin` to prevent the user from logging in": "chsh -s {{user}} nologin"
            },
            "Explanation": "Alternative shell that prevents a user from logging in.",
            "More Information Link": ""
        }
    },
    "nomad": {
        "common": {
            "Examples": {
                "Follow the logs of a specific allocation": "nomad alloc logs {{alloc_id}}",
                "Plan a job for execution on the cluster": "nomad job plan {{path/to/file.nomad}}",
                "Run a job on the cluster": "nomad job run {{path/to/file.nomad}}",
                "Show the detailed status information about a specific job": "nomad job status {{job_name}}",
                "Show the status of jobs currently running on the cluster": "nomad job status",
                "Show the status of nodes in the cluster": "nomad node status",
                "Show the status of storage volumes": "nomad volume status",
                "Validate a job file": "nomad job validate {{path/to/file.nomad}}"
            },
            "Explanation": "Distributed, highly available, datacenter-aware scheduler.",
            "More Information Link": "https://www.nomadproject.io/docs/commands/"
        }
    },
    "noti": {
        "common": {
            "Examples": {
                "Display a notification even when you put it after the command to watch": "{{command_to_watch}}; noti",
                "Display a notification when tar finishes compressing files": "noti {{tar -cjf example.tar.bz2 example/}}",
                "Monitor a process by PID and trigger a notification when the PID disappears": "noti -w {{process_id}}"
            },
            "Explanation": "Monitor a process and trigger a banner notification.",
            "More Information Link": "https://github.com/variadico/noti"
        }
    },
    "notify-send": {
        "linux": {
            "Examples": {
                "Show a notification for 5 seconds": "notify-send -t 5000 \"{{Test}}\" \"{{This is a test}}\"",
                "Show a notification with a custom icon": "notify-send -i {{icon.png}} \"{{Test}}\" \"{{This is a test}}\"",
                "Show a notification with an app's icon": "notify-send \"{{Test}}\" --icon={{google-chrome}}",
                "Show a notification with the title \"Test\" and the content \"This is a test\"": "notify-send \"{{Test}}\" \"{{This is a test}}\""
            },
            "Explanation": "Uses the current desktop environment's notification system to create a notification.",
            "More Information Link": ""
        }
    },
    "notmuch": {
        "common": {
            "Examples": {
                "Add a tag for all messages matching a search term": "notmuch tag +{{custom_tag}} \"{{search_term}}\"",
                "Configure for first use": "notmuch setup",
                "Count messages matching the given search term": "notmuch count --output={{messages|threads}} \"{{search_term}}\"",
                "Create a reply template for a set of messages": "notmuch reply --format={{default|headers-only}} --reply-to={{sender|all}} \"{{search_term}}\"",
                "Limit the number of search results to X": "notmuch search --format={{json|text}} --output={{summary|threads|messages|files|tags}} --limit={{X}} \"{{search_term}}\"",
                "Remove a tag for all messages matching a search term": "notmuch tag -{{custom_tag}} \"{{search_term}}\"",
                "Search for messages matching the given search term": "notmuch search --format={{json|text}} --output={{summary|threads|messages|files|tags}} \"{{search_term}}\""
            },
            "Explanation": "Command-line based program for indexing, searching, reading, and tagging large collections of email messages.\nMore Information: <https://notmuchmail.org/manpages/>.",
            "More Information Link": ""
        }
    },
    "now": {
        "common": {
            "Examples": {
                "Deploy the current directory": "now",
                "Display a list of deployments": "now list",
                "Display information related to a deployment": "now inspect {{deployment_url}}",
                "Initialize an example project (a new directory will be created)": "now init",
                "Log in into an account or create a new one": "now login",
                "Remove a deployment": "now remove {{deployment_id}}"
            },
            "Explanation": "Cloud platform for serverless deployment.",
            "More Information Link": "https://zeit.co/now"
        }
    },
    "npm": {
        "common": {
            "Examples": {
                "Download a package and add it to the list of dev dependencies in package.json": "npm install {{module_name}} --save-dev",
                "Download a package and install it globally": "npm install -g {{module_name}}",
                "Download a specific version of a package and add it to the list of dependencies in package.json": "npm install {{module_name}}@{{version}}",
                "Download all the packages listed as dependencies in package.json": "npm install",
                "Interactively create a package.json file": "npm init",
                "List top-level globally installed modules": "npm list -g --depth={{0}}",
                "Print a tree of locally-installed dependencies": "npm list",
                "Uninstall a package and remove it from the list of dependencies in package.json": "npm uninstall {{module_name}}"
            },
            "Explanation": "JavaScript and Node.js package manager.\nManage Node.js projects and their module dependencies.",
            "More Information Link": "https://www.npmjs.com/"
        }
    },
    "npm-check": {
        "common": {
            "Examples": {
                "Display a report of outdated, incorrect, and unused dependencies": "npm-check",
                "Don't check for unused packages": "npm-check --skip-unused",
                "Interactively update out-of-date packages": "npm-check --update",
                "Update everything without prompting": "npm-check --update-all"
            },
            "Explanation": "Check for outdated, incorrect, and unused npm package dependencies.",
            "More Information Link": "https://www.npmjs.com/package/npm-check/"
        }
    },
    "npm-why": {
        "common": {
            "Examples": {
                "Show why an npm package is installed": "npm-why {{package-name}}"
            },
            "Explanation": "Identifies why an npm package is installed.",
            "More Information Link": "https://www.npmjs.com/package/npm-why"
        }
    },
    "nproc": {
        "common": {
            "Examples": {
                "Display the number of available processing units": "nproc",
                "Display the number of installed processing units, including any inactive ones": "nproc --all",
                "If possible, subtract a given number of units from the returned value": "nproc --ignore {{count}}"
            },
            "Explanation": "Print the number of processing units (normally CPUs) available.",
            "More Information Link": ""
        }
    },
    "npx": {
        "common": {
            "Examples": {
                "Execute the binary from a given npm module": "npx {{module_name}}",
                "In case a package has multiple binaries, specify the package name along with the binary": "npx -p {{package_name}} {{module_name}}",
                "View help contents": "npx --help"
            },
            "Explanation": "Execute binaries from `npm` packages.",
            "More Information Link": "https://www.npmjs.com/package/npx"
        }
    },
    "nrm": {
        "common": {
            "Examples": {
                "Add a custom registry": "nrm add {{registry}} {{url}}",
                "Change to a particular registry": "nrm use {{registry}}",
                "Delete a registry": "nrm del {{registry}}",
                "List all registries": "nrm ls",
                "Show the response time for all registries": "nrm test"
            },
            "Explanation": "NPM registry manager.\nHelps to easily switch between different npm registries.",
            "More Information Link": "https://github.com/Pana/nrm"
        }
    },
    "nsenter": {
        "linux": {
            "Examples": {
                "Run a new command in an existing processes ps-table namespace": "nsenter -t {{pid}} -p {{command}} {{command_arguments}}",
                "Run command in existing processes IPC namespace": "nsenter -t {{pid}} -i {{command}} {{command_arguments}}",
                "Run command in existing processes network namespace": "nsenter -t {{pid}} -n {{command}} {{command_arguments}}"
            },
            "Explanation": "Run a new command in a running process' namespace.\nParticularly useful for docker images or chroot jails.",
            "More Information Link": "https://github.com/jpetazzo/nsenter/"
        }
    },
    "nslookup": {
        "common": {
            "Examples": {
                "Query a given name server for a NS record of the domain": "nslookup -type=NS {{example.com}} {{8.8.8.8}}",
                "Query a given name server for the whole zone file (zone transfer) of the domain using TCP protocol": "nslookup -vc -type=AXFR {{example.com}} {{name_server}}",
                "Query a given name server on a specific port number for a TXT record of the domain": "nslookup -port={{port_number}} -type=TXT {{example.com}} {{name_server}}",
                "Query for ANY available records using TCP protocol": "nslookup -vc -type=ANY {{example.com}}",
                "Query for a mail server (MX record) of the domain, showing details of the transaction": "nslookup -type=MX -debug {{example.com}}",
                "Query for a reverse lookup (PTR record) of an IP address": "nslookup -type=PTR {{54.240.162.118}}",
                "Query your system's default name server for an IP address (A record) of the domain": "nslookup {{example.com}}"
            },
            "Explanation": "Query name server(s) for various domain records.",
            "More Information Link": ""
        }
    },
    "ntfsfix": {
        "linux": {
            "Examples": {
                "Fix a given NTFS partition": "sudo ntfsfix {{/dev/sdXN}}"
            },
            "Explanation": "Fix common problems on an NTFS partition.",
            "More Information Link": ""
        }
    },
    "numfmt": {
        "common": {
            "Examples": {
                "Convert 1.5K (SI Units) to 1500": "numfmt --from={{si}} {{1.5K}}",
                "Convert 5th field (1-indexed) to IEC Units without converting header": "ls -l | numfmt --header={{1}} --field={{5}} --to={{iec}}",
                "Convert to IEC units, pad with 5 characters, left aligned": "du -s * | numfmt --to={{iec}} --format=\"{{%-5f}}\""
            },
            "Explanation": "Convert numbers to and from human-readable strings.",
            "More Information Link": "https://www.gnu.org/software/coreutils/manual/html_node/numfmt-invocation.html"
        }
    },
    "numlockx": {
        "linux": {
            "Examples": {
                "Show the current number lock status": "numlockx status",
                "Toggle the current state": "numlockx toggle",
                "Turn the number lock off": "numlockx off",
                "Turn the number lock on": "numlockx on"
            },
            "Explanation": "Control the number lock key status in X11 sessions.",
            "More Information Link": "http://www.mike-devlin.com/linux/README-numlockx.htm"
        }
    },
    "nvidia-smi": {
        "common": {
            "Examples": {
                "Display information on all available GPUs and processes using them": "nvidia-smi",
                "Display more detailed GPU information": "nvidia-smi --query",
                "Monitor overall GPU usage with 1-second update interval": "nvidia-smi dmon"
            },
            "Explanation": "Aid the management and monitoring of NVIDIA GPU devices.",
            "More Information Link": "https://developer.nvidia.com/nvidia-system-management-interface"
        }
    },
    "nvim": {
        "common": {
            "Examples": {
                "Copy (\"yank\") or cut (\"delete\") the current line (paste it with `P`)": "<Esc>{{yy|dd}}",
                "Enter text editing mode (insert mode)": "<Esc>i",
                "Open a file": "nvim {{file}}",
                "Perform a regex substitution in the whole file": "<Esc>:%s/{{pattern}}/{{replacement}}/g<Enter>",
                "Quit without saving": "<Esc>:q!<Enter>",
                "Save (write) the file, and quit": "<Esc>:wq<Enter>",
                "Search for a pattern in the file (press `n`/`N` to go to next/previous match)": "<Esc>/{{search_pattern}}<Enter>",
                "Undo the last operation": "<Esc>u"
            },
            "Explanation": "Neovim, a programmer's text editor based on Vim, provides several modes for different kinds of text manipulation.\nPressing `i` enters edit mode. `<Esc>` goes back to normal mode, which doesn't allow regular text insertion.",
            "More Information Link": "https://neovim.io"
        }
    },
    "nvm": {
        "common": {
            "Examples": {
                "Execute a script in a specific version of Node.js": "nvm exec {{node_version}} node {{app.js}}",
                "Install a specific version of Node.js": "nvm install {{node_version}}",
                "Launch the REPL of a specific version of Node.js": "nvm run {{node_version}} --version",
                "List all available Node.js versions and highlight the default one": "nvm list",
                "Set the default Node.js version": "nvm alias default {{node_version}}",
                "Uninstall a given Node.js version": "nvm uninstall {{node_version}}",
                "Use a specific version of Node.js in the current shell": "nvm use {{node_version}}"
            },
            "Explanation": "Install, uninstall or switch between Node.js versions.\nSupports version numbers like \"0.12\" or \"v4.2\", and labels like \"stable\", \"system\", etc.",
            "More Information Link": "https://github.com/creationix/nvm"
        }
    },
    "oathtool": {
        "osx": {
            "Examples": {
                "Generate TOTP token (behaves like Google Authenticator)": "oathtool --totp --base32 {{secret}}",
                "Generate a TOTP token for a specific time": "oathtool --totp --now {{2004-02-29 16:21:42}} --base32 {{secret}}",
                "Validate a TOTP token": "oathtool --totp --base32 {{secret}} {{token}}"
            },
            "Explanation": "OATH one-time password tool.",
            "More Information Link": ""
        }
    },
    "objdump": {
        "common": {
            "Examples": {
                "Display a complete binary hex dump of all sections": "objdump -s {{binary}}",
                "Display the dis-assembled output of executable sections": "objdump -d {{binary}}",
                "Display the file header information": "objdump -f {{binary}}"
            },
            "Explanation": "View information about object files.",
            "More Information Link": ""
        }
    },
    "obs": {
        "common": {
            "Examples": {
                "Automatically start recording a video on launch": "obs --startrecording",
                "Automatically start streaming on launch": "obs --startstreaming",
                "Automatically start the replay buffer on launch": "obs --startreplaybuffer",
                "Launch OBS": "obs",
                "Launch OBS in portable mode": "obs --portable",
                "Make the log more verbose (for debugging)": "obs --verbose",
                "Minimise to the system tray on launch": "obs --minimize-to-tray"
            },
            "Explanation": "Open Broadcaster Software.\nVideo recording and livestreaming program.",
            "More Information Link": ""
        }
    },
    "oc": {
        "common": {
            "Examples": {
                "Add a new application to a project": "oc new-app {{repo_url}} --name {{application}}",
                "Create a new project": "oc new-project {{project_name}}",
                "List pods in a project": "oc get pods",
                "Log in to the OpenShift Container Platform server": "oc login",
                "Logout from the current session": "oc logout",
                "Open a remote shell session to a container": "oc rsh {{pod_name}}",
                "Switch to an existing project": "oc project {{project_name}}"
            },
            "Explanation": "The OpenShift Container Platform CLI.\nAllows for application and container management.",
            "More Information Link": "https://docs.openshift.com/container-platform/3.11/cli_reference/get_started_cli.html"
        }
    },
    "ocaml": {
        "common": {
            "Examples": {
                "Read OCaml commands from a file and execute them": "ocaml {{path/to/file.ml}}",
                "Read OCaml commands from the user and execute them": "ocaml"
            },
            "Explanation": "The OCaml repl (read-evaluate-print-loop).\nInterprets Ocaml commands.",
            "More Information Link": "https://ocaml.org"
        }
    },
    "ocamlc": {
        "common": {
            "Examples": {
                "Automatically generate a module signature (interface) file": "ocamlc -i {{path/to/source_file.ml}}",
                "Create a binary from a source file": "ocamlc {{path/to/source_file.ml}}",
                "Create a named binary from a source file": "ocamlc -o {{path/to/binary}} {{path/to/source_file.ml}}"
            },
            "Explanation": "The OCaml bytecode compiler.\nProduces executables runnable by the OCaml interpreter.",
            "More Information Link": "https://ocaml.org"
        }
    },
    "ocamlfind": {
        "common": {
            "Examples": {
                "Compile a source file to a bytecode binary and link with packages": "ocamlfind ocamlc -package {{package1}},{{package2}} -linkpkg -o {{executable}} {{source_file.ml}}",
                "Compile a source file to a native binary and link with packages": "ocamlfind ocamlopt -package {{package1}},{{package2}} -linkpkg -o {{executable}} {{source_file.ml}}",
                "Cross-compile for a different platform": "ocamlfind -toolchain {{cross-toolchain}} ocamlopt -o {{executable}} {{source_file.ml}}"
            },
            "Explanation": "The findlib package manager for OCaml.\nSimplifies linking executables with external libraries.",
            "More Information Link": "http://projects.camlcity.org/projects/findlib.html"
        }
    },
    "ocamlopt": {
        "common": {
            "Examples": {
                "Compile a source file": "ocamlopt -o {{path/to/binary}} {{path/to/source_file.ml}}",
                "Compile with debugging enabled": "ocamlopt -g -o {{path/to/binary}} {{path/to/source_file.ml}}"
            },
            "Explanation": "The OCaml native code compiler.\nProduces native executables, e.g. ELF on Linux.",
            "More Information Link": "https://ocaml.org"
        }
    },
    "octo": {
        "windows": {
            "Examples": {
                "Create a package": "octo pack --id={{package_name}}",
                "Create a release": "octo create-release --project={{project_name}} --packageversion={{version}}",
                "Deploy a release": "octo deploy-release --project={{project_name}} --packageversion={{version}} --deployto={{environment_name}} --tenant={{deployment_target}}",
                "Push a package to a repository on the Octopus server": "octo push --package={{package_name}}"
            },
            "Explanation": "Command line tools for Octopus Deploy.",
            "More Information Link": "https://octopus.com/docs/octopus-rest-api/octo.exe-command-line"
        }
    },
    "od": {
        "common": {
            "Examples": {
                "Display file in hexadecimal format (1-byte units), and 4 bytes per line": "od --format={{x1}} --width={{4}} -v {{path/to/file}}",
                "Display file in hexadecimal format (2-byte units), with byte offsets in decimal format": "od --format={{x}} --address-radix={{d}} -v {{path/to/file}}",
                "Display file in hexadecimal format along with its character representation, and do not print byte offsets": "od --format={{xz}} --address-radix={{n}} -v {{path/to/file}}",
                "Display file in verbose mode, i.e. without replacing duplicate lines with `*`": "od -v {{path/to/file}}",
                "Display file using default settings: octal format, 8 bytes per line, byte offsets in octal, and duplicate lines replaced with `*`": "od {{path/to/file}}",
                "Read only 100 bytes of a file starting from the 500th byte": "od --read-bytes {{100}} --skip-bytes={{500}} -v {{path/to/file}}"
            },
            "Explanation": "Display file contents in octal, decimal or hexadecimal format.\nOptionally display the byte offsets and/or printable representation for each line.",
            "More Information Link": ""
        }
    },
    "odps": {
        "common": {
            "Examples": {
                "Describe a partition": "desc {{table_name}} partition ({{partition_spec}});",
                "Describe a table": "desc {{table_name}};",
                "Show table partitions": "show partitions {{table_name}};",
                "Show tables in the current project": "show tables;",
                "Start the command line with a custom configuration file": "odpscmd --config={{odps_config.ini}}",
                "Switch current project": "use {{project_name}};"
            },
            "Explanation": "Aliyun ODPS (Open Data Processing Service) command line tool.",
            "More Information Link": ""
        }
    },
    "odps auth": {
        "common": {
            "Examples": {
                "Add a user to the current project": "add user {{username}};",
                "Create a user role": "create role {{role_name}};",
                "Describe authorities of a role": "desc role {{role_name}};",
                "Grant a role to a user": "grant {{role_name}} to {{username}};",
                "Grant a set of authorities to a role": "grant {{action_list}} on {{object_type}} {{object_name}} to role {{role_name}};",
                "Grant a set of authorities to a user": "grant {{action_list}} on {{object_type}} {{object_name}} to user {{username}};",
                "Show authorities of a user": "show grants for {{username}};"
            },
            "Explanation": "User authorities in ODPS (Open Data Processing Service).",
            "More Information Link": ""
        }
    },
    "odps func": {
        "common": {
            "Examples": {
                "Create a Java function using a .jar resource": "create function {{func_name}} as {{path.to.package.Func}} using '{{package.jar}}';",
                "Create a Python function using a .py resource": "create function {{func_name}} as {{script.Func}} using '{{script.py}}';",
                "Delete a function": "drop function {{func_name}};",
                "Show functions in the current project": "list functions;"
            },
            "Explanation": "Manage functions in ODPS (Open Data Processing Service).",
            "More Information Link": ""
        }
    },
    "odps inst": {
        "common": {
            "Examples": {
                "Check the status of an instance": "status {{instance_id}};",
                "Describe the details of an instance": "desc instance {{instance_id}};",
                "Kill an instance": "kill {{instance_id}};",
                "Show instances created by current user": "show instances;",
                "Wait on the termination of an instance, printing log and progress information until then": "wait {{instance_id}};"
            },
            "Explanation": "Manage instances in ODPS (Open Data Processing Service).",
            "More Information Link": ""
        }
    },
    "odps resource": {
        "common": {
            "Examples": {
                "Add .jar resource": "add jar {{package.jar}};",
                "Add .py resource": "add py {{script.py}};",
                "Add archive resource": "add archive {{archive.tar.gz}} as {{alias}};",
                "Add file resource": "add file {{filename}} as {{alias}};",
                "Delete resource": "drop resource {{resource_name}};",
                "Show resources in the current project": "list resources;"
            },
            "Explanation": "Manage resources in ODPS (Open Data Processing Service).",
            "More Information Link": ""
        }
    },
    "odps table": {
        "common": {
            "Examples": {
                "Add partition to a table": "alter table {{table_name}} add partition ({{partition_spec}});",
                "Create a table based on the definition of another table": "create table {{table_name}} like {{another_table}};",
                "Create a table with partition and lifecycle": "create table {{table_name}} ({{col}} {{type}}) partitioned by ({{col}} {{type}}) lifecycle {{days}};",
                "Delete partition from a table": "alter table {{table_name}} drop partition ({{partition_spec}});",
                "Delete table": "drop table {{table_name}};"
            },
            "Explanation": "Create and modify tables in ODPS (Open Data Processing Service).",
            "More Information Link": ""
        }
    },
    "odps tunnel": {
        "common": {
            "Examples": {
                "Download table to local file": "tunnel download {{table_name}} {{file}};",
                "Upload local file to a table partition": "tunnel upload {{file}} {{table_name}}/{{partition_spec}};",
                "Upload table specifying field and record delimiters": "tunnel upload {{file}} {{table_name}} -fd {{field_delim}} -rd {{record_delim}};",
                "Upload table using multiple threads": "tunnel upload {{file}} {{table_name}} -threads {{num}};"
            },
            "Explanation": "Data tunnel in ODPS (Open Data Processing Service).",
            "More Information Link": ""
        }
    },
    "ogr2ogr": {
        "common": {
            "Examples": {
                "Change coordinate reference system of a GeoPackage from `EPSG:4326` to `EPSG:3857`": "ogr2ogr -s_srs {{EPSG:4326}} -t_srs {{EPSG:3857}} -f GPKG {{output}}.gpkg {{input}}.gpkg",
                "Clip layers of a GeoPackage file to the given bounding box": "ogr2ogr -spat {{min_x}} {{min_y}} {{max_x}} {{max_y}} -f GPKG {{output}}.gpkg {{input}}.gpkg",
                "Convert a CSV file into a GeoPackage, specifying the names of the coordinate columns and assigning a coordinate reference system": "ogr2ogr -f GPKG {{output}}.gpkg {{input}}.csv -oo X_POSSIBLE_NAMES={{longitude}} -oo Y_POSSIBLE_NAMES={{latitude}} -a_srs {{EPSG:4326}}",
                "Convert a Shapefile into a GeoPackage": "ogr2ogr -f GPKG {{output}}.gpkg {{input}}.shp",
                "Load a GeoPackage into a PostGIS database": "ogr2ogr -f \"PostgreSQL\" PG:dbname=\"{{database_name}}\" {{input}}.gpkg"
            },
            "Explanation": "Convert Simple Features data between file formats.",
            "More Information Link": "https://gdal.org/programs/ogr2ogr.html#ogr2ogr"
        }
    },
    "ogrinfo": {
        "common": {
            "Examples": {
                "Get detailed information about a specific layer of a GeoPackage": "ogrinfo {{input}}.gpkg {{layer_name}}",
                "List layers of a GeoPackage": "ogrinfo {{input}}.gpkg",
                "Only show summary information about a specific layer of a GeoPackage": "ogrinfo -so {{input}}.gpkg {{layer_name}}"
            },
            "Explanation": "List information about an OGR-supported data source.",
            "More Information Link": "https://gdal.org/programs/ogrinfo.html"
        }
    },
    "ohdear-cli": {
        "common": {
            "Examples": {
                "Add a new site to Oh Dear": "ohdear-cli sites:add {{url}}",
                "Display a list of sites and their current status": "ohdear-cli sites:list",
                "Display details about a specific site": "ohdear-cli sites:show {{site_id}}",
                "Display details about the currently authenticated user": "ohdear-cli me"
            },
            "Explanation": "An unofficial Oh Dear CLI written with Laravel Zero.",
            "More Information Link": "https://github.com/nunomaduro/ohdear-cli"
        }
    },
    "omf": {
        "common": {
            "Examples": {
                "Apply a theme": "omf theme {{name}}",
                "Install one or more packages": "omf install {{name}}",
                "List available themes": "omf theme",
                "List installed packages": "omf list",
                "Remove a theme or package": "omf remove {{name}}",
                "Uninstall Oh My Fish": "omf destroy"
            },
            "Explanation": "Oh My Fish, the Fishshell Framework.\nInstall packages to extend and modify the fish shell.",
            "More Information Link": "https://github.com/oh-my-fish/oh-my-fish"
        }
    },
    "opam": {
        "common": {
            "Examples": {
                "Display all commands": "opam help",
                "Display detailed information about a package": "opam show {{package_name}}",
                "Initialize opam for first use": "opam init",
                "Install a package and all of its dependencies": "opam install {{package_name}}",
                "List all installed packages": "opam list",
                "Search for packages": "opam search {{package_name}}",
                "Update the local package database": "opam update",
                "Upgrade all installed packages": "opam upgrade"
            },
            "Explanation": "OCaml Package Manager.\nManage OCaml compilers, tools and libraries.",
            "More Information Link": "https://opam.ocaml.org/"
        }
    },
    "open": {
        "osx": {
            "Examples": {
                "Open a file with the associated application": "open {{file.ext}}",
                "Open all the files of a given extension in the current directory with the associated application": "open {{*.ext}}",
                "Open the current directory in Finder": "open .",
                "Reveal a file in Finder": "open -R {{path/to/file}}",
                "Run a graphical macOS app based on the bundle identifier (refer to `osascript` for an easy way to get this)": "open -b {{com.domain.application}}",
                "Run a graphical macOS application": "open -a {{Application}}"
            },
            "Explanation": "Opens files, directories and applications.",
            "More Information Link": ""
        }
    },
    "openconnect": {
        "common": {
            "Examples": {
                "Connect to a server": "openconnect {{vpn.example.org}}",
                "Connect to a server and authenticate with a specific SSL client certificate": "openconnect --certificate={{path/to/file}} {{vpn.example.org}}",
                "Connect to a server, forking into the background": "openconnect --background {{vpn.example.org}}",
                "Connect to a server, reading options from a config file": "openconnect --config={{path/to/file}} {{vpn.example.org}}",
                "Terminate the connection that is running in the background": "killall -SIGINT openconnect"
            },
            "Explanation": "A VPN client, for Cisco AnyConnect VPNs and others.",
            "More Information Link": "https://www.infradead.org/openconnect/manual.html"
        }
    },
    "openrc": {
        "linux": {
            "Examples": {
                "Change to a specific runlevel": "sudo openrc {{runlevel_name}}",
                "Change to a specific runlevel, but don't stop any existing services": "sudo openrc --no-stop {{runlevel_name}}"
            },
            "Explanation": "The OpenRC service manager.\nSee also `rc-status`, `rc-update`, and `rc-service`.",
            "More Information Link": "https://wiki.gentoo.org/wiki/OpenRC"
        }
    },
    "opensnoop": {
        "osx": {
            "Examples": {
                "Print all file opens as they occur": "sudo opensnoop",
                "Track all file opens by a process by PID": "sudo opensnoop -p {{PID}}",
                "Track all file opens by a process by name": "sudo opensnoop -n {{process_name}}",
                "Track which processes open a specified file": "sudo opensnoop -f {{path/to/file}}"
            },
            "Explanation": "Tool that tracks file opens on your system.",
            "More Information Link": ""
        }
    },
    "openssl": {
        "common": {
            "Examples": {
                "Display a certificate's expiration date": "openssl x509 -enddate -noout -in {{filename.pem}}",
                "Display certificate information": "openssl x509 -in {{filename.crt}} -noout -text",
                "Display the certificate presented by an SSL/TLS server": "openssl s_client -connect {{host}}:{{port}} </dev/null",
                "Display the complete certificate chain of an HTTPS server": "openssl s_client -connect {{host}}:443 -showcerts </dev/null",
                "Display the start and expiry dates for a domain's certificate": "openssl s_client -connect {{host}}:{{port}} 2>/dev/null | openssl x509 -noout -dates",
                "Generate a 2048bit RSA private key and save it to a file": "openssl genrsa -out {{filename.key}} 2048",
                "Generate a certificate signing request to be sent to a certificate authority": "openssl req -new -sha256 -key {{filename.key}} -out {{filename.csr}}",
                "Generate a self-signed certificate from a certificate signing request valid for some number of days": "openssl x509 -req -days {{days}} -in {{filename.csr}} -signkey {{filename.key}} -out {{filename.crt}}"
            },
            "Explanation": "OpenSSL cryptographic toolkit.",
            "More Information Link": "https://www.openssl.org"
        }
    },
    "openssl genrsa": {
        "common": {
            "Examples": {
                "Generate an RSA private key and encrypt it with AES256 (you will be prompted for a passphrase)": "openssl genrsa {{-aes256}}",
                "Generate an RSA private key of 2048 bits to stdout": "openssl genrsa",
                "Save an RSA private key of an arbitrary number of bits to the output file": "openssl genrsa -out {{output_file.key}} {{1234}}"
            },
            "Explanation": "OpenSSL command to generate RSA private keys.",
            "More Information Link": "https://www.openssl.org/docs/man1.0.2/man1/genrsa.html"
        }
    },
    "openvpn": {
        "common": {
            "Examples": {
                "Connect to server using a config file": "sudo openvpn {{path/to/client.conf}}",
                "Connect to the awaiting bob.example.com host with the same static key as on bob.example.com": "sudo openvpn --remote {{bob.example.com}} --dev {{tun1}} --ifconfig {{10.4.0.2}} {{10.4.0.1}} --secret {{path/to/key}}",
                "Connect to the awaiting bob.example.com host without encryption": "sudo openvpn --remote {{bob.example.com}} --dev {{tun1}} --ifconfig {{10.4.0.2}} {{10.4.0.1}}",
                "Create a cryptographic key and save it to file": "openvpn --genkey --secret {{path/to/key}}",
                "Try to set up a peer-to-peer tunnel on bob.example.com host with a static key": "sudo openvpn --remote {{alice.example.com}} --dev {{tun1}} --ifconfig {{10.4.0.1}} {{10.4.0.2}} --secret {{path/to/key}}",
                "Try to set up an insecure peer-to-peer tunnel on bob.example.com host": "sudo openvpn --remote {{alice.example.com}} --dev {{tun1}} --ifconfig {{10.4.0.1}} {{10.4.0.2}}"
            },
            "Explanation": "OpenVPN client and daemon binary.",
            "More Information Link": "https://openvpn.net/"
        }
    },
    "opkg": {
        "linux": {
            "Examples": {
                "Display informations for a specific package": "opkg info {{package}}",
                "Install a package": "opkg install {{package}}",
                "List all the available packages": "opkg list",
                "Remove a package": "opkg remove {{package}}",
                "Update the list of available packages": "opkg update",
                "Upgrade all the installed packages": "opkg upgrade",
                "Upgrade one or more specific package(s)": "opkg upgrade {{package(s)}}"
            },
            "Explanation": "A lightweight package manager used to install OpenWrt packages.",
            "More Information Link": ""
        }
    },
    "opt": {
        "common": {
            "Examples": {
                "Optimize the program at level 2 and output the result to another file": "opt -O2 {{path/to/file.bc}} -S -o {{path/to/output_file.bc}}",
                "Output the Control Flow Graph of a function to a \"dot\" file": "opt {{-dot-cfg}} -S {{path/to/file.bc}} -disable-output",
                "Run an optimization or analysis on a bitcode file": "opt -{{passname}} {{path/to/file.bc}} -S -o {{file_opt.bc}}"
            },
            "Explanation": "A tool that takes LLVM source files and runs specified optimizations and/or analyses on them.",
            "More Information Link": "https://llvm.org/docs/CommandGuide/opt.html"
        }
    },
    "optipng": {
        "common": {
            "Examples": {
                "Compress a PNG and add interlacing": "optipng -i {{1}} {{path/to/file.png}}",
                "Compress a PNG and preserve all metadata (including file timestamps)": "optipng -preserve {{path/to/file.png}}",
                "Compress a PNG and remove all metadata": "optipng -strip all {{path/to/file.png}}",
                "Compress a PNG with best compression": "optipng -o{{7}} {{path/to/file.png}}",
                "Compress a PNG with default settings": "optipng {{path/to/file.png}}",
                "Compress a PNG with fastest compression": "optipng -o{{0}} {{path/to/file.png}}"
            },
            "Explanation": "PNG image file optimization utility.",
            "More Information Link": "http://optipng.sourceforge.net"
        }
    },
    "opusenc": {
        "common": {
            "Examples": {
                "Convert 5.1 surround sound audio at the highest quality level": "opusenc --bitrate {{1536}} {{path/to/input.flac}} {{path/to/output}}.opus",
                "Convert WAV to Opus using default options": "opusenc {{path/to/input.wav}} {{path/to/output}}.opus",
                "Convert speech audio at the lowest quality level": "opusenc {{path/to/input.wav}} --downmix-mono --bitrate {{6}} {{path/to/out}}.opus",
                "Convert stereo audio at the highest quality level": "opusenc --bitrate {{512}} {{path/to/input.wav}} {{path/to/output}}.opus"
            },
            "Explanation": "Convert WAV or FLAC audio to Opus.",
            "More Information Link": "https://opus-codec.org/docs/opus-tools/opusenc.html"
        }
    },
    "osascript": {
        "osx": {
            "Examples": {
                "Get the bundle identifier of an application (useful for `open -b`)": "osascript -e 'id of app \"{{Application}}\"'",
                "Run a JavaScript command": "osascript -l JavaScript -e '{{console.log(\"Hello world\");}}'",
                "Run a JavaScript file": "osascript -l JavaScript {{path/to/script.js}}",
                "Run a compiled (`*.scpt`), bundled (`*.scptd`), or plaintext (`*.applescript`) AppleScript file": "osascript {{path/to/apple.scpt}}",
                "Run an AppleScript command": "osascript -e '{{say \"Hello world\"}}'",
                "Run multiple AppleScript commands": "osascript -e '{{say \"Hello\"}}' -e '{{say \"world\"}}'"
            },
            "Explanation": "Run AppleScript or JavaScript for Automation (JXA) from the command line.",
            "More Information Link": ""
        }
    },
    "p4": {
        "common": {
            "Examples": {
                "Copy files from depot into the client workspace": "p4 sync",
                "Create a client": "p4 client",
                "Create or edit changelist description": "p4 change",
                "Display list of files modified by changelist": "p4 describe -c {{changelist_number}}",
                "Log in to the Perforce service": "p4 login -a",
                "Open a file to edit": "p4 edit -c {{changelist_number}} {{filename}}",
                "Open a new file to add it to the depot": "p4 add",
                "Submit a changelist to the depot": "p4 submit -c {{changelist_number}}"
            },
            "Explanation": "Perforce Version Control System.",
            "More Information Link": "https://www.perforce.com/manuals/cmdref"
        }
    },
    "p5": {
        "common": {
            "Examples": {
                "Create a new p5 collection": "p5 new {{collection_name}}",
                "Generate a new p5 project (should be run from collection directory)": "p5 generate {{project_name}}",
                "Run the p5 manager server": "p5 server",
                "Update libraries to their latest versions": "p5 update"
            },
            "Explanation": "P5js template builder and sketch manager.",
            "More Information Link": "https://www.npmjs.com/package/p5-manager"
        }
    },
    "p7zip": {
        "common": {
            "Examples": {
                "Archive a file keeping the input file": "p7zip -k {{path/to/file}}",
                "Archive a file, replacing it with a 7zipped compressed version": "p7zip {{path/to/file}}",
                "Decompress a file keeping the input file": "p7zip -d -k {{compressed.ext}}.7z",
                "Decompress a file, replacing it with the original uncompressed version": "p7zip -d {{compressed.ext}}.7z",
                "Skip some checks and force compression or decompression": "p7zip -f {{path/to/file}}"
            },
            "Explanation": "Wrapper of 7-Zip file archiver with high compression ratio.\nInternally executes either 7za or 7zr command.",
            "More Information Link": "http://p7zip.sourceforge.net"
        }
    },
    "pacaur": {
        "linux": {
            "Examples": {
                "Install a new package (includes AUR)": "pacaur -S {{package_name}}",
                "List all currently installed packages (includes AUR packages)": "pacaur -Qs",
                "Remove a package and its dependencies (includes AUR packages)": "pacaur -Rs {{package_name}}",
                "Search the package database for a keyword (includes AUR)": "pacaur -Ss {{keyword}}",
                "Synchronize and update all packages (includes AUR)": "pacaur -Syu",
                "Synchronize and update only AUR packages": "pacaur -Syua"
            },
            "Explanation": "A utility for Arch Linux to build and install packages from the Arch User Repository.",
            "More Information Link": ""
        }
    },
    "paccache": {
        "linux": {
            "Examples": {
                "Move candidate packages to a directory instead of deleting them": "paccache -m {{path/to/directory}}",
                "Perform a dry-run and show the number of candidate packages for deletion": "paccache -d",
                "Remove all but the 3 most recent package versions from the pacman cache": "paccache -r",
                "Set the number of package versions to keep": "paccache -rk {{num_versions}}"
            },
            "Explanation": "A pacman cache cleaning utility.",
            "More Information Link": ""
        }
    },
    "paci": {
        "common": {
            "Examples": {
                "Configure its behaviour": "paci configure",
                "Install a package": "paci install {{package}}",
                "Search for a given package": "paci search {{package}}",
                "Update a package": "paci update {{package}}",
                "Update the list of available packages and versions (it's recommended to run this before other `paci` commands)": "paci refresh"
            },
            "Explanation": "A package manager for bash scripts.",
            "More Information Link": ""
        }
    },
    "packer": {
        "common": {
            "Examples": {
                "Build an image": "packer build {{path/to/config.json}}",
                "Check the syntax of a Packer image config": "packer validate {{path/to/config.json}}"
            },
            "Explanation": "Build automated machine images.",
            "More Information Link": "https://www.packer.io/"
        }
    },
    "pacman": {
        "linux": {
            "Examples": {
                "Empty package cache to free up space": "pacman -Scc",
                "Find which package owns a certain file": "pacman -Qo {{filename}}",
                "Install a new package": "pacman -S {{package_name}}",
                "List installed packages and versions": "pacman -Q",
                "List only the explicitly installed packages and versions": "pacman -Qe",
                "Remove a package and its dependencies": "pacman -Rs {{package_name}}",
                "Search the package database for a regular expression or keyword": "pacman -Ss \"{{search_pattern}}\"",
                "Synchronize and update all packages": "pacman -Syu"
            },
            "Explanation": "Arch Linux package manager utility.",
            "More Information Link": ""
        }
    },
    "pacman4console": {
        "linux": {
            "Examples": {
                "Play a custom level": "pacman4console --level={{path/to/level_file}}",
                "Start a game at Level 1": "pacman4console",
                "Start a game on a certain level (there are nine official levels)": "pacman4console --level={{level_number}}",
                "Start the pacman4console level editor, saving to a specified text file": "pacman4consoleedit {{path/to/level_file}}"
            },
            "Explanation": "A text-based console game inspired by the original Pacman.",
            "More Information Link": "https://github.com/YoctoForBeaglebone/pacman4console"
        }
    },
    "pactl": {
        "common": {
            "Examples": {
                "Change the default sink (output) to 1 (the number can be retrieved via the `list` subcommand)": "pactl set-default-sink {{1}}",
                "List all sinks (or other types - sinks are outputs and sink-inputs are active audio streams)": "pactl list {{sinks}} short",
                "Move sink-input 627 to sink 1": "pactl move-sink-input {{627}} {{1}}",
                "Set the volume of sink 1 to 75%": "pactl set-sink-volume {{1}} {{0.75}}",
                "Toggle mute on the default sink (using the special name `@DEFAULT_SINK@`)": "pactl set-sink-mute {{@DEFAULT_SINK@}} toggle"
            },
            "Explanation": "Control a running PulseAudio sound server.",
            "More Information Link": ""
        }
    },
    "pageres": {
        "common": {
            "Examples": {
                "Capture a screenshot of a local file": "pageres {{local_file_path.html}} {{1366x768}}",
                "Capture a specific element on a page": "pageres {{https://example.com/}} {{1366x768}} --selector='{{.page-header}}'",
                "Hide a specific element": "pageres {{https://example.com/}} {{1366x768}} --hide='{{.page-header}}'",
                "Provide a custom filename template": "pageres {{https://example.com/}} {{1024x768}} --filename={{'<%= date %> - <%= url %>'}}",
                "Provide specific options for a URL, overriding global options": "pageres [{{https://example.com/}} {{1366x768}} --no-crop] [{{https://example2.com/}} {{1024x768}}] --crop",
                "Take multiple screenshots of multiple URLs at different resolutions": "pageres {{https://example.com/}} {{https://example2.com/}} {{1366x768}} {{1600x900}}"
            },
            "Explanation": "Capture screenshots of websites in various resolutions.",
            "More Information Link": "https://github.com/sindresorhus/pageres-cli"
        }
    },
    "pamac": {
        "linux": {
            "Examples": {
                "Check for package updates": "pamac checkupdates",
                "Install a new package": "pamac install {{package_name}}",
                "List installed packages": "pamac list -i",
                "Remove a package and its no longer required dependencies (orphans)": "pamac remove -o {{package_name}}",
                "Search the package database for a package": "pamac search {{package_name}}"
            },
            "Explanation": "A command line utility for the GUI package manager pamac.",
            "More Information Link": ""
        }
    },
    "pamixer": {
        "common": {
            "Examples": {
                "Decrease the volume on a source by 5%": "pamixer --decrease {{5}} --source {{ID}}",
                "Increase the volume on default sink by 5%": "pamixer --increase {{5}}",
                "List all sinks and sources with their corresponding IDs": "pamixer --list-sinks --list-sources",
                "Mute the default sink (use `--unmute` instead to unmute)": "pamixer --mute",
                "Set the volume to 75% on the default sink": "pamixer --set-volume {{75}}",
                "Toggle mute on a sink other than the default": "pamixer --toggle-mute --sink {{ID}}",
                "Use the allow boost option to increase, decrease, or set the volume above 100%": "pamixer --set-volume {{105}} --allow-boost"
            },
            "Explanation": "A simple command-line mixer for PulseAudio.",
            "More Information Link": "https://github.com/cdemoulins/pamixer"
        }
    },
    "pandoc": {
        "common": {
            "Examples": {
                "Convert file to pdf (the output format is determined by file extension)": "pandoc {{input.md}} -o {{output.pdf}}",
                "Convert to a standalone file with the appropriate headers/footers (for LaTeX, HTML, etc.)": "pandoc {{input.md}} -s -o {{output.tex}}",
                "Force conversion to use a specific format": "pandoc {{input.docx}} --to {{gfm}} -o {{output.md}}",
                "List all supported input formats": "pandoc --list-input-formats",
                "List all supported output formats": "pandoc --list-output-formats"
            },
            "Explanation": "Convert documents between various formats.",
            "More Information Link": "https://pandoc.org"
        }
    },
    "parallel": {
        "common": {
            "Examples": {
                "Break stdin into ~1M blocks, feed each block to `stdin` of new command": "cat {{big_file.txt}} | parallel --pipe --block 1M {{command}}",
                "Convert JPG images to PNG using replacement strings": "parallel convert {} {.}.png ::: *.jpg",
                "Gzip several files at once, using all cores": "parallel gzip ::: {{file1}} {{file2}} {{file3}}",
                "Parallel xargs, cram as many args as possible onto one command": "{{args}} | parallel -X {{command}}",
                "Read arguments from `stdin`, run 4 jobs at once": "ls *.txt | parallel -j4 gzip",
                "Run on multiple machines via SSH": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}"
            },
            "Explanation": "Run commands on multiple CPU cores.",
            "More Information Link": "https://www.gnu.org/software/parallel"
        }
    },
    "parallel-lint": {
        "common": {
            "Examples": {
                "Lint a directory and output the results as JSON": "parallel-lint --json {{path/to/directory}}",
                "Lint a directory and show Git Blame results for rows containing errors": "parallel-lint --blame {{path/to/directory}}",
                "Lint a directory of files using a comma-separated list of extension(s)": "parallel-lint -e {{php,html,phpt}} {{path/to/directory}}",
                "Lint a directory using the specified number of parallel processes": "parallel-lint -j {{processes}} {{path/to/directory}}",
                "Lint a directory, excluding the specified directory": "parallel-lint --exclude {{path/to/excluded_directory}} {{path/to/directory}}",
                "Lint a specific directory": "parallel-lint {{path/to/directory}}"
            },
            "Explanation": "A tool to check the syntax of PHP files in parallel.",
            "More Information Link": "https://github.com/JakubOnderka/PHP-Parallel-Lint"
        }
    },
    "parquet-tools": {
        "common": {
            "Examples": {
                "Concatenate several Parquet files into the target one": "parquet-tools merge {{path/to/parquet1}} {{path/to/parquet2}} {{path/to/target_parquet}}",
                "Display the content of a Parquet file": "parquet-tools cat {{path/to/parquet}}",
                "Display the first few lines of a Parquet file": "parquet-tools head {{path/to/parquet}}",
                "Print the column and offset indexes of a Parquet file": "parquet-tools column-index {{path/to/parquet}}",
                "Print the content and metadata of a Parquet file": "parquet-tools dump {{path/to/parquet}}",
                "Print the count of rows in a Parquet file": "parquet-tools rowcount {{path/to/parquet}}",
                "Print the metadata of a Parquet file": "parquet-tools meta {{path/to/parquet}}",
                "Print the schema of a Parquet file": "parquet-tools schema {{path/to/parquet}}"
            },
            "Explanation": "A tool to show, inspect and manipulate Parquet file.",
            "More Information Link": "https://github.com/apache/parquet-mr/tree/master/parquet-tools"
        }
    },
    "particle": {
        "common": {
            "Examples": {
                "Compile a Particle project": "particle compile {{device_type}} {{path/to/source_code.ino}}",
                "Create a new Particle project interactively": "particle project create",
                "Display a list of devices": "particle list",
                "Execute a function on a device": "particle call {{device_name}} {{function_name}} {{function_arguments}}",
                "Log in or create an account for the Particle CLI": "particle setup",
                "Update a device to use a specific app remotely": "particle flash {{device_name}} {{path/to/program.bin}}",
                "Update a device to use the latest firmware via serial": "particle flash --serial {{path/to/firmware.bin}}"
            },
            "Explanation": "A command-line tool for interacting with Particle devices.",
            "More Information Link": "https://docs.particle.io/tutorials/developer-tools/cli"
        }
    },
    "pass": {
        "common": {
            "Examples": {
                "Copy a password (first line of the data file) to the clipboard": "pass -c {{path/to/data}}",
                "Edit an entry": "pass edit {{path/to/data}}",
                "Generate a new random password with a given length, and copy it to the clipboard": "pass generate -c {{path/to/data}} {{num}}",
                "Initialize (or re-encrypt) the storage using one or more GPG IDs": "pass init {{gpg_id_1}} {{gpg_id_2}}",
                "Initialize a new Git repository (any changes done by pass will be committed automatically)": "pass git init",
                "List the whole store tree": "pass",
                "Save a new password and additional information (press Ctrl + D on a new line to complete)": "pass insert --multiline {{path/to/data}}"
            },
            "Explanation": "Tool for storing and reading passwords or other sensitive data.\nAll data is GPG-encrypted, and managed with a git repository.",
            "More Information Link": "https://www.passwordstore.org"
        }
    },
    "pass otp": {
        "common": {
            "Examples": {
                "Copy and don't print a 2FA code using the OTP token in a pass file": "pass otp --clip {{path/to/pass}}",
                "Display a QR code using the OTP token stored in a pass file": "pass otp uri --qrcode {{path/to/pass}}",
                "Print a 2FA code using the OTP token in a pass file": "pass otp {{path/to/pass}}",
                "Prompt for an OTP secret value specifying issuer and account (at least one must be specified) and append to existing pass file": "pass otp append --secret --issuer {{issuer_name}} --account {{account_name}} {{path/to/pass}}",
                "Prompt for an otpauth URI token and append to an existing pass file": "pass otp append {{path/to/pass}}",
                "Prompt for an otpauth URI token and create a new pass file": "pass otp insert {{path/to/pass}}"
            },
            "Explanation": "A pass extension for managing one-time-password (OTP) tokens.",
            "More Information Link": "https://github.com/tadfisher/pass-otp#readme"
        }
    },
    "passwd": {
        "common": {
            "Examples": {
                "Change the password of the current user": "passwd {{new_password}}",
                "Change the password of the current user interactively": "passwd",
                "Change the password of the specified user": "passwd {{username}} {{new_password}}",
                "Get the current status of the user": "passwd -S",
                "Make the password of the account blank (it will set the named account passwordless)": "passwd -d"
            },
            "Explanation": "Passwd is a tool used to change a user's password.",
            "More Information Link": ""
        }
    },
    "paste": {
        "common": {
            "Examples": {
                "Join all the lines into a single line, using TAB as delimiter": "paste -s {{file}}",
                "Join all the lines into a single line, using the specified delimiter": "paste -s -d {{delimiter}} {{file}}",
                "Merge two files side by side, each in its column, using TAB as delimiter": "paste {{file1}} {{file2}}",
                "Merge two files side by side, each in its column, using the specified delimiter": "paste -d {{delimiter}} {{file1}} {{file2}}",
                "Merge two files, with lines added alternatively": "paste -d '\\n' {{file1}} {{file2}}"
            },
            "Explanation": "Merge lines of files.",
            "More Information Link": ""
        }
    },
    "pastel": {
        "common": {
            "Examples": {
                "Convert colors from one format to another. Here from RGB to HSL": "pastel format {{hsl}} {{ff8000}}",
                "Generate a set of N visually distinct colors": "pastel distinct {{8}}",
                "Get a list of all X11 / CSS color names": "pastel list",
                "Pick a color from somewhere on the screen": "pastel pick",
                "Show and analyze colors on the terminal": "pastel color \"{{rgb(255,50,127)}}\""
            },
            "Explanation": "Generate, analyze, convert and manipulate colors.",
            "More Information Link": "https://github.com/sharkdp/pastel"
        }
    },
    "pasuspender": {
        "linux": {
            "Examples": {
                "Suspend pulseaudio while running `jackd`": "pasuspender -- {{jackd -d alsa --device hw:0}}"
            },
            "Explanation": "Temporarily suspends `pulseaudio` while another command is running to allow access to alsa.",
            "More Information Link": ""
        }
    },
    "patch": {
        "common": {
            "Examples": {
                "Apply a patch to a specific file": "patch {{path/to/file}} < {{patch.diff}}",
                "Apply a patch to the current directory": "patch -p1 < {{patch.diff}}",
                "Apply a patch using a diff file (filenames must be included in the diff file)": "patch < {{patch.diff}}",
                "Apply the reverse of a patch": "patch -R < {{patch.diff}}",
                "Patch a file writing the result to a different file": "patch {{path/to/input_file}} -o {{path/to/output_file}} < {{patch.diff}}"
            },
            "Explanation": "Patch a file (or files) with a diff file.\nNote that diff files should be generated by the `diff` command.",
            "More Information Link": ""
        }
    },
    "path": {
        "windows": {
            "Examples": {
                "Append a new directory to the original path": "path {{path/to/directory}};%path%",
                "Display the current path": "path",
                "Set command prompt to only search the current directory for executables": "path ;",
                "Set the path to one or more semicolon-separated directories": "path {{path/to/directory(s)}}"
            },
            "Explanation": "Display or set the search path for executable files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/path"
        }
    },
    "pathchk": {
        "common": {
            "Examples": {
                "Check pathames for validity in the current system": "pathchk {{path1 path2 …}}",
                "Check pathnames for validity on a wider range of POSIX compliant systems": "pathchk -p {{path1 path2 …}}",
                "Check pathnames for validity on all POSIX compliant systems": "pathchk --portability {{path1 path2 …}}",
                "Only check for empty pathnames or leading dashes (-)": "pathchk -P {{path1 path2 …}}"
            },
            "Explanation": "Check the validity and portability of one or more pathnames.",
            "More Information Link": ""
        }
    },
    "pathping": {
        "windows": {
            "Examples": {
                "Display detailed usage information": "pathping /?",
                "Do not perform reverse lookup of ip-address to hostname": "pathping {{hostname}} -n",
                "Force IPV4 usage": "pathping {{hostname}} -4",
                "Force IPV6 usage": "pathping {{hostname}} -6",
                "Ping and trace the route to a host": "pathping {{hostname}}",
                "Specify the maximum number of hops to search for the target (the default is 30)": "pathping {{hostname}} -h {{max_hops}}",
                "Specify the milliseconds to wait between pings (the default is 240)": "pathping {{hostname}} -p {{time}}",
                "Specify the number of queries per hop (the default is 100)": "pathping {{hostname}} -q {{queries}}"
            },
            "Explanation": "A trace route tool combining features of `ping` and `tracert`.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/pathping"
        }
    },
    "pax": {
        "common": {
            "Examples": {
                "Copy to a directory, while keeping the original metadata; `target/` must exist": "pax -rw {{path/to/file1}} {{path/to/dir1}} {{path/to/dir2}} {{target/}}",
                "Create an archive from files": "pax -wf {{target.tar}} {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}",
                "Create an archive from files, using output redirection": "pax -w {{path/to/file1}} {{path/to/file2}} {{path/to/file3}} > {{target.tar}}",
                "Extract an archive into the current directory": "pax -rf {{source.tar}}",
                "List the contents of a gzipped archive": "pax -zf {{archive.tar.gz}}",
                "List the contents of an archive": "pax -f {{archive.tar}}"
            },
            "Explanation": "Archiving and copying utility.",
            "More Information Link": ""
        }
    },
    "pbcopy": {
        "osx": {
            "Examples": {
                "Place the contents of a file in the clipboard": "pbcopy < {{file}}",
                "Place the results of a command in the clipboard": "find . -type t -name \"*.png\" | pbcopy"
            },
            "Explanation": "Place standard output in the clipboard.",
            "More Information Link": ""
        }
    },
    "pbpaste": {
        "osx": {
            "Examples": {
                "Use the contents of the clipboard as input to a command": "pbpaste | grep foo",
                "Write the contents of the clipboard to a file": "pbpaste > {{file}}"
            },
            "Explanation": "Send the contents of the clipboard to standard output.",
            "More Information Link": ""
        }
    },
    "pdffonts": {
        "common": {
            "Examples": {
                "Print PDF file fonts information": "pdffonts {{path/to/file.pdf}}",
                "Print additional information on location of the font that will be used when the PDF file is converted to PostScript": "pdffonts -locPS {{path/to/file.pdf}}",
                "Print additional information on location of the font that will be used when the PDF file is rasterized": "pdffonts -loc {{path/to/file.pdf}}",
                "Specify owner password for PDF file to bypass security restrictions": "pdffonts -opw {{password}} {{path/to/file.pdf}}",
                "Specify user password for PDF file to bypass security restrictions": "pdffonts -upw {{password}} {{path/to/file.pdf}}"
            },
            "Explanation": "Portable Document Format (PDF) file fonts information viewer.",
            "More Information Link": "https://www.xpdfreader.com/pdffonts-man.html"
        }
    },
    "pdfgrep": {
        "linux": {
            "Examples": {
                "Do a case insensitive search for lines that begin with \"foo\" and return the first 3 matches": "pdfgrep --max-count {{3}} --ignore-case {{'^foo'}} {{file.pdf}}",
                "Find lines that match pattern in a PDF": "pdfgrep {{pattern}} {{file.pdf}}",
                "Find pattern in files with a .pdf extension in the current directory recursively": "pdfgrep --recursive {{pattern}}",
                "Find pattern on files that match a specific glob in the current directory recursively": "pdfgrep --recursive --include {{'*book.pdf'}} {{pattern}}",
                "Include file name and page number for each matched line": "pdfgrep --with-filename --page-number {{pattern}} {{file.pdf}}"
            },
            "Explanation": "Search text in PDF files.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Do a case insensitive search for lines that begin with \"foo\" and return the first 3 matches": "pdfgrep --max-count {{3}} --ignore-case {{'^foo'}} {{file.pdf}}",
                "Find lines that match pattern in a PDF": "pdfgrep {{pattern}} {{file.pdf}}",
                "Find pattern in files with a .pdf extension in the current directory recursively": "pdfgrep --recursive {{pattern}}",
                "Find pattern on files that match a specific glob in the current directory recursively": "pdfgrep --recursive --include {{'*book.pdf'}} {{pattern}}",
                "Include file name and page number for each matched line": "pdfgrep --with-filename --page-number {{pattern}} {{file.pdf}}"
            },
            "Explanation": "Search text in PDF files.",
            "More Information Link": ""
        }
    },
    "pdfimages": {
        "common": {
            "Examples": {
                "Extract all images from a PDF file and save them as PNGs": "pdfimages -png {{path/to/file.pdf}} {{filename_prefix}}",
                "Extract images from a PDF file and include the page number in the output filenames": "pdfimages -p {{path/to/file.pdf}} {{filename_prefix}}",
                "Extract images from pages 3 to 5": "pdfimages -f {{3}} -l {{5}} {{path/to/file.pdf}} {{filename_prefix}}",
                "List information about all the images in a PDF file": "pdfimages -list {{path/to/file.pdf}}"
            },
            "Explanation": "Utility for extracting images from PDFs.",
            "More Information Link": ""
        }
    },
    "pdfinfo": {
        "common": {
            "Examples": {
                "Print PDF file information": "pdfinfo {{path/to/file.pdf}}",
                "Specify owner password for PDF file to bypass security restrictions": "pdfinfo -opw {{password}} {{path/to/file.pdf}}",
                "Specify user password for PDF file to bypass security restrictions": "pdfinfo -upw {{password}} {{path/to/file.pdf}}"
            },
            "Explanation": "Portable Document Format (PDF) file information viewer.",
            "More Information Link": "https://www.xpdfreader.com/pdfinfo-man.html"
        }
    },
    "pdfjoin": {
        "common": {
            "Examples": {
                "Merge subranges from two PDFs": "pdfjoin {{file1 3-5,1}} {{file2 4-6}} --outfile {{output_file}}",
                "Merge two PDFs": "pdfjoin {{file1}} {{file2}} --outfile {{output_file}}",
                "Save pages 3 to 5 followed by page 1 to a new PDF": "pdfjoin {{file 3-5,1}} --outfile {{output_file}}"
            },
            "Explanation": "PDF merging utility.",
            "More Information Link": ""
        }
    },
    "pdflatex": {
        "common": {
            "Examples": {
                "Compile a pdf document": "pdflatex {{source.tex}}",
                "Compile a pdf document specifying an output directory": "pdflatex -output-directory={{path/to/directory}} {{source.tex}}",
                "Compile a pdf document, halting on each error": "pdflatex -halt-on-error {{source.tex}}"
            },
            "Explanation": "Compile a pdf document from LaTeX source files.",
            "More Information Link": ""
        }
    },
    "pdfposter": {
        "common": {
            "Examples": {
                "Convert an A2 poster into 4 A4 pages": "pdfposter --poster-size a2 {{input_file.pdf}} {{output_file.pdf}}",
                "Scale an A4 poster to A3 and then generate 2 A4 pages": "pdfposter --scale 2 {{input_file.pdf}} {{output_file.pdf}}"
            },
            "Explanation": "Convert a large-sheeted pdf into multiple A4 pages for printing.",
            "More Information Link": "https://pdfposter.readthedocs.io"
        }
    },
    "pdfseparate": {
        "common": {
            "Examples": {
                "Extract pages from PDF file and make a separate PDF file for each page": "pdfseparate {{path/to/source_filename.pdf}} {{path/to/destination_filename-%d.pdf}}",
                "Specify the first/start page for extraction": "pdfseparate -f {{3}} {{path/to/source_filename.pdf}} {{path/to/destination_filename-%d.pdf}}",
                "Specify the last page for extraction": "pdfseparate -l {{10}} {{path/to/source_filename.pdf}} {{path/to/destination_filename-%d.pdf}}"
            },
            "Explanation": "Portable Document Format (PDF) file page extractor.",
            "More Information Link": "https://manpages.debian.org/unstable/poppler-utils/pdfseparate.1.en.html"
        }
    },
    "pdftk": {
        "common": {
            "Examples": {
                "Extract pages 1-3, 5 and 6-10 from a PDF file and save them as another one": "pdftk {{input.pdf}} cat {{1-3 5 6-10}} output {{output.pdf}}",
                "Merge (concatenate) a list of PDF files and save the result as another one": "pdftk {{file1.pdf file2.pdf ...}} cat output {{output.pdf}}",
                "Rotate all pages by 180 degrees clockwise": "pdftk {{input.pdf}} cat {{1-endsouth}} output {{output.pdf}}",
                "Rotate third page by 90 degrees clockwise and leave others unchanged": "pdftk {{input.pdf}} cat {{1-2 3east 4-end}} output {{output.pdf}}",
                "Split each page of a PDF file into a separate file, with a given filename output pattern": "pdftk {{input.pdf}} burst output {{out_%d.pdf}}"
            },
            "Explanation": "PDF toolkit.",
            "More Information Link": "https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit"
        }
    },
    "pdftocairo": {
        "common": {
            "Examples": {
                "Convert a PDF file to JPEG": "pdftocairo {{path/to/file.pdf}} -jpeg",
                "Convert to PDF expanding the output to fill the paper": "pdftocairo {{path/to/file.pdf}} {{output.pdf}} -pdf -expand",
                "Convert to PNG cropping x and y pixels from the top left corner": "pdftocairo {{path/to/file.pdf}} -png -x {{x_pixels}} -y {{y_pixels}}",
                "Convert to PNG with 200ppi resolution": "pdftocairo {{path/to/file.pdf}} {{output.png}} -png -r 200",
                "Convert to SVG specifying the first/last page to convert": "pdftocairo {{path/to/file.pdf}} {{output.svg}} -svg -f {{first_page}} -l {{last_page}}",
                "Convert to grayscale TIFF setting paper size to A3": "pdftocairo {{path/to/file.pdf}} -tiff -gray -paper A3"
            },
            "Explanation": "Converts PDF files to PNG/JPEG/TIFF/PDF/PS/EPS/SVG using cairo.",
            "More Information Link": "https://poppler.freedesktop.org"
        }
    },
    "pdftotext": {
        "common": {
            "Examples": {
                "Convert filename.pdf to plain text and preserve the layout": "pdftotext -layout {{filename.pdf}}",
                "Convert filename.pdf to plain text and print it to standard output": "pdftotext {{filename.pdf}} -",
                "Convert filename.pdf to plain text and save it as filename.txt": "pdftotext {{filename.pdf}}",
                "Convert input.pdf to plain text and save it as output.txt": "pdftotext {{input.pdf}} {{output.txt}}",
                "Convert pages 2, 3 and 4 of input.pdf to plain text and save them as output.txt": "pdftotext -f {{2}} -l {{4}} {{input.pdf}} {{output.txt}}"
            },
            "Explanation": "Convert PDF files to plain text format.",
            "More Information Link": ""
        }
    },
    "pdfunite": {
        "common": {
            "Examples": {
                "Merge 2 PDFs into a single PDF": "pdfunite {{path/to/fileA.pdf}} {{path/to/fileB.pdf}} {{path/to/merged_output.pdf}}",
                "Merge a directory of PDFs into a single PDF": "pdfunite {{path/to/directory/*.pdf}} {{path/to/merged_output.pdf}}"
            },
            "Explanation": "PDF merging utility.",
            "More Information Link": "https://github.com/mtgrosser/pdfunite"
        }
    },
    "peerflix": {
        "common": {
            "Examples": {
                "List all streamable files contained in a torrent (given as a magnet link)": "peerflix \"{{magnet:?xt=urn:btih:0123456789abcdef0123456789abcdef01234567}}\" --list",
                "Stream all files from a torrent to Airplay": "peerflix \"{{torrent_url|magnet_link}}\" --all --airplay",
                "Stream the largest file in a torrent to MPlayer, with subtitles": "peerflix \"{{torrent_url|magnet_link}}\" --mplayer --subtitles {{subtitle-file.srt}}",
                "Stream the largest file in a torrent, given as a torrent URL, to VLC": "peerflix \"{{http://example.net/music.torrent}}\" --vlc",
                "Stream the largest media file in a torrent": "peerflix \"{{torrent_url|magnet_link}}\""
            },
            "Explanation": "Stream video- or audio-based torrents to a media player.",
            "More Information Link": "https://github.com/mafintosh/peerflix"
        }
    },
    "perf": {
        "linux": {
            "Examples": {
                "Display basic performance counter stats for a command": "perf stat {{gcc hello.c}}",
                "Display system-wide real time performance counter profile": "sudo perf top",
                "Read \"perf.data\" (created by `perf record`) and display the profile": "sudo perf report",
                "Run a command and record its profile into \"perf.data\"": "sudo perf record {{command}}"
            },
            "Explanation": "Framework for linux performance counter measurements.",
            "More Information Link": ""
        }
    },
    "perl": {
        "common": {
            "Examples": {
                "Check syntax errors on a Perl script": "perl -c {{script.pl}}",
                "Loo[p] over all lines of a file, editing them [i]n-place using a find/replace [e]xpression": "perl -p -i -e 's/{{find}}/{{replace}}/g' {{filename}}",
                "Parse and execute a Perl script": "perl {{script.pl}}",
                "Parse and execute a Perl statement": "perl -e {{perl_statement}}",
                "Run a Perl script in debug mode, using `perldebug`": "perl -d {{script.pl}}",
                "Run a find/replace expression on a file, saving the original file with a given extension": "perl -p -i'.old' -e 's/{{find}}/{{replace}}/g' {{filename}}",
                "Run a multi-line find/replace expression on a file, and save the result in another file": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
                "Run a regular expression on `stdin`, printing out the first capture group for each line": "cat {{path/to/input_file}} | perl -nle 'if (/.*({{foo}}).*/) {print \"$1\"; last;}'"
            },
            "Explanation": "The Perl 5 language interpreter.",
            "More Information Link": "https://www.perl.org"
        }
    },
    "pg_ctl": {
        "common": {
            "Examples": {
                "Initialize a new PostgreSQL database cluster": "pg_ctl -D {{data_directory}} init",
                "Reload the PostgreSQL server configuration": "pg_ctl -D {{data_directory}} reload",
                "Restart a PostgreSQL server": "pg_ctl -D {{data_directory}} restart",
                "Start a PostgreSQL server": "pg_ctl -D {{data_directory}} start",
                "Stop a PostgreSQL server": "pg_ctl -D {{data_directory}} stop"
            },
            "Explanation": "Utility for controlling a PostgreSQL server and database cluster.",
            "More Information Link": "https://www.postgresql.org/docs/current/app-pg-ctl.html"
        }
    },
    "pg_dump": {
        "common": {
            "Examples": {
                "Dump a database into a custom-format archive file": "pg_dump -Fc {{db_name}} > {{output_file.dump}}",
                "Dump database into a SQL-script file": "pg_dump {{db_name}} > {{output_file.sql}}",
                "Dump only database data into an SQL-script file": "pg_dump -a {{db_name}} > {{path/to/output_file.sql}}",
                "Dump only schema (data definitions) into an SQL-script file": "pg_dump -s {{db_name}} > {{path/to/output_file.sql}}",
                "Same as above, customize host and port": "pg_dump -h {{host}} -p {{port}} {{db_name}} > {{output_file.sql}}",
                "Same as above, customize username": "pg_dump -U {{username}} {{db_name}} > {{output_file.sql}}"
            },
            "Explanation": "Extract a PostgreSQL database into a script file or other archive file.",
            "More Information Link": "https://www.postgresql.org/docs/current/app-pgdump.html"
        }
    },
    "pg_restore": {
        "common": {
            "Examples": {
                "Clean database objects before creating them": "pg_restore --clean -d {{db_name}} {{archive_file.dump}}",
                "List database objects included in the archive": "pg_restore --list {{archive_file.dump}}",
                "Restore an archive into an existing database": "pg_restore -d {{db_name}} {{archive_file.dump}}",
                "Same as above, customize host and port": "pg_restore -h {{host}} -p {{port}} -d {{db_name}} {{archive_file.dump}}",
                "Same as above, customize username": "pg_restore -U {{username}} -d {{db_name}} {{archive_file.dump}}",
                "Use multiple jobs to do the restoring": "pg_restore -j {{2}} -d {{db_name}} {{archive_file.dump}}"
            },
            "Explanation": "Restore a PostgreSQL database from an archive file created by pg_dump.",
            "More Information Link": "https://www.postgresql.org/docs/current/app-pgrestore.html"
        }
    },
    "pgrep": {
        "common": {
            "Examples": {
                "Return PIDs of any running processes with a matching command string": "pgrep {{process_name}}",
                "Search for process run by a specific user": "pgrep -u root {{process_name}}",
                "Search full command line with parameters instead of just the process name": "pgrep -f \"{{process_name}} {{parameter}}\""
            },
            "Explanation": "Find or signal process by name.",
            "More Information Link": ""
        }
    },
    "phan": {
        "common": {
            "Examples": {
                "Analyse one or more directories": "phan --directory {{path/to/directory}} --directory {{path/to/another_directory}}",
                "Analyse the current directory": "phan",
                "Generate a Phan configuration file using a specific level (1 being strictest to 5 being the least strict)": "phan --init --init-level {{level}}",
                "Generate a `.phan/config.php` in the current directory": "phan --init",
                "Specify a config file (defaults to `.phan/config.php`)": "phan --config-file {{path/to/config.php}}",
                "Specify the number of parallel processes": "phan --processes {{number_of_processes}}",
                "Specify the output mode": "phan --output-mode {{text|verbose|json|csv|codeclimate|checkstyle|pylint|html}}"
            },
            "Explanation": "A static analysis tool for PHP.",
            "More Information Link": "https://github.com/phan/phan"
        }
    },
    "phar": {
        "linux": {
            "Examples": {
                "Add space-separated files or directories to a Phar file": "phar add -f {{path/to/phar_file}} {{files_or_directories}}",
                "Compress or uncompress files and directories in a Phar file": "phar compress -f {{path/to/phar_file}} -c {{algorithm}}",
                "Delete the specified file or directory from a Phar file": "phar delete -f {{path/to/phar_file}} -e {{file_or_directory}}",
                "Display full usage information and available hashing/compression algorithms": "phar help",
                "Display the contents of a Phar file": "phar list -f {{path/to/phar_file}}",
                "Get information about a Phar file": "phar info -f {{path/to/phar_file}}",
                "Sign a Phar file with a specific hash algorithm": "phar sign -f {{path/to/phar_file}} -h {{algorithm}}",
                "Sign a Phar file with an OpenSSL private key": "phar sign -f {{path/to/phar_file}} -h openssl -y {{path/to/private_key}}"
            },
            "Explanation": "Create, update or extract PHP archives (PHAR).",
            "More Information Link": ""
        }
    },
    "phing": {
        "common": {
            "Examples": {
                "Build using verbose output": "phing -verbose {{task_name}}",
                "Initialise a new build file": "phing -i {{path/to/build.xml}}",
                "Perform a specific task": "phing {{task_name}}",
                "Perform the default task in the \"build.xml\" file": "phing",
                "Specify a custom build file path": "phing -f {{path/to/build.xml}} {{task_name}}",
                "Specify a custom listener class": "phing -listener {{class_name}} {{task_name}}",
                "Specify a log file to output to": "phing -b {{path/to/log_file}} {{task_name}}",
                "Specify custom properties to use in the build": "phing -D{{property}}={{value}} {{task_name}}"
            },
            "Explanation": "A PHP build tool based on Apache Ant.",
            "More Information Link": "https://www.phing.info"
        }
    },
    "phive": {
        "common": {
            "Examples": {
                "Display a list of available aliased Phars": "phive list",
                "Install a specified Phar globally": "phive install {{alias|url}} --global",
                "Install a specified Phar to a target directory": "phive install {{alias|url}} --target {{path/to/directory}}",
                "Install a specified Phar to the local directory": "phive install {{alias|url}}",
                "List all available commands": "phive help",
                "Remove a specified Phar file": "phive remove {{alias|url}}",
                "Remove unused Phar files": "phive purge",
                "Update all Phar files to the latest version": "phive update"
            },
            "Explanation": "The Phar Installation and Verification Environment for secure PHP application deployment.",
            "More Information Link": "https://phar.io"
        }
    },
    "photorec": {
        "linux": {
            "Examples": {
                "Run PhotoRec on a disk image (image.dd)": "sudo photorec {{path/to/image.dd}}",
                "Run PhotoRec on a specific device": "sudo photorec {{/dev/sdb}}"
            },
            "Explanation": "Deleted file recovery tool.\nIt is recommended to write recovered files to a disk separate to the one being recovered from.",
            "More Information Link": "https://www.cgsecurity.org/wiki/PhotoRec"
        }
    },
    "php": {
        "common": {
            "Examples": {
                "Check syntax on (i.e. lint) a PHP script": "php -l {{file}}",
                "Display information about the current PHP configuration": "php -i",
                "Get a list of installed PHP extensions": "php -m",
                "Parse and execute a php script": "php {{file}}",
                "Run PHP code (Notes: Don't use <? ?> tags; escape double quotes with backslash)": "php -r \"{{code}}\"",
                "Run PHP interactively": "php -a",
                "Start a PHP built-in web server in the current directory": "php -S {{host:port}}"
            },
            "Explanation": "PHP command line interface.",
            "More Information Link": "https://php.net"
        }
    },
    "php artisan": {
        "common": {
            "Examples": {
                "Display a list of all available commands": "php artisan help",
                "Generate a new Eloquent model class with a migration, factory and resource controller": "php artisan make:model {{ModelName}} --all",
                "Start PHP's built-in web server for the current Laravel application": "php artisan serve",
                "Start an interactive PHP command line interface": "php artisan tinker"
            },
            "Explanation": "Laravel's Artisan command line interface.",
            "More Information Link": "https://laravel.com/docs/artisan"
        }
    },
    "php yii": {
        "common": {
            "Examples": {
                "Display a list of all available commands": "php yii {{help}}",
                "Generate a controller, views and related files for the CRUD actions on the specified model class": "php yii {{gii/crud}} --modelClass={{ModelName}} --controllerClass={{ControllerName}}",
                "Start PHP's built-in web server for the current Yii application": "php yii {{serve}}"
            },
            "Explanation": "Yii Framework's command line interface.",
            "More Information Link": "https://yiiframework.com"
        }
    },
    "phpbu": {
        "common": {
            "Examples": {
                "Only run the specified backups": "phpbu --limit={{backup_task_name}}",
                "Run backups using a specific configuration file": "phpbu --configuration={{path/to/configuration_file.xml}}",
                "Run backups using the default \"phpbu.xml\" configuration file": "phpbu",
                "Simulate the actions that would have been performed": "phpbu --simulate"
            },
            "Explanation": "A backup utility framework for PHP.",
            "More Information Link": "https://phpbu.de"
        }
    },
    "phpcbf": {
        "common": {
            "Examples": {
                "A comma-separated list of files to load before processing": "phpcbf {{path/to/directory}} --bootstrap {{file(s)}}",
                "Display a list of installed coding standards": "phpcbf -i",
                "Don't recurse into subdirectories": "phpcbf {{path/to/directory}} -l",
                "Fix issues in the specified directory (defaults to the PEAR standard)": "phpcbf {{path/to/directory}}",
                "Specify a coding standard to validate against": "phpcbf {{path/to/directory}} --standard {{standard}}",
                "Specify comma-separated file extensions to include when sniffing": "phpcbf {{path/to/directory}} --extensions {{file_extension(s)}}"
            },
            "Explanation": "Fix violations detected by phpcs.",
            "More Information Link": "https://github.com/squizlabs/PHP_CodeSniffer"
        }
    },
    "phpcpd": {
        "common": {
            "Examples": {
                "Analyse duplicated code for a specific file or directory": "phpcpd {{path/to/file_or_directory}}",
                "Analyse using fuzzy matching for variable names": "phpcpd --fuzzy {{path/to/file_or_directory}}",
                "Exclude a directory from analysis (must be relative to the source)": "phpcpd --exclude {{path/to/excluded_directory}} {{path/to/file_or_directory}}",
                "Output the results to a PHP-CPD XML file": "phpcpd --log-pmd {{path/to/log_file}} {{path/to/file_or_directory}}",
                "Specify a minimum number of identical lines (defaults to 5)": "phpcpd --min-lines {{number_of_lines}} {{path/to/file_or_directory}}",
                "Specify a minimum number of identical tokens (defaults to 70)": "phpcpd --min-tokens {{number_of_tokens}} {{path/to/file_or_directory}}"
            },
            "Explanation": "A copy and paste detector for PHP code.",
            "More Information Link": "https://github.com/sebastianbergmann/phpcpd"
        }
    },
    "phpcs": {
        "common": {
            "Examples": {
                "A comma-separated list of files to load before processing": "phpcs {{path/to/directory}} --bootstrap {{file(s)}}",
                "Display a list of installed coding standards": "phpcs -i",
                "Don't recurse into subdirectories": "phpcs {{path/to/directory}} -l",
                "Set config variables to be used during the process": "phpcs {{path/to/directory}} --config-set {{key}} {{value}}",
                "Sniff the specified directory for issues (defaults to the PEAR standard)": "phpcs {{path/to/directory}}",
                "Specify a coding standard to validate against": "phpcs {{path/to/directory}} --standard {{standard}}",
                "Specify comma-separated file extensions to include when sniffing": "phpcs {{path/to/directory}} --extensions {{file_extension(s)}}",
                "Specify the format of the output report (e.g. `full`, `xml`, `json`, `summary`)": "phpcs {{path/to/directory}} --report {{format}}"
            },
            "Explanation": "Tokenize PHP, JavaScript and CSS files to detect violations of a defined set of coding standards.",
            "More Information Link": "https://github.com/squizlabs/PHP_CodeSniffer"
        }
    },
    "phpdismod": {
        "linux": {
            "Examples": {
                "Disable the json extension for PHP 7.3 with the cli SAPI": "sudo phpdismod -v {{7.3}} -s {{cli}} {{json}}",
                "Disable the json extension for every SAPI of every PHP version": "sudo phpdismod {{json}}"
            },
            "Explanation": "Disable PHP extensions on Debian-based OSes.",
            "More Information Link": ""
        }
    },
    "phpenmod": {
        "linux": {
            "Examples": {
                "Enable the json extension for PHP 7.3 with the cli SAPI": "sudo phpenmod -v {{7.3}} -s {{cli}} {{json}}",
                "Enable the json extension for every SAPI of every PHP version": "sudo phpenmod {{json}}"
            },
            "Explanation": "Enable PHP extensions on Debian-based OSes.",
            "More Information Link": ""
        }
    },
    "phpenv": {
        "common": {
            "Examples": {
                "Display the currently active PHP version": "phpenv version",
                "Install a PHP version globally": "phpenv install {{version}}",
                "List all installed PHP versions": "phpenv versions",
                "Refresh shim files for all PHP binaries known to `phpenv`": "phpenv rehash",
                "Set the global PHP version": "phpenv global {{version}}",
                "Set the local PHP version, which overrides the global version": "phpenv local {{version}}",
                "Unset the local PHP version": "phpenv local --unset"
            },
            "Explanation": "A PHP version manager for development purposes.",
            "More Information Link": "https://github.com/phpenv/phpenv"
        }
    },
    "phpize": {
        "common": {
            "Examples": {
                "Delete files previously created by phpize": "phpize --clean",
                "Prepare the PHP extension in the current directory for compiling": "phpize"
            },
            "Explanation": "Prepare a PHP extension for compiling.",
            "More Information Link": "https://www.php.net/manual/install.pecl.phpize"
        }
    },
    "phploc": {
        "common": {
            "Examples": {
                "Analyse a directory and print the result": "phploc {{path/to/directory}}",
                "Count PHPUnit test case classes and test methods": "phploc {{path/to/directory}} --count-tests",
                "Exclude a specific directory from analysis": "phploc {{path/to/directory}} --exclude {{path/to/exclude_directory}}",
                "Exclude specific files from a comma-separated list (globs are allowed)": "phploc {{path/to/directory}} --names-exclude {{files}}",
                "Include only specific files from a comma-separated list (globs are allowed)": "phploc {{path/to/directory}} --names {{files}}",
                "Log the results to a specific CSV file": "phploc {{path/to/directory}} --log-csv {{path/to/file}}",
                "Log the results to a specific XML file": "phploc {{path/to/directory}} --log-xml {{path/to/file}}"
            },
            "Explanation": "A tool for quickly measuring the size and analyzing the structure of a PHP project.",
            "More Information Link": "https://github.com/sebastianbergmann/phploc"
        }
    },
    "phpmd": {
        "common": {
            "Examples": {
                "Display a list of available rulesets and formats": "phpmd",
                "Exclude the specified comma-separated directories": "phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --exclude {{directory_patterns}}",
                "Ignore the use of warning-suppressive PHPDoc comments": "phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --strict",
                "Include only the specified extensions in analysis": "phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --suffixes {{extensions}}",
                "Output the results to a file instead of `stdout`": "phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --reportfile {{path/to/report_file}}",
                "Scan a file or directory for problems using comma-separated rulesets": "phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}}",
                "Specify the minimum priority threshold for rules": "phpmd {{path/to/file_or_directory}} {{xml|text|html}} {{rulesets}} --minimumpriority {{priority}}"
            },
            "Explanation": "A PHP mess detector that checks for common potential problems.",
            "More Information Link": "https://github.com/phpmd/phpmd"
        }
    },
    "phpquery": {
        "linux": {
            "Examples": {
                "Check if the json extension is enabled for PHP 7.3 with the apache2 SAPI": "sudo phpquery -v {{7.3}} -s {{apache2}} -m {{json}}",
                "List available PHP versions": "sudo phpquery -V",
                "List available SAPIs for PHP 7.3": "sudo phpquery -v {{7.3}} -S",
                "List enabled extensions for PHP 7.3 with the cli SAPI": "sudo phpquery -v {{7.3}} -s {{cli}} -M"
            },
            "Explanation": "PHP extension manager for Debian-based OSes.",
            "More Information Link": ""
        }
    },
    "phpspec": {
        "common": {
            "Examples": {
                "Create a specification for a class": "phpspec describe {{class_name}}",
                "Disable code generation prompts": "phpspec run --no-code-generation",
                "Enable fake return values": "phpspec run --fake",
                "Run a single specification": "phpspec run {{path/to/class_specification_file}}",
                "Run all specifications in the \"spec\" directory": "phpspec run",
                "Run specifications using a specific bootstrap file": "phpspec run -b {{path/to/bootstrap_file}}",
                "Run specifications using a specific configuration file": "phpspec run -c {{path/to/configuration_file}}"
            },
            "Explanation": "A Behaviour Driven Development tool for PHP.",
            "More Information Link": "https://phpspec.net"
        }
    },
    "phpstan": {
        "common": {
            "Examples": {
                "Analyse a directory using a configuration file": "phpstan analyse {{path/to/directory}} --configuration {{path/to/config}}",
                "Analyse the specified space-separated directories": "phpstan analyse {{path/to/directory}}",
                "Analyse using a specific rule level (0-7, higher is stricter)": "phpstan analyse {{path/to/directory}} --level {{level}}",
                "Display available options for analysis": "phpstan analyse --help",
                "Specify a memory limit during analysis": "phpstan analyse {{path/to/directory}} --memory-limit {{memory_limit}}",
                "Specify an autoload file to load before analysing": "phpstan analyse {{path/to/directory}} --autoload-file {{path/to/autoload_file}}"
            },
            "Explanation": "A PHP static analysis tool to discover bugs in code.",
            "More Information Link": "https://github.com/phpstan/phpstan"
        }
    },
    "phpstorm": {
        "common": {
            "Examples": {
                "Open a file": "phpstorm {{path/to/file}}",
                "Open a file at a specific line": "phpstorm --line {{line_number}} {{path/to/file}}",
                "Open a specific directory": "phpstorm {{path/to/directory}}",
                "View the differences between two files": "phpstorm diff {{path/to/left_file}} {{path/to/right_file}}"
            },
            "Explanation": "A cross-platform IDE for PHP based on the JetBrains IntelliJ platform.",
            "More Information Link": "https://jetbrains.com/phpstorm"
        }
    },
    "phpunit": {
        "common": {
            "Examples": {
                "Run tests and generate a coverage report in HTML": "phpunit --coverage-html {{directory}}",
                "Run tests annotated with the given group": "phpunit --group {{name}}",
                "Run tests in a specific file": "phpunit {{path/to/TestFile.php}}",
                "Run tests in the current directory. Note: Expects you to have a 'phpunit.xml'": "phpunit"
            },
            "Explanation": "PHPUnit command-line test runner.",
            "More Information Link": "https://phpunit.de"
        }
    },
    "physlock": {
        "linux": {
            "Examples": {
                "Disable SysRq mechanism while locked": "physlock -s",
                "Display a message before the password prompt": "physlock -p \"{{Locked!}}\"",
                "Fork and detach physlock (useful for suspend or hibernate scripts)": "physlock -d",
                "Lock every console (require current user or root to unlock)": "physlock",
                "Mute kernel messages on console while locked": "physlock -m"
            },
            "Explanation": "Lock all consoles and virtual terminals.",
            "More Information Link": "http://github.com/muennich/physlock"
        }
    },
    "pi": {
        "linux": {
            "Examples": {
                "Display 100 decimal digits of Archimedes' constant Pi": "pi",
                "Display a specified number of decimal digits of Archimedes' constant Pi": "pi {{number}}",
                "Display help": "pi --help",
                "Display recommended readings": "pi --bibliography",
                "Display version": "pi --version"
            },
            "Explanation": "Compute decimal Archimedes' constant Pi on the command line.",
            "More Information Link": "http://manpages.ubuntu.com/manpages/trusty/man1/pi.1.html"
        }
    },
    "piactl": {
        "common": {
            "Examples": {
                "Connect to Private Internet Access": "piactl connect",
                "Disconnect from Private Internet Access": "piactl disconnect",
                "Display the current VPN region": "piactl get region",
                "Enable or disable the Private Internet Access daemon in the background": "piactl background {{enable|disable}}",
                "List all available VPN regions": "piactl get regions",
                "Log in to Private Internet Access": "piactl login {{path/to/login_file}}",
                "Log out of Private Internet Access": "piactl logout",
                "Set your VPN region": "piactl set region {{region}}"
            },
            "Explanation": "The command line tool for Private Internet Access, a commercial VPN provider.",
            "More Information Link": "https://privateinternetaccess.com/helpdesk/kb/articles/pia-desktop-command-line-interface"
        }
    },
    "picard": {
        "common": {
            "Examples": {
                "Display the version of Picard installed": "picard --long-version",
                "Open a set of files": "picard {{path/to/file1.mp3}} {{path/to/file2.mp3}}",
                "Start Picard": "picard"
            },
            "Explanation": "Next generation MusicBrainz tagging application.",
            "More Information Link": "https://picard.musicbrainz.org/"
        }
    },
    "pickle": {
        "common": {
            "Examples": {
                "Convert an existing PECL extension configuration to a Pickle configuration file": "pickle convert {{path/to/directory}}",
                "Install a specific PHP extension": "pickle install {{extension_name}}",
                "Package a PECL extension for release": "pickle release {{path/to/directory}}",
                "Validate a PECL extension": "pickle validate {{path/to/directory}}"
            },
            "Explanation": "A PHP extension installer based on Composer.",
            "More Information Link": "https://github.com/FriendsOfPHP/pickle"
        }
    },
    "pidof": {
        "linux": {
            "Examples": {
                "Kill all processes with given name": "kill \"$(pidof {{name}})\"",
                "List a single process ID with given name": "pidof -s {{bash}}",
                "List all process IDs with given name": "pidof {{bash}}",
                "List process IDs including scripts with given name": "pidof -x {{script.py}}"
            },
            "Explanation": "Gets the ID of a process using its name.",
            "More Information Link": ""
        }
    },
    "pidstat": {
        "linux": {
            "Examples": {
                "Show CPU statistics at a 2 second interval for 10 times": "pidstat {{2}} {{10}}",
                "Show information on a specific PID": "pidstat -p {{PID}}",
                "Show input/output usage per process id": "pidstat -d",
                "Show memory statistics for all processes whose command name include \"fox\" or \"bird\"": "pidstat -C \"{{fox|bird}}\" -r -p ALL",
                "Show page faults and memory utilization": "pidstat -r"
            },
            "Explanation": "Show system resource usage, including CPU, memory, IO etc.",
            "More Information Link": ""
        }
    },
    "pigz": {
        "common": {
            "Examples": {
                "Compress a directory using tar": "tar cf - {{path/to/directory}} | pigz > {{filename}}.tar.gz",
                "Compress a file using no compression and 4 processors": "pigz -0 -p{{4}} {{filename}}",
                "Compress a file using the best compression method": "pigz -9 {{filename}}",
                "Compress a file with default options": "pigz {{filename}}",
                "Decompress a file": "pigz -d {{archive.gz}}",
                "List the contents of an archive": "pigz -l {{archive.tar.gz}}"
            },
            "Explanation": "Multithreaded zlib compression utility.",
            "More Information Link": "https://github.com/madler/pigz"
        }
    },
    "pihole": {
        "linux": {
            "Examples": {
                "Check the Pi-hole daemon's status": "pihole status",
                "Monitor detailed system status": "pihole chronometer",
                "Restart the daemon (not the server itself)": "pihole restartdns",
                "Search the lists for a domain": "pihole query {{example.com}}",
                "Start or stop the daemon": "pihole {{enable|disable}}",
                "Whitelist or blacklist a domain": "pihole {{whitelist|blacklist}} {{example.com}}"
            },
            "Explanation": "Terminal interface for the Pi-Hole ad-blocking DNS server.",
            "More Information Link": "https://pi-hole.net"
        }
    },
    "ping": {
        "common": {
            "Examples": {
                "Also display a message if no response was received": "ping -O {{host}}",
                "Ping a host only a specific number of times": "ping -c {{count}} {{host}}",
                "Ping host": "ping {{host}}",
                "Ping host and ring the bell when a packet is received (if your terminal supports it)": "ping -a {{host}}",
                "Ping host without trying to lookup symbolic names for addresses": "ping -n {{host}}",
                "Ping host, specifying the interval in seconds between requests (default is 1 second)": "ping -i {{seconds}} {{host}}"
            },
            "Explanation": "Send ICMP ECHO_REQUEST packets to network hosts.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Ping `host` and prints the time a packet was received (this option is an Apple addition)": "ping --apple-time {{host}}",
                "Ping `host` and ring the bell when a packet is received (if your terminal supports it)": "ping -a {{host}}",
                "Ping `host` without trying to lookup symbolic names for addresses": "ping -n {{host}}",
                "Ping `host`, specifying the interval in `seconds` between requests (default is 1 second)": "ping -i {{seconds}} {{host}}",
                "Ping a host a specific number of times": "ping -c {{count}} {{host}}",
                "Ping the specified host": "ping {{host}}"
            },
            "Explanation": "Send ICMP ECHO_REQUEST packets to network hosts.",
            "More Information Link": ""
        }
    },
    "ping6": {
        "common": {
            "Examples": {
                "Ping a host": "ping6 {{host}}",
                "Ping a host and ring the bell when a packet is received (if your terminal supports it)": "ping6 -a {{host}}",
                "Ping a host only a specific number of times": "ping6 -c {{count}} {{host}}",
                "Ping a host without trying to lookup symbolic names for addresses": "ping6 -n {{host}}",
                "Ping a host, specifying the interval in seconds between requests (default is 1 second)": "ping6 -i {{seconds}} {{host}}"
            },
            "Explanation": "Send ICMP ECHO_REQUEST packets to network hosts via IPv6 address.",
            "More Information Link": ""
        }
    },
    "pinky": {
        "common": {
            "Examples": {
                "Display details about the current user": "pinky",
                "Display details for a specific user": "pinky {{user}}",
                "Display details in the long format": "pinky {{user}} -l",
                "Omit the column headings in short format": "pinky {{user}} -f",
                "Omit the user's home directory and shell in long format": "pinky {{user}} -lb",
                "Omit the user's project file in long format": "pinky {{user}} -lh"
            },
            "Explanation": "Print user information using the `finger` protocol.",
            "More Information Link": ""
        }
    },
    "pip": {
        "common": {
            "Examples": {
                "Install a package": "pip install {{package_name}}",
                "Install a specific version of a package": "pip install {{package_name}}=={{package_version}}",
                "Install packages from file": "pip install -r {{requirements.txt}}",
                "Save installed packages to file": "pip freeze > {{requirements.txt}}",
                "Show installed package info": "pip show {{package_name}}",
                "Uninstall a package": "pip uninstall {{package_name}}",
                "Upgrade a package": "pip install -U {{package_name}}"
            },
            "Explanation": "Python package manager.",
            "More Information Link": "https://pip.pypa.io"
        }
    },
    "pip3": {
        "common": {
            "Examples": {
                "Find available packages": "pip3 search {{package_name}}",
                "Install a package": "pip3 install {{package_name}}",
                "Install a specific version of a package": "pip3 install {{package_name}}=={{package_version}}",
                "Install packages from a file": "pip3 install --requirements {{requirements.txt}}",
                "Save the list of installed packages to a file": "pip3 freeze > {{requirements.txt}}",
                "Show installed package info": "pip3 show {{package_name}}",
                "Uninstall a package": "pip3 uninstall {{package_name}}",
                "Upgrade a package": "pip3 install --upgrade {{package_name}}"
            },
            "Explanation": "Python package manager.",
            "More Information Link": "https://pip.pypa.io"
        }
    },
    "pipenv": {
        "common": {
            "Examples": {
                "Create a new project": "pipenv",
                "Create a new project using Python 3": "pipenv --three",
                "Generate a requirements.txt for a project": "pipenv lock --requirements",
                "Install a package": "pipenv install {{package_name}}",
                "Install all the dependencies for a project (including dev)": "pipenv install --dev",
                "Start a shell within the created virtual environment": "pipenv shell",
                "Uninstall a package": "pipenv uninstall {{package_name}}"
            },
            "Explanation": "Simple and unified Python development workflow.\nManages packages and the virtual environment for a project.",
            "More Information Link": "https://pypi.org/project/pipenv"
        }
    },
    "pipx": {
        "common": {
            "Examples": {
                "Install a package in a virtual environment and add entry points to path": "pipx install {{package}}",
                "List installed packages": "pipx list",
                "Run an app in a temporary virtual environment": "pipx run {{pycowsay}} {{moo}}",
                "Run an app in a temporary virtual environment with a pakage name different from the executable": "pipx run --spec {{httpx-cli}} {{httpx}} {{http://www.github.com}}"
            },
            "Explanation": "Install and run python applications in isolated environments.",
            "More Information Link": "https://github.com/pipxproject/pipx"
        }
    },
    "pivpn": {
        "linux": {
            "Examples": {
                "Add a new client device": "sudo pivpn add",
                "List all client devices": "sudo pivpn list",
                "List currently connected devices and their statistics": "sudo pivpn clients",
                "Revoke a previously authenticated device": "sudo pivpn revoke",
                "Uninstall PiVPN": "sudo pivpn uninstall"
            },
            "Explanation": "Easy security-hardened OpenVPN setup and manager.\nOriginally designed for the Raspberry Pi, but works on other Linux devices too.",
            "More Information Link": "http://www.pivpn.io/"
        }
    },
    "pkg-config": {
        "linux": {
            "Examples": {
                "Compile your code with libgtk-3, libwebkit2gtk-4.0 and all their dependencies": "c++ example.cpp $(pkg-config --cflags --libs gtk+-3.0 webkit2gtk-4.0) -o example",
                "Get the list of libraries and their dependencies": "pkg-config --libs {{library1 library2 ...}}",
                "Get the list of libraries, their dependencies, and proper cflags for gcc": "pkg-config --cflags --libs {{library1 library2 ...}}"
            },
            "Explanation": "Provide the details of installed libraries for compiling applications.",
            "More Information Link": "https://www.freedesktop.org/wiki/Software/pkg-config/"
        }
    },
    "pkgadd": {
        "linux": {
            "Examples": {
                "Install a local software package": "pkgadd {{package_name}}",
                "Update an already installed package from a local package": "pkgadd -u {{package_name}}"
            },
            "Explanation": "Add a package to a CRUX system.",
            "More Information Link": ""
        }
    },
    "pkginfo": {
        "linux": {
            "Examples": {
                "List files owned by a package": "pkginfo -l {{package_name}}",
                "List installed packages and their versions": "pkginfo -i",
                "List the owner(s) of files matching a pattern": "pkginfo -o {{pattern}}",
                "Print the footprint of a file": "pkginfo -f {{file}}"
            },
            "Explanation": "Query the package database on a CRUX system.",
            "More Information Link": ""
        }
    },
    "pkgmk": {
        "linux": {
            "Examples": {
                "Ignore the MD5 sum when making a package": "pkgmk -d -im",
                "Ignore the footprint when making a package": "pkgmk -d -if",
                "Install the package after making it": "pkgmk -d -i",
                "Make and download a package": "pkgmk -d",
                "Update the package's footprint": "pkgmk -uf",
                "Upgrade the package after making it": "pkgmk -d -u"
            },
            "Explanation": "Make a binary package for use with pkgadd on CRUX.",
            "More Information Link": ""
        }
    },
    "pkgrm": {
        "linux": {
            "Examples": {
                "Remove an installed package": "pkgrm {{package_name}}"
            },
            "Explanation": "Remove a package from a CRUX system.",
            "More Information Link": ""
        }
    },
    "pkgutil": {
        "osx": {
            "Examples": {
                "Extract the contents of a package file into a directory": "pkgutil  --expand-full {{path/to/filename.pkg}} {{path/to/directory}}",
                "List all the files for an installed package given its ID": "pkgutil --files {{com.microsoft.Word}}",
                "List package IDs for all installed packages": "pkgutil --pkgs",
                "Verify cryptographic signatures of a package file": "pkgutil --check-signature {{path/to/filename.pkg}}"
            },
            "Explanation": "Query and manipulate Mac OS X Installer packages and receipts.",
            "More Information Link": ""
        }
    },
    "pkill": {
        "common": {
            "Examples": {
                "Kill all processes which match": "pkill -9 {{process_name}}",
                "Kill all processes which match their full command instead of just the process name": "pkill -9 -f \"{{command_name}}\"",
                "Send SIGUSR1 signal to processes which match": "pkill -USR1 {{process_name}}"
            },
            "Explanation": "Signal process by name.\nMostly used for stopping processes.",
            "More Information Link": ""
        }
    },
    "plantuml": {
        "common": {
            "Examples": {
                "Display help": "plantuml -help",
                "Render a diagram in given format (e.g. `png`, `pdf`, `svg`, `txt`)": "plantuml -t {{format}} {{diagram.puml}}",
                "Render a diagram to the output directory": "plantuml -o {{path/to/output}} {{diagram.puml}}",
                "Render a diagram with the configuration file": "plantuml -config {{config.cfg}} {{diagram.puml}}",
                "Render all diagrams of a directory": "plantuml {{path/to/diagrams}}",
                "Render diagrams to default format (PNG)": "plantuml {{diagram1.puml}} {{diagram2.puml}}"
            },
            "Explanation": "Create UML diagrams from a plain text language and render them in different formats.",
            "More Information Link": "https://plantuml.com/en/command-line"
        }
    },
    "play": {
        "common": {
            "Examples": {
                "Play the given audio at twice the speed": "play {{audiofile}} speed 2.0",
                "Play the given audio file": "play {{audiofile}}",
                "Play the given audio files": "play {{audiofile1}} {{audiofile2}}",
                "Play the given audio in reverse": "play {{audiofile}} reverse"
            },
            "Explanation": "Audio player of SoX - Sound eXchange.\nPlays any audio from the command line, with audio formats identified by the extension.",
            "More Information Link": "http://sox.sourceforge.net"
        }
    },
    "playerctl": {
        "linux": {
            "Examples": {
                "List all players": "playerctl --list-all",
                "Next media": "playerctl next",
                "Previous media": "playerctl previous",
                "Send a command to a specific player": "playerctl --player={{player_name}} {{command}}",
                "Send a command to all players": "playerctl --all-players {{command}}",
                "Show now playing": "playerctl metadata --format \"Now playing: {{artist}} - {{album}} - {{title}}\"",
                "Toggle play": "playerctl play-pause"
            },
            "Explanation": "Utility to control different media players.",
            "More Information Link": "https://github.com/altdesktop/playerctl"
        }
    },
    "plutil": {
        "osx": {
            "Examples": {
                "Convert a plist file to a different format, writing to `stdout`": "plutil -convert {{xml1|binary1|json|swift|objc}} {{path/to/file.plist}} -o -",
                "Convert a plist file to a different format, writing to a new file": "plutil -convert {{xml1|binary1|json|swift|objc}} {{path/to/file.plist}} -o {{path/to/new_file.plist}}",
                "Convert one or more plist files to XML format, overwriting the original files in-place": "plutil -convert xml1 {{file1.plist file2.plist ...}}",
                "Convert one or more plist files to binary format, overwriting the original files in-place": "plutil -convert binary1 {{file1.plist file2.plist ...}}",
                "Display the contents of one or more plist files in human-readable format": "plutil -p {{file1.plist file2.plist ...}}"
            },
            "Explanation": "View, convert, validate, or edit property list (\"plist\") files.",
            "More Information Link": ""
        }
    },
    "pm2": {
        "common": {
            "Examples": {
                "Dump all processes for resurrecting them later": "pm2 save",
                "Launch monitoring": "pm2 monit",
                "List processes": "pm2 list",
                "Monitor all processes": "pm2 monit",
                "Restart a process": "pm2 restart {{myapp}}",
                "Resurrect previously dumped processes": "pm2 resurrect",
                "Start a process with a name that can be used for later operations": "pm2 start {{app.js}} --name {{myapp}}",
                "Stop a process": "pm2 stop {{myapp}}"
            },
            "Explanation": "Process manager for Node.js.\nUsed for log management, monitoring and configuring processes.",
            "More Information Link": "https://pm2.keymetrics.io"
        }
    },
    "pmset": {
        "osx": {
            "Examples": {
                "Display the current power management settings": "pmset -g",
                "Display the current power source and battery levels": "pmset -g batt",
                "Put display to sleep immediately": "pmset displaysleepnow",
                "Restore to system defaults": "sudo pmset -a displaysleep 10 disksleep 10 sleep 30 womp 1",
                "Schedule computer to automatically wake up every weekday at 9 AM": "sudo pmset repeat wake MTWRF 09:00:00",
                "Set display to never sleep when on charger power": "sudo pmset -c displaysleep 0",
                "Set display to sleep after 15 minutes when on battery power": "sudo pmset -b displaysleep 15"
            },
            "Explanation": "Configure macOS power management settings, as one might do in System Preferences > Energy Saver.\nCommands that modify settings must begin with `sudo`.",
            "More Information Link": ""
        }
    },
    "pngcrush": {
        "common": {
            "Examples": {
                "Compress PNG file with all 114 available algorithms and pick the best result": "pngcrush -rem allb -brute -reduce {{in.png}} {{out.png}}",
                "Compress a PNG file": "pngcrush {{in.png}} {{out.png}}",
                "Compress all PNGs and output to directory": "pngcrush -d {{path/to/output}} *.png"
            },
            "Explanation": "PNG image compression utility.",
            "More Information Link": "https://pmt.sourceforge.io/pngcrush"
        }
    },
    "pod": {
        "osx": {
            "Examples": {
                "Create a Podfile for the current project with the default contents": "pod init",
                "Download and install all pods defined in the Podfile (that haven't been installed before)": "pod install",
                "List all available pods": "pod list",
                "Remove CocoaPods from a Xcode project": "pod deintegrate {{xcode_project}}",
                "Show the outdated pods (of those currently installed)": "pod outdated",
                "Update a specific (previously installed) pod to its newest version": "pod update {{pod_name}}",
                "Update all currently installed pods to their newest version": "pod update"
            },
            "Explanation": "Dependency manager for Swift and Objective-C Cocoa projects.",
            "More Information Link": ""
        }
    },
    "podman": {
        "common": {
            "Examples": {
                "Display the logs of one or more containers and follow log output": "podman logs --follow {{container_name}} {{container_id}}",
                "List all containers (both running and stopped)": "podman ps --all",
                "Open a shell inside of an already running container": "podman exec --interactive --tty {{container_name}} {{sh}}",
                "Print out information about containers": "podman ps",
                "Pull an image from a registry (defaults to the Docker Hub)": "podman pull {{image_name}}:{{image_tag}}",
                "Remove one or more stopped containers": "podman rm {{container_name}} {{container_id}}",
                "Start one or more containers": "podman start {{container_name}} {{container_id}}",
                "Stop one or more running containers": "podman stop {{container_name}} {{container_id}}"
            },
            "Explanation": "Simple management tool for pods, containers and images.\nPodman provides a Docker-CLI comparable command line. Simply put: `alias docker=podman`.",
            "More Information Link": "https://github.com/containers/libpod/blob/master/commands.md"
        }
    },
    "poetry": {
        "common": {
            "Examples": {
                "Create a new Poetry project in the directory with a specific name": "poetry new {{project_name}}",
                "Execute a command inside the project's virtual environment": "poetry run {{command}}",
                "Get the latest version of all dependencies and update poetry.lock": "poetry update",
                "Install a dependency and its subdependencies": "poetry add {{dependency}}",
                "Interactively initialize the current directory as a new Poetry project": "poetry init"
            },
            "Explanation": "Manage Python packages and dependencies.",
            "More Information Link": "https://python-poetry.org/docs"
        }
    },
    "popd": {
        "linux": {
            "Examples": {
                "Remove the Nth directory (starting from zero to the left from the list printed with `dirs`)": "popd +N",
                "Remove the Nth directory (starting from zero to the right from the list printed with `dirs`)": "popd -N",
                "Remove the top directory from the stack and cd to it": "popd"
            },
            "Explanation": "Remove a directory placed on the directory stack by the `pushd` command.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Remove the Nth directory (starting from zero to the left from the list printed with `dirs`)": "popd +N",
                "Remove the Nth directory (starting from zero to the right from the list printed with `dirs`)": "popd -N",
                "Remove the top directory from the stack and cd to it": "popd"
            },
            "Explanation": "Remove a directory placed on the directory stack via the pushd shell built-in.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Switch to directory at the top of the stack": "popd"
            },
            "Explanation": "Changes the current directory to the directory stored by the `pushd` command.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/popd"
        }
    },
    "popeye": {
        "common": {
            "Examples": {
                "Scan a specific namespace": "popeye -n {{namespace}}",
                "Scan specific Kubernetes context": "popeye --context={{context}}",
                "Scan the current Kubernetes cluster": "popeye",
                "Use a spinach configuration file for scanning": "popeye -f {{spinach.yaml}}"
            },
            "Explanation": "Utility that reports potential issues with Kubernetes deployment manifests.",
            "More Information Link": "https://github.com/derailed/popeye"
        }
    },
    "port": {
        "osx": {
            "Examples": {
                "Install a package": "sudo port install {{package_name}}",
                "List installed packages": "port installed",
                "Remove old versions of installed packages": "sudo port uninstall inactive",
                "Search for a package": "port search {{search_term}}",
                "Update port and fetch latest list of available packages": "sudo port selfupdate",
                "Upgrade outdated packages": "sudo port upgrade outdated"
            },
            "Explanation": "Package manager for macOS.",
            "More Information Link": ""
        }
    },
    "ports": {
        "linux": {
            "Examples": {
                "Check the differences between installed packages and the ports tree": "ports -d",
                "List the ports in the current tree": "ports -l",
                "Update the ports tree": "ports -u"
            },
            "Explanation": "Update/list the ports tree on a CRUX system.",
            "More Information Link": ""
        }
    },
    "postcss": {
        "common": {
            "Examples": {
                "Display available options and examples": "postcss --help",
                "Parse and transform a CSS file": "postcss {{path/to/file}}",
                "Parse and transform a CSS file and output to a specific directory": "postcss {{path/to/file}} --dir {{path/to/directory}}",
                "Parse and transform a CSS file and output to a specific file": "postcss {{path/to/file}} --output {{path/to/file}}",
                "Parse and transform a CSS file in-place": "postcss {{path/to/file}} --replace",
                "Specify a custom PostCSS parser": "postcss {{path/to/file}} --parser {{parser}}",
                "Specify a custom PostCSS syntax": "postcss {{path/to/file}} --syntax {{syntax}}",
                "Watch for changes to a CSS file": "postcss {{path/to/file}} --watch"
            },
            "Explanation": "PostCSS is a tool for transforming styles with JS plugins.",
            "More Information Link": "https://postcss.org"
        }
    },
    "postfix": {
        "linux": {
            "Examples": {
                "Check the configuration": "sudo postfix check",
                "Check the status of the Postfix daemon": "sudo postfix status",
                "Flush the mail queue": "sudo postfix flush",
                "Gracefully stop Postfix": "sudo postfix stop",
                "Reload the configuration files": "sudo postfix reload",
                "Start Postfix": "sudo postfix start"
            },
            "Explanation": "Postfix mail transfer agent (MTA) control program.\nSee also `dovecot`, a mail delivery agent (MDA) that integrates with Postfix.",
            "More Information Link": "http://postfix.org"
        }
    },
    "poweroff": {
        "linux": {
            "Examples": {
                "Poweroff the system": "sudo poweroff"
            },
            "Explanation": "Shutdown the system.",
            "More Information Link": ""
        }
    },
    "powershell": {
        "windows": {
            "Examples": {
                "Describe the format of data sent to PowerShell": "powershell -InputFormat {{Text|XML}}",
                "Determine how output from PowerShell is formatted": "powershell -OutputFormat {{Text|XML}}",
                "Display help": "powershell -Help",
                "Load a specific PowerShell console file": "powershell -PSConsoleFile {{path/to/file}}",
                "Prevent the shell from exit after running startup commands": "powershell -NoExit",
                "Start a Windows PowerShell session in a Command Prompt window": "powershell",
                "Start a session with a specified version of PowerShell": "powershell -Version {{version}}"
            },
            "Explanation": "Command-line shell and scripting language designed especially for system administration.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/powershell"
        }
    },
    "powerstat": {
        "common": {
            "Examples": {
                "Enable all statistics gathering options": "powerstat -a {{interval}} {{number_of_samples}}",
                "Measure power using Intel's RAPL interface": "powerstat -R {{interval}} {{number_of_samples}}",
                "Measure power with custom number of samples and interval duration": "powerstat {{interval}} {{number_of_samples}}",
                "Measure power with the default of 10 samples with an interval of 10 seconds": "powerstat",
                "Show an histogram of the power measurements": "powerstat -H {{interval}} {{number_of_samples}}"
            },
            "Explanation": "Measures the power consumption of a computer that has a battery power source or supports the RAPL interface.",
            "More Information Link": "http://manpages.ubuntu.com/manpages/bionic/man8/powerstat.8.html"
        }
    },
    "powertop": {
        "linux": {
            "Examples": {
                "Calibrate power usage measurements": "sudo powertop --calibrate",
                "Generate HTML power usage report in the current directory": "sudo powertop --html={{power_report.html}}",
                "Tune to optimal settings": "sudo powertop --auto-tune"
            },
            "Explanation": "Optimize battery power usage.",
            "More Information Link": ""
        }
    },
    "pprof": {
        "common": {
            "Examples": {
                "Fetch a profile from an HTTP server and generate a report": "pprof {{http://localhost:8080/debug/pprof}}",
                "Generate a graph and open it on a web browser": "pprof -svg {{./fibbo}} {{./fibbo-profile.pb.gz}}",
                "Generate a text report from a specific profiling file, on fibbo binary": "pprof -top {{./fibbo}} {{./fibbo-profile.pb.gz}}",
                "Run a web server that serves a web interface on top of `pprof`": "pprof -http={{localhost:8080}} {{./fibbo}} {{./fibbo-profile.pb.gz}}",
                "Run pprof in interactive mode to be able to manually launch `pprof` on a file": "pprof {{./fibbo}} {{./fibbo-profile.pb.gz}}"
            },
            "Explanation": "Command-line tool for visualization and analysis of profile data.",
            "More Information Link": "https://github.com/google/pprof"
        }
    },
    "pr": {
        "common": {
            "Examples": {
                "Print all files together, one in each column, without a header or footer": "pr -m -T {{file1}} {{file2}} {{file3}}",
                "Print multiple files with a default header and footer": "pr {{file1}} {{file2}} {{file3}}",
                "Print with a custom centered header": "pr -h \"{{header}}\" {{file1}} {{file2}} {{file3}}",
                "Print with an offset for each line and a truncating custom page width": "pr -o {{offset}} -W {{width}} {{file1}} {{file2}} {{file3}}",
                "Print with numbered lines and a custom date format": "pr -n -D \"{{format}}\" {{file1}} {{file2}} {{file3}}",
                "Print, beginning at page 2 up to page 5, with a given page length (including header and footer)": "pr +{{2}}:{{5}} -l {{page_length}} {{file1}} {{file2}} {{file3}}"
            },
            "Explanation": "Paginate or columnate files for printing.",
            "More Information Link": "https://www.gnu.org/software/coreutils/manual/html_node/pr-invocation.html"
        }
    },
    "prctl": {
        "sunos": {
            "Examples": {
                "Examine process limits and permissions": "prctl {{PID}}",
                "Examine process limits and permissions in machine parseable format": "prctl -P {{PID}}",
                "Get specific limit for a running process": "prctl -n process.max-file-descriptor {{PID}}"
            },
            "Explanation": "Get or set the resource controls of running processes,.\nTasks, and projects.",
            "More Information Link": ""
        }
    },
    "print": {
        "linux": {
            "Examples": {
                "Print action can be used to print any file on default run-mailcap tool": "print {{filename}}",
                "With `run-mailcap`": "run-mailcap --action=print {{filename}}"
            },
            "Explanation": "An alias to a `run-mailcap`'s action print.\nOriginally `run-mailcap` is used to process mime-type/file.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Print a text file to a specific printer": "print /d:{{printer}} {{path/to/file}}",
                "Print a text file to the default printer": "print {{path/to/file}}"
            },
            "Explanation": "Print a text file to a printer.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/print"
        }
    },
    "printenv": {
        "common": {
            "Examples": {
                "Display key-value pairs of all environment variables": "printenv",
                "Display the value of a specific variable": "printenv {{HOME}}",
                "Display the value of a variable and end with NUL instead of newline": "printenv --null {{HOME}}"
            },
            "Explanation": "Print values of all or specific environment variables.",
            "More Information Link": ""
        }
    },
    "printf": {
        "common": {
            "Examples": {
                "Print a float number with the unicode Euro sign": "printf \"{{\\u20AC %.2f\\n}}\" {{123.4}}",
                "Print a text message": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
                "Print a text message composed with environment variables": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
                "Print an integer in bold blue": "printf \"{{\\e[1;34m%.3d\\e[0m\\n}}\" {{42}}",
                "Store a formatted message in a variable (does not work on zsh)": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}"
            },
            "Explanation": "Format and print text.",
            "More Information Link": ""
        }
    },
    "progpilot": {
        "common": {
            "Examples": {
                "Analyse a specific file or directory": "progpilot {{path/to/file_or_directory}}",
                "Analyse the current directory": "progpilot",
                "Specify a custom configuration file": "progpilot --configuration {{path/to/configuration.yml}}"
            },
            "Explanation": "A PHP static analysis tool for detecting security vulnerabilities.",
            "More Information Link": "https://github.com/designsecurity/progpilot"
        }
    },
    "progress": {
        "linux": {
            "Examples": {
                "Launch and monitor a single long-running command": "{{command}} & progress -mp $!",
                "Show the progress of running coreutils": "progress",
                "Show the progress of running coreutils in quiet mode": "progress -q"
            },
            "Explanation": "Display/Monitor the progress of running coreutils.",
            "More Information Link": "https://github.com/Xfennec/progress"
        }
    },
    "prosodyctl": {
        "common": {
            "Examples": {
                "Add a user to the Prosody XMPP server": "sudo prosodyctl adduser {{user@example.com}}",
                "Permanently delete a user": "sudo prosodyctl deluser {{user@example.com}}",
                "Reload the server's configuration files": "sudo prosodyctl reload",
                "Set a user's password": "sudo prosodyctl passwd {{user@example.com}}",
                "Show the status of the Prosody server": "sudo prosodyctl status"
            },
            "Explanation": "The control tool for the Prosody XMPP server.",
            "More Information Link": "https://prosody.im/doc/prosodyctl"
        }
    },
    "protoc": {
        "common": {
            "Examples": {
                "Generate Java code from a `.proto` file that imports other `.proto` files": "protoc --java_out={{path/to/output_directory}} --proto_path={{path/to/import_search_path}} {{input_file.proto}}",
                "Generate Python code from a `.proto` file": "protoc --python_out={{path/to/output_directory}} {{input_file.proto}}",
                "Generate code for multiple languages": "protoc --csharp_out={{path/to/c#_output_directory}} --js_out={{path/to/js_output_directory}} {{input_file.proto}}"
            },
            "Explanation": "Parse Google Protobuf `.proto` files and generate output in the specified language.",
            "More Information Link": "https://developers.google.com/protocol-buffers"
        }
    },
    "protontricks": {
        "linux": {
            "Examples": {
                "Run a command within a games installation directory": "protontricks -c {{command}} {{appid}}",
                "Run the protontricks GUI": "protontricks --gui",
                "Run winetricks for a specific game": "protontricks {{appid}} {{winetricks_args}}",
                "Show the protontricks help message": "protontricks"
            },
            "Explanation": "A simple wrapper that does winetricks things for Proton enabled games, requires Winetricks.",
            "More Information Link": "https://github.com/Matoking/protontricks"
        }
    },
    "prstat": {
        "sunos": {
            "Examples": {
                "Examine all processes and reports statistics sorted by CPU usage": "prstat",
                "Examine all processes and reports statistics sorted by memory usage": "prstat -s rss",
                "Print out a list of top 5 CPU using processes every second": "prstat -c -n 5 -s cpu 1",
                "Report microstate process accounting information": "prstat -m",
                "Report total usage summary for each user": "prstat -t"
            },
            "Explanation": "Report active process statistics.",
            "More Information Link": ""
        }
    },
    "prt-get": {
        "linux": {
            "Examples": {
                "Install a package": "prt-get install {{package_name}}",
                "Install a package with dependency handling": "prt-get depinst {{package_name}}",
                "Remove a package": "prt-get remove {{package_name}}",
                "Search for a file in a package": "prt-get fsearch {{file}}",
                "Search the ports tree": "prt-get search {{package_name}}",
                "Update a package manually": "prt-get upgrade {{package_name}}",
                "Upgrade the system from the local ports tree": "prt-get sysup"
            },
            "Explanation": "The CRUX package manager.",
            "More Information Link": ""
        }
    },
    "ps": {
        "common": {
            "Examples": {
                "Get the parent pid of a process": "ps -o ppid= -p {{pid}}",
                "List all processes of the current user as a tree": "ps --user $(id -u) f",
                "List all processes of the current user in extra full format": "ps --user $(id -u) -F",
                "List all running processes": "ps aux",
                "List all running processes including the full command string": "ps auxww",
                "Search for a process that matches a string": "ps aux | grep {{string}}",
                "Sort processes by memory consumption": "ps --sort size"
            },
            "Explanation": "Information about running processes.",
            "More Information Link": ""
        }
    },
    "psgrep": {
        "common": {
            "Examples": {
                "Find process lines containing a specific string": "psgrep {{process_name}}",
                "Find process lines containing a specific string, excluding headers": "psgrep -n {{process_name}}",
                "Search using a simplified format (PID, user, command)": "psgrep -s {{process_name}}"
            },
            "Explanation": "Search running processes with `grep`.",
            "More Information Link": "https://jvz.github.io/psgrep"
        }
    },
    "psping": {
        "windows": {
            "Examples": {
                "Display usage information": "psping /?",
                "Ping a host over a TCP port": "psping {{hostname}}:{{port}}",
                "Ping a host using ICMP": "psping {{hostname}}",
                "Ping the target over TCP 50 times and produce a histogram of the results": "psping {{hostname}}:{{port}} -q -n {{50}} -h",
                "Specify the number of pings and perform it quietly": "psping {{hostname}} -n {{pings}} -q"
            },
            "Explanation": "A ping tool that includes TCP ping, latency and bandwidth measurement.",
            "More Information Link": "https://docs.microsoft.com/sysinternals/downloads/psping"
        }
    },
    "psql": {
        "common": {
            "Examples": {
                "Connect to database on given server host running on given port with given username, without a password prompt": "psql -h {{host}} -p {{port}} -U {{username}} {{database}}",
                "Connect to database. It connects to localhost using default port 5432 with default user as currently logged in user": "psql {{database}}",
                "Connect to database; user will be prompted for password": "psql -h {{host}} -p {{port}} -U {{username}} -W {{database}}",
                "Execute a single SQL query or PostgreSQL command on the given database (useful in shell scripts)": "psql -c '{{query}}' {{database}}",
                "Execute commands from a file on the given database": "psql {{database}} -f {{file.sql}}"
            },
            "Explanation": "PostgreSQL command-line client.",
            "More Information Link": "https://www.postgresql.org/docs/current/app-psql.html"
        }
    },
    "pssh": {
        "common": {
            "Examples": {
                "Run a command and save the output to separate files": "pssh -H {{host1}} -H {{host2}} -o {{path/to/output_dir}} {{hostname -i}}",
                "Run a command as root (this asks for the root password)": "pssh -i -h {{path/to/hosts_file}} -A -l {{root_username}} {{hostname -i}}",
                "Run a command limiting the number of parallel connections to 10": "pssh -i -h {{path/to/hosts_file}} -p {{10}} '{{cd dir; ./script.sh; exit}}'",
                "Run a command on multiple hosts, specified in a new-line separated file": "pssh -i -h {{path/to/hosts_file}} {{hostname -i}}",
                "Run a command on two hosts, and print its output on each server inline": "pssh -i -H \"{{host1}} {{host2}}\" {{hostname -i}}",
                "Run a command with extra SSH arguments": "pssh -i -h {{path/to/hosts_file}} -x \"{{-O VisualHostKey=yes}}\" {{hostname -i}}"
            },
            "Explanation": "Parallel SSH program.",
            "More Information Link": ""
        }
    },
    "pstree": {
        "linux": {
            "Examples": {
                "Display a tree of processes": "pstree",
                "Display a tree of processes with PIDs": "pstree -p",
                "Display all process trees rooted at processes owned by specified user": "pstree {{user}}"
            },
            "Explanation": "A convenient tool to show running processes as a tree.",
            "More Information Link": ""
        }
    },
    "psysh": {
        "common": {
            "Examples": {
                "Open a shell in a specific directory": "psysh --cwd {{path/to/directory}}",
                "Open a shell in the current directory": "psysh",
                "Use a specific configuration file": "psysh --config {{path/to/file}}"
            },
            "Explanation": "A runtime developer console, interactive debugger and REPL for PHP.",
            "More Information Link": "https://psysh.org"
        }
    },
    "pt": {
        "common": {
            "Examples": {
                "Find \"foo\" in files with a given extension using a regular expression": "pt -G='{{\\.bar$}}' {{foo}}",
                "Find files containing \"foo\" and display count of matches in each file": "pt -c {{foo}}",
                "Find files containing \"foo\" and print the files with highlighted matches": "pt {{foo}}",
                "Find files containing \"foo\" as a whole word and ignore its case": "pt -wi {{foo}}",
                "Find files whose contents match the regular expression, up to 2 directories deep": "pt --depth={{2}} -e '{{^ba[rz]*$}}'"
            },
            "Explanation": "Platinum Searcher.\nA code search tool similar to `ag`.",
            "More Information Link": "https://github.com/monochromegane/the_platinum_searcher"
        }
    },
    "ptx": {
        "linux": {
            "Examples": {
                "Generate a permuted index where the first field of each line is an index reference": "ptx --references {{path/to/file}}",
                "Generate a permuted index with SYSV-style behaviors": "ptx --traditional {{path/to/file}}",
                "Generate a permuted index with a fixed width": "ptx --width={{width_in_columns}} {{path/to/file}}",
                "Generate a permuted index with a list of filtered words": "ptx --only-file={{path/to/filter}} {{path/to/file}}",
                "Generate a permuted index with automatically generated index references": "ptx --auto-reference {{path/to/file}}"
            },
            "Explanation": "Generate a permuted index of words from one or more text files.",
            "More Information Link": ""
        }
    },
    "pulseaudio": {
        "linux": {
            "Examples": {
                "Check if pulseaudio is running (a non-zero exit code means it is not running)": "pulseaudio --check",
                "Kill the running pulseaudio daemon": "pulseaudio --kill",
                "List available modules": "pulseaudio --dump-modules",
                "Load a module into the currently running daemon with the specified arguments": "pulseaudio --load=\"{{module_name}} {{arguments}}\"",
                "Start the pulseaudio daemon in the background": "pulseaudio --start"
            },
            "Explanation": "The pulseaudio sound system daemon and manager.",
            "More Information Link": ""
        }
    },
    "pup": {
        "common": {
            "Examples": {
                "Filter HTML by attribute value": "cat {{index.html}} | pup '{{input[type=\"text\"]}}'",
                "Filter HTML by element tag name": "cat {{index.html}} | pup '{{tag}}'",
                "Filter HTML by id": "cat {{index.html}} | pup '{{div#id}}'",
                "Print HTML as JSON": "cat {{index.html}} | pup '{{div}} json{}'",
                "Print all text from the filtered HTML elements and their children": "cat {{index.html}} | pup '{{div}} text{}'",
                "Transform a raw HTML file into a cleaned, indented, and colored format": "cat {{index.html}} | pup --color"
            },
            "Explanation": "Command line HTML parsing tool.",
            "More Information Link": "https://github.com/ericchiang/pup"
        }
    },
    "pushd": {
        "linux": {
            "Examples": {
                "Rotate stack by making the 5th element the top of the stack": "pushd +4",
                "Switch first and second directories on the stack": "pushd",
                "Switch to directory and push it on the stack": "pushd < {{directory}}"
            },
            "Explanation": "Place a directory on a stack so it can be accessed later.\nSee also `popd` to switch back to original directory.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Rotate stack by making the 5th element the top of the stack": "pushd +4",
                "Switch first and second directories on the stack": "pushd",
                "Switch to directory and push it on the stack": "pushd {{directory}}"
            },
            "Explanation": "Place a directory on a stack so it can be accessed later.\nSee also `popd` to switch back to original directory.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Switch to directory and push it on the stack": "pushd {{directory}}"
            },
            "Explanation": "Place a directory on a stack so it can be accessed later.\nSee also `popd` to switch back to original directory.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/pushd"
        }
    },
    "pv": {
        "common": {
            "Examples": {
                "Attach to an already running process and see its file reading progress": "pv -d {{PID}}",
                "Filter a file, see both progress and amount of output data": "pv -cN in {{big_text_file}} | grep {{pattern}} | pv -cN out > {{filtered_file}}",
                "Measure the speed and amount of data flow between pipes (`-s` is optional)": "command1 | pv -s {{expected_amount_of_data_for_eta}} | command2",
                "Print the contents of the file and display a progress bar": "pv {{file}}",
                "Read an erroneous file, skip errors as `dd conv=sync,noerror` would": "pv -EE {{path/to/faulty_media}} > image.img",
                "Stop reading after reading specified amount of data, rate limit to 1K/s": "pv -L 1K -S {{maximum_file_size_to_be_read}}"
            },
            "Explanation": "Monitor the progress of data through a pipe.",
            "More Information Link": ""
        }
    },
    "pvcreate": {
        "linux": {
            "Examples": {
                "Force the creation without any confirmation prompts": "pvcreate --force {{/dev/sda1}}",
                "Initialize the `/dev/sda1` volume for use by LVM": "pvcreate {{/dev/sda1}}"
            },
            "Explanation": "Initialize a physical volume (disk or partition) for use by the Logical Volume Manager (LVM).",
            "More Information Link": ""
        }
    },
    "pvs": {
        "linux": {
            "Examples": {
                "Append field to default display": "pvs -o +{{field_name}}",
                "Change default display to show more details": "pvs -v",
                "Display information about physical volumes": "pvs",
                "Display non-physical volumes": "pvs -a",
                "Display only specific fields": "pvs -o {{field_name_1}},{{field_name_2}}",
                "Suppress heading line": "pvs --noheadings",
                "Use separator to separate fields": "pvs --separator {{special_character}}"
            },
            "Explanation": "Display information about LVM physical volumes.",
            "More Information Link": "https://www.man7.org/linux/man-pages/man8/pvs.8.html"
        }
    },
    "pwd": {
        "common": {
            "Examples": {
                "Print the current directory": "pwd",
                "Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path)": "pwd -P"
            },
            "Explanation": "Print name of current/working directory.",
            "More Information Link": ""
        }
    },
    "pwdx": {
        "linux": {
            "Examples": {
                "Print current working directory of a process": "pwdx {{process_id}}"
            },
            "Explanation": "Print working directory of a process.",
            "More Information Link": ""
        }
    },
    "pwgen": {
        "linux": {
            "Examples": {
                "Generate password with at least one capital letter in them": "pwgen -c {{length}}",
                "Generate random password with s[y]mbols": "pwgen -y {{length}}",
                "Generate secure, hard-to-memorize passwords": "pwgen -s {{length}}"
            },
            "Explanation": "Generate pronounceable passwords.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Generate password with at least one capital letter in them": "pwgen -c {{length}}",
                "Generate random password with s[y]mbols": "pwgen -y {{length}}",
                "Generate secure, hard-to-memorize passwords": "pwgen -s {{length}}"
            },
            "Explanation": "Generate pronounceable passwords.",
            "More Information Link": ""
        }
    },
    "pwlauncher": {
        "windows": {
            "Examples": {
                "Display the current Windows To Go status": "pwlauncher",
                "Enable or disable the Windows To Go startup options": "pwlauncher /{{enable|disable}}"
            },
            "Explanation": "A command line tool for managing the Windows To Go startup options.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/pwlauncher"
        }
    },
    "pycodestyle": {
        "common": {
            "Examples": {
                "Check the style of a single file": "pycodestyle {{file.py}}",
                "Check the style of multiple files": "pycodestyle {{file1.py}} {{file2.py}} {{file3.py}}",
                "Show only the first occurrence of an error": "pycodestyle --first {{file.py}}",
                "Show the source code for each error": "pycodestyle --show-source {{file.py}}",
                "Show the specific PEP 8 text for each error": "pycodestyle --show-pep8 {{file.py}}"
            },
            "Explanation": "A tool to check Python code against PEP 8 style conventions.",
            "More Information Link": "https://pycodestyle.readthedocs.io"
        }
    },
    "pyenv": {
        "common": {
            "Examples": {
                "Install a Python version under the ${PYENV_ROOT}/versions directory": "pyenv install {{2.7.10}}",
                "List all Python versions under the ${PYENV_ROOT}/versions directory": "pyenv versions",
                "List all available commands": "pyenv commands",
                "Set Python version to be used globally in the current machine": "pyenv global {{2.7.10}}",
                "Set Python version to be used in the current directory and all directories below it": "pyenv local {{2.7.10}}",
                "Uninstall a Python version under the ${PYENV_ROOT}/versions directory": "pyenv uninstall {{2.7.10}}"
            },
            "Explanation": "Switch between multiple versions of Python easily.",
            "More Information Link": "https://github.com/pyenv/pyenv"
        }
    },
    "pyenv virtualenv": {
        "common": {
            "Examples": {
                "Activate a virtual environment": "pyenv activate {{virtualenv_name}}",
                "Create a new Python 3.6.6 virtual environment": "pyenv virtualenv {{3.6.6}} {{virtualenv_name}}",
                "Deactivate the virtual environment": "pyenv deactivate",
                "List all existing virtual environments": "pyenv virtualenvs"
            },
            "Explanation": "Create virtual environments based on one's installed Python distributions.",
            "More Information Link": "https://github.com/pyenv/pyenv-virtualenv"
        }
    },
    "pyflakes": {
        "common": {
            "Examples": {
                "Check Python files in a directory recursively": "pyflakes checkRecursive {{path/to/directory}}",
                "Check Python files in a specific directory": "pyflakes checkPath {{path/to/directory}}",
                "Check a single Python file": "pyflakes check {{path/to/file}}.py",
                "Check all Python files found in multiple directories": "pyflakes iterSourceCode {{path/to/directory_1}} {{path/to/directory_2}}"
            },
            "Explanation": "Checks Python source code files for errors.",
            "More Information Link": "https://pypi.org/project/pyflakes"
        }
    },
    "pygmentize": {
        "common": {
            "Examples": {
                "Explicitly set the language for syntax highlighting": "pygmentize -l {{javascript}} {{input_file}}",
                "Highlight file syntax and print to standard output (language is inferred from the file extension)": "pygmentize {{file.py}}",
                "List available lexers (processors for input languages)": "pygmentize -L lexers",
                "List available output formats": "pygmentize -L formatters",
                "Output an HTML file, with additional formatter options (full page, with line numbers)": "pygmentize -f html -O \"full,linenos=True\" -o {{output_file.html}} {{input_file}}",
                "Save output to a file in HTML format": "pygmentize -f html -o {{output_file.html}} {{input_file.py}}"
            },
            "Explanation": "Python-based syntax highlighter.",
            "More Information Link": ""
        }
    },
    "python": {
        "common": {
            "Examples": {
                "Call a Python interactive shell (REPL)": "python",
                "Execute a Python expression": "python -c \"{{expression}}\"",
                "Execute script as part of an interactive shell": "python -i {{script.py}}",
                "Execute script in a given Python file": "python {{script.py}}",
                "Interactively debug a Python script": "python -m pdb {{script.py}}",
                "Run library module as a script (terminates option list)": "python -m {{module}} {{arguments}}"
            },
            "Explanation": "Python language interpreter.",
            "More Information Link": "https://www.python.org"
        }
    },
    "q": {
        "common": {
            "Examples": {
                "Format output using an output delimiter with an output header line (note: command will output column names based on the input file header or the column aliases overridden in the query)": "q -D{{delimiter}} -O \"SELECT {{column}} as {{alias}} from {{path/to/file}}\"",
                "Join two files (aliased as `f1` and `f2` in the example) on column `c1`, a common column": "q \"SELECT * FROM {{path/to/file}} f1 JOIN {{path/to/other_file}} f2 ON (f1.c1 = f2.c1)\"",
                "Query .csv file by specifying the delimiter as ','": "q -d',' \"SELECT * from {{path/to/file}}\"",
                "Query .tsv file": "q -t \"SELECT * from {{path/to/file}}\"",
                "Query file with header row": "q -d{{delimiter}} -H \"SELECT * from {{path/to/file}}\"",
                "Read data from stdin; '-' in the query represents the data from `stdin`": "{{output}} | q \"select * from -\""
            },
            "Explanation": "Execute SQL-like queries on .csv and .tsv files.",
            "More Information Link": "https://harelba.github.io/q"
        }
    },
    "qcp": {
        "common": {
            "Examples": {
                "Copy a single file (open an editor with the source filename on the left and the target filename on the right)": "qcp {{source_file}}",
                "Copy files, but swap the positions of the source and the target filenames in the editor": "qcp --option swap {{*.jpg}}",
                "Copy multiple JPG files": "qcp {{*.jpg}}"
            },
            "Explanation": "Copy files using the default text editor to define the filenames.",
            "More Information Link": "https://www.nongnu.org/renameutils/"
        }
    },
    "qemu": {
        "common": {
            "Examples": {
                "Boot QEMU instance with a live ISO image": "qemu-system-i386 -hda {{image_name.img}} -cdrom {{os_image.iso}} -boot d",
                "Boot from image emulating i386 architecture": "qemu-system-i386 -hda {{image_name.img}}",
                "Boot from image emulating x64 architecture": "qemu-system-x86_64 -hda {{image_name.img}}",
                "Boot from physical device (e.g. from USB to test bootable medium)": "qemu-system-i386 -hda /dev/{{storage_device}}",
                "Specify amount of RAM for instance": "qemu-system-i386 -m 256 -hda image_name.img -cdrom os-image.iso -boot d"
            },
            "Explanation": "Generic machine emulator and virtualizer.\nSupports a large variety of CPU architectures.",
            "More Information Link": "https://www.qemu.org"
        }
    },
    "qemu-img": {
        "common": {
            "Examples": {
                "Convert a VMWare .vmdk disk image to a KVM .qcow2 disk image": "qemu-img convert -O qcow2 {{/path/to/file/foo.vmdk}} {{/path/to/file/foo.qcow2}}",
                "Create disk image with a specific size (in gigabytes)": "qemu-img create {{image_name.img}} {{gigabytes}}G",
                "Dump the allocation state of every sector of the specified disk image": "qemu-img map {{image_name.img}}",
                "Increase or decrease image size": "qemu-img resize {{image_name.img}} {{gigabytes}}G",
                "Show information about a disk image": "qemu-img info {{image_name.img}}"
            },
            "Explanation": "Tool for Quick Emulator Virtual HDD image creation and manipulation.",
            "More Information Link": ""
        }
    },
    "qlmanage": {
        "osx": {
            "Examples": {
                "Compute 300px wide PNG thumbnails of all JPEGs in the current directory and put them in a directory": "qlmanage {{*.jpg}} -t -s {{300}} {{path/to/directory}}",
                "Display QuickLook for one or multiple files": "qlmanage -p {{filename}} {{filename2}}",
                "Reset Quicklook": "qlmanage -r"
            },
            "Explanation": "QuickLook server tool.",
            "More Information Link": ""
        }
    },
    "qmv": {
        "common": {
            "Examples": {
                "Move a single file (open an editor with the source filename on the left and the target filename on the right)": "qmv {{source_file}}",
                "Move all files and directories inside a directory": "qmv --recursive {{path/to/directory}}",
                "Move files, but swap the positions of the source and the target filenames in the editor": "qmv --option swap {{*.jpg}}",
                "Move multiple JPG files": "qmv {{*.jpg}}",
                "Move multiple directories": "qmv -d {{path/to/directory1}} {{path/to/directory2}} {{path/to/directory3}}"
            },
            "Explanation": "Move files and directories using the default text editor to define the filenames.",
            "More Information Link": "https://www.nongnu.org/renameutils/"
        }
    },
    "qpdf": {
        "common": {
            "Examples": {
                "Extract pages 1-3, 5 and 6-10 from a PDF file and save them as another one": "qpdf --empty --pages {{input.pdf}} {{1-3,5,6-10}} -- {{output.pdf}}",
                "Merge (concatenate) all the pages of a list of PDF files and save the result as a new PDF": "qpdf --empty --pages {{file1.pdf}} {{file2.pdf}} {{file3.pdf}} -- {{output.pdf}}",
                "Merge (concatenate) given pages from a list of PDF files and save the result as a new PDF": "qpdf --empty --pages {{file1.pdf}} {{1,6-8}} {{file2.pdf}} {{3,4,5}} -- {{output.pdf}}",
                "Remove the password from a password protected file": "qpdf --password={{password}} --decrypt {{input.pdf}} {{output.pdf}}",
                "Rotate certain pages of a pdf with a given angle": "qpdf --rotate={{90:2,4,6}} --rotate={{180:7-8}} {{input.pdf}} {{output.pdf}}",
                "Write each group of n pages to a separate output file with a given filename pattern": "qpdf --split-pages=n {{input.pdf}} {{out_%d.pdf}}"
            },
            "Explanation": "Versatile PDF transformation software.",
            "More Information Link": "https://github.com/qpdf/qpdf"
        }
    },
    "qr": {
        "common": {
            "Examples": {
                "Generate a QR code": "echo \"{{data}}\" | qr",
                "Specify the error correction level (defaults to M)": "echo \"{{data}}\" | qr --error-correction={{L|M|Q|H}}"
            },
            "Explanation": "Generate QR codes in the terminal with ANSI VT-100 escape codes.",
            "More Information Link": "https://github.com/lincolnloop/python-qrcode/"
        }
    },
    "qrencode": {
        "common": {
            "Examples": {
                "Convert a string to a QR code and print it in terminal": "qrencode -t ansiutf8 {{string}}",
                "Convert a string to a QR code and save to an output file": "qrencode -o {{path/to/output_file.png}} {{string}}",
                "Convert an input file to a QR code and save to an output file": "qrencode -o {{path/to/output_file.png}} -r {{path/to/input_file}}",
                "Convert input from pipe to a QR code and print it in terminal": "echo {{string}} | qrencode -t ansiutf8"
            },
            "Explanation": "QR Code generator. Supports PNG and EPS.",
            "More Information Link": "https://fukuchi.org/works/qrencode"
        }
    },
    "qsub": {
        "linux": {
            "Examples": {
                "Submit a script that is executed on 2 nodes using 4 cores per node": "qsub -l nodes={{2}}:ppn={{4}} {{script.sh}}",
                "Submit a script to a specific queue. Note that different queues can have different maximum and minimum runtime limits": "qsub -q {{queue_name}} {{script.sh}}",
                "Submit a script with a specified wallclock runtime limit of 1 hour, 2 minutes and 3 seconds": "qsub -l walltime={{1}}:{{2}}:{{3}} {{script.sh}}",
                "Submit a script with default settings (depends on TORQUE settings)": "qsub {{script.sh}}"
            },
            "Explanation": "Submits a script to the queue management system TORQUE.",
            "More Information Link": ""
        }
    },
    "quilt": {
        "common": {
            "Examples": {
                "Add a file to the current patch": "quilt add {{path/to/file}}",
                "After editing the file, refresh the current patch with the changes": "quilt refresh",
                "Apply all the patches in the series file": "quilt push -a",
                "Create a new patch": "quilt new {{filename.patch}}",
                "Import an existing patch from a file": "quilt import {{path/to/filename.patch}}",
                "Remove all applied patches": "quilt pop -a"
            },
            "Explanation": "Tool to manage a series of patches.",
            "More Information Link": "https://savannah.nongnu.org/projects/quilt"
        }
    },
    "quota": {
        "common": {
            "Examples": {
                "Print quotas for the groups of which the current user is a member": "quota -g",
                "Quiet output (only display quotas on filesystems where usage is over quota)": "quota -q",
                "Show disk quotas for another user": "sudo quota -u {{username}}",
                "Show disk quotas in human readable units for the current user": "quota -s",
                "Verbose output (also display quotas on filesystems where no storage is allocated)": "quota -v"
            },
            "Explanation": "Display users' disk space usage and allocated limits.",
            "More Information Link": ""
        }
    },
    "quotacheck": {
        "linux": {
            "Examples": {
                "Check group quotas": "sudo quotacheck --group {{group}} {{mountpoint}}",
                "Check quotas on a given filesystem in debug mode": "sudo quotacheck --debug {{mountpoint}}",
                "Check quotas on a given filesystem, displaying the progress": "sudo quotacheck --verbose {{mountpoint}}",
                "Check quotas on all mounted non-NFS filesystems": "sudo quotacheck --all",
                "Check user quotas": "sudo quotacheck --user {{user}} {{mountpoint}}",
                "Force check even if quotas are enabled (this can cause damage or loss to quota files)": "sudo quotacheck --force {{mountpoint}}"
            },
            "Explanation": "Scan a filesystem for disk usage; create, check and repair quota files.\nIt is best to run quota check with quotas turned off to prevent damage or loss to quota files.",
            "More Information Link": ""
        }
    },
    "r": {
        "common": {
            "Examples": {
                "Check R version": "R --version",
                "Execute a file": "R -f {{file.R}}",
                "Start an R interactive shell (REPL)": "R"
            },
            "Explanation": "R language interpreter.",
            "More Information Link": "https://www.r-project.org"
        }
    },
    "r2e": {
        "common": {
            "Examples": {
                "Create a new feed database that sends email to an email address": "r2e new {{email_address}}",
                "Delete a feed at a specified index": "r2e delete {{index}}",
                "List all feeds": "r2e list",
                "Send new stories to an email address": "r2e run",
                "Subscribe to a feed": "r2e add {{feed_name}} {{feed_URI}}"
            },
            "Explanation": "Forwards RSS feeds to an email address.\nRequires a configured `sendmail` or smtp setup.",
            "More Information Link": "https://github.com/rss2email/rss2email"
        }
    },
    "rabin2": {
        "common": {
            "Examples": {
                "Display general information about a binary (architecture, type, endianness)": "rabin2 -I {{path/to/binary}}",
                "Display linked libraries": "rabin2 -l {{path/to/binary}}",
                "Display strings contained in the binary": "rabin2 -z {{path/to/binary}}",
                "Display symbols imported from libraries": "rabin2 -i {{path/to/binary}}",
                "Display the output in JSON": "rabin2 -j -I {{path/to/binary}}"
            },
            "Explanation": "Get information about binary files (ELF, PE, Java CLASS, Mach-O) - symbols, sections, linked libraries, etc.\nComes bundled with `radare2`.",
            "More Information Link": ""
        }
    },
    "radare2": {
        "common": {
            "Examples": {
                "Debug a program": "radare2 -d {{path/to/binary}}",
                "Dump raw bytes of current block to a file": "> pr > {{path/to/file.bin}}",
                "Open a file in write mode without parsing the file format headers": "radare2 -nw {{path/to/binary}}",
                "Run a script before entering the interactive CLI": "radare2 -i {{path/to/script.r2}} {{path/to/binary}}",
                "Run a shell command from the interactive CLI": "> !{{shell_command}}",
                "Show help text for any command in the interactive CLI": "> {{radare2_command}}?"
            },
            "Explanation": "A set of reverse engineering tools.",
            "More Information Link": "https://radare.gitbooks.io/radare2book/"
        }
    },
    "radeontop": {
        "linux": {
            "Examples": {
                "Enable colourised output": "sudo radeontop --colour",
                "Select a specific GPU (the bus number is the first number in the output of `lspci`)": "sudo radeontop --bus {{bus_number}}",
                "Show the utilisation of the default AMD GPU": "sudo radeontop",
                "Specify the display refresh rate (higher means more GPU overhead)": "sudo radeontop --ticks {{samples_per_second}}"
            },
            "Explanation": "Show utilisation of AMD GPUs.",
            "More Information Link": "https://github.com/clbr/radeontop"
        }
    },
    "rails": {
        "common": {
            "Examples": {
                "Check current version of rails": "rails --version",
                "Create a new rails project": "rails new \"{{project_name}}\"",
                "Open console to interact with application from command line": "rails console",
                "Start local server for current project on a specified port": "rails server -p \"{{port}}\"",
                "Start local server for current project on port 3000": "rails server"
            },
            "Explanation": "A server-side MVC framework written in Ruby.",
            "More Information Link": "https://guides.rubyonrails.org/command_line.html"
        }
    },
    "rails db": {
        "common": {
            "Examples": {
                "Access the database console": "rails db",
                "Create databases, load the schema, and initialize with seed data": "rails db:setup",
                "Create the databases defined in the current environment": "rails db:create",
                "Destroy the databases defined in the current environment": "rails db:drop",
                "Fill the current database with data defined in db/seeds.rb": "rails db:seed",
                "Rollback the last migration": "rails db:rollback",
                "Run pending migrations": "rails db:migrate",
                "View the status of each migration file": "rails db:migrate:status"
            },
            "Explanation": "Various database-related subcommands for Ruby on Rails.",
            "More Information Link": ""
        }
    },
    "rails generate": {
        "common": {
            "Examples": {
                "Generate a new controller named Posts with actions index, show, new and create": "rails generate controller {{Posts}} {{index}} {{show}} {{new}} {{create}}",
                "Generate a new migration that adds a category attribute to an existing model called Post": "rails generate migration {{AddCategoryToPost}} {{category:string}}",
                "Generate a new model named Post with attributes title and body": "rails generate model {{Post}} {{title:string}} {{body:text}}",
                "Generate a scaffold for a model named Post, predefining the attributes title and body": "rails generate scaffold {{Post}} {{title:string}} {{body:text}}",
                "List all available generators": "rails generate"
            },
            "Explanation": "Generate new Rails templates in an existing project.",
            "More Information Link": "https://guides.rubyonrails.org/command_line.html#rails-generate"
        }
    },
    "rails routes": {
        "common": {
            "Examples": {
                "List all routes": "rails routes",
                "List all routes in an expanded format": "rails routes --expanded",
                "List routes partially matching URL helper method name, HTTP verb, or URL path": "rails routes -g {{posts_path|GET|/posts}}",
                "List routes that map to a specified controller": "rails routes -c {{posts|Posts|Blogs::PostsController}}"
            },
            "Explanation": "List routes in a Rails application.",
            "More Information Link": "https://guides.rubyonrails.org/routing.html"
        }
    },
    "rainbowstream": {
        "common": {
            "Examples": {
                "Favorite the tweet with given id": "fav {{tweet_id}}",
                "Open rainbowstream": "rainbowstream",
                "Perform a search for a given word (with or without hashtag)": "s {{word}}",
                "Retweet the tweet with given id (id is beside the time)": "rt {{tweet_id}}",
                "Show profile of a given user": "whois @{{user}}",
                "Show your timeline (optional number of tweets to display, default is 5)": "home [{{num_of_last_tweets}}]",
                "Tweet the message as-is": "t {{message}}"
            },
            "Explanation": "Terminal-based Twitter client supporting realtime tweetstream, trends, sending, search, favorites and user management.\nOnline help with `h`, up and down arrows for history, tab to auto-complete and 2-tab for suggestion.",
            "More Information Link": "https://github.com/orakaro/rainbowstream"
        }
    },
    "ranger": {
        "common": {
            "Examples": {
                "Change the configuration directory": "ranger --confdir={{path/to/directory}}",
                "Change the data directory": "ranger --datadir={{path/to/directory}}",
                "Launch ranger": "ranger",
                "Print CPU usage statistics on exit": "ranger --profile",
                "Show only directories": "ranger --show-only-dirs"
            },
            "Explanation": "Console file manager with VI key bindings.",
            "More Information Link": "https://github.com/ranger/ranger"
        }
    },
    "rapper": {
        "common": {
            "Examples": {
                "Convert an RDF/XML document to Turtle": "rapper -i rdfxml -o turtle {{file}}",
                "Count the number of triples in a Turtle file": "rapper -i turtle -c {{file}}"
            },
            "Explanation": "The Raptor RDF parsing utility.\nPart of the Raptor RDF Syntax Library.",
            "More Information Link": "http://librdf.org/raptor/rapper.html"
        }
    },
    "rar": {
        "common": {
            "Examples": {
                "Archive 1 or more files": "rar a {{path/to/archive_name.rar}} {{path/to/file1}} {{path/to/file2}} {{path/to/file3}}",
                "Archive a directory": "rar a {{path/to/archive_name.rar}} {{path/to/directory}}",
                "Encrypt file data and headers with password": "rar a -hp{{password}} {{path/to/archive_name.rar}} {{path/to/file_or_directory}}",
                "Password protect the resulting archive": "rar a -p{{password}} {{path/to/archive_name.rar}} {{path/to/file_or_directory}}",
                "Split the archive into parts of equal size (50M)": "rar a -v{{50M}} -R {{path/to/archive_name.rar}} {{path/to/file_or_directory}}",
                "Use a specific compression level (0-5)": "rar a -m{{compression_level}} {{path/to/archive_name.rar}} {{path/to/file_or_directory}}"
            },
            "Explanation": "The RAR archiver. Supports multi-volume archives that can be optionally self-extracting.",
            "More Information Link": ""
        }
    },
    "rbac-lookup": {
        "common": {
            "Examples": {
                "View RBAC bindings that match a given expression": "rbac-lookup {{search_term}}",
                "View all RBAC bindings": "rbac-lookup",
                "View all RBAC bindings along with IAM roles (if you are using GKE)": "rbac-lookup --gke",
                "View all RBAC bindings along with the source role binding": "rbac-lookup -o wide",
                "View all RBAC bindings filtered by subject": "rbac-lookup -k {{user|group|serviceaccount}}"
            },
            "Explanation": "Find roles and cluster roles attached to any user, service account or group name in your Kubernetes cluster.",
            "More Information Link": "https://github.com/reactiveops/rbac-lookup"
        }
    },
    "rbash": {
        "common": {
            "Examples": {
                "Execute a command": "rbash -c \"{{command}}\"",
                "Print the version information of rbash": "rbash --version",
                "Run commands from a file": "rbash {{file.sh}}",
                "Start rbash": "rbash"
            },
            "Explanation": "Restricted Bash shell.\nSimilar to the `bash` shell with some restrictions like changing directories with `cd`, setting/unsetting of PATH, ENV variables and others.",
            "More Information Link": ""
        }
    },
    "rbenv": {
        "common": {
            "Examples": {
                "Display a list of installed versions": "rbenv versions",
                "Display all ruby versions that contain the specified executable": "rbenv whence {{executable}}",
                "Install one or more space-separated versions of Ruby": "rbenv install {{version(s)}}",
                "Show the currently selected Ruby version": "rbenv version",
                "Uninstall a version of Ruby": "rbenv uninstall {{version}}",
                "Use a specific version of Ruby across the whole system": "rbenv global {{version}}",
                "Use a specific version of Ruby for an application/project directory": "rbenv local {{version}}"
            },
            "Explanation": "A tool to easily install Ruby versions and manage application environments.",
            "More Information Link": "https://github.com/rbenv/rbenv"
        }
    },
    "rbt": {
        "common": {
            "Examples": {
                "Display the diff that will be sent to Review Board": "rbt diff",
                "Land a change in a local branch or on a review request": "rbt land {{branch_name}}",
                "Patch your tree with a change on a review request": "rbt patch {{review_request_id}}",
                "Post changes to Review Board": "rbt post {{change_number}}",
                "Set up RBTool to talk to a repository": "rbt setup-repo"
            },
            "Explanation": "RBTools is a set of command line tools for working with Review Board and RBCommons.",
            "More Information Link": "https://www.reviewboard.org/docs/rbtools/dev/"
        }
    },
    "rc-service": {
        "linux": {
            "Examples": {
                "Actually run a service's custom command": "sudo rc-service {{service_name}} {{command_name}}",
                "Resolve the location of a service definition on disk": "sudo rc-service --resolve {{service_name}}",
                "Restart a service": "sudo rc-service {{service_name}} restart",
                "Show a service's status": "rc-service {{service_name}} status",
                "Simulate running a service's custom command": "sudo rc-service --dry-run {{service_name}} {{command_name}}",
                "Start a service": "sudo rc-service {{service_name}} start",
                "Stop a service": "sudo rc-servie {{service_name}} stop"
            },
            "Explanation": "Locate and run OpenRC services with arguments.\nSee also `openrc`.",
            "More Information Link": ""
        }
    },
    "rc-status": {
        "linux": {
            "Examples": {
                "Get the current runlevel": "rc-status --runlevel",
                "Include services in all runlevels in the summary": "rc-status --all",
                "List all runlevels": "rc-status --list",
                "List manually started services": "rc-status --manual",
                "List services that have crashed": "rc-status --crashed",
                "List supervised services": "rc-status --supervised",
                "Show a summary of services and their status": "rc-status"
            },
            "Explanation": "Show status info about runlevels.\nSee also `openrc`.",
            "More Information Link": ""
        }
    },
    "rc-update": {
        "linux": {
            "Examples": {
                "Add a service to a runlevel": "sudo rc-update add {{service_name}} {{runlevel}}",
                "Delete a service from a runlevel": "sudo rc-update delete {{service_name}} {{runlevel}}",
                "Delete a service from all runlevels": "sudo rc-update --all delete {{service_name}}",
                "List all services and the runlevels they are added to": "rc-update show"
            },
            "Explanation": "Add and remove OpenRC services to and from runlevels.\nSee also `openrc`.",
            "More Information Link": ""
        }
    },
    "rclone": {
        "common": {
            "Examples": {
                "Copy file or directory from local source to remote destination": "rclone copy {{path/to/source_file_or_directory}} {{remote_name}}:{{path/to/destination_directory}}",
                "Copy file or directory from remote source to local destination": "rclone copy {{remote_name}}:{{path/to/source_file_or_directory}} {{path/to/destination_directory}}",
                "Delete remote file or directory (use `--dry-run` to test, remove it to actually delete)": "rclone --dry-run delete {{remote_name}}:{{path/to/file_or_directory}}",
                "List contents of a directory on an rclone remote": "rclone lsf {{remote_name}}:{{path/to/directory}}",
                "Mount rclone remote (experimental)": "rclone mount {{remote_name}}:{{path/to/directory}} {{path/to/mount_point}}",
                "Move file or directory from local source to remote destination": "rclone move {{path/to/file_or_directory}} {{remote_name}}:{{path/to/directory}}",
                "Sync local source to remote destination, changing the destination only": "rclone sync {{path/to/file_or_directory}} {{remote_name}}:{{path/to/directory}}",
                "Unmount rclone remote if CTRL-C fails (experimental)": "fusermount -u {{path/to/mount_point}}"
            },
            "Explanation": "CLI program to copy/sync/move files and directories to and from many cloud services.",
            "More Information Link": "https://rclone.org"
        }
    },
    "rdesktop": {
        "linux": {
            "Examples": {
                "Connect to a remote computer (default port is 3389)": "rdesktop -u {{username}} -p {{password}} {{host:port}}",
                "Connect to a remote computer using domain user": "rdesktop -u {{username}} -p {{password}} -d {{domainname}} {{host:port}}",
                "Connect to a remote computer with full screen (press `Ctrl + Alt + Enter` to exist)": "rdesktop -u {{username}} -p {{password}} -f {{host:port}}",
                "Simple Examples": "rdesktop -u Administrator -p passwd123 192.168.1.111:3389",
                "Use the 16 bit color (speed up)": "rdesktop -u {{username}} -p {{password}} -a 16 {{host:port}}",
                "Use the customed resolution (use the letter 'x' between the number)": "rdesktop -u {{username}} -p {{password}} -g 1366x768 {{host:port}}"
            },
            "Explanation": "Remote Desktop Protocol client.\nIt can be used to connect the remote computer using the RDP protocol.",
            "More Information Link": ""
        }
    },
    "rdfind": {
        "common": {
            "Examples": {
                "Delete all duplicates and do not ignore empty files": "rdfind -deleteduplicates true -ignoreempty false {{path/to/directory}}",
                "Identify all duplicates in a given directory and output a summary": "rdfind -dryrun true {{path/to/directory}}",
                "Replace all duplicates with hardlinks": "rdfind -makehardlinks true {{path/to/directory}}",
                "Replace all duplicates with symlinks/soft links": "rdfind -makesymlinks true {{path/to/directory}}"
            },
            "Explanation": "Find files with duplicate content and get rid of them.",
            "More Information Link": "https://rdfind.pauldreik.se"
        }
    },
    "rdpsign": {
        "windows": {
            "Examples": {
                "Display verbose warnings, messages and statuses": "rdpsign {{path/to/file.rdp}} /v",
                "Enable quiet output": "rdpsign {{path/to/file.rdp}} /q",
                "Sign an RDP file": "rdpsign {{path/to/file.rdp}}",
                "Sign an RDP file using a specific sha256 hash": "rdpsign {{path/to/file.rdp}} /sha265 {{hash}}",
                "Test the signing by displaying the output to `stdout` without updating the file": "rdpsign {{path/to/file.rdp}} /l"
            },
            "Explanation": "A tool for signing Remote Desktop Protocol (RDP) files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/rdpsign"
        }
    },
    "read": {
        "common": {
            "Examples": {
                "Display a prompt before the input": "read -p \"{{Enter your input here: }}\" {{variable}}",
                "Do not echo typed characters (silent mode)": "read -s {{variable}}",
                "Do not let backslash (\\) act as an escape character": "read -r {{variable}}",
                "Enable backspace and GNU readline hotkeys when entering input with read": "read -e {{variable}}",
                "Specify the number of maximum characters to be read": "read -n {{character_count}} {{variable}}",
                "Store data that you type from the keyboard": "read {{variable}}",
                "Store each of the next lines you enter as values of an array": "read -a {{array}}",
                "Use a specific character as a delimiter instead of a new line": "read -d {{new_delimiter}} {{variable}}"
            },
            "Explanation": "BASH builtin for retrieving data from standard input.",
            "More Information Link": ""
        }
    },
    "readelf": {
        "linux": {
            "Examples": {
                "Display all information about the ELF file": "readelf -all {{path/to/binary}}",
                "Display all the headers present in the ELF file": "readelf --headers {{path/to/binary}}",
                "Display the entries in symbol table section of the ELF file, if it has one": "readelf --symbols {{path/to/binary}}",
                "Display the information contained in the ELF header at the start of the file": "readelf --file-header {{path/to/binary}}"
            },
            "Explanation": "Displays information about ELF files.",
            "More Information Link": "http://man7.org/linux/man-pages/man1/readelf.1.html"
        }
    },
    "readlink": {
        "common": {
            "Examples": {
                "Get the absolute path to a file": "readlink -f {{filename}}",
                "Get the actual file to which the symlink points": "readlink {{filename}}"
            },
            "Explanation": "Follow symlinks and get symlink information.",
            "More Information Link": ""
        }
    },
    "realpath": {
        "common": {
            "Examples": {
                "Disable symlink expansion": "realpath --no-symlinks {{path/to/file_or_directory}}",
                "Display the absolute path for a file or directory": "realpath {{path/to/file_or_directory}}",
                "Require all path components to exist": "realpath --canonicalize-existing {{path/to/file_or_directory}}",
                "Resolve \"..\" components before symlinks": "realpath --logical {{path/to/file_or_directory}}",
                "Suppress error messages": "realpath --quiet {{path/to/file_or_directory}}"
            },
            "Explanation": "Display the resolved absolute path for a file or directory.",
            "More Information Link": ""
        }
    },
    "reboot": {
        "linux": {
            "Examples": {
                "Reboot immediately": "reboot",
                "Reboot immediately without gracefully shutting down": "reboot -f"
            },
            "Explanation": "Reboot the system.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Reboot immediately": "sudo reboot",
                "Reboot immediately without gracefully shutting down": "sudo reboot -q"
            },
            "Explanation": "Reboot the system.",
            "More Information Link": ""
        }
    },
    "recsel": {
        "common": {
            "Examples": {
                "Extract name and version field": "recsel -p name,version {{data.rec}}",
                "Use \"~\" to match a string with a given regular expression": "recsel -e \"{{field_name}}  ~ '{{pattern_regex}}' {{data.rec}}\"",
                "Use a predicate to match a name and a version": "recsel -e \"name ~ '{{pattern_regex}}' && version ~ '{{pattern_regex}}'\" {{data.rec}}"
            },
            "Explanation": "Print records from a recfile: a human-editable, plain text database.",
            "More Information Link": "https://www.gnu.org/software/recutils/manual/recutils.html"
        }
    },
    "rector": {
        "common": {
            "Examples": {
                "Display a list of available levels": "rector levels",
                "Process a directory and apply coding standards": "rector process {{path/to/directory}} --with-style",
                "Process a directory with a specific level": "rector process {{path/to/directory}} --level {{level_name}}",
                "Process a directory without applying changes (dry run)": "rector process {{path/to/directory}} --dry-run",
                "Process a specific directory": "rector process {{path/to/directory}}"
            },
            "Explanation": "An automated tool for updating and refactoring PHP 5.3+ code.",
            "More Information Link": "https://github.com/rectorphp/rector"
        }
    },
    "redis-cli": {
        "common": {
            "Examples": {
                "Connect to a remote server on the default port (6379)": "redis-cli -h {{host}}",
                "Connect to a remote server specifying a port number": "redis-cli -h {{host}} -p {{port}}",
                "Connect to the local server": "redis-cli",
                "Execute Redis command": "redis-cli {{redis_command}}",
                "Specify a password": "redis-cli -a {{password}}"
            },
            "Explanation": "Opens a connection to a Redis server.",
            "More Information Link": "https://redis.io/topics/rediscli"
        }
    },
    "redis-server": {
        "common": {
            "Examples": {
                "Start Redis server with a custom configuration file": "redis-server {{path/to/redis.conf}}",
                "Start Redis server with verbose logging": "redis-server --loglevel {{warning|notice|verbose|debug}}",
                "Start Redis server, using the default port (6379), and write logs to `stdout`": "redis-server",
                "Start Redis server, using the default port, as a background process": "redis-server --daemonize yes",
                "Start Redis server, using the specified port, as a background process": "redis-server --port {{port}} --daemonize yes"
            },
            "Explanation": "Persistent key-value database.",
            "More Information Link": "https://redis.io"
        }
    },
    "redshift": {
        "common": {
            "Examples": {
                "Turn on Redshift with 5700K temperature during day and 3600K at night": "redshift -t {{5700}}:{{3600}}",
                "Turn on Redshift with 70% screen brightness during day and 40% brightness at night": "redshift -b {{0.7}}:{{0.4}}",
                "Turn on Redshift with a constant unchanging color temperature": "redshift -O {{temperature}}",
                "Turn on Redshift with a manually-specified custom location": "redshift -l {{latitude}}:{{longitude}}",
                "Turn on Redshift with custom gamma levels (between 0 and 1)": "redshift -g {{red}}:{{green}}:{{blue}}"
            },
            "Explanation": "Adjust the color temperature of your screen according to your surroundings.",
            "More Information Link": "https://jonls.dk/redshift"
        }
    },
    "reflac": {
        "common": {
            "Examples": {
                "Display filenames as they are processed": "reflac --verbose {{path/to/directory}}",
                "Enable maximum compression (very slow)": "reflac --best {{path/to/directory}}",
                "Perserve file modification times": "reflac --preserve {{path/to/directory}}",
                "Recompress a directory of FLAC files": "reflac {{path/to/directory}}",
                "Recurse into subdirectories": "reflac --recursive {{path/to/directory}}"
            },
            "Explanation": "Recompress FLAC files in-place while preserving metadata.",
            "More Information Link": "https://github.com/chungy/reflac"
        }
    },
    "reflector": {
        "linux": {
            "Examples": {
                "Get all mirrors, sort for download speed and save them": "sudo reflector --sort {{rate}} --save {{/etc/pacman.d/mirrorlist}}",
                "Only get German HTTPS mirrors": "reflector --country {{Germany}} --protocol {{https}}",
                "Only get the 10 recently sync'd mirrors": "reflector --latest {{10}}"
            },
            "Explanation": "Arch script to fetch and sort mirrorlists.",
            "More Information Link": ""
        }
    },
    "reg": {
        "windows": {
            "Examples": {
                "Call help on a specific command": "reg {{command}} /?",
                "Display general information and list all available commands": "reg /?",
                "Execute registry commands": "reg {{command}}"
            },
            "Explanation": "A command line interface for managing keys and their values in the Windows registry.\nSee `reg-query`, `reg-add` and other pages for additional information.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg"
        }
    },
    "reg add": {
        "windows": {
            "Examples": {
                "Add a new registry key": "reg add {{key_name}}",
                "Add a new value to a key with a specific data type": "reg add {{key_name}} /t {{type}}",
                "Add a new value under a specific key": "reg add {{key_name}} /v {{value}}",
                "Add a new value with specific data": "reg add {{key_name}} /d {{data}}",
                "Forcefully overwrite the existing registry value without a prompt": "reg add {{key_name}} /f"
            },
            "Explanation": "Add new keys and their values to the registry.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-add"
        }
    },
    "reg compare": {
        "windows": {
            "Examples": {
                "Compare a specific value under two keys": "reg compare {{first_key_name}} {{second_key_name}} /v {{value}}",
                "Compare all sub keys and values for two keys": "reg compare {{first_key_name}} {{second_key_name}} /s",
                "Compare all values under a specific key with a second key": "reg compare {{first_key_name}} {{second_key_name}}",
                "Only output the matches between the specified keys": "reg compare {{first_key_name}} {{second_key_name}} /os",
                "Output the differences and matches between the specified keys": "reg compare {{first_key_name}} {{second_key_name}} /oa"
            },
            "Explanation": "Compare keys and their values in the registry.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-compare"
        }
    },
    "reg copy": {
        "windows": {
            "Examples": {
                "Copy a registry key recursively to a new registry location": "reg copy {{old_key_name}} {{new_key_name}} /s",
                "Copy a registry key to a new registry location": "reg copy {{old_key_name}} {{new_key_name}}",
                "Forcefully copy a registry key without a prompt": "reg copy {{old_key_name}} {{new_key_name}} /f"
            },
            "Explanation": "Copy keys and their values in the registry.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-copy"
        }
    },
    "reg delete": {
        "windows": {
            "Examples": {
                "Delete a specific registry key": "reg delete {{key_name}}",
                "Delete a value under a specific key": "reg delete {{key_name}} /v {{value}}",
                "Delete all values recursively under the specified key": "reg delete {{key_name}} /va",
                "Forcefully delete all values recursively under a key without a prompt": "reg delete {{key_name}} /f /va"
            },
            "Explanation": "Delete keys or their values from the registry.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-delete"
        }
    },
    "reg export": {
        "windows": {
            "Examples": {
                "Export all sub keys and values of a specific key": "reg export {{key_name}} {{path/to/file.reg}}",
                "Force overwriting of an existing file without prompt": "reg export {{key_name}} {{path/to/file.reg}} /y"
            },
            "Explanation": "Export the specified sub keys and values into a file.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-export"
        }
    },
    "reg flags": {
        "windows": {
            "Examples": {
                "Display current flags for a specific key": "reg flags {{key_name}} query",
                "Display help and available flag types": "reg flags /?",
                "Set specified flags for a specific key and its sub keys": "reg flags {{key_name}} set {{flag_names}} /s",
                "Set specified space-separated flags, and unset unmentioned flags, for a specific key": "reg flags {{key_name}} set {{flag_names}}"
            },
            "Explanation": "Display or set flags on registry keys.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-flags"
        }
    },
    "reg import": {
        "windows": {
            "Examples": {
                "Import all keys, subkeys and values from a file": "reg import {{path/to/file.reg}}"
            },
            "Explanation": "Import all available keys, subkeys, and values from a file.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-import"
        }
    },
    "reg load": {
        "windows": {
            "Examples": {
                "Load a backup file into the specified key": "reg load {{key_name}} {{path/to/file}}"
            },
            "Explanation": "Load saved sub keys into a different sub key in the registry.\nThis is intended for troubleshooting and temporary keys.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-load"
        }
    },
    "reg query": {
        "windows": {
            "Examples": {
                "Display a specific value of a key": "reg query {{key_name}} /v {{value}}",
                "Display a value of a key matching a specified data type": "reg query {{key_name}} /t {{type}}",
                "Display all values of a key": "reg query {{key_name}}",
                "Display all values of a key and its sub keys": "reg query {{key_name}} /s",
                "Search for keys and values matching a specific pattern": "reg query {{key_name}} /f \"{{query_pattern}}\""
            },
            "Explanation": "Display the values of keys and sub keys in the registry.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-query"
        }
    },
    "reg restore": {
        "windows": {
            "Examples": {
                "Overwrite a specified key with data from a backup file": "reg restore {{key_name}} {{path/to/file}}"
            },
            "Explanation": "Restore a key and its values from a backup file.\nSee `reg-save` for more information.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-restore"
        }
    },
    "reg save": {
        "windows": {
            "Examples": {
                "Forcefully overwrite an existing file without a prompt": "reg save {{key_name}} {{path/to/file}} /y",
                "Save a registry key, its sub keys and values to a specific file": "reg save {{key_name}} {{path/to/file}}"
            },
            "Explanation": "Save a registry key, its sub keys and values to a file.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-save"
        }
    },
    "reg unload": {
        "windows": {
            "Examples": {
                "Remove data from the registry for a specified key": "reg unload {{key_name}}"
            },
            "Explanation": "Remove data from the registry that was loaded using the `reg load` command.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/reg-unload"
        }
    },
    "rename": {
        "linux": {
            "Examples": {
                "Change file extensions": "rename {{.ext}} {{.bak}} {{*.ext}}",
                "Do not overwrite existing files": "rename -o {{foo}} {{bar}} {{*}}",
                "Dry-run - display which renames would occur without performing them": "rename -vn {{foo}} {{bar}} {{*}}",
                "Prepend \"foo\" to all filenames in the current directory": "rename {{''}} {{'foo'}} {{*}}",
                "Rename a group of increasingly numbered files zero-padding the numbers up to 3 digits": "rename {{foo}} {{foo00}} {{foo?}} && rename {{foo}} {{foo0}} {{foo??}}",
                "Rename files using simple substitutions (substitute 'foo' with 'bar' wherever found)": "rename {{foo}} {{bar}} {{*}}"
            },
            "Explanation": "Rename multiple files.\nNOTE: this page refers to the command from the `util-linux` package.\nFor the Perl version, see `file-rename` or `perl-rename`.\nWarning: This command has no safeguards and will overwrite files without prompting.",
            "More Information Link": ""
        }
    },
    "renice": {
        "common": {
            "Examples": {
                "Change priority of a running process": "renice -n {{niceness_value}} -p {{pid}}",
                "Change priority of all processes owned by a user": "renice -n {{niceness_value}} -u {{user}}",
                "Change priority of all processes that belong to a process group": "renice -n {{niceness_value}} --pgrp {{process_group}}"
            },
            "Explanation": "Alters the scheduling priority/nicenesses of one or more running processes.\nNiceness values range from -20 (most favorable to the process) to 19 (least favorable to the process).",
            "More Information Link": ""
        }
    },
    "repair-bde": {
        "windows": {
            "Examples": {
                "Attempt to repair a specified volume": "repair-bde {{C:}}",
                "Attempt to repair a specified volume and output to another volume": "repair-bde {{C:}} {{D:}}",
                "Attempt to repair a specified volume using the provided key package": "repair-bde {{C:}} -KeyPackage {{path/to/directory}}",
                "Attempt to repair a specified volume using the provided numerical recovery password": "repair-bde {{C:}} -RecoveryPassword {{password}}",
                "Attempt to repair a specified volume using the provided password": "repair-bde {{C:}} -Password {{password}}",
                "Attempt to repair a specified volume using the provided recovery key file": "repair-bde {{C:}} -RecoveryKey {{path/to/file.bek}}",
                "Display all available options": "repair-bde /?",
                "Log all output to a specific file": "repair-bde {{C:}} -LogFile {{path/to/file}}"
            },
            "Explanation": "Attempt to repair or decrypt a damaged BitLocker-encrypted volume.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/repair-bde"
        }
    },
    "replace": {
        "windows": {
            "Examples": {
                "Add files to the destination directory instead of replacing existing files": "replace {{path/to/file_or_directory}} {{path/to/destination}} /a",
                "Display detailed usage information": "replace /?",
                "Interactively copy multiple files, with a prompt before replacing or adding a destination file": "replace {{path/to/file_or_directory}} {{path/to/destination}} /p",
                "Replace all files in subfolders of the destination": "replace {{path/to/file_or_directory}} {{path/to/destination}} /s",
                "Replace even read only files": "replace {{path/to/file_or_directory}} {{path/to/destination}} /r",
                "Replace only files in the destination directory which are older than the files in the source directory": "replace {{path/to/file_or_directory}} {{path/to/destination}} /u",
                "Replace the destination file with the one from the source directory": "replace {{path/to/file_or_directory}} {{path/to/destination}}",
                "Wait for you to insert a disk before it replaces files (originally to allow inserting a floppy disk)": "replace {{path/to/file_or_directory}} {{path/to/destination}} /w"
            },
            "Explanation": "Replace files.\nSee also: `robocopy`, `move`, `copy`, and `del`.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/replace"
        }
    },
    "reportbug": {
        "linux": {
            "Examples": {
                "Generate a bug report about a specific package, then send it by e-mail": "reportbug {{package}}",
                "Report a bug that is not about a specific package (general problem, infrastructure, etc.)": "reportbug other",
                "Write the bug report to a file instead of sending it by e-mail": "reportbug -o {{filename}} {{package}}"
            },
            "Explanation": "Bug report tool of Debian distribution.",
            "More Information Link": "https://manpages.debian.org/buster/reportbug/reportbug.1.en.html"
        }
    },
    "repquota": {
        "linux": {
            "Examples": {
                "Report on all quotas for users and groups in a human-readable format": "sudo repquota -augs",
                "Report on quotas for groups only": "sudo repquota --group {{filesystem}}",
                "Report on quotas for users only": "repquota --user {{filesystem}}",
                "Report on used quota and limits in a human-readable format": "sudo repquota --human-readable {{filesystem}}",
                "Report quota stats for all users, even those who aren't using any of their quota": "sudo repquota -v {{filesystem}}",
                "Report stats for all quotas in use": "sudo repquota -all"
            },
            "Explanation": "Display a summary of existing file quotas for a filesystem.",
            "More Information Link": ""
        }
    },
    "repren": {
        "common": {
            "Examples": {
                "Do a case-insensitive rename": "repren --rename --insensitive --patterns {{path/to/patfile.ext}} *",
                "Do a dry-run renaming a directory of jpegs with a regular expression": "repren --rename --dry-run --from '{{regular_expression}}' --to '{{replacement_string}}' {{*.jpg}} {{*.jpeg}}",
                "Do a dry-run renaming a directory of pngs with a literal string replacement": "repren --dry-run --rename --literal --from '{{find_string}}' --to '{{replacement_string}}' {{*.png}}",
                "Do a find-and-replace on the contents of a directory of csv files": "repren --from '{{([0-9]+) example_string}}' --to '{{replacement_string \\1}}' {{*.csv}}",
                "Do both a find-and-replace and a rename operation at the same time, using a pattern file": "repren --patterns {{path/to/patfile.ext}} --full {{*.txt}}"
            },
            "Explanation": "Multi-pattern string replacement and file renaming tool.",
            "More Information Link": "https://github.com/jlevy/repren"
        }
    },
    "reset": {
        "linux": {
            "Examples": {
                "Display the terminal type instead": "reset -q",
                "Reinitialise the current terminal": "reset"
            },
            "Explanation": "Reinitialises the current terminal. Clears the entire terminal screen.",
            "More Information Link": ""
        }
    },
    "resize2fs": {
        "linux": {
            "Examples": {
                "Automatically resize a filesystem": "resize2fs {{/dev/sdXN}}",
                "Resize the filesystem to a size of 40G, displaying a progress bar": "resize2fs -p {{/dev/sdXN}} {{40G}}",
                "Shrink the filesystem to its minimum possible size": "resize2fs -M {{/dev/sdXN}}"
            },
            "Explanation": "Resize an ext2, ext3 or ext4 filesystem.\nDoes not resize the underlying partition, and the filesystem must be unmounted.",
            "More Information Link": ""
        }
    },
    "restic": {
        "common": {
            "Examples": {
                "Backup a directory to the repository": "restic -r {{path/to/repository}} backup {{path/to/directory}}",
                "Clean up the repository and keep only the most recent snapshot of each unique backup": "restic forget --keep-last 1 --prune",
                "Initialize a backup repository in the specified local directory": "restic init -r {{path/to/repository}}",
                "Restore a specific backup snapshot to a target directory": "restic -r {{path/to/repository}} restore {{snapshot_id}} {{path/to/target}}",
                "Restore a specific path from a specific backup to a target directory": "restic -r {{path/to/repository}} --include {{path/to/restore}} --target {{path/to/target}} restore {{snapshot_id}}",
                "Show backup snapshots currently stored in the repository": "restic -r {{path/to/repository}} snapshots"
            },
            "Explanation": "A backup program that aims to be fast, secure and efficient.",
            "More Information Link": "https://restic.net"
        }
    },
    "rev": {
        "common": {
            "Examples": {
                "Reverse an entire file and print to `stdout`": "rev {{file}}",
                "Reverse the text string \"hello\"": "echo \"hello\" | rev"
            },
            "Explanation": "Reverse a line of text.",
            "More Information Link": ""
        }
    },
    "rfkill": {
        "linux": {
            "Examples": {
                "Block devices by type (e.g. bluetooth, wlan)": "rfkill block {{bluetooth}}",
                "Filter by columns": "rfkill -o {{ID,TYPE,DEVICE}}",
                "List devices": "rfkill",
                "Output in JSON format": "rfkill -J",
                "Unblock devices by type (e.g. bluetooth, wlan)": "rfkill unblock {{wlan}}"
            },
            "Explanation": "Enable and disable wireless devices.",
            "More Information Link": ""
        }
    },
    "rig": {
        "linux": {
            "Examples": {
                "Display a [m]ale (or [f]emale) random name and address": "rig -{{m|f}}",
                "Display a random name (male or female) and address": "rig",
                "Display a specific number of female identities": "rig -f -c {{number}}",
                "Display a specific number of identities": "rig -c {{number}}",
                "Use data files from a specific directory (default is `/usr/share/rig`)": "rig -d {{path/to/directory}}"
            },
            "Explanation": "Utility to piece together a random first name, last name, street number and address, along with a geographically consistent (ie, they all match the same area) city, state, ZIP code, and area code.",
            "More Information Link": "https://manpages.ubuntu.com/manpages/focal/man6/rig.6.html"
        }
    },
    "ripgrep": {
        "common": {
            "Examples": {
                "Only list matched files (useful when piping to other commands)": "rg --files-with-matches {{pattern}}",
                "Recursively search the current directory for a regex pattern": "rg {{pattern}}",
                "Search a literal string pattern": "rg -F {{string}}",
                "Search for a pattern in files matching a glob (e.g., `README.*`)": "rg {{pattern}} -g {{glob}}",
                "Search for a pattern only in a certain filetype (e.g., html, css, etc.)": "rg -t {{filetype}} {{pattern}}",
                "Search for a pattern only in a subset of directories": "rg {{pattern}} {{set_of_subdirs}}",
                "Search for pattern including all .gitignored and hidden files": "rg -uu {{pattern}}",
                "Show lines that do not match the given pattern": "rg --invert-match {{pattern}}"
            },
            "Explanation": "A recursive line-oriented CLI search tool.\nAims to be a faster alternative to `grep`.",
            "More Information Link": "https://github.com/BurntSushi/ripgrep"
        }
    },
    "rm": {
        "common": {
            "Examples": {
                "Forcibly remove a directory, without prompting for confirmation or showing error messages": "rm -rf {{path/to/directory}}",
                "Interactively remove multiple files, with a prompt before every removal": "rm -i {{file(s)}}",
                "Recursively remove a directory and all its subdirectories": "rm -r {{path/to/directory}}",
                "Remove files from arbitrary locations": "rm {{path/to/file}} {{path/to/another/file}}",
                "Remove files in verbose mode, printing a message for each removed file": "rm -v {{path/to/directory/*}}"
            },
            "Explanation": "Remove files or directories.",
            "More Information Link": ""
        }
    },
    "rmdir": {
        "common": {
            "Examples": {
                "Remove directory, provided it is empty. Use `rm -r` to remove non-empty directories": "rmdir {{path/to/directory}}",
                "Remove the target and its parent directories (useful for nested dirs)": "rmdir -p {{path/to/directory}}"
            },
            "Explanation": "Removes a directory.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Remove a directory and its contents recursively": "rmdir {{path/to/directory}} /s",
                "Remove a directory and its contents recursively without prompting": "rmdir {{path/to/directory}} /s /q",
                "Remove an empty directory": "rmdir {{path/to/directory}}"
            },
            "Explanation": "Remove a directory and its contents.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/rmdir"
        }
    },
    "roave-backward-compatibility-check": {
        "common": {
            "Examples": {
                "Check for breaking changes and output to markdown": "roave-backward-compatibility-check --format=markdown > {{results.md}}",
                "Check for breaking changes between the last tag and a specific reference": "roave-backward-compatibility-check --to={{git_reference}}",
                "Check for breaking changes since a specific tag": "roave-backward-compatibility-check --from={{git_reference}}",
                "Check for breaking changes since the last tag": "roave-backward-compatibility-check"
            },
            "Explanation": "A tool that can be used to verify backward compatibility breaks between two versions of a PHP library.",
            "More Information Link": "https://github.com/Roave/BackwardCompatibilityCheck"
        }
    },
    "robo": {
        "common": {
            "Examples": {
                "List available commands": "robo list",
                "Run a specific command": "robo {{foo}}",
                "Simulate running a specific command": "robo --simulate {{foo}}"
            },
            "Explanation": "PHP task runner.",
            "More Information Link": "https://robo.li/"
        }
    },
    "robocopy": {
        "windows": {
            "Examples": {
                "Allow resuming if network connection is lost and limit retries to 5 and wait time to 15 sec": "robocopy {{path/to/source}} {{path/to/destination}} /Z /R:5 /W:15",
                "Copy all .jpg and .bmp files from one directory to another": "robocopy {{path/to/source}} {{path/to/destination}} {{*.jpg}} {{*.bmp}}",
                "Copy all files and subdirectories, excluding source files that are older than destination files": "robocopy {{path/to/source}} {{path/to/destination}} /E /XO",
                "Copy all files and subdirectories, including empty ones": "robocopy {{path/to/source}} {{path/to/destination}} /E",
                "Display detailed usage information": "robocopy /?",
                "List all files 50 MBytes or larger in size instead of copying them": "robocopy {{path/to/source}} {{path/to/destination}} /MIN:52428800 /L",
                "Mirror/Sync a directory, deleting anything not in source and include all attributes and permissions": "robocopy {{path/to/source}} {{path/to/destination}} /MIR /COPYALL"
            },
            "Explanation": "Robust File and Folder Copy.\nBy default files will only be copied if the source and destination have different time stamps or different file sizes.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/robocopy"
        }
    },
    "rofi": {
        "linux": {
            "Examples": {
                "Pipe a list of items to stdin and print the selected item to stdout": "printf \"{{Choice1\\nChoice2\\nChoice3}}\" | rofi -dmenu",
                "Show the list of all commands": "rofi -show run",
                "Show the list of apps": "rofi -show drun",
                "Switch between windows": "rofi -show window"
            },
            "Explanation": "An application launcher and window switcher.\nMore Information: <https://github.com/davatorium/rofi>.",
            "More Information Link": ""
        }
    },
    "roll": {
        "common": {
            "Examples": {
                "Roll 1 8-sided die, add 3 and sum the results": "roll {{d8 + 3}}",
                "Roll 2 12-sided dice 2 times and show every roll": "roll --verbose {{2{2d12}}}",
                "Roll 2 20-sided dice until the result is bigger than 10": "roll \"{{2d20>10}}\"",
                "Roll 2 5-sided dice 3 times and show the total sum": "roll --sum-series {{3{2d5}}}",
                "Roll 3 6-sided dice and sums the results": "roll {{3d}}",
                "Roll 4 6-sided dice, keep the 3 highest results and sum the results": "roll {{4d6h3}}"
            },
            "Explanation": "Rolls a user-defined dice sequence.",
            "More Information Link": ""
        }
    },
    "route": {
        "common": {
            "Examples": {
                "Add route rule": "sudo route add -net {{ip_address}} netmask {{netmask_address}} gw {{gw_address}}",
                "Delete route rule": "sudo route del -net {{ip_address}} netmask {{netmask_address}} dev {{gw_address}}",
                "Display the information of route table": "route -n"
            },
            "Explanation": "Use route cmd to set the route table.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Add a route to a /24 subnet through a gateway": "sudo route add {{subnet_ip_address}}/24 {{gateway_address}}",
                "Add a route to a destination through a gateway": "sudo route add {{dest_ip_address}} {{gateway_address}}",
                "Delete a specific route": "sudo route delete {{dest_ip_address}}/24",
                "Lookup and display the route for a destination (hostname or IP address)": "sudo route get {{destination}}",
                "Remove all routes": "sudo route flush",
                "Run in test mode (does not do anything, just print)": "sudo route -t add {{dest_ip_address}}/24 {{gateway_address}}"
            },
            "Explanation": "Manually manipulate the routing tables.\nNecessitates to be root.",
            "More Information Link": ""
        }
    },
    "rpcclient": {
        "linux": {
            "Examples": {
                "Connect to a remote host": "rpcclient --user {{domain}}\\{{username}}%{{password}} {{ip}}",
                "Connect to a remote host on a domain without a password": "rpcclient --user {{username}} --workgroup {{domain}} --no-pass {{ip}}",
                "Connect to a remote host, passing the password hash": "rpcclient --user {{domain}}\\{{username}} --pw-nt-hash {{ip}}",
                "Create a new user in the domain": "rpcclient $> createdomuser {{username}}",
                "Display domain users": "rpcclient $> enumdomusers",
                "Display information about a specific user": "rpcclient $> queryuser {{username|rid}}",
                "Display privileges": "rpcclient $> enumprivs",
                "Execute shell commands on a remote host": "rpcclient --user {{domain}}\\{{username}}%{{password}} --command {{semicolon_separated_commands}} {{ip}}"
            },
            "Explanation": "MS-RPC client tool (part of the samba suite).",
            "More Information Link": "https://www.samba.org/samba/docs/current/man-html/rpcclient.1.html"
        }
    },
    "rpcinfo": {
        "linux": {
            "Examples": {
                "Delete the registration for version 1 of the mountd service for all transports": "rpcinfo -d {{mountd}} {{1}}",
                "Display list of entries of given service name (mountd) and version number (2) on a remote nfs share": "rpcinfo -l {{remote_nfs_server_ip}} {{mountd}} {{2}}",
                "Display table of statistics of rpcbind operations on localhost": "rpcinfo -m",
                "Show concise table of all RPC services registered on localhost": "rpcinfo -s {{localhost}}",
                "Show full table of all RPC services registered on localhost": "rpcinfo"
            },
            "Explanation": "Makes an RPC call to an RPC server and reports what it finds.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Call a specific program on a remote computer using TCP": "rpcinfo /t {{computer_name}} {{program_name}}",
                "Call a specific program on a remote computer using UDP": "rpcinfo /u {{computer_name}} {{program_name}}",
                "List all programs registered on a remote computer": "rpcinfo /p {{computer_name}}",
                "List all programs registered on the local computer": "rpcinfo"
            },
            "Explanation": "List programs via RPC on remote computers.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/rpcinfo"
        }
    },
    "rpm": {
        "linux": {
            "Examples": {
                "Forcibly install a package regardless of currently installed versions": "rpm -U {{package_name.rpm}} --force",
                "Identify owner of a file and show version of the package": "rpm -qf {{/etc/postfix/main.cf}}",
                "List package-owned files": "rpm -ql {{kernel}}",
                "List versions of all matching packages": "rpm -qa '{{mariadb*}}'",
                "Show changed, missing and/or incorrectly installed files of matching packages": "rpm -Va '{{php-*}}'",
                "Show scriptlets from an RPM file": "rpm -qp --scripts {{package_name.rpm}}",
                "Show version of httpd package": "rpm -q {{httpd}}"
            },
            "Explanation": "RPM Package Manager.",
            "More Information Link": ""
        }
    },
    "rr": {
        "common": {
            "Examples": {
                "Record an application": "rr record {{path/to/binary --arg1 --arg2}}",
                "Replay latest recorded execution": "rr replay"
            },
            "Explanation": "Debugging tool designed to record and replay program execution.",
            "More Information Link": "https://rr-project.org/"
        }
    },
    "rspamc": {
        "linux": {
            "Examples": {
                "Generate a manual report on an email": "rspamc symbols {{path/to/email_file}}",
                "Show server statistics": "rspamc stat",
                "Train the bayesian filter to recognise an email as ham": "rspamc learn_ham {{path/to/email_file}}",
                "Train the bayesian filter to recognise an email as spam": "rspamc learn_spam {{path/to/email_file}}"
            },
            "Explanation": "Command line client for rspamd servers.",
            "More Information Link": ""
        }
    },
    "rspec": {
        "common": {
            "Examples": {
                "Initialise an .rspec config and a spec helper file": "rspec --init",
                "Run a specific directory of tests": "rspec {{path/to/directory}}",
                "Run a specific test file": "rspec {{path/to/file}}",
                "Run a specific test in a file (e.g. the test starts on line 83)": "rspec {{path/to/file}}:{{83}}",
                "Run all tests": "rspec",
                "Run multiple test files": "rspec {{path/to/file1}} {{path/to/file2}}",
                "Run specs with a specific seed": "rspec --seed {{seed_number}}"
            },
            "Explanation": "Behavior-driven development testing framework written in Ruby to test Ruby code.",
            "More Information Link": "https://rspec.info"
        }
    },
    "rsstail": {
        "common": {
            "Examples": {
                "Include publication date and link": "rsstail -pl -u {{url}}",
                "Set update interval": "rsstail -u {{url}} -i {{interval_in_seconds}}",
                "Show feed and exit": "rsstail -1 -u {{url}}",
                "Show the feed in reverse chronological order (newer at the bottom)": "rsstail -r -u {{url}}",
                "Show the feed of a given url and wait for new entries appearing at the bottom": "rsstail -u {{url}}"
            },
            "Explanation": "`tail` for RSS feeds.",
            "More Information Link": "https://github.com/gvalkov/rsstail.py"
        }
    },
    "rsync": {
        "common": {
            "Examples": {
                "Transfer a directory [r]ecursively, in [a]rchive to preserve attributes, resolving contained soft[l]inks , and ignoring already transferred files [u]nless newer": "rsync -rauL {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}",
                "Transfer a directory and all its children from a remote to local": "rsync -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}",
                "Transfer directory contents (but not the directory itself) from a remote to local": "rsync -r {{remote_host}}:{{path/to/remote_directory}}/ {{path/to/local_directory}}",
                "Transfer file from local to remote host": "rsync {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}",
                "Transfer file from remote host to local": "rsync {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}",
                "Transfer file in [a]rchive (to preserve attributes) and compressed ([z]ipped) mode with [v]erbose and [h]uman-readable [P]rogress": "rsync -azvhP {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}",
                "Transfer file over SSH and delete local files that do not exist on remote host": "rsync -e ssh --delete {{remote_host}}:{{path/to/remote_file}} {{path/to/local_file}}",
                "Transfer file over SSH using a different port than the default and show global progress": "rsync -e 'ssh -p {{port}}' --info=progress2 {{remote_host}}:{{path/to/remote_file}} {{path/to/local_file}}"
            },
            "Explanation": "Transfer files either to or from a remote host (not between two remote hosts).\nCan transfer single files, or multiple files matching a pattern.",
            "More Information Link": ""
        }
    },
    "rtcwake": {
        "linux": {
            "Examples": {
                "Disable a previously set alarm": "sudo rtcwake -m disable",
                "Freeze the system (more efficient than suspend-to-ram but linux > 3.9 required) and wakeup at a given date and time": "sudo rtcwake -m freeze --date {{YYYYMMDDhhmm}}",
                "Perform a dry run to wakup the computer at a given time. (Press Ctrl + C to abort)": "sudo rtcwake -m on --date {{hh:ss}}",
                "Show whether an alarm is set or not": "sudo rtcwake -m show -v",
                "Suspend to disk (higher power saving) and wakeup 15 minutes later": "sudo rtcwake -m disk --date +{{15}}min",
                "Suspend to ram and wakeup after 10 seconds": "sudo rtcwake -m mem -s {{10}}"
            },
            "Explanation": "Enter a system sleep state until specified wakeup time relative to your bios clock.",
            "More Information Link": ""
        }
    },
    "rtmpdump": {
        "common": {
            "Examples": {
                "Download a file": "rtmpdump --rtmp {{rtmp://example.com/path/to/video}} -o {{file.ext}}",
                "Download a file from a Flash player": "rtmpdump --rtmp {{rtmp://example.com/path/to/video}} --swfVfy {{http://example.com/player}} --flashVer \"{{LNX 10,0,32,18}}\" -o {{file.ext}}",
                "Download a file from a server that requires a referrer": "rtmpdump --rtmp {{rtmp://example.com/path/to/video}} --pageUrl {{http://example.com/webpage}} -o {{file.ext}}",
                "Specify connection parameters if they are not detected correctly": "rtmpdump --rtmp {{rtmp://example.com/path/to/video}} --app {{app_name}} --playpath {{path/to/video}} -o {{file.ext}}"
            },
            "Explanation": "A tool to dump media content streamed over the RTMP protocol.",
            "More Information Link": "http://rtmpdump.mplayerhq.hu/"
        }
    },
    "rtorrent": {
        "linux": {
            "Examples": {
                "Add a torrent file or magnet to be downloaded": "rtorrent {{torrent_or_magnet}}",
                "Close rtorrent safely": "<Ctrl>Q",
                "Start the download": "<Ctrl>S",
                "View details about downloading torrent": "->"
            },
            "Explanation": "Download torrents over the command line.",
            "More Information Link": ""
        }
    },
    "rtv": {
        "common": {
            "Examples": {
                "Expand/collapse comments": "[space]",
                "Login": "u",
                "Open a subreddit": "/r/{{subreddit_name}}",
                "Open link": "o",
                "Open the front page": "/front",
                "Open the help screen": "?"
            },
            "Explanation": "Reddit Terminal Viewer.\nUse arrow keys to navigate. Right and Left to view and return from a submission, respectively.",
            "More Information Link": "https://github.com/michael-lazar/rtv"
        }
    },
    "rubocop": {
        "osx": {
            "Examples": {
                "Auto-correct files (experimental)": "rubocop --auto-correct",
                "Check all files in the current directory (including subdirectories)": "rubocop",
                "Check one or more specific files or directories": "rubocop {{path/to/file}} {{path/to/directory}}",
                "Exclude a cop": "rubocop --except {{cop_1}} {{cop_2}}",
                "Run only specified cops": "rubocop --only {{cop_1}} {{cop_2}}",
                "View list of cops (linter rules)": "rubocop --show-cops",
                "Write output to file": "rubocop --out {{path/to/file}}"
            },
            "Explanation": "Lint Ruby files.",
            "More Information Link": ""
        }
    },
    "ruby": {
        "common": {
            "Examples": {
                "Check for syntax errors on a given Ruby script": "ruby -c {{script.rb}}",
                "Execute a Ruby script": "ruby {{script.rb}}",
                "Execute a single Ruby command in the command line": "ruby -e {{command}}",
                "Open an Interactive Ruby Shell (REPL)": "irb",
                "Show the version of Ruby you are using": "ruby -v"
            },
            "Explanation": "Ruby programming language interpreter.",
            "More Information Link": "https://www.ruby-lang.org"
        }
    },
    "run-mailcap": {
        "linux": {
            "Examples": {
                "Display the found command without actually executing it": "run-mailcap --action=ACTION --norun {{filename}}",
                "Ignore any \"copiousoutput\" directive and forward output to standard output": "run-mailcap --action=ACTION --nopager {{filename}}",
                "In simple language": "run-mailcap --action=ACTION {{filename}}",
                "Individual actions/programs on run-mailcap can be invoked with action flag": "run-mailcap --action=ACTION [--option[=value]]",
                "Turn on extra information": "run-mailcap --action=ACTION --debug {{filename}}"
            },
            "Explanation": "Run MailCap Programs.\nRun mailcap view, see, edit, compose, print - execute programs via entries in the mailcap file (or any of its aliases) will use the given action to process each mime-type/file.",
            "More Information Link": ""
        }
    },
    "runcon": {
        "linux": {
            "Examples": {
                "Determine the current domain": "runcon",
                "Specify the context role to run a command with": "runcon -r {{role}}_r {{command}}",
                "Specify the domain to run a command in": "runcon -t {{domain}}_t {{command}}",
                "Specify the full context to run a command with": "runcon {{user}}_u:{{role}}_r:{{domain}}_t {{command}}"
            },
            "Explanation": "Run a program in a different SELinux security context.\nWith neither context nor command, print the current security context.",
            "More Information Link": ""
        }
    },
    "runit": {
        "linux": {
            "Examples": {
                "Shut down runit": "kill --CONT {{runit_pid}}",
                "Start runit's 3-stage init scheme": "runit"
            },
            "Explanation": "3-stage init system.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Shut down runit": "kill --CONT {{runit_pid}}",
                "Start runit's 3-stage init scheme": "runit"
            },
            "Explanation": "3-stage init system.",
            "More Information Link": ""
        },
        "sunos": {
            "Examples": {
                "Shut down runit": "kill --CONT {{runit_pid}}",
                "Start runit's 3-stage init scheme": "runit"
            },
            "Explanation": "3-stage init system.",
            "More Information Link": ""
        }
    },
    "runsv": {
        "linux": {
            "Examples": {
                "Start a runit service as root": "sudo runsv {{path/to/service}}",
                "Start a runit service as the current user": "runsv {{path/to/service}}"
            },
            "Explanation": "Start and manage a runit service.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Start a runit service as root": "sudo runsv {{path/to/service}}",
                "Start a runit service as the current user": "runsv {{path/to/service}}"
            },
            "Explanation": "Start and manage a runit service.",
            "More Information Link": ""
        },
        "sunos": {
            "Examples": {
                "Start a runit service as root": "sudo runsv {{path/to/service}}",
                "Start a runit service as the current user": "runsv {{path/to/service}}"
            },
            "Explanation": "Start and manage a runit service.",
            "More Information Link": ""
        }
    },
    "runsvchdir": {
        "linux": {
            "Examples": {
                "Switch `runsvdir` directories": "sudo runsvchdir {{/path/to/directory}}"
            },
            "Explanation": "Change the directory `runsvdir` uses by default.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Switch `runsvdir` directories": "sudo runsvchdir {{/path/to/directory}}"
            },
            "Explanation": "Change the directory `runsvdir` uses by default.",
            "More Information Link": ""
        },
        "sunos": {
            "Examples": {
                "Switch `runsvdir` directories": "sudo runsvchdir {{/path/to/directory}}"
            },
            "Explanation": "Change the directory `runsvdir` uses by default.",
            "More Information Link": ""
        }
    },
    "runsvdir": {
        "linux": {
            "Examples": {
                "Start and manage all services in a directory as root": "sudo runsvdir {{path/to/services}}",
                "Start and manage all services in a directory as the current user": "runsvdir {{path/to/services}}",
                "Start services in separate sessions": "runsvdir -P {{path/to/services}}"
            },
            "Explanation": "Run an entire directory of services.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Start and manage all services in a directory as root": "sudo runsvdir {{path/to/services}}",
                "Start and manage all services in a directory as the current user": "runsvdir {{path/to/services}}",
                "Start services in separate sessions": "runsvdir -P {{path/to/services}}"
            },
            "Explanation": "Run an entire directory of services.",
            "More Information Link": ""
        },
        "sunos": {
            "Examples": {
                "Start and manage all services in a directory as root": "sudo runsvdir {{path/to/services}}",
                "Start and manage all services in a directory as the current user": "runsvdir {{path/to/services}}",
                "Start services in separate sessions": "runsvdir -P {{path/to/services}}"
            },
            "Explanation": "Run an entire directory of services.",
            "More Information Link": ""
        }
    },
    "runuser": {
        "linux": {
            "Examples": {
                "Preserve the entire environment of root (only if `--login` is not specified)": "runuser {{user}} --preserve-environment -c '{{command}}'",
                "Run command as a different user": "runuser {{user}} -c '{{command}}'",
                "Run command as a different user and group": "runuser {{user}} -g {{group}} -c '{{command}}'",
                "Specify a shell for running instead of the default shell (also works for login)": "runuser {{user}} -s {{/bin/sh}}",
                "Start a login shell as a specific user": "runuser {{user}} -l"
            },
            "Explanation": "Run commands as a specific user and group without asking for password (needs root privileges).",
            "More Information Link": ""
        }
    },
    "rustc": {
        "common": {
            "Examples": {
                "Compile a single file": "rustc {{file.rs}}",
                "Compile for a specific target": "rustc --target {{target_triple}} {{path/to/file.rs}}",
                "Compile with architecture-specific optimizations for the current CPU": "rustc -C target-cpu=native {{path/to/file.rs}}",
                "Compile with debugging information": "rustc -g {{file.rs}}",
                "Compile with high optimization": "rustc -O {{file.rs}}",
                "Display architecture-specific optimizations for the current CPU": "rustc -C target-cpu=native --print cfg",
                "Display target list": "rustc --print target-list"
            },
            "Explanation": "The Rust compiler.\nProcesses, compiles and links Rust language source files.",
            "More Information Link": "https://doc.rust-lang.org/rustc"
        }
    },
    "rustfmt": {
        "common": {
            "Examples": {
                "Backup any modified files before formatting (the original file is renamed with a `.bk` extension)": "rustfmt --backup {{source.rs}}",
                "Check a file for formatting and display any changes on the console": "rustfmt --check {{source.rs}}",
                "Format a file, overwriting the original file in-place": "rustfmt {{source.rs}}"
            },
            "Explanation": "Tool for formatting Rust source code.",
            "More Information Link": "https://github.com/rust-lang/rustfmt"
        }
    },
    "rustup": {
        "common": {
            "Examples": {
                "Install the nightly toolchain for your system": "rustup install nightly",
                "List installed toolchains": "rustup show",
                "Run cargo build with a certain toolchain": "rustup run {{toolchain_name}} cargo build",
                "Switch the default toolchain to nightly so that the `cargo` and `rustc` commands will use it": "rustup default nightly",
                "Update all toolchains": "rustup update",
                "Use the nightly toolchain when inside the current project, but leave global settings unchanged": "rustup override set nightly"
            },
            "Explanation": "Rust toolchain installer.\nInstall, manage, and update Rust toolchains.",
            "More Information Link": "https://github.com/rust-lang/rustup.rs"
        }
    },
    "rvm": {
        "common": {
            "Examples": {
                "Display a list of installed versions": "rvm list",
                "Install one or more space-separated versions of Ruby": "rvm install {{version(s)}}",
                "Remove a version of Ruby and its sources": "rvm remove {{version}}",
                "Set the default Ruby version": "rvm --default use {{version}}",
                "Show specific dependencies for your OS": "rvm requirements",
                "Uninstall a version of Ruby and keep its sources": "rvm uninstall {{version}}",
                "Upgrade a version of Ruby to a new version": "rvm upgrade {{current_version}} {{new_version}}",
                "Use a specific version of Ruby": "rvm use {{version}}"
            },
            "Explanation": "A tool for easily installing, managing, and working with multiple ruby environments.",
            "More Information Link": "https://rvm.io"
        }
    },
    "s": {
        "common": {
            "Examples": {
                "List all providers": "s --list-providers",
                "Search for a query on Google(default provider)": "s {{query}}",
                "Search for a query with a given provider": "s --provider {{provider}} {{query}}",
                "Use a specified binary to perform the search query": "s --binary \"{{binary}} {{arguments}}\" {{query}}"
            },
            "Explanation": "Web search from the terminal.",
            "More Information Link": ""
        }
    },
    "sa": {
        "linux": {
            "Examples": {
                "Display executable invocations per user (username not displayed)": "sudo sa",
                "Display executable invocations per user, showing responsible usernames": "sudo sa --print-users",
                "List resources used recently per user": "sudo sa --user-summary"
            },
            "Explanation": "Summarizes accounting information. Part of the acct package.\nShows commands called by users, including basic info on CPU time spent processing and I/O rates.",
            "More Information Link": ""
        }
    },
    "sacct": {
        "linux": {
            "Examples": {
                "Display elapsed time, job name, number of requested CPUs, and memory requested of a job": "sacct --jobs {{job_id}} --format={{elapsed}},{{jobname}},{{reqcpus}},{{reqmem}}",
                "Display job id, job name, partition, account, number of allocated cpus, job state, and job exit codes for recent jobs": "sacct",
                "Display job id, job state, job exit code for recent jobs": "sacct --brief",
                "Display the allocations of a job": "sacct --jobs {{job_id}} --allocations"
            },
            "Explanation": "Display accounting data from the Slurm service.",
            "More Information Link": "https://slurm.schedmd.com/sacct.html"
        }
    },
    "sacctmgr": {
        "linux": {
            "Examples": {
                "Add a cluster to the slurm database": "sacctmgr add cluster {{cluster_name}}",
                "Add an account to the slurm database": "sacctmgr add account {{account_name}} cluster={{cluster_of_account}}",
                "Show current configuration": "sacctmgr show configuration",
                "Show details of user/association/cluster/account": "sacctmgr show {{user/association/cluster/account}}"
            },
            "Explanation": "View, setup, and manage Slurm accounts.",
            "More Information Link": "https://slurm.schedmd.com/sacctmgr.html"
        }
    },
    "safe": {
        "common": {
            "Examples": {
                "Add a safe target": "safe target {{vault_addr}} {{target_name}}",
                "Authenticate the CLI client against the Vault server, using an authentication token": "safe auth {{authentication_token}}",
                "Display a tree hierarchy of all reachable keys for a given path": "safe tree {{path}}",
                "Generate a new 2048-bit SSH keypair and store it": "safe ssh {{2048}} {{path/to/secret}}",
                "Move a secret from one path to another": "safe move {{old/path/to/secret}} {{new/path/to/secret}}",
                "Print the environment variables describing the current target": "safe env",
                "Set auto-generated password in a secret": "safe gen {{path/to/secret}} {{key}}",
                "Set non-sensitive keys for a secret": "safe set {{path/to/secret}} {{key}}={{value}}"
            },
            "Explanation": "A CLI to interact with HashiCorp Vault.",
            "More Information Link": "https://github.com/starkandwayne/safe"
        }
    },
    "sails": {
        "common": {
            "Examples": {
                "Create new Sails project": "sails new {{projectName}}",
                "Generate Sails API": "sails generate {{name}}",
                "Generate Sails Controller": "sails generate controller {{name}}",
                "Generate Sails Model": "sails generate model {{name}}",
                "Start Sails": "sails lift"
            },
            "Explanation": "Sails.js is a realtime enterprise level MVC framework built on top of Node.js.",
            "More Information Link": "https://sailsjs.com"
        }
    },
    "salt": {
        "common": {
            "Examples": {
                "Execute a highstate on all connected minions": "salt '*' state.highstate",
                "Execute an arbitrary command on a particular minion": "salt '{{minion_id}}' cmd.run \"ls \"",
                "List connected minions": "salt '*' test.ping",
                "Upgrade packages using the OS package manager (apt, yum, brew) on a subset of minions": "salt '*.example.com' pkg.upgrade"
            },
            "Explanation": "Execute commands and assert state on remote salt minions.",
            "More Information Link": "https://docs.saltstack.com/ref/cli/salt.html"
        }
    },
    "salt-call": {
        "common": {
            "Examples": {
                "List this minion's grains": "salt-call grains.items",
                "Perform a highstate dry-run, compute all changes but don't actually perform them": "salt-call state.highstate test=true",
                "Perform a highstate on this minion": "salt-call state.highstate",
                "Perform a highstate with verbose debugging output": "salt-call -l debug state.highstate"
            },
            "Explanation": "Invoke salt locally on a salt minion.",
            "More Information Link": "https://docs.saltstack.com/ref/cli/salt-call.html"
        }
    },
    "salt-key": {
        "common": {
            "Examples": {
                "Accept a minion key by name": "salt-key -a {{MINION_ID}}",
                "List all accepted, unaccepted and rejected minion keys": "salt-key -L",
                "Print fingerprints of all public keys": "salt-key -F",
                "Reject a minion key by name": "salt-key -r {{MINION_ID}}"
            },
            "Explanation": "Manages salt minion keys on the salt master.\nNeeds to be run on the salt master, likely as root or with sudo.",
            "More Information Link": "https://docs.saltstack.com/ref/cli/salt-key.html"
        }
    },
    "salt-run": {
        "common": {
            "Examples": {
                "Show all minions which are disconnected": "salt-run manage.up",
                "Show status of all minions": "salt-run manage.status"
            },
            "Explanation": "Frontend for executing salt-runners on minions.",
            "More Information Link": "https://docs.saltstack.com/ref/cli/salt-run.html"
        }
    },
    "sam": {
        "linux": {
            "Examples": {
                "Build your Lambda function code": "sam build",
                "Deploy an AWS SAM application": "sam deploy",
                "Initialize a serverless application": "sam init",
                "Initialize a serverless application with a specific runtime": "sam init --runtime {{python3.7}}",
                "Package a SAM application": "sam package",
                "Run your serverless application locally": "sam local start-api"
            },
            "Explanation": "AWS Serverless Application Model (SAM) CLI.",
            "More Information Link": "https://github.com/awslabs/aws-sam-cli"
        }
    },
    "samtools": {
        "common": {
            "Examples": {
                "Convert a SAM input file to BAM stream and save to file": "samtools view -S -b {{input.sam}} > {{output.bam}}",
                "Count alignments to each index (chromosome / contig)": "samtools idxstats {{sorted_indexed_input}}",
                "Index a sorted BAM file (creates {{sorted_input.bam.bai}})": "samtools index {{sorted_input.bam}}",
                "Merge multiple files": "samtools merge {{output}} {{input1 input2 …}}",
                "Print alignment statistics about a file": "samtools flagstat {{sorted_input}}",
                "Sort file and save to BAM (the output format is automatically determined from the output file's extension)": "samtools sort {{input}} -o {{output.bam}}",
                "Split input file according to read groups": "samtools split {{merged_input}}",
                "Take input from stdin (-) and print the SAM header and any reads overlapping a specific region to `stdout`": "{{other_command}} | samtools view -h - chromosome:start-end"
            },
            "Explanation": "Tools for handling high-throughput sequencing (genomics) data.\nUsed for reading/writing/editing/indexing/viewing of data in SAM/BAM/CRAM format.",
            "More Information Link": ""
        }
    },
    "sar": {
        "linux": {
            "Examples": {
                "Report CPU utilization, one per 2 seconds": "sar -u ALL {{2}}",
                "Report I/O and transfer rate issued to physical devices, one per second (press CTRL+C to quit)": "sar -b {{1}}",
                "Report a total of 10 network device statistics, one per 2 seconds": "sar -n DEV {{2}} {{10}}",
                "Report a total of 20 memory utilization statistics, one per second": "sar -r ALL {{1}} {{20}}",
                "Report paging statistics, one per 5 seconds": "sar -B {{5}}",
                "Report the run queue length and load averages, one per second": "sar -q {{1}}"
            },
            "Explanation": "Monitor performance of various Linux subsystems.",
            "More Information Link": ""
        }
    },
    "sass": {
        "common": {
            "Examples": {
                "Convert a SCSS or Sass file to CSS and print out the result": "sass {{inputfile.scss|inputfile.sass}}",
                "Convert a SCSS or Sass file to CSS and save the result to a file": "sass {{inputfile.scss|inputfile.sass}} {{outputfile.css}}",
                "Watch a SCSS or Sass file for changes and output or update the CSS file with same filename": "sass --watch {{inputfile.scss|inputfile.sass}}",
                "Watch a SCSS or Sass file for changes and output or update the CSS file with the given filename": "sass --watch {{inputfile.scss|inputfile.sass}}:{{outputfile.css}}"
            },
            "Explanation": "Converts SCSS or Sass files to CSS.",
            "More Information Link": "https://sass-lang.com/documentation/cli/dart-sass"
        }
    },
    "satis": {
        "common": {
            "Examples": {
                "Add a VCS repository to the Satis configuration": "satis add {{repository_url}}",
                "Build the static output by updating only the specified repository": "satis build --repository-url {{repository_url}} {{satis.json}} {{path/to/output_directory}}",
                "Build the static output from the configuration": "satis build {{satis.json}} {{path/to/output_directory}}",
                "Initialise a Satis configuration": "satis init {{satis.json}}",
                "Remove useless archive files": "satis purge {{satis.json}} {{path/to/output_directory}}"
            },
            "Explanation": "The command-line utility for the Satis static Composer repository.",
            "More Information Link": "https://github.com/composer/satis"
        }
    },
    "say": {
        "osx": {
            "Examples": {
                "Create an audio file of the spoken text": "say -o {{filename.aiff}} \"{{Here's to the Crazy Ones.}}\"",
                "List the available voices": "say -v \"?\"",
                "Read a file aloud": "say -f {{filename.txt}}",
                "Say a phrase aloud": "say \"{{I like to ride my bike.}}\"",
                "Say a phrase with a custom voice and speech rate": "say -v {{voice}} -r {{words_per_minute}} \"{{I'm sorry Dave, I can't let you do that.}}\""
            },
            "Explanation": "Converts text to speech.",
            "More Information Link": ""
        }
    },
    "sbatch": {
        "linux": {
            "Examples": {
                "Submit a batch job": "sbatch {{path/to/job.sh}}",
                "Submit a batch job with a custom name": "sbatch --job-name={{myjob}} {{path/to/job.sh}}",
                "Submit a batch job with a time limit of 30 minutes": "sbatch --time={{00:30:00}} {{path/to/job.sh}}",
                "Submit a job and request multiple nodes": "sbatch --nodes={{3}} {{path/to/job.sh}}"
            },
            "Explanation": "Submit a batch job to the SLURM scheduler.",
            "More Information Link": ""
        }
    },
    "sbt": {
        "common": {
            "Examples": {
                "Create a new Scala project from an existing Giter8 template hosted on GitHub": "sbt new {{scala/hello-world.g8}}",
                "List all sbt options": "sbt -h",
                "Start the SBT interactive shell (REPL)": "sbt",
                "Use a specific jar file as the sbt launcher": "sbt -sbt-jar {{path}}",
                "Use the specified version of sbt": "sbt -sbt-version {{version}}"
            },
            "Explanation": "Build tool for Scala and Java projects.",
            "More Information Link": "https://www.scala-sbt.org/1.0/docs/index.html"
        }
    },
    "scala": {
        "common": {
            "Examples": {
                "Execute a .jar program": "scala {{filename.jar}}",
                "Execute a Scala script": "scala {{script.scala}}",
                "Execute a single Scala command in the command line": "scala -e {{command}}",
                "Start a Scala interactive shell (REPL)": "scala"
            },
            "Explanation": "Scala application launcher and interactive interpreter.",
            "More Information Link": "https://scala-lang.org"
        }
    },
    "scancel": {
        "linux": {
            "Examples": {
                "Cancel a job using its ID": "scancel {{job_id}}",
                "Cancel all jobs from a user": "scancel {{user_name}}"
            },
            "Explanation": "Cancel a Slurm job.",
            "More Information Link": "https://slurm.schedmd.com/scancel.html"
        }
    },
    "scanimage": {
        "linux": {
            "Examples": {
                "List available scanners to ensure the target device is connected and recognized": "scanimage -L",
                "Scan an image and save it to a file": "scanimage --format={{pnm|tiff|png|jpeg}} > {{path/to/new_image}}"
            },
            "Explanation": "Scan images with the Scanner Access Now Easy API.",
            "More Information Link": "http://sane-project.org/man/scanimage.1.html"
        }
    },
    "scc": {
        "common": {
            "Examples": {
                "Display output and sort by column (defaults to by files)": "scc --sort {{files|name|lines|blanks|code|comments|complexity}}",
                "Display output for every file": "scc --by-file",
                "Display output using a specific output format (defaults to `tabular`)": "scc --format {{tabular|wide|json|csv|cloc-yaml|html|html-table}}",
                "Exclude directories from being counted": "scc --exclude-dir {{.git,.hg}}",
                "Only count files with specific file extensions": "scc --include-ext {{go, java, js}}",
                "Print help for scc": "scc -h",
                "Print lines of code in the current directory": "scc",
                "Print lines of code in the target directory": "scc {{path/to/directory}}"
            },
            "Explanation": "Tool written in Go that counts lines of code.",
            "More Information Link": "https://github.com/boyter/scc"
        }
    },
    "scheme": {
        "common": {
            "Examples": {
                "Load a scheme program into the REPL": "scheme --load {{script.scm}}",
                "Load scheme expressions into the REPL": "scheme --eval \"{{(define foo 'x)}}\"",
                "Open an interactive shell (REPL)": "scheme",
                "Open the REPL in quiet mode": "scheme --quiet",
                "Run a scheme program (with no REPL output)": "scheme --quiet < {{script.scm}}"
            },
            "Explanation": "MIT Scheme language interperter and REPL (interactive shell).",
            "More Information Link": "https://www.gnu.org/software/mit-scheme"
        }
    },
    "scontrol": {
        "linux": {
            "Examples": {
                "Hold a comma-separated list of queued jobs (Use `release` command to permit the jobs to be scheduled)": "scontrol hold {{job_id}}",
                "Release a comma-separated list of suspended job": "scontrol release {{job_id}}",
                "Resume a comma-separated list of suspended jobs": "scontrol resume {{job_id}}",
                "Show information for job": "scontrol show job {{job_id}}",
                "Suspend a comma-separated list of running jobs": "scontrol suspend {{job_id}}"
            },
            "Explanation": "View information about and modify jobs.",
            "More Information Link": "https://slurm.schedmd.com/scontrol.html"
        }
    },
    "scoop": {
        "windows": {
            "Examples": {
                "Display information about a package": "scoop info {{package}}",
                "Install a package": "scoop install {{package}}",
                "List installed packages": "scoop list",
                "Remove a package": "scoop uninstall {{package}}",
                "Remove old versions of all packages and clear the download cache": "scoop cleanup -k *",
                "Search for a package": "scoop search {{package}}",
                "Update all installed packages": "scoop update *"
            },
            "Explanation": "A command-line installer for Windows.",
            "More Information Link": "https://scoop.sh"
        }
    },
    "scoop bucket": {
        "windows": {
            "Examples": {
                "Add a known bucket by its name": "scoop bucket add {{name}}",
                "Add an unknown bucket by its name and Git repository URL": "scoop bucket add {{name}} {{https://example.com/repository.git}}",
                "List all buckets currently in use": "scoop bucket list",
                "List all known buckets": "scoop bucket known",
                "Remove a bucket by its name": "scoop bucket rm {{name}}"
            },
            "Explanation": "Manage buckets: Git repositories containing files which describe how scoop installs applications.\nIf Scoop doesn't know where the bucket is located its repository location must be specified.",
            "More Information Link": "https://github.com/lukesampson/scoop/wiki/Buckets"
        }
    },
    "scp": {
        "common": {
            "Examples": {
                "Copy a file between two remote hosts transferring through the local host": "scp -3 {{host1}}:{{path/to/remote_file}} {{host2}}:{{path/to/remote_directory}}",
                "Copy a file from a remote host to a local directory": "scp {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}",
                "Copy a local file to a remote host": "scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}",
                "Recursively copy the contents of a directory from a remote host to a local directory": "scp -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}",
                "Use a specific ssh private key for authentication with the remote host": "scp -i {{~/.ssh/private_key}} {{local_file}} {{remote_host}}:{{/path/remote_file}}",
                "Use a specific username when connecting to the remote host": "scp {{path/to/local_file}} {{remote_username}}@{{remote_host}}:{{path/to/remote_directory}}"
            },
            "Explanation": "Secure copy.\nCopy files between hosts using Secure Copy Protocol over SSH.",
            "More Information Link": ""
        }
    },
    "scrapy": {
        "common": {
            "Examples": {
                "Create a project": "scrapy startproject {{project_name}}",
                "Create a spider (in project directory)": "scrapy genspider {{spider_name}} {{website_domain}}",
                "Edit spider (in project directory)": "scrapy edit {{spider_name}}",
                "Fetch a webpage as scrapy sees it and print source in `stdout`": "scrapy fetch {{url}}",
                "Open a webpage in the default browser as scrapy sees it (disable javascript for extra fidelity)": "scrapy view {{url}}",
                "Open scrapy shell for url, which allows interaction with the page source in python shell (or ipython if available)": "scrapy shell {{url}}",
                "Run spider (in project directory)": "scrapy crawl {{spider_name}}"
            },
            "Explanation": "Web-crawling framework.",
            "More Information Link": "https://scrapy.org"
        }
    },
    "scrcpy": {
        "common": {
            "Examples": {
                "Display a mirror of a connected device": "scrcpy",
                "Record display screen": "scrcpy --record {{path/to/file.mp4}}",
                "Rotate the display screen. Each incremental value adds a 90 degree counterclockwise rotation": "scrcpy --rotation {{0|1|2|3}}",
                "Set target directory for pushing files to device by drag and drop (non-APK)": "scrcpy --push-target {{path/to/directory}}",
                "Show touches on physical device": "scrcpy --show-touches",
                "Start display in fullscreen mode": "scrcpy --fullscreen"
            },
            "Explanation": "Display and control your Android device on a desktop.",
            "More Information Link": "https://github.com/Genymobile/scrcpy"
        }
    },
    "screen": {
        "common": {
            "Examples": {
                "Detach from inside a screen": "Ctrl + A, D",
                "Kill a detached screen": "screen -X -S {{session_name}} quit",
                "Kill the current screen session": "Ctrl + A, K",
                "Reattach to an open screen": "screen -r {{session_name}}",
                "Show open screen sessions": "screen -ls",
                "Start a new daemon and log the output to screenlog.x": "screen -dmLS {{session_name}} {{command}}",
                "Start a new named screen session": "screen -S {{session_name}}",
                "Start a new screen session": "screen"
            },
            "Explanation": "Hold a session open on a remote server. Manage multiple windows with a single SSH connection.",
            "More Information Link": ""
        }
    },
    "screencapture": {
        "osx": {
            "Examples": {
                "Make a screen recording and save it to a file": "screencapture -v {{path/to/file.mp4}}",
                "Take a screenshot after a delay": "screencapture -T {{seconds}} {{path/to/file.png}}",
                "Take a screenshot and open it in Preview, instead of saving": "screencapture -P",
                "Take a screenshot and save it to a file": "screencapture {{path/to/file.png}}",
                "Take a screenshot including the mouse cursor": "screencapture -C {{path/to/file.png}}",
                "Take a screenshot of a selected rectangular area": "screencapture -i {{path/to/file.png}}"
            },
            "Explanation": "Utility to take screenshots and screen recordings.",
            "More Information Link": ""
        }
    },
    "screenfetch": {
        "common": {
            "Examples": {
                "Specify distribution logo": "screenfetch -A '{{distribution_name}}'",
                "Specify distribution logo and text": "screenfetch -D '{{distribution_name}}'",
                "Start screenfetch": "screenfetch",
                "Strip all color": "screenfetch -N",
                "Take a screenshot (requires 'scrot')": "screenfetch -s"
            },
            "Explanation": "Display system information.",
            "More Information Link": "https://github.com/KittyKatt/screenFetch"
        }
    },
    "script": {
        "common": {
            "Examples": {
                "Append to an existing file": "script -a {{logfile.log}}",
                "Execute quietly without start and done messages": "script -q {{logfile.log}}",
                "Start recording in a given file": "script {{logfile.log}}",
                "Start recording in file named \"typescript\"": "script",
                "Stop recording": "exit"
            },
            "Explanation": "Make a typescript file of a terminal session.",
            "More Information Link": ""
        },
        "linux": {
            "Examples": {
                "Record a new session to a custom filepath": "script {{path/to/session.out}}",
                "Record a new session to a file named `typescript` in the current directory": "script",
                "Record a new session, appending to an existing file": "script -a {{path/to/session.out}}",
                "Record timing information (data is outputted to the standard error)": "script -t 2> {{path/to/timingfile}}"
            },
            "Explanation": "Record all terminal output to file.",
            "More Information Link": ""
        }
    },
    "scriptreplay": {
        "linux": {
            "Examples": {
                "Replay a typescript at double the original speed": "scriptreplay {{path/to/timingfile}} {{path/to/typescript}} 2",
                "Replay a typescript at half the original speed": "scriptreplay {{path/to/timingfile}} {{path/to/typescript}} 0.5",
                "Replay a typescript at the speed it was recorded": "scriptreplay {{path/to/timing_file}} {{path/to/typescript}}"
            },
            "Explanation": "Replay a typescript created by the `script` command to the standard output.",
            "More Information Link": ""
        }
    },
    "scrot": {
        "linux": {
            "Examples": {
                "Capture a screenshot and save it as \"capture.png\"": "scrot {{capture.png}}",
                "Capture a screenshot and save it to the current directory with the current date as the filename": "scrot",
                "Capture a screenshot from the currently focused window": "scrot --focused",
                "Capture a screenshot interactively": "scrot --select"
            },
            "Explanation": "Screen capture utility.",
            "More Information Link": ""
        }
    },
    "scutil": {
        "osx": {
            "Examples": {
                "Display DNS Configuration": "scutil --dns",
                "Display proxy configuration": "scutil --proxy",
                "Get computer name": "scutil --get ComputerName",
                "Get hostname": "scutil --get HostName",
                "Set computer name": "sudo scutil --set ComputerName {{computer_name}}",
                "Set hostname": "scutil --set HostName {{hostname}}"
            },
            "Explanation": "Manage system configuration parameters.\nNecessitates to be root when setting configuration.",
            "More Information Link": ""
        }
    },
    "sd": {
        "common": {
            "Examples": {
                "Find and replace across a project changing each file in place": "sd {{'from \"react\"'}} {{'from \"preact\"'}} $(find . -type f)",
                "Find and replace in a file printing the result to stdout": "sd -p {{'window.fetch'}} {{'fetch'}} {{http.js}}",
                "Replace words using capture groups": "{{echo 'cargo +nightly watch'}} | sd '(\\w+)\\s+\\+(\\w+)\\s+(\\w+)' 'cmd: $1, channel: $2, subcmd: $3'",
                "Trim some whitespace using regex": "{{echo 'lorem ipsum 23   '}} | sd '\\s+$' ''"
            },
            "Explanation": "Intuitive find & replace CLI.",
            "More Information Link": ""
        }
    },
    "sdiff": {
        "common": {
            "Examples": {
                "Compare 2 files": "sdiff {{path/to/file1}} {{path/to/file2}}",
                "Compare 2 files in a case-insensitive manner": "sdiff -i {{path/to/file1}} {{path/to/file2}}",
                "Compare 2 files, ignoring all tabs and whitespace": "sdiff -W {{path/to/file1}} {{path/to/file2}}",
                "Compare 2 files, ignoring whitespace at the end of lines": "sdiff -Z {{path/to/file1}} {{path/to/file2}}",
                "Compare and then merge, writing the output to a new file": "sdiff -o {{path/to/merged_file}} {{path/to/file1}} {{path/to/file2}}"
            },
            "Explanation": "Compare the differences between and optionally merge 2 files.",
            "More Information Link": ""
        }
    },
    "sdk": {
        "common": {
            "Examples": {
                "Check current Gradle version": "sdk current {{gradle}}",
                "Install a specific version of Gradle": "sdk install {{gradle}} {{gradle_version}}",
                "List all Software Development Kits available to install": "sdk list",
                "Switch to a specific version of Gradle": "sdk use {{gradle}} {{gradle_version}}",
                "Uninstall a particular version of Gradle": "sdk rm {{gradle}} {{gradle_version}}",
                "Update Gradle to the latest version": "sdk upgrade {{gradle}}"
            },
            "Explanation": "Tool for managing parallel versions of multiple Software Development Kits.\nSupports Java, Groovy, Scala, Kotlin, Gradle, Maven, Vert.x and many others.",
            "More Information Link": "https://sdkman.io/usage"
        }
    },
    "sdkmanager": {
        "common": {
            "Examples": {
                "Install a package": "sdkmanager {{package}}",
                "List available packages": "sdkmanager --list",
                "Uninstall a package": "sdkmanager --uninstall {{package}}",
                "Update every installed package": "sdkmanager --update"
            },
            "Explanation": "Tool to install packages for the Android SDK.",
            "More Information Link": "https://developer.android.com/studio/command-line/sdkmanager"
        }
    },
    "secrethub": {
        "common": {
            "Examples": {
                "Audit a repository or secret": "secrethub audit {{path/to/repo_or_secret}}",
                "Generate a random value and store it as a new or updated secret": "secrethub generate {{path/to/secret}}",
                "Print a secret to stdout": "secrethub read {{path/to/secret}}",
                "Store a value from the clipboard as a new or updated secret": "secrethub write --clip {{path/to/secret}}",
                "Store a value supplied on stdin as a new or updated secret": "echo \"{{secret_value}}\" | secrethub write {{path/to/secret}}"
            },
            "Explanation": "A tool to keep secrets out of config files.",
            "More Information Link": "https://secrethub.io"
        }
    },
    "security-checker": {
        "common": {
            "Examples": {
                "Look for security issues in the project dependencies (based on the composer.lock file in the current folder)": "security-checker security:check",
                "Return results as a JSON object": "security-checker security:check --format=json",
                "Use a specific composer.lock file": "security-checker security:check {{path/to/composer.lock}}"
            },
            "Explanation": "Check if a PHP application uses dependencies with known security vulnerabilities.",
            "More Information Link": "https://github.com/sensiolabs/security-checker"
        }
    },
    "sed": {
        "common": {
            "Examples": {
                "Apply multiple find-replace expressions to a file": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
                "Delete lines matching the line pattern": "sed '/{{line_pattern}}/d' {{filename}}",
                "Print the first 11 lines of a file": "sed 11q {{filename}}",
                "Replace all occurrences of a string in a file, overwriting the file (i.e. in-place)": "sed -i 's/{{find}}/{{replace}}/g' {{filename}}",
                "Replace all occurrences of an extended regular expression in a file, and print the result": "sed -r 's/{{regex}}/{{replace}}/g' {{filename}}",
                "Replace only on lines matching the line pattern": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
                "Replace separator / by any other character not used in the find or replace patterns, e.g., #": "sed 's#{{find}}#{{replace}}#' {{filename}}",
                "Replace the first occurrence of a regular expression in each line of a file, and print the result": "sed 's/{{regex}}/{{replace}}/' {{filename}}"
            },
            "Explanation": "Edit text in a scriptable manner.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Apply multiple find-replace expressions to a file": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
                "Print only text between n-th line till the next empty line": "sed -n '{{line_number}},/^$/p' {{filename}}",
                "Replace all occurrences of a string [i]n a file, overwriting the file (i.e. in-place)": "sed -i '' 's/{{find}}/{{replace}}/g' {{filename}}",
                "Replace all occurrences of an extended regular expression in a file": "sed -E 's/{{regex}}/{{replace}}/g' {{filename}}",
                "Replace only on lines matching the line pattern": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
                "Replace separator / by any other character not used in the find or replace patterns, e.g., #": "sed 's#{{find}}#{{replace}}#' {{filename}}",
                "Replace the first occurrence of a string in a file, and print the result": "sed 's/{{find}}/{{replace}}/' {{filename}}",
                "[d]elete the line at the specific line number [i]n a file, overwriting the file": "sed -i '' '{{line_number}}d' {{filename}}"
            },
            "Explanation": "Edit text in a scriptable manner.",
            "More Information Link": ""
        }
    },
    "see": {
        "linux": {
            "Examples": {
                "See action can be used to view any file (usually image) on default mailcap explorer": "see {{filename}}",
                "Using with `run-mailcap`": "run-mailcap --action=view {{filename}}"
            },
            "Explanation": "Alias to `run-mailcap`'s view.\nAn alias to a `run-mailcap`'s action print.",
            "More Information Link": ""
        }
    },
    "semanage": {
        "linux": {
            "Examples": {
                "Disable/Enable dontaudit rules in policy": "semanage dontaudit -S {{store}} {{on|off}}",
                "Manage booleans. Booleans allow the administrator to modify the confinement of processes based on the current configuration": "semanage boolean -S {{store}} {{--delete|--modify|--list|--noheading|--deleteall}} {{-on|-off}} -F {{boolean|boolean_file}}",
                "Manage policy modules": "semanage module -S {{store}} {{--add|--delete|--list|--modify}} {{--enable|--disable}} {{module_name}}",
                "Output local customizations": "semanage -S {{store}} -o {{path/to/output_file}}",
                "Take a set of commands from a specified file and load them in a single transaction": "semanage -S {{store}} -i {{path/to/input_file}}"
            },
            "Explanation": "SELinux Policy Management tool.",
            "More Information Link": "https://linux.die.net/man/8/semanage"
        }
    },
    "sendmail": {
        "common": {
            "Examples": {
                "Send a message with the content of message.txt to the mail directory of local user `username`": "sendmail {{username}} < {{message.txt}}",
                "Send an email from you@yourdomain.com (assuming the mail server is configured for this) to test@gmail.com containing the file `file.zip`": "sendmail -f {{you@yourdomain.com}} {{test@gmail.com}} < {{file.zip}}",
                "Send an email from you@yourdomain.com (assuming the mail server is configured for this) to test@gmail.com containing the message in `message.txt`": "sendmail -f {{you@yourdomain.com}} {{test@gmail.com}} < {{message.txt}}"
            },
            "Explanation": "Send email from the command line.",
            "More Information Link": ""
        }
    },
    "sensible-browser": {
        "linux": {
            "Examples": {
                "Open a new window of the default browser": "sensible-browser",
                "Open a url in the default browser": "sensible-browser {{url}}"
            },
            "Explanation": "Open the default browser.",
            "More Information Link": ""
        }
    },
    "sensible-editor": {
        "linux": {
            "Examples": {
                "Open 3 files in vertically split editor windows at the same time": "sensible-editor -O3 {{file_1}} {{file_2}} {{file_3}}",
                "Open a file in the default editor": "sensible-editor {{file}}",
                "Open a file in the default editor, with the cursor at the beginning of line 10": "sensible-editor +10 {{file}}",
                "Open a file in the default editor, with the cursor at the end of the file": "sensible-editor + {{file}}"
            },
            "Explanation": "Open the default editor.",
            "More Information Link": ""
        }
    },
    "sensors": {
        "linux": {
            "Examples": {
                "Show temperatures in degrees Fahrenheit": "sensors --fahrenheit",
                "Show the current readings of all sensor chips": "sensors"
            },
            "Explanation": "Report sensors information.",
            "More Information Link": ""
        }
    },
    "seq": {
        "common": {
            "Examples": {
                "Every 3rd number from 5 to 20": "seq 5 3 20",
                "Format output width to a minimum of 4 digits padding with zeros as necessary": "seq -f \"%04g\" 5 3 20",
                "Separate the output with a space instead of a newline": "seq -s \" \" 5 3 20",
                "Sequence from 1 to 10": "seq 10"
            },
            "Explanation": "Output a sequence of numbers to `stdout`.",
            "More Information Link": ""
        }
    },
    "sequelize": {
        "common": {
            "Examples": {
                "Create a model with 3 fields and a migration file": "sequelize model:generate --name {{table_name}} --attributes {{field1:integer,field2:string,field3:boolean}}",
                "Create a seed file with the specified name to populate the database": "sequelize seed:generate --name {{seed_filename}}",
                "Populate database using all seed files": "sequelize db:seed:all",
                "Revert all migrations": "sequelize db:migrate:undo:all",
                "Run the migration file": "sequelize db:migrate"
            },
            "Explanation": "Promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server.",
            "More Information Link": "https://sequelize.org/"
        }
    },
    "serverless": {
        "common": {
            "Examples": {
                "Create a serverless project": "serverless create",
                "Create a serverless project from a template": "serverless create --template {{template_name}}",
                "Deploy to a cloud provider": "serverless deploy",
                "Display information about a serverless project": "serverless info",
                "Follow the logs for a project": "serverless logs -t",
                "Invoke a deployed function": "serverless invoke -f {{function_name}}"
            },
            "Explanation": "Toolkit for deploying and operating serverless architectures on AWS, Google Cloud, Azure and IBM OpenWhisk.\nCommands can be run either using the `serverless` command or it's alias, `sls`.",
            "More Information Link": "https://serverless.com/"
        }
    },
    "service": {
        "linux": {
            "Examples": {
                "Do a full restart (runs script twice with start and stop)": "service {{service_name}} --full-restart",
                "List the name and status of all services": "service --status-all",
                "Show the current status of a service": "service {{service_name}} status",
                "Start/Stop/Restart/Reload service (start/stop should always be available)": "service {{service_name}} {{start|stop|restart|reload}}"
            },
            "Explanation": "Manage services by running init scripts.\nThe full script path should be omitted (/etc/init.d/ is assumed).",
            "More Information Link": ""
        }
    },
    "set": {
        "common": {
            "Examples": {
                "Display the names and values of shell variables": "set",
                "Mark variables that are modified or created for export": "set -a",
                "Notify of job termination immediately": "set -b",
                "Set various options, e.g. enable `vi` style line editing": "set -o {{vi}}"
            },
            "Explanation": "Display, set or unset values of shell attributes and positional parameters.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "List all current environment variables": "set",
                "List environment variables starting with the specified string": "set {{name}}",
                "Prompt the user for a value for the specified variable": "set /p {{name}}={{prompt_string}}",
                "Set an environment variable to a specific value": "set {{name}}={{value}}"
            },
            "Explanation": "Display or set environment variables for the current instance of CMD.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/set"
        }
    },
    "setfacl": {
        "linux": {
            "Examples": {
                "Modify ACL of a file for user with read and write access": "setfacl -m u:{{username}}:rw {{file}}",
                "Modify default ACL of a file for all users": "setfacl -d -m u::rw {{file}}",
                "Remove ACL of a file for an user": "setfacl -x u:{{username}} {{file}}",
                "Remove all ACL entries of a file": "setfacl -b {{file}}"
            },
            "Explanation": "Set file access control lists (ACL).",
            "More Information Link": ""
        }
    },
    "setxkbmap": {
        "linux": {
            "Examples": {
                "Get help": "setxkbmap -help",
                "List all layouts": "localectl list-x11-keymap-layouts",
                "List available switching options": "localectl list-x11-keymap-options | grep grp:",
                "List variants for the layout": "localectl list-x11-keymap-variants {{de}}",
                "Set multiple keyboard layouts, their variants and switching option": "setxkbmap -layout {{us,de}} -variant {{,qwerty}} -option {{'grp:alt_caps_toggle'}}",
                "Set the keyboard in French AZERTY": "setxkbmap {{fr}}"
            },
            "Explanation": "Set the keyboard using the X Keyboard Extension.",
            "More Information Link": ""
        }
    },
    "sfc": {
        "windows": {
            "Examples": {
                "Display information about the usage of the command": "sfc",
                "Scan a specific file and, if possible, repair any problems": "sfc /scanfile={{path/to/file}}",
                "Scan a specific file without attempting to repair it": "sfc /verifyfile={{path/to/file}}",
                "Scan all system files and, if possible, repair any problems": "sfc /scannow",
                "Scan all system files without attempting to repair any": "sfc /verifyonly",
                "When repairing offline, specify the Windows directory": "sfc /offwindir={{path/to/dir}}",
                "When repairing offline, specify the boot directory": "sfc /offbootdir={{path/to/dir}}"
            },
            "Explanation": "Scans the integrity of Windows system files.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/sfc"
        }
    },
    "sftp": {
        "common": {
            "Examples": {
                "Connect to a remote server and enter an interactive command mode": "sftp {{remote_user}}@{{remote_host}}",
                "Connect using an alternate port": "sftp -P {{remote_port}} {{remote_user}}@{{remote_host}}",
                "Get list of files on local machine": "lls",
                "Get list of files on remote machine": "ls",
                "Transfer local file to the remote system": "put {{/path/local_file}}",
                "Transfer remote directory to the local system recursively (works with `put` too)": "get -R {{/path/remote_directory}}",
                "Transfer remote file to the local system": "get {{/path/remote_file}}"
            },
            "Explanation": "Secure File Transfer Program.\nInteractive program to copy files between hosts over SSH.\nFor non-interactive file transfers, see `scp` or `rsync`.",
            "More Information Link": ""
        }
    },
    "sh": {
        "common": {
            "Examples": {
                "Execute a command": "sh -c {{command}}",
                "Run commands from `stdin`": "sh -s",
                "Run commands from a file": "sh {{file.sh}}",
                "Start interactive shell": "sh"
            },
            "Explanation": "Bourne shell.\nThe standard command language interpreter.",
            "More Information Link": ""
        }
    },
    "sha1sum": {
        "common": {
            "Examples": {
                "Calculate SHA1 checksums for multiple files": "sha1sum {{filename1}} {{filename2}}",
                "Calculate the SHA1 checksum for a file": "sha1sum {{filename1}}",
                "Read a file of SHA1 sums and verify all files have matching checksums": "sha1sum -c {{filename.sha1}}"
            },
            "Explanation": "Calculate SHA1 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "sha224sum": {
        "common": {
            "Examples": {
                "Calculate SHA224 checksums for multiple files": "sha224sum {{filename1}} {{filename2}}",
                "Calculate the SHA224 checksum for a file": "sha224sum {{filename1}}",
                "Read a file of SHA224 sums and verify all files have matching checksums": "sha224sum -c {{filename.sha224}}"
            },
            "Explanation": "Calculate SHA224 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "sha256sum": {
        "common": {
            "Examples": {
                "Calculate SHA256 checksums for multiple files": "sha256sum {{filename1}} {{filename2}}",
                "Calculate the SHA256 checksum for a file": "sha256sum {{filename1}}",
                "Read a file of SHA256 sums and verify all files have matching checksums": "sha256sum -c {{filename.sha256}}"
            },
            "Explanation": "Calculate SHA256 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "sha384sum": {
        "common": {
            "Examples": {
                "Calculate SHA384 checksums for multiple files": "sha384sum {{filename1}} {{filename2}}",
                "Calculate the SHA384 checksum for a file": "sha384sum {{filename1}}",
                "Read a file of SHA384 sums and verify all files have matching checksums": "sha384sum -c {{filename.sha384}}"
            },
            "Explanation": "Calculate SHA384 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "sha512sum": {
        "common": {
            "Examples": {
                "Calculate SHA512 checksums for multiple files": "sha512sum {{filename1}} {{filename2}}",
                "Calculate the SHA512 checksum for a file": "sha512sum {{filename1}}",
                "Read a file of SHA512 sums and verify all files have matching checksums": "sha512sum -c {{filename.sha512}}"
            },
            "Explanation": "Calculate SHA512 cryptographic checksums.",
            "More Information Link": ""
        }
    },
    "shards": {
        "common": {
            "Examples": {
                "Create a skeleton shard.yml file": "shards init",
                "Install dependencies from a shard.yml file": "shards install",
                "List all installed dependencies": "shards list",
                "List version of dependency": "shards version {{path/to/dependency_directory}}",
                "Update all dependencies": "shards update"
            },
            "Explanation": "Dependency management tool for the Crystal language.",
            "More Information Link": "https://crystal-lang.org/reference/the_shards_command"
        }
    },
    "shasum": {
        "common": {
            "Examples": {
                "Calculate the SHA1 checksum for a file": "shasum {{filename}}",
                "Calculate the SHA1 checksum from `stdin`": "{{somecommand}} | shasum",
                "Calculate the SHA256 checksum for a file": "shasum --algorithm 256 {{filename}}",
                "Calculate the SHA512 checksum for multiple files": "shasum --algorithm 512 {{filename1}} {{filename2}}",
                "Check a file with a list of sums against the directory's files": "shasum --check {{list_file}}"
            },
            "Explanation": "Calculate or check cryptographic SHA checksums.",
            "More Information Link": ""
        }
    },
    "shc": {
        "common": {
            "Examples": {
                "Compile a shell script": "shc -f {{script}}",
                "Compile a shell script and set a message to display upon expiration": "shc -f {{script}} -e {{dd/mm/yyyy}} -m \"{{Please contact your provider}}\"",
                "Compile a shell script and set an expiration date for the executable": "shc -f {{script}} -e {{dd/mm/yyyy}}",
                "Compile a shell script and specify an output binary file": "shc -f {{script}} -o {{binary}}"
            },
            "Explanation": "Generic shell script compiler.",
            "More Information Link": ""
        }
    },
    "shellcheck": {
        "common": {
            "Examples": {
                "Check a shell script": "shellcheck {{file.sh}}",
                "Ignore certain errors": "shellcheck --exclude {{SC1009}} {{file.sh}}",
                "Ignore multiple errors": "shellcheck --exclude {{SC1009,SC1073}} {{file.sh}}",
                "Override script's shebang": "shellcheck --shell {{sh|bash|ksh}} {{file.sh}}"
            },
            "Explanation": "Shell script static analysis tool.",
            "More Information Link": "https://www.shellcheck.net/"
        }
    },
    "shiori": {
        "common": {
            "Examples": {
                "Import bookmarks from HTML Netscape bookmark format file": "shiori import {{path/to/bookmarks.html}}",
                "List the saved bookmarks": "shiori print",
                "Open the saved bookmark in a browser": "shiori open {{bookmark_id}}",
                "Save the specified URL as bookmark": "shiori add {{url}}",
                "Start the web interface for managing bookmarks at port 8181": "shiori serve --port {{8181}}"
            },
            "Explanation": "Simple bookmark manager built with Go.",
            "More Information Link": "https://github.com/go-shiori/shiori"
        }
    },
    "shopt": {
        "common": {
            "Examples": {
                "List of all settable options and whether they are set": "shopt",
                "Print a list of all options and their status formatted as runnable `shopt` commands": "shopt -p",
                "Set an option": "shopt -s {{option_name}}",
                "Show help for the command": "help shopt",
                "Unset an option": "shopt -u {{option_name}}"
            },
            "Explanation": "Manage Bash shell options: variables (stored in `$BASHOPTS`) that control behavior specific to the Bash shell.\nGeneric POSIX shell variables (stored in `$SHELLOPTS`) are managed with the `set` command instead.",
            "More Information Link": ""
        }
    },
    "showmount": {
        "windows": {
            "Examples": {
                "Display all NFS clients and their mounted directories": "showmount -a",
                "Display all NFS mounted directories": "showmount -d",
                "Display all exported filesystems": "showmount -e",
                "Display all exported filesystems for a remote server": "showmount -e {{server_address}}"
            },
            "Explanation": "Display information about NFS filesystems on Windows Server.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/showmount"
        }
    },
    "shred": {
        "common": {
            "Examples": {
                "Overwrite a file": "shred {{file}}",
                "Overwrite a file 25 times": "shred -n25 {{file}}",
                "Overwrite a file and remove it": "shred --remove {{file}}",
                "Overwrite a file, leaving zeroes instead of random data": "shred --zero {{file}}"
            },
            "Explanation": "Overwrite files to securely delete data.",
            "More Information Link": ""
        }
    },
    "shuf": {
        "common": {
            "Examples": {
                "Generate random numbers in range": "shuf -i {{1-10}}",
                "Only output the first 5 entries of the result": "shuf -n {{5}} {{filename}}",
                "Randomize the order of lines in a file and output the result": "shuf {{filename}}",
                "Write the output to another file": "shuf {{filename}} -o {{output_filename}}"
            },
            "Explanation": "Generate random permutations.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Generate random numbers in range 1-10": "shuf -i {{1-10}}",
                "Only output the first 5 entries of the result": "shuf -n {{5}} {{filename}}",
                "Randomize the order of lines in a file and output the result": "shuf {{filename}}",
                "Write output to another file": "shuf {{filename}} -o {{output_filename}}"
            },
            "Explanation": "Generate random permutations.",
            "More Information Link": ""
        }
    },
    "shutdown": {
        "linux": {
            "Examples": {
                "Cancel a pending shutdown/reboot operation": "shutdown -c",
                "Power off (halt) immediately": "shutdown -h now",
                "Reboot immediately": "shutdown -r now",
                "Reboot in 5 minutes": "shutdown -r +{{5}} &",
                "Shutdown at 1:00 pm (Uses 24h clock)": "shutdown -h 13:00"
            },
            "Explanation": "Shutdown and reboot the system.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Power off (halt) at 1:00 pm (Uses 24h clock)": "shutdown -h {{1300}}",
                "Power off (halt) immediately": "shutdown -h now",
                "Reboot immediately": "shutdown -r now",
                "Reboot in 5 minutes": "shutdown -r +{{5}}",
                "Reboot on May 10th 2042 at 11:30 am (Input format: YYMMDDHHMM)": "shutdown -r {{4205101130}}",
                "Sleep immediately": "shutdown -s now"
            },
            "Explanation": "Shutdown and reboot the system.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Abort a shutdown sequence whose timeout is yet to expire": "shutdown /a",
                "Hibernate the current machine": "shutdown /h",
                "Log off the current machine": "shutdown /l",
                "Restart the current machine": "shutdown /r",
                "Shutdown a remote machine": "shutdown /m {{\\\\hostname}}",
                "Shutdown the current machine": "shutdown /s",
                "Shutdown the current machine force-closing all apps": "shutdown /s /f",
                "Specify a comment for the shutdown reason": "shutdown /s /c \"{{reason}}\"",
                "Specify a timeout in seconds to wait before shutting down": "shutdown /s /t {{seconds}}"
            },
            "Explanation": "A tool for shutting down, restarting or logging off a machine.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/shutdown"
        }
    },
    "sigverif": {
        "windows": {
            "Examples": {
                "Open the File Signature Verification interface": "sigverif"
            },
            "Explanation": "A GUI signature verification tool for checking system files.",
            "More Information Link": ""
        }
    },
    "silentcast": {
        "linux": {
            "Examples": {
                "Launch silentcast": "silentcast",
                "Launch silentcast on a specific display": "silentcast --display={{display}}"
            },
            "Explanation": "Silent screencast creator. Saves in `.mkv` and animated gif formats.",
            "More Information Link": "https://github.com/colinkeenan/silentcast"
        }
    },
    "sinfo": {
        "linux": {
            "Examples": {
                "List dead nodes and the reasons why": "sinfo --list-reasons",
                "Show a quick summary overview of the cluster": "sinfo --summarize",
                "Summarise dead nodes": "sinfo --dead",
                "View information about idle nodes": "sinfo --states {{idle}}",
                "View the detailed status of a specific partition": "sinfo --partition {{partition_name}}",
                "View the detailed status of all partitions across the entire cluster": "sinfo"
            },
            "Explanation": "View information about Slurm nodes and partitions.\nSee also `squeue` and `sbatch`, which are also part of the Slurm workload manager.",
            "More Information Link": "https://slurm.schedmd.com/sinfo.html"
        }
    },
    "singularity": {
        "common": {
            "Examples": {
                "Build a singularity image from a recipe file": "sudo singularity build {{image.sif}} {{recipe}}",
                "Download a remote image from Sylabs Cloud": "singularity pull --name {{image.sif}} {{library://godlovedc/funny/lolcow:latest}}",
                "Rebuild a remote image using latest Singularity image format": "singularity build {{image.sif}} {{docker://godlovedc/lolcow}}",
                "Start a container from an image and execute the internal runscript": "singularity run {{image.sif}}",
                "Start a container from an image and get a shell inside of it": "singularity shell {{image.sif}}",
                "Start a container from an image and run a command": "singularity exec {{image.sif}} {{command}}"
            },
            "Explanation": "Manage Singularity containers and images.",
            "More Information Link": ""
        }
    },
    "sips": {
        "osx": {
            "Examples": {
                "Convert an image from CMYK to RGB": "sips --matchTo '/System/Library/ColorSync/Profiles/Generic RGB Profile.icc' {{path/to/image.ext}} {{path/to/out_dir}}",
                "Remove ColorSync ICC profile from an image": "sips -d profile --deleteColorManagementProperties {{path/to/image.ext}}",
                "Resample all images in a directory to fit a width of 960px (honoring aspect ratio)": "sips --resampleWidth {{960}} {{path/to/images}}",
                "Resample image at specified size, Image aspect ratio may be altered": "sips -z {{1920}} {{300}} {{image.ext}}",
                "Resample image so height and width aren't greater than specified size (notice the capital Z)": "sips -Z {{1920}} {{300}} {{image.ext}}",
                "Specify an output directory so that originals do not get modified": "sips --out {{path/to/out_dir}}"
            },
            "Explanation": "Apple Scriptable Image Processing System.\nRaster/Query images and ColorSync ICC Profiles.",
            "More Information Link": ""
        }
    },
    "skaffold": {
        "common": {
            "Examples": {
                "Build and deploy your app every time your code changes": "skaffold dev -f {{skaffold.yaml}}",
                "Build the artifacts": "skaffold build -f {{skaffold.yaml}}",
                "Deploy the artifacts": "skaffold deploy -f {{skaffold.yaml}}",
                "Run a diagnostic on Skaffold": "skaffold diagnose -f {{skaffold.yaml}}",
                "Run a pipeline file": "skaffold run -f {{skaffold.yaml}}"
            },
            "Explanation": "A tool that facilitates continuous development for Kubernetes applications.",
            "More Information Link": "https://skaffold.dev"
        }
    },
    "skicka": {
        "common": {
            "Examples": {
                "Create a folder": "skicka mkdir {{path/to/folder}}",
                "Delete a file": "skicka rm {{path/to/file}}",
                "Download a file/folder from Google Drive": "skicka download {{path/to/remote}} {{path/to/local}}",
                "List files": "skicka ls {{path/to/folder}}",
                "Show amount of space used by children folders": "skicka du {{path/to/parent/folder}}",
                "Upload a file/folder to Google Drive": "skicka upload {{path/to/local}} {{path/to/remote}}"
            },
            "Explanation": "Manage your Google Drive.",
            "More Information Link": "https://github.com/google/skicka"
        }
    },
    "sl": {
        "common": {
            "Examples": {
                "Let a steam locomotive run through your terminal": "sl",
                "Let the train fly": "sl -F",
                "Let the user exit (CTRL + C)": "sl -e",
                "Make the train little": "sl -l",
                "The train burns, people scream": "sl -a"
            },
            "Explanation": "Steam locomotive running through your terminal.",
            "More Information Link": "https://github.com/mtoyoda/sl"
        }
    },
    "slackcat": {
        "common": {
            "Examples": {
                "Pipe command output to Slack as a text snippet": "{{command}} | slackcat --channel {{channel_name}} --filename={{snippet_name}}",
                "Post a file to Slack": "slackcat --channel {{channel_name}} {{path/to/file}}",
                "Post a file to Slack with a custom filename": "slackcat --channel {{channel_name}} --filename={{filename}} {{path/to/file}}",
                "Stream command output to Slack continuously": "{{command}} | slackcat --channel {{channel_name}} --stream"
            },
            "Explanation": "Utility for passing files and command output to Slack.",
            "More Information Link": "https://github.com/bcicen/slackcat"
        }
    },
    "slapt-get": {
        "linux": {
            "Examples": {
                "Install a package, or update it to the latest available version": "slapt-get --install {{package_name}}",
                "Locate packages of interest by the package name, disk set, or version": "slapt-get --search {{package_name}}",
                "Remove a package": "slapt-get --remove {{package_name}}",
                "Show information about a package": "slapt-get --show {{package_name}}",
                "Update the list of available packages and versions": "slapt-get --update",
                "Upgrade all installed packages to their latest available versions": "slapt-get --upgrade {{package_name}}"
            },
            "Explanation": "An apt like system for Slackware package management.\nPackage sources need to be configured in the slapt-getrc file.",
            "More Information Link": ""
        }
    },
    "sleep": {
        "common": {
            "Examples": {
                "Delay in hours": "sleep {{hours}}h",
                "Delay in minutes": "sleep {{minutes}}m",
                "Delay in seconds": "sleep {{seconds}}"
            },
            "Explanation": "Delay for a specified amount of time.",
            "More Information Link": ""
        }
    },
    "slimrb": {
        "common": {
            "Examples": {
                "Convert a Slim file and output to prettified HTML": "slimrb --pretty {{input.slim}} {{output.html}}",
                "Convert a Slim file to ERB": "slimrb --erb {{input.slim}} {{output.erb}}",
                "Convert a Slim file to HTML": "slimrb {{input.slim}} {{output.html}}"
            },
            "Explanation": "Convert Slim files to HTML.",
            "More Information Link": ""
        }
    },
    "sm": {
        "linux": {
            "Examples": {
                "Display a message in full-screen": "sm \"{{Hello World!}}\"",
                "Display a message rotated 3 times (in steps of 90 degrees, counterclockwise)": "sm -r {{3}} \"{{Hello World!}}\"",
                "Display a message using the output from another command": "{{echo \"Hello World!\"}} | sm -",
                "Display a message with a custom background color": "sm -b {{#008888}} \"{{Hello World!}}\"",
                "Display a message with a custom foreground color": "sm -f {{blue}} \"{{Hello World!}}\"",
                "Display a message with inverted colors": "sm -i \"{{Hello World!}}\""
            },
            "Explanation": "Displays a short message fullscreen.",
            "More Information Link": "https://github.com/nomeata/screen-message"
        }
    },
    "smartctl": {
        "common": {
            "Examples": {
                "Begin a short self-test": "sudo smartctl --test short {{/dev/sda}}",
                "View SMART health summary": "sudo smartctl --health {{/dev/sda}}",
                "View SMART self-test log (if supported)": "sudo smartctl --log selftest {{/dev/sda}}",
                "View current/last self-test status and other SMART capabilities": "sudo smartctl --capabilities {{/dev/sda}}",
                "View device information": "sudo smartctl --info {{/dev/sda}}"
            },
            "Explanation": "View a disk's SMART data and other information.",
            "More Information Link": "https://en.wikipedia.org/wiki/S.M.A.R.T."
        }
    },
    "smbclient": {
        "linux": {
            "Examples": {
                "Connect to a share (user will be prompted for password; `exit` to quit the session)": "smbclient {{//server/share}}",
                "Connect with a different username": "smbclient {{//server/share}} --user {{username}}",
                "Connect with a different workgroup": "smbclient {{//server/share}} --workgroup {{domain}} --user {{username}}",
                "Connect with a username and password": "smbclient {{//server/share}} --user {{username%password}}",
                "Download a file from the server": "smbclient {{//server/share}} --directory {{path/to/directory}} --command \"get {{file.txt}}\"",
                "Upload a file to the server": "smbclient {{//server/share}} --directory {{path/to/directory}} --command \"put {{file.txt}}\""
            },
            "Explanation": "FTP-like client to access SMB/CIFS resources on servers.",
            "More Information Link": ""
        }
    },
    "smbmap": {
        "linux": {
            "Examples": {
                "Display SMB shares and list a single level of directories and files": "smbmap -u {{username}} --prompt -H {{ip}} -r",
                "Display SMB shares and permissions on a host, prompting for user's password or NTLM hash": "smbmap -u {{username}} --prompt -H {{ip}}",
                "Display SMB shares and permissions on a host, specifying the domain and passing the password NTLM hash": "smbmap -u {{username}} --prompt -d {{domain}} -H {{ip}}",
                "Display SMB shares and recursively list a defined number of levels of directories and files": "smbmap -u {{username}} --prompt -H {{ip}} -R --depth {{3}}",
                "Display SMB shares and recursively list directories and files, downloading the files matching a regular expression": "smbmap -u {{username}} --prompt -H {{ip}} -R -A {{pattern}}",
                "Display SMB shares and recursively list directories and files, searching for file content matching a regular expression": "smbmap -u {{username}} --prompt -H {{ip}} -R -F {{pattern}}",
                "Execute a shell command on a remote system": "smbmap -u {{username}} --prompt -H {{ip}} -x {{command}}",
                "Upload a file to a remote system": "smbmap -u {{username}} --prompt -H {{ip}} --upload {{source}} {{destination}}"
            },
            "Explanation": "SMB enumeration tool.",
            "More Information Link": "https://github.com/ShawnDEvans/smbmap"
        }
    },
    "smbpasswd": {
        "linux": {
            "Examples": {
                "Add a specified user to Samba and set password(user should already exist in system)": "smbpasswd -a {{username}}",
                "Change the current user's SMB password": "smbpasswd",
                "Delete a Samba user": "smbpasswd -x {{username}}",
                "Modify an existing Samba user's password": "smbpasswd {{username}}"
            },
            "Explanation": "Change a user's SMB password.\nSamba users must also have a local Unix account.",
            "More Information Link": ""
        }
    },
    "sn": {
        "common": {
            "Examples": {
                "Extract the public key to a file": "sn -e {{path/to/assembly.dll}} {{path/to/output.pub}}",
                "Generate a new StrongNaming key": "sn -k {{path/to/key.snk}}",
                "Re-sign an assembly with the specified private key": "sn -R {{path/to/assembly.dll}} {{path/to/keypair.snk}}",
                "Show the public key of the private key that was used to sign an assembly": "sn -T {{path/to/assembly.exe}}"
            },
            "Explanation": "Mono StrongName utility for signing and verifying IL assemblies.",
            "More Information Link": ""
        }
    },
    "snap": {
        "linux": {
            "Examples": {
                "Check for recent snap changes in the system": "snap changes",
                "Display basic information about installed snap software": "snap list",
                "Install a package": "snap install {{package_name}}",
                "Search for a package": "snap find {{package_name}}",
                "Uninstall a package": "snap remove {{package_name}}",
                "Update a package": "snap refresh {{package_name}}",
                "Update all packages": "snap refresh"
            },
            "Explanation": "Tool for managing the \"snap\" self-contained software packages.\nSimilar to what `apt` is for \".deb\".",
            "More Information Link": ""
        }
    },
    "snapper": {
        "linux": {
            "Examples": {
                "Create a snapshot with a description": "snapper -c {{config}} create -d \"{{snapshot_description}}\"",
                "Create snapper config": "snapper -c {{config}} create-config {{path/to/directory}}",
                "Delete a range of snapshots": "snapper -c {{config}} delete {{snapshot_X}}-{{snapshot_Y}}",
                "Delete a snapshot": "snapper -c {{config}} delete {{snapshot_number}}",
                "List snapshot configs": "snapper list-configs",
                "List snapshots for a config": "snapper -c {{config}} list"
            },
            "Explanation": "Filesystem snapshot management tool.",
            "More Information Link": "http://snapper.io/manpages/snapper.html"
        }
    },
    "snmpwalk": {
        "linux": {
            "Examples": {
                "Query specific system information on a remote host by OID using SNMPv2 on a specified port": "snmpwalk -v2c -c {{community}} {{ip}}:{{port}} {{oid}}",
                "Query specific system information on a remote host by OID using SNMPv3 and authentication without encryption": "snmpwalk -v3 -l {{authNoPriv}} -u {{username}} -a {{MD5|SHA}} -A {{passphrase}} {{ip}} {{oid}}",
                "Query specific system information on a remote host by OID using SNMPv3 without authentication or encryption": "snmpwalk -v3 -l {{noAuthNoPriv}} -u {{username}} {{ip}} {{oid}}",
                "Query specific system information on a remote host by OID using SNMPv3, authentication, and encryption": "snmpwalk -v3 -l {{authPriv}} -u {{username}} -a {{MD5|SHA}} -A {{auth_passphrase}} -x {{DES|AES}} -X {{enc_passphrase}} {{ip}} {{oid}}",
                "Query the system information of a remote host using SNMPv1 and a community string": "snmpwalk -v1 -c {{community}} {{ip}}"
            },
            "Explanation": "SNMP query tool.",
            "More Information Link": "https://linux.die.net/man/1/snmpwalk"
        }
    },
    "snoop": {
        "sunos": {
            "Examples": {
                "Capture and show an hex-dump of network packets exchanged between two IP addresses": "snoop -x0 -p4 {{ip_address_1}} {{ip_address_2}}",
                "Capture network packets that come from a hostname and go to a given port": "snoop to port {{port}} from host {{hostname}}",
                "Capture packets on a specific network interface": "snoop -d {{e1000g0}}",
                "Display verbose protocol layer summary of packets from a file": "snoop -V -i {{filename}}",
                "Save captured packets in a file instead of displaying them": "snoop -o {{filename}}"
            },
            "Explanation": "Network packet sniffer.\nSunOS equivalent of tcpdump.",
            "More Information Link": ""
        }
    },
    "snyk": {
        "common": {
            "Examples": {
                "Auto patch and ignore vulnerabilities": "snyk wizard",
                "Login to your Snyk account": "snyk auth",
                "Record the state of dependencies and any vulnerabilities on snyk.io": "snyk monitor",
                "Test a local Docker image for any known vulnerabilities": "snyk test --docker {{docker_image}}",
                "Test your code for any known vulnerabilities": "snyk test"
            },
            "Explanation": "Find vulnerabilities in your code and remediate risks.",
            "More Information Link": "https://snyk.io"
        }
    },
    "socat": {
        "common": {
            "Examples": {
                "Create a connection to a host and port, transfer data in STDIO to connected host": "socat - TCP4:www.example.com:80",
                "Forward incoming data of a local port to another host and port": "socat TCP-LISTEN:80,fork TCP4:www.example.com:80",
                "Listen to a port, wait for an incoming connection and transfer data to STDIO": "socat - TCP-LISTEN:8080,fork"
            },
            "Explanation": "Multipurpose relay (SOcket CAT).",
            "More Information Link": ""
        }
    },
    "softwareupdate": {
        "osx": {
            "Examples": {
                "Download and install a specific app": "softwareupdate -i {{update_name}}",
                "Download and install all recommended updates": "softwareupdate -ir",
                "Download and install all updates": "softwareupdate -ia",
                "List all available updates": "softwareupdate -l"
            },
            "Explanation": "A tool for updating MacOS App Store apps via the command line.",
            "More Information Link": ""
        }
    },
    "solo": {
        "common": {
            "Examples": {
                "Blink the led of a specific Solo": "solo key wink --serial {{serial_number}}",
                "Generate random bytes using the currently connected Solo's secure random number generator": "solo key rng raw",
                "List connected Solos": "solo ls",
                "Monitor the serial output of a Solo": "solo monitor {{path/to/serial_port}}",
                "Update the currently connected Solo's firmware to the latest version": "solo key update"
            },
            "Explanation": "Interact with Solo hardware security keys.",
            "More Information Link": "https://github.com/solokeys/solo-python"
        }
    },
    "sonar-scanner": {
        "common": {
            "Examples": {
                "Print debudgging information": "sonar-scanner -X",
                "Print help information": "sonar-scanner -h",
                "Scan a project using configuration file other than `sonar-project.properties`": "sonar-scanner -D{{project.settings=myproject.properties}}",
                "Scan a project with configuration file in your project's root directory named `sonar-project.properties`": "sonar-scanner"
            },
            "Explanation": "SonarScanner is a generic scanner for SonarQube for projects do not use any specific build tool like maven, gradle , etc.",
            "More Information Link": "https://docs.sonarqube.org/latest/analysis/scan/sonarscanner/"
        }
    },
    "sops": {
        "common": {
            "Examples": {
                "Change the extension of the file once encrypted": "sops -d --input-type json {{path/to/myfile.enc.json}}",
                "Decrypt a file to the standard output": "sops -d {{path/to/myfile.enc.json}}",
                "Encrypt a file": "sops -e {{path/to/myfile.json}} > {{path/to/myfile.enc.json}}",
                "Extract keys by naming them, and array elements by numbering them": "sops -d --extract '[\"an_array\"][1]' {{path/to/myfile.enc.json}}",
                "Rotate data keys for a sops file": "sops -r {{path/to/myfile.enc.yaml}}",
                "Show the difference between two sops files": "diff <(sops -d {{path/to/secret1.enc.yaml}}) <(sops -d {{path/to/secret2.enc.yaml}})"
            },
            "Explanation": "SOPS: Secrets OPerationS.\nTool for managing secrets.",
            "More Information Link": "https://github.com/mozilla/sops"
        }
    },
    "sort": {
        "common": {
            "Examples": {
                "Sort a file in ascending order": "sort {{path/to/file}}",
                "Sort a file in case-insensitive way": "sort --ignore-case {{path/to/file}}",
                "Sort a file in descending order": "sort -r {{path/to/file}}",
                "Sort a file preserving only unique lines": "sort -u {{path/to/file}}",
                "Sort a file using numeric rather than alphabetic order": "sort -n {{path/to/file}}",
                "Sort human-readable numbers (in this case the 5th field of `ls -lh`)": "ls -lh | sort -h -k 5",
                "Sort numbers with exponents": "sort --general-numeric-sort {{path/to/file}}",
                "Sort the passwd file by the 3rd field, numerically": "sort -t: -k 3n /etc/passwd"
            },
            "Explanation": "Sort lines of text files.",
            "More Information Link": "https://www.gnu.org/software/coreutils/manual/html_node/sort-invocation.html"
        }
    },
    "source": {
        "common": {
            "Examples": {
                "Evaluate contents of a given file": "source {{path/to/file}}"
            },
            "Explanation": "Execute commands from a file in the current shell.",
            "More Information Link": ""
        }
    },
    "sox": {
        "common": {
            "Examples": {
                "Increase the volume of an audio file by 2x": "sox -v 2.0 {{input_audiofile}} {{output_audiofile}}",
                "Merge two audio files into one": "sox -m {{input_audiofile1}} {{input_audiofile2}} {{output_audiofile}}",
                "Normalize an audio file (adjust volume to the maximum peak level, without clipping)": "sox --norm {{input_audiofile}} {{output_audiofile}}",
                "Print statistical data of an audio file": "sox {{input_audiofile}} -n stat",
                "Reverse and save an audio file": "sox {{input_audiofile}} {{output_audiofile}} reverse",
                "Trim an audio file to the specified times": "sox {{input_audiofile}} {{output_audiofile}} trim {{start}} {{end}}"
            },
            "Explanation": "Sound eXchange: play, record and convert audio files.\nAudio formats are identified by the extension.",
            "More Information Link": "http://sox.sourceforge.net"
        }
    },
    "spark": {
        "common": {
            "Examples": {
                "Create a new Spark project": "spark new {{project_name}}",
                "Create a new Spark project with Braintree stubs": "spark new {{project_name}} --braintree",
                "Create a new Spark project with team based billing stubs": "spark new {{project_name}} --team-billing",
                "Display the currently registered API token": "spark token",
                "Register your API token": "spark register {{token}}"
            },
            "Explanation": "The Laravel Spark command line tool.",
            "More Information Link": "https://spark.laravel.com"
        }
    },
    "spatial": {
        "common": {
            "Examples": {
                "Build workers for local deployment on Unity on macOS": "spatial worker build --target=development --target=Osx",
                "Build workers for local deployment on Unreal on Windows": "spatial worker build --target=local --target=Windows",
                "Clean worker directories": "spatial worker clean",
                "Deploy locally": "spatial local launch {{launch_config}} --snapshot={{snapshot_file}}",
                "Launch a cloud deployment": "spatial cloud launch {{assembly_name}} {{launch_config}} {{deployment_name}}",
                "Launch a local worker to connect to your local deployment": "spatial local worker launch {{worker_type}} {{launch_config}}",
                "Run this when you use a project for the first time": "spatial worker build",
                "Upload an assembly to use for cloud deployments": "spatial cloud upload {{assembly_name}}"
            },
            "Explanation": "A set of commands for managing and developing SpatialOS projects.",
            "More Information Link": ""
        }
    },
    "speedometer": {
        "linux": {
            "Examples": {
                "Show graph for a specific interface": "speedometer -r {{eth0}} -t {{eth0}}"
            },
            "Explanation": "Python script that shows a network traffic graph in the terminal.",
            "More Information Link": "http://excess.org/speedometer"
        }
    },
    "speedtest-cli": {
        "common": {
            "Examples": {
                "Display results in CSV format, suppressing the progress information": "speedtest-cli --csv --csv-delimiter {{delimiter_char}}",
                "Display results in JSON format, suppressing the progress information": "speedtest-cli --json",
                "Print a list of all speedtest.net servers, sorted by distance, to file": "speedtest-cli --list > speedtest_servers.txt",
                "Run a speed test": "speedtest-cli",
                "Run a speed test and generate a shareable result picture": "speedtest-cli --share",
                "Run a speed test to the given speedtest.net server id": "speedtest-cli --server {{server_id}}",
                "Run without performing download tests": "speedtest-cli --no-download"
            },
            "Explanation": "Command line interface for testing internet bandwidth using speedtest.net.",
            "More Information Link": "https://github.com/sivel/speedtest-cli"
        }
    },
    "spfquery": {
        "common": {
            "Examples": {
                "Check if an IP address is allowed to send an e-mail from the specified e-mail address": "spfquery -ip {{8.8.8.8}} -sender {{sender@example.com}}",
                "Turn on debugging output": "spfquery -ip {{8.8.8.8}} -sender {{sender@example.com}} --debug"
            },
            "Explanation": "Query Sender Policy Framework records to validate e-mail senders.",
            "More Information Link": "https://www.libspf2.org/"
        }
    },
    "sphinx-build": {
        "common": {
            "Examples": {
                "Build documentation": "sphinx-build -b {{html|epub|text|latex|man|...}} {{path/to/source_dir}} {{path/to/build_dir}}",
                "Build documentations intended for readthedocs.io (requires the sphinx-rtd-theme pip package)": "sphinx-build -b {{html}} {{path/to/docs_dir}} {{path/to/build_dir}}"
            },
            "Explanation": "Sphinx documentation generator.",
            "More Information Link": "http://www.sphinx-doc.org/en/master/man/sphinx-build.html"
        }
    },
    "spike": {
        "common": {
            "Examples": {
                "Compile your project once to the \"public\" directory": "spike compile",
                "Compile your project, watch for changes, and auto-reload the browser": "spike watch",
                "Create a new project using the default template": "spike new {{project_name}}",
                "Remove the output directory": "spike clean"
            },
            "Explanation": "A fully featured static website generator written in JavaScript.",
            "More Information Link": "https://spike.js.org"
        }
    },
    "split": {
        "common": {
            "Examples": {
                "Split a file into 5 files. File is split such that each split has same size (except the last split)": "split -n {{5}} {{filename}}",
                "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)": "split -b {{512}} {{filename}}",
                "Split a file with at most 512 bytes in each split without breaking lines": "split -C {{512}} {{filename}}",
                "Split a file, each split having 10 lines (except the last split)": "split -l {{10}} {{filename}}"
            },
            "Explanation": "Split a file into pieces.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Split a file by a regular expression. The matching line will be the first line of the next output file": "split -p {{cat|^[dh]og}} {{filename}}",
                "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)": "split -b {{512}} {{filename}}",
                "Split a file, each split having 10 lines (except the last split)": "split -l {{10}} {{filename}}"
            },
            "Explanation": "Split a file into pieces.",
            "More Information Link": ""
        }
    },
    "sponge": {
        "common": {
            "Examples": {
                "Append file content to the source file": "cat {{path/to/file}} | sponge -a {{path/to/file}}",
                "Remove all lines starting with # in a file": "grep -v '^{{#}}' {{path/to/file}} | sponge {{path/to/file}}"
            },
            "Explanation": "Soak up the input before writing the output file.",
            "More Information Link": "https://linux.die.net/man/1/sponge"
        }
    },
    "spotify": {
        "osx": {
            "Examples": {
                "Change volume": "spotify vol {{up|down|value}}",
                "Find a playlist by name and play it": "spotify play list {{playlist_name}}",
                "Find a song by name and play it": "spotify play {{song_name}}",
                "Pause (or resume) playback": "spotify pause",
                "Show the playback status and song details": "spotify status",
                "Skip to the next song in a playlist": "spotify next"
            },
            "Explanation": "A command-line interface to Spotify.",
            "More Information Link": "https://github.com/hnarayanan/shpotify"
        }
    },
    "sqlite3": {
        "common": {
            "Examples": {
                "Execute an SQL statement against a database and then exit": "sqlite3 {{path/to/database.sqlite3}} '{{SELECT * FROM some_table;}}'",
                "Open an interactive shell against an existing database": "sqlite3 {{path/to/database.sqlite3}}",
                "Start an interactive shell with a new database": "sqlite3"
            },
            "Explanation": "The command-line interface to SQLite 3, which is a self-contained file-based embedded SQL engine.",
            "More Information Link": "https://sqlite.org"
        }
    },
    "sqlmap": {
        "common": {
            "Examples": {
                "Change the parameter delimiter (& is the default)": "python sqlmap.py -u \"{{http://www.target.com/vuln.php}}\" --data=\"{{query=foobar;id=1}}\" --param-del=\"{{;}}\"",
                "Provide user credentials for HTTP protocol authentication": "python sqlmap.py -u \"{{http://www.target.com/vuln.php}}\" --auth-type {{Basic}} --auth-cred \"{{testuser:testpass}}\"",
                "Run sqlmap against a single target URL": "python sqlmap.py -u \"{{http://www.target.com/vuln.php?id=1}}\"",
                "Select a random `User-Agent` from `./txt/user-agents.txt` and use it": "python sqlmap.py -u \"{{http://www.target.com/vuln.php}}\" --random-agent",
                "Send data in a POST request (`--data` implies POST request)": "python sqlmap.py -u \"{{http://www.target.com/vuln.php}}\" --data=\"{{id=1}}\""
            },
            "Explanation": "Detect and exploit SQL injection flaws.",
            "More Information Link": "https://sqlmap.org"
        }
    },
    "sqsc": {
        "common": {
            "Examples": {
                "Copy all messages from one queue to another": "sqsc cp {{source_queue}} {{destination_queue}}",
                "Describe a queue": "sqsc describe {{queue_name}}",
                "List all messages in a queue": "sqsc ls {{queue_name}}",
                "List all queues": "sqsc lq {{queue_prefix}}",
                "Move all messages from one queue to another": "sqsc mv {{source_queue}} {{destination_queue}}",
                "Pull all messages from a queue into a local sqlite database in your present working directory": "sqsc pull {{queue_name}}",
                "Query a queue with SQL syntax": "sqsc query \"SELECT body FROM {{queue_name}} WHERE body LIKE '%user%'\""
            },
            "Explanation": "A command line AWS Simple Queue Service client.",
            "More Information Link": "https://github.com/yongfei25/sqsc"
        }
    },
    "squeue": {
        "linux": {
            "Examples": {
                "View jobs queued by a specific user": "squeue -u {{username}}",
                "View the queue": "squeue",
                "View the queue and refresh every 5 seconds": "squeue -i {{5}}",
                "View the queue with expected start times": "squeue --start"
            },
            "Explanation": "View the jobs queued in the SLURM scheduler.",
            "More Information Link": ""
        }
    },
    "sreport": {
        "linux": {
            "Examples": {
                "Show number of jobs run": "sreport job sizes printjobcount",
                "Show pipe delimited cluster utilization data": "sreport --parsable cluster utilization",
                "Show users with highest cpu time use": "sreport user topuser"
            },
            "Explanation": "Generate reports on jobs, users, and clusters from accounting data.",
            "More Information Link": "https://slurm.schedmd.com/sreport.html"
        }
    },
    "srm": {
        "common": {
            "Examples": {
                "Prompt before every removal": "srm -i {{\\*}}",
                "Recursively remove a directory and its contents overwriting each file with a single-pass of random data": "srm -r -s {{/path/to/directory}}",
                "Remove a file after a single-pass overwriting with random data": "srm -s {{/path/to/file}}",
                "Remove a file after seven passes of overwriting with random data": "srm -m {{/path/to/file}}"
            },
            "Explanation": "Securely remove files or directories.\nOverwrites the existing data one or multiple times. Drop in replacement for rm.",
            "More Information Link": ""
        }
    },
    "srun": {
        "linux": {
            "Examples": {
                "Connect to a worker node with a job running": "srun --jobid={{job_id}} --pty /bin/bash",
                "Submit a basic interactive job": "srun --pty /bin/bash",
                "Submit an interactive job with different attributes": "srun --ntasks-per-node={{num_cores}} --mem-per-cpu={{memory_MB}} --pty /bin/bash"
            },
            "Explanation": "Create an interactive slurm job or connect to an existing job.",
            "More Information Link": "https://slurm.schedmd.com/srun.html"
        }
    },
    "ss": {
        "linux": {
            "Examples": {
                "Filter TCP sockets by states, only/exclude": "ss {{state/exclude}} {{bucket/big/connected/synchronized/...}}",
                "Show all TCP IPv4 sockets locally connected on the subnet 192.168.0.0/16": "ss -4t src {{192.168/16}}",
                "Show all TCP sockets along with processes connected to a remote ssh port": "ss -pt dst :{{ssh}}",
                "Show all TCP sockets connected to the local HTTPS port (443)": "ss -t src :{{443}}",
                "Show all TCP sockets listening on the local 8080 port": "ss -lt src :{{8080}}",
                "Show all TCP/UDP/RAW/UNIX sockets": "ss -a {{-t|-u|-w|-x}}",
                "Show all UDP sockets connected on specific source and destination ports": "ss -u 'sport == :{{source_port}} and dport == :{{destination_port}}'"
            },
            "Explanation": "Utility to investigate sockets.",
            "More Information Link": ""
        }
    },
    "ss-local": {
        "common": {
            "Examples": {
                "Enable TCP fast open": "ss-local --fast-open",
                "Run a Shadowsocks proxy by specifying the config file": "ss-local -c {{path/to/config/file.json}}",
                "Run a Shadowsocks proxy by specifying the host, server port, local port, password, and encryption method": "ss-local -s {{host}} -p {{server_port}} -l {{local port}} -k {{password}} -m {{encrypt_method}}",
                "Use a plugin to run the proxy client": "ss-local --plugin {{plugin_name}} --plugin-opts {{plugin_options}}"
            },
            "Explanation": "Run a Shadowsocks client as a SOCKS5 proxy.",
            "More Information Link": "https://github.com/shadowsocks/shadowsocks-libev/blob/master/doc/ss-local.asciidoc"
        }
    },
    "ssh": {
        "common": {
            "Examples": {
                "Agent forwarding: Forward the authentication information to the remote machine (see `man ssh_config` for available options)": "ssh -A {{username}}@{{remote_host}}",
                "Connect to a remote server": "ssh {{username}}@{{remote_host}}",
                "Connect to a remote server using a specific port": "ssh {{username}}@{{remote_host}} -p {{2222}}",
                "Connect to a remote server with a specific identity (private key)": "ssh -i {{path/to/key_file}} {{username}}@{{remote_host}}",
                "Run a command on a remote server": "ssh {{remote_host}} {{command -with -flags}}",
                "SSH jumping: Connect through a jumphost to a remote server (Multiple jump hops may be specified separated by comma characters)": "ssh -J {{username}}@{{jump_host}} {{username}}@{{remote_host}}",
                "SSH tunneling: Dynamic port forwarding (SOCKS proxy on localhost:9999)": "ssh -D {{9999}} -C {{username}}@{{remote_host}}",
                "SSH tunneling: Forward a specific port (localhost:9999 to example.org:80) along with disabling pseudo-[t]ty allocation and executio[n] of remote commands": "ssh -L {{9999}}:{{example.org}}:{{80}} -N -T {{username}}@{{remote_host}}"
            },
            "Explanation": "Secure Shell is a protocol used to securely log onto remote systems.\nIt can be used for logging or executing commands on a remote server.",
            "More Information Link": ""
        }
    },
    "ssh-add": {
        "linux": {
            "Examples": {
                "Add a specific key to the ssh-agent": "ssh-add {{path/to/private_key}}",
                "Add the default ssh keys in \"~/.ssh\" to the ssh-agent": "ssh-add",
                "Delete a key from the ssh-agent": "ssh-add -d {{path/to/private_key}}",
                "Delete all currently loaded keys from the ssh-agent": "ssh-add -D",
                "List fingerprints of currently loaded keys": "ssh-add -l"
            },
            "Explanation": "Manage loaded ssh keys in the ssh-agent.\nEnsure that ssh-agent is up and running for the keys to be loaded in it.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Add a key to the ssh-agent and the keychain": "ssh-add -K {{path/to/private_key}}",
                "Add a specific key to the ssh-agent": "ssh-add {{path/to/private_key}}",
                "Add the default ssh keys in \"~/.ssh\" to the ssh-agent": "ssh-add",
                "Delete a key from the ssh-agent": "ssh-add -d {{path/to/private_key}}",
                "Delete all currently loaded keys from the ssh-agent": "ssh-add -D",
                "List fingerprints of currently loaded keys": "ssh-add -l"
            },
            "Explanation": "Manage loaded ssh keys in the ssh-agent.\nEnsure that ssh-agent is up and running for the keys to be loaded in it.",
            "More Information Link": ""
        }
    },
    "ssh-agent": {
        "common": {
            "Examples": {
                "Kill the currently running agent": "ssh-agent -k",
                "Start an SSH Agent for the current shell": "eval $(ssh-agent)"
            },
            "Explanation": "Spawn an SSH Agent process.\nAn SSH Agent holds SSH keys decrypted in memory until removed or the process is killed.\nSee also `ssh-add`, which can add and manage keys held by an SSH Agent.",
            "More Information Link": ""
        }
    },
    "ssh-copy-id": {
        "common": {
            "Examples": {
                "Copy the given public key to the remote": "ssh-copy-id -i {{path/to/certificate}} {{username}}@{{remote_host}}",
                "Copy the given public key to the remote with specific port": "ssh-copy-id -i {{path/to/certificate}} -p {{port}} {{username}}@{{remote_host}}",
                "Copy your keys to the remote machine": "ssh-copy-id {{username@remote_host}}"
            },
            "Explanation": "Install your public key in a remote machine's authorized_keys.",
            "More Information Link": ""
        }
    },
    "ssh-keygen": {
        "common": {
            "Examples": {
                "Change the password of a key": "ssh-keygen -p -f ~/.ssh/{{filename}}",
                "Generate a key interactively": "ssh-keygen",
                "Generate an RSA 4096 bit key with email as a comment": "ssh-keygen -t rsa -b 4096 -C \"{{email}}\"",
                "Generate an ed25519 key with 100 key derivation function rounds": "ssh-keygen -t ed25519 -a 100",
                "Remove the keys of a host from the known_hosts file (useful when a known host has a new key)": "ssh-keygen -R {{remote_host}}",
                "Retrieve the fingerprint of a key in MD5 Hex": "ssh-keygen -l -E md5 -f ~/.ssh/{{filename}}",
                "Retrieve the key fingerprint from a host (useful for confirming the authenticity of the host when first connecting to it via SSH)": "ssh-keygen -l -F {{remote_host}}",
                "Specify file in which to save the key": "ssh-keygen -f ~/.ssh/{{filename}}"
            },
            "Explanation": "Generate ssh keys used for authentication, password-less logins, and other things.",
            "More Information Link": ""
        }
    },
    "ssh-keyscan": {
        "common": {
            "Examples": {
                "Manually update the ssh known_hosts file with the fingerprint of a given host": "ssh-keyscan -H {{host}} >> ~/.ssh/known_hosts",
                "Retrieve all public ssh keys of a remote host": "ssh-keyscan {{host}}",
                "Retrieve all public ssh keys of a remote host listening on a specific port": "ssh-keyscan -p {{port}} {{host}}",
                "Retrieve certain types of public ssh keys of a remote host": "ssh-keyscan -t {{rsa,dsa,ecdsa,ed25519}} {{host}}"
            },
            "Explanation": "Get the public ssh keys of remote hosts.",
            "More Information Link": ""
        }
    },
    "sshfs": {
        "common": {
            "Examples": {
                "Follow symbolic links": "sshfs -o follow_symlinks {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}",
                "Mount remote directory": "sshfs {{username}}@{{remote_host}}:{{remote_directory}} {{mountpoint}}",
                "Mount remote directory from server with specific port": "sshfs {{username}}@{{remote_host}}:{{remote_directory}} -p {{2222}}",
                "Unmount remote directory": "umount {{mountpoint}}",
                "Use compression": "sshfs {{username}}@{{remote_host}}:{{remote_directory}} -C"
            },
            "Explanation": "Filesystem client based on ssh.",
            "More Information Link": "https://github.com/libfuse/sshfs"
        }
    },
    "sshpass": {
        "common": {
            "Examples": {
                "Connect to a remote server using a password supplied on a file descriptor (in this case, `stdin`)": "sshpass -d {{0}} ssh {{user}}@{{hostname}}",
                "Connect to a remote server using the first line of a file as the password, automatically accept unknown ssh keys, and launch a command": "sshpass -f {{file}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}} \"{{command}}\"",
                "Connect to a remote server with the password supplied as an option, and automatically accept unknown ssh keys": "sshpass -p {{password}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}}"
            },
            "Explanation": "An ssh password provider.\nIt works by creating a TTY, feeding the password into it, and then redirecting `stdin` to the ssh session.",
            "More Information Link": ""
        }
    },
    "sshuttle": {
        "linux": {
            "Examples": {
                "Also forward all DNS traffic to the server's default DNS resolver": "sshuttle --dns --remote={{username}}@{{sshserver}} {{0.0.0.0/0}}",
                "Forward all IPv4 TCP traffic via a remote SSH server": "sshuttle --remote={{username}}@{{sshserver}} {{0.0.0.0/0}}",
                "Forward all traffic except that which is bound for a specific subnet": "sshuttle --remote={{username}}@{{sshserver}} {{0.0.0.0/0}} --exclude {{192.168.0.1/24}}",
                "Use the tproxy method to forward all IPv4 and IPv6 traffic": "sshuttle --method=tproxy --remote={{username}}@{{sshserver}} {{0.0.0.0/0}} {{::/0}} --exclude={{your_local_ip_address}} --exclude={{ssh_server_ip_address}}"
            },
            "Explanation": "Transparent proxy server that tunnels traffic over an SSH connection.\nDoesn't require root or any special setup on the remote SSH server, though root access on the local machine is prompted for.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Forward all IPv4 TCP and DNS traffic": "sshuttle --dns --remote={{username}}@{{sshserver}} {{0.0.0.0/0}}",
                "Forward all IPv4 TCP traffic via a remote SSH server": "sshuttle --remote={{username}}@{{sshserver}} {{0.0.0.0/0}}",
                "Use the tproxy method to forward all IPv4 and IPv6 traffic": "sudo sshuttle --method=tproxy --remote={{username}}@{{sshserver}} {{0.0.0.0/0}} {{::/0}} --exclude={{your_local_ip_address}} --exclude={{ssh_server_ip_address}}"
            },
            "Explanation": "Transparent proxy server that tunnels traffic over an SSH connection.\nDoesn't require admin, or any special setup on the remote SSH server.",
            "More Information Link": "https://github.com/sshuttle/sshuttle"
        }
    },
    "sstat": {
        "linux": {
            "Examples": {
                "Display job ID, average CPU and average virtual memory size of a comma-separated list of jobs, with pipes as column delimiters": "sstat --parsable --jobs={{job_id}} --format={{JobID}},{{AveCPU}},{{AveVMSize}}",
                "Display list of fields available": "sstat --helpformat",
                "Display status information of a comma-separated list of jobs": "sstat --jobs={{job_id}}"
            },
            "Explanation": "View information about running jobs.",
            "More Information Link": "https://slurm.schedmd.com/sstat.html"
        }
    },
    "st-flash": {
        "common": {
            "Examples": {
                "Erase firmware from device": "st-flash erase",
                "Read 4096 bytes from the device starting from 0x8000000": "st-flash read {{firmware}}.bin {{0x8000000}} {{4096}}",
                "Write firmware to device starting from 0x8000000": "st-flash write {{firmware}}.bin {{0x8000000}}"
            },
            "Explanation": "Flash binary files to STM32 ARM Cortex microcontrollers.",
            "More Information Link": "https://github.com/texane/stlink"
        }
    },
    "st-info": {
        "common": {
            "Examples": {
                "Display amount of program memory available": "st-info --flash",
                "Display amount of sram memory available": "st-info --sram",
                "Display summarized information of the device": "st-info --probe"
            },
            "Explanation": "Provides information about connected STLink and STM32 devices.",
            "More Information Link": "https://github.com/texane/stlink"
        }
    },
    "st-util": {
        "common": {
            "Examples": {
                "Connect to GDB server": "(gdb) target extended-remote {{localhost}}:{{4500}}",
                "Run GDB server on port 4500": "st-util -p {{4500}}",
                "Write firmware to device": "(gdb) load {{firmware.elf}}"
            },
            "Explanation": "Run GDB (GNU Debugger) server to interact with STM32 ARM Cortex microcontoller.",
            "More Information Link": "https://github.com/texane/stlink"
        }
    },
    "stack": {
        "common": {
            "Examples": {
                "Compile a package": "stack build",
                "Compile a project and execute a command after compilation": "stack build --exec \"{{command}}\"",
                "Compile a project and re-compile every time a file changes": "stack build --file-watch",
                "Create a new package": "stack new {{package_name}} {{template_name}}",
                "Run a program and pass an argument to it": "stack exec {{program_name}} -- {{argument}}",
                "Run tests inside a package": "stack test"
            },
            "Explanation": "Tool for managing Haskell projects.",
            "More Information Link": "https://github.com/commercialhaskell/stack"
        }
    },
    "standard": {
        "common": {
            "Examples": {
                "Apply automatic fixes during linting": "standard --fix",
                "Declare any available global variables": "standard --global {{variable}}",
                "Lint all JavaScript source files in the current directory": "standard",
                "Lint specific JavaScript file(s)": "standard {{path/to/file(s)}}",
                "Use a custom ESLint environment when linting": "standard --env {{environment}}",
                "Use a custom ESLint plugin when linting": "standard --plugin {{plugin}}",
                "Use a custom JS parser when linting": "standard --parser {{parser}}"
            },
            "Explanation": "The JavaScript Standard Style tool for linting and fixing JavaScript code.",
            "More Information Link": "https://standardjs.com"
        }
    },
    "stat": {
        "common": {
            "Examples": {
                "Same as above but in a more concise way": "stat -t {{file}}",
                "Show file properties such as size, permissions, creation and access dates among others": "stat {{file}}",
                "Show filesystem information": "stat -f {{file}}",
                "Show only octal file permissions": "stat -c \"%a %n\" {{file}}",
                "Show owner and group of the file": "stat -c \"%U %G\" {{file}}",
                "Show the size of the file in bytes": "stat -c \"%s %n\" {{file}}"
            },
            "Explanation": "Display file and filesystem information.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Same as above but verbose (more similar to linux's `stat`)": "stat -x {{file}}",
                "Show file properties such as size, permissions, creation and access dates among others": "stat {{file}}",
                "Show only octal file permissions": "stat -f %Mp%Lp {{file}}",
                "Show owner and group of the file": "stat -f \"%Su %Sg\" {{file}}",
                "Show the size of the file in bytes": "stat -f \"%z %N\" {{file}}"
            },
            "Explanation": "Display file status.",
            "More Information Link": ""
        }
    },
    "stdbuf": {
        "common": {
            "Examples": {
                "Change the standard error buffer to unbuffered": "stdbuf --error={{0}} {{command}}",
                "Change the standard input buffer size to 512 KiB": "stdbuf --input={{512K}} {{command}}",
                "Change the standard output buffer to line-buffered": "stdbuf --output={{L}} {{command}}"
            },
            "Explanation": "Run a command with modified buffering operations for its standard streams.",
            "More Information Link": ""
        }
    },
    "steghide": {
        "linux": {
            "Examples": {
                "Display file information, trying to detect an embedded file": "steghide info {{path/to/file.jpg}}",
                "Embed data in a JPEG image, using maximum compression": "steghide embed --coverfile {{path/to/image.jpg}} --embedfile {{path/to/data.txt}} --compress {{9}}",
                "Embed data in a PNG image, prompting for a passphrase": "steghide embed --coverfile {{path/to/image.png}} --embedfile {{path/to/data.txt}}",
                "Embed encrypted data in a JPEG image, e.g. with Blowfish in CBC mode": "steghide embed --coverfile {{path/to/image.jpg}} --embedfile {{path/to/data.txt}} --encryption {{blowfish|...}} {{cbc|...}}",
                "Extract data from a WAV audio file": "steghide extract --stegofile {{path/to/sound.wav}}",
                "Get the list of supported encryption algorithms and modes": "steghide encinfo"
            },
            "Explanation": "Steganography tool for JPEG, BMP, WAV and AU file formats.",
            "More Information Link": "https://github.com/StefanoDeVuono/steghide"
        }
    },
    "stern": {
        "common": {
            "Examples": {
                "Tail all pods that matches a given regular expression": "stern {{pod_query}}",
                "Tail all pods with a specific status": "stern . --container-state {{running|waiting|terminated}}",
                "Tail all pods within a current namespace": "stern .",
                "Tail matched pods from 15 minutes ago": "stern {{pod_query}} --since {{15m}}",
                "Tail matched pods from all namespaces": "stern {{pod_query}} --all-namespaces",
                "Tail matched pods with a specific label": "stern {{pod_query}} --selector {{release=canary}}"
            },
            "Explanation": "Tail multiple pods and containers from Kubernetes.",
            "More Information Link": "https://github.com/wercker/stern/"
        }
    },
    "stow": {
        "common": {
            "Examples": {
                "Delete and resymlink": "stow --restow --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}",
                "Delete symlinks recursively from a given directory": "stow --delete --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}",
                "Exclude files matching a regular expression": "stow --ignore={{regex}} --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}",
                "Simulate to see what the result would be like": "stow --simulate --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}",
                "Symlink all files recursively to a given directory": "stow --target={{path/to/target_directory}} {{file1 directory1 file2 directory2}}"
            },
            "Explanation": "Symlink manager.\nOften used to manage dotfiles.",
            "More Information Link": "https://www.gnu.org/software/stow"
        }
    },
    "strace": {
        "linux": {
            "Examples": {
                "Count time, calls, and errors for each system call and report a summary on program exit": "strace -p {{pid}} -c",
                "Show the time spent in every system call": "strace -p {{pid}} -T",
                "Start tracing a program by executing it": "strace {{program}}",
                "Start tracing a specific process by its PID": "strace -p {{pid}}",
                "Start tracing file operations of a program": "strace -e trace=file {{program}}",
                "Trace a process and filter output by system call": "strace -p {{pid}} -e {{system_call_name}}"
            },
            "Explanation": "Troubleshooting tool for tracing system calls.",
            "More Information Link": ""
        }
    },
    "streamlink": {
        "common": {
            "Examples": {
                "Attempt to extract streams from the URL specified, and if it's successful, print out a list of available streams to choose from": "streamlink {{example.com/stream}}",
                "Open a stream with the specified quality": "streamlink {{example.com/stream}} {{720p60}}",
                "Open the stream in the player, while at the same time writing it to a file": "streamlink --record {{path/to/file.ts}} {{example.com/stream}} {{best}}",
                "Select the highest or lowest available quality": "streamlink {{example.com/stream}} {{best|worst}}",
                "Skip to the beginning of a live stream, or as far back as possible": "streamlink --hls-live-restart {{example.com/stream}} {{best}}",
                "Specify the amount of time to skip from the beginning of the stream. For live streams, this is a negative offset from the end of the stream (rewind)": "streamlink --hls-start-offset {{[HH:]MM:SS}} {{example.com/stream}} {{best}}",
                "Specify which player to use to feed stream data to (VLC is used by default if found)": "streamlink --player={{mpv}} {{example.com/stream}} {{best}}",
                "Write stream data to a file instead of playing it": "streamlink --output {{path/to/file.ts}} {{example.com/stream}} {{best}}"
            },
            "Explanation": "Extracts streams from various services and pipes them into a video player of choice.",
            "More Information Link": "https://streamlink.github.io"
        }
    },
    "stress": {
        "linux": {
            "Examples": {
                "Spawn 2 workers spinning on write()/unlink() (each worker writes 1G bytes)": "stress -d {{2}} --hdd-bytes {{1GB}}",
                "Spawn 2 workers to stress test IO and timeout after 5 seconds": "stress -i {{2}} -t {{5}}",
                "Spawn 2 workers to stress test memory (each worker allocates 256M bytes)": "stress -m {{2}} --vm-bytes {{256M}}",
                "Spawn 4 workers to stress test CPU": "stress -c {{4}}"
            },
            "Explanation": "A tool to stress test CPU, memory, and IO on a Linux system.",
            "More Information Link": ""
        }
    },
    "strings": {
        "common": {
            "Examples": {
                "Limit results to strings at least *length* characters long": "strings -n {{length}} {{file}}",
                "Prefix each result with its offset within the file": "strings -t d {{file}}",
                "Prefix each result with its offset within the file in hexadecimal": "strings -t x {{file}}",
                "Print all strings in a binary": "strings {{file}}"
            },
            "Explanation": "Find printable strings in an object file or binary.",
            "More Information Link": ""
        }
    },
    "strip-nondeterminism": {
        "common": {
            "Examples": {
                "Strip nondeterministic information from a file": "strip-nondeterminism {{path/to/file}}",
                "Strip nondeterministic information from a file manually specifying the filetype": "strip-nondeterminism --type {{filetype}} {{path/to/file}}",
                "Strip nondeterministic information from a file; instead of removing timestamps set them to the specified UNIX timestamp": "strip-nondeterminism --timestamp {{unix_timestamp}} {{path/to/file}}"
            },
            "Explanation": "A tool to remove non-deterministic information (e.g. timestamps) from files.",
            "More Information Link": "https://salsa.debian.org/reproducible-builds/strip-nondeterminism"
        }
    },
    "stripe": {
        "common": {
            "Examples": {
                "Create a customer": "stripe customers create --email=\"{{test@example.com}}\" --name=\"{{Jenny Rosen}}\"",
                "Follow the logs of activity on the account": "stripe logs tail",
                "Listen for events, filtering on events with the name `charge.succeeded` and forwarding them to localhost:3000/events": "stripe listen --events=\"{{charge.succeeded}}\" --forward-to=\"{{localhost:3000/events}}\"",
                "Print to JSON": "stripe listen --print-json",
                "Send a test webhook event": "stripe trigger {{charge.succeeded}}"
            },
            "Explanation": "Interact with a Stripe account.",
            "More Information Link": "https://github.com/stripe/stripe-cli"
        }
    },
    "stty": {
        "common": {
            "Examples": {
                "Display all settings for the current terminal": "stty -a",
                "Get the actual transfer speed of a device": "stty -f {{path/to/device_file}} speed",
                "Reset all modes to reasonable values for the current terminal": "stty sane",
                "Set the number of columns": "stty cols {{cols}}",
                "Set the number of rows": "stty rows {{rows}}"
            },
            "Explanation": "Set options for a terminal device interface.",
            "More Information Link": ""
        }
    },
    "su": {
        "common": {
            "Examples": {
                "Execute a command as another user": "su - {{username}} -c \"{{command}}\"",
                "Switch to a given user (requires the user's password)": "su {{username}}",
                "Switch to a given user and simulate a full login shell": "su - {{username}}",
                "Switch to superuser (requires the root password)": "su"
            },
            "Explanation": "Switch shell to another user.",
            "More Information Link": ""
        }
    },
    "subfinder": {
        "common": {
            "Examples": {
                "Find subdomains for a specific domain": "subfinder -d {{example.com}}",
                "Remove wildcard subdomains": "subfinder -nW -d {{example.com}}",
                "Show only the subdomains found": "subfinder --silent -d {{example.com}}",
                "Use a given comma-separated list of resolvers": "subfinder -r {{8.8.8.8}},{{1.1.1.1}} -d {{example.com}}",
                "Use bruteforcing to find subdomains": "subfinder -d {{example.com}} -b"
            },
            "Explanation": "A subdomain discovery tool that discovers valid subdomains for websites.\nDesigned as a passive framework to be useful for bug bounties and safe for penetration testing.",
            "More Information Link": "https://github.com/subfinder/subfinder"
        }
    },
    "subl": {
        "common": {
            "Examples": {
                "Open a file and jump to a specific line number": "subl {{path/to/file}}:{{line_number}}",
                "Open a file or directory in Sublime Text": "subl {{path/to/file_or_directory}}",
                "Open a file or directory in a new window": "subl -n {{path/to/file}}",
                "Open a file or directory in the currently open window": "subl -a {{path/to/file}}",
                "Open the current directory in Sublime Text": "subl {{.}}"
            },
            "Explanation": "Sublime Text editor.",
            "More Information Link": "https://www.sublimetext.com"
        }
    },
    "subliminal": {
        "common": {
            "Examples": {
                "Download English subtitles for a video": "subliminal download -l {{en}} {{video.ext}}"
            },
            "Explanation": "Python-based subtitle downloader.",
            "More Information Link": "https://github.com/Diaoul/subliminal"
        }
    },
    "subst": {
        "windows": {
            "Examples": {
                "Add an association": "subst {{Z:}} {{C:\\Python2.7}}",
                "List active associations": "subst",
                "Remove an association": "subst {{Z:}} /d"
            },
            "Explanation": "Associates a path with a virtual drive letter.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/subst"
        }
    },
    "sudo": {
        "common": {
            "Examples": {
                "Edit a file as the superuser with your default editor": "sudo -e {{/etc/fstab}}",
                "Launch the default shell with superuser privileges": "sudo -i",
                "Repeat the last command prefixed with \"sudo\" (only in bash, zsh, etc.)": "sudo !!",
                "Run a command as another user and/or group": "sudo -u {{user}} -g {{group}} {{id -a}}",
                "Run a command as the superuser": "sudo {{less /var/log/syslog}}"
            },
            "Explanation": "Executes a single command as the superuser or another user.",
            "More Information Link": ""
        }
    },
    "sum": {
        "common": {
            "Examples": {
                "Compute a checksum with BSD-compatible algorithm and 1024-byte blocks": "sum {{file}}",
                "Compute a checksum with System V-compatible algorithm and 512-byte blocks": "sum --sysv {{file}}"
            },
            "Explanation": "Compute checksums and the number of blocks for a file.\nA predecessor to the more modern `cksum`.",
            "More Information Link": ""
        }
    },
    "supervisorctl": {
        "common": {
            "Examples": {
                "Keep displaying `stdout` of a process": "supervisorctl tail -f {{process_name}} stdout",
                "Reload process config file to add/remove processes as necessary": "supervisorctl update",
                "Show last 100 **bytes** of process `stderr`": "supervisorctl tail -100 {{process_name}} stderr",
                "Start/stop/restart a process": "supervisorctl {{start|stop|restart}} {{process_name}}",
                "Start/stop/restart all processes in a group": "supervisorctl {{start|stop|restart}} {{group_name}}:*"
            },
            "Explanation": "Supervisor is a client/server system that allows its users to control a number of processes on UNIX-like operating systems.\nSupervisorctl is the command-line client piece of the supervisor which provides a shell-like interface.",
            "More Information Link": "http://supervisord.org"
        }
    },
    "supervisord": {
        "common": {
            "Examples": {
                "Run supervisord in the foreground": "supervisord -n",
                "Start supervisord with specified configuration file": "supervisord -c {{path/to/file}}"
            },
            "Explanation": "Supervisor is a client/server system for controlling some processes on UNIX-like operating systems.\nSupervisord is the server part of supervisor; it is primarily managed via a configuration file.",
            "More Information Link": "http://supervisord.org"
        }
    },
    "surge": {
        "common": {
            "Examples": {
                "Deploy site to custom domain (note that the DNS records must point to the surge.sh subdomain)": "surge {{path/to/my_project}} {{my_custom_domain.com}}",
                "List your surge projects": "surge list",
                "Remove a project": "surge teardown {{my_custom_domain.com}}",
                "Upload a new site to surge.sh": "surge {{path/to/my_project}}"
            },
            "Explanation": "Simple command line web publishing.",
            "More Information Link": "https://surge.sh"
        }
    },
    "sv": {
        "linux": {
            "Examples": {
                "Get service status": "sudo sv status {{path/to/service}}",
                "Start a service": "sudo sv up {{path/to/service}}",
                "Stop a service": "sudo sv down {{path/to/service}}"
            },
            "Explanation": "Control a running runsv service.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Get service status": "sudo sv status {{path/to/service}}",
                "Start a service": "sudo sv up {{path/to/service}}",
                "Stop a service": "sudo sv down {{path/to/service}}"
            },
            "Explanation": "Control a running runsv service.",
            "More Information Link": ""
        },
        "sunos": {
            "Examples": {
                "Get service status": "sudo sv status {{path/to/service}}",
                "Start a service": "sudo sv up {{path/to/service}}",
                "Stop a service": "sudo sv down {{path/to/service}}"
            },
            "Explanation": "Control a running runsv service.",
            "More Information Link": ""
        }
    },
    "svcadm": {
        "sunos": {
            "Examples": {
                "Clear a service from maintenance state and command it to start": "svcadm clear {{service_name}}",
                "Command service to re-read configuration files": "svcadm refresh {{service_name}}",
                "Disable service": "svcadm disable {{service_name}}",
                "Enable a service in the service database": "svcadm enable {{service_name}}",
                "Restart a running service": "svcadm restart {{service_name}}"
            },
            "Explanation": "Manipulate service instances.",
            "More Information Link": ""
        }
    },
    "svccfg": {
        "sunos": {
            "Examples": {
                "Export service configurations to file": "svccfg export {{servicename}} > {{smf.xml}}",
                "Import/update service configurations from file": "svccfg import {{smf.xml}}",
                "Validate configuration file": "svccfg validate {{smf.xml}}"
            },
            "Explanation": "Import, export, and modify service configurations.",
            "More Information Link": ""
        }
    },
    "svcs": {
        "sunos": {
            "Examples": {
                "Display end of a service log file": "tail $(svcs -L apache)",
                "List all running services": "svcs",
                "List information about a service": "svcs apache",
                "List services that are not running": "svcs -vx",
                "Show location of service log file": "svcs -L apache"
            },
            "Explanation": "List information about running services.",
            "More Information Link": ""
        }
    },
    "svgcleaner": {
        "common": {
            "Examples": {
                "Optimize an SVG image": "svgcleaner {{input.svg}} {{output.svg}}",
                "Optimize an SVG image multiple times": "svgcleaner --multipass {{input.svg}} {{output.svg}}"
            },
            "Explanation": "SVG image optimizing utility.",
            "More Information Link": "https://github.com/RazrFalcon/svgcleaner"
        }
    },
    "svgo": {
        "common": {
            "Examples": {
                "Optimize SVG content passed from another command, and save the result to a file": "{{cat test.svg}} | svgo -i - -o {{test.min.svg}}",
                "Optimize a file and print out the result": "svgo {{test.svg}} -o -",
                "Optimize a file and save the result to another file": "svgo {{test.svg}} -o {{test.min.svg}}",
                "Optimize a file making sure a given plugin is enabled": "svgo --enable={{plugin_name}}",
                "Optimize a file using the default plugins (overwrites the original file)": "svgo {{test.svg}}",
                "Optimize all SVG files within a directory (overwrites the original files)": "svgo -f {{path/to/directory/with/svg/files}}",
                "Optimize all SVG files within a directory and save the resulting files to another directory": "svgo -f {{path/to/input/directory}} -o {{path/to/output/directory}}",
                "Show available plugins": "svgo --show-plugins"
            },
            "Explanation": "SVG Optimizer: a Node.js-based tool for optimizing Scalable Vector Graphics files.\nIt applies a series of transformation rules (plugins), which can be toggled individually.",
            "More Information Link": "https://github.com/svg/svgo"
        }
    },
    "svn": {
        "common": {
            "Examples": {
                "Bring changes from the repository into the working copy": "svn up",
                "Check out a working copy from a repository": "svn co {{url/to/repository}}",
                "Display changes from the last 10 revisions, showing modified files for each revision": "svn log -vl {{10}}",
                "Put files and directories under version control, scheduling them for addition to repository. They will be added in next commit": "svn add {{PATH}}",
                "Send changes from your working copy to the repository": "svn ci -m {{commit log message}} [{{PATH}}]",
                "Show detailed help": "svn help"
            },
            "Explanation": "Subversion command line client tool.",
            "More Information Link": "https://subversion.apache.org"
        }
    },
    "sw_vers": {
        "osx": {
            "Examples": {
                "Print all available information (OS name, version number, and build)": "sw_vers",
                "Print only the build identifier": "sw_vers -buildVersion",
                "Print only the version number of the operating system": "sw_vers -productVersion"
            },
            "Explanation": "Print macOS operating system version information.",
            "More Information Link": ""
        }
    },
    "swagger-codegen": {
        "common": {
            "Examples": {
                "Display help options for the generate command": "swagger-codegen help {{generate}}",
                "Generate documentation and code from an OpenAPI/swagger file": "swagger-codegen generate -i {{swagger_file}} -l {{language}}",
                "Generate java code using the library retrofit2 and the option useRxJava2": "swagger-codegen generate -i {{http://petstore.swagger.io/v2/swagger.json}} -l {{java}} --library {{retrofit2}} -D{{useRxJava2}}={{true}}",
                "List available languages": "swagger-codegen langs"
            },
            "Explanation": "Generate code and documentation for your REST api from a OpenAPI/swagger definition.",
            "More Information Link": "https://github.com/swagger-api/swagger-codegen"
        }
    },
    "swapoff": {
        "linux": {
            "Examples": {
                "Disable a given swap file": "swapoff {{path/to/file}}",
                "Disable a given swap partition": "swapoff {{/dev/sdb7}}",
                "Disable all swap areas": "swapoff -a",
                "Disable swap by label of a device or file": "swapoff -L {{swap1}}"
            },
            "Explanation": "Disables device or file for swapping.",
            "More Information Link": ""
        }
    },
    "swapon": {
        "linux": {
            "Examples": {
                "Enable a given swap file": "swapon {{path/to/file}}",
                "Enable a given swap partition": "swapon {{/dev/sdb7}}",
                "Enable all swap areas": "swapon -a",
                "Enable swap by label of a device or file": "swapon -L {{swap1}}",
                "Get swap information": "swapon -s"
            },
            "Explanation": "Enables device or file for swapping.",
            "More Information Link": ""
        }
    },
    "swift": {
        "common": {
            "Examples": {
                "Compile project for release": "swift build -c release",
                "Execute a program": "swift {{file.swift}}",
                "Generate an Xcode project file": "swift package generate-xcodeproj",
                "Invoke the interactive interpreter (REPL)": "swift",
                "Start a new project with the package manager": "swift package init",
                "Update dependencies": "swift package update"
            },
            "Explanation": "Create, run and build Swift projects.",
            "More Information Link": "https://swift.org"
        }
    },
    "swig": {
        "common": {
            "Examples": {
                "Generate a binding between C and Java": "swig -java {{path/to/swig_file.i}}",
                "Generate a binding between C and Ruby and prefix the Ruby module with {{foo::bar::}}": "swig -ruby -prefix \"{{foo::bar::}}\" {{path/to/swig_file.i}}",
                "Generate a binding between C++ and Go": "swig -go -cgo -intgosize 64 -c++ {{path/to/swig_file.i}}",
                "Generate a binding between C++ and Python": "swig -c++ -python -o {{path/to/output_wrapper.cpp}} {{path/to/swig_file.i}}"
            },
            "Explanation": "Generate bindings between C / C++ code and various high level languages such as Javascript, Python, C#, and more.\nIt uses special .i or .swg files to generate the bindings (C/C++ with SWIG directives, then outputs a C/C++ file that contains all of the wrapper code needed to build an extension module.",
            "More Information Link": ""
        }
    },
    "swupd": {
        "linux": {
            "Examples": {
                "Correct broken or missing files": "sudo swupd verify",
                "Install a new bundle": "sudo swupd bundle-add {{bundle}}",
                "List installed bundles": "swupd bundle-list",
                "Locate the bundle where a wanted package exists": "swupd search -b {{package}}",
                "Remove a bundle": "sudo swupd bundle-remove {{bundle}}",
                "Show current version, and check whether a newer one exists": "swupd check-update",
                "Update to latest version": "sudo swupd update"
            },
            "Explanation": "Package management utility for Clear Linux.",
            "More Information Link": "https://docs.01.org/clearlinux/latest/guides/clear/swupd.html"
        }
    },
    "sxiv": {
        "linux": {
            "Examples": {
                "Open a newline-separated list of images, reading filenames from standard input": "echo {{path/to/file}} | sxiv -i",
                "Open a space-separated list of images as a slideshow": "sxiv -S {{seconds}} {{path/to/file}}",
                "Open a space-separated list of images in thumbnail mode": "sxiv -t {{path/to/file}}",
                "Open an image": "sxiv {{path/to/file}}",
                "Open an image in fullscreen mode": "sxiv -f {{path/to/file}}"
            },
            "Explanation": "Simple X Image Viewer.",
            "More Information Link": "https://github.com/muennich/sxiv"
        }
    },
    "symfony": {
        "common": {
            "Examples": {
                "Check for security issues in the project's dependencies": "symfony security:check",
                "Create a new Symfony project": "symfony new {{name}}",
                "Run a local web server": "symfony serve",
                "Stop the local web server": "symfony server:stop"
            },
            "Explanation": "The console component for the Symfony framework.",
            "More Information Link": "https://symfony.com"
        }
    },
    "sync": {
        "common": {
            "Examples": {
                "Flush all pending write operations on a single file to disk": "sync {{path/to/file}}",
                "Flush all pending write operations on all disks": "sync"
            },
            "Explanation": "Flushes all pending write operations to the appropriate disks.",
            "More Information Link": ""
        }
    },
    "syncthing": {
        "common": {
            "Examples": {
                "Change the address upon which the web interface listens": "syncthing -gui-address={{ip_address:port|path/to/socket.sock}}",
                "Change the home directory": "syncthing -home={{path/to/directory}}",
                "Disable the syncthing monitor process": "syncthing -no-restart",
                "Force a full index exchange": "syncthing -reset-deltas",
                "Print the device ID": "syncthing -device-id",
                "Show filepaths to the files used by syncthing": "syncthing -paths",
                "Start syncthing": "syncthing",
                "Start syncthing without opening a web browser": "syncthing -no-browser"
            },
            "Explanation": "Continuous bidirectional decentralised folder synchronisation tool.",
            "More Information Link": "https://docs.syncthing.net/"
        }
    },
    "sysctl": {
        "linux": {
            "Examples": {
                "Apply changes from /etc/sysctl.conf": "sysctl -p",
                "Get currently open file handlers": "sysctl fs.file-nr",
                "Get limit for simultaneous open files": "sysctl fs.file-max",
                "Set a changeable kernel state variable": "sysctl -w {{section.tunable}}={{value}}",
                "Show all available variables and their values": "sysctl -a"
            },
            "Explanation": "List and change kernel runtime variables.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Set a changeable kernel state variable": "sysctl -w {{section.tunable}}={{value}}",
                "Show Apple model identifier": "sysctl -n hw.model",
                "Show CPU model": "sysctl -n machdep.cpu.brand_string",
                "Show all available variables and their values": "sysctl -a",
                "Show available CPU features (MMX, SSE, SSE2, SSE3, AES, etc)": "sysctl -n machdep.cpu.features"
            },
            "Explanation": "Access kernel state information.",
            "More Information Link": ""
        }
    },
    "system_profiler": {
        "osx": {
            "Examples": {
                "Display a full system profiler report which can be opened by System Profiler.app": "system_profiler -xml > MyReport.spx",
                "Display a hardware overview (Model, CPU, Memory, Serial, etc)": "system_profiler SPHardwareDataType",
                "Print the system serial number": "system_profiler SPHardwareDataType|grep \"Serial Number (system)\" |awk '{print $4}'"
            },
            "Explanation": "Report system hardware and software configuration.",
            "More Information Link": ""
        }
    },
    "systemctl": {
        "linux": {
            "Examples": {
                "Check if a unit is active": "systemctl is-active {{unit}}",
                "Check if a unit is enabled": "systemctl is-enabled {{unit}}",
                "Enable/Disable a unit to be started on bootup": "systemctl enable/disable {{unit}}",
                "List failed units": "systemctl --failed",
                "Mask/Unmask a unit, prevent it to be started on bootup": "systemctl mask/unmask {{unit}}",
                "Reload systemd, scanning for new or changed units": "systemctl daemon-reload",
                "Show the status of a unit": "systemctl status {{unit}}",
                "Start/Stop/Restart/Reload a service": "systemctl start/stop/restart/reload {{unit}}"
            },
            "Explanation": "Control the systemd system and service manager.",
            "More Information Link": "https://www.freedesktop.org/software/systemd/man/systemctl.html"
        }
    },
    "systemd-analyze": {
        "linux": {
            "Examples": {
                "List time of each unit to start up": "systemd-analyze blame",
                "Print a tree of the time critical chain of units": "systemd-analyze critical-chain"
            },
            "Explanation": "Show timing details about the boot process of units (services, mount points, devices, sockets).",
            "More Information Link": ""
        }
    },
    "systeminfo": {
        "windows": {
            "Examples": {
                "Display detailed usage information": "systeminfo /?",
                "Display system configuration for a remote machine": "systeminfo /s {{remote_name}} /u {{username}} /p {{password}}",
                "Display system configuration for the local machine": "systeminfo",
                "Display system configuration in a specified output format": "systeminfo /fo {{table|list|csv}}"
            },
            "Explanation": "Display operating system configuration for a local or remote machine.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/systeminfo"
        }
    },
    "systemsetup": {
        "osx": {
            "Examples": {
                "Enable remote login (SSH)": "systemsetup -setremotelogin on",
                "List valid startup disks": "systemsetup -liststartupdisks",
                "Make the machine never sleep and automatically restart on power failure or kernel panic": "systemsetup -setsleep off -setrestartpowerfailure on -setrestartfreeze on",
                "Specify TimeZone, NTP Server and enable network time": "systemsetup -settimezone {{US/Pacific}} -setnetworktimeserver {{us.pool.ntp.org}} -setusingnetworktime on",
                "Specify a new startup disk": "systemsetup -setstartupdisk {{path}}"
            },
            "Explanation": "Configure System Preferences machine settings.",
            "More Information Link": ""
        }
    },
    "tabula": {
        "common": {
            "Examples": {
                "Extract all tables from a PDF to a CSV file": "tabula -o {{file.csv}} {{file.pdf}}",
                "Extract all tables from a PDF to a JSON file": "tabula --format JSON -o {{file.json}} {{file.pdf}}",
                "Extract all tables from a PDF, using blank space to determine cell boundaries": "tabula --no-spreadsheet {{file.pdf}}",
                "Extract all tables from a PDF, using ruling lines to determine cell boundaries": "tabula --spreadsheet {{file.pdf}}",
                "Extract tables from page 1 of a PDF, guessing which portion of the page to examine": "tabula --guess --pages {{1}} {{file.pdf}}",
                "Extract tables from pages 1, 2, 3, and 6 of a PDF": "tabula --pages {{1-3,6}} {{file.pdf}}"
            },
            "Explanation": "Extract tables from PDF files.",
            "More Information Link": "https://tabula.technology"
        }
    },
    "tac": {
        "common": {
            "Examples": {
                "Concatenate several files reversed into the target file": "tac {{file1}} {{file2}} > {{target_file}}",
                "Print the contents of *file1* reversed to the standard output": "tac {{file1}}",
                "Print the contents of the standard input reversed to the standard output": "{{command}} | tac"
            },
            "Explanation": "Print and concatenate files in reverse (last line first).",
            "More Information Link": ""
        }
    },
    "tail": {
        "common": {
            "Examples": {
                "Keep reading file until `Ctrl + C`": "tail -f {{file}}",
                "Keep reading file until `Ctrl + C`, even if the file is rotated": "tail -F {{file}}",
                "Show all file since line 'num'": "tail -n +{{num}} {{file}}",
                "Show last 'num' bytes in file": "tail -c {{num}} {{file}}",
                "Show last 'num' lines in 'file' and refresh every 'n' seconds": "tail -n {{num}} -s {{n}} -f {{file}}",
                "Show last 'num' lines in file": "tail -n {{num}} {{file}}"
            },
            "Explanation": "Display the last part of a file.",
            "More Information Link": ""
        }
    },
    "takeown": {
        "windows": {
            "Examples": {
                "Change ownership to the Administrator group instead of the current user": "takeown /a /f {{path/to/file}}",
                "Take ownership of the specified directory": "takeown /d {{path/to/directory}}",
                "Take ownership of the specified directory and all subdirectories": "takeown /r /d {{path/to/directory}}",
                "Take ownership of the specified file": "takeown /f {{path/to/file}}"
            },
            "Explanation": "Take ownership of a file or directory.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/takeown"
        }
    },
    "tar": {
        "common": {
            "Examples": {
                "Create a compressed archive, using archive suffix to determine the compression program": "tar caf {{target.tar.xz}} {{file1}} {{file2}} {{file3}}",
                "Create a gzipped archive": "tar czf {{target.tar.gz}} {{file1}} {{file2}} {{file3}}",
                "Create a gzipped archive from a directory using relative paths": "tar czf {{target.tar.gz}} -C {{path/to/directory}} .",
                "Create an archive from files": "tar cf {{target.tar}} {{file1}} {{file2}} {{file3}}",
                "Extract a (compressed) archive into the current directory": "tar xf {{source.tar[.gz|.bz2|.xz]}}",
                "Extract a (compressed) archive into the target directory": "tar xf {{source.tar[.gz|.bz2|.xz]}} -C {{directory}}",
                "Extract a specific file without preserving the folder structure": "tar xf {{source.tar}} {{source.tar/path/to/extract}} --strip-components={{depth_to_strip}}",
                "Extract files matching a pattern": "tar xf {{source.tar}} --wildcards \"{{*.html}}\"",
                "List the contents of a tar file": "tar tvf {{source.tar}}"
            },
            "Explanation": "Archiving utility.\nOften combined with a compression method, such as gzip or bzip.",
            "More Information Link": "https://www.gnu.org/software/tar"
        }
    },
    "task": {
        "common": {
            "Examples": {
                "Add new task": "task add {{thing_to_do}}",
                "Delete task": "task {{task_id}} delete",
                "List tasks": "task list",
                "Mark task as completed": "task {{task_id}} done",
                "Modify task": "task {{task_id}} modify {{new_thing_to_do}}"
            },
            "Explanation": "TODO list manager.",
            "More Information Link": ""
        }
    },
    "taskkill": {
        "windows": {
            "Examples": {
                "Display information about the usage of the command": "taskkill /?",
                "Forcefully terminate a specified process": "taskkill /pid {{process_id}} /f",
                "Terminate a process and its child processes": "taskkill /im {{process_name}} /t",
                "Terminate a process by its id": "taskkill /pid {{process_id}}",
                "Terminate a process by its name": "taskkill /im {{process_name}}",
                "Terminate a process on a remote machine": "taskkill /pid {{process_id}} /s {{remote_name}}"
            },
            "Explanation": "Terminate a process by its process id or name.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/taskkill"
        }
    },
    "tasklist": {
        "windows": {
            "Examples": {
                "Display currently running processes": "tasklist",
                "Display processes running on a remote machine": "tasklist /s {{remote_name}} /u {{username}} /p {{password}}",
                "Display running processes in a specified output format": "tasklist /fo {{table|list|csv}}",
                "Display running processes using the specified `.exe` or `.dll` file name": "tasklist /m {{module_pattern}}",
                "Display services using each process": "tasklist /svc"
            },
            "Explanation": "Display a list of currently running processes on a local or remote machine.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/tasklist"
        }
    },
    "taskset": {
        "linux": {
            "Examples": {
                "Get a running process' CPU affinity by PID": "taskset --pid --cpu-list {{pid}}",
                "Set a running process' CPU affinity by PID": "taskset --pid --cpu-list {{cpu_id}} {{pid}}",
                "Start a new process with affinity for CPUs 1 through 4": "taskset --cpu-list {{cpu_id_1}},{{cpu_id_4}}",
                "Start a new process with affinity for a single CPU": "taskset --cpu-list {{cpu_id}} {{command}}",
                "Start a new process with affinity for multiple non-sequential CPUs": "taskset --cpu-list {{cpu_id_1}} {{cpu_id_2}} {{cpu_id_3}}"
            },
            "Explanation": "Get or set a process' CPU affinity or start a new process with a defined CPU affinity.",
            "More Information Link": ""
        }
    },
    "tb": {
        "common": {
            "Examples": {
                "Add a new note to a board": "tb --note {{note description}} @{{board_name}}",
                "Add a new task to a board": "tb --task {{task description}} @{{board_name}}",
                "Archive all checked items": "tb --clear",
                "Check/uncheck item": "tb --check {{item_id}}",
                "Edit item's priority": "tb --priority @{{item_id}} {{priority}}",
                "Move item to a board": "tb --move @{{item_id}} {{board_name}}"
            },
            "Explanation": "CLI for managing tasks and notes across multiple boards.",
            "More Information Link": "https://github.com/klaussinani/taskbook"
        }
    },
    "tcpdump": {
        "common": {
            "Examples": {
                "Capture all TCP traffic showing contents (ASCII) in console": "tcpdump -A tcp",
                "Capture all traffic except traffic over port 22 and save to a dump file": "tcpdump -w {{dumpfile.pcap}} port not {{22}}",
                "Capture the traffic from a specific interface, source, destination and destination port": "tcpdump -i {{eth0}} src {{192.168.1.1}} and dst {{192.168.1.2}} and dst port {{80}}",
                "Capture the traffic from or to a host": "tcpdump host {{www.example.com}}",
                "Capture the traffic of a network": "tcpdump net {{192.168.1.0/24}}",
                "Capture the traffic of a specific interface": "tcpdump -i {{eth0}}",
                "List available network interfaces": "tcpdump -D",
                "Read from a given dump file": "tcpdump -r {{dumpfile.pcap}}"
            },
            "Explanation": "Dump traffic on a network.",
            "More Information Link": "https://www.tcpdump.org"
        }
    },
    "tcpflow": {
        "linux": {
            "Examples": {
                "Show all data on the given interface and port": "tcpflow -c -i {{eth0}} port {{80}}"
            },
            "Explanation": "Capture TCP traffic for debugging and analysis.",
            "More Information Link": ""
        }
    },
    "tcpkill": {
        "linux": {
            "Examples": {
                "Kill in-progress connections at a specified interface, host and port": "tcpkill -i {{eth1}} host {{192.95.4.27}} and port {{2266}}"
            },
            "Explanation": "Kills specified in-progress TCP connections.",
            "More Information Link": ""
        }
    },
    "tcptraceroute": {
        "linux": {
            "Examples": {
                "Set the first and maximum TTL": "tcptraceroute {{host}} -f {{first_ttl} -m {{max_ttl}}",
                "Specify the destination port and packet length in bytes": "tcptraceroute {{host}} {{destination_port}} {{packet_length}}",
                "Specify the interface": "tcptraceroute {{host}} -i {{interface}}",
                "Specify the local source port and source address": "tcptraceroute {{host}} -p {{source_port}} -s {{source_address}}",
                "Specify the wait time and number of queries per hop": "tcptraceroute {{host}} -w {{wait_time}} -q {{number_of_queries}}",
                "Trace the route to a host": "tcptraceroute {{host}}"
            },
            "Explanation": "A traceroute implementation using TCP packets.",
            "More Information Link": "https://github.com/mct/tcptraceroute"
        }
    },
    "tea": {
        "common": {
            "Examples": {
                "Create a new issue": "tea issues create --title \"{{title}}\" --body \"{{body}}\"",
                "Display a list of issues": "tea issues ls",
                "Display a list of issues for a specific repository": "tea issues ls --repo \"{{repository}}\"",
                "Display a list of open pull requests": "tea pulls ls",
                "Display all repositories": "tea repos ls",
                "Log into a Gitea server": "tea login add --name \"{{name}}\" --url \"{{url}}\" --token \"{{token}}\"",
                "Open the current repository in a browser": "tea open"
            },
            "Explanation": "A command line tool to interact with Gitea servers.",
            "More Information Link": "https://gitea.com/gitea/tea"
        }
    },
    "tee": {
        "common": {
            "Examples": {
                "Append to the given FILEs, do not overwrite": "echo \"example\" | tee -a {{FILE}}",
                "Copy standard input to each FILE, and also to standard output": "echo \"example\" | tee {{FILE}}",
                "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
                "Print standard input to the terminal, and also pipe it into another program for further processing": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}"
            },
            "Explanation": "Read from standard input and write to standard output and files (or commands).",
            "More Information Link": ""
        }
    },
    "telnet": {
        "common": {
            "Examples": {
                "Emit the default escape character combination for terminating the session": "Ctrl + ]",
                "Exit a telnet session": "quit",
                "Start telnet with \"x\" as the session termination character": "telnet -e {{x}} {{ip_address}} {{port}}",
                "Telnet to a specific port of a host": "telnet {{ip_address}} {{port}}",
                "Telnet to the default port of a host": "telnet {{host}}"
            },
            "Explanation": "Connect to a specified port of a host using the telnet protocol.",
            "More Information Link": ""
        }
    },
    "terminalizer": {
        "common": {
            "Examples": {
                "Create the global config directory": "terminalizer init",
                "Play a recorded file on the terminal": "terminalizer play {{filename}}",
                "Record the terminal and create a recording file": "terminalizer record {{filename}}",
                "Render a recording file as an animated gif image": "terminalizer render {{filename}}",
                "Upload a video to terminalizer.com": "terminalizer share {{filename}}"
            },
            "Explanation": "Utility program which records the terminal and generate animated gifs or share a video.",
            "More Information Link": "https://terminalizer.com"
        }
    },
    "terminator": {
        "linux": {
            "Examples": {
                "Open new tab": "Ctrl + Shift + T",
                "Split terminals horizontally": "Ctrl + Shift + O",
                "Split terminals vertically": "Ctrl + Shift + E",
                "Start terminator window": "terminator",
                "Start with a fullscreen window": "terminator -f"
            },
            "Explanation": "Arrange multiple GNOME terminals in one window.",
            "More Information Link": ""
        }
    },
    "terraform": {
        "common": {
            "Examples": {
                "Build or change infrastructure": "terraform apply",
                "Destroy Terraform-managed infrastructure": "terraform destroy",
                "Format configuration according to Terraform language style conventions": "terraform fmt",
                "Generate and show an execution plan": "terraform plan",
                "Initialize a new or existing Terraform configuration": "terraform init",
                "Verify that the configuration files are syntactically valid": "terraform validate"
            },
            "Explanation": "Create and deploy infrastructure as code to cloud providers.",
            "More Information Link": "https://www.terraform.io/"
        }
    },
    "terraform fmt": {
        "common": {
            "Examples": {
                "Display diffs of formatting changes": "terraform fmt -diff",
                "Do not list files that were formatted to stdout": "terraform fmt -list=false",
                "Format the configuration in the current directory": "terraform fmt",
                "Format the configuration in the current directory and subdirectories": "terraform fmt -recursive"
            },
            "Explanation": "Format configuration according to Terraform language style conventions.",
            "More Information Link": "https://www.terraform.io/docs/commands/fmt.html"
        }
    },
    "tesseract": {
        "common": {
            "Examples": {
                "List page segmentation modes and their descriptions": "tesseract --help-psm",
                "List the ISO 639-2 codes of available languages": "tesseract --list-langs",
                "Recognize text in an image and save it to `output.txt` (the '.txt' extension is added automatically)": "tesseract {{image.png}} {{output}}",
                "Specify a custom language (default is English) with an ISO 639-2 code (e.g. deu = Deutsch = German)": "tesseract -l deu {{image.png}} {{output}}",
                "Specify a custom page segmentation mode (default is 3)": "tesseract -psm {{0_to_10}} {{image.png}} {{output}}"
            },
            "Explanation": "OCR (Optical Character Recognition) engine.",
            "More Information Link": "https://github.com/tesseract-ocr/tesseract"
        }
    },
    "test": {
        "common": {
            "Examples": {
                "If-else statement": "test {{condition}} && echo \"true\" || echo \"false\"",
                "Test if directory not exists": "test ! -d {{path/to/directory}}",
                "Test if file exists": "test -e {{filename}}",
                "Test if given variable is empty": "test -z $GIT_BRANCH",
                "Test if given variable is equal to given string": "test $MY_VAR == '/bin/zsh'"
            },
            "Explanation": "Evaluate condition.\nIf it is true, returns 0 exit status, otherwise returns 1.",
            "More Information Link": ""
        }
    },
    "testssl": {
        "common": {
            "Examples": {
                "Only check HTTP security headers": "testssl --headers {{example.com}}",
                "Only check available protocols": "testssl --protocols {{example.com}}",
                "Only check vulnerabilities": "testssl --vulnerable {{example.com}}",
                "Test a different port": "testssl {{example.com:465}}",
                "Test a server (run every check) on port 443": "testssl {{example.com}}"
            },
            "Explanation": "Check SSL/TLS protocols and ciphers supported by a server.",
            "More Information Link": "https://testssl.sh/"
        }
    },
    "textutil": {
        "osx": {
            "Examples": {
                "Convert foo.rtf into foo.html": "textutil -convert {{html}} {{foo.rtf}}",
                "Convert foo.txt into foo.rtf, using Times 10 for the font": "textutil -convert {{rtf}} -font {{Times}} -fontsize {{10}} {{foo.txt}}",
                "Convert rich text to normal text": "textutil {{foo.rtf}} -convert {{txt}}",
                "Display information about foo.rtf": "textutil -info {{foo.rtf}}",
                "Load all RTF files in the current directory, concatenates their contents, and writes the result out as index.html with the HTML title set to \"Several Files\"": "textutil -cat {{html}} -title \"Several Files\" -output {{index.html}} *.rtf"
            },
            "Explanation": "Used to manipulate text files of various formats.",
            "More Information Link": ""
        }
    },
    "thunar": {
        "linux": {
            "Examples": {
                "Close all open thunar windows": "thunar --quit",
                "Open a new window showing the current directory": "thunar",
                "Open the bulk rename utility": "thunar --bulk-rename"
            },
            "Explanation": "Graphical file manager for XFCE desktop environments.",
            "More Information Link": ""
        }
    },
    "thundebird": {
        "common": {
            "Examples": {
                "Open thunderbird": "thunderbird",
                "Use a specific user profile": "thunderbird -P {{profile_name}}",
                "Use a specific user profile directory": "thunderbird --profile {{path/to/profile/directory}}"
            },
            "Explanation": "Email client and RSS reader.",
            "More Information Link": ""
        }
    },
    "tic": {
        "linux": {
            "Examples": {
                "Check terminfo file for errors": "tic -c {{path/to/terminal.info}}",
                "Compile and install terminfo for a terminal": "tic -xe {{terminal}} {{path/to/terminal.info}}",
                "Print database locations": "tic -D"
            },
            "Explanation": "Compile terminfo and install for ncurses.",
            "More Information Link": "https://pubs.opengroup.org/onlinepubs/007908799/xcurses/terminfo.html"
        }
    },
    "tig": {
        "common": {
            "Examples": {
                "Display commits from all branches and stashes": "tig --all",
                "Show the difference between two references (such as branches or tags)": "tig {{base_ref}}..{{compared_ref}}",
                "Show the history of a specific branch": "tig {{branch}}",
                "Show the history of specific files or directories": "tig {{path1 path2 …}}",
                "Show the sequence of commits starting from the current one in reverse chronological order": "tig",
                "Start in stash view, displaying all saved stashes": "tig stash"
            },
            "Explanation": "A text-mode interface for Git.",
            "More Information Link": "https://github.com/jonas/tig"
        }
    },
    "time": {
        "common": {
            "Examples": {
                "Time \"ls\"": "time ls"
            },
            "Explanation": "See how long a command takes.",
            "More Information Link": ""
        }
    },
    "timedatectl": {
        "linux": {
            "Examples": {
                "Check the current system clock time": "timedatectl",
                "Enable Network Time Protocol (NTP) synchronization": "timedatectl set-ntp on",
                "List available timezones": "timedatectl list-timezones",
                "Set the local time of the system clock directly": "timedatectl set-time \"{{yyyy-MM-dd hh:mm:ss}}\"",
                "Set the system timezone": "timedatectl set-timezone {{timezone}}"
            },
            "Explanation": "Control the system time and date.",
            "More Information Link": ""
        }
    },
    "timeout": {
        "common": {
            "Examples": {
                "Run `sleep 10` and terminate it, if it runs for more than 3 seconds": "timeout {{3s}} {{sleep 10}}",
                "Specify the signal to be sent to the command after the time limit expires. (By default, TERM is sent)": "timeout --signal {{INT}} {{5s}} {{sleep 10}}"
            },
            "Explanation": "Run a command with a time limit.",
            "More Information Link": ""
        }
    },
    "timeshift": {
        "linux": {
            "Examples": {
                "Create a new snapshot (even if not scheduled)": "sudo timeshift --create",
                "Create a new snapshot (if scheduled)": "sudo timeshift --check",
                "Delete a specific snapshot": "sudo timeshift --delete --snapshot '{{snapshot}}'",
                "List snapshots": "sudo timeshift --list",
                "Restore a snapshot (selecting which snapshot to restore interactively)": "sudo timeshift --restore",
                "Restore a specific snapshot": "sudo timeshift --restore --snapshot '{{snapshot}}'"
            },
            "Explanation": "System restore utility.",
            "More Information Link": "https://github.com/teejee2008/timeshift"
        }
    },
    "timew": {
        "common": {
            "Examples": {
                "Start a new stopwatch, giving a tag name to the activity being tracked": "timew start {{activity_tag}}",
                "Stop all running stopwatches": "timew stop",
                "Stop the stopwatch with a given tag name": "timew stop {{activity_tag}}",
                "View running stopwatches": "timew",
                "View tracked items": "timew summary"
            },
            "Explanation": "A time tracking tool used to measure the duration of activities.",
            "More Information Link": "https://taskwarrior.org/docs/timewarrior"
        }
    },
    "title": {
        "windows": {
            "Examples": {
                "Set the title of the current command prompt window": "title {{new_title}}"
            },
            "Explanation": "Set the title of the command prompt window.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/title"
        }
    },
    "tldr": {
        "common": {
            "Examples": {
                "Get help for a git subcommand": "tldr {{git-checkout}}",
                "Get typical usages of a command (hint: this is how you got here!)": "tldr {{command}}",
                "Show the tar tldr page for Linux": "tldr -p {{linux}} {{tar}}",
                "Update local pages (if the client supports caching)": "tldr -u"
            },
            "Explanation": "Displays simple help pages for command-line tools, from the tldr-pages project.",
            "More Information Link": "https://tldr.sh"
        }
    },
    "tldrl": {
        "common": {
            "Examples": {
                "Format a specific page to `stdout`": "tldrl -f {{page.md}}",
                "Format all pages in place": "tldrl -fi {{pages_directory}}",
                "Lint all pages": "tldrl {{pages_directory}}"
            },
            "Explanation": "Lint and format `tldr` pages.",
            "More Information Link": "https://github.com/tldr-pages/tldr-lint"
        }
    },
    "tlp": {
        "linux": {
            "Examples": {
                "Apply AC settings (ignoring the actual power source)": "sudo tlp ac",
                "Apply battery settings (ignoring the actual power source)": "sudo tlp bat",
                "Apply settings (according to the actual power source)": "sudo tlp start"
            },
            "Explanation": "Advanced power management for Linux. See `tlp-stat` page for additional information.",
            "More Information Link": ""
        }
    },
    "tlp-stat": {
        "linux": {
            "Examples": {
                "Generate status report with configuration and all active settings": "sudo tlp-stat",
                "Show battery information": "sudo tlp-stat -b",
                "Show configuration": "sudo tlp-stat -c"
            },
            "Explanation": "A tool to generate TLP status reports. See also `tlp`.",
            "More Information Link": ""
        }
    },
    "tmux": {
        "common": {
            "Examples": {
                "Attach to a named session": "tmux attach-session -t {{name}}",
                "Attach to the most recently used session": "tmux attach-session",
                "Detach from the current session (with prefix Ctrl-B)": "Ctrl-B d",
                "Kill a session by name": "tmux kill-session -t {{name}}",
                "Kill the current session (with prefix Ctrl-B)": "Ctrl-B :kill-session<Enter>",
                "List existing sessions": "tmux ls",
                "Start a new named session": "tmux new-session -s {{name}}",
                "Start a new session": "tmux"
            },
            "Explanation": "Terminal multiplexer. It allows multiple sessions with windows, panes, and more.",
            "More Information Link": "https://github.com/tmux/tmux"
        }
    },
    "tmuxinator": {
        "common": {
            "Examples": {
                "Create a new project": "tmuxinator new {{project}}",
                "Edit a project": "tmuxinator edit {{project}}",
                "List projects": "tmuxinator list",
                "Start a tmux session based on project": "tmuxinator start {{project}}",
                "Stop a project's tmux session": "tmuxinator stop {{project}}"
            },
            "Explanation": "Create and manage tmux sessions easily.",
            "More Information Link": "https://github.com/tmuxinator/tmuxinator"
        }
    },
    "toilet": {
        "linux": {
            "Examples": {
                "Generate ASCII art for a given text": "toilet {{input_text}}",
                "Generate ASCII art using a custom font file": "toilet {{input_text}} -f {{font_filename}}",
                "Generate ASCII art using a filter": "toilet {{input_text}} --filter {{filter_name}}",
                "Show available toilet filters": "toilet --filter list"
            },
            "Explanation": "A tool to display ASCII-art fonts.",
            "More Information Link": "http://caca.zoy.org/wiki/toilet"
        }
    },
    "tokei": {
        "common": {
            "Examples": {
                "Get a report for a directory excluding `.min.js` files": "tokei {{path/to/directory}} -e {{*.min.js}}",
                "Get a report for all files of type Rust and Markdown": "tokei {{path/to/directory}} -t={{Rust}},{{Markdown}}",
                "Get a report on the code in a directory and all subdirectories": "tokei {{path/to/directory}}",
                "Print out statistics for individual files in a directory": "tokei {{path/to/directory}} --files"
            },
            "Explanation": "A program that prints out statistics about code.",
            "More Information Link": "https://github.com/XAMPPRocky/tokei"
        }
    },
    "tomb": {
        "linux": {
            "Examples": {
                "Close a tomb (fails if the tomb is being used by a process)": "tomb close {{encrypted_directory.tomb}}",
                "Create a new key file that can be used to lock a tomb; user will be prompted for a password for the key": "tomb forge {{encrypted_directory.tomb.key}}",
                "Create a new tomb with an initial size of 100MB": "tomb dig -s {{100}} {{encrypted_directory.tomb}}",
                "Forcefully close all open tombs, killing any applications using them": "tomb slam all",
                "Initialize and lock an empty tomb using a key made with `forge`": "tomb lock {{encrypted_directory.tomb}} -k {{encrypted_directory.tomb.key}}",
                "List all open tombs": "tomb list",
                "Mount a tomb (by default in /media) using its key, making it usable as a regular filesystem directory": "tomb open {{encrypted_directory.tomb}} -k {{encrypted_directory.tomb.key}}"
            },
            "Explanation": "Manage encrypted storage directories that can be safely transported and hidden in a filesystem.",
            "More Information Link": ""
        }
    },
    "top": {
        "linux": {
            "Examples": {
                "Do not show any idle or zombie processes": "top -i",
                "Get help about interactive commands": "?",
                "Show only processes owned by given user": "top -u {{username}}",
                "Show only the processes with the given PID(s), passed as a comma-separated list. (Normally you wouldn't know PIDs off hand. This example picks the PIDs from the process name)": "top -p $(pgrep -d ',' {{process_name}})",
                "Show the individual threads of a given process": "top -Hp {{process_id}}",
                "Sort processes by a field": "top -o {{field_name}}",
                "Start top": "top"
            },
            "Explanation": "Display dynamic real-time information about running processes.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Get help about interactive commands": "?",
                "Start top displaying only processes owned by given user": "top -user {{user_name}}",
                "Start top sorting processes by internal memory size (default order - process ID)": "top -o mem",
                "Start top sorting processes first by CPU, then by running time": "top -o cpu -O time",
                "Start top, all options are available in the interface": "top"
            },
            "Explanation": "Display dynamic real-time information about running processes.",
            "More Information Link": ""
        }
    },
    "topgrade": {
        "common": {
            "Examples": {
                "Cleanup temporary/old files": "topgrade -c",
                "Disable a certain update operation": "topgrade -disable {{operation}}",
                "Edit the config file with default editor": "topgrade --edit-config",
                "Only perform a certain update operation": "topgrade --only {{operation}}",
                "Run updates": "topgrade",
                "Say yes to all updates": "topgrade -y"
            },
            "Explanation": "Update all applications on the system.\nMore at <https://github.com/r-darwish/topgrade>.",
            "More Information Link": ""
        }
    },
    "touch": {
        "common": {
            "Examples": {
                "Create a new empty file(s) or change the times for existing file(s) to current time": "touch {{filename}}",
                "Set the times on a file to a specific date and time": "touch -t {{YYYYMMDDHHMM.SS}} {{filename}}",
                "Use the times from a file to set the times on a second file": "touch -r {{filename}} {{filename2}}"
            },
            "Explanation": "Change a file access and modification times (atime, mtime).",
            "More Information Link": ""
        }
    },
    "tox": {
        "common": {
            "Examples": {
                "Create a tox.ini configuration": "tox-quickstart",
                "Force the virtual environment to be recreated": "tox --recreate -e {{py27}}",
                "List the available environments": "tox --listenvs-all",
                "Run tests on a specific environment (e.g. python 3.6)": "tox -e {{py36}}",
                "Run tests on all test environments": "tox"
            },
            "Explanation": "Automate Python testing across multiple Python versions.\nUse tox.ini to configure environments and test command.",
            "More Information Link": "https://github.com/tox-dev/tox"
        }
    },
    "tpp": {
        "common": {
            "Examples": {
                "Output a presentation": "tpp -t {{type}} -o {{outputname}} {{filename}}",
                "View a presentation": "tpp {{filename}}"
            },
            "Explanation": "Command-Line based presentation tool.",
            "More Information Link": "https://github.com/cbbrowne/tpp"
        }
    },
    "tput": {
        "common": {
            "Examples": {
                "Enable / Disable word wrap": "tput {{smam|rmam}}",
                "Move the cursor to a screen location": "tput cup {{y_coordinate}} {{x_coordinate}}",
                "Reset all terminal attributes": "tput sgr0",
                "Ring the terminal bell": "tput bel",
                "Set foreground (af) or background (ab) color": "tput {{setaf|setab}} {{ansi_color_code}}",
                "Show number of columns, lines, or colors": "tput {{cols|lines|colors}}"
            },
            "Explanation": "View and modify terminal settings and capabilities.",
            "More Information Link": ""
        }
    },
    "tr": {
        "common": {
            "Examples": {
                "Compress a series of identical characters to a single character": "tr -s '{{input_characters}}' < {{filename}}",
                "Delete all occurrences of the specified set of characters from the input": "tr -d '{{input_characters}}' < {{filename}}",
                "Map each character of the first set to the corresponding character of the second set": "tr '{{abcd}}' '{{jkmn}}' < {{filename}}",
                "Replace all occurrences of a character from another command's output": "echo {{text}} | tr {{find_character}} {{replace_character}}",
                "Replace all occurrences of a character in a file, and print the result": "tr {{find_character}} {{replace_character}} < {{filename}}",
                "Strip out non-printable characters from a file": "tr -cd \"[:print:]\" < {{filename}}",
                "Translate the contents of a file to upper-case": "tr \"[:lower:]\" \"[:upper:]\" < {{filename}}"
            },
            "Explanation": "Translate characters: run replacements based on single characters and character sets.",
            "More Information Link": ""
        }
    },
    "traceroute": {
        "common": {
            "Examples": {
                "Disable IP address and host name mapping": "traceroute -n {{host}}",
                "Specify number of queries per hop": "traceroute -q {{5}} {{host}}",
                "Specify size in bytes of probing packet": "traceroute {{host}} {{42}}",
                "Specify wait time for response": "traceroute -w {{0.5}} {{host}}",
                "Traceroute to a host": "traceroute {{host}}"
            },
            "Explanation": "Print the route packets trace to network host.",
            "More Information Link": ""
        }
    },
    "traefik": {
        "common": {
            "Examples": {
                "Start server with a custom config file": "traefik --c {{config_file}}.toml",
                "Start server with cluster mode enabled": "traefik --cluster",
                "Start server with default config": "traefik",
                "Start server with web UI enabled": "traefik --web"
            },
            "Explanation": "A HTTP reverse proxy and load balancer.",
            "More Information Link": "https://traefik.io"
        }
    },
    "trans": {
        "common": {
            "Examples": {
                "Behave like a dictionary to get the meaning of a word": "trans -d {{word}}",
                "Get a brief translation": "trans --brief \"{{word_or_sentence_to_translate}}\"",
                "Translate a word (language is detected automatically)": "trans \"{{word_or_sentence_to_translate}}\"",
                "Translate a word from German to English": "trans {{de}}:{{en}} {{Schmetterling}}",
                "Translate a word into french": "trans :{{fr}} {{word}}"
            },
            "Explanation": "Translate Shell is a command-line translator.",
            "More Information Link": "https://github.com/soimort/translate-shell"
        }
    },
    "transcode": {
        "common": {
            "Examples": {
                "Create stabilisation file to be able to remove camera shakes": "transcode -J stabilize -i {{input_file}}",
                "Remove camera shakes after creating stabilisation file, transform video using xvid": "transcode -J transform -i {{input_file}} -y xvid -o {{output_file}}",
                "Resize the video to 640x480 pixels and convert to MPEG4 codec using xvid": "transcode -Z 640x480 -i {{input_file}} -y xvid -o {{output_file}}"
            },
            "Explanation": "Transcode video and audio codecs, and convert between media formats.",
            "More Information Link": ""
        }
    },
    "transcrypt": {
        "common": {
            "Examples": {
                "Display the credentials of a configured repository": "transcrypt --display",
                "Initialize an unconfigured repository": "transcrypt",
                "Initialize and decrypt a fresh clone of a configured repository": "transcrypt --cipher={{cipher}}",
                "List the currently encrypted files": "git ls-crypt",
                "Rekey to change the encryption cipher or password": "transcrypt --rekey"
            },
            "Explanation": "Transparently encrypt files within a git repository.",
            "More Information Link": "https://github.com/elasticdog/transcrypt"
        }
    },
    "transmission-cli": {
        "common": {
            "Examples": {
                "Create a torrent file from a specific file or directory": "transmission-cli --new {{path/to/source_file_or_directory}}",
                "Download a specific torrent": "transmission-cli {{url|magnet|path/to/file}}",
                "Download a torrent to a specific directory": "transmission-cli --download-dir {{path/to/download_directory}} {{url|magnet|path/to/file}}",
                "Force encryption for peer connections": "transmission-cli --encryption-required {{url|magnet|path/to/file}}",
                "Set the download speed limit to 50 KB/s": "transmission-cli --downlimit {{50}} {{url|magnet|path/to/file}}",
                "Set the upload speed limit to 50 KB/s": "transmission-cli --uplimit {{50}} {{url|magnet|path/to/file}}",
                "Use a Bluetack-formatted peer blocklist": "transmission-cli --blocklist {{blocklist_url|path/to/blocklist}} {{url|magnet|path/to/file}}",
                "Use a specific port for connections": "transmission-cli --port {{port_number}} {{url|magnet|path/to/file}}"
            },
            "Explanation": "A lightweight, command-line BitTorrent client.\nThis tool has been deprecated, please see `transmission-remote`.",
            "More Information Link": "https://transmissionbt.com"
        }
    },
    "transmission-create": {
        "common": {
            "Examples": {
                "Create a private torrent with a 2048 KB piece size": "transmission-create -p -o {{path/to/example.torrent}} --tracker {{tracker_announce_url}} --piecesize {{2048}} {{path/to/file_or_directory}}",
                "Create a torrent with 2048 KB as the piece size": "transmission-create -o {{path/to/example.torrent}} --tracker {{tracker_announce_url}} --piecesize {{2048}} {{path/to/file_or_directory}}",
                "Create a torrent with a comment": "transmission-create -o {{path/to/example.torrent}} --tracker {{tracker_url1}} -c {{comment}} {{path/to/file_or_directory}}",
                "Create a torrent with multiple trackers": "transmission-create -o {{path/to/example.torrent}} --tracker {{tracker_url1}} --tracker {{tracker_url2}} {{path/to/file_or_directory}}",
                "Show help page": "transmission-create --help"
            },
            "Explanation": "A CLI utility to create BitTorrent .torrent files.",
            "More Information Link": "https://linux.die.net/man/1/transmission-create"
        }
    },
    "transmission-remote": {
        "common": {
            "Examples": {
                "Add a torrent file or magnet link to Transmission and download to a specified directory": "transmission-remote {{hostname}} -a {{torrent|url}} -w {{path/to/download_directory}}",
                "Change the default download directory": "transmission-remote {{hostname}} -w {{path/to/download_directory}}",
                "List all torrents": "transmission-remote {{hostname}} --list",
                "Move torrents 1-10 and 15-20 to a new folder (folder will be created if it does not exist)": "transmission-remote {{hostname}} -t \"{{1-10,15-20}}\" --move {{path/to/new_directory}}",
                "Remove torrent 1 and 2, and also delete local data for torrent 2": "transmission-remote {{hostname}} -t {{1}} --remove -t {{2}} --remove-and-delete",
                "Start torrent 1 and 2, stop torrent 3": "transmission-remote {{hostname}} -t \"{{1,2}}\" --start -t {{3}} --stop",
                "Stop all torrents": "transmission-remote {{hostname}} -t {{all}} --stop"
            },
            "Explanation": "Remote control utility for transmission-daemon and transmission.",
            "More Information Link": "https://transmissionbt.com"
        }
    },
    "trap": {
        "linux": {
            "Examples": {
                "List active traps for the current shell": "trap -p",
                "List available signals to set traps for": "trap -l",
                "Remove active traps": "trap - {{SIGHUP}} {{SIGINT}}",
                "Set a trap to execute commands when one or more signals are detected": "trap 'echo \"Caught signal {{SIGHUP}}\"' {{SIGHUP}}"
            },
            "Explanation": "Automatically execute commands after receiving signals by processes or the operating system.\nCan be used to perform cleanups for interruptions by the user or other actions.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "List active traps for the current shell": "trap -p",
                "List available signals to set traps for": "trap -l",
                "Remove active traps": "trap - {{SIGHUP}} {{SIGINT}}",
                "Set a trap to execute commands when one or more signals are detected": "trap 'echo \"Caught signal {{SIGHUP}}\"' {{SIGHUP}}"
            },
            "Explanation": "Automatically execute commands after receiving signals by processes or the operating system.\nCan be used to perform cleanups for interruptions by the user or other actions.",
            "More Information Link": ""
        }
    },
    "trash": {
        "linux": {
            "Examples": {
                "Delete a file (send to trash)": "trash {{path/to/file}}",
                "Empty trash": "trash-empty",
                "Empty trash, keeping files trashed less than {{10}} days ago": "trash-empty {{10}}",
                "List files in trash": "trash-list",
                "Remove all files named 'foo' from the trash": "trash-rm foo",
                "Remove all files with a given original location": "trash-rm {{/absolute/path/to/file_or_directory}}",
                "Restore file from trash": "trash-restore"
            },
            "Explanation": "A CLI for managing your trashcan / recycling bin.",
            "More Information Link": "https://github.com/andreafrancia/trash-cli"
        }
    },
    "trash-cli": {
        "common": {
            "Examples": {
                "Empty the trashcan": "trash-empty",
                "List trashed files": "trash-list",
                "Remove individual files from the trashcan": "trash-rm {{filename}}",
                "Restore a trashed file by choosing a number from the list that results from this command": "trash-restore",
                "Trash files and directories": "trash-put {{filename}}"
            },
            "Explanation": "A command line interface to the trashcan APIs.",
            "More Information Link": "https://github.com/andreafrancia/trash-cli"
        }
    },
    "trawl": {
        "common": {
            "Examples": {
                "Filter interface names using a case insensitive regular expression": "trawl -f wi",
                "Get a list of available interfaces": "trawl -i",
                "Include the loopback interface": "trawl -l",
                "Show column names": "trawl -n"
            },
            "Explanation": "Prints out network interface information to the console, much like ifconfig/ipconfig/ip/ifdata.",
            "More Information Link": "https://github.com/robphoenix/trawl"
        }
    },
    "tree": {
        "linux": {
            "Examples": {
                "Print directories only": "tree -d",
                "Print directories within the tree hierarchy, using the wildcard (glob) pattern, and pruning out directories that aren't ancestors of the wanted one": "tree -P {{directory_name}} --matchdirs --prune",
                "Print files and directories up to 'num' levels of depth (where 1 means the current directory)": "tree -L {{num}}",
                "Print files within the tree hierarchy, using a wildcard (glob) pattern, and pruning out directories that don't contain matching files": "tree -P '{{*.txt}}' --prune",
                "Print hidden files too with colorization on": "tree -a -C",
                "Print the size of each file and the cumulative size of each directory, in human-readable format": "tree -s -h --du",
                "Print the tree ignoring the given directories": "tree -I '{{directory_name1|directory_name2}}'",
                "Print the tree without indentation lines, showing the full path instead (use `-N` to not escape whitespace and special characters)": "tree -i -f"
            },
            "Explanation": "Show the contents of the current directory as a tree.",
            "More Information Link": "http://mama.indstate.edu/users/ice/tree/"
        },
        "osx": {
            "Examples": {
                "Print directories only": "tree -d",
                "Print directories within the tree hierarchy, using the wildcard (glob) pattern, and pruning out directories that aren't ancestors of the wanted one": "tree -P {{directory_name}} --matchdirs --prune",
                "Print files and directories up to 'num' levels of depth (where 1 means the current directory)": "tree -L {{num}}",
                "Print files within the tree hierarchy, using a wildcard (glob) pattern, and pruning out directories that don't contain matching files": "tree -P '{{*.txt}}' --prune",
                "Print hidden files too with colorization on": "tree -a -C",
                "Print the size of each node next to it, in human-readable format, with directories displaying their cumulative size (as in the `du` command)": "tree -s -h --du",
                "Print the tree ignoring the given directories": "tree -I '{{directory_name1|directory_name2}}'",
                "Print the tree without indentation lines, showing the full path instead (use `-N` to not escape whitespace and special characters)": "tree -i -f"
            },
            "Explanation": "Show the contents of the current directory as a tree.",
            "More Information Link": "http://mama.indstate.edu/users/ice/tree/"
        },
        "windows": {
            "Examples": {
                "Display the tree for a directory including files": "tree {{path/to/directory}} /f",
                "Display the tree for a specific directory": "tree {{path/to/directory}}",
                "Display the tree for the current directory": "tree",
                "Display the tree using ASCII characters instead of extended characters": "tree {{path/to/directory}} /a"
            },
            "Explanation": "Display a graphical tree of the directory structure for a path.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/tree"
        }
    },
    "trizen": {
        "linux": {
            "Examples": {
                "Install a new package": "trizen -S {{package}}",
                "List installed packages and versions": "trizen -Qe",
                "Remove a package and its dependencies": "trizen -Rs {{package}}",
                "Search the package database for a keyword": "trizen -Ss {{keyword}}",
                "Show information about a package": "trizen -Si {{package}}",
                "Synchronize and update all AUR packages": "trizen -Syua"
            },
            "Explanation": "Arch Linux utility for building packages from the Arch User Repository (AUR).",
            "More Information Link": ""
        }
    },
    "true": {
        "common": {
            "Examples": {
                "Return a successful exit code": "true"
            },
            "Explanation": "Returns a successful exit status code of 0.\nUse this with the || operator to make a command always exit with 0.",
            "More Information Link": ""
        }
    },
    "truncate": {
        "common": {
            "Examples": {
                "Empty the file's content": "truncate -s 0 {{filename}}",
                "Extend the file size by 50M, fill with holes (which reads as zero bytes)": "truncate -s +{{50M}} {{filename}}",
                "Set a size of 10 GB to an exsting file, or create a new file with the specified size": "truncate -s {{10G}} {{filename}}",
                "Shrink the file by 2GiB, by removing data from the end of file": "truncate -s -{{2G}} {{filename}}"
            },
            "Explanation": "Shrink or extend the size of a file to the specified size.",
            "More Information Link": ""
        }
    },
    "truss": {
        "sunos": {
            "Examples": {
                "Count time, calls, and errors for each system call and report a summary on program exit": "truss -c -p {{pid}}",
                "Start tracing a program by executing it, following all child processes": "truss -f {{program}}",
                "Start tracing a program by executing it, showing arguments and environment variables": "truss -a -e {{program}}",
                "Start tracing a specific process by its PID": "truss -p {{pid}}",
                "Trace a process filtering output by system call": "truss -p {{pid}} -t {{system_call_name}}"
            },
            "Explanation": "Troubleshooting tool for tracing system calls.\nSunOS equivalent of strace.",
            "More Information Link": ""
        }
    },
    "tsc": {
        "common": {
            "Examples": {
                "Compile a TypeScript file `foobar.ts` into a JavaScript file `foobar.js`": "tsc {{foobar.ts}}",
                "Compile a TypeScript file into JavaScript using a specific target syntax (default is `ES3`)": "tsc --target {{ES5|ES2015|ES2016|ES2017|ES2018|ESNEXT}} {{foobar.ts}}",
                "Compile a TypeScript file into a JavaScript file with a custom name": "tsc --outFile {{output.js}} {{input.ts}}",
                "Compile all `.ts` files of a TypeScript project defined in a `tsconfig.json` file": "tsc --build {{tsconfig.json}}",
                "Run the compiler using command line options and arguments fetched from a text file": "tsc @{{args.txt}}",
                "Type-check multiple JavaScript files, and output only the errors": "tsc --allowJs --checkJs --noEmit {{src/**/*.js}}"
            },
            "Explanation": "TypeScript compiler.",
            "More Information Link": "https://www.typescriptlang.org/docs/handbook/compiler-options.html"
        }
    },
    "tshark": {
        "linux": {
            "Examples": {
                "Analyze packets from a file": "tshark -r {{filename}}.pcap",
                "Decode a TCP port using a specific protocol (e.g. HTTP)": "tshark -d tcp.port=={{8888}},{{http}}",
                "Monitor everything on localhost": "tshark",
                "Only capture packets matching a specific capture filter": "tshark -f '{{udp port 53}}'",
                "Only show packets matching a specific output filter": "tshark -Y '{{http.request.method == \"GET\"}}'",
                "Select specific fields to output": "tshark -T {{fields|ek|json|pdml}} -e {{http.request.method}} -e {{ip.src}}",
                "Specify the format of captured output": "tshark -T {{json|text|ps|…}}",
                "Write captured packet to a file": "tshark -w {{path/to/file}}"
            },
            "Explanation": "Packet analysis tool, CLI version of wireshark.",
            "More Information Link": ""
        }
    },
    "tskill": {
        "windows": {
            "Examples": {
                "Terminate a process by its name": "tskill {{process_name}}",
                "Terminate a process by its process identifier": "tskill {{process_id}}"
            },
            "Explanation": "Ends a process running in a session on a Remote Desktop Session Host.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/tskill"
        }
    },
    "tslint": {
        "common": {
            "Examples": {
                "Create tslint config": "tslint --init",
                "Fix lint issues": "tslint --fix",
                "Lint on a given set of files": "tslint {{filename}}.js {{filename1}}.js",
                "Lint with the config file in the project root": "tslint --project {{path/to/project_root}}"
            },
            "Explanation": "A pluggable linting utility for TypeScript.",
            "More Information Link": "https://palantir.github.io/tslint"
        }
    },
    "tsort": {
        "common": {
            "Examples": {
                "Perform a topological sort consistent with a partial sort per line of input separated by blanks": "tsort {{file}}"
            },
            "Explanation": "Perform a topological sort.\nA common use is to show the dependency order of nodes in a directed acyclic graph.",
            "More Information Link": ""
        }
    },
    "tty": {
        "common": {
            "Examples": {
                "Print the file name of this terminal": "tty"
            },
            "Explanation": "Returns terminal name.",
            "More Information Link": ""
        }
    },
    "tune2fs": {
        "linux": {
            "Examples": {
                "Enable discard and user-specified extended attributes for a filesystem": "tune2fs -o {{discard,user_xattr}} {{/dev/sdXN}}",
                "Enable journaling for a filesystem": "tune2fs -o^{{nobarrier}} {{/dev/sdXN}}",
                "Set the filesystem label to MY_LABEL": "tune2fs -L {{'MY_LABEL'}} {{/dev/sdXN}}",
                "Set the max number of counts before a filesystem is checked to 2": "tune2fs -c {{2}} {{/dev/sdXN}}"
            },
            "Explanation": "Adjust parameters of an ext2, ext3 or ext4 filesystem.\nMay be used on mounted filesystems.",
            "More Information Link": ""
        }
    },
    "twm": {
        "common": {
            "Examples": {
                "Connect to a specific X server": "twm -display {{display}}",
                "Connect to the default X server": "twm",
                "Enable verbose mode and print unexpected errors in X": "twm -v",
                "Only manage the default screen": "twm -s",
                "Use a specific startup file": "twm -f {{path/to/file}}"
            },
            "Explanation": "A window manager for the X Window sytem.",
            "More Information Link": "https://gitlab.freedesktop.org/xorg/app/twm"
        }
    },
    "type": {
        "common": {
            "Examples": {
                "Display all locations containing the specified executable": "type -a {{command}}",
                "Display the kind of a command": "type {{command}}",
                "Display the name of the disk file that would be executed": "type -p {{command}}"
            },
            "Explanation": "Display the kind of command the shell will execute.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display the contents of a specific file": "type {{path/to/file}}"
            },
            "Explanation": "Display the contents of a file.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/type"
        }
    },
    "tzutil": {
        "windows": {
            "Examples": {
                "Display a list of available time zones": "tzutil /l",
                "Get the current time zone": "tzutil /g",
                "Set the system time zone to the specific value": "tzutil /s {{timezone_id}}"
            },
            "Explanation": "A tool for displaying or configuring the system time zone.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/tzutil"
        }
    },
    "ufraw-batch": {
        "common": {
            "Examples": {
                "Extract the preview image from the raw file": "ufraw-batch --embedded-image {{input_file(s)}}",
                "Save the file with size up to the given maximums MAX1 and MAX2": "ufraw-batch --size=MAX1,MAX2 {{input_file(s)}}",
                "Simply convert RAW files to jpg": "ufraw-batch --out-type=jpg {{input_file(s)}}",
                "Simply convert RAW files to png": "ufraw-batch --out-type=png {{input_file(s)}}"
            },
            "Explanation": "Convert RAW files from cameras into standard image files.",
            "More Information Link": ""
        }
    },
    "ufw": {
        "linux": {
            "Examples": {
                "Allow incoming traffic on port 5432 on this host with a comment identifying the service": "ufw allow {{5432}} comment \"{{Service}}\"",
                "Allow only TCP traffic from 192.168.0.4 to any address on this host, on port 22": "ufw allow proto {{tcp}} from {{192.168.0.4}} to {{any}} port {{22}}",
                "Delete a particular rule. The rule number can be retrieved from the `ufw status numbered` command": "ufw delete {{rule_number}}",
                "Deny all UDP traffic to port 22": "ufw deny proto {{udp}} from {{any}} to {{any}} port {{22}}",
                "Deny traffic on port 80 on this host": "ufw deny {{80}}",
                "Disable ufw": "ufw disable",
                "Enable ufw": "ufw enable",
                "Show ufw rules, along with their numbers": "ufw status numbered"
            },
            "Explanation": "Uncomplicated Firewall.\nFrontend for iptables aiming to make configuration of a firewall easier.",
            "More Information Link": ""
        }
    },
    "ul": {
        "linux": {
            "Examples": {
                "Display the contents of the file with underlines made of dashes `-`": "ul -i {{file.txt}}",
                "Display the contents of the file with underlines where applicable": "ul {{file.txt}}"
            },
            "Explanation": "Performs the underlining of a text.\nEach character in a given string must be underlined separately.",
            "More Information Link": ""
        }
    },
    "ulimit": {
        "common": {
            "Examples": {
                "Get hard limit for the number of simultaneously opened files": "ulimit -H -n",
                "Get soft limit for the number of simultaneously opened files": "ulimit -S -n",
                "Get the properties of all the user limits": "ulimit -a",
                "Set max per-user process limit": "ulimit -u 30"
            },
            "Explanation": "Get and set user limits.",
            "More Information Link": ""
        }
    },
    "umask": {
        "common": {
            "Examples": {
                "Change the mask symbolically to allow read permission for all users (the rest of the mask bits are unchanged)": "umask {{a+r}}",
                "Display the current mask in octal notation": "umask",
                "Display the current mask in symbolic (human-readable) mode": "umask -S",
                "Set the mask (using octal) to restrict no permissions for the file's owner, and restrict all permissions for everyone else": "umask {{077}}"
            },
            "Explanation": "Manage the read/write/execute permissions that are masked out (i.e. restricted) for newly created files by the user.",
            "More Information Link": ""
        }
    },
    "umount": {
        "common": {
            "Examples": {
                "Unmount a filesystem, by passing the path to the source it is mounted from": "umount {{path/to/device_file}}",
                "Unmount a filesystem, by passing the path to the target where it is mounted": "umount {{path/to/mounted_directory}}",
                "Unmount all mounted filesystems (except the `proc` filesystem)": "umount -a"
            },
            "Explanation": "Unlink a filesystem from its mount point, making it no longer accessible.\nA filesystem cannot be unmounted when it is busy.",
            "More Information Link": ""
        }
    },
    "unalias": {
        "common": {
            "Examples": {
                "Remove all aliases": "unalias -a",
                "Remove an alias": "unalias {{alias_name}}"
            },
            "Explanation": "Remove aliases.",
            "More Information Link": ""
        }
    },
    "uname": {
        "common": {
            "Examples": {
                "Print all available system information (hardware, software, nodename)": "uname -a",
                "Print hardware-related information: machine and processor": "uname -mp",
                "Print software-related information: operating system, release number, and version": "uname -srv",
                "Print the nodename (hostname) of the system": "uname -n"
            },
            "Explanation": "Print details about the current machine and the operating system running on it.\nNote: for additional information about the operating system, try the `lsb_release` command.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Print all available system information (hardware, software, nodename)": "uname -a",
                "Print hardware-related information: machine and processor": "uname -mp",
                "Print software-related information: operating system, release number, and version": "uname -srv",
                "Print the nodename (hostname) of the system": "uname -n"
            },
            "Explanation": "Print details about the current machine and the operating system running on it.\nNote: for additional information about the operating system, try the `sw_vers` command.",
            "More Information Link": ""
        }
    },
    "unar": {
        "common": {
            "Examples": {
                "Extract an archive to the current directory": "unar {{archive}}",
                "Extract an archive to the specified directory": "unar -o {{path/to/directory}} {{archive}}",
                "Force overwrite if files to be unpacked already exist": "unar -f {{archive}}",
                "Force rename if files to be unpacked already exist": "unar -r {{archive}}",
                "Force skip if files to be unpacked already exist": "unar -s {{archive}}"
            },
            "Explanation": "Extract contents from archive files.",
            "More Information Link": ""
        }
    },
    "unclutter": {
        "common": {
            "Examples": {
                "Hide mouse cursor after 3 seconds": "unclutter -idle {{3}}"
            },
            "Explanation": "Hides the mouse cursor.",
            "More Information Link": ""
        }
    },
    "uncrustify": {
        "common": {
            "Examples": {
                "Don't make backups (useful if files are under version control)": "find . -name \"*.cpp\" | uncrustify -F - --no-backup",
                "Explicitly set a configuration variable's value": "uncrustify --set {{option}}={{value}}",
                "Format a single file": "uncrustify -f {{path/to/file.cpp}} -o {{path/to/output.cpp}}",
                "Generate a new configuration file": "uncrustify --update-config -o {{path/to/new.cfg}}",
                "Read filenames from stdin, and take backups before writing output back to the original filepaths": "find . -name \"*.cpp\" | uncrustify -F - --replace",
                "Use a custom configuration file and write the result to stdout": "uncrustify -c {{path/to/uncrustify.cfg}} -f {{path/to/file.cpp}}"
            },
            "Explanation": "C, C++, C#, D, Java and Pawn source code formatter.",
            "More Information Link": "https://github.com/uncrustify/uncrustify"
        }
    },
    "unexpand": {
        "common": {
            "Examples": {
                "Convert all blanks, instead of just initial blanks": "unexpand -a {{file}}",
                "Convert blanks in each file to tabs, writing to standard output": "unexpand {{file}}",
                "Convert blanks to tabs, reading from standard output": "unexpand",
                "Convert only leading sequences of blanks (overrides -a)": "unexpand --first-only {{file}}",
                "Have tabs a certain number of characters apart, not 8 (enables -a)": "unexpand -t {{number}} {{file}}"
            },
            "Explanation": "Convert spaces to tabs.",
            "More Information Link": ""
        }
    },
    "uniq": {
        "common": {
            "Examples": {
                "Display each line once": "sort {{file}} | uniq",
                "Display number of occurrences of each line along with that line": "sort {{file}} | uniq -c",
                "Display number of occurrences of each line, sorted by the most frequent": "sort {{file}} | uniq -c | sort -nr",
                "Display only duplicate lines": "sort {{file}} | uniq -d",
                "Display only unique lines": "sort {{file}} | uniq -u"
            },
            "Explanation": "Output the unique lines from the given input or file.\nSince it does not detect repeated lines unless they are adjacent, we need to sort them first.",
            "More Information Link": ""
        }
    },
    "unison": {
        "common": {
            "Examples": {
                "Automatically accept the (non-conflicting) defaults": "unison {{path/to/directory_1}} {{path/to/directory_2}} -auto",
                "Ignore some files using a pattern": "unison {{path/to/directory_1}} {{path/to/directory_2}} -ignore {{pattern}}",
                "Show documentation": "unison -doc {{topics}}",
                "Sync two directories (creates log first time these two directories are synchronised)": "unison {{path/to/directory_1}} {{path/to/directory_2}}"
            },
            "Explanation": "Bidirectional file synchronisation tool.",
            "More Information Link": "https://www.cis.upenn.edu/~bcpierce/unison/download/releases/stable/unison-manual.html"
        }
    },
    "units": {
        "linux": {
            "Examples": {
                "Convert between units with quantities": "units {{15 pounds}} {{kilograms}}",
                "Run in interactive mode": "units",
                "Show the conversion between two compound units": "units \"{{meters / second}}\" \"{{inches / hour}}\"",
                "Show the conversion between two simple units": "units {{quarts}} {{tablespoons}}",
                "Show the conversion between units with different dimensions": "units \"{{acres}}\" \"{{ft^2}}\""
            },
            "Explanation": "Provide the conversion between two units of measure.\nTyping 'search {{text}}' in the prompt will display a list of all of the units containing {{text}}.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Convert between units with quantities": "units \"{{15 pounds}}\" {{kilograms}}",
                "Run in interactive mode": "units",
                "Show the conversion between two compound units": "units \"{{meters / second}}\" \"{{inches / hour}}\"",
                "Show the conversion between two simple units": "units {{quarts}} {{tablespoons}}",
                "Show the conversion between units with different dimensions": "units \"{{acres}}\" \"{{ft^2}}\"",
                "Show the conversion of byte multipliers": "units \"{{15 megabytes}}\" {{bytes}}"
            },
            "Explanation": "Provide the conversion between two units of measure.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Convert between units with quantities": "units {{15 pounds}} {{kilograms}}",
                "Run in interactive mode": "units",
                "Show the conversion between two compound units": "units \"{{meters / second}}\" \"{{inches / hour}}\"",
                "Show the conversion between two simple units": "units {{quarts}} {{tablespoons}}",
                "Show the conversion between units with different dimensions": "units \"{{acres}}\" \"{{ft^2}}\""
            },
            "Explanation": "Provide the conversion between two units of measure.",
            "More Information Link": ""
        }
    },
    "unix2dos": {
        "linux": {
            "Examples": {
                "Change the line endings of a file": "unix2dos {{filename}}",
                "Create a copy with DOS-style line endings": "unix2dos -n {{filename}} {{new_filename}}"
            },
            "Explanation": "Change Unix-style line endings to DOS-style.\nReplaces CR with CRLF.",
            "More Information Link": ""
        }
    },
    "unix2mac": {
        "linux": {
            "Examples": {
                "Change the line endings of a file": "unix2mac {{filename}}",
                "Create a copy with macOS-style line endings": "unix2mac -n {{filename}} {{new_filename}}"
            },
            "Explanation": "Change Unix-style line endings to macOS-style.\nReplaces CR with LF.",
            "More Information Link": ""
        }
    },
    "unlink": {
        "common": {
            "Examples": {
                "Remove the specified file if it is the last link": "unlink {{path/to/file}}"
            },
            "Explanation": "Remove a link to a file from the filesystem.\nThe file contents is lost if the link is the last one to the file.",
            "More Information Link": ""
        }
    },
    "unrar": {
        "common": {
            "Examples": {
                "Extract files into current directory, losing directory structure in the archive": "unrar e {{compressed.rar}}",
                "Extract files to a specified path with the original directory structure": "unrar x {{compressed.rar}} {{path/to/extract}}",
                "Extract files with original directory structure": "unrar x {{compressed.rar}}",
                "List files inside the archive file without decompressing it": "unrar l {{compressed.rar}}",
                "Test integrity of each file inside the archive file": "unrar t {{compressed.rar}}"
            },
            "Explanation": "Extract RAR archives.",
            "More Information Link": ""
        }
    },
    "unset": {
        "linux": {
            "Examples": {
                "Remove the function my_func": "unset -f {{my_func}}",
                "Remove the variable `foo`, or if the variable doesn't exist, remove the function `foo`": "unset {{foo}}",
                "Remove the variables foo and bar": "unset -v {{foo}} {{bar}}"
            },
            "Explanation": "Remove shell variables or functions.",
            "More Information Link": ""
        }
    },
    "unshadow": {
        "linux": {
            "Examples": {
                "Combine the /etc/shadow and /etc/passwd of the current system": "sudo unshadow /etc/passwd /etc/shadow",
                "Combine two arbitrary shadow and password files": "sudo unshadow {{/path/to/passwd}} {{/path/to/shadow}}"
            },
            "Explanation": "Utility provided by the John the Ripper project to obtain the traditional Unix password file if the system uses shadow passwords.",
            "More Information Link": "https://www.openwall.com/john/"
        }
    },
    "unzip": {
        "common": {
            "Examples": {
                "Extract a zip file created in windows, containing files with non-ascii (chinese) filenames": "unzip -O {{gbk}} {{file.zip}}",
                "Extract the contents of the file(s) to `stdout` alongside the extracted file names": "unzip -c {{file.zip}}",
                "Extract zip file(s) (for multiple files, separate file paths by spaces)": "unzip {{file(s)}}",
                "Extract zip files(s) to given path": "unzip {{compressed_file(s)}} -d {{/path/to/put/extracted_file(s)}}",
                "List the contents of a zip file without extracting": "unzip -l {{file.zip}}"
            },
            "Explanation": "Extract compressed files in a ZIP archive.",
            "More Information Link": ""
        }
    },
    "update-alternatives": {
        "linux": {
            "Examples": {
                "Add a symbolic link": "sudo update-alternatives --install {{path/to/symlink}} {{command_name}} {{path/to/command_binary}} {{priority}}",
                "Configure a symbolic link for \"java\"": "sudo update-alternatives --config {{java}}",
                "Display all commands and their current selection": "update-alternatives --get-selections",
                "Display information about a specified command": "update-alternatives --display {{java}}",
                "Remove a symbolic link": "sudo update-alternatives --remove {{java}} {{/opt/java/jdk1.8.0_102/bin/java}}"
            },
            "Explanation": "A convenient tool for maintaining symbolic links to determine default commands.",
            "More Information Link": ""
        }
    },
    "update-rc.d": {
        "linux": {
            "Examples": {
                "Disable a service": "update-rc.d {{mysql}} disable",
                "Enable a service": "update-rc.d {{mysql}} enable",
                "Forcibly remove a service": "update-rc.d -f {{mysql}} remove",
                "Install a service": "update-rc.d {{mysql}} defaults"
            },
            "Explanation": "Install and remove services which are System-V style init script links.\nInit scripts are in the /etc/init.d/.",
            "More Information Link": ""
        }
    },
    "updatedb": {
        "linux": {
            "Examples": {
                "Display file names as soon as they are found": "sudo updatedb --verbose",
                "Refresh database content": "sudo updatedb"
            },
            "Explanation": "Create or update the database used by `locate`.\nIt is usually run daily by cron.",
            "More Information Link": ""
        }
    },
    "uprecords": {
        "linux": {
            "Examples": {
                "Display a summary of the top 10 historical uptime records": "uprecords",
                "Display the downtime between reboots instead of the kernel version": "uprecords -d",
                "Display the top 25 records": "uprecords -m {{25}}",
                "Don't truncate information": "uprecords -w",
                "Show the most recent reboots": "uprecords -B"
            },
            "Explanation": "Displays a summary of historical uptime records.",
            "More Information Link": ""
        }
    },
    "uptime": {
        "common": {
            "Examples": {
                "Print current time, uptime, number of logged-in users and other information": "uptime",
                "Print the date and time the system booted up at": "uptime --since",
                "Show only the amount of time the system has been booted for": "uptime --pretty",
                "Show version information": "uptime --version"
            },
            "Explanation": "Tell how long the system has been running and other information.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Print current time, uptime, number of logged-in users and other information": "uptime"
            },
            "Explanation": "Tell how long the system has been running and other information.",
            "More Information Link": ""
        }
    },
    "upx": {
        "common": {
            "Examples": {
                "Compress executable": "upx {{file}}",
                "Decompress executable": "upx -d {{file}}",
                "Detailed help": "upx --help"
            },
            "Explanation": "Compress or decompress executables.",
            "More Information Link": "https://upx.github.io"
        }
    },
    "urxvt": {
        "linux": {
            "Examples": {
                "Open a new urxvt window": "urxvt",
                "Run a command and keep the window open": "urxvt --hold -e {{command}}",
                "Run a command in a new urxvt window": "urxvt -e {{command}}",
                "Run a command within the \"sh\" shell": "urxvt -e {{sh}} -c {{command}}",
                "Run in a specific directory": "urxvt -cd {{path/to/directory}}"
            },
            "Explanation": "Rxvt-unicode.\nA customizable terminal emulator.",
            "More Information Link": ""
        }
    },
    "useradd": {
        "linux": {
            "Examples": {
                "Create new system user without a home directory": "useradd --no-create-home --system {{name}}",
                "Create new user": "useradd {{name}}",
                "Create new user belonging to additional groups (mind the lack of whitespace)": "useradd --groups {{group1,group2}} {{name}}",
                "Create new user with a default home directory": "useradd --create-home {{name}}",
                "Create new user with specified shell": "useradd --shell {{/path/to/shell}} {{name}}"
            },
            "Explanation": "Create a new user.",
            "More Information Link": ""
        }
    },
    "userdel": {
        "linux": {
            "Examples": {
                "Remove a user and their home directory": "userdel -r {{name}}"
            },
            "Explanation": "Remove a user.",
            "More Information Link": ""
        }
    },
    "usermod": {
        "linux": {
            "Examples": {
                "Add user to supplementary groups (mind the whitespace)": "usermod -a -G {{group1,group2}} {{user}}",
                "Change a user's name": "usermod -l {{newname}} {{user}}",
                "Create a new home directory for a user and move their files to it": "usermod -m -d {{/path/to/home}} {{user}}"
            },
            "Explanation": "Modifies a user account.",
            "More Information Link": ""
        }
    },
    "users": {
        "common": {
            "Examples": {
                "Display a list of logged in users": "users",
                "Display a list of logged in users according to a specific file": "users {{/var/log/wmtp}}"
            },
            "Explanation": "Display a list of logged in users.",
            "More Information Link": ""
        }
    },
    "utmpdump": {
        "linux": {
            "Examples": {
                "Dump the `/var/log/wtmp` file to the standard output as plain text": "utmpdump {{/var/log/wtmp}}",
                "Load a previously dumped file into `/var/log/wtmp`": "utmpdump -r {{dumpfile}} > {{/var/log/wtmp}}"
            },
            "Explanation": "Dump and load btmp, utmp and wtmp accounting files.",
            "More Information Link": ""
        }
    },
    "uuidgen": {
        "linux": {
            "Examples": {
                "Create a UUID based on the current time": "uuidgen --time",
                "Create a UUID based on the hash of a URL": "uuidgen --sha1 --namespace {{@url}} --name {{object_name}}",
                "Create a random UUID": "uuidgen --random"
            },
            "Explanation": "Generate unique identifiers (UUIDs).",
            "More Information Link": ""
        }
    },
    "uvcdynctrl": {
        "linux": {
            "Examples": {
                "Get the current control value": "uvcdynctrl -g {{control_name}}",
                "List all available cameras": "uvcdynctrl -l",
                "List available controls": "uvcdynctrl -c",
                "Load the state of the controls from a file": "uvcdynctrl -L {{filename}}",
                "Save the state of the current controls to a file": "uvcdynctrl -W {{filename}}",
                "Set a new control value (for negative values, add -- before {{-value}})": "uvcdynctrl -s {{control_name}} {{value}}",
                "Specify the device to use (defaults to `video0`)": "uvcdynctrl -d {{device_name}}"
            },
            "Explanation": "A libwebcam command line tool to manage dynamic controls in uvcvideo.",
            "More Information Link": ""
        }
    },
    "uvicorn": {
        "common": {
            "Examples": {
                "Listen on port 8080 on localhost": "uvicorn --host {{localhost}} --port {{8080}} {{import.path:app_object}}",
                "Run Python web app": "uvicorn {{import.path:app_object}}",
                "Run app over HTTPS": "uvicorn --ssl-certfile {{cert.pem}} --ssl-keyfile {{key.pem}} {{import.path:app_object}}",
                "Turn on live reload": "uvicorn --reload {{import.path:app_object}}",
                "Use 4 worker processes for handling requests": "uvicorn --workers {{4}} {{import.path:app_object}}"
            },
            "Explanation": "Python ASGI HTTP Server, for asynchronous projects.",
            "More Information Link": "https://www.uvicorn.org/"
        }
    },
    "vagrant": {
        "common": {
            "Examples": {
                "Connect to machine via SSH": "vagrant ssh",
                "Create Vagrantfile in current directory with the base Vagrant box": "vagrant init",
                "Create Vagrantfile with the Ubuntu 14.04 (Trusty Tahr) box from HashiCorp Atlas": "vagrant init ubuntu/trusty32",
                "Halt the machine": "vagrant halt",
                "Output the SSH configuration file of the running Vagrant machine": "vagrant ssh-config",
                "Start and provision the vagrant environment": "vagrant up",
                "Suspend the machine": "vagrant suspend"
            },
            "Explanation": "Manage lightweight, reproducible, and portable development environments.",
            "More Information Link": "https://www.vagrantup.com"
        }
    },
    "vala": {
        "common": {
            "Examples": {
                "Display helper message": "vala --help",
                "Display version info": "vala --version",
                "Run a vala file, with gtk+": "vala {{path/to/file.vala}} --pkg {{gtk+-3.0}}"
            },
            "Explanation": "Vala code runner.\nTutorial: <https://wiki.gnome.org/Projects/Vala/Tutorial>.\nDoc homepage: <https://valadoc.org/>.",
            "More Information Link": ""
        }
    },
    "valac": {
        "common": {
            "Examples": {
                "Compile a vala file, with gtk+": "valac {{path/to/file.vala}} --pkg {{gtk+-3.0}}",
                "Display helper message": "valac --help",
                "Display version info": "valac --version"
            },
            "Explanation": "Vala code compiler.\nTutorial: <https://wiki.gnome.org/Projects/Vala/Tutorial>.\nDoc homepage: <https://valadoc.org/>.",
            "More Information Link": ""
        }
    },
    "valet": {
        "osx": {
            "Examples": {
                "Register the current working directory as a path that Valet should search for sites": "valet park",
                "Serve a single site instead of an entire directory": "valet link app-name",
                "Share a project via an Ngrok tunnel": "valet share",
                "Start the valet daemon": "valet start",
                "View 'parked' paths": "valet paths"
            },
            "Explanation": "A Laravel development environment that allows hosting sites via local tunnels on `http://<example>.test`.",
            "More Information Link": "https://laravel.com/docs/5.8/valet"
        }
    },
    "valgrind": {
        "common": {
            "Examples": {
                "Use Memcheck to report all possible memory leaks of `program` in full detail": "valgrind --leak-check=full --show-leak-kinds=all {{program}}",
                "Use the (default) Memcheck tool to show a diagnostic of memory usage by `program`": "valgrind {{program}}",
                "Use the Cachegrind tool to profile and log CPU cache operations of `program`": "valgrind --tool=cachegrind {{program}}",
                "Use the Massif tool to profile and log heap memory and stack usage of `program`": "valgrind --tool=massif --stacks=yes {{program}}"
            },
            "Explanation": "Wrapper for a set of expert tools for profiling, optimizing and debugging programs.\nCommonly used tools include `memcheck`, `cachegrind`, `callgrind`, `massif`, `helgrind`, and `drd`.",
            "More Information Link": "http://www.valgrind.org"
        }
    },
    "var-dump-server": {
        "common": {
            "Examples": {
                "Dump the data in an HTML file": "var-dump-server --format=html > {{path/to/file.html}}",
                "Make the server listen on a specific address and port": "var-dump-server --host {{127.0.0.1:9912}}",
                "Start the server": "var-dump-server"
            },
            "Explanation": "Symfony dump server.\nCollects data dumped by the Symfony VarDumper component.",
            "More Information Link": "https://symfony.com/doc/current/components/var_dumper.html#the-dump-server"
        }
    },
    "vault": {
        "common": {
            "Examples": {
                "Authenticate the CLI client against the Vault server, using an authentication token": "vault auth {{authentication_token}}",
                "Connect to a Vault server and initialize a new encrypted data store": "vault init",
                "Read a specific field from the value": "vault read -field={{field_name}} secret/{{hello}}",
                "Read a value from the vault, using the generic back-end called \"secret\"": "vault read secret/{{hello}}",
                "Seal (lock) the Vault server, by removing the encryption key of the data store from memory": "vault seal",
                "Store a new secret in the vault, using the generic back-end called \"secret\"": "vault write secret/{{hello}} value={{world}}",
                "Unseal (unlock) the vault, by providing one of the key shares needed to access the encrypted data store": "vault unseal {{key-share-x}}"
            },
            "Explanation": "A CLI to interact with HashiCorp Vault.",
            "More Information Link": "https://www.vaultproject.io/docs/commands"
        }
    },
    "vcsh": {
        "common": {
            "Examples": {
                "Clone a repository into a custom directory name": "vcsh clone {{git_url}} {{repository_name}}",
                "Execute a git command on a managed repository": "vcsh {{repository_name}} {{git_command}}",
                "Initialize an (empty) repository": "vcsh init {{repository_name}}",
                "List all managed repositories": "vcsh list",
                "Push/pull all managed repositories to/from remotes": "vcsh {{push|pull}}",
                "Write a custom .gitignore file for a managed repository": "vcsh write-gitignore {{repository_name}}"
            },
            "Explanation": "Version Control System for the home directory using git repositories.",
            "More Information Link": "https://github.com/RichiH/vcsh"
        }
    },
    "vdir": {
        "common": {
            "Examples": {
                "List files and directories in the current directory, one per line, with details": "vdir",
                "List files and directories sorting entries by modification time (newest first)": "vdir -t",
                "List files and directories sorting entries by size (largest first)": "vdir -S",
                "List grouping directories first": "vdir --group-directories-first",
                "List including hidden files (starting with a dot)": "vdir -a",
                "List with sizes displayed in human readable units (KB, MB, GB)": "vdir -h",
                "Recursively list all files and directories in a specific directory": "vdir --recursive {{path/to/directory}}"
            },
            "Explanation": "List directory contents.\nDrop-in replacement for `ls -l`.",
            "More Information Link": ""
        }
    },
    "vegeta": {
        "common": {
            "Examples": {
                "Launch an attack against multiple URLs from a file": "vegeta attack -duration={{30s}} -targets={{requests.txt}} | vegeta report",
                "Launch an attack and display a report": "echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}} | vegeta report",
                "Launch an attack and plot the results on a graph (latency over time)": "echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}} | vegeta plot > {{path/to/results.html}}",
                "Launch an attack lasting 30 seconds": "echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}}",
                "Launch an attack on a server with a self-signed https certificate": "echo \"{{GET https://example.com}}\" | vegeta attack -insecure -duration={{30s}}",
                "Launch an attack with a rate of 10 requests per second": "echo \"{{GET https://example.com}}\" | vegeta attack -duration={{30s}} -rate={{10}}"
            },
            "Explanation": "A command line utility and a library for HTTP load testing.\nSee also `ab`.",
            "More Information Link": "https://github.com/tsenart/vegeta"
        }
    },
    "velero": {
        "common": {
            "Examples": {
                "Create a backup containing all resources": "velero backup create {{backup_name}}",
                "Create a restore from the latest successful backup triggered by specific schedule": "velero restore create --from-schedule {{schedule_name}}",
                "Create a weekly backup, each living for 90 days (2160 hours)": "velero schedule create {{schedule_name}} --schedules=\"{{@every 7d}}\" --ttl {{2160h0m0s}}",
                "Delete a backup": "velero backup delete {{backup_name}}",
                "List all backups": "velero backup get"
            },
            "Explanation": "Backup and migrate Kubernetes applications and their persistent volumes.",
            "More Information Link": "https://github.com/heptio/velero"
        }
    },
    "ver": {
        "windows": {
            "Examples": {
                "Display the current version number": "ver"
            },
            "Explanation": "Display the current Windows or MS-DOS version number.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/ver"
        }
    },
    "vgcreate": {
        "linux": {
            "Examples": {
                "Create a new volume group called vg1 using multiple devices": "vgcreate {{vg1}} {{/dev/sda1}} {{/dev/sdb1}} {{/dev/sdc1}}",
                "Create a new volume group called vg1 using the `/dev/sda1` device": "vgcreate {{vg1}} {{/dev/sda1}}"
            },
            "Explanation": "Create volume groups combining multiple mass-storage devices.",
            "More Information Link": ""
        }
    },
    "vgs": {
        "linux": {
            "Examples": {
                "Append field to default display": "vgs -o +{{field_name}}",
                "Change default display to show more details": "vgs -v",
                "Display all volume groups": "vgs -a",
                "Display information about volume groups": "vgs",
                "Display only specific fields": "vgs -o {{field_name_1}},{{field_name_2}}",
                "Suppress heading line": "vgs --noheadings",
                "Use separator to separate fields": "vgs --separator ="
            },
            "Explanation": "Display information about LVM volume groups.",
            "More Information Link": ""
        }
    },
    "view": {
        "common": {
            "Examples": {
                "Open a file": "view {{file}}"
            },
            "Explanation": "A read-only version of `vim`.\nThis is equivalent to `vim -R`.",
            "More Information Link": ""
        }
    },
    "viewnior": {
        "linux": {
            "Examples": {
                "View an image": "viewnior {{path/to/image.ext}}",
                "View fullscreen in slideshow mode": "viewnior --slideshow {{path/to/image.ext}}",
                "View in fullscreen mode": "viewnior --fullscreen {{path/to/image.ext}}"
            },
            "Explanation": "Simple and elegant image viewer.",
            "More Information Link": ""
        }
    },
    "vim": {
        "common": {
            "Examples": {
                "Open a file": "vim {{path/to/file}}",
                "Open a file at a specified line number": "vim +{{line_number}} {{path/to/file}}",
                "Perform a regex substitution in the whole file": ":%s/{{pattern}}/{{replacement}}/g<Enter>",
                "Quit without saving": ":quit!<Enter>",
                "Save a file": ":write<Enter>",
                "Search for a pattern in the file (press `n`/`N` to go to next/previous match)": "/{{search_pattern}}<Enter>",
                "Undo the last operation": "u",
                "View Vim's help manual": ":help<Enter>"
            },
            "Explanation": "Vim (Vi IMproved), a command-line text editor, provides several modes for different kinds of text manipulation.\nPressing `i` enters edit mode. `<Esc>` goes back to normal mode, which doesn't allow regular text insertion.",
            "More Information Link": "https://www.vim.org"
        }
    },
    "vimdiff": {
        "common": {
            "Examples": {
                "Move the cursor to the window on the left|right|up|down": "Ctrl + w {{h|l|k|j}}",
                "Open two files and show the differences (up to four files can be compared)": "vimdiff {{file1}} {{file2}}",
                "Open two files using a horizontal window split instead of the default vertical split": "vimdiff -o {{file1}} {{file2}}"
            },
            "Explanation": "Open up to four files in vim and show the differences between them.\nSee `vim` documentation for working with files and navigating within a window.",
            "More Information Link": ""
        }
    },
    "vimtutor": {
        "common": {
            "Examples": {
                "Exit the tutor": "<Esc> :q <Enter>",
                "Launch the vim tutor using the given language (en, fr, de, ...)": "vimtutor {{language}}"
            },
            "Explanation": "Vim tutor, teaching the basic vim commands.",
            "More Information Link": ""
        }
    },
    "vipw": {
        "linux": {
            "Examples": {
                "Display the current verson of `vipw`": "vipw --version",
                "Edit the password file": "vipw"
            },
            "Explanation": "Edit the password file.",
            "More Information Link": "https://linux.die.net/man/8/vipw"
        }
    },
    "virsh": {
        "common": {
            "Examples": {
                "Connect to a hypervisor session": "virsh connect {{qemu://system}}",
                "Create a guest from a configuration file": "virsh create {{path/to/config_file.xml}}",
                "Delete a running guest": "virsh destroy {{guest_id}} && virsh undefine {{guest_id}}",
                "Dump guest configuration file": "virsh dumpxml {{guest_id}} > {{path/to/guest.xml}}",
                "Edit a guest's configuration file (editor can be changed with $EDITOR)": "virsh edit {{guest_id}}",
                "List all domains": "virsh list --all",
                "Save the current state of a guest to a file": "virsh save {{guest_id}} {{filename}}",
                "Start/reboot/shutdown/suspend/resume a guest": "virsh {{command}} {{guest_id}}"
            },
            "Explanation": "Manage virsh guest domains.\nNOTE: 'guest_id' can be the id, name or UUID of the guest.",
            "More Information Link": "https://libvirt.org/virshcmdref.html"
        }
    },
    "virt-install": {
        "common": {
            "Examples": {
                "Create a virtual machine with 1 GiB RAM and 12 GiB storage and start Debian installation": "virt-install --memory {{1024}} --disk path={{path/to/image.qcow2}},size={{12}} --cdrom {{path/to/debian.iso}}"
            },
            "Explanation": "Create virtual machines with libvirt and begin OS installation.",
            "More Information Link": "https://virt-manager.org/"
        }
    },
    "virt-sparsify": {
        "common": {
            "Examples": {
                "Create a sparsified compressed image without snapshots from an unsparsified one": "virt-sparsify --compress {{path/to/image.qcow2}} {{path/to/image_new.qcow2}}",
                "Sparsify an image in-place": "virt-sparsify --in-place {{path/to/image.img}}"
            },
            "Explanation": "Make virtual machine drive images thin-provisioned.\nNOTE: Use only for offline machines to avoid data corruption.\nHome page: <https://libguestfs.org/>.",
            "More Information Link": ""
        }
    },
    "virtualboxvm": {
        "windows": {
            "Examples": {
                "Display a command line window with debug information": "virtualboxvm --startvm {{name|uuid}} --debug-command-line",
                "Mount the specified DVD image file": "virtualboxvm --startvm {{name|uuid}} --dvd {{path/to/image_file}}",
                "Start a virtual machine": "virtualboxvm --startvm {{name|uuid}}",
                "Start a virtual machine in a paused state": "virtualboxvm --startvm {{name|uuid}} --start-paused",
                "Start a virtual machine in fullscreen mode": "virtualboxvm --startvm {{name|uuid}} --fullscreen"
            },
            "Explanation": "The VirtualBox virtual machine management CLI.",
            "More Information Link": "https://www.virtualbox.org"
        }
    },
    "virtualenv": {
        "common": {
            "Examples": {
                "Create a new environment": "virtualenv {{path/to/venv}}",
                "Customize the prompt prefix": "virtualenv --prompt={{prompt_prefix}} {{path/to/venv}}",
                "Start (select) the environment": "source {{path/to/venv}}/bin/activate",
                "Stop the environment": "deactivate",
                "Use a different version of Python with virtualenv": "virtualenv --python={{path/to/pythonbin}} {{path/to/venv}}"
            },
            "Explanation": "Create virtual isolated Python environments.",
            "More Information Link": "https://virtualenv.pypa.io/"
        }
    },
    "virtualenvwrapper": {
        "common": {
            "Examples": {
                "Activate or use a different `virtualenv`": "workon {{virtualenv_name}}",
                "Create a `virtualenv` for a specific Python version": "mkvirtualenv --python {{/usr/local/bin/python3.8}} {{virtualenv_name}}",
                "Create a new Python `virtualenv` in `$WORKON_HOME`": "mkvirtualenv {{virtualenv_name}}",
                "Get summary of all virtualenvwrapper commands": "virtualenvwrapper",
                "List all virtual environments": "lsvirtualenv",
                "Remove a `virtualenv`": "rmvirtualenv {{virtualenv_name}}",
                "Stop the `virtualenv`": "deactivate"
            },
            "Explanation": "Group of simple wrapper commands for Python's `virtualenv` tool.",
            "More Information Link": "http://virtualenvwrapper.readthedocs.org"
        }
    },
    "visudo": {
        "common": {
            "Examples": {
                "Check sudoers file for errors": "sudo visudo -c",
                "Edit sudoers file": "sudo visudo"
            },
            "Explanation": "Safely edit the sudoers file.",
            "More Information Link": ""
        }
    },
    "vlc": {
        "common": {
            "Examples": {
                "Play a file": "vlc {{path/to/file}}",
                "Play in fullscreen": "vlc --fullscreen {{path/to/file}}",
                "Play muted": "vlc --no-audio {{path/to/file}}",
                "Play repeatedly": "vlc --loop {{path/to/file}}",
                "Play video from a URL": "vlc {{https://www.youtube.com/watch?v=oHg5SJYRHA0}}"
            },
            "Explanation": "Cross-platform multimedia player.",
            "More Information Link": "https://www.videolan.org/vlc/"
        }
    },
    "vmstat": {
        "linux": {
            "Examples": {
                "Display reports every 2 seconds for 5 times": "vmstat {{2}} {{5}}",
                "Display virtual memory statistics": "vmstat"
            },
            "Explanation": "Report information about processes, memory, paging, block IO, traps, disks and CPU activity.",
            "More Information Link": "https://linux.die.net/man/8/vmstat"
        }
    },
    "vmware-checkvm": {
        "linux": {
            "Examples": {
                "Return the VMWare hardware version": "vmware-checkvm -h",
                "Return the current VMWare software version (exit status determines whether the system is a VM or not)": "vmware-checkvm"
            },
            "Explanation": "Checks to see if the current host is a VMWare VM or not.",
            "More Information Link": ""
        }
    },
    "vncserver": {
        "linux": {
            "Examples": {
                "Kill an instance of VNC Server running on a specific display": "vncserver --kill :{{display_number}}",
                "Launch a VNC Server on next available display": "vncserver",
                "Launch a VNC Server with specific screen geometry": "vncserver --geometry {{width}}x{{height}}"
            },
            "Explanation": "Launches a VNC (Virtual Network Computing) desktop.",
            "More Information Link": ""
        }
    },
    "vncviewer": {
        "linux": {
            "Examples": {
                "Launch a VNC client which connects to a host on a given display": "vncviewer {{host}}:{{display_number}}",
                "Launch a VNC client which connects to a host on a given port": "vncviewer {{host}}::{{port}}",
                "Launch a VNC client with a specific screen geometry": "vncviewer --geometry {{width}}x{{height}} {{host}}:{{display_number}}",
                "Launch in full-screen mode": "vncviewer -FullScreen {{host}}:{{display_number}}"
            },
            "Explanation": "Launches a VNC (Virtual Network Computing) client.",
            "More Information Link": ""
        }
    },
    "vol": {
        "windows": {
            "Examples": {
                "Display the label and serial number for a specific volume": "vol {{D:}}",
                "Display the label and serial number for the current drive": "vol"
            },
            "Explanation": "Display information about volumes.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/vol"
        }
    },
    "vpnc": {
        "linux": {
            "Examples": {
                "Connect with a defined configuration file": "sudo vpnc {{config_file}}",
                "Terminate the previously created connection": "sudo vpnc-disconnect"
            },
            "Explanation": "A VPN client for the Cisco 3000 VPN Concentrator.",
            "More Information Link": ""
        }
    },
    "vrms": {
        "linux": {
            "Examples": {
                "List non-free and contrib packages (and their description)": "vrms",
                "Only output the package names": "vrms --sparse"
            },
            "Explanation": "Report non-free packages installed on Debian-based OSes.",
            "More Information Link": "https://debian.pages.debian.net/vrms/"
        }
    },
    "vsce": {
        "common": {
            "Examples": {
                "List all the extensions created by a publisher": "vsce list {{publisher}}",
                "Package the current working directory as .vsix file": "vsce package",
                "Publish an extension as major, minor or patch version": "vsce publish {{major|minor|patch}}",
                "Show the metadata associated with an extension": "vsce show {{extension_id}}",
                "Unpublish an extension": "vsce unpublish {{extension_id}}"
            },
            "Explanation": "Extension manager for Visual Studio Code.",
            "More Information Link": "https://github.com/microsoft/vscode-vsce"
        }
    },
    "vue": {
        "common": {
            "Examples": {
                "Create a new project with web UI": "vue ui",
                "Create a new vue project interactively": "vue create {{project_name}}"
            },
            "Explanation": "Multi-purpose CLI for Vue.js.",
            "More Information Link": "https://cli.vuejs.org"
        }
    },
    "vue build": {
        "common": {
            "Examples": {
                "Build a `.js` or `.vue` file in production mode with zero config": "vue build {{filename}}"
            },
            "Explanation": "A subcommand provided by `@vue/cli` and `@vue/cli-service-global` that enables quick prototyping.",
            "More Information Link": "https://cli.vuejs.org/guide/prototyping.html"
        }
    },
    "vue init": {
        "common": {
            "Examples": {
                "Create a new project using a local template": "vue init {{path/to/template_directory}} {{project_name}}",
                "Create a new project using a template from GitHub": "vue init {{username}}/{{repo}} {{project_name}}",
                "Create a new project using one of the default templates": "vue init {{webpack|webpack-simple|browserify|browserify-simple|simple}} {{project_name}}"
            },
            "Explanation": "Legacy project initialization subcommand of the Vue.js framework.",
            "More Information Link": "https://cli.vuejs.org/guide/creating-a-project.html#pulling-2-x-templates-legacy"
        }
    },
    "vue serve": {
        "common": {
            "Examples": {
                "Serve a `.js` or `.vue` file in development mode with zero config": "vue serve {{filename}}"
            },
            "Explanation": "A subcommand provided by `@vue/cli` and `@vue/cli-service-global` that enables quick prototyping.",
            "More Information Link": "https://cli.vuejs.org/guide/prototyping.html"
        }
    },
    "w": {
        "common": {
            "Examples": {
                "Show logged-in users info": "w",
                "Show logged-in users info without a header": "w -h"
            },
            "Explanation": "Show who is logged on and what they are doing.\nPrint user login, TTY, remote host, login time, idle time, current process.",
            "More Information Link": ""
        },
        "linux": {
            "Examples": {
                "Display information about a specific user": "w {{user}}",
                "Display information about all users who are currently logged in": "w",
                "Display information without including the header": "w --no-header",
                "Display information without including the login, JCPU and PCPU columns": "w --short"
            },
            "Explanation": "Display who is logged in and their processes.",
            "More Information Link": "https://www.geeksforgeeks.org/w-command-in-linux-with-examples/"
        },
        "osx": {
            "Examples": {
                "Show info about logged-in users, sorted by their idle time": "w -i",
                "Show logged-in users info": "w",
                "Show logged-in users info without a header": "w -h"
            },
            "Explanation": "Show who is logged on and what they are doing.\nPrint user login, TTY, remote host, login time, idle time, current process.",
            "More Information Link": ""
        }
    },
    "w3m": {
        "common": {
            "Examples": {
                "Display your browser history": "Ctrl + H",
                "Open a URL": "w3m {{http://example.com}}",
                "Open a URL in monochrome mode": "w3m {{http://example.com}} -M",
                "Open a URL without mouse support": "w3m {{http://example.com}} --no-mouse",
                "Open a new browser tab": "Shift + T",
                "Quit w3m": "'q' then 'y'"
            },
            "Explanation": "A text-based web browser.\nSupports SSL and mouse input, even over SSH.",
            "More Information Link": "http://w3m.sourceforge.net"
        }
    },
    "wacaw": {
        "osx": {
            "Examples": {
                "Copy image just taken to clipboard": "wacaw --to-clipboard",
                "List the devices available": "wacaw -L",
                "Record a video": "wacaw --video {{filename}} -D {{duration_in_seconds}}",
                "Take a picture from webcam": "wacaw {{filename}}",
                "Take a picture with custom resolution": "wacaw -x {{width}} -y {{height}} {{filename}}"
            },
            "Explanation": "A little command-line tool for macOS that allows you to capture both still pictures and video from an attached camera.",
            "More Information Link": "http://webcam-tools.sourceforge.net"
        }
    },
    "wait": {
        "common": {
            "Examples": {
                "Wait for a process to finish given its process ID (PID) and return its exit status": "wait {{pid}}",
                "Wait for all processes known to the invoking shell to finish": "wait"
            },
            "Explanation": "Wait for a process to complete before proceeding.",
            "More Information Link": ""
        }
    },
    "waitress-serve": {
        "common": {
            "Examples": {
                "Call a factory method that returns a WSGI object": "waitress-serve --call {{import.path.wsgi_factory}}",
                "Listen on port 8080 on localhost": "waitress-serve --listen={{localhost}}:{{8080}} {{import.path:wsgi_func}}",
                "Run a Python web app": "waitress-serve {{import.path:wsgi_func}}",
                "Set the URL scheme to https": "waitress-serve --url-scheme={{https}} {{import.path:wsgi_func}}",
                "Start waitress on a Unix socket": "waitress-serve --unix-socket={{path/to/socket}} {{import.path:wsgi_func}}",
                "Use 4 threads to process requests": "waitress-serve --threads={{4}} {{import.path:wsgifunc}}"
            },
            "Explanation": "Pure Python WSGI HTTP Server.",
            "More Information Link": ""
        }
    },
    "wal": {
        "common": {
            "Examples": {
                "Create a light color scheme": "wal -il {{image.png}}",
                "Create color scheme": "wal -i {{image.png}}",
                "Preview color scheme": "wal --preview {{image.png}}",
                "Restore the previously generated color scheme and wallpaper": "wal -R",
                "Skip setting the desktop wallpaper": "wal -in {{image.png}}",
                "Skip setting the terminal colors": "wal -is {{image.png}}"
            },
            "Explanation": "A tool to create color schemes based on the dominant colors of a wallpaper.",
            "More Information Link": "https://github.com/dylanaraps/pywal"
        }
    },
    "wall": {
        "linux": {
            "Examples": {
                "Send a message": "echo \"{{message}}\" | wall",
                "Send a message from a file": "wall {{file}}",
                "Send a message with timeout (default 300)": "wall -t {{seconds}} {{file}}"
            },
            "Explanation": "Write a message on the terminals of users currently logged in.",
            "More Information Link": ""
        }
    },
    "wapm": {
        "common": {
            "Examples": {
                "Download a package and install it globally": "wapm install --global {{package_name}}",
                "Download a specific version of a package and add it to the list of dependencies in wapm.toml": "wapm install {{package_name}}@{{version}}",
                "Download all the packages listed as dependencies in wapm.toml": "wapm install",
                "Execute a package command using the Wasmer runtime": "wapm run {{command_name}} {{arguments}}",
                "Interactively create a new wapm.toml file": "wapm init",
                "List top-level globally installed packages": "wapm list --global",
                "Print a tree of locally-installed dependencies": "wapm list",
                "Uninstall a package and remove it from the list of dependencies in wapm.toml": "wapm uninstall {{package_name}}"
            },
            "Explanation": "The WebAssembly package manager.",
            "More Information Link": "https://wapm.io/help/reference"
        }
    },
    "wasm-objdump": {
        "common": {
            "Examples": {
                "Display the details of a given section": "wasm-objdump --section '{{import}}' --details {{file.wasm}}",
                "Display the details of each section": "wasm-objdump --details {{file.wasm}}",
                "Display the entire disassembled output of a given binary": "wasm-objdump -d {{file.wasm}}",
                "Display the section headers of a given binary": "wasm-objdump -h {{file.wasm}}"
            },
            "Explanation": "Display information from WebAssembly binaries.",
            "More Information Link": ""
        }
    },
    "wasm-opt": {
        "common": {
            "Examples": {
                "Apply all optimizations and write to a given file (takes more time, but generates optimal code)": "wasm-opt -O4 {{input.wasm}} -o {{output.wasm}}",
                "Apply default optimizations and write to a given file": "wasm-opt -O {{input.wasm}} -o {{output.wasm}}",
                "Optimize a file for size": "wasm-opt -Oz {{input.wasm}} -o {{output.wasm}}",
                "Print the textual representation of the binary to console": "wasm-opt {{input.wasm}} --print"
            },
            "Explanation": "Optimize WebAssembly binary files.",
            "More Information Link": ""
        }
    },
    "wasm2c": {
        "common": {
            "Examples": {
                "Convert a file to a C source file and header and display it to the console": "wasm2c {{file.wasm}}",
                "Write the output to a given file (file.h gets additionally generated)": "wasm2c {{file.wasm}} -o {{file.c}}"
            },
            "Explanation": "Convert a file from the WebAssembly binary format to a C source file and header.",
            "More Information Link": ""
        }
    },
    "wasm2wat": {
        "common": {
            "Examples": {
                "Convert a file to the text format and display it to the console": "wasm2wat {{file.wasm}}",
                "Write the output to a given file": "wasm2wat {{file.wasm}} -o {{file.wat}}"
            },
            "Explanation": "Convert a file from the WebAssembly binary format to the text format.",
            "More Information Link": ""
        }
    },
    "wat2wasm": {
        "common": {
            "Examples": {
                "Display simplified representation of every byte": "wat2wasm -v {{file.wat}}",
                "Parse and check a file for errors": "wat2wasm {{file.wat}}",
                "Write the output binary to a given file": "wat2wasm {{file.wat}} -o {{file.wasm}}"
            },
            "Explanation": "Convert a file from the WebAssembly text format to the binary format.",
            "More Information Link": "https://github.com/WebAssembly/wabt"
        }
    },
    "watch": {
        "common": {
            "Examples": {
                "Monitor the contents of a directory, highlighting differences as they appear": "watch -d {{ls -l}}",
                "Re-run a command every 60 seconds": "watch -n {{60}} {{command}}",
                "Repeatedly run a command and show the result": "watch {{command}}"
            },
            "Explanation": "Execute a program periodically, showing output fullscreen.",
            "More Information Link": ""
        },
        "linux": {
            "Examples": {
                "Monitor \"node\" processes, refreshing every 3 seconds": "watch -n {{3}} \"{{ps aux | grep node}}\"",
                "Monitor disk space and highlight the changes": "watch -d {{df}}",
                "Monitor files in the current directory": "watch {{ls}}"
            },
            "Explanation": "Execute a command repeatedly, and monitor the output in full-screen mode.",
            "More Information Link": ""
        }
    },
    "watchexec": {
        "common": {
            "Examples": {
                "Call `ls -la` when any file in the current directory changes": "watchexec -- {{ls -la}}",
                "Call/restart `my_server` when any file in the current directory change, sending `SIGKILL` to stop the child process": "watchexec --restart --signal {{SIGKILL}} {{my_server}}",
                "Run `make` when any JavaScript, CSS and HTML files in the current directory change": "watchexec --exts {{js,css,html}} make",
                "Run `make` when any file in the `lib` or `src` subdirectories change": "watchexec --watch {{lib}} --watch {{src}} {{make}}"
            },
            "Explanation": "Run arbitrary commands when files change.",
            "More Information Link": "https://github.com/watchexec/watchexec"
        }
    },
    "wc": {
        "common": {
            "Examples": {
                "Count characters (bytes) in file": "wc -c {{file}}",
                "Count characters in file (taking multi-byte character sets into account)": "wc -m {{file}}",
                "Count lines in file": "wc -l {{file}}",
                "Count words in file": "wc -w {{file}}",
                "Use standard input to count lines, words and characters (bytes) in that order": "{{find .}} | wc"
            },
            "Explanation": "Count lines, words, or bytes.",
            "More Information Link": ""
        }
    },
    "weasyprint": {
        "common": {
            "Examples": {
                "Output additional debugging information when rendering": "weasyprint {{path/to/input.html}} {{path/to/output}}.pdf --verbose",
                "Render a HTML file to PDF": "weasyprint {{path/to/input.html}} {{path/to/output}}.pdf",
                "Render a HTML file to PNG, including an additional user stylesheet": "weasyprint {{path/to/input.html}} {{path/to/output}}.png --stylesheet {{path/to/stylesheet.css}}",
                "Specify a base url for relative urls in the input HTML file": "weasyprint {{path/to/input.html}} {{path/to/output}}.png --base-url {{url_or_filename}}",
                "Specify a custom resolution when outputting to PNG": "weasyprint {{path/to/input.html}} {{path/to/output}}.png --resolution {{300}}"
            },
            "Explanation": "Render HTML to PDF or PNG.",
            "More Information Link": "https://weasyprint.org/"
        }
    },
    "web-ext": {
        "common": {
            "Examples": {
                "Build and package the extension": "web-ext build",
                "Display verbose build output": "web-ext build --verbose",
                "Display verbose execution output": "web-ext run --verbose",
                "Lint the manifest and source files for errors": "web-ext lint",
                "Run a web extension from a specific directory in Firefox": "web-ext run --source-dir {{path/to/directory}}",
                "Run a web extension in Firefox Android": "web-ext run --target firefox-android",
                "Run the web extension in the current directory in Firefox": "web-ext run",
                "Sign a package for self-hosting": "web-ext sign --api-key {{api_key}} --api-secret {{api_secret}}"
            },
            "Explanation": "A command line tool for managing web extension development.",
            "More Information Link": "https://www.npmjs.com/package/web-ext"
        }
    },
    "webpack": {
        "common": {
            "Examples": {
                "Automatically recompile on changes to project files": "webpack --watch {{app.js}} {{bundle.js}}",
                "Create a single output file from an entry point file": "webpack {{app.js}} {{bundle.js}}",
                "Load css files too from the js file (this uses the css loader for .css files)": "webpack {{app.js}} {{bundle.js}} --module-bind 'css=css'",
                "Pass a config file (with eg. the entry script and the output filename) and show compilation progress": "webpack --config {{webpack.config.js}} --progress"
            },
            "Explanation": "Bundle a web project's js files and other assets into a single output file.",
            "More Information Link": "https://webpack.js.org"
        }
    },
    "webtorrent": {
        "common": {
            "Examples": {
                "Create a new torrent file for the specified file path": "webtorrent create {{path/to/file}}",
                "Display a list of files for a specific torrent": "webtorrent download \"{{torrent_id}}\" --select",
                "Display information for a magnet uri or .torrent file": "webtorrent info {{path/to/file_or_magnet}}",
                "Download a torrent": "webtorrent download \"{{torrent_id}}\"",
                "Seed a specific file or directory": "webtorrent seed {{path/to/file_or_directory}}",
                "Specify a file index from the torrent to download": "webtorrent download \"{{torrent_id}}\" --select {{index}}",
                "Stream a torrent to VLC media player": "webtorrent download \"{{torrent_id}}\" --vlc",
                "Stream a torrent to a Digital Living Network Alliance (DLNA) device": "webtorrent download \"{{torrent_id}}\" --dlna"
            },
            "Explanation": "The command line interface for WebTorrent.\nSupports magnets, urls, info hashes and .torrent files.",
            "More Information Link": "https://github.com/webtorrent/webtorrent-cli"
        }
    },
    "wget": {
        "common": {
            "Examples": {
                "Continue an incomplete download": "wget -c {{https://example.com}}",
                "Download a file from an HTTP server using Basic Auth (also works for FTP)": "wget --user={{username}} --password={{password}} {{https://example.com}}",
                "Download a single web page and all its resources with 3-second intervals between requests (scripts, stylesheets, images, etc.)": "wget --page-requisites --convert-links --wait=3 {{https://example.com/somepage.html}}",
                "Download all URLs stored in a text file to a specific directory": "wget -P {{path/to/directory}} -i {{URLs.txt}}",
                "Download all listed files within a directory and its sub-directories (does not download embedded page elements)": "wget --mirror --no-parent {{https://example.com/somepath/}}",
                "Download the contents of an URL to a file (named \"bar\" in this case)": "wget -O {{bar}} {{https://example.com/foo}}",
                "Download the contents of an URL to a file (named \"foo\" in this case)": "wget {{https://example.com/foo}}",
                "Limit the download speed and the number of connection retries": "wget --limit-rate={{300k}} --tries={{100}} {{https://example.com/somepath/}}"
            },
            "Explanation": "Download files from the Web.\nSupports HTTP, HTTPS, and FTP.",
            "More Information Link": "https://www.gnu.org/software/wget"
        }
    },
    "whatis": {
        "linux": {
            "Examples": {
                "Display a description from a man page": "whatis {{command}}",
                "Display descriptions for all commands matching a glob": "whatis --wildcard {{net*}}",
                "Don't cut the description off at the end of the line": "whatis --long {{command}}",
                "Search man page descriptions with a regular expression": "whatis --regex '{{wish[0-9]\\.[0-9]}}'"
            },
            "Explanation": "Display one-line descriptions from manual pages.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Search for information about multiple keywords": "whatis {{first_keyword}} {{second_keyword}}",
                "Search for informations about keyword": "whatis {{keyword}}"
            },
            "Explanation": "Tool that searches a set of database files containing short descriptions of system commands for keywords.",
            "More Information Link": "http://www.linfo.org/whatis.html"
        }
    },
    "whence": {
        "osx": {
            "Examples": {
                "Display type of {{command}}, with location if defined as a function, or binary (equivalent to the `type` and `command -V` builtins)": "whence -v {{command}}",
                "Interpret {{command}}, with expansion if defined as an `alias` (similar to the `command -v` builtin)": "whence {{command}}",
                "Same as above, but show all occurrences on command path (equivalent to the `where` builtin)": "whence -ca {{command}}",
                "Same as above, except display content of shell functions instead of location (equivalent to `which` builtin)": "whence -c {{command}}",
                "Search only the `PATH` for {{command}}, ignoring builtins, aliases or shell functions (equivalent to the `where` command)": "whence -p {{command}}"
            },
            "Explanation": "A zsh builtin to indicate how a given command would be interpreted.",
            "More Information Link": ""
        }
    },
    "where": {
        "common": {
            "Examples": {
                "Find all instances of a command": "where {{command}}"
            },
            "Explanation": "Reports all known instances of a command.\nIt could be an executable in the PATH environment variable, an alias, or a shell builtin.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display only the error code for the location of file pattern": "where /Q {{file_pattern}}",
                "Display the location of file pattern": "where {{file_pattern}}",
                "Display the location of file pattern including file size and date": "where /T {{file_pattern}}",
                "Recursively search for file pattern at specified path": "where /R {{path/to/directory}} {{file_pattern}}"
            },
            "Explanation": "Display the location of files that match the search pattern.\nDefaults to current work directory and paths in the PATH environment variable.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/where"
        }
    },
    "whereis": {
        "linux": {
            "Examples": {
                "Locate binaries for gcc in /usr/bin/ only": "whereis -b -B {{/usr/bin/}} -f {{gcc}}",
                "Locate binaries that have unusual manual entries (binaries that have more or less than one manual installed)": "whereis -u -m *",
                "Locate binary and man pages for ls": "whereis -bm {{ls}}",
                "Locate binary, source and man pages for ssh": "whereis {{ssh}}",
                "Locate source of gcc and man pages for git": "whereis -s {{gcc}} -m {{git}}",
                "Locate unusual binaries (those that have more or less than one binary on the system)": "whereis -u *"
            },
            "Explanation": "Locate the binary, source, and manual page files for a command.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Locate binaries for gcc in /usr/bin/ only": "whereis -b -B {{/usr/bin/}} -f {{gcc}}",
                "Locate binary and man pages for ls": "whereis -bm {{ls}}",
                "Locate binary, source and man pages for ssh": "whereis {{ssh}}",
                "Locate source of gcc and man pages for git": "whereis -s {{gcc}} -m {{git}}"
            },
            "Explanation": "Locate the binary, source, and manual page files for a command.",
            "More Information Link": ""
        }
    },
    "which": {
        "common": {
            "Examples": {
                "If there are multiple executables which match, display all": "which -a {{executable}}",
                "Search the PATH environment variable and display the location of any matching executables": "which {{executable}}"
            },
            "Explanation": "Locate a program in the user's path.",
            "More Information Link": ""
        }
    },
    "while": {
        "common": {
            "Examples": {
                "Execute a command forever once every second": "while :; do {{command}}; sleep 1; done",
                "Read `stdin` and perform an action on every line": "while read line; do echo \"$line\"; done"
            },
            "Explanation": "Simple shell loop.",
            "More Information Link": ""
        }
    },
    "whiptail": {
        "linux": {
            "Examples": {
                "Customise the text on the yes / no buttons": "whiptail --title \"{{title}}\" --yes-button \"{{text}}\" --no-button \"{{text}}\" --yesno \"{{message}}\" {{height_in_chars}} {{width_in_chars}}",
                "Display a boolean choice, returning the result through the exit code": "whiptail --title \"{{title}}\" --yesno \"{{message}}\" {{height_in_chars}} {{width_in_chars}}",
                "Display a multiple-choice menu": "{{result_variable_name}}=$(whiptail --title \"{{title}}\" --menu \"{{message}}\" {{height_in_chars}} {{width_in_chars}} {{menu_display_height}} \"{{value_1}}\" \"{{display_text_1}}\" \"{{value_n}}\" \"{{display_text_n}}\" ..... 3>&1 1>&2 2>&3)",
                "Display a password input box": "{{result_variable_name}}=\"$(whiptail --title \"{{title}}\" --passwordbox \"{{message}}\" {{height_in_chars}} {{width_in_chars}} 3>&1 1>&2 2>&3)\"",
                "Display a simple message": "whiptail --title \"{{title}}\" --msgbox \"{{message}}\" {{height_in_chars}} {{width_in_chars}}",
                "Display a text input box": "{{result_variable_name}}=\"$(whiptail --title \"{{title}}\" --inputbox \"{{message}}\" {{height_in_chars}} {{width_in_chars}} {{default_text}} 3>&1 1>&2 2>&3)\""
            },
            "Explanation": "Display text-based dialog boxes from shell scripts.",
            "More Information Link": ""
        }
    },
    "who": {
        "common": {
            "Examples": {
                "Display all available information": "who -a",
                "Display all available information with table headers": "who -a -H",
                "Display information only for the current terminal session": "who am i",
                "Display the username, line, and time of all currently logged-in sessions": "who"
            },
            "Explanation": "Display who is logged in and related data (processes, boot time).",
            "More Information Link": ""
        }
    },
    "whoami": {
        "common": {
            "Examples": {
                "Display currently logged username": "whoami",
                "Display the username after a change in the user ID": "sudo whoami"
            },
            "Explanation": "Print the username associated with the current effective user ID.",
            "More Information Link": ""
        },
        "windows": {
            "Examples": {
                "Display the groups that the current user is a member of": "whoami /groups",
                "Display the logon id of the current user": "whoami /logonid",
                "Display the privileges of the current user": "whoami /priv",
                "Display the user principal name (UPN) of the current user": "whoami /upn",
                "Display the username of the current user": "whoami"
            },
            "Explanation": "Display details about the current user.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/whoami"
        }
    },
    "whois": {
        "common": {
            "Examples": {
                "Get abuse contact for an IP address": "whois -b {{8.8.8.8}}",
                "Get information about a domain name": "whois {{example.com}}",
                "Get information about an IP address": "whois {{8.8.8.8}}"
            },
            "Explanation": "Commandline client for the WHOIS (RFC 3912) protocol.",
            "More Information Link": "https://github.com/rfc1036/whois"
        }
    },
    "wifi-password": {
        "osx": {
            "Examples": {
                "Get the password for the wifi with a specific SSID": "wifi-password {{ssid}}",
                "Get the password for the wifi you are currently logged onto": "wifi-password",
                "Print only the password as output": "wifi-password -q"
            },
            "Explanation": "Get the password of the wifi.",
            "More Information Link": "https://github.com/rauchg/wifi-password"
        }
    },
    "wine": {
        "linux": {
            "Examples": {
                "Install MSI packages": "wine msiexec /i {{package}}",
                "Run Windows-like Package Manager": "wine uninstaller",
                "Run cmd.exe in background": "wine start {{cmd}}",
                "Run ipconfig.exe program": "wine {{ipconfig}} {{/all}}"
            },
            "Explanation": "Run Windows programs on Unix.",
            "More Information Link": "https://wiki.winehq.org/"
        }
    },
    "winget": {
        "windows": {
            "Examples": {
                "Display information about a package": "winget show {{package}}",
                "Install a package": "winget install {{package}}",
                "Search for a package": "winget search {{package}}"
            },
            "Explanation": "Windows Package Manager CLI.",
            "More Information Link": "https://docs.microsoft.com/windows/package-manager/winget"
        }
    },
    "wipefs": {
        "linux": {
            "Examples": {
                "Display signatures for specified device": "sudo wipefs {{/dev/sda}}",
                "Force wipe, even if the filesystem is mounted": "sudo wipefs --all --force {{/dev/sda}}",
                "Perform dry run": "sudo wipefs --all --no-act {{/dev/sda}}",
                "Wipe all available signatures for specified device": "sudo wipefs --all {{/dev/sda}}"
            },
            "Explanation": "Wipe filesystem, raid, or partition-table signatures from a device.",
            "More Information Link": ""
        }
    },
    "wmctrl": {
        "linux": {
            "Examples": {
                "List all windows, managed by the window manager": "wmctrl -l",
                "Move a window to the current workspace, raise it and give it focus": "wmctrl -R {{window_title}}",
                "Select a window a move it to a workspace": "wmctrl -r {{window_title}} -t {{workspace_number}}",
                "Select a window and toggle fullscreen": "wmctrl -r {{window_title}} -b toggle,fullscreen",
                "Switch to a workspace": "wmctrl -s {{workspace_number}}",
                "Switch to the first window whose (partial) title matches": "wmctrl -a {{window_title}}"
            },
            "Explanation": "CLI for X Window Manager.",
            "More Information Link": ""
        }
    },
    "wmic": {
        "windows": {
            "Examples": {
                "Access specific fields such as process name, process ID and parent process ID": "wmic process get {{name,processid,parentprocessid}}",
                "Display information about a specific process": "wmic process where {{name=\"example.exe\"}} list full",
                "Display specific fields for a specific process": "wmic process where processid={{pid}} get {{name,commandline}}",
                "Fundamental grammar": "wmic {{alias}} {{where_clause}} {{verb_clause}}",
                "Kill a process": "wmic process {{pid}} delete",
                "Show brief details about the currently running processes": "wmic process list brief",
                "Show full details about the currently running processes": "wmic process list full"
            },
            "Explanation": "Interactive shell for detailed information about running processes.",
            "More Information Link": "https://docs.microsoft.com/windows-server/administration/windows-commands/wmic"
        }
    },
    "wodim": {
        "linux": {
            "Examples": {
                "Burn a file to a disc, ejecting the disc once done (some recorders require this)": "wodim -eject dev=/dev/{{optical_drive}} -data {{file.iso}}",
                "Burn a file to the disc in an optical drive, potentially writing to multiple discs in succession": "wodim -tao dev=/dev/{{optical_drive}} -data {{file.iso}}",
                "Display optical drives available to `wodim`": "wodim --devices",
                "Record (\"burn\") an audio-only disc": "wodim dev=/dev/{{optical_drive}} -audio {{track*.cdaudio}}"
            },
            "Explanation": "Command (aliased as `cdrecord` on some systems) for recording data to CDs or DVDs.\nSome invocations of wodim can cause destructive actions, such as erasing all the data on a disc.",
            "More Information Link": ""
        }
    },
    "wordgrinder": {
        "common": {
            "Examples": {
                "Open a given file": "wordgrinder {{filename}}",
                "Show the menu": "Alt + M",
                "Start wordgrinder (loads a blank document by default)": "wordgrinder"
            },
            "Explanation": "Command-line word processor.",
            "More Information Link": "https://cowlark.com/wordgrinder"
        }
    },
    "wormhole": {
        "common": {
            "Examples": {
                "Receive a file": "wormhole receive {{wormhole_code}}",
                "Send a file": "wormhole send {{path/to/file}}",
                "Send raw text": "wormhole send"
            },
            "Explanation": "Get things from one computer to another, safely.",
            "More Information Link": "https://magic-wormhole.readthedocs.io/en/latest/"
        }
    },
    "wpa_cli": {
        "linux": {
            "Examples": {
                "Add a network": "wpa_cli add_network {{number}}",
                "Enable network": "wpa_cli enable_network {{number}}",
                "Save config": "wpa_cli save_config",
                "Scan for available networks": "wpa_cli scan",
                "Set a network's SSID": "wpa_cli set_network {{number}} ssid \"{{SSID}}\"",
                "Show scan results": "wpa_cli scan_results"
            },
            "Explanation": "Add and configure wlan interfaces.",
            "More Information Link": ""
        }
    },
    "wpa_passphrase": {
        "linux": {
            "Examples": {
                "Compute and display WPA-PSK key for a given SSID specifying the passphrase as an argument": "wpa_passphrase {{SSID}} {{passphrase}}",
                "Compute and display the WPA-PSK key for a given SSID reading the passphrase from stdin": "wpa_passphrase {{SSID}}"
            },
            "Explanation": "Generate a WPA-PSK key from an ASCII passphrase for a given SSID.",
            "More Information Link": ""
        }
    },
    "wpa_supplicant": {
        "common": {
            "Examples": {
                "Join a protected wireless network": "wpa_supplicant -i {{interface}} -c {{path/to/wpa_supplicant_conf.conf}}",
                "Join a protected wireless network and run it in a daemon": "wpa_supplicant -B -i {{interface}} -c {{path/to/wpa_supplicant_conf.conf}}"
            },
            "Explanation": "Manage protected wireless networks.",
            "More Information Link": ""
        }
    },
    "wpscan": {
        "common": {
            "Examples": {
                "Execute a password guessing attack on a Wordpress website": "wpscan --url {{url}} --usernames {{username|path/to/usernames.txt}} --passwords {{path/to/passwords.txt}} threads {{20}}",
                "Perform user identifiers enumeration on a Wordpress website": "wpscan --url {{url}} --enumerate {{u}}",
                "Scan a Wordpress website": "wpscan --url {{url}}",
                "Scan a Wordpress website through a proxy": "wpscan --url {{url}} --proxy {{protocol://ip:port}} --proxy-auth {{username:password}}",
                "Scan a Wordpress website, checking for vulnerable plugins and specifying the path to the `wp-content` directory": "wpscan --url {{url}} --enumerate {{vp}} --wp-content-dir {{remote/path/to/wp-content}}",
                "Scan a Wordpress website, collecting vulnerability data from the WPVulnDB (https://wpvulndb.com/)": "wpscan --url {{url}} --api-token {{token}}",
                "Scan a Wordpress website, using random user agents and passive detection": "wpscan --url {{url}} --stealthy",
                "Update the vulnerability database": "wpscan --update"
            },
            "Explanation": "Wordpress vulnerability scanner.",
            "More Information Link": "https://github.com/wpscanteam/wpscan"
        }
    },
    "write": {
        "common": {
            "Examples": {
                "Send a message to a given user on a given terminal id": "write {{username}} {{terminal_id}}",
                "Send message to \"jhondoe\" on pseudo terminal \"/dev/pts/5\"": "write {{jhondoe}} {{pts/5}}",
                "Send message to \"testuser\" on terminal \"/dev/tty/5\"": "write {{testuser}} {{tty/5}}"
            },
            "Explanation": "Write a message on the terminal of a specified logged in user (ctrl-C to stop writing messages).\nUse the `who` command to find out all terminal_ids of all active users active on the system. See also `mesg`.",
            "More Information Link": ""
        }
    },
    "wrk": {
        "common": {
            "Examples": {
                "Run a benchmark for `30` seconds, using `12` threads, and keeping `400` HTTP connections open": "wrk -t{{12}} -c{{400}} -d{{30s}} \"{{http://127.0.0.1:8080/index.html}}\"",
                "Run a benchmark with a custom header": "wrk -t{{2}} -c{{5}} -d{{5s}} -H \"{{Host: example.com}}\" \"{{http://example.com/index.html}}\"",
                "Run a benchmark with a request timeout of `2` seconds": "wrk -t{{2}} -c{{5}} -d{{5s}} --timeout {{2s}} \"{{http://example.com/index.html}}\""
            },
            "Explanation": "HTTP benchmarking tool.",
            "More Information Link": "https://github.com/wg/wrk"
        }
    },
    "wsl": {
        "windows": {
            "Examples": {
                "Change the version of the specified distribution": "wsl --set-version {{distribution}} {{version}}",
                "Export a distribution to a .tar file": "wsl --export {{distribution}} {{path/to/distro_fs.tar}}",
                "Import a distribution from a .tar file": "wsl --import {{distribution}} {{path/to/install_location}} {{path/to/distro_fs.tar}}",
                "List available distributions": "wsl --list",
                "Run a Linux command without using a shell": "wsl --exec {{command}} {{command_arguments}}",
                "Shut down Windows Subsystem for Linux": "wsl --shutdown",
                "Specify a particular distribution": "wsl --distribution {{distribution}} {{shell_command}}",
                "Start a Linux shell (in the default distribution)": "wsl {{shell_command}}"
            },
            "Explanation": "Manage the Windows Subsystem for Linux from the command line.",
            "More Information Link": "https://docs.microsoft.com/windows/wsl/reference"
        }
    },
    "wtf": {
        "linux": {
            "Examples": {
                "Expand a given acronym": "wtf {{IMO}}",
                "Specify a computer related search type": "wtf -t {{comp}} {{WWW}}"
            },
            "Explanation": "Show the expansions of acronyms.",
            "More Information Link": "https://manpages.debian.org/bsdgames/wtf.6.en.html"
        }
    },
    "wuzz": {
        "common": {
            "Examples": {
                "Display help information": "F1",
                "Send an HTTP request": "Ctrl + R",
                "Start wuzz": "wuzz",
                "Switch to the next view": "Ctrl + J, Tab",
                "Switch to the previous view": "Ctrl + K, Shift + Tab"
            },
            "Explanation": "Tool to interactively inspect HTTP requests and responses.",
            "More Information Link": "https://github.com/asciimoo/wuzz"
        }
    },
    "x11vnc": {
        "linux": {
            "Examples": {
                "Launch a VNC server in view-only mode, and which won't terminate once the last client disconnects": "x11vnc -forever -viewonly",
                "Launch a VNC server on a specific display and screen (both starting at index zero)": "x11vnc -display :{{display}}.{{screen}}",
                "Launch a VNC server on the first display's second screen": "x11vnc -display :{{0}}.{{1}}",
                "Launch a VNC server on the third display's default screen": "x11vnc -display :{{2}}",
                "Launch a VNC server that allows multiple clients to connect": "x11vnc -shared"
            },
            "Explanation": "A VNC server that will enable VNC on an existing display ser.\nBy default, the server will automatically terminate once all clients disconnect from it.",
            "More Information Link": ""
        }
    },
    "x_x": {
        "common": {
            "Examples": {
                "View a CSV file with unconventional delimiters": "x_x --delimiter={{';'}} --quotechar={{'|'}} {{file.csv}}",
                "View an XLSX or CSV file": "x_x {{file.xlsx|file.csv}}",
                "View an XLSX or CSV file, using the first row as table headers": "x_x -h {{0}} {{file.xlsx|file.csv}}"
            },
            "Explanation": "View Excel and CSV files from the command-line.",
            "More Information Link": "https://github.com/kristianperkins/x_x"
        }
    },
    "xar": {
        "linux": {
            "Examples": {
                "Create a xar archive of all files in a given directory": "xar -cf {{archive.xar}} {{path/to/directory}}",
                "Extract the contents of a given xar archive to the current directory": "xar -xf {{archive.xar}}",
                "List the contents of a given xar archive": "xar -tf {{archive.xar}}"
            },
            "Explanation": "Manage .xar archives.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Create a xar archive of all files in a given directory": "xar -cf {{archive.xar}} {{path/to/directory}}",
                "Extract the contents of a given xar archive to the current directory": "xar -xf {{archive.xar}}",
                "Lis[t] the contents of a given xar archive": "xar -tf {{archive.xar}}"
            },
            "Explanation": "Manage .xar archives.",
            "More Information Link": "https://linux.die.net/man/1/xar"
        }
    },
    "xargs": {
        "common": {
            "Examples": {
                "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
                "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
                "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
                "Run a command using the input data as arguments": "{{arguments_source}} | xargs {{command}}",
                "Run multiple chained commands on the input data": "{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} | {{command3}}\""
            },
            "Explanation": "Execute a command with piped arguments coming from another command, a file, etc.\nThe input is treated as a single block of text and split into separate pieces on spaces, tabs, newlines and end-of-file.",
            "More Information Link": ""
        }
    },
    "xattr": {
        "osx": {
            "Examples": {
                "Delete all extended attributes from a given file": "xattr -c {{file}}",
                "Delete an attribute from a given file": "xattr -d {{com.apple.quarantine}} {{file}}",
                "List key:value extended attributes for a given file": "xattr -l {{file}}",
                "Recursively delete an attribute in a given directory": "xattr -rd {{attribute_key}} {{directory}}",
                "Write an attribute for a given file": "xattr -w {{attribute_key}} {{attribute_value}} {{file}}"
            },
            "Explanation": "Utility to work with extended filesystem attributes.",
            "More Information Link": ""
        }
    },
    "xbacklight": {
        "linux": {
            "Examples": {
                "Decrease current brightness by 75%": "xbacklight -dec {{75}}",
                "Get the current screen brightness as a percentage": "xbacklight",
                "Increase backlight to 100%, over 60 seconds (value given in ms), using 60 steps": "xbacklight -set {{100}} -time {{60000}} -steps {{60}}",
                "Increase current brightness by 25%": "xbacklight -inc {{25}}",
                "Set the screen brightness to 40%": "xbacklight -set {{40}}"
            },
            "Explanation": "Utility to adjust backlight brightness using the RandR extension.",
            "More Information Link": "https://gitlab.freedesktop.org/xorg/app/xbacklight"
        }
    },
    "xbps": {
        "linux": {
            "Examples": {
                "Install packages and synchronize them with the remote repository": "xbps-install --synchronize {{package_name1}} {{package_name2}}",
                "Remove a package and all of its dependencies recursively that are not required by other packages": "xbps-remove --recursive {{package_name}}",
                "Remove a package, leaving all of its dependencies installed": "xbps-remove {{package_name}}",
                "Remove obsolete packages from the cache": "xbps-remove --clean-cache",
                "Remove packages that were installed as dependencies and aren't currently needed": "xbps-remove --remove-orphans",
                "Search for a package in the remote repository": "xbps-query --repository -s {{package_name}}",
                "Synchronize your repository databases and update your system and dependencies": "xbps-install --synchronize -u"
            },
            "Explanation": "The X Binary Package System (or xbps) is the binary package system used by Void Linux.",
            "More Information Link": "https://github.com/void-linux/xbps"
        }
    },
    "xcaddy": {
        "common": {
            "Examples": {
                "Build Caddy and output to a specific file": "xcaddy build --output {{path/to/file}}",
                "Build Caddy server from source": "xcaddy build",
                "Build Caddy server with a specific version (defaults to latest)": "xcaddy build {{version}}",
                "Build Caddy with a specific module": "xcaddy build --with {{module_name}}",
                "Build and run Caddy for a development plugin in the current directory": "xcaddy run",
                "Build and run Caddy for a development plugin using a specific Caddy config": "xcaddy run --config {{path/to/file}}"
            },
            "Explanation": "The custom build tool for the Caddy Web Server.",
            "More Information Link": "https://github.com/caddyserver/xcaddy"
        }
    },
    "xclip": {
        "linux": {
            "Examples": {
                "Copy the contents of a PNG image into the system clipboard (can be pasted in other programs correctly)": "xclip -sel clip -t image/png {{input_file.png}}",
                "Copy the contents of a file into the system clipboard": "xclip -sel clip {{input_file.txt}}",
                "Copy the contents of a file to the system clipboard, using short notation": "echo 123 | xclip -sel clip",
                "Copy the output from a command to a given X11 selection area": "echo 123 | xclip -selection {{primary|secondary|clipboard}}",
                "Copy the output from a command to the X11 primary selection area (clipboard)": "echo 123 | xclip",
                "Paste the contents of the X11 primary selection area to the console": "xclip -o",
                "Paste the contents of the system clipboard into a file": "xclip -o -sel clip > {{output_file.txt}}",
                "Paste the contents of the system clipboard to the console": "xclip -o -sel clip"
            },
            "Explanation": "X11 clipboard manipulation tool, similar to `xsel`.\nHandles the X primary and secondary selections, plus the system clipboard (`Ctrl + C`/`Ctrl + V`).",
            "More Information Link": ""
        }
    },
    "xclock": {
        "linux": {
            "Examples": {
                "Display a 12-hour digital clock with the hour and minute fields only": "xclock -digital -twelve -brief",
                "Display a 24-hour digital clock with the hour and minute fields only": "xclock -digital -brief",
                "Display a 24-hour digital clock with the hour, minute and second fields that updates every second": "xclock -digital -strftime '%H:%M:%S' -update 1",
                "Display a digital clock using an strftime format string (see strftime(3))": "xclock -digital -strftime {{format}}",
                "Display an analog clock": "xclock"
            },
            "Explanation": "Display the time in analog or digital form.",
            "More Information Link": ""
        }
    },
    "xcode-select": {
        "osx": {
            "Examples": {
                "Discard any user-specified developer directory so that it will be found via the default search mechanism": "sudo xcode-select -r",
                "Install Xcode's command-line tools": "xcode-select --install",
                "Print the currently selected developer directory": "xcode-select -p",
                "Select a given Xcode instance and use its developer directory as the active one": "xcode-select -s {{path/to/Xcode.app}}",
                "Select a given path as the active developer directory": "xcode-select -s {{path/to/Xcode.app/Contents/Developer}}"
            },
            "Explanation": "Switch between different versions of Xcode and the included developer tools.\nAlso used to update the path to Xcode if it is moved after installation.",
            "More Information Link": ""
        }
    },
    "xcodebuild": {
        "osx": {
            "Examples": {
                "Build project": "xcodebuild -target {{target_name}} -configuration {{configuration_name}} clean build SYMROOT={{SYMROOT_path}}",
                "Build workspace": "xcodebuild -workspace {{workspace_name.workspace}} -scheme {{scheme_name}} -configuration {{configuration_name}} clean build SYMROOT={{SYMROOT_path}}",
                "Show SDKs": "xcodebuild -showsdks"
            },
            "Explanation": "Build Xcode projects.",
            "More Information Link": ""
        }
    },
    "xcopy": {
        "windows": {
            "Examples": {
                "Allow resuming when network connection is lost": "xcopy {{path/to/file_or_directory}} {{path/to/destination}} /z",
                "Copy the directory structure only, excluding files": "xcopy {{path/to/file_or_directory}} {{path/to/destination}} /t",
                "Copy the file(s) to the specified destination": "xcopy {{path/to/file_or_directory}} {{path/to/destination}}",
                "Disable the prompt when the file exists in the destination": "xcopy {{path/to/file_or_directory}} {{path/to/destination}} /y",
                "Display detailed usage information": "xcopy /?",
                "Include empty directories when copying": "xcopy {{path/to/file_or_directory}} {{path/to/destination}} /e",
                "Keep the source ACL in the destination": "xcopy {{path/to/file_or_directory}} {{path/to/destination}} /o",
                "List files that will be copied before copying": "xcopy {{path/to/file_or_directory}} {{path/to/destination}} /p"
            },
            "Explanation": "Copy files and directory trees.",
            "More Information Link": ""
        }
    },
    "xctool": {
        "osx": {
            "Examples": {
                "Build a project that is part of a workspace": "xctool -workspace {{YourWorkspace.xcworkspace}} -scheme {{YourScheme}} build",
                "Build a single project without any workspace": "xctool -project {{YourProject.xcodeproj}} -scheme {{YourScheme}} build",
                "Clean, build and execute all the tests": "xctool -workspace {{YourWorkspace.xcworkspace}} -scheme {{YourScheme}} clean build test"
            },
            "Explanation": "Tool for building Xcode projects.",
            "More Information Link": "https://github.com/facebook/xctool"
        }
    },
    "xcv": {
        "common": {
            "Examples": {
                "Copy a file": "xcv c {{input_file}}",
                "Cut a file": "xcv x {{input_file}}",
                "List files available for pasting": "xcv l",
                "Paste a file": "xcv v {{output_file}}"
            },
            "Explanation": "Cut, copy, and paste in the command-line.",
            "More Information Link": "https://github.com/busterc/xcv"
        }
    },
    "xdg-user-dirs-update": {
        "common": {
            "Examples": {
                "Change XDG's DESKTOP directory to the specified directory (must be absolute)": "xdg-user-dirs-update --set DESKTOP \"{{path/to/directory}}\"",
                "Write the result to the specified dry-run-file instead of the `user-dirs.dirs` file": "xdg-user-dirs-update --dummy-output \"{{path/to/dry_run_file}}\" --set {{xdg_user_directory}} \"{{path/to/directory}}\""
            },
            "Explanation": "Update XDG user directories.",
            "More Information Link": "https://manpages.ubuntu.com/manpages/bionic/man1/xdg-user-dirs-update.1.html"
        }
    },
    "xdotool": {
        "linux": {
            "Examples": {
                "Click the right mouse button": "xdotool click {{3}}",
                "Focus on the window with id of 12345": "xdotool windowfocus --sync {{12345}}",
                "Get the id of the currently active window": "xdotool getactivewindow",
                "Press the enter key": "xdotool key {{KP_Enter}}",
                "Retrieve the X-Windows window ID of the running Firefox window(s)": "xdotool search --onlyvisible --name {{firefox}}",
                "Type a message, with a 500ms delay for each letter": "xdotool type --delay {{500}} \"Hello world\""
            },
            "Explanation": "Command line automation for X11.",
            "More Information Link": ""
        }
    },
    "xed": {
        "osx": {
            "Examples": {
                "Open a file in XCode and jump to line number 75": "xed -l 75 {{filename}}",
                "Open file in XCode": "xed {{file1}}",
                "Open file(s) in XCode, create if it doesn't exist": "xed -c {{filename1}}"
            },
            "Explanation": "Opens files for editing in XCode.",
            "More Information Link": ""
        }
    },
    "xeyes": {
        "linux": {
            "Examples": {
                "Launch xeyes on a remote machine's display 0, screen 0": "xeyes -display {{remote_host}}:{{0}}.{{0}}",
                "Launch xeyes on the local machine's default display": "xeyes"
            },
            "Explanation": "Display eyes on the screen that follow the mouse cursor.",
            "More Information Link": ""
        }
    },
    "xfce4-screenshooter": {
        "linux": {
            "Examples": {
                "Launch the screenshooter GUI": "xfce4-screenshooter",
                "Take a screenshot of a region of the screen (select using the mouse)": "xfce4-screenshooter --region",
                "Take a screenshot of the active window, and copy it to the clipboard": "xfce4-screenshooter --window --clipboard",
                "Take a screenshot of the active window, and open it with a chosen program": "xfce4-screenshooter --window --open {{gimp}}",
                "Take a screenshot of the entire screen and launch the GUI to ask how to proceed": "xfce4-screenshooter --fullscreen",
                "Take a screenshot of the entire screen and save it in the specified directory": "xfce4-screenshooter --fullscreen --save {{path/to/directory}}",
                "Wait some time before taking the screenshot": "xfce4-screenshooter --delay {{seconds}}"
            },
            "Explanation": "The XFCE4 screenshot tool.",
            "More Information Link": ""
        }
    },
    "xfce4-terminal": {
        "linux": {
            "Examples": {
                "Execute a command in a new terminal window": "xfce4-terminal --command \"{{command_with_args}}\"",
                "Keep the terminal around after the executed command finishes executing": "xfce4-terminal --command \"{{command_with_args}}\" --hold",
                "Open a new tab in the current terminal window": "xfce4-terminal --tab",
                "Open a new terminal window": "xfce4-terminal",
                "Open multiple new tabs, executing a command in each": "xfce4-terminal --tab --command \"{{command_a}}\" --tab --command \"{{command_b}}\"",
                "Set the initial title": "xfce4-terminal --initial-title \"{{initial_title}}\""
            },
            "Explanation": "The XFCE4 terminal emulator.",
            "More Information Link": ""
        }
    },
    "xgettext": {
        "common": {
            "Examples": {
                "Append new strings to an existing file": "xgettext --join-existing --output {{path/to/output_file}} {{path/to/input_file}}",
                "Don't add a header containing metadata to the output file": "xgettext --omit-header {{path/to/input_file}}",
                "Scan file and output strings to `messages.po`": "xgettext {{path/to/input_file}}",
                "Use a different output filename": "xgettext --output {{path/to/output_file}} {{path/to/input_file}}"
            },
            "Explanation": "Extract gettext strings from code files.",
            "More Information Link": "https://www.gnu.org/software/gettext/manual/html_node/xgettext-Invocation.html"
        }
    },
    "xinput": {
        "linux": {
            "Examples": {
                "Disable an input": "xinput disable {{id}}",
                "Disconnect an input from its master": "xinput float {{id}}",
                "Enable an input": "xinput enable {{id}}",
                "List all input devices": "xinput list",
                "Reattach an input as slave to a master": "xinput reattach {{id}} {{master_id}}"
            },
            "Explanation": "List available input devices, query information about a device and change input device settings.",
            "More Information Link": ""
        }
    },
    "xip": {
        "osx": {
            "Examples": {
                "Expand the archive into the current working directory": "xip --expand {{path/to/file.xip}}"
            },
            "Explanation": "Create or expand compressed files in a secure xip archive.\nOnly archives signed by Apple are trusted, so this tool should not be used to create archives.",
            "More Information Link": ""
        }
    },
    "xkill": {
        "common": {
            "Examples": {
                "Display a cursor to kill a window when pressing the left mouse button (press any other mouse button to cancel)": "xkill"
            },
            "Explanation": "Kill a window interactively in a graphical session.\nSee also `kill` and `killall`.",
            "More Information Link": ""
        }
    },
    "xman": {
        "linux": {
            "Examples": {
                "Open the manual page output stored in a given file": "xman -helpfile {{filename}}",
                "Show both manual page and directory": "xman -bothshown",
                "Start xman in three-button window": "xman"
            },
            "Explanation": "Manual page viewer for X Window System.",
            "More Information Link": ""
        }
    },
    "xmllint": {
        "common": {
            "Examples": {
                "Check that a XML file meets the requirements of its DOCTYPE declaration": "xmllint --valid {{source_file.xml}}",
                "Return all nodes (tags) named \"foo\"": "xmllint --xpath \"//{{foo}}\" {{source_file.xml}}",
                "Return human-readable (indented) XML from file": "xmllint --format {{source_file.xml}}",
                "Return the contents of the first node named \"foo\" as a string": "xmllint --xpath \"string(//{{foo}})\" {{source_file.xml}}",
                "Return the href attribute of the second anchor element in an html file": "xmllint --html --xpath \"string(//a[2]/@href)\" webpage.xhtml",
                "Validate XML against DTD schema hosted online": "xmllint --dtdvalid {{URL}} {{source_file.xml}}"
            },
            "Explanation": "XML parser and linter that supports XPath, a syntax for navigating XML trees.",
            "More Information Link": ""
        }
    },
    "xmlto": {
        "common": {
            "Examples": {
                "Convert a DocBook XML document to HTML format and store the resulting files in a separate directory": "xmlto -o {{path/to/html_files}} {{html}} {{document.xml}}",
                "Convert a DocBook XML document to PDF format": "xmlto {{pdf}} {{document.xml}}",
                "Convert a DocBook XML document to a single HTML file": "xmlto {{html-nochunks}} {{document.xml}}",
                "Specify a stylesheet to use while converting a DocBook XML document": "xmlto -x {{stylesheet.xsl}} {{output-format}} {{document.xml}}"
            },
            "Explanation": "Apply an XSL stylesheet to an XML document.",
            "More Information Link": "https://pagure.io/xmlto"
        }
    },
    "xo": {
        "common": {
            "Examples": {
                "Automatically fix any lint issues found": "xo --fix",
                "Lint a given set of files": "xo {{file1}}.js {{file2}}.js",
                "Lint files in the \"src\" directory": "xo",
                "Lint using spaces as indentation instead of tabs": "xo --space",
                "Lint using the \"prettier\" code style": "xo --prettier"
            },
            "Explanation": "A pluggable, zero-configuration linting utility for JavaScript.",
            "More Information Link": "https://github.com/xojs/xo"
        }
    },
    "xpdf": {
        "common": {
            "Examples": {
                "Open a PDF file": "xpdf {{path/to/file.pdf}}",
                "Open a PDF file in fullscreen mode": "xpdf -fullscreen {{path/to/file.pdf}}",
                "Open a compressed PDF file": "xpdf {{path/to/file.pdf.tar}}",
                "Open a specific page in a PDF file": "xpdf {{path/to/file.pdf}} :{{page_number}}",
                "Specify the initial zoom": "xpdf -z {{75}}% {{path/to/file.pdf}}",
                "Specify the initial zoom at page width or full page": "xpdf -z {{page|width}} {{path/to/file.pdf}}"
            },
            "Explanation": "Portable Document Format (PDF) file viewer.",
            "More Information Link": "https://www.xpdfreader.com/xpdf-man.html"
        }
    },
    "xrandr": {
        "linux": {
            "Examples": {
                "Change the resolution and update frequency of DisplayPort 1 to 1920x1080, 60Hz": "xrandr --output {{DP1}} --mode {{1920x1080}} --rate {{60}}",
                "Disable disconnected outputs and enable connected ones with default settings": "xrandr --auto",
                "Disable the VGA1 output": "xrandr --output {{VGA1}} --off",
                "Display the current state of the system (known screens, resolutions, ...)": "xrandr --query",
                "See display hardware information": "xrandr -q",
                "Set brightness for LVDS1 to 50%": "xrandr --output {{LVDS1}} --brightness {{0.5}}",
                "Set the resolution of HDMI2 to 1280x1024 and put it on the right of DP1": "xrandr --output {{HDMI2}} --mode {{1280x1024}} --right-of {{DP1}}"
            },
            "Explanation": "Set the size, orientation and/or reflection of the outputs for a screen.",
            "More Information Link": ""
        }
    },
    "xsel": {
        "linux": {
            "Examples": {
                "Clear the clipboard": "xsel -cb",
                "Output the X11 primary selection's contents into the terminal (equivalent to a mouse middle-click)": "xsel -op",
                "Output the clipboard's contents into a file": "xsel -ob > {{file}}",
                "Output the clipboard's contents into the terminal (equivalent to `Ctrl + V`)": "xsel -ob",
                "Use a command's output as input of the clip[b]oard (equivalent to `Ctrl + C`)": "echo 123 | xsel -ib",
                "Use the contents of a file as input of the clipboard": "cat {{file}} | xsel -ib"
            },
            "Explanation": "X11 selection and clipboard manipulation tool.",
            "More Information Link": ""
        }
    },
    "xsetwacom": {
        "linux": {
            "Examples": {
                "List all the available wacom devices. The device name is in the first column": "xsetwacom list",
                "Rotate the input (useful for tablet-PC when rotating screen) by 0|90|180|270 degrees from \"natural\" rotation": "xsetwacom set \"{{device_name}}\" Rotate {{none|half|cw|ccw}}",
                "Set Wacom area to specific screen. Get name of the screen with `xrandr`": "xsetwacom set \"{{device_name}}\" MapToOutput {{screen}}",
                "Set button to only work when the tip of the pen is touching the tablet": "xsetwacom set \"{{device_name}}\" TabletPCButton \"on\"",
                "Set mode to relative (like a mouse) or absolute (like a pen) mode": "xsetwacom set \"{{device_name}}\" Mode \"{{Relative|Absolute}}\""
            },
            "Explanation": "Command line tool to change settings for Wacom pen tablets at runtime.",
            "More Information Link": ""
        }
    },
    "xsltproc": {
        "osx": {
            "Examples": {
                "Pass a value to a parameter in the stylesheet": "xsltproc --output {{output.html}} --stringparam {{name}} {{value}} {{stylesheet.xslt}} {{xmlfile.xml}}",
                "Transform an XML file with a specific XSLT stylesheet": "xsltproc --output {{output.html}} {{stylesheet.xslt}} {{xmlfile.xml}}"
            },
            "Explanation": "Transform XML with XSLT to produce output (usually HTML or XML).",
            "More Information Link": ""
        }
    },
    "xsv": {
        "common": {
            "Examples": {
                "Count the number of entries": "xsv count {{path/to/file.csv}}",
                "Get an overview of the shape of entries": "xsv stats {{path/to/file.csv}} | xsv table",
                "Inspect the headers of a file": "xsv headers {{path/to/file.csv}}",
                "Join a column from one file to another": "xsv join --no-case {{column_a}} {{path/to/file/a.csv}} {{column_b}} {{path/to/file/b.csv}} | xsv table",
                "Select a few columns": "xsv select {{column_a,column_b}} {{path/to/file.csv}}",
                "Show 10 random entries": "xsv sample {{10}} {{path/to/file.csv}}"
            },
            "Explanation": "A CSV command line toolkit written in Rust.",
            "More Information Link": "https://github.com/BurntSushi/xsv"
        }
    },
    "xterm": {
        "linux": {
            "Examples": {
                "Open the terminal in fullscreen mode": "xterm -fullscreen",
                "Open the terminal using a Serif font and a font size equal to 20": "xterm -fa {{'Serif'}} -fs {{20}}",
                "Open the terminal with 100 characters per line and 35 lines, in screen position x=200px, y=20px": "xterm -geometry {{100}}x{{35}}+{{200}}+{{20}}",
                "Open the terminal with a dark blue background and yellow foreground (font color)": "xterm -bg {{darkblue}} -fg {{yellow}}",
                "Open the terminal with a title of `Example`": "xterm -T {{Example}}"
            },
            "Explanation": "A terminal emulator for the X Window System.",
            "More Information Link": ""
        }
    },
    "xtrlock": {
        "linux": {
            "Examples": {
                "Display a blank screen as well as the padlock cursor": "xtrlock -b",
                "Fork the xtrlock process and return immediately": "xtrlock -f",
                "Lock the display and show a padlock instead of the cursor": "xtrlock"
            },
            "Explanation": "Lock the X display until the user supplies their password.",
            "More Information Link": ""
        }
    },
    "xvfb-run": {
        "linux": {
            "Examples": {
                "Pass arguments to the Xvfb server": "xvfb-run --server-args \"{{-screen 0 1024x768x24}}\" {{command}}",
                "Run the specified command in a virtual X server": "xvfb-run {{command}}",
                "Try to get a free server number, if the default (99) is not available": "xvfb-run --auto-servernum {{command}}"
            },
            "Explanation": "Run a command in a virtual X server environment.",
            "More Information Link": "https://www.x.org/wiki/"
        }
    },
    "xxd": {
        "common": {
            "Examples": {
                "Display output only up to a length of 32 bytes": "xxd -l {{32}} {{input_file}}",
                "Display the output in plain mode, without any gaps between the columns": "xxd -p {{input_file}}",
                "Display the output with 10 columns of one octet (byte) each": "xxd -c {{10}} {{input_file}}",
                "Generate a hexdump from a binary file and display the output": "xxd {{input_file}}",
                "Generate a hexdump from a binary file and save it as a text file": "xxd {{input_file}} {{output_file}}",
                "Revert a plaintext hexdump back into binary, and save it as a binary file": "xxd -r -p {{input_file}} {{output_file}}"
            },
            "Explanation": "Create a hexadecimal representation (hexdump) from a binary file, or vice-versa.",
            "More Information Link": ""
        }
    },
    "xz": {
        "common": {
            "Examples": {
                "Compress a file to the lzma file format": "xz --format=lzma {{file}}",
                "Compress a file to the xz file format": "xz {{file}}",
                "Compress a file using the best compression": "xz -9 {{file}}",
                "Compress a file using the fastest compression": "xz -0 {{file}}",
                "Compress a file, but don't delete the original": "xz -k {{file}}",
                "Decompress a file and write to `stdout`": "xz -dc {{file.xz}}",
                "Decompress a xz file": "xz -d {{file.xz}}",
                "Decompress an lzma file": "xz -d --format=lzma {{file.lzma}}"
            },
            "Explanation": "Compress or decompress .xz and .lzma files.",
            "More Information Link": "https://tukaani.org/xz/format.html"
        }
    },
    "yaa": {
        "osx": {
            "Examples": {
                "Create an archive from a directory": "yaa archive -d {{path/to/directory}} -o {{path/to/output.yaa}}",
                "Create an archive from a file": "yaa archive -i {{path/to/file}} -o {{path/to/output.yaa}}",
                "Create an archive with a specific compression algorithm": "yaa archive -a {{algorithm}} -d {{path/to/directory}} -o {{path/to/output.yaa}}",
                "Create an archive with an 8MB block size": "yaa archive -b {{8m}} -d {{path/to/directory}} -o {{path/to/output.yaa}}",
                "Extract an archive to the current directory": "yaa extract -i {{path/to/archive.yaa}}",
                "List the contents of an archive": "yaa list -i {{path/to/archive.yaa}}"
            },
            "Explanation": "Create and manipulate YAA archives.",
            "More Information Link": ""
        }
    },
    "yabai": {
        "osx": {
            "Examples": {
                "Disable window shadow": "yabai -m config window_shadow off",
                "Enable opacity": "yabai -m config window_opacity on",
                "Enable status bar": "yabai -m config status_bar on",
                "Set the layout to bsp": "yabai -m config layout {{bsp}}",
                "Set the window gap to 10pt": "yabai -m config window_gap {{10}}"
            },
            "Explanation": "A tiling window manager for macOS based on binary space partitioning.",
            "More Information Link": "https://github.com/koekeishiya/yabai"
        }
    },
    "yank": {
        "linux": {
            "Examples": {
                "Only yank fields matching a specific pattern": "{{ps ux}} | yank -g \"{{[0-9]+}}\"",
                "Yank an entire line": "{{sudo dmesg}} | yank -l",
                "Yank using a specific delimiter": "{{echo hello=world}} | yank -d {{=}}",
                "Yank using the default delimiters (\\f, \\n, \\r, \\s, \\t)": "{{sudo dmesg}} | yank"
            },
            "Explanation": "Read input from `stdin` and display a selection interface that allows a field to be selected and copied to the clipboard.",
            "More Information Link": ""
        },
        "osx": {
            "Examples": {
                "Only yank fields matching a specific pattern": "{{ps ux}} | yank -g \"{{[0-9]+}}\"",
                "Yank an entire line": "{{sudo dmesg}} | yank -l",
                "Yank using a specific delimiter": "{{echo hello=world}} | yank -d {{=}}",
                "Yank using the default delimiters (\\f, \\n, \\r, \\s, \\t)": "{{sudo dmesg}} | yank"
            },
            "Explanation": "Read input from `stdin` and display a selection interface that allows a field to be selected and copied to the clipboard.",
            "More Information Link": ""
        }
    },
    "yaourt": {
        "linux": {
            "Examples": {
                "Install a new package (includes AUR)": "yaourt -S {{package_name}}",
                "List installed packages, versions, and repositories (AUR packages will be listed under the repository name 'local')": "yaourt -Q",
                "Remove a package and its dependencies (includes AUR packages)": "yaourt -Rs {{package_name}}",
                "Search the package database for a keyword (including AUR)": "yaourt -Ss {{package_name}}",
                "Synchronize and update all packages (including AUR)": "yaourt -Syua"
            },
            "Explanation": "Arch Linux utility for building packages from the Arch User Repository.",
            "More Information Link": ""
        }
    },
    "yarn": {
        "common": {
            "Examples": {
                "Identify whether a module is a dependency and list other modules that depend upon it": "yarn why {{module_name}}",
                "Install a module and save it as a dependency to the `package.json` file (add `--dev` to save as a dev dependency)": "yarn add {{module_name}}@{{version}}",
                "Install a module globally": "yarn global add {{module_name}}",
                "Install all dependencies referenced in the `package.json` file (the `install` is optional)": "yarn install",
                "Interactively create a `package.json` file": "yarn init",
                "Uninstall a module and remove it from the `package.json` file": "yarn remove {{module_name}}"
            },
            "Explanation": "JavaScript and Node.js package manager alternative.",
            "More Information Link": "https://yarnpkg.com"
        }
    },
    "yarn-why": {
        "common": {
            "Examples": {
                "Show why a Yarn package is installed": "yarn-why {{package_name}}"
            },
            "Explanation": "Identifies why a Yarn package has been installed.",
            "More Information Link": "https://www.npmjs.com/package/yarn-why"
        }
    },
    "yay": {
        "linux": {
            "Examples": {
                "Install a new package from the repos and AUR": "yay -S {{package_name}}",
                "Interactively search and install packages from the repos and AUR": "yay {{package_name|search_term}}",
                "Search the package database for a keyword from the repos and AUR": "yay -Ss {{keyword}}",
                "Show statistics for installed packages and system health": "yay -Ps",
                "Synchronize and update all packages from the repos and AUR": "yay",
                "Synchronize and update only AUR packages": "yay -Sua"
            },
            "Explanation": "Yet Another Yogurt: A utility for Arch Linux to build and install packages from the Arch User Repository.\nAlso see `pacman`.",
            "More Information Link": ""
        }
    },
    "yes": {
        "common": {
            "Examples": {
                "Accept everything prompted by the `apt-get` command": "yes | sudo apt-get install {{program}}",
                "Repeatedly output \"message\"": "yes {{message}}",
                "Repeatedly output \"y\"": "yes"
            },
            "Explanation": "Output something repeatedly.\nThis command is commonly used to answer yes to every prompt by install commands (such as apt-get).",
            "More Information Link": ""
        }
    },
    "yesod": {
        "common": {
            "Examples": {
                "Create a new scaffolded site, with sqlite as backend, in the \"my-project\" directory": "stack new {{my-project}} {{yesod-sqlite}}",
                "Deploy application using Keter (Yesod's deployment manager)": "stack exec -- yesod keter",
                "Install the Yesod CLI tool within a Yesod scaffolded site": "stack build yesod-bin cabal-install --install-ghc",
                "Start development server": "stack exec -- yesod devel",
                "Touch files with altered Template Haskell dependencies": "stack exec -- yesod touch"
            },
            "Explanation": "Helper tool for Yesod, a Haskell-based web framework.\nAll Yesod commands are invoked through the `stack` project manager.",
            "More Information Link": "https://github.com/yesodweb/yesod"
        }
    },
    "youtube-dl": {
        "common": {
            "Examples": {
                "Download a particular language's subtitles along with the video": "youtube-dl --sub-lang {{en}} --write-sub '{{https://www.youtube.com/watch?v=Mwa0_nE9H7A}}'",
                "Download a playlist and extract mp3 from it": "youtube-dl -i --extract-audio --audio-format mp3 -o \"%(title)s.%(ext)s\" '{{url to playlist}}'",
                "Download a video or playlist": "youtube-dl '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'",
                "Download a video or playlist at a specific quality": "youtube-dl --format \"{{best[height<=480]}}\" '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'",
                "Download the audio from a video and convert it to an MP3": "youtube-dl -x --audio-format {{mp3}} '{{url}}'",
                "Download the best quality audio and video and merge them": "youtube-dl -f bestvideo+bestaudio '{{url}}'",
                "Download video(s) as MP4 files with custom filenames": "youtube-dl --format {{mp4}} -o \"{{%(title)s by %(uploader)s on %(upload_date)s in %(playlist)s.%(ext)s}}\" '{{url}}'",
                "List all formats that a video or playlist is available in": "youtube-dl --list-formats '{{https://www.youtube.com/watch?v=Mwa0_nE9H7A}}'"
            },
            "Explanation": "Download videos from YouTube and other websites.",
            "More Information Link": "http://rg3.github.io/youtube-dl/"
        }
    },
    "youtube-viewer": {
        "common": {
            "Examples": {
                "Display a search prompt and play the selected video in 720p": "youtube-viewer -{{7}}",
                "Login to your YouTube account": "youtube-viewer --login",
                "Search for a video": "youtube-viewer {{search_term}}",
                "Watch a video with a specific URL in VLC": "youtube-viewer --player={{vlc}} {{https://youtube.com/watch?v=dQw4w9WgXcQ}}"
            },
            "Explanation": "Command-line application for searching and playing videos from YouTube.",
            "More Information Link": "https://github.com/trizen/youtube-viewer"
        }
    },
    "yum": {
        "linux": {
            "Examples": {
                "Display available updates for installed packages": "yum check-update",
                "Find the package that provides a particular command": "yum provides {{command}}",
                "Install a new package": "yum install {{package}}",
                "Install a new package and assume yes to all questions (also works with update, great for automated updates)": "yum -y install {{package}}",
                "Remove a package": "yum remove {{package}}",
                "Upgrade installed packages to newest available versions": "yum upgrade"
            },
            "Explanation": "Package management utility for RHEL, Fedora, and CentOS (for older versions).",
            "More Information Link": "https://man7.org/linux/man-pages/man8/yum.8.html"
        }
    },
    "z": {
        "common": {
            "Examples": {
                "Go to a directory that contains \"foo\" and then \"bar\"": "z {{foo}} {{bar}}",
                "Go to a directory that contains \"foo\" in the name": "z {{foo}}",
                "Go to the highest-ranked directory matching \"foo\"": "z -r {{foo}}",
                "Go to the most recently accessed directory matching \"foo\"": "z -t {{foo}}",
                "List all directories in `z`'s database matching \"foo\"": "z -l {{foo}}",
                "Remove the current directory from `z`'s database": "z -x ."
            },
            "Explanation": "Tracks the most used directories and enables quickly navigating to them using string or regex patterns.",
            "More Information Link": "https://github.com/rupa/z"
        }
    },
    "zbarimg": {
        "common": {
            "Examples": {
                "Process an image file": "zbarimg {{image_file}}"
            },
            "Explanation": "Scan and decode bar codes from image file(s).",
            "More Information Link": "http://zbar.sourceforge.net"
        }
    },
    "zcat": {
        "common": {
            "Examples": {
                "Print compression details of a gzipped file to the standard output": "zcat -l {{file.txt.gz}}",
                "Print the uncompressed contents of a gzipped file to the standard output": "zcat {{file.txt.gz}}"
            },
            "Explanation": "Print data from gzip compressed files.",
            "More Information Link": ""
        }
    },
    "zdb": {
        "common": {
            "Examples": {
                "Show detailed configuration for a specific ZFS pool": "zdb -C {{poolname}}",
                "Show detailed configuration of all mounted ZFS zpools": "zdb",
                "Show statistics about number, size and deduplication of blocks": "zdb -b {{poolname}}"
            },
            "Explanation": "ZFS debugger.",
            "More Information Link": ""
        }
    },
    "zenity": {
        "linux": {
            "Examples": {
                "Display a file selection form in which the user can only select directories": "zenity --file-selection --directory",
                "Display a name/password form and output the data separated by \";\"": "zenity --forms --add-entry=\"{{Name}}\" --add-password=\"{{Password}}\" --separator=\"{{;}}\"",
                "Display a progress bar which updates its message every second and show a progress percent": "{{(echo \"#1\"; sleep 1; echo \"50\"; echo \"#2\"; sleep 1; echo \"100\")}} | zenity --progress",
                "Display an info dialog displaying the text \"Hello!\"": "zenity --info --text=\"{{Hello!}}\"",
                "Display the default question dialog": "zenity --question"
            },
            "Explanation": "Display dialogs from the command line/shell scripts.\nReturn user-inserted values or 1 if error.",
            "More Information Link": ""
        }
    },
    "zfs": {
        "common": {
            "Examples": {
                "Change mountpoint for a filesystem": "zfs set mountpoint={{/my/mount/path}} {{pool_name/filesystem_name}}",
                "Create a Snapshot of a ZFS filesystem": "zfs snapshot {{pool_name/filesystem_name}}@{{snapshot_name}}",
                "Create a new ZFS filesystem": "zfs create {{pool_name/filesystem_name}}",
                "Delete a ZFS filesystem": "zfs destroy {{pool_name/filesystem_name}}",
                "Enable compression on a filesystem": "zfs set compression=on {{pool_name/filesystem_name}}",
                "List all available zfs filesystems": "zfs list"
            },
            "Explanation": "Manage ZFS filesystems.",
            "More Information Link": ""
        }
    },
    "zgrep": {
        "linux": {
            "Examples": {
                "Display the lines which don’t have the pattern present (Invert the search function)": "zgrep -v {{pattern}} {{path/to/compressed/file}}",
                "Grep a compressed file for multiple patterns": "zgrep -e \"{{pattern_1}}\" -e \"{{pattern_2}}\" {{path/to/compressed/file}}",
                "Grep a pattern in a compressed file (case-insensitive)": "zgrep -i {{pattern}} {{path/to/compressed/file}}",
                "Grep a pattern in a compressed file (case-sensitive)": "zgrep {{pattern}} {{path/to/compressed/file}}",
                "Output count of lines containing matched pattern in a compressed file": "zgrep -c {{pattern}} {{path/to/compressed/file}}",
                "Print 3 lines of [C]ontext around, [B]efore, or [A]fter each match": "zgrep -{{C|B|A}} {{3}} {{pattern}} {{path/to/compressed/file}}",
                "Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`)": "zgrep -E {{^regex$}} {{path/to/file}}"
            },
            "Explanation": "Grep text patterns from files within compressed file (equivalent to grep -Z).",
            "More Information Link": ""
        }
    },
    "zile": {
        "linux": {
            "Examples": {
                "Open a file": "zile {{path/to/file}}",
                "Open a file at a specified line number": "zile +{{line_number}} {{path/to/file}}",
                "Quit": "Ctrl + X, Ctrl + C",
                "Save a file": "Ctrl + X, Ctrl + S",
                "Start a buffer for temporary notes, which won't be saved": "zile",
                "Undo changes": "Ctrl + X, U"
            },
            "Explanation": "Zile is a lightweight clone of the Emacs text editor.",
            "More Information Link": "https://www.gnu.org/software/zile/"
        }
    },
    "zip": {
        "common": {
            "Examples": {
                "Add files to an existing zip file": "zip {{compressed.zip}} {{path/to/file}}",
                "Archive a directory and its contents to a multi-part [s]plit zip file (e.g. 3GB parts)": "zip -r -s {{3g}} {{compressed.zip}} {{path/to/dir}}",
                "Archive a directory and its contents with the highest level [9] of compression": "zip -r -{{9}} {{compressed.zip}} {{/path/to/dir}}",
                "Create an encrypted archive (user will be prompted for a password)": "zip -e -r {{compressed.zip}} {{path/to/dir}}",
                "Delete files from an existing zip file": "zip -d {{compressed.zip}} \"{{foo/*.tmp}}\"",
                "E[x]clude unwanted files from being added to the compressed archive": "zip -r {{compressed.zip}} {{path/to/dir}} -x {{path/to/exclude}}",
                "Package and compress a directory and its contents, [r]ecursively": "zip -r {{compressed.zip}} {{/path/to/dir}}",
                "Package and compress multiple directories and files": "zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}"
            },
            "Explanation": "Package and compress (archive) files into zip file.",
            "More Information Link": ""
        }
    },
    "zipalign": {
        "common": {
            "Examples": {
                "Align the data of a ZIP file on 4-byte boundaries": "zipalign {{4}} {{path/to/input.zip}} {{path/to/output.zip}}",
                "Check that a ZIP file is correctly aligned on 4-byte boundaries and display the results in a verbose manner": "zipalign -v -c {{4}} {{path/to/input.zip}}"
            },
            "Explanation": "Zip archive alignment tool.\nPart of the Android SDK build tools.",
            "More Information Link": "https://developer.android.com/studio/command-line/zipalign"
        }
    },
    "zless": {
        "common": {
            "Examples": {
                "Page through a compressed archive with `less`": "zless {{file.txt.gz}}"
            },
            "Explanation": "View compressed files.",
            "More Information Link": ""
        }
    },
    "zola": {
        "common": {
            "Examples": {
                "Build all pages just like the build command would, but without writing any of the results to disk": "zola check",
                "Build and serve the site using a local server (default is `127.0.0.1:1111`)": "zola serve",
                "Build the whole site in the `public` directory after deleting it": "zola build",
                "Build the whole site into a different directory": "zola build --output-dir {{path/to/output_directory/}}",
                "Create the directory structure used by Zola at the given directory": "zola init {{my_site}}"
            },
            "Explanation": "A static site generator in a single binary with everything built-in.",
            "More Information Link": "https://www.getzola.org/documentation/getting-started/cli-usage/"
        }
    },
    "zopflipng": {
        "common": {
            "Examples": {
                "Optimize a PNG image": "zopflipng {{input.png}} {{output.png}}",
                "Optimize several PNG images and save with given prefix": "zopflipng --prefix={{prefix}} {{image1.png}} {{image2.png}} {{image3.png}}"
            },
            "Explanation": "PNG image compression utility.",
            "More Information Link": "https://github.com/google/zopfli"
        }
    },
    "zoxide": {
        "common": {
            "Examples": {
                "Add a directory or increment its rank": "zoxide add {{path/to/dir}}",
                "Generate shell configuration for command aliases (`z`, `za`, `zi`, `zq`, `zr`)": "zoxide init {{bash|fish|zsh}}",
                "Go to the highest-ranked directory that contains \"foo\" and then \"bar\"": "zoxide query {{foo}} {{bar}}",
                "Go to the highest-ranked directory that contains \"foo\" in the name": "zoxide query {{foo}}",
                "Remove a directory from `zoxide`'s database": "zoxide remove {{path/to/dir}}",
                "Start an interactive directory search (requires `fzf`)": "zoxide query --interactive"
            },
            "Explanation": "Keep track of the most frequently used directories.\nUses a ranking algorithm to navigate to the best match.",
            "More Information Link": "https://github.com/ajeetdsouza/zoxide"
        }
    },
    "zpool": {
        "common": {
            "Examples": {
                "Add a cache (L2ARC) device to a zpool": "zpool add {{pool_name}} cache {{cache_disk}}",
                "Check a ZFS pool for errors (verifies the checksum of EVERY block). Very CPU and disk intensive": "zpool scrub {{pool_name}}",
                "Create a mirrored pool": "zpool create {{pool_name}} mirror {{disk1}} {{disk2}} mirror {{disk3}} {{disk4}}",
                "Export a zpool (unmount all filesystems)": "zpool export {{pool_name}}",
                "Import a zpool": "zpool import {{pool_name}}",
                "List zpools available for import": "zpool import",
                "Show the configuration and status of all ZFS zpools": "zpool status",
                "Show the history of all pool operations": "zpool history {{pool_name}}"
            },
            "Explanation": "Manage ZFS pools.",
            "More Information Link": ""
        }
    },
    "zramctl": {
        "linux": {
            "Examples": {
                "Check if zram is enabled": "lsmod | grep -i zram",
                "Enable zram with a dynamic number of devices (use `zramctl` to configure devices further)": "sudo modprobe zram",
                "Enable zram with exactly 2 devices": "sudo modprobe zram num_devices={{2}}",
                "Find and initialise the next free zram device to a 2GB virtual drive using LZ4 compression": "sudo zramctl --find --size {{2GB}} --algorithm {{lz4}}",
                "List currently initialised devices": "zramctl"
            },
            "Explanation": "Setup and control zram devices.\nUse `mkfs` or `mkswap` to format zram devices to partitions.",
            "More Information Link": ""
        }
    },
    "zsh": {
        "common": {
            "Examples": {
                "Execute command passed as parameter": "zsh -c {{command}}",
                "Run commands from file (script)": "zsh {{file}}",
                "Run commands from file and print them as they are executed": "zsh -x {{file}}",
                "Start interactive command line interpreter": "zsh"
            },
            "Explanation": "Z SHell.\n`bash` and `sh`-compatible command line interpreter.",
            "More Information Link": "https://www.zsh.org"
        }
    },
    "zstd": {
        "common": {
            "Examples": {
                "Compress a file into a new file with the .zst suffix": "zstd {{file}}",
                "Compress a file specifying the compression level, where 1=fastest, 19=slowest and 3=default": "zstd -{{level}} {{file}}",
                "Decompress a file": "zstd -d {{file}}.zst",
                "Decompress to `stdout`": "zstd -dc {{file}}.zst",
                "Unlock higher compression levels (up to 22) using more memory (both for compression and decompression)": "zstd --ultra -{{level}} {{file}}"
            },
            "Explanation": "Compress or decompress files with Zstandard compression.",
            "More Information Link": "https://github.com/facebook/zstd"
        }
    },
    "zsteg": {
        "common": {
            "Examples": {
                "Detect embedded data in a BMP image, specifying the bits to consider": "zsteg --bits {{1,2,3|1-3}} {{path/to/image.bmp}}",
                "Detect embedded data in a BMP image, specifying the minimum length of the strings to be found and the find mode": "zsteg --min-str-len {{10}} --strings {{first|all|longest|none}} {{path/to/image.bmp}}",
                "Detect embedded data in a BMP image, using all known methods": "zsteg --all {{path/to/image.bmp}}",
                "Detect embedded data in a PNG image": "zsteg {{path/to/image.png}}",
                "Detect embedded data in a PNG image, extracting only prime pixels and inverting bits": "zsteg --prime --invert {{path/to/image.png}}",
                "Detect embedded data in a PNG image, iterating pixels vertically and using MSB first": "zsteg --msb --order yx {{path/to/image.png}}"
            },
            "Explanation": "Steganography detection tool for PNG and BMP file formats.\nIt detects LSB steganography, ZLIB-compressed data, OpenStego, Camouflage and LSB with the Eratosthenes set.",
            "More Information Link": "https://github.com/zed-0xff/zsteg"
        }
    },
    "zypper": {
        "linux": {
            "Examples": {
                "Install a new package": "zypper install {{package}}",
                "Remove a package": "zypper remove {{package}}",
                "Search package via keyword": "zypper search {{keyword}}",
                "Synchronize list of packages and versions available": "zypper refresh",
                "Upgrade installed packages to newest available versions": "zypper update"
            },
            "Explanation": "SUSE & openSUSE package management utility.",
            "More Information Link": ""
        }
    }
}