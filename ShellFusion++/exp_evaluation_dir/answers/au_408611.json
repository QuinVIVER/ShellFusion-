{
  "Query": "How to remove or delete single cron job using linux command?",
  "Answers": [
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree",
        "nl2bash_5403: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play",
        "nl2bash_8281: search for all regular/normal files in the current folder and display the number of lines in the file"
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'",
        "nl2bash_5403: find /tmp/ -ctime -1 -name \"x*\" | xargs -I '{}' mv '{}' ~/play/\n\n\nfind /tmp/ -ctime -1 -name 'x*' -print0 | xargs -r0 mv -t ~/play/",
        "nl2bash_8281: find . -type f -print | xargs -L1 wc -l\n\n\nfind . -type f -print0 | xargs -0L1 wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7704: find all the log files in the file system",
        "nl2bash_5384: Find the total size of *.jpg files within the directory tree ./photos/john_doe",
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_7704: find / -name \"*.log\"",
        "nl2bash_5384: find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$",
        "nl2bash_5383: find . -iname \"*.jpg\" -ls |perl -lane '$t += $F[6]; print $t/1024/1024/1024 . \" GB\"'\n\n\nfind . -iname '*.jpg' -type f -printf '%b\\t%D:%i\\n' |   sort -u | cut -f1 | paste -sd+ - | bc\n\n\nfind . -type f -iname '*.jpg' -print0 | du -c --files0-from=-\n\n\nfind . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'"
      ],
      "Explanations about Options": {
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-type": "File is of type c:",
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_210: Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable.",
        "nl2bash_13363: Save the canonical path of \"/usr/bin/java\" with \"/bin/java\" removed to variable \"JAVA_HOME\""
      ],
      "Top-3 Scripts": [
        "nl2bash_210: basedir=$(dirname \"$(echo \"$0\" | sed -e 's,\\\\,/,g')\")",
        "nl2bash_13363: JAVA_HOME=$(readlink -f /usr/bin/java | sed \"s:/bin/java::\")"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and change the process name",
      "Most Similar TLDR Script": "exec -a {{process_name}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5403: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play"
      ],
      "Top-3 Scripts": [
        "nl2bash_5403: find /tmp/ -ctime -1 -name 'x*' -exec sh -c '   exec mv \"$@\" ~/play/' sh {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "Show the size of a single directory, in human readable units",
      "Most Similar TLDR Script": "du -sh {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5384: Find the total size of *.jpg files within the directory tree ./photos/john_doe",
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5384: find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$",
        "nl2bash_5383: find . -type f -iname '*.jpg' -print0 | du -c --files0-from=-\n\n\nfind . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'"
      ],
      "Explanations about Options": {
        "-h": "print sizes in human readable format (e.g., 1K 234M 2G)",
        "-c": "produce a grand total",
        "-a": "write counts for all files, not just directories"
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12590: change owner of the file file.sh to user root"
      ],
      "Top-3 Scripts": [
        "nl2bash_12590: $sudo chown root file.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13492: Stores system load average number in the 'proc_load_average' variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_13492: proc_load_average=$(w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.')\n\n\nproc_load_average=`w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.'`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5403: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play"
      ],
      "Top-3 Scripts": [
        "nl2bash_5403: find /tmp/ -ctime -1 -name 'x*' -exec sh -c '   exec mv \"$@\" ~/play/' sh {} +"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_210: Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_210: basedir=$(cygpath -am \"$(dirname \"$0\")\")\n\n\nbasedir=$(cygpath -m \"$(dirname \"$0\")\")\n\n\nbasedir=$(dirname \"$(echo \"$0\" | sed -e 's,\\\\,/,g')\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl script",
      "Most Similar TLDR Script": "perl {{script.pl}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -iname \"*.jpg\" -ls |perl -lane '$t += $F[6]; print $t/1024/1024/1024 . \" GB\"'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8783: split content of the file inputfile except lines started with \"^t:\" into pieces per 200 lines",
        "nl2bash_5384: Find the total size of *.jpg files within the directory tree ./photos/john_doe"
      ],
      "Top-3 Scripts": [
        "nl2bash_8783: cat inputfile | grep \"^t\\:\" | split -l 200",
        "nl2bash_5384: find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} + | grep total$"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree",
        "nl2bash_5431: Finds all logged in users."
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -iname \"*.jpg\" -ls |perl -lane '$t += $F[6]; print $t/1024/1024/1024 . \" GB\"'\n\n\nfind . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'",
        "nl2bash_5431: w | awk '{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8783: split content of the file inputfile except lines started with \"^t:\" into pieces per 200 lines"
      ],
      "Top-3 Scripts": [
        "nl2bash_8783: cat inputfile | grep \"^t\\:\" | split -l 200"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree",
        "nl2bash_5431: Finds all logged in users."
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -type f -iname '*.jpg' -print0 | xargs -r0 du -a| awk '{sum+=$1} END {print sum}'",
        "nl2bash_5431: w | awk '{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_210: Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_210: basedir=$(dirname \"$(echo \"$0\" | sed -e 's,\\\\,/,g')\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13492: Stores system load average number in the 'proc_load_average' variable.",
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_13492: proc_load_average=$(w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.')\n\n\nproc_load_average=`w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.'`",
        "nl2bash_5383: find . -iname '*.jpg' -type f -printf '%b\\t%D:%i\\n' |   sort -u | cut -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Recursively change the owner of a directory and its contents",
      "Most Similar TLDR Script": "chown -R {{user}} {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12590: change owner of the file file.sh to user root"
      ],
      "Top-3 Scripts": [
        "nl2bash_12590: $sudo chown root file.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5403: Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play"
      ],
      "Top-3 Scripts": [
        "nl2bash_5403: find /tmp/ -ctime -1 -name \"x*\" -exec mv '{}' ~/play/\n\n\nfind /tmp/ -ctime -1 -name \"x*\" | xargs -I '{}' mv '{}' ~/play/\n\n\nfind /tmp/ -ctime -1 -name 'x*' -exec sh -c '   exec mv \"$@\" ~/play/' sh {} +\n\n\nfind /tmp/ -ctime -1 -name 'x*' -print0 | xargs -r0 mv -t ~/play/"
      ],
      "Explanations about Options": {
        "-t": "move all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13906: Counts lines in file 'file1' and shows progress bar while doing.",
        "nl2bash_8281: search for all regular/normal files in the current folder and display the number of lines in the file"
      ],
      "Top-3 Scripts": [
        "nl2bash_13906: pv file1 | wc -l",
        "nl2bash_8281: find . -type f -print | xargs -L1 wc -l\n\n\nfind . -type f -print0 | xargs -0L1 wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13363: Save the canonical path of \"/usr/bin/java\" with \"/bin/java\" removed to variable \"JAVA_HOME\"",
        "nl2bash_13361: Save the canonical filename of the script in variable \"me\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13363: JAVA_HOME=$(readlink -f /usr/bin/java | sed \"s:/bin/java::\")",
        "nl2bash_13361: me=$(readlink --canonicalize --no-newline $0)"
      ],
      "Explanations about Options": {
        "--no-newline": "do not output the trailing delimiter",
        "--canonicalize": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist",
        "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
      }
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Calculate the result of an expression",
      "Most Similar TLDR Script": "bc <<< \"(1 + 2) * 2 ^ 2\"",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -iname '*.jpg' -type f -printf '%b\\t%D:%i\\n' |   sort -u | cut -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using the specified delimiter",
      "Most Similar TLDR Script": "paste -s -d {{delimiter}} {{file}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -iname '*.jpg' -type f -printf '%b\\t%D:%i\\n' |   sort -u | cut -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_12488114: How to remove one billion files from single directory on linux?"
      ],
      "Top-3 Scripts": [
        "so_12488114: find /test/ -name '*.mp3' -delete"
      ],
      "Explanations about Options": {
        "-d": "FILE\n FILE exists and is a directory",
        "-t": "FD file descriptor FD is opened on a terminal",
        "-n": "STRING\n the length of STRING is nonzero",
        "-e": "FILE\n FILE exists"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13492: Stores system load average number in the 'proc_load_average' variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_13492: proc_load_average=$(w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.')\n\n\nproc_load_average=`w | head -1 | cut -d\" \" -f13 | cut -d\",\" -f1-2 | tr ',' '.'`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5383: Find the total size of *.jpg files within the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5383: find . -iname '*.jpg' -type f -printf '%b\\t%D:%i\\n' |   sort -u | cut -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run"
      }
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8783: split content of the file inputfile except lines started with \"^t:\" into pieces per 200 lines"
      ],
      "Top-3 Scripts": [
        "nl2bash_8783: cat inputfile | grep \"^t\\:\" | split -l 200"
      ],
      "Explanations about Options": {
        "-l": "put NUMBER lines/records per output file"
      }
    },
    {
      "Command": "pv",
      "MP Summary": "monitor the progress of data through a pipe",
      "Most Similar TLDR Task": "Attach to an already running process and see its file reading progress",
      "Most Similar TLDR Script": "pv -d {{PID}}",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13906: Counts lines in file 'file1' and shows progress bar while doing."
      ],
      "Top-3 Scripts": [
        "nl2bash_13906: pv file1 | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13362: Save the canonical path of \"$dir/$file\" in variable \"path\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13362: path=`readlink --canonicalize \"$dir/$file\"`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13363: Save the canonical path of \"/usr/bin/java\" with \"/bin/java\" removed to variable \"JAVA_HOME\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13363: JAVA_HOME=$(readlink -f /usr/bin/java | sed \"s:/bin/java::\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Counts lines in file 'file1' and shows progress bar while doing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "pv file1 | wc -l\n",
          "command-options": {
            "pv": {
              "mpsum": "monitor the progress of data through a pipe"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "pv": {
              "man1_pv_27706": "monitor progress data pipe attach alreadi run process see file read progress filter file see progress amount output data measur speed amount data flow pipe -s option print content file display progress bar read erron file skip error dd conv sync noerror would stop read read specifi amount data rate limit 1k"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5388: Find things changed today"
      ],
      "Top-3 Scripts": [
        "nl2bash_5388: find /path/to/search -daystart -ctime -1"
      ],
      "Explanations about Options": {}
    }
  ]
}