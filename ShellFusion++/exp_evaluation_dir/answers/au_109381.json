{
  "Query": "How to add path of a program to $PATH environment variable?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9856: Print the list of 1st level subdirectories in /fss/fin",
        "nl2bash_10568: Copy a file xyz.c to all the .c files present in the C directory and below",
        "nl2bash_10528: Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory."
      ],
      "Top-3 Scripts": [
        "nl2bash_9856: find /fss/fin -d 1 -type d -name \"*\" -print",
        "nl2bash_10568: find ./C -name \"*.c\" | xargs -n1  cp xyz.c",
        "nl2bash_10528: find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar"
      ],
      "Explanations about Options": {
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print."
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Use the full path of source files, creating any missing intermediate directories when copying",
      "Most Similar TLDR Script": "cp --parents {{source/path/to/file}} {{path/to/target_file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10568: Copy a file xyz.c to all the .c files present in the C directory and below",
        "nl2bash_10534: Copies newest file under the current folder to the '/tmp/'",
        "nl2bash_10528: Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory."
      ],
      "Top-3 Scripts": [
        "nl2bash_10568: find ./C -name \"*.c\" | xargs -n1  cp xyz.c",
        "nl2bash_10534: cp $(ls -1tr * | tail -1) /tmp/",
        "nl2bash_10528: find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar"
      ],
      "Explanations about Options": {
        "-t": "copy all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10568: Copy a file xyz.c to all the .c files present in the C directory and below",
        "nl2bash_10528: Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.",
        "nl2bash_11527: Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/"
      ],
      "Top-3 Scripts": [
        "nl2bash_10568: find ./C -name \"*.c\" | xargs -n1  cp xyz.c",
        "nl2bash_10528: find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar",
        "nl2bash_11527: find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \\; | xargs rm"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11527: Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/",
        "nl2bash_11035: Delete all directories found in $LOGDIR that are more than a work-week old"
      ],
      "Top-3 Scripts": [
        "nl2bash_11527: find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \\; | xargs rm",
        "nl2bash_11035: find $LOGDIR -type d -mtime +5 -exec rm -rf {} \\;"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10534: Copies newest file under the current folder to the '/tmp/'",
        "nl2bash_10075: Prints long listing of \"$dir/$file\" file."
      ],
      "Top-3 Scripts": [
        "nl2bash_10534: cp $(ls -1tr * | tail -1) /tmp/",
        "nl2bash_10075: ls -l -- \"$dir/$file\""
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the second column of the lines containing \"something\" in a space-separated file",
      "Most Similar TLDR Script": "awk '/{{something}}/ {print $2}' {{filename}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10050: Prints all NS servers of domain google.com.",
        "nl2bash_10095: Prints server name from SOA record for domain yahoo.com",
        "nl2bash_9550: Print history with the first field removed"
      ],
      "Top-3 Scripts": [
        "nl2bash_10050: dig google.com ns | awk 'p{print $5}/^;; ANSWER SECTION:$/{p=1}/^$/{p=0}'",
        "nl2bash_10095: dig +noall +answer soa yahoo.com | awk '{sub(/.$/,\"\",$5);print $5}'",
        "nl2bash_9550: history | awk '{sub($1, \"\"); sub(/^[ \\t]+/, \"\"); print}'\n\n\nhistory | awk '{sub($1, \"\", $0); sub(/^[ \\t]+/, \"\", $0); print}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11527: Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/"
      ],
      "Top-3 Scripts": [
        "nl2bash_11527: find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \\; | xargs rm"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10826: Rename \"old\" to \"tmp\"",
        "nl2bash_6764: find all .bak files in or below the current directory and move them to ~/.old.files directory:"
      ],
      "Top-3 Scripts": [
        "nl2bash_10826: mv old tmp",
        "nl2bash_6764: find . -name \"*.sh\" -print0 | xargs -0 -I {} mv {} ~/back.scripts"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10053: Prints all child processes of a process with id 20238.",
        "nl2bash_9961: Print the percentage of packets lost of the 5 packets sent to \"$host\"",
        "nl2bash_10606: Copy all files in the current directory except those containing 'Music' to '/target_directory'."
      ],
      "Top-3 Scripts": [
        "nl2bash_10053: pstree -p 20238 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/'",
        "nl2bash_9961: ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)'",
        "nl2bash_10606: cp `ls | grep -v Music` /target_directory"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
      }
    },
    {
      "Command": "dig",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Perform iterative queries and display the entire trace path to resolve a domain name",
      "Most Similar TLDR Script": "dig +trace {{example.com}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10050: Prints all NS servers of domain google.com.",
        "nl2bash_10095: Prints server name from SOA record for domain yahoo.com"
      ],
      "Top-3 Scripts": [
        "nl2bash_10050: dig google.com ns | awk 'p{print $5}/^;; ANSWER SECTION:$/{p=1}/^$/{p=0}'",
        "nl2bash_10095: dig +noall +answer soa yahoo.com | awk '{sub(/.$/,\"\",$5);print $5}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "df",
      "MP Summary": "report file system disk space usage",
      "Most Similar TLDR Task": "Display filesystems but exclude the specified type",
      "Most Similar TLDR Script": "df -x {{squashfs}} -x {{tmpfs}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9521: Print file system disk space usage in human readable format of the root filesystem",
        "nl2bash_9524: Print file system disk space usage of the current directory's file system"
      ],
      "Top-3 Scripts": [
        "nl2bash_9521: df -h /",
        "nl2bash_9524: df ."
      ],
      "Explanations about Options": {
        "-h": "print sizes in powers of 1024 (e.g., 1023M)"
      }
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10094: Prints real path of the folder containing $0 file."
      ],
      "Top-3 Scripts": [
        "nl2bash_10094: $(readlink -f $(dirname \"$0\"))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10678: Copy the standard output of a \"bash\" session to \"/var/log/bash.out.log\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10678: bash | tee /var/log/bash.out.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10115: Prints total count all non-empty lines in files of a current folder.",
        "nl2bash_10116: Prints total count of lines of all *.php files in a current folder and subfolders."
      ],
      "Top-3 Scripts": [
        "nl2bash_10115: rgrep . | wc -l",
        "nl2bash_10116: find . -name '*.php' -type f -exec cat -- {} + | wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10089: Prints only unique lines of './script.sh' output.",
        "nl2bash_10090: Prints only unique lines of './yourscript.ksh' output.",
        "nl2bash_10074: Prints logged in users in sorted order."
      ],
      "Top-3 Scripts": [
        "nl2bash_10089: ./script.sh | sort -u",
        "nl2bash_10090: ./yourscript.ksh | sort | uniq",
        "nl2bash_10074: w | sort"
      ],
      "Explanations about Options": {
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run"
      }
    },
    {
      "Command": "pstree",
      "MP Summary": "display a tree of processes",
      "Most Similar TLDR Task": "Display all process trees rooted at processes owned by specified user",
      "Most Similar TLDR Script": "pstree {{user}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10053: Prints all child processes of a process with id 20238."
      ],
      "Top-3 Scripts": [
        "nl2bash_10053: pstree -p 20238 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/'"
      ],
      "Explanations about Options": {
        "-p": "Show PIDs. PIDs are shown as decimal numbers in parentheses after each process\n name. -p implicitly disables compaction."
      }
    },
    {
      "Command": "yum",
      "MP Summary": "Yellowdog Updater Modified",
      "Most Similar TLDR Task": "Find the package that provides a particular command",
      "Most Similar TLDR Script": "yum provides {{command}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10054: Prints brief information about available package with word 'zsh'."
      ],
      "Top-3 Scripts": [
        "nl2bash_10054: yum list zsh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10092: Prints path location of $BASH_SOURCE file."
      ],
      "Top-3 Scripts": [
        "nl2bash_10092: echo this dir: `dirname $BASH_SOURCE`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer directory contents (but not the directory itself) from a remote to local",
      "Most Similar TLDR Script": "rsync -r {{remote_host}}:{{path/to/remote_directory}}/ {{path/to/local_directory}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10543: Copy \"/path/to/source\" to '/path/to/dest' in remote \"username@computer\"",
        "nl2bash_10544: Copy \"6.3.3/6.3.3/macosx/bin/mybinary\" to \"~/work/binaries/macosx/6.3.3/\" and create directory \"~/work/binaries/macosx/6.3.3/\" if \"~/work/binaries/macosx/\" exists"
      ],
      "Top-3 Scripts": [
        "nl2bash_10543: rsync -r /path/to/source username@computer:/path/to/dest",
        "nl2bash_10544: rsync 6.3.3/6.3.3/macosx/bin/mybinary ~/work/binaries/macosx/6.3.3/"
      ],
      "Explanations about Options": {
        "-r": "This tells rsync to copy directories recursively. See also --dirs (-d)."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10051: Prints all Saturday days of a current month.",
        "nl2bash_10052: Prints all business days in a current month."
      ],
      "Top-3 Scripts": [
        "nl2bash_10051: cal -h | cut -c19-20",
        "nl2bash_10052: cal -h | cut -c 4-17"
      ],
      "Explanations about Options": {
        "-c": "select only these characters"
      }
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create a directory in current directory or given path",
      "Most Similar TLDR Script": "mkdir {{directory}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_212: Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents."
      ],
      "Top-3 Scripts": [
        "nl2bash_212: mkdir -p `dirname /path/to/copy/file/to/is/very/deep/there` \\"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Change the owner of a file/directory to match a reference file",
      "Most Similar TLDR Script": "chown --reference={{path/to/reference_file}} {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12202: Change the owner to \"owner\" and group to \"nobody\" of \"public_html\""
      ],
      "Top-3 Scripts": [
        "nl2bash_12202: chown owner:nobody public_html"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Print standard input to the terminal, and also pipe it into another program for further processing",
      "Most Similar TLDR Script": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10678: Copy the standard output of a \"bash\" session to \"/var/log/bash.out.log\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10678: bash | tee /var/log/bash.out.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10094: Prints real path of the folder containing $0 file."
      ],
      "Top-3 Scripts": [
        "nl2bash_10094: $(readlink -f $(dirname \"$0\"))"
      ],
      "Explanations about Options": {
        "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10053: Prints all child processes of a process with id 20238."
      ],
      "Top-3 Scripts": [
        "nl2bash_10053: pstree -p 20238 | sed 's/(/\\n(/g' | grep '(' | sed 's/(\\(.*\\)).*/\\1/'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cal",
      "MP Summary": "displays a calendar and the date of Easter",
      "Most Similar TLDR Task": "Display previous, current and next month",
      "Most Similar TLDR Script": "cal -3",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10051: Prints all Saturday days of a current month.",
        "nl2bash_10056: Prints calendars of July, 2009 and July, 2010 side-by-side.",
        "nl2bash_10055: Prints calendar of February, 1900."
      ],
      "Top-3 Scripts": [
        "nl2bash_10051: cal -h | cut -c19-20",
        "nl2bash_10056: paste <(cal 6 2009) <(cal 6 2010)",
        "nl2bash_10055: cal 2 1900"
      ],
      "Explanations about Options": {
        "-h": "Turns off highlighting of today."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10116: Prints total count of lines of all *.php files in a current folder and subfolders."
      ],
      "Top-3 Scripts": [
        "nl2bash_10116: find . -name '*.php' -type f -exec cat -- {} + | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Execute command passed as parameter",
      "Most Similar TLDR Script": "zsh -c {{command}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10054: Prints brief information about available package with word 'zsh'."
      ],
      "Top-3 Scripts": [
        "nl2bash_10054: yum list zsh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10050: Prints all NS servers of domain google.com."
      ],
      "Top-3 Scripts": [
        "nl2bash_10050: dig google.com ns | awk 'p{print $5}/^;; ANSWER SECTION:$/{p=1}/^$/{p=0}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create a gzipped archive from a directory using relative paths",
      "Most Similar TLDR Script": "tar czf {{target.tar.gz}} -C {{path/to/directory}} .",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13185: create and list contents of the archive"
      ],
      "Top-3 Scripts": [
        "nl2bash_13185: tar cf - $PWD|tar tvf -"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Ping host without trying to lookup symbolic names for addresses",
      "Most Similar TLDR Script": "ping -n {{host}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9961: Print the percentage of packets lost of the 5 packets sent to \"$host\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9961: ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)'"
      ],
      "Explanations about Options": {
        "-q": "Quiet output. Nothing is displayed except the summary lines at startup time and when\n finished.",
        "-c": "Stop after sending count ECHO_REQUEST packets. With deadline option, ping waits for\n count ECHO_REPLY packets, until the timeout expires."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_212: Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents."
      ],
      "Top-3 Scripts": [
        "nl2bash_212: mkdir -p `dirname /path/to/copy/file/to/is/very/deep/there` \\"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download a file, saving the output under the filename indicated by the URL",
      "Most Similar TLDR Script": "curl -O {{http://example.com/filename}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10509: send GET request to \"http://testsite/api/\" with header \"Authorization: Token wef4fwef54te4t5teerdfgghrtgdg53\" and format as json"
      ],
      "Top-3 Scripts": [
        "nl2bash_10509: curl -X GET -H \"Authorization: Token wef4fwef54te4t5teerdfgghrtgdg53\" http://testsite/api/ | python -mjson.tool"
      ],
      "Explanations about Options": {
        "-X": "(HTTP) Specifies a custom request method to use when communicating with the HTTP\n server. The specified request method will be used instead of the method otherwise\n used (which defaults to GET). Read the HTTP 1.1 specification for details and\n explanations. Common additional HTTP requests include PUT and DELETE, but related\n technologies like WebDAV offers PROPFIND, COPY, MOVE and more."
      }
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10546: Copy \"file\" from \"REMOTE\" into local clipboard"
      ],
      "Top-3 Scripts": [
        "nl2bash_10546: ssh USER@REMOTE \"cat file\"|xclip -i"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using the specified delimiter",
      "Most Similar TLDR Script": "paste -s -d {{delimiter}} {{file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10056: Prints calendars of July, 2009 and July, 2010 side-by-side."
      ],
      "Top-3 Scripts": [
        "nl2bash_10056: paste <(cal 6 2009) <(cal 6 2010)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9961: Print the percentage of packets lost of the 5 packets sent to \"$host\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9961: ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xclip",
      "MP Summary": "command line interface to X selections (clipboard)",
      "Most Similar TLDR Task": "Copy the contents of a PNG image into the system clipboard (can be pasted in other programs correctly)",
      "Most Similar TLDR Script": "xclip -sel clip -t image/png {{input_file.png}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10546: Copy \"file\" from \"REMOTE\" into local clipboard"
      ],
      "Top-3 Scripts": [
        "nl2bash_10546: ssh USER@REMOTE \"cat file\"|xclip -i"
      ],
      "Explanations about Options": {
        "-i": "read text into X selection from standard input or files (default)"
      }
    },
    {
      "Command": "cpio",
      "MP Summary": "copy files to and from archives",
      "Most Similar TLDR Task": "Take a list of file names from standard input and add them [o]nto an archive in cpio's binary format",
      "Most Similar TLDR Script": "echo \"{{file1}} {{file2}} {{file3}}\" | cpio -o > {{archive.cpio}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10573: Copy all \".php\" files in \"projects/\" directory tree to \"copy/\" preserving directory hierarchy"
      ],
      "Top-3 Scripts": [
        "nl2bash_10573: find projects/ -name '*.php' -print | cpio -pdm copy/"
      ],
      "Explanations about Options": {
        "-d": "(i and p modes) Create directories as necessary.",
        "-p": "Pass-through mode. See above for description.",
        "-m": "(i and p modes) Set file modification time on created files to match those in the\n source."
      }
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Run library module as a script (terminates option list)",
      "Most Similar TLDR Script": "python -m {{module}} {{arguments}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10509: send GET request to \"http://testsite/api/\" with header \"Authorization: Token wef4fwef54te4t5teerdfgghrtgdg53\" and format as json"
      ],
      "Top-3 Scripts": [
        "nl2bash_10509: curl -X GET -H \"Authorization: Token wef4fwef54te4t5teerdfgghrtgdg53\" http://testsite/api/ | python -mjson.tool"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only unique lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -u",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10090: Prints only unique lines of './yourscript.ksh' output."
      ],
      "Top-3 Scripts": [
        "nl2bash_10090: ./yourscript.ksh | sort | uniq"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show all file since line 'num'",
      "Most Similar TLDR Script": "tail -n +{{num}} {{file}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10534: Copies newest file under the current folder to the '/tmp/'"
      ],
      "Top-3 Scripts": [
        "nl2bash_10534: cp $(ls -1tr * | tail -1) /tmp/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10093: Prints random line from file $FILE."
      ],
      "Top-3 Scripts": [
        "nl2bash_10093: sort --random-sort $FILE | head -n 1"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "rgrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10115: Prints total count all non-empty lines in files of a current folder."
      ],
      "Top-3 Scripts": [
        "nl2bash_10115: rgrep . | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10528: Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory."
      ],
      "Top-3 Scripts": [
        "nl2bash_10528: find -name '*FooBar*' -print0 | xargs -0 cp -t ~/foo/bar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10543: Copy \"/path/to/source\" to '/path/to/dest' in remote \"username@computer\"",
        "nl2bash_9960: Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*",
        "nl2bash_212: Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents."
      ],
      "Top-3 Scripts": [
        "nl2bash_10543: rsync -r /path/to/source username@computer:/path/to/dest",
        "nl2bash_9960: find /path/to/directory/* -maxdepth 0 -type d",
        "nl2bash_212: mkdir -p `dirname /path/to/copy/file/to/is/very/deep/there` \\"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11527: Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/",
        "nl2bash_10544: Copy \"6.3.3/6.3.3/macosx/bin/mybinary\" to \"~/work/binaries/macosx/6.3.3/\" and create directory \"~/work/binaries/macosx/6.3.3/\" if \"~/work/binaries/macosx/\" exists"
      ],
      "Top-3 Scripts": [
        "nl2bash_11527: find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \\; | xargs rm",
        "nl2bash_10544: rsync 6.3.3/6.3.3/macosx/bin/mybinary ~/work/binaries/macosx/6.3.3/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ns",
      "MP Summary": "network simulator (version 2)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10050: Prints all NS servers of domain google.com."
      ],
      "Top-3 Scripts": [
        "nl2bash_10050: dig google.com ns | awk 'p{print $5}/^;; ANSWER SECTION:$/{p=1}/^$/{p=0}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "log",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10678: Copy the standard output of a \"bash\" session to \"/var/log/bash.out.log\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10678: bash | tee /var/log/bash.out.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10075: Prints long listing of \"$dir/$file\" file."
      ],
      "Top-3 Scripts": [
        "nl2bash_10075: ls -l -- \"$dir/$file\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "compress",
      "MP Summary": "compress data",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints random line from file $FILE.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort --random-sort $FILE | head -n 1\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files",
              "--random-sort": "shuffle, but group identical keys. See shuf(1)"
            },
            "head": {
              "mpsum": "output the first part of files",
              "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11916: Compress all directories found in $LOGDIR wherein a file's data has been modified within the last 24 hours"
      ],
      "Top-3 Scripts": [
        "nl2bash_11916: find $LOGDIR -type d -mtime +0 -exec compress -r {} \\;"
      ],
      "Explanations about Options": {}
    }
  ]
}