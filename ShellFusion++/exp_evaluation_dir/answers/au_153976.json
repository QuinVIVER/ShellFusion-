{
  "Query": "How do I get the parent process ID of a given child process?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given size range",
      "Most Similar TLDR Script": "find {{root_path}} -size {{+500k}} -size {{-10M}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13997: count the lines of java code for all the java files in the current directory",
        "nl2bash_11645: Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals",
        "nl2bash_7752: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps"
      ],
      "Top-3 Scripts": [
        "nl2bash_13997: find . -name \"*.java\" -print0 | xargs -0 wc",
        "nl2bash_11645: find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\"",
        "nl2bash_7752: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-iwholename": "See -ipath. This alternative is less portable than -ipath.",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-not": "Same as ! expr, but not POSIX compliant.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Print standard input to the terminal, and also pipe it into another program for further processing",
      "Most Similar TLDR Script": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13999: Change mode of all files ending with \".php\" under the current folder to 755 and write the output to the console and \"logfile.txt\" file",
        "nl2bash_14000: Change mode of all files ending with \".php\" under the current folder to 755 and write the output to the console and \"logfile.txt\" file",
        "nl2bash_12034: Redirect the current process's standard error to standard out and write to console and append to \"$HOME/logfile\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13999: find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt",
        "nl2bash_14000: find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt",
        "nl2bash_12034: exec > >(tee -a $HOME/logfile) 2>&1"
      ],
      "Explanations about Options": {
        "-a": "append to the given FILEs, do not overwrite"
      }
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Change the owner user and group of a file/directory",
      "Most Similar TLDR Script": "chown {{user}}:{{group}} {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12576: change owner and group of the file dir1 to user root and group  specialusers",
        "nl2bash_12575: change owner and group of the file dir1 to user root and group  specialusers",
        "nl2bash_12577: change owner and group of the file dir1 to user root and group  specialusers"
      ],
      "Top-3 Scripts": [
        "nl2bash_12576: chown root:specialusers dir1",
        "nl2bash_12575: chown root:specialusers dir1",
        "nl2bash_12577: chown root:specialusers dir1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run a command using the input data as arguments",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs {{command}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13997: count the lines of java code for all the java files in the current directory",
        "nl2bash_11645: Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals",
        "nl2bash_11642: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files"
      ],
      "Top-3 Scripts": [
        "nl2bash_13997: find . -name \"*.java\" -print0 | xargs -0 wc",
        "nl2bash_11645: find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\"",
        "nl2bash_11642: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\""
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "stat",
      "MP Summary": "display file or file system status",
      "Most Similar TLDR Task": "Show owner and group of the file",
      "Most Similar TLDR Script": "stat -c \"%U %G\" {{file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7752: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps",
        "nl2bash_7751: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps"
      ],
      "Top-3 Scripts": [
        "nl2bash_7752: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2",
        "nl2bash_7751: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2"
      ],
      "Explanations about Options": {
        "-f": "display file system status instead of file status"
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count lines in file",
      "Most Similar TLDR Script": "wc -l {{file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13997: count the lines of java code for all the java files in the current directory",
        "nl2bash_13998: count the total number of lines that are present in all the normal/regular files",
        "nl2bash_13899: Counts lines in each of *.php files in current folder with subfolders and prints total count as well."
      ],
      "Top-3 Scripts": [
        "nl2bash_13997: find . -name \"*.java\" -print0 | xargs -0 wc",
        "nl2bash_13998: find . -type f -exec wc -l {} \\; | awk '{total += $1} END{print total}'",
        "nl2bash_13899: find . -name '*.php' | xargs wc -l | sort -r"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11642: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
        "nl2bash_11643: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
        "nl2bash_3533: Find all files under current directory and show their file information"
      ],
      "Top-3 Scripts": [
        "nl2bash_11642: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"",
        "nl2bash_11643: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"",
        "nl2bash_3533: find . -type f -exec file {} \\;\n\n\nfind . -type f -print0 | xargs -0 file\n\n\nfind . -type f | xargs file"
      ],
      "Explanations about Options": {
        "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11642: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
        "nl2bash_7665: find all the jar files in the current folder and display all the \".class\" files or files ending with jar",
        "nl2bash_2252: Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\\|#hyphenate' in their contents"
      ],
      "Top-3 Scripts": [
        "nl2bash_11642: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"",
        "nl2bash_7665: find . -name \u201c*.jar\u201d -print -exec jar tvf {} \\; |grep -E \u201cjar$|.class\u201d",
        "nl2bash_2252: find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
      "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11642: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
        "nl2bash_11643: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
        "nl2bash_14059: Check if command \"c++\" and command \"g++\" are equal"
      ],
      "Top-3 Scripts": [
        "nl2bash_11642: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"",
        "nl2bash_11643: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"",
        "nl2bash_14059: [ `md5sum $(which c++) | cut -d' ' -f1` == `md5sum $(which g++) | cut -d' ' -f1` ] && echo Yes, equal content || echo No, unequal content"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter"
      }
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and change the process name",
      "Most Similar TLDR Script": "exec -a {{process_name}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12034: Redirect the current process's standard error to standard out and write to console and append to \"$HOME/logfile\"",
        "nl2bash_12035: Redirect the current process's standard error to standard out and write to console and append to \"$HOME/logfile\""
      ],
      "Top-3 Scripts": [
        "nl2bash_12034: exec > >(tee -a $HOME/logfile) 2>&1",
        "nl2bash_12035: exec > >(tee -a $HOME/logfile) 2>&1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' lines in file",
      "Most Similar TLDR Script": "tail -n {{num}} {{file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9846: Print the last space separated word from \"Your string here\"",
        "nl2bash_9847: Print the last space separated word from \"a b c d e\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9846: echo \"Your string here\"| tr ' ' '\\n' | tail -n1",
        "nl2bash_9847: echo \"a b c d e\" | tr ' ' '\\n' | tail -1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11645: Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals",
        "nl2bash_11642: Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
        "nl2bash_11644: Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals"
      ],
      "Top-3 Scripts": [
        "nl2bash_11645: find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\"",
        "nl2bash_11642: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"",
        "nl2bash_11644: find . -type f -not -iwholename '*.git*' -print0  | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\""
      ],
      "Explanations about Options": {
        "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9846: Print the last space separated word from \"Your string here\"",
        "nl2bash_9847: Print the last space separated word from \"a b c d e\"",
        "nl2bash_14059: Check if command \"c++\" and command \"g++\" are equal"
      ],
      "Top-3 Scripts": [
        "nl2bash_9846: echo \"Your string here\"| tr ' ' '\\n' | tail -n1",
        "nl2bash_9847: echo \"a b c d e\" | tr ' ' '\\n' | tail -1",
        "nl2bash_14059: [ `md5sum $(which c++) | cut -d' ' -f1` == `md5sum $(which g++) | cut -d' ' -f1` ] && echo Yes, equal content || echo No, unequal content"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a find/replace expression on a file, saving the original file with a given extension",
      "Most Similar TLDR Script": "perl -p -i'.old' -e 's/{{find}}/{{replace}}/g' {{filename}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11588: Remove the \"^M\" characters from all *.ext files under /home directory",
        "nl2bash_3873: Find all files/directories that were modified more than 2 days ago and redirect the list to ~/output.file"
      ],
      "Top-3 Scripts": [
        "nl2bash_11588: find /home -type f -name \"*.ext\" -exec perl -pi -e 's/\\r//g' {} \\;",
        "nl2bash_3873: find . -mtime +2 | perl -pe 's{^}{\\\"};s{$}{\\\"}' > ~/output.file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort the passwd file by the 3rd field, numerically",
      "Most Similar TLDR Script": "sort -t: -k 3n /etc/passwd",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7752: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps",
        "nl2bash_7751: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps",
        "nl2bash_13899: Counts lines in each of *.php files in current folder with subfolders and prints total count as well."
      ],
      "Top-3 Scripts": [
        "nl2bash_7752: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2",
        "nl2bash_7751: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2",
        "nl2bash_13899: find . -name '*.php' | xargs wc -l | sort -r"
      ],
      "Explanations about Options": {
        "-r": "reverse the result of comparisons"
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Give [o]thers (not in the file owner's group) the same rights as the [g]roup",
      "Most Similar TLDR Script": "chmod o=g {{file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13999: Change mode of all files ending with \".php\" under the current folder to 755 and write the output to the console and \"logfile.txt\" file",
        "nl2bash_14000: Change mode of all files ending with \".php\" under the current folder to 755 and write the output to the console and \"logfile.txt\" file"
      ],
      "Top-3 Scripts": [
        "nl2bash_13999: find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt",
        "nl2bash_14000: find . -name '*.php' -exec chmod 755 {} \\; | tee logfile.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4759: Find empty files in the test directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_4759: find test -empty"
      ],
      "Explanations about Options": {
        "-t": "FD file descriptor FD is opened on a terminal",
        "-p": "FILE\n FILE exists and is a named pipe",
        "-e": "FILE\n FILE exists"
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files one per line",
      "Most Similar TLDR Script": "ls -1",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5698: Recursively finds all files like \"*.log\" and \"*.trc\" in a current folder, modified in a last day, sorts list by modification time and pipes output to pager tool 'less'."
      ],
      "Top-3 Scripts": [
        "nl2bash_5698: sudo find . \\( -name \"*.log\" -o -name \"*.trc\" \\) -mtime -1 | sudo xargs ls -ltr --color | less -R"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format",
        "-t": "sort by modification time , newest first",
        "-r": "reverse order while sorting",
        "--color": "colorize the output; WHEN can be 'always' (default if omitted), 'auto', or 'never';\n more info below"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13998: count the total number of lines that are present in all the normal/regular files"
      ],
      "Top-3 Scripts": [
        "nl2bash_13998: find . -type f -exec wc -l {} \\; | awk '{total += $1} END{print total}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5698: Recursively finds all files like \"*.log\" and \"*.trc\" in a current folder, modified in a last day, sorts list by modification time and pipes output to pager tool 'less'."
      ],
      "Top-3 Scripts": [
        "nl2bash_5698: sudo find . \\( -name \"*.log\" -o -name \"*.trc\" \\) -mtime -1 | sudo xargs ls -ltr --color | less -R"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "users",
      "MP Summary": "print the user names of users currently logged in to the current host",
      "Most Similar TLDR Task": "Display a list of logged in users",
      "Most Similar TLDR Script": "users",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2252: Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\\|#hyphenate' in their contents"
      ],
      "Top-3 Scripts": [
        "nl2bash_2252: find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Sum the values in the first column of a file and print the total",
      "Most Similar TLDR Script": "awk '{s+=$1} END {print s}' {{filename}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13998: count the total number of lines that are present in all the normal/regular files"
      ],
      "Top-3 Scripts": [
        "nl2bash_13998: find . -type f -exec wc -l {} \\; | awk '{total += $1} END{print total}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Map each character of the first set to the corresponding character of the second set",
      "Most Similar TLDR Script": "tr '{{abcd}}' '{{jkmn}}' < {{filename}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9846: Print the last space separated word from \"Your string here\"",
        "nl2bash_9847: Print the last space separated word from \"a b c d e\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9846: echo \"Your string here\"| tr ' ' '\\n' | tail -n1",
        "nl2bash_9847: echo \"a b c d e\" | tr ' ' '\\n' | tail -1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Forcibly remove a directory, without prompting for confirmation or showing error messages",
      "Most Similar TLDR Script": "rm -rf {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11097: Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter",
        "nl2bash_11599: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'"
      ],
      "Top-3 Scripts": [
        "nl2bash_11097: find . -name \"*.$1\" -exec rm {} \\;",
        "nl2bash_11599: rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively"
      }
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Prepend \"foo\" to all filenames in the current directory",
      "Most Similar TLDR Script": "rename {{''}} {{'foo'}} {{*}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11587: Remove the \"123_\" prefix from all filenames of .txt files in current directory."
      ],
      "Top-3 Scripts": [
        "nl2bash_11587: find -name \"123*.txt\" -exec rename 's/^123_//' {} \";\"\n\n\nrename 's/^123_//' *.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "less",
      "MP Summary": "opposite of more",
      "Most Similar TLDR Task": "Follow the output of the currently opened file",
      "Most Similar TLDR Script": "F",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5698: Recursively finds all files like \"*.log\" and \"*.trc\" in a current folder, modified in a last day, sorts list by modification time and pipes output to pager tool 'less'."
      ],
      "Top-3 Scripts": [
        "nl2bash_5698: sudo find . \\( -name \"*.log\" -o -name \"*.trc\" \\) -mtime -1 | sudo xargs ls -ltr --color | less -R"
      ],
      "Explanations about Options": {
        "-R": "Like -r, but only ANSI \"color\" escape sequences are output in \"raw\" form. Unlike\n -r, the screen appearance is maintained correctly in most cases. ANSI \"color\"\n escape sequences are sequences of the form:"
      }
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14059: Check if command \"c++\" and command \"g++\" are equal"
      ],
      "Top-3 Scripts": [
        "nl2bash_14059: [ `md5sum $(which c++) | cut -d' ' -f1` == `md5sum $(which g++) | cut -d' ' -f1` ] && echo Yes, equal content || echo No, unequal content"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Use the full path of source files, creating any missing intermediate directories when copying",
      "Most Similar TLDR Script": "cp --parents {{source/path/to/file}} {{path/to/target_file}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7750: find all the patch files in current folder and copy them to separate folder patches"
      ],
      "Top-3 Scripts": [
        "nl2bash_7750: find -name '*.patch' -print0 | xargs -0 -I {} cp {} patches/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "blkid",
      "MP Summary": "locate/print block device attributes",
      "Most Similar TLDR Task": "List all partitions in a table, including current mountpoints",
      "Most Similar TLDR Script": "sudo blkid -o list",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14058: Check if a drive with UUID \"09b8f1ab-8d4b-4c5f-b395-40be09c090b0\" is mounted on \"/media/WD_Disk_1\""
      ],
      "Top-3 Scripts": [
        "nl2bash_14058: mount | grep $(blkid -U '09b8f1ab-8d4b-4c5f-b395-40be09c090b0') | grep '/media/WD_Disk_1 '"
      ],
      "Explanations about Options": {
        "-U": "Look up the device that uses this filesystem uuid. For more details see the\n --label option."
      }
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the man page for a command",
      "Most Similar TLDR Script": "man {{command}}",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11599: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'"
      ],
      "Top-3 Scripts": [
        "nl2bash_11599: rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Show all mounted filesystems",
      "Most Similar TLDR Script": "mount",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14058: Check if a drive with UUID \"09b8f1ab-8d4b-4c5f-b395-40be09c090b0\" is mounted on \"/media/WD_Disk_1\""
      ],
      "Top-3 Scripts": [
        "nl2bash_14058: mount | grep $(blkid -U '09b8f1ab-8d4b-4c5f-b395-40be09c090b0') | grep '/media/WD_Disk_1 '"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "node",
      "MP Summary": "server-side JavaScript runtime",
      "Most Similar TLDR Task": "Evaluate and print result, useful to see node's dependencies versions",
      "Most Similar TLDR Script": "node -p \"{{process.versions}}\"",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11599: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'"
      ],
      "Top-3 Scripts": [
        "nl2bash_11599: rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7752: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps",
        "nl2bash_7751: find all the pdf files in a folder which start with a specific name and display them in the sorted order of their time stamps"
      ],
      "Top-3 Scripts": [
        "nl2bash_7752: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2",
        "nl2bash_7751: find \"/path/to/pdfs/\" -type f -name \"$1*.pdf\" -exec stat -f \"%10Dm %SN\" {}\\;  | sort -k1,1n -k2,2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11647: Remove trailing white spaces from all files under dir directory and keep backups of the originals",
        "nl2bash_11649: Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename"
      ],
      "Top-3 Scripts": [
        "nl2bash_11647: find dir -type f -print0 | xargs -0 sed -i .bak -E \"s/[[:space:]]*$//\"",
        "nl2bash_11649: find dir -type f -print0 | xargs -r0 sed -i 's/ *$//'"
      ],
      "Explanations about Options": {
        "-t": "sort by modification time , newest first",
        "-p": "append / indicator to directories"
      }
    },
    {
      "Command": "egrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5732: Recursively finds strings with 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
        "nl2bash_14049: Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.",
        "nl2bash_5736: Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings."
      ],
      "Top-3 Scripts": [
        "nl2bash_5732: egrep -R \"word-1|word-2\u201d directory-path",
        "nl2bash_14049: is_nullglob=$( shopt -s | egrep -i '*nullglob' )",
        "nl2bash_5736: egrep -w -R \"word-1|word-2\u201d directory-path"
      ],
      "Explanations about Options": {
        "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r.",
        "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11599: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'"
      ],
      "Top-3 Scripts": [
        "nl2bash_11599: rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rb",
      "MP Summary": "XMODEM, YMODEM, ZMODEM (Batch) file receive",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -print0 | xargs -0 file -In | grep -v binary | cut -d \":\" -f1 | xargs -0 sed -i '' -E \"s/[[:space:]]*$//\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-not": "Same as ! expr, but not POSIX compliant.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "file": {
              "mpsum": "determine file type",
              "-n": "Force stdout to be flushed after checking each file. This is only useful if\n checking a list of files. It is intended to be used by programs that want filetype\n output from a pipe."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines."
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6495: Search the current directory tree for files whose names end in \"rb\" or \"js\""
      ],
      "Top-3 Scripts": [
        "nl2bash_6495: find . -regextype posix-egrep -regex \".*(rb|js)$\""
      ],
      "Explanations about Options": {}
    }
  ]
}