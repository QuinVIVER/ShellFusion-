{
  "Query": "grep exclude multiple strings",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8620: search for the text file \"file.txt\" and display its parent directory",
        "nl2bash_8632: search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
        "nl2bash_8633: search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line"
      ],
      "Top-3 Scripts": [
        "nl2bash_8620: cd /nfs/office/ &&  find . -name 'file.txt' | sed -r 's|(\\./([^/]*/)?).*|\\1|'",
        "nl2bash_8632: find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"",
        "nl2bash_8633: find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\""
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8632: search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
        "nl2bash_8633: search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line"
      ],
      "Top-3 Scripts": [
        "nl2bash_8632: find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"",
        "nl2bash_8633: find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\""
      ],
      "Explanations about Options": {
        "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8632: search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
        "nl2bash_8633: search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line"
      ],
      "Top-3 Scripts": [
        "nl2bash_8632: find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"",
        "nl2bash_8633: find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\""
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8620: search for the text file \"file.txt\" and display its parent directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_8620: cd /nfs/office/ &&  find . -name 'file.txt' | sed -r 's|(\\./([^/]*/)?).*|\\1|'"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10621: Copy all regular files from the current directory tree to /tmp"
      ],
      "Top-3 Scripts": [
        "nl2bash_10621: find . -type f -exec sh -c 'cp \"$@\" /tmp' {} +"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to the given directory",
      "Most Similar TLDR Script": "cd {{path/to/directory}}",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8620: search for the text file \"file.txt\" and display its parent directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_8620: cd /nfs/office/ &&  find . -name 'file.txt' | sed -r 's|(\\./([^/]*/)?).*|\\1|'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "raw",
      "MP Summary": "bind a Linux raw character device",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "search for the word \"nameserver\" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /etc/ -iname \"*\" -type f -print0 | xargs -0 grep -H \"nameserver\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_23648: Bash string replace multiple chars with one"
      ],
      "Top-3 Scripts": [
        "ul_23648: shopt -s extglob\nsanitized=${raw//+([^A-Za-z0-9])/-}"
      ],
      "Explanations about Options": {}
    }
  ]
}