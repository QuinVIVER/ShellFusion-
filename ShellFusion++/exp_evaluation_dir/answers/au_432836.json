{
  "Query": "How can I check disk space used in a partition using the terminal in Ubuntu 12.04 LTS?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Most Similar NL2Bash Task": "display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find / -path /proc -prune -o -type f -perm +6000 -ls\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-ls": "Unusual characters are always escaped. White space, backslash, and double quote\n characters are printed using C-style escaping (for example `\\f', `\\\"'). Other\n unusual characters are printed using an octal escape. Other printable characters\n (for -ls and -fls these are the characters between octal 041 and 0176) are printed\n as-is.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1106: display all the regular files in the current folder which have the permission 777",
        "nl2bash_625: display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set"
      ],
      "Top-3 Scripts": [
        "nl2bash_1106: find . -type f -perm 777",
        "nl2bash_625: find / -path /proc -prune -o -type f -perm +6000 -ls"
      ],
      "Explanations about Options": {
        "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
        "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
        "-ls": "Unusual characters are always escaped. White space, backslash, and double quote\n characters are printed using C-style escaping (for example `\\f', `\\\"'). Other\n unusual characters are printed using an octal escape. Other printable characters\n (for -ls and -fls these are the characters between octal 041 and 0176) are printed\n as-is.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find / -path /proc -prune -o -type f -perm +6000 -ls\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-ls": "Unusual characters are always escaped. White space, backslash, and double quote\n characters are printed using C-style escaping (for example `\\f', `\\\"'). Other\n unusual characters are printed using an octal escape. Other printable characters\n (for -ls and -fls these are the characters between octal 041 and 0176) are printed\n as-is.",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14481318: PowerShell 2.0 Disk Space check"
      ],
      "Top-3 Scripts": [
        "so_14481318: $disks = Get-WmiObject -ComputerName WDSMS01 -Namespace root\\cimv2 -Query \"Select * from Win32_LogicalDisk where DriveType=3\"\n$disks.DeviceID\n$dsql01 = $disks | ForEach-Object {\n    New-Object PSObject -Property @{\n        'Drive Name' = $_.DeviceID\n        'Total Space (GB)' = $_.Size / 1GB\n        'Free Space (GB)' = $_.FreeSpace / 1GB\n        'Free Space (%)' = 100 * $_.FreeSpace / $_.Size\n    }\n}"
      ],
      "Explanations about Options": {}
    }
  ]
}