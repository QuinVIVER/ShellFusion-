{
  "Query": "How can I change my bash prompt to show my working directory?",
  "Answers": [
    {
      "Command": "yum",
      "MP Summary": "Yellowdog Updater Modified",
      "Most Similar TLDR Task": "Display available updates for installed packages",
      "Most Similar TLDR Script": "yum check-update",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1840: Installs package group \"MYSQL Database Client\", answering 'yes' on all questions.",
        "nl2bash_1836: Installs package \"devtoolset-3\" answering 'yes' on all questions.",
        "nl2bash_1837: Installs package \"nodejs\" answering 'yes' on all questions."
      ],
      "Top-3 Scripts": [
        "nl2bash_1840: yum -y groupinstall \"MYSQL Database Client\"",
        "nl2bash_1836: yum install -y devtoolset-3",
        "nl2bash_1837: yum install -y nodejs"
      ],
      "Explanations about Options": {
        "-y": "Assume yes; assume that the answer to any question which would be asked is yes.\n Configuration Option: assumeyes"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Display non-printable and whitespace characters (with `M-` prefix if non-ASCII)",
      "Most Similar TLDR Script": "cat -v -t -e {{file}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_336: Display an infinite number of lines consisting of \"y\", until the user presses the Q key.",
        "nl2bash_5886: Search for \"pattern\" in \"file\" and join each line by a space",
        "nl2bash_1845: Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I."
      ],
      "Top-3 Scripts": [
        "nl2bash_336: yes | cat | more",
        "nl2bash_5886: cat file | grep pattern | paste -sd' '",
        "nl2bash_1845: cat -vet file | less"
      ],
      "Explanations about Options": {
        "-v": "use ^ and M- notation, except for LFD and TAB",
        "-t": "equivalent to -vT",
        "-e": "equivalent to -vE"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13885: Counts lines in each *.php file.",
        "nl2bash_5886: Search for \"pattern\" in \"file\" and join each line by a space",
        "nl2bash_11517: Remove everything in the current directory except files matching regular expression \"exclude these\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13885: wc -l `tree -if --noreport | grep -e'\\.php$'`",
        "nl2bash_5886: cat file | grep pattern | paste -sd' '",
        "nl2bash_11517: find . -maxdepth 1 | grep -v \"exclude these\" | xargs rm -r"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5691: Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.",
        "nl2bash_13885: Counts lines in each *.php file.",
        "nl2bash_11517: Remove everything in the current directory except files matching regular expression \"exclude these\""
      ],
      "Top-3 Scripts": [
        "nl2bash_5691: find . -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &",
        "nl2bash_13885: find . -name '*.php' -type f | xargs wc -l",
        "nl2bash_11517: find . -maxdepth 1 | grep -v \"exclude these\" | xargs rm -r"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_818: display all shell scripts in current folder",
        "nl2bash_5691: Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.",
        "nl2bash_826: display all text files in current folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_818: find . -name \"*.sh\"",
        "nl2bash_5691: find . -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &",
        "nl2bash_826: find . -name \"*.txt\"\n\n\nfind . -name \".txt\""
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
      "Most Similar TLDR Script": "file {{filename}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5886: Search for \"pattern\" in \"file\" and join each line by a space",
        "nl2bash_1845: Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I."
      ],
      "Top-3 Scripts": [
        "nl2bash_5886: cat file | grep pattern | paste -sd' '",
        "nl2bash_1845: cat -vet file | less"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13882: Counts lines in each *.cpp, *.c, *.h file.",
        "nl2bash_13881: Counts all top-level files in a current folder.",
        "nl2bash_4912: Find files named \"blabla\" in the current directory tree and print the number of lines in each of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_13882: wc -l `find . -type f \\( -name \"*.cpp\" -o -name \"*.c\" -o -name \"*.h\" \\) -print`",
        "nl2bash_13881: ls -1 | wc -l",
        "nl2bash_4912: find ./ -name \"blabla\" -exec wc -l {} ;"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts",
        "-m": "print the character counts"
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1772: Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.",
        "nl2bash_2776: Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories",
        "nl2bash_8876: Set permissions to 644 for all regular files under the current directory tree that have permissions 755"
      ],
      "Top-3 Scripts": [
        "nl2bash_1772: find ~/dir_data -type d -exec chmod a+xr,u+w {} \\;",
        "nl2bash_2776: find ${x} -type d -exec chmod ug=rwx,o= '{}' \\;",
        "nl2bash_8876: find . -type f -perm 755 -exec chmod 644 {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13880: Counts all non-blank lines in the $i file.",
        "nl2bash_7819: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_1847: Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment."
      ],
      "Top-3 Scripts": [
        "nl2bash_13880: sed '/^\\s*$/d' $i | wc -l ## skip blank lines",
        "nl2bash_7819: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_1847: source <( sed 's/:\\(.*\\)/=\"\\1\"/' msgs.config )"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only duplicate lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -d",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7819: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_9293: Print a list of all duplicate case insensitive filenames in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_7819: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_9293: find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d"
      ],
      "Explanations about Options": {
        "-d": "only print duplicate lines, one for each group",
        "-i": "ignore differences in case when comparing"
      }
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1836: Installs package \"devtoolset-3\" answering 'yes' on all questions.",
        "nl2bash_1837: Installs package \"nodejs\" answering 'yes' on all questions."
      ],
      "Top-3 Scripts": [
        "nl2bash_1836: yum install -y devtoolset-3",
        "nl2bash_1837: yum install -y nodejs"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Forcibly remove a directory, without prompting for confirmation or showing error messages",
      "Most Similar TLDR Script": "rm -rf {{path/to/directory}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11517: Remove everything in the current directory except files matching regular expression \"exclude these\""
      ],
      "Top-3 Scripts": [
        "nl2bash_11517: find . -maxdepth 1 | grep -v \"exclude these\" | xargs rm -r"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively"
      }
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1984: Find *.pdf files in the PDFs directory tree that contain text \"perry sound\" and copy them to folder Found/"
      ],
      "Top-3 Scripts": [
        "nl2bash_1984: find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext \"{}\" - | grep -l -Z -i --with-filename --label=\"{}\" --color \"perry sound\" | xargs -0 -I{} cp -v {} Found/' \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps.",
        "-": "Similar to ++, except the parameter is decremented by 1."
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a directory recursively, in verbose mode (shows files as they are copied)",
      "Most Similar TLDR Script": "cp -vr {{path/to/source_directory}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1984: Find *.pdf files in the PDFs directory tree that contain text \"perry sound\" and copy them to folder Found/"
      ],
      "Top-3 Scripts": [
        "nl2bash_1984: find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext \"{}\" - | grep -l -Z -i --with-filename --label=\"{}\" --color \"perry sound\" | xargs -0 -I{} cp -v {} Found/' \\;"
      ],
      "Explanations about Options": {
        "-v": "explain what is being done"
      }
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using the specified delimiter",
      "Most Similar TLDR Script": "paste -s -d {{delimiter}} {{file}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5886: Search for \"pattern\" in \"file\" and join each line by a space",
        "nl2bash_1843: Mathematically add each line in \"filename\""
      ],
      "Top-3 Scripts": [
        "nl2bash_5886: cat file | grep pattern | paste -sd' '",
        "nl2bash_1843: paste -sd+ filename | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Accept everything prompted by the `apt-get` command",
      "Most Similar TLDR Script": "yes | sudo apt-get install {{program}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_336: Display an infinite number of lines consisting of \"y\", until the user presses the Q key."
      ],
      "Top-3 Scripts": [
        "nl2bash_336: yes | cat | more\n\n\nyes | more"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9256: Print a colon-separated list of all directories from the $root directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_9256: find $root -type d | tr '\\n' ':'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7819: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_9293: Print a list of all duplicate case insensitive filenames in the current directory tree",
        "nl2bash_2668: Find all build* directories under /var/www/html/ and reverse sort them"
      ],
      "Top-3 Scripts": [
        "nl2bash_7819: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_9293: find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d",
        "nl2bash_2668: find /var/www/html/ -type d -name \"build*\" | sort -r"
      ],
      "Explanations about Options": {
        "-r": "reverse the result of comparisons",
        "-f": "fold lower case to upper case characters"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them",
        "nl2bash_9293: Print a list of all duplicate case insensitive filenames in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'",
        "nl2bash_9293: find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Launch the default shell with superuser privileges",
      "Most Similar TLDR Script": "sudo -i",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2239: Find all *.ogg (case insensitive) files/directories in entire file system"
      ],
      "Top-3 Scripts": [
        "nl2bash_2239: sudo find / -iname '*.ogg'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create a gzipped archive from a directory using relative paths",
      "Most Similar TLDR Script": "tar czf {{target.tar.gz}} -C {{path/to/directory}} .",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1973: Find *.java files under current directory and compress them to myfile.tar",
        "nl2bash_1974: Find *.java files under current directory and compress them to myfile.tar"
      ],
      "Top-3 Scripts": [
        "nl2bash_1973: find . -type f -name \"*.java\" | xargs    tar rvf myfile.tar\n\n\nfind . -type f -name \"*.java\" | xargs>    tar cvf myfile.tar\n\n\nfind . -type f -name \"*.java\" | xargs>    tar rvf myfile.tar",
        "nl2bash_1974: find . -type f -name \"*.java\" | xargs    tar rvf myfile.tar\n\n\nfind . -type f -name \"*.java\" | xargs>    tar cvf myfile.tar\n\n\nfind . -type f -name \"*.java\" | xargs>    tar rvf myfile.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_336: Display an infinite number of lines consisting of \"y\", until the user presses the Q key.",
        "nl2bash_3869: Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time"
      ],
      "Top-3 Scripts": [
        "nl2bash_336: yes | cat | more\n\n\nyes | more",
        "nl2bash_3869: find ~ -iname \"screen*\" | more"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Change the owner of a file/directory to match a reference file",
      "Most Similar TLDR Script": "chown --reference={{path/to/reference_file}} {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12432: Recursively change owner to \"www-data\" of \"/var/www/.gnome2\", \"/var/www/.config\", and \"/var/www/.config/inkscape\""
      ],
      "Top-3 Scripts": [
        "nl2bash_12432: chown -R www-data /var/www/.gnome2 /var/www/.config /var/www/.config/inkscape"
      ],
      "Explanations about Options": {
        "-R": "operate on files and directories recursively"
      }
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "Show the size of a single directory, in human readable units",
      "Most Similar TLDR Script": "du -sh {{path/to/directory}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"
      ],
      "Explanations about Options": {
        "-s": "display only a total for each argument"
      }
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4438: Find all sample*_1.txt files/directories under current directory, remove _1.txt from the end of file paths and pipe them to the command `parallel program {}-out {}_1.txt {}_2.txt`"
      ],
      "Top-3 Scripts": [
        "nl2bash_4438: find . -name \"sample*_1.txt\" | perl -pe 's/_1\\.txt$//' | parallel program {}-out {}_1.txt {}_2.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them",
        "nl2bash_9293: Print a list of all duplicate case insensitive filenames in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'",
        "nl2bash_9293: find . -type f | awk -F/ '{print $NF}' | sort -f | uniq -i -d"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Run on multiple machines via SSH",
      "Most Similar TLDR Script": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4438: Find all sample*_1.txt files/directories under current directory, remove _1.txt from the end of file paths and pipe them to the command `parallel program {}-out {}_1.txt {}_2.txt`"
      ],
      "Top-3 Scripts": [
        "nl2bash_4438: find . -name \"sample*_1.txt\" | perl -pe 's/_1\\.txt$//' | parallel program {}-out {}_1.txt {}_2.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print directories only",
      "Most Similar TLDR Script": "tree -d",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14296: List all files 2 levels deep in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_14296: tree -L 2 -fi"
      ],
      "Explanations about Options": {
        "-L": "Max display depth of the directory tree.",
        "-f": "Prints the full path prefix for each file.",
        "-i": "Makes tree not print the indentation lines, useful when used in conjunction with\n the -f option. Also removes as much whitespace as possible when used with the -J\n or -x options."
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13881: Counts all top-level files in a current folder."
      ],
      "Top-3 Scripts": [
        "nl2bash_13881: ls -1 | wc -l"
      ],
      "Explanations about Options": {
        "-1": "list one file per line. Avoid '\\n' with -q or -b"
      }
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_321: Display all files in a folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_321: find /usr/X11/man/man5 -print"
      ],
      "Explanations about Options": {
        "-t": "Use groff -mandoc to format the manual page to stdout. This option is not required\n in conjunction with -H, -T, or -Z.",
        "-r": "If a recent version of less is used as the pager, man will attempt to set its\n prompt and some sensible options. The default prompt looks like",
        "-p": "Specify the sequence of preprocessors to run before nroff or troff/groff. Not all\n installations will have a full set of preprocessors. Some of the preprocessors and\n the letters used to designate them are: eqn (e), grap (g), pic (p), tbl (t), vgrind\n (v), refer (r). This option overrides the $MANROFFSEQ environment variable.\n zsoelim is always run as the very first preprocessor.",
        "-i": "Ignore case when searching for manual pages. This is the default."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Run calculator in interactive mode using the standard math library",
      "Most Similar TLDR Script": "bc -l",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1843: Mathematically add each line in \"filename\""
      ],
      "Top-3 Scripts": [
        "nl2bash_1843: paste -sd+ filename | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2640: Find all SGID set files under current directory and show a few lines of output from the beginning"
      ],
      "Top-3 Scripts": [
        "nl2bash_2640: find . -perm /g+s | head"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bzip2",
      "MP Summary": "a block-sorting file compressor, v1.0.8",
      "Most Similar TLDR Task": "Compress a file",
      "Most Similar TLDR Script": "bzip2 {{path/to/file_to_compress}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5691: Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9."
      ],
      "Top-3 Scripts": [
        "nl2bash_5691: find . -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "less",
      "MP Summary": "opposite of more",
      "Most Similar TLDR Task": "Forward search for a string (press `n`/`N` to go to next/previous match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1845: Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I.",
        "nl2bash_1846: Page through the contents of yourFile, adding a $ at the end of each line."
      ],
      "Top-3 Scripts": [
        "nl2bash_1845: cat -vet file | less",
        "nl2bash_1846: cat -e yourFile | less"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "egrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5691: Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9."
      ],
      "Top-3 Scripts": [
        "nl2bash_5691: find . -type f | egrep -v '\\.bz2' | xargs bzip2 -9 &"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7951: find files ending with .jpg"
      ],
      "Top-3 Scripts": [
        "nl2bash_7951: find . -name '*.jpg' -print ./bar/foo.jpg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -print0 | egrep -iazZ '(\\.txt|\\.html?)$' | grep -vazZ 'index.html' | xargs -n 1 -0 grep -c -Hi elevator | egrep -v ':[0123]$'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
              "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2533: Find all .txt files under the current directory and below suppressing error messages"
      ],
      "Top-3 Scripts": [
        "nl2bash_2533: find . -name \"*.txt\" -print 2>/dev/null"
      ],
      "Explanations about Options": {}
    }
  ]
}