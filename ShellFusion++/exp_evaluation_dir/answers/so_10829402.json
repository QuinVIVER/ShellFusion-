{
  "Query": "How to start nginx via different port(other than 80)",
  "Answers": [
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2143: Find all *.gz files in the current directory and decompress them using gunzip",
        "nl2bash_2144: Find all *.gz files in the current directory and decompress them using gunzip",
        "nl2bash_1958: Find *.c files under $HOME and search for the string 'sprintf' in those files"
      ],
      "Top-3 Scripts": [
        "nl2bash_2143: find . -name '*.gz' -print0 | xargs -0 gunzip",
        "nl2bash_2144: find . -name '*.gz' -print0 | xargs -0 gunzip",
        "nl2bash_1958: find $HOME -name '*.c' -print | xargs    grep -l sprintf"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13694: Calculate the md5 sum of \"logdir\" and print only the hash",
        "nl2bash_2152: Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format",
        "nl2bash_2153: Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format"
      ],
      "Top-3 Scripts": [
        "nl2bash_13694: echo -n \"logdir\" | md5sum - | awk '{print $1}'",
        "nl2bash_2152: eval \"`find -type f -name \"*.htm\" |awk -F/ '{print \"cp \" $0 \" \" $2 \"-\" $3 \"-\" $4 \"-\" substr($5,5) \";\" }'`\"",
        "nl2bash_2153: eval \"`find -type f -name \"*.htm\" |awk -F/ '{print \"cp \" $0 \" \" $2 \"-\" $3 \"-\" $4 \"-\" substr($5,5) \";\" }'`\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2074: Find all 'test' directories in the current directory tree",
        "nl2bash_1960: Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end",
        "nl2bash_2090: Find all *.c files in /usr/src bigger than 100k"
      ],
      "Top-3 Scripts": [
        "nl2bash_2074: find -type d -a -name test",
        "nl2bash_1960: find /etc -maxdepth 1 -name \"*.conf\" | tail",
        "nl2bash_2090: find /usr/src -name '*.c' -size +100k -print"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13694: Calculate the md5 sum of \"logdir\" and print only the hash",
        "nl2bash_2152: Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format",
        "nl2bash_2153: Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format"
      ],
      "Top-3 Scripts": [
        "nl2bash_13694: echo -n \"logdir\" | md5sum - | awk '{print $1}'",
        "nl2bash_2152: eval \"`find -type f -name \"*.htm\" |awk -F/ '{print \"cp \" $0 \" \" $2 \"-\" $3 \"-\" $4 \"-\" substr($5,5) \";\" }'`\"",
        "nl2bash_2153: eval \"`find -type f -name \"*.htm\" |awk -F/ '{print \"cp \" $0 \" \" $2 \"-\" $3 \"-\" $4 \"-\" substr($5,5) \";\" }'`\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
        "nl2bash_13694: Calculate the md5 sum of \"logdir\" and print only the hash",
        "nl2bash_9721: Print the current date followed by ' doing stuff'"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg",
        "nl2bash_13694: echo -n \"logdir\" | md5sum - | awk '{print $1}'",
        "nl2bash_9721: echo $(date) doing stuff"
      ],
      "Explanations about Options": {
        "-n": "do not output the trailing newline"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
      "Most Similar TLDR Script": "file {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
        "nl2bash_13264: Dump \"file\" as ASCII characters"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg",
        "nl2bash_13264: od -t c file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2006: Find .rm files in the /home/me/download/ directory tree and convert them to the MP3 format",
        "nl2bash_1979: Find *.js UTF-8 files with BOM and correct them"
      ],
      "Top-3 Scripts": [
        "nl2bash_2006: find /home/me/download/ -type f -name \"*.rm\" -exec ffmpeg -i \\{} -sameq \\{}.mp3 \\; -exec rm \\{} \\;",
        "nl2bash_1979: find . -iname *.js -type f -exec sed 's/^\\xEF\\xBB\\xBF//' -i.bak {} \\; -exec rm {}.bak \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9717: Print the contents of all file* files under current directory",
        "nl2bash_9718: Print the contents of all file* files under current directory with white space safety in file names"
      ],
      "Top-3 Scripts": [
        "nl2bash_9717: perl -ple '' `find . -name \"file*\"`",
        "nl2bash_9718: find . -name \"file*\" -print0 | xargs -0 perl -ple ''"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1970: Find *.java files in the current directory and replace foo with bar in those files",
        "nl2bash_1979: Find *.js UTF-8 files with BOM and correct them",
        "nl2bash_10003: Print unique lines in \"set1\" and \"set2\" when compared to each other and remove any tabs"
      ],
      "Top-3 Scripts": [
        "nl2bash_1970: find . -name \"*.java\" -exec sed -i '' s/foo/bar/g \\;",
        "nl2bash_1979: find . -iname *.js -type f -exec sed 's/^\\xEF\\xBB\\xBF//' -i.bak {} \\; -exec rm {}.bak \\;",
        "nl2bash_10003: comm -3 <(sort set1) <(sort set2) | sed 's/\\t//g'"
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)",
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1958: Find *.c files under $HOME and search for the string 'sprintf' in those files",
        "nl2bash_6324: Search the CSS files found in the current directory tree for string \"foo\"",
        "nl2bash_2097: Find all *.c files under and below the current directory that contain \"hogehoge\""
      ],
      "Top-3 Scripts": [
        "nl2bash_1958: find $HOME -name '*.c' -print | xargs    grep -l sprintf",
        "nl2bash_6324: find . -name \\*.css -print0 | xargs -0 grep -nH foo",
        "nl2bash_2097: find . -name \\*.c | xargs grep hogehoge"
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
        "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
        "-n": "Prefix each line of output with the 1-based line number within its input file."
      }
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Read only 100 bytes of a file starting from the 500th byte",
      "Most Similar TLDR Script": "od --read-bytes {{100}} --skip-bytes={{500}} -v {{path/to/file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13264: Dump \"file\" as ASCII characters",
        "nl2bash_13263: Dump \"a\\0b\" as hexadecimal bytes"
      ],
      "Top-3 Scripts": [
        "nl2bash_13264: od -t c file",
        "nl2bash_13263: printf \"a\\0b\" | od -tx1"
      ],
      "Explanations about Options": {
        "-t": "select output format or formats"
      }
    },
    {
      "Command": "md5sum",
      "MP Summary": "compute and check MD5 message digest",
      "Most Similar TLDR Task": "Calculate MD5 checksums for multiple files",
      "Most Similar TLDR Script": "md5sum {{filename1}} {{filename2}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13694: Calculate the md5 sum of \"logdir\" and print only the hash",
        "nl2bash_13728: Calculate the md5sum of the executable file of command \"cc\"",
        "nl2bash_13695: Calculate the md5 sum of \"logdir\" and print only the hash"
      ],
      "Top-3 Scripts": [
        "nl2bash_13694: echo -n \"logdir\" | md5sum - | awk '{print $1}'",
        "nl2bash_13728: md5sum $(which cc)",
        "nl2bash_13695: echo -n \"logdir\" | md5sum - | awk '{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1949: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder",
        "nl2bash_1950: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_1949: find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;",
        "nl2bash_1950: find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
      "Most Similar TLDR Script": "comm {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10004: Print unique lines in sorted \"file1\" compared to sorted file \"file2\"",
        "nl2bash_10003: Print unique lines in \"set1\" and \"set2\" when compared to each other and remove any tabs"
      ],
      "Top-3 Scripts": [
        "nl2bash_10004: comm -23 file1 file2",
        "nl2bash_10003: comm -3 <(sort set1) <(sort set2) | sed 's/\\t//g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9637: Print output of \"qstat\" with full job names and format as a table",
        "nl2bash_13319: Save all entries that are wrapped around with opening and closing square brackets in file 'FILENAME' to variable 'var'"
      ],
      "Top-3 Scripts": [
        "nl2bash_9637: qstat -xml | tr '\\n' ' ' | sed 's#<job_list[^>]*>#\\n#g' \\   | sed 's#<[^>]*>##g' | grep \" \" | column -t",
        "nl2bash_13319: var=`egrep -o '\\[.*\\]' FILENAME | tr -d ][`"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
        "nl2bash_2167: Find all *.java files under current directory and change their encoding to utf-8 from cp1252"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg",
        "nl2bash_2167: find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 \"$1\" > converted && mv converted \"$1\"' -- {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image",
      "Most Similar TLDR Script": "ffmpeg -ss {{mm:ss}} -i {{video.mp4}} -frames 1 -s {{128x128}} -f image2 {{image.png}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2006: Find .rm files in the /home/me/download/ directory tree and convert them to the MP3 format"
      ],
      "Top-3 Scripts": [
        "nl2bash_2006: find /home/me/download/ -type f -name \"*.rm\" -exec ffmpeg -i \\{} -sameq \\{}.mp3 \\; -exec rm \\{} \\;"
      ],
      "Explanations about Options": {
        "-q": " Use fixed quality scale (VBR). The meaning of q/qscale is codec-dependent. If qscale\n is used without a stream_specifier then it applies only to the video stream, this is\n to maintain compatibility with previous behavior and as specifying the same codec\n specific value to 2 different codecs that is audio and video generally is not what is\n intended when no stream_specifier is used.",
        "-i": "input file url"
      }
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2074: Find all 'test' directories in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_2074: find -type d -a -name test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9638: Print output of 'script -c \"./a\" /dev/null' to standard output and \"output.txt\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9638: script -c \"./a\" /dev/null | tee output.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9362: Print all file/directory paths under current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_9362: find -print0 | while IFS= read -rd $'\\0' f ; do echo \"[$f]\" ; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Start top",
      "Most Similar TLDR Script": "top",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13: (GNU specific) Calculte and output amount of CPU load taken by all processes belonging to user 'abc'."
      ],
      "Top-3 Scripts": [
        "nl2bash_13: top -b -n 1 -u abc | awk 'NR>7 { sum += $9; } END { print sum; }'"
      ],
      "Explanations about Options": {
        "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
        "-n": ":Number-of-iterations limit as: -n number\n Specifies the maximum number of iterations, or frames, top should produce before\n ending.",
        "-u": "| -U :User-filter-mode as: -u | -U number or name\n Display only processes with a user id or user name matching that given. The `-u'\n option matches on effective user whereas the `-U' option matches on any user (real,\n effective, saved, or filesystem)."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Start interactive shell",
      "Most Similar TLDR Script": "sh",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2167: Find all *.java files under current directory and change their encoding to utf-8 from cp1252",
        "nl2bash_11938: Compress every file in the current directory tree that matches \"*cache.html\" and keep the original file"
      ],
      "Top-3 Scripts": [
        "nl2bash_2167: find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 \"$1\" > converted && mv converted \"$1\"' -- {} \\;",
        "nl2bash_11938: find . -type f -name \"*cache.html\" -exec sh -c \"gzip < {} > {}.gz\" \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps.",
        "-t": "Impose a time limit of n CPU seconds spent in user mode to be used by each\n process.",
        "-f": "Do not expand file name patterns."
      }
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`",
      "Most Similar TLDR Script": "tail -f {{file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1960: Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_1960: find /etc -maxdepth 1 -name \"*.conf\" | tail"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13263: Dump \"a\\0b\" as hexadecimal bytes"
      ],
      "Top-3 Scripts": [
        "nl2bash_13263: printf \"a\\0b\" | od -tx1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "If there are multiple executables which match, display all",
      "Most Similar TLDR Script": "which -a {{executable}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13728: Calculate the md5sum of the executable file of command \"cc\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13728: md5sum $(which cc)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2152: Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format",
        "nl2bash_2153: Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format"
      ],
      "Top-3 Scripts": [
        "nl2bash_2152: eval \"`find -type f -name \"*.htm\" |awk -F/ '{print \"cp \" $0 \" \" $2 \"-\" $3 \"-\" $4 \"-\" substr($5,5) \";\" }'`\"",
        "nl2bash_2153: eval \"`find -type f -name \"*.htm\" |awk -F/ '{print \"cp \" $0 \" \" $2 \"-\" $3 \"-\" $4 \"-\" substr($5,5) \";\" }'`\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_178: Receive input and print it to terminal"
      ],
      "Top-3 Scripts": [
        "nl2bash_178: cat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sum",
      "MP Summary": "checksum and count the blocks in a file",
      "Most Similar TLDR Task": "Compute a checksum with BSD-compatible algorithm and 1024-byte blocks",
      "Most Similar TLDR Script": "sum {{file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13: (GNU specific) Calculte and output amount of CPU load taken by all processes belonging to user 'abc'."
      ],
      "Top-3 Scripts": [
        "nl2bash_13: top -b -n 1 -u abc | awk 'NR>7 { sum += $9; } END { print sum; }'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session, appending to an existing file",
      "Most Similar TLDR Script": "script -a {{path/to/session.out}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9638: Print output of 'script -c \"./a\" /dev/null' to standard output and \"output.txt\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9638: script -c \"./a\" /dev/null | tee output.txt"
      ],
      "Explanations about Options": {
        "-c": "Run the command rather than an interactive shell. This makes it easy for a script\n to capture the output of a program that behaves differently when its stdout is not\n a tty."
      }
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Set multiple variables and run a program",
      "Most Similar TLDR Script": "env {{variable1}}={{value}} {{variable2}}={{value}} {{variable3}}={{value}} {{program}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14281: List all environment variables (name and value) whose name either equals PATH or starts with GOBIN"
      ],
      "Top-3 Scripts": [
        "nl2bash_14281: env | grep '^\\(GOBIN\\|PATH=\\)'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse an entire file and print to `stdout`",
      "Most Similar TLDR Script": "rev {{file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file using numeric rather than alphabetic order",
      "Most Similar TLDR Script": "sort -n {{path/to/file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10003: Print unique lines in \"set1\" and \"set2\" when compared to each other and remove any tabs"
      ],
      "Top-3 Scripts": [
        "nl2bash_10003: comm -3 <(sort set1) <(sort set2) | sed 's/\\t//g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_611405: A custom variable in config of nginx, in \"server\", won't get resolved"
      ],
      "Top-3 Scripts": [
        "ul_611405: man m4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
      "Most Similar TLDR Script": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9637: Print output of \"qstat\" with full job names and format as a table"
      ],
      "Top-3 Scripts": [
        "nl2bash_9637: qstat -xml | tr '\\n' ' ' | sed 's#<job_list[^>]*>#\\n#g' \\   | sed 's#<[^>]*>##g' | grep \" \" | column -t"
      ],
      "Explanations about Options": {
        "-t": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays."
      }
    },
    {
      "Command": "m4",
      "MP Summary": "macro processor",
      "Most Similar TLDR Task": "Define a macro before processing files",
      "Most Similar TLDR Script": "m4 -D{{macro_name}}={{macro_value}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_611405: A custom variable in config of nginx, in \"server\", won't get resolved"
      ],
      "Top-3 Scripts": [
        "ul_611405: man m4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "src",
      "MP Summary": "simple revision control",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2090: Find all *.c files in /usr/src bigger than 100k"
      ],
      "Top-3 Scripts": [
        "nl2bash_2090: find /usr/src -name '*.c' -size +100k -print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6317: Search the /usr/bin directory tree for regular files modified or created less than 10 days ago",
        "nl2bash_6318: Search the /usr/bin directory tree for regular files modified or created less than 10 days ago"
      ],
      "Top-3 Scripts": [
        "nl2bash_6317: find /usr/bin -type f -mtime -10",
        "nl2bash_6318: find /usr/bin -type f -mtime -10"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10004: Print unique lines in sorted \"file1\" compared to sorted file \"file2\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10004: comm -23 file1 file2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1970: Find *.java files in the current directory and replace foo with bar in those files"
      ],
      "Top-3 Scripts": [
        "nl2bash_1970: find . -name \"*.java\" -exec sed -i '' s/foo/bar/g \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9638: Print output of 'script -c \"./a\" /dev/null' to standard output and \"output.txt\""
      ],
      "Top-3 Scripts": [
        "nl2bash_9638: script -c \"./a\" /dev/null | tee output.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1949: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder",
        "nl2bash_1950: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_1949: find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;",
        "nl2bash_1950: find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "folder",
      "MP Summary": "set/list current folder/message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1949: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder",
        "nl2bash_1950: Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_1949: find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;",
        "nl2bash_1950: find /path/to/your/directory -regex '.*\\.\\(avi\\|flv\\)' -exec cp {} /path/to/specific/folder \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "qstat",
      "MP Summary": "Tool for querying gaming servers",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9637: Print output of \"qstat\" with full job names and format as a table"
      ],
      "Top-3 Scripts": [
        "nl2bash_9637: qstat -xml | tr '\\n' ' ' | sed 's#<job_list[^>]*>#\\n#g' \\   | sed 's#<[^>]*>##g' | grep \" \" | column -t"
      ],
      "Explanations about Options": {
        "-xml": "output status data as an XML document"
      }
    }
  ]
}