{
  "Query": "How to open some ports on Ubuntu?",
  "Answers": [
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6516: Search the current directory tree for regular files that contain \"string\"",
        "nl2bash_7693: find all the links in the current directory and print them in each line and display their names.",
        "nl2bash_6324: Search the CSS files found in the current directory tree for string \"foo\""
      ],
      "Top-3 Scripts": [
        "nl2bash_6516: find . -type f -print0 | xargs -0 grep string\n\n\nfind . -type f -printf '\"%p\"\\n' | xargs grep string\n\n\nfind . -type f | xargs grep string",
        "nl2bash_7693: find . -type l -print | xargs ls -ld | awk '{print $10}'",
        "nl2bash_6324: find . -name \\*.css -print0 | xargs -0 grep -nH foo"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
        "nl2bash_7706: find all the mp3 files in the current folder and move them to another folder",
        "nl2bash_10828: Rename \"svnlog.py\" to \"svnlog\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg",
        "nl2bash_7706: find . -name \"*.mp3\" -exec mv {} \"/Users/sir/Music//iTunes/iTunes Media/Automatically Add to iTunes.localized/\" \\;",
        "nl2bash_10828: mv svnlog.py svnlog"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6516: Search the current directory tree for regular files that contain \"string\"",
        "nl2bash_2074: Find all 'test' directories in the current directory tree",
        "nl2bash_8210: search for a pattern in all the python files in the current folder. and save the output to a txt file"
      ],
      "Top-3 Scripts": [
        "nl2bash_6516: find . -type f -print0 | xargs -0 grep string\n\n\nfind . -type f -printf '\"%p\"\\n' | xargs grep string\n\n\nfind . -type f | xargs grep string",
        "nl2bash_2074: find -type d -a -name test",
        "nl2bash_8210: find . -name \"*.py\" -type f -exec sh -c 'grep \"something\" <\"$0\" >\"$0.txt\"' {} \\;"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5827: Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.",
        "nl2bash_5828: Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it."
      ],
      "Top-3 Scripts": [
        "nl2bash_5827: find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \\;  -exec rm -rf '{}'\\;",
        "nl2bash_5828: find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \\;  -exec rm -rf '{}'\\;"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Change file extensions",
      "Most Similar TLDR Script": "rename {{.ext}} {{.bak}} {{*.ext}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5746: Recursively search for all directories containing \"foo\" (case insensitive) under the current directory, renaming them to replace \"foo\" (case insensitive) with \"Bar\"",
        "nl2bash_5747: Recursively search for all files not ending in \".xml\" under the current directory, append \".xml\" to the end of each file name"
      ],
      "Top-3 Scripts": [
        "nl2bash_5746: find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +",
        "nl2bash_5747: find . -type f \\! -name '*.xml' -print0 | xargs -0 rename 's/$/.xml/'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer file from local to remote host",
      "Most Similar TLDR Script": "rsync {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5827: Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.",
        "nl2bash_5828: Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it."
      ],
      "Top-3 Scripts": [
        "nl2bash_5827: find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \\;  -exec rm -rf '{}'\\;",
        "nl2bash_5828: find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \\;  -exec rm -rf '{}'\\;"
      ],
      "Explanations about Options": {
        "-a": "This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and\n want to preserve almost everything (with -H being a notable omission). The only\n exception to the above equivalence is when --files-from is specified, in which case\n -r is not implied.",
        "-e": "This option allows you to choose an alternative remote shell program to use for\n communication between the local and remote copies of rsync. Typically, rsync is\n configured to use ssh by default, but you may prefer to use rsh on a local network.",
        "-v": "This option increases the amount of information you are given during the transfer.\n By default, rsync works silently. A single -v will give you information about what\n files are being transferred and a brief summary at the end. Two -v options will\n give you information on what files are being skipped and slightly more information\n at the end. More than two -v options should only be used if you are debugging\n rsync.",
        "-R": "Use relative paths. This means that the full path names specified on the command\n line are sent to the server rather than just the last parts of the filenames. This\n is particularly useful when you want to send several different directories at the\n same time. For example, if you used this command:",
        "-x": "This tells rsync to avoid crossing a filesystem boundary when recursing. This does\n not limit the user\u2019s ability to specify items to copy from multiple filesystems,\n just rsync\u2019s recursion through the hierarchy of each directory that the user\n specified, and also the analogous recursion on the receiving side during deletion.\n Also keep in mind that rsync treats a \"bind\" mount to the same device as being on\n the same filesystem."
      }
    },
    {
      "Command": "users",
      "MP Summary": "print the user names of users currently logged in to the current host",
      "Most Similar TLDR Task": "Display a list of logged in users according to a specific file",
      "Most Similar TLDR Script": "users {{/var/log/wmtp}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6183: Search for the regex '->get(\\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames"
      ],
      "Top-3 Scripts": [
        "nl2bash_6183: find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4035: Find all files/directories under current directory with 'foo' in their paths and copy them to ~/bar"
      ],
      "Top-3 Scripts": [
        "nl2bash_4035: while read line ; do cp \"$line\" ~/bar ; done < <(find . | grep foo)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13728: Calculate the md5sum of the executable file of command \"cc\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13728: md5sum $(which cc)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1970: Find *.java files in the current directory and replace foo with bar in those files"
      ],
      "Top-3 Scripts": [
        "nl2bash_1970: find . -name \"*.java\" -exec sed -i '' s/foo/bar/g \\;"
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Enable backspace and GNU readline hotkeys when entering input with read",
      "Most Similar TLDR Script": "read -e {{variable}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4035: Find all files/directories under current directory with 'foo' in their paths and copy them to ~/bar"
      ],
      "Top-3 Scripts": [
        "nl2bash_4035: while read line ; do cp \"$line\" ~/bar ; done < <(find . | grep foo)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if directory not exists",
      "Most Similar TLDR Script": "test ! -d {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2074: Find all 'test' directories in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_2074: find -type d -a -name test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from `stdin`",
      "Most Similar TLDR Script": "sh -s",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8210: search for a pattern in all the python files in the current folder. and save the output to a txt file"
      ],
      "Top-3 Scripts": [
        "nl2bash_8210: find . -name \"*.py\" -type f -exec sh -c 'grep \"something\" <\"$0\" >\"$0.txt\"' {} \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7693: find all the links in the current directory and print them in each line and display their names."
      ],
      "Top-3 Scripts": [
        "nl2bash_7693: find . -type l -print | xargs ls -ld | awk '{print $10}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "md5sum",
      "MP Summary": "compute and check MD5 message digest",
      "Most Similar TLDR Task": "Calculate MD5 checksums for multiple files",
      "Most Similar TLDR Script": "md5sum {{filename1}} {{filename2}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13728: Calculate the md5sum of the executable file of command \"cc\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13728: md5sum $(which cc)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4035: Find all files/directories under current directory with 'foo' in their paths and copy them to ~/bar"
      ],
      "Top-3 Scripts": [
        "nl2bash_4035: while read line ; do cp \"$line\" ~/bar ; done < <(find . | grep foo)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode",
      "Most Similar TLDR Script": "grep -Ei {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6516: Search the current directory tree for regular files that contain \"string\"",
        "nl2bash_6324: Search the CSS files found in the current directory tree for string \"foo\"",
        "nl2bash_6183: Search for the regex '->get(\\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames"
      ],
      "Top-3 Scripts": [
        "nl2bash_6516: find . -type f -print0 | xargs -0 grep string\n\n\nfind . -type f -printf '\"%p\"\\n' | xargs grep string\n\n\nfind . -type f | xargs grep string",
        "nl2bash_6324: find . -name \\*.css -print0 | xargs -0 grep -nH foo",
        "nl2bash_6183: find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\\|#hyphenate' {} +"
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
        "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
        "-n": "Prefix each line of output with the 1-based line number within its input file."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print every third line starting from the first line",
      "Most Similar TLDR Script": "awk 'NR%3==1' {{filename}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7693: find all the links in the current directory and print them in each line and display their names."
      ],
      "Top-3 Scripts": [
        "nl2bash_7693: find . -type l -print | xargs ls -ld | awk '{print $10}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse an entire file and print to `stdout`",
      "Most Similar TLDR Script": "rev {{file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7693: find all the links in the current directory and print them in each line and display their names."
      ],
      "Top-3 Scripts": [
        "nl2bash_7693: find . -type l -print | xargs ls -ld | awk '{print $10}'"
      ],
      "Explanations about Options": {
        "-d": "list directories themselves, not their contents",
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Display file in verbose mode, i.e. without replacing duplicate lines with `*`",
      "Most Similar TLDR Script": "od -v {{path/to/file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5867: Search for \" 000\" in the hex dump of \"file-with-nulls\""
      ],
      "Top-3 Scripts": [
        "nl2bash_5867: od file-with-nulls | grep ' 000'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`, even if the file is rotated",
      "Most Similar TLDR Script": "tail -F {{file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1960: Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_1960: find /etc -maxdepth 1 -name \"*.conf\" | tail"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10829: Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end"
      ],
      "Top-3 Scripts": [
        "nl2bash_10829: mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13571: Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_13571: join -t':' <(sort LN.txt) <(sort PH.txt) | join -t':'  - <(sort AD.txt)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13571: Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_13571: join -t':' <(sort LN.txt) <(sort PH.txt) | join -t':'  - <(sort AD.txt)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bzip2",
      "MP Summary": "a block-sorting file compressor, v1.0.8",
      "Most Similar TLDR Task": "Decompress a file",
      "Most Similar TLDR Script": "bzip2 -d {{path/to/compressed_file.bz2}}",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5709: Recursively finds and compresses all files in a current folder with 4 parallel processes."
      ],
      "Top-3 Scripts": [
        "nl2bash_5709: find . -type f -print0 | xargs -0 -n1 -P4 bzip2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6317: Search the /usr/bin directory tree for regular files modified or created less than 10 days ago",
        "nl2bash_6318: Search the /usr/bin directory tree for regular files modified or created less than 10 days ago"
      ],
      "Top-3 Scripts": [
        "nl2bash_6317: find /usr/bin -type f -mtime -10",
        "nl2bash_6318: find /usr/bin -type f -mtime -10"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7706: find all the mp3 files in the current folder and move them to another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_7706: find . -name \"*.mp3\" -exec mv {} \"/Users/sir/Music//iTunes/iTunes Media/Automatically Add to iTunes.localized/\" \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "mv $file $(echo $file | rev | cut -f2- -d- | rev).pkg\n",
          "command-options": {
            "mv": {
              "mpsum": "move (rename) files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            }
          },
          "TLDR_inform": {
            "mv": {
              "man1_mv_21808": "move renam file directori overwrit exist file target prompt confirm overwrit exist file move file arbitrari locat move file verbos mode show file move prompt confirm overwrit exist file regardless file permiss"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1970: Find *.java files in the current directory and replace foo with bar in those files",
        "nl2bash_4035: Find all files/directories under current directory with 'foo' in their paths and copy them to ~/bar"
      ],
      "Top-3 Scripts": [
        "nl2bash_1970: find . -name \"*.java\" -exec sed -i '' s/foo/bar/g \\;",
        "nl2bash_4035: while read line ; do cp \"$line\" ~/bar ; done < <(find . | grep foo)"
      ],
      "Explanations about Options": {}
    }
  ]
}