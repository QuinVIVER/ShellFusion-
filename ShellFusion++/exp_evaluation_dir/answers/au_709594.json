{
  "Query": "How can I disable and enable SSL in Apache (without a command if possible)?",
  "Answers": [
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2307: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2306: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2304: Find all *.so files under current directory and search for mysymbol in their symbol tables"
      ],
      "Top-3 Scripts": [
        "nl2bash_2307: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2306: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2304: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message without the trailing newline",
      "Most Similar TLDR Script": "echo -n \"{{Hello World}}\"",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2134: Find all *.ext files/directories under current directory and print their path and parent directory path",
        "nl2bash_2135: Find all *.ext files/directories under current directory and print their path and parent directory path"
      ],
      "Top-3 Scripts": [
        "nl2bash_2134: find . -name '*.ext' | parallel echo {} '`dirname {}`'",
        "nl2bash_2135: find . -name '*.ext' | parallel echo {} '`dirname {}`'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2307: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2306: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand"
      ],
      "Top-3 Scripts": [
        "nl2bash_2307: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2306: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
      }
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Run on multiple machines via SSH",
      "Most Similar TLDR Script": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2134: Find all *.ext files/directories under current directory and print their path and parent directory path",
        "nl2bash_2135: Find all *.ext files/directories under current directory and print their path and parent directory path"
      ],
      "Top-3 Scripts": [
        "nl2bash_2134: find . -name '*.ext' | parallel echo {} '`dirname {}`'",
        "nl2bash_2135: find . -name '*.ext' | parallel echo {} '`dirname {}`'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2307: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2022: Find List of directory  with non-zero file count",
        "nl2bash_2214: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the literal '%p' and '%f' as the path and name respectively for each file"
      ],
      "Top-3 Scripts": [
        "nl2bash_2307: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done",
        "nl2bash_2214: find . -iname \"*.mov\" -exec ffmpeg -i \"%p\" -f flv \"%f\" \\;"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Vertically append images",
      "Most Similar TLDR Script": "convert {{image1.png}} {{image2.png}} {{image3.png}} -append {{image123.png}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2089: Find all *.bmp files in the current directory tree and convert them to the JPEG format"
      ],
      "Top-3 Scripts": [
        "nl2bash_2089: find -name *.bmp -type f -exec convert '{}' '{}'.jpg \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send message to \"testuser\" on terminal \"/dev/tty/5\"",
      "Most Similar TLDR Script": "write {{testuser}} {{tty/5}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22836997: Is it possible to write a char driver without using file_operations structure?"
      ],
      "Top-3 Scripts": [
        "so_22836997: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Enable backspace and GNU readline hotkeys when entering input with read",
      "Most Similar TLDR Script": "read -e {{variable}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count",
        "so_22836997: Is it possible to write a char driver without using file_operations structure?"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done",
        "so_22836997: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image",
      "Most Similar TLDR Script": "ffmpeg -ss {{mm:ss}} -i {{video.mp4}} -frames 1 -s {{128x128}} -f image2 {{image.png}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2214: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the literal '%p' and '%f' as the path and name respectively for each file"
      ],
      "Top-3 Scripts": [
        "nl2bash_2214: find . -iname \"*.mov\" -exec ffmpeg -i \"%p\" -f flv \"%f\" \\;"
      ],
      "Explanations about Options": {
        "-i": "input file url"
      }
    },
    {
      "Command": "readelf",
      "MP Summary": "Displays information about ELF files.",
      "Most Similar TLDR Task": "Display the entries in symbol table section of the ELF file, if it has one",
      "Most Similar TLDR Script": "readelf --symbols {{path/to/binary}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2304: Find all *.so files under current directory and search for mysymbol in their symbol tables",
        "nl2bash_2305: Find all *.so files under current directory and search for mysymbol in their symbol tables"
      ],
      "Top-3 Scripts": [
        "nl2bash_2304: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;",
        "nl2bash_2305: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;"
      ],
      "Explanations about Options": {
        "-s": "Displays the entries in symbol table section of the file, if it has one."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2307: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2306: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2304: Find all *.so files under current directory and search for mysymbol in their symbol tables"
      ],
      "Top-3 Scripts": [
        "nl2bash_2307: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2306: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2304: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4604: Find an inode and remove"
      ],
      "Top-3 Scripts": [
        "nl2bash_4604: find . -inum 968746 -exec rm -i {} \\;"
      ],
      "Explanations about Options": {
        "-i": "prompt before every removal"
      }
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Recursively change the owner of a directory and its contents",
      "Most Similar TLDR Script": "chown -R {{user}} {{path/to/directory}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12688: change user and group of the file /usr/bin/aws to user amzadm and group root"
      ],
      "Top-3 Scripts": [
        "nl2bash_12688: chown amzadm.root  /usr/bin/aws"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "stat",
      "MP Summary": "display file or file system status",
      "Most Similar TLDR Task": "Show only octal file permissions",
      "Most Similar TLDR Script": "stat -c \"%a %n\" {{file}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7115: find all regular/normal files in current folder and display the filename and size"
      ],
      "Top-3 Scripts": [
        "nl2bash_7115: find $(pwd)/* -type f -exec stat -c \"f%15s %n\" {} +"
      ],
      "Explanations about Options": {
        "-c": "use the specified FORMAT instead of the default; output a newline after each use of\n FORMAT"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2649: Find all SUID set files under current directory and show a few lines of output from the beginning"
      ],
      "Top-3 Scripts": [
        "nl2bash_2649: find . -perm /u=s | head"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8509: search for soft links in current folder and display those links which are not pointed to files in current folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_8509: find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\""
      ],
      "Explanations about Options": {
        "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
      }
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22836997: Is it possible to write a char driver without using file_operations structure?",
        "nl2bash_2188: Find all *.jpg files on the system",
        "nl2bash_8507: search for regular/normal file with the name \"myfile\" in the entire file system and discard all the errors"
      ],
      "Top-3 Scripts": [
        "so_22836997: /dev/",
        "nl2bash_2188: find / -name *.jpg 2>/dev/null",
        "nl2bash_8507: find / -name myfile -type f -print 2> /dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "search for soft links in current folder and display those links which are not pointed to files in current folder",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type l -exec readlink -f '{}' \\; | grep -v \"^`readlink -f ${PWD}`\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "readlink": {
              "mpsum": "print resolved symbolic links or canonical file names",
              "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "readlink": {
              "man1_readlink_28912": "follow symlink get symlink inform get absolut path file get actual file symlink point"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12688: change user and group of the file /usr/bin/aws to user amzadm and group root"
      ],
      "Top-3 Scripts": [
        "nl2bash_12688: chown amzadm.root  /usr/bin/aws"
      ],
      "Explanations about Options": {}
    }
  ]
}