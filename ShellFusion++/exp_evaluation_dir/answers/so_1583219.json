{
  "Query": "How to do a recursive find/replace of a string with awk or sed?",
  "Answers": [
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36808542: Using sed with regex to find and replace a string"
      ],
      "Top-3 Scripts": [
        "so_36808542: sed -i \"s|\\(eval sh ~/\\.config/fish/colors/base16-\\)\\([^.]*\\)\\.\\([^.]*\\)\\\\(.*\\)|\\1$theme.$background\\4|\n\" ~/Developer/dotfiles/config.fish\nsed -i \"s/\\(base16\\)\\([-_]\\)\\([a-zA-Z]*\\)/\\1\\2$theme/g\" ~/Developer/dotfiles/init.vim"
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5249: Find regular files readable by the world",
        "nl2bash_5250: Find regular files that are bigger than 500 MB in size under current directoryt tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5249: find . -perm -g=r -type f -exec ls -l {} \\;",
        "nl2bash_5250: find . -type f -size +500M"
      ],
      "Explanations about Options": {
        "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
        "-type": "File is of type c:",
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:"
      }
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36808542: Using sed with regex to find and replace a string"
      ],
      "Top-3 Scripts": [
        "so_36808542: sed -i \"s|\\(eval sh ~/\\.config/fish/colors/base16-\\)\\([^.]*\\)\\.\\([^.]*\\)\\\\(.*\\)|\\1$theme.$background\\4|\n\" ~/Developer/dotfiles/config.fish\nsed -i \"s/\\(base16\\)\\([-_]\\)\\([a-zA-Z]*\\)/\\1\\2$theme/g\" ~/Developer/dotfiles/init.vim"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36808542: Using sed with regex to find and replace a string"
      ],
      "Top-3 Scripts": [
        "so_36808542: sed -i \"s|\\(eval sh ~/\\.config/fish/colors/base16-\\)\\([^.]*\\)\\.\\([^.]*\\)\\\\(.*\\)|\\1$theme.$background\\4|\n\" ~/Developer/dotfiles/config.fish\nsed -i \"s/\\(base16\\)\\([-_]\\)\\([a-zA-Z]*\\)/\\1\\2$theme/g\" ~/Developer/dotfiles/init.vim"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fish",
      "MP Summary": "the friendly interactive shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "fish -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36808542: Using sed with regex to find and replace a string"
      ],
      "Top-3 Scripts": [
        "so_36808542: sed -i \"s|\\(eval sh ~/\\.config/fish/colors/base16-\\)\\([^.]*\\)\\.\\([^.]*\\)\\\\(.*\\)|\\1$theme.$background\\4|\n\" ~/Developer/dotfiles/config.fish\nsed -i \"s/\\(base16\\)\\([-_]\\)\\([a-zA-Z]*\\)/\\1\\2$theme/g\" ~/Developer/dotfiles/init.vim"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5249: Find regular files readable by the world"
      ],
      "Top-3 Scripts": [
        "nl2bash_5249: find . -perm -g=r -type f -exec ls -l {} \\;"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "theme",
      "MP Summary": "create a web page from a template file",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find regular files readable by the world",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -perm -g=r -type f -exec ls -l {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
              "-type": "File is of type c:"
            },
            "ls": {
              "mpsum": "list directory contents",
              "-l": "use a long listing format"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36808542: Using sed with regex to find and replace a string"
      ],
      "Top-3 Scripts": [
        "so_36808542: sed -i \"s|\\(eval sh ~/\\.config/fish/colors/base16-\\)\\([^.]*\\)\\.\\([^.]*\\)\\\\(.*\\)|\\1$theme.$background\\4|\n\" ~/Developer/dotfiles/config.fish\nsed -i \"s/\\(base16\\)\\([-_]\\)\\([a-zA-Z]*\\)/\\1\\2$theme/g\" ~/Developer/dotfiles/init.vim"
      ],
      "Explanations about Options": {}
    }
  ]
}