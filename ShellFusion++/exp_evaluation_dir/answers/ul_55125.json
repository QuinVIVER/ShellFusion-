{
  "Query": "Alias for directory listing sorted by time modified in reverse order",
  "Answers": [
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13475: Saves listing of a current folder in 'var' variable.",
        "nl2bash_13456: Saves byte size of all content of $1 folder in 'uiTotalSize' variable.",
        "nl2bash_9778: Print the files in the current directory as a list of semicolon separated values"
      ],
      "Top-3 Scripts": [
        "nl2bash_13475: var=$(ls -l)",
        "nl2bash_13456: uiTotalSize=$(ls -l -R $1 | grep -v ^d | awk '{total+=$5;} END {print total;}')",
        "nl2bash_9778: ls -1b | tr '\\n' ';'\n\n\nls -m | tr -d ' ' | tr ',' ';'"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format",
        "-R": "list subdirectories recursively",
        "-m": "fill width with a comma separated list of entries"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file using numeric rather than alphabetic order",
      "Most Similar TLDR Script": "sort -n {{path/to/file}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13898: Counts lines in each of *.php files in current folder with subfolders and prints total count as well.",
        "nl2bash_14295: List all file paths under the current directory with case insensitive name \".note\" in reverse alphabetic order"
      ],
      "Top-3 Scripts": [
        "nl2bash_13898: find . -name '*.php' | xargs wc -l | sort -r",
        "nl2bash_14295: find . -iname '.note' | sort -r"
      ],
      "Explanations about Options": {
        "-r": "reverse the result of comparisons"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7630: find all the files with the name test in the current folder ( case insensitive )",
        "nl2bash_9894: Print the list of non-hidden directories in the current directory",
        "nl2bash_2886: Find all directories under current directory having DIRNAME in their name"
      ],
      "Top-3 Scripts": [
        "nl2bash_7630: find . -iname test",
        "nl2bash_9894: find -type d -maxdepth 1 ! -name \".*\" -printf \"%f\\n\"",
        "nl2bash_2886: find . -type d | grep DIRNAME"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:",
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1679: run bash in screen and source a file before printing the prompt",
        "nl2bash_1678: run a somebashstatement with the filename as argument, inside a for loop that iterates over a number of filenames found recursively in /path that match 'pattern'"
      ],
      "Top-3 Scripts": [
        "nl2bash_1679: screen bash --rcfile yourfile.rc",
        "nl2bash_1678: find /path -name 'pattern' -exec bash -c 'for file; do somebashstatement \"$file\"; done' -- {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2513: Find all .txt files in current  directory and rename with  .html .",
        "nl2bash_1770: Add the .abc suffix to the names of all *.txt regular files in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_2513: find  . -type f -name \"*.txt\" -exec mv {} `basename {} .html` .html \\;",
        "nl2bash_1770: find . -type f -iname '*.txt' -print0 | xargs -0 mv {} {}.abc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13297: Save Java home in variable \"JAVA_HOME\"",
        "nl2bash_327: Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories"
      ],
      "Top-3 Scripts": [
        "nl2bash_13297: JAVA_HOME=\"$( readlink -f \"$( which java )\" | sed \"s:bin/.*$::\" )\"",
        "nl2bash_327: find . -type f |sed '/.\\/dir[12]\\/[^/]*$/d'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13444: Save the user name in all capitals of the current user to variable \"v\"",
        "nl2bash_13456: Saves byte size of all content of $1 folder in 'uiTotalSize' variable.",
        "nl2bash_674: display a long listing of all the regular/normal files in the current folder along with their md5sum"
      ],
      "Top-3 Scripts": [
        "nl2bash_13444: v=$(whoami | awk '{print toupper($0)}')",
        "nl2bash_13456: uiTotalSize=$(ls -l -R $1 | grep -v ^d | awk '{total+=$5;} END {print total;}')",
        "nl2bash_674: find . -type f -exec sh -c 'printf \"%s %s \\n\" \"$(ls -l $1)\" \"$(md5sum  $1)\"' '' '{}' '{}' \\; | awk '{$8=\"\"; print $0}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11457: Remove all files/directories in the current directory without '.git' and '.gitignore'",
        "nl2bash_13898: Counts lines in each of *.php files in current folder with subfolders and prints total count as well.",
        "nl2bash_1770: Add the .abc suffix to the names of all *.txt regular files in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_11457: find -mindepth 1 -depth -print0 | grep -vEzZ '(\\.git(/|$)|/\\.gitignore$)' | xargs -0 rm -rvf",
        "nl2bash_13898: find . -name '*.php' | xargs wc -l | sort -r",
        "nl2bash_1770: find . -type f -iname '*.txt' -print0 | xargs -0 mv {} {}.abc"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2886: Find all directories under current directory having DIRNAME in their name",
        "nl2bash_11457: Remove all files/directories in the current directory without '.git' and '.gitignore'",
        "nl2bash_13435: Save the percentage of packets lost of the 5 packets sent to \"$host\" in variable \"packet_loss\""
      ],
      "Top-3 Scripts": [
        "nl2bash_2886: find . -type d | grep DIRNAME",
        "nl2bash_11457: find -mindepth 1 -depth -print0 | grep -vEzZ '(\\.git(/|$)|/\\.gitignore$)' | xargs -0 rm -rvf",
        "nl2bash_13435: packet_loss=$(ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)')"
      ],
      "Explanations about Options": {
        "-Z": "Output a zero byte (the ASCII NUL character) instead of the character that normally\n follows a file name. For example, grep -lZ outputs a zero byte after each file\n name instead of the usual newline. This option makes the output unambiguous, even\n in the presence of file names containing unusual characters like newlines. This\n option can be used with commands like find -print0, perl -0, sort -z, and xargs -0\n to process arbitrary file names, even those that contain newline characters.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
        "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names."
      }
    },
    {
      "Command": "whoami",
      "MP Summary": "print effective userid",
      "Most Similar TLDR Task": "Display the username after a change in the user ID",
      "Most Similar TLDR Script": "sudo whoami",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13445: Save the user name in upper case of the current user in variable \"v\"",
        "nl2bash_13444: Save the user name in all capitals of the current user to variable \"v\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13445: v=$(whoami | tr 'a-z' 'A-Z')\n\n\nv=$(whoami | tr [:lower:] [:upper:])",
        "nl2bash_13444: v=$(whoami | awk '{print toupper($0)}')\n\n\nv=$(whoami | perl -e 'print uc <>')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Recursively remove a directory and all its subdirectories",
      "Most Similar TLDR Script": "rm -r {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7997: find files under the current directory containing a space in the filename and delete them",
        "nl2bash_11457: Remove all files/directories in the current directory without '.git' and '.gitignore'"
      ],
      "Top-3 Scripts": [
        "nl2bash_7997: find . -name \"* *\" -exec rm -f {} \\;",
        "nl2bash_11457: find -mindepth 1 -depth -print0 | grep -vEzZ '(\\.git(/|$)|/\\.gitignore$)' | xargs -0 rm -rvf"
      ],
      "Explanations about Options": {
        "-v": "explain what is being done",
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13539: Concatenate all files under the current directory and below that contain \"test\" in their names",
        "nl2bash_401: Display the contents of \"myfile\" located in the current directory."
      ],
      "Top-3 Scripts": [
        "nl2bash_13539: find . -iname '*test*' -exec cat {} \\;",
        "nl2bash_401: cat myfile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13445: Save the user name in upper case of the current user in variable \"v\"",
        "nl2bash_9778: Print the files in the current directory as a list of semicolon separated values"
      ],
      "Top-3 Scripts": [
        "nl2bash_13445: v=$(whoami | tr 'a-z' 'A-Z')\n\n\nv=$(whoami | tr [:lower:] [:upper:])",
        "nl2bash_9778: ls -1b | tr '\\n' ';'\n\n\nls -m | tr -d ' ' | tr ',' ';'"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "mktemp",
      "MP Summary": "create a temporary file or directory",
      "Most Similar TLDR Task": "Create a temporary directory and return the absolute path to it",
      "Most Similar TLDR Script": "mktemp -d",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12988: Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable.",
        "nl2bash_12989: Creates temporary directory in '/tmp/' folder and saves path to it in 'my_tmp_dir' variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_12988: rand_str=$(mktemp --dry-run ${str// /X})",
        "nl2bash_12989: my_tmp_dir=$(mktemp -d --tmpdir=/tmp)"
      ],
      "Explanations about Options": {
        "--tmpdir": "interpret TEMPLATE relative to DIR; if DIR is not specified, use $TMPDIR if set,\n else /tmp. With this option, TEMPLATE must not be an absolute name; unlike with\n -t, TEMPLATE may contain slashes, but mktemp creates only the final component",
        "--dry-run": "do not create anything; merely print a name (unsafe)",
        "-d": "create a directory, not a file"
      }
    },
    {
      "Command": "scp",
      "MP Summary": "secure copy (remote file copy program)",
      "Most Similar TLDR Task": "Recursively copy the contents of a directory from a remote host to a local directory",
      "Most Similar TLDR Script": "scp -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10716: Recursively copy all files and directories matching \"*ela*L1*TE*\" in localhost's directory /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/ to /var/www/html/sbo/2010/teacher/ela/level1 on localhost connecting as ssh user \"dalvarado\", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information.",
        "nl2bash_13552: Connect to host \"remotehost\" as ssh user \"user\" to copy remote file \"/location/KMST_DataFile_*.kms\" to current directory on local host."
      ],
      "Top-3 Scripts": [
        "nl2bash_10716: scp -Bpqr /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/*ela*L1*TE* dalvarado@localhost:/var/www/html/sbo/2010/teacher/ela/level1",
        "nl2bash_13552: scp -v user@remotehost:/location/KMST_DataFile_*.kms"
      ],
      "Explanations about Options": {
        "-B": "Selects batch mode (prevents asking for passwords or passphrases).",
        "-v": "Verbose mode. Causes scp and ssh(1) to print debugging messages about their\n progress. This is helpful in debugging connection, authentication, and\n configuration problems.",
        "-q": "Quiet mode: disables the progress meter as well as warning and diagnostic messages\n from ssh(1).",
        "-r": "Recursively copy entire directories. Note that scp follows symbolic links\n encountered in the tree traversal.",
        "-p": "Preserves modification times, access times, and modes from the original file."
      }
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1676: run a script in 1000 seconds"
      ],
      "Top-3 Scripts": [
        "nl2bash_1676: ./hw | sleep 1000"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13444: Save the user name in all capitals of the current user to variable \"v\"",
        "nl2bash_13456: Saves byte size of all content of $1 folder in 'uiTotalSize' variable.",
        "nl2bash_674: display a long listing of all the regular/normal files in the current folder along with their md5sum"
      ],
      "Top-3 Scripts": [
        "nl2bash_13444: v=$(whoami | awk '{print toupper($0)}')",
        "nl2bash_13456: uiTotalSize=$(ls -l -R $1 | grep -v ^d | awk '{total+=$5;} END {print total;}')",
        "nl2bash_674: find . -type f -exec sh -c 'printf \"%s %s \\n\" \"$(ls -l $1)\" \"$(md5sum  $1)\"' '' '{}' '{}' \\; | awk '{$8=\"\"; print $0}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12609: change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories"
      ],
      "Top-3 Scripts": [
        "nl2bash_12609: find /the/path -depth -type f -name \"*.abc\" -exec sh -c 'mv \"$1\" \"$(dirname \"$1\")/$(basename \"$1\" .abc).edefg\"' _ {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cal",
      "MP Summary": "displays a calendar and the date of Easter",
      "Most Similar TLDR Task": "Display a calendar for a specific month and year",
      "Most Similar TLDR Script": "cal {{month}} {{year}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13482: Saves printed calendar of February,1900 in positional variables."
      ],
      "Top-3 Scripts": [
        "nl2bash_13482: set -- $(cal 2 1900)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12609: change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories",
        "nl2bash_674: display a long listing of all the regular/normal files in the current folder along with their md5sum"
      ],
      "Top-3 Scripts": [
        "nl2bash_12609: find /the/path -depth -name \"*.abc\" -exec sh -c 'mv \"$1\" \"${1%.abc}.edefg\"' _ {} \\;\n\n\nfind /the/path -depth -type f -name \"*.abc\" -exec sh -c 'mv \"$1\" \"$(dirname \"$1\")/$(basename \"$1\" .abc).edefg\"' _ {} \\;",
        "nl2bash_674: find . -type f -exec sh -c 'printf \"%s %s \\n\" \"$(ls -l $1)\" \"$(md5sum  $1)\"' '' '{}' '{}' \\; | awk '{$8=\"\"; print $0}'\n\n\nfind . -type f -exec sh -c 'printf \"%s %s \\n\" \"$(ls -l $1)\" \"$(md5sum $1)\"' '' '{}' '{}' \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Mark variables that are modified or created for export",
      "Most Similar TLDR Script": "set -a",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13482: Saves printed calendar of February,1900 in positional variables."
      ],
      "Top-3 Scripts": [
        "nl2bash_13482: set -- $(cal 2 1900)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Use standard input to count lines, words and characters (bytes) in that order",
      "Most Similar TLDR Script": "{{find .}} | wc",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13898: Counts lines in each of *.php files in current folder with subfolders and prints total count as well."
      ],
      "Top-3 Scripts": [
        "nl2bash_13898: find . -name '*.php' | xargs wc -l | sort -r"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8043: find md5sum of a string stored in $pass"
      ],
      "Top-3 Scripts": [
        "nl2bash_8043: printf '%s' \"$pass\" | md5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13449: Save to report.txt the first line of every text file in the home directory",
        "nl2bash_7881: find all the text files in the home folder and display the first lines. Save the output to the file report.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_13449: find $HOME/. -name *.txt -exec head -n 1 -v {} \\; > report.txt",
        "nl2bash_7881: find $HOME/. -name *.txt -exec head -n 1 -v {} \\; > report.txt"
      ],
      "Explanations about Options": {
        "-v": "always print headers giving file names",
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7630: find all the files with the name test in the current folder ( case insensitive )"
      ],
      "Top-3 Scripts": [
        "nl2bash_7630: find . -iname test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12609: change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories"
      ],
      "Top-3 Scripts": [
        "nl2bash_12609: find /the/path -depth -type f -name \"*.abc\" -exec sh -c 'mv \"$1\" \"$(dirname \"$1\")/$(basename \"$1\" .abc).edefg\"' _ {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13297: Save Java home in variable \"JAVA_HOME\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13297: JAVA_HOME=\"$( readlink -f \"$( which java )\" | sed \"s:bin/.*$::\" )\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13444: Save the user name in all capitals of the current user to variable \"v\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13444: v=$(whoami | perl -e 'print uc <>')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Reverse lookup an IP",
      "Most Similar TLDR Script": "host {{ip_address}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13435: Save the percentage of packets lost of the 5 packets sent to \"$host\" in variable \"packet_loss\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13435: packet_loss=$(ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Ping a host only a specific number of times",
      "Most Similar TLDR Script": "ping -c {{count}} {{host}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13435: Save the percentage of packets lost of the 5 packets sent to \"$host\" in variable \"packet_loss\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13435: packet_loss=$(ping -c 5 -q $host | grep -oP '\\d+(?=% packet loss)')"
      ],
      "Explanations about Options": {
        "-q": "Quiet output. Nothing is displayed except the summary lines at startup time and when\n finished.",
        "-c": "Stop after sending count ECHO_REQUEST packets. With deadline option, ping waits for\n count ECHO_REPLY packets, until the timeout expires."
      }
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Remove an environment variable",
      "Most Similar TLDR Script": "export -n {{VARIABLE}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8617: search for the regular/normal files iceweasel or thunderbird in the entire file system and exclude search in the paths /export and directories having the word Recommeded in their name"
      ],
      "Top-3 Scripts": [
        "nl2bash_8617: find / \\( -path /export -o -path \"/*Recommended*\" \\) -prune -o \\   \\( -name iceweasel -o -name thunderbird -type f \\) -print 2>/dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "md5sum",
      "MP Summary": "compute and check MD5 message digest",
      "Most Similar TLDR Task": "Calculate MD5 checksums for multiple files",
      "Most Similar TLDR Script": "md5sum {{filename1}} {{filename2}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_674: display a long listing of all the regular/normal files in the current folder along with their md5sum"
      ],
      "Top-3 Scripts": [
        "nl2bash_674: find . -type f -exec sh -c 'printf \"%s %s \\n\" \"$(ls -l $1)\" \"$(md5sum  $1)\"' '' '{}' '{}' \\; | awk '{$8=\"\"; print $0}'\n\n\nfind . -type f -exec sh -c 'printf \"%s %s \\n\" \"$(ls -l $1)\" \"$(md5sum $1)\"' '' '{}' '{}' \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13297: Save Java home in variable \"JAVA_HOME\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13297: JAVA_HOME=\"$( readlink -f \"$( which java )\" | sed \"s:bin/.*$::\" )\""
      ],
      "Explanations about Options": {
        "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
      }
    },
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer directory contents (but not the directory itself) from a remote to local",
      "Most Similar TLDR Script": "rsync -r {{remote_host}}:{{path/to/remote_directory}}/ {{path/to/local_directory}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10608: Copy all files matching \"*.sh\" in \"$from/*\" to \"root@$host:/home/tmp/\" compressing data during transmission"
      ],
      "Top-3 Scripts": [
        "nl2bash_10608: rsync -zvr --include=\"*.sh\" --exclude=\"*\" $from/*  root@$host:/home/tmp/"
      ],
      "Explanations about Options": {
        "--include": "This option is a simplified form of the --filter option that defaults to an include\n rule and does not allow the full rule-parsing syntax of normal filter rules.",
        "-v": "This option increases the amount of information you are given during the transfer.\n By default, rsync works silently. A single -v will give you information about what\n files are being transferred and a brief summary at the end. Two -v options will\n give you information on what files are being skipped and slightly more information\n at the end. More than two -v options should only be used if you are debugging\n rsync.",
        "-z": "With this option, rsync compresses the file data as it is sent to the destination\n machine, which reduces the amount of data being transmitted - something that is\n useful over a slow connection.",
        "--exclude": "This option is a simplified form of the --filter option that defaults to an exclude\n rule and does not allow the full rule-parsing syntax of normal filter rules.",
        "-r": "This tells rsync to copy directories recursively. See also --dirs (-d)."
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8035: find in the entire file system for the file mysql"
      ],
      "Top-3 Scripts": [
        "nl2bash_8035: sudo find / -name mysql -print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Change file extensions",
      "Most Similar TLDR Script": "rename {{.ext}} {{.bak}} {{*.ext}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12609: change the extension of all the \".abc\" files in the folder \"/the/path\" to \".edefg\" and do not change in the sub directories"
      ],
      "Top-3 Scripts": [
        "nl2bash_12609: find /the/path -depth -name \"*.abc\" -exec rename 's/\\.abc$/.edefg/' {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Detach from inside a screen",
      "Most Similar TLDR Script": "Ctrl + A, D",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1679: run bash in screen and source a file before printing the prompt"
      ],
      "Top-3 Scripts": [
        "nl2bash_1679: screen bash --rcfile yourfile.rc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hostname",
      "MP Summary": "show or set the system's host name",
      "Most Similar TLDR Task": "Show the FQDN (Fully Qualified Domain Name)",
      "Most Similar TLDR Script": "hostname --fqdn",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13438: Save the short host name appended with \".mysqldb\" in variable \"DBPREFIX\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13438: DBPREFIX=\"$(hostname -s).mysqldb\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mysql",
      "MP Summary": "the MySQL command-line client",
      "Most Similar TLDR Task": "Restore a database from a backup created with `mysqldump` (user will be prompted for a password)",
      "Most Similar TLDR Script": "mysql --user {{user}} --password {{database_name}} < {{path/to/backup.sql}}",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8035: find in the entire file system for the file mysql"
      ],
      "Top-3 Scripts": [
        "nl2bash_8035: sudo find / -name mysql -print"
      ],
      "Explanations about Options": {
        "-t": "Display output in table format. This is the default for interactive use, but can be\n used to produce table output in batch mode.",
        "-n": "Flush the buffer after each query.",
        "-i": "Ignore spaces after function names. The effect of this is described in the discussion\n for the IGNORE_SPACE SQL mode (see Section 5.1.11, \u201cServer SQL Modes\u201d)."
      }
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10608: Copy all files matching \"*.sh\" in \"$from/*\" to \"root@$host:/home/tmp/\" compressing data during transmission"
      ],
      "Top-3 Scripts": [
        "nl2bash_10608: rsync -zvr --include=\"*.sh\" --exclude=\"*\" $from/*  root@$host:/home/tmp/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "thunderbird",
      "MP Summary": "thunderbird  -  Mail  User  Agent  (MUA) and newsgroup/RSS client for X11 derived from the Mozilla suite.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8617: search for the regular/normal files iceweasel or thunderbird in the entire file system and exclude search in the paths /export and directories having the word Recommeded in their name"
      ],
      "Top-3 Scripts": [
        "nl2bash_8617: find / \\( -path /export -o -path \"/*Recommended*\" \\) -prune -o \\   \\( -name iceweasel -o -name thunderbird -type f \\) -print 2>/dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Save the user name of the current user to variable \"me\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "me=\"$(whoami)\"\n",
          "command-options": {},
          "TLDR_inform": {}
        },
        "1": {
          "script": "me=$(whoami)\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8617: search for the regular/normal files iceweasel or thunderbird in the entire file system and exclude search in the paths /export and directories having the word Recommeded in their name"
      ],
      "Top-3 Scripts": [
        "nl2bash_8617: find / \\( -path /export -o -path \"/*Recommended*\" \\) -prune -o \\   \\( -name iceweasel -o -name thunderbird -type f \\) -print 2>/dev/null"
      ],
      "Explanations about Options": {}
    }
  ]
}