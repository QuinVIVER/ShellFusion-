{
  "Query": "How to output only file names (with spaces) in ls -Al?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a path pattern",
      "Most Similar TLDR Script": "find {{root_path}} -path '{{**/lib/**/*.ext}}'",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11828: force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name",
        "nl2bash_12695: convert all the normal files in the current folder from dos format to unix format (remove extra characters at the end etc.)",
        "nl2bash_11830: force remove all the directories with the name logs in the folder /var/www"
      ],
      "Top-3 Scripts": [
        "nl2bash_11828: find . -name \"*.c\" -print0 | xargs -0 rm -rf",
        "nl2bash_12695: find . -type f -exec dos2unix {} \\;",
        "nl2bash_11830: find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \\;"
      ],
      "Explanations about Options": {
        "-mtime": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
        "-type": "File is of type c:",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
      "Most Similar TLDR Script": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11828: force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name",
        "nl2bash_11827: force remove all the c files in the current folder",
        "nl2bash_9953: Print the path names of all regular .rb files prefixing them with string \"Hello, \""
      ],
      "Top-3 Scripts": [
        "nl2bash_11828: find . -name \"*.c\" -print0 | xargs -0 rm -rf",
        "nl2bash_11827: find . -name \"*.c\" | xargs rm -rf",
        "nl2bash_9953: find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Print the contents of a file to the standard output",
      "Most Similar TLDR Script": "cat {{file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9833: Print the kernel configuration options found in \"/proc/config.gz\"",
        "nl2bash_9444: Print content of /etc/passwd and /etc/group files",
        "nl2bash_11868: removes last N lines from file.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_9833: cat /proc/config.gz | gunzip",
        "nl2bash_9444: cat /etc/passwd /etc/group",
        "nl2bash_11868: head -$(gcalctool -s $(cat file | wc -l)-N) file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11828: force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name",
        "nl2bash_11830: force remove all the directories with the name logs in the folder /var/www",
        "nl2bash_11827: force remove all the c files in the current folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_11828: find . -name \"*.c\" -print0 | xargs -0 rm -rf",
        "nl2bash_11830: find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \\;",
        "nl2bash_11827: find . -name \"*.c\" | xargs rm -rf"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count words in file",
      "Most Similar TLDR Script": "wc -w {{file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13900: Counts lines in file $FILE.",
        "nl2bash_412: Display the count of regular files under 'home/magie/d2' directory tree which have execute permission to all the users",
        "nl2bash_11868: removes last N lines from file.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_13900: wc -l < $FILE",
        "nl2bash_412: find home/magie/d2 -type f -perm +111 | wc -l",
        "nl2bash_11868: head -$(gcalctool -s $(cat file | wc -l)-N) file.txt"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11867: remove top-level domain (.com, .org) from URL's in urllist.txt",
        "nl2bash_11198: Delete line 2 in numbered file \"file\" and renumber"
      ],
      "Top-3 Scripts": [
        "nl2bash_11867: rev urllist.txt | cut -d. -f 2- | rev",
        "nl2bash_11198: grep -v '^2 ' file | cut -d' ' -f2- | nl -w1 -s' '"
      ],
      "Explanations about Options": {
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Dereference symbolic links before copying",
      "Most Similar TLDR Script": "cp -L {{link}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10656: Copy the 3 specified files to /tmp/package, preserving/creating directory structure of each file as specified on command line.",
        "nl2bash_10741: copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize."
      ],
      "Top-3 Scripts": [
        "nl2bash_10656: cp --parents src/prog.js images/icon.jpg /tmp/package",
        "nl2bash_10741: find /raid -type d -name \".local_sd_customize\" -ok cp /raid/04d/MCAD-apps/I_Custom/SD_custom/site_sd_customize/user_filer_project_dirs {} \\;"
      ],
      "Explanations about Options": {
        "--parents": "use full source file name under DIRECTORY"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11198: Delete line 2 in numbered file \"file\" and renumber",
        "nl2bash_14120: check the previous alias in current list",
        "nl2bash_13900: Counts lines in file $FILE."
      ],
      "Top-3 Scripts": [
        "nl2bash_11198: grep -v '^2 ' file | cut -d' ' -f2- | nl -w1 -s' '",
        "nl2bash_14120: alias | grep my_previous_alias",
        "nl2bash_13900: count=$(grep -c ^ < \"$FILE\")"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort human-readable numbers (in this case the 5th field of `ls -lh`)",
      "Most Similar TLDR Script": "ls -lh | sort -h -k 5",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9267: Print a count of duplicate lines in \"filename\" sorted by most frequent"
      ],
      "Top-3 Scripts": [
        "nl2bash_9267: sort filename | uniq -c | sort -nr"
      ],
      "Explanations about Options": {
        "-r": "reverse the result of comparisons",
        "-n": "compare according to string numerical value"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9953: Print the path names of all regular .rb files prefixing them with string \"Hello, \"",
        "so_10512777: Can not pipe the output of echo command to ls",
        "nl2bash_9832: Print the input \"hello world\" to the console followed by a swap of the first two awk fields"
      ],
      "Top-3 Scripts": [
        "nl2bash_9953: find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !",
        "so_10512777: echo \"a\" | xargs ls -l",
        "nl2bash_9832: echo hello world | tee /dev/tty | awk '{print $2, $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11198: Delete line 2 in numbered file \"file\" and renumber",
        "nl2bash_11868: removes last N lines from file.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_11198: grep -v '^2 ' file | cut -d' ' -f2- | nl -w1 -s' '",
        "nl2bash_11868: head -$(gcalctool -s $(cat file | wc -l)-N) file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tty",
      "MP Summary": "return user's terminal name",
      "Most Similar TLDR Task": "Print the file name of this terminal",
      "Most Similar TLDR Script": "tty",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9832: Print the input \"hello world\" to the console followed by a swap of the first two awk fields"
      ],
      "Top-3 Scripts": [
        "nl2bash_9832: echo hello world | tee /dev/tty | awk '{print $2, $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11868: removes last N lines from file.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_11868: head -$(gcalctool -s $(cat file | wc -l)-N) file.txt\n\n\nhead --lines=-N file.txt"
      ],
      "Explanations about Options": {
        "--lines": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "nl",
      "MP Summary": "number lines of files",
      "Most Similar TLDR Task": "Read from standard output",
      "Most Similar TLDR Script": "cat {{file}} | nl {{options}} -",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11198: Delete line 2 in numbered file \"file\" and renumber"
      ],
      "Top-3 Scripts": [
        "nl2bash_11198: grep -v '^2 ' file | cut -d' ' -f2- | nl -w1 -s' '"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10512777: Can not pipe the output of echo command to ls"
      ],
      "Top-3 Scripts": [
        "so_10512777: my_file=\"a\"\nls -l \"$my_file\"\n\necho \"a\" | xargs ls -l\n\nls -l [filename]"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "cpio",
      "MP Summary": "copy files to and from archives",
      "Most Similar TLDR Task": "Take a list of file names from standard input and add them [o]nto an archive in cpio's binary format",
      "Most Similar TLDR Script": "echo \"{{file1}} {{file2}} {{file3}}\" | cpio -o > {{archive.cpio}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10657: Copy the current directory tree to \"newdirpathname\" preserving directory hierarchy",
        "nl2bash_10658: Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership"
      ],
      "Top-3 Scripts": [
        "nl2bash_10657: find ./ -depth -print | cpio -pvd newdirpathname",
        "nl2bash_10658: find . | cpio -pdumv /path/to/destination/dir"
      ],
      "Explanations about Options": {
        "-d": "(i and p modes) Create directories as necessary.",
        "-u": "(i and p modes) Unconditionally overwrite existing files. Ordinarily, an older file\n will not overwrite a newer file on disk.",
        "-v": "Print the name of each file to stderr as it is processed. With -t, provide a\n detailed listing of each file.",
        "-p": "Pass-through mode. See above for description.",
        "-m": "(i and p modes) Set file modification time on created files to match those in the\n source."
      }
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Copy standard input to each FILE, and also to standard output",
      "Most Similar TLDR Script": "echo \"example\" | tee {{FILE}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9832: Print the input \"hello world\" to the console followed by a swap of the first two awk fields"
      ],
      "Top-3 Scripts": [
        "nl2bash_9832: echo hello world | tee /dev/tty | awk '{print $2, $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Recursively change the owner of a directory and its contents",
      "Most Similar TLDR Script": "chown -R {{user}} {{path/to/directory}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12687: change user and group of the file /usr/bin/aws to user amzadm and group root"
      ],
      "Top-3 Scripts": [
        "nl2bash_12687: chown amzadm.root  /usr/bin/aws"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Separate the output with a space instead of a newline",
      "Most Similar TLDR Script": "seq -s \" \" 5 3 20",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9598: Print numbers from 1 to 30 with equalized 0 padding"
      ],
      "Top-3 Scripts": [
        "nl2bash_9598: seq -w 30"
      ],
      "Explanations about Options": {
        "-w": "equalize width by padding with leading zeroes"
      }
    },
    {
      "Command": "alias",
      "MP Summary": "define or display aliases",
      "Most Similar TLDR Task": "Create `la` as a shortcut for `ls -a`",
      "Most Similar TLDR Script": "alias {{la}}=\"{{ls -a}}\"",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14120: check the previous alias in current list",
        "nl2bash_9012: set alias \"iTMSTransporter\" for command '`xcode-select --print-path`/../Applications/Application\\ Loader.app/Contents/MacOS/itms/bin/iTMSTransporter'"
      ],
      "Top-3 Scripts": [
        "nl2bash_14120: alias | grep my_previous_alias",
        "nl2bash_9012: alias iTMSTransporter='`xcode-select --print-path`/../Applications/Application\\ Loader.app/Contents/MacOS/itms/bin/iTMSTransporter'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' bytes in file",
      "Most Similar TLDR Script": "tail -c {{num}} {{file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9835: Print the last 10 commands in history"
      ],
      "Top-3 Scripts": [
        "nl2bash_9835: history | tail\n\n\nhistory | tail -10\n\n\nhistory | tail -n 10"
      ],
      "Explanations about Options": {
        "-n": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print the size of each file and the cumulative size of each directory, in human-readable format",
      "Most Similar TLDR Script": "tree -s -h --du",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_418: Display the entire file system in a tree-like format"
      ],
      "Top-3 Scripts": [
        "nl2bash_418: tree /"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "scp",
      "MP Summary": "secure copy (remote file copy program)",
      "Most Similar TLDR Task": "Recursively copy the contents of a directory from a remote host to a local directory",
      "Most Similar TLDR Script": "scp -r {{remote_host}}:{{path/to/remote_directory}} {{path/to/local_directory}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10734: Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/",
        "nl2bash_10733: Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/"
      ],
      "Top-3 Scripts": [
        "nl2bash_10734: scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path",
        "nl2bash_10733: scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path"
      ],
      "Explanations about Options": {
        "-i": "Selects the file from which the identity (private key) for public key authentication\n is read. This option is directly passed to ssh(1)."
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Give [o]thers (not in the file owner's group) the same rights as the [g]roup",
      "Most Similar TLDR Script": "chmod o=g {{file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12668: change the permissions of all the files ending with \"fits\" in the folder \"/store/01\"",
        "nl2bash_8883: Set permissions to ug=rw,o= for files under the $d directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_12668: find /store/01 -name \"*.fits\" -exec chmod -x+r {} \\; \\",
        "nl2bash_8883: find $d -type f -exec chmod ug=rw,o= '{}' \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mktemp",
      "MP Summary": "create a temporary file or directory",
      "Most Similar TLDR Task": "Create an empty temporary file and return the absolute path to it",
      "Most Similar TLDR Script": "mktemp",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13056: Creates temporary folder relative to directory '/path/to/dir'."
      ],
      "Top-3 Scripts": [
        "nl2bash_13056: mktemp -d -p /path/to/dir"
      ],
      "Explanations about Options": {
        "-d": "create a directory, not a file",
        "-p": "interpret TEMPLATE relative to DIR; if DIR is not specified, use $TMPDIR if set,\n else /tmp. With this option, TEMPLATE must not be an absolute name; unlike with\n -t, TEMPLATE may contain slashes, but mktemp creates only the final component"
      }
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8848: Set IFS variable to empty before reading a line of standard input without backslash escape characters"
      ],
      "Top-3 Scripts": [
        "nl2bash_8848: IFS= read -r line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse an entire file and print to `stdout`",
      "Most Similar TLDR Script": "rev {{file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11867: remove top-level domain (.com, .org) from URL's in urllist.txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_11867: rev urllist.txt | cut -d. -f 2- | rev"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Repeat the last command prefixed with \"sudo\" (only in bash, zsh, etc.)",
      "Most Similar TLDR Script": "sudo !!",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11830: force remove all the directories with the name logs in the folder /var/www"
      ],
      "Top-3 Scripts": [
        "nl2bash_11830: find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Display a prompt before the input",
      "Most Similar TLDR Script": "read -p \"{{Enter your input here: }}\" {{variable}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8848: Set IFS variable to empty before reading a line of standard input without backslash escape characters"
      ],
      "Top-3 Scripts": [
        "nl2bash_8848: IFS= read -r line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Read only 100 bytes of a file starting from the 500th byte",
      "Most Similar TLDR Script": "od --read-bytes {{100}} --skip-bytes={{500}} -v {{path/to/file}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_316: Display a named character dump of \"test.sh\""
      ],
      "Top-3 Scripts": [
        "nl2bash_316: od -a test.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only unique lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -u",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9267: Print a count of duplicate lines in \"filename\" sorted by most frequent"
      ],
      "Top-3 Scripts": [
        "nl2bash_9267: sort filename | uniq -c | sort -nr"
      ],
      "Explanations about Options": {
        "-c": "prefix lines by the number of occurrences"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9832: Print the input \"hello world\" to the console followed by a swap of the first two awk fields"
      ],
      "Top-3 Scripts": [
        "nl2bash_9832: echo hello world | tee /dev/tty | awk '{print $2, $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rmdir",
      "MP Summary": "remove empty directories",
      "Most Similar TLDR Task": "Remove the target and its parent directories (useful for nested dirs)",
      "Most Similar TLDR Script": "rmdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11315: Recursively removes all files like '4' under folder './a' and removes folders with such files if they become empty."
      ],
      "Top-3 Scripts": [
        "nl2bash_11315: find a -type f -name '4' -delete -printf \"%h\\0\" | xargs -0 -r rmdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dos2unix",
      "MP Summary": "DOS/Mac to Unix and vice versa text file format converter",
      "Most Similar TLDR Task": "Change the line endings of a file",
      "Most Similar TLDR Script": "dos2unix {{filename}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12695: convert all the normal files in the current folder from dos format to unix format (remove extra characters at the end etc.)"
      ],
      "Top-3 Scripts": [
        "nl2bash_12695: find . -type f -exec dos2unix {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Do not overwrite existing files at the target",
      "Most Similar TLDR Script": "mv -n {{source}} {{target}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12376: Move all files in the current directory tree that match \"some_pattern\" to \"target_location\""
      ],
      "Top-3 Scripts": [
        "nl2bash_12376: find . -name some_pattern -print0 | xargs -0 -I % mv % target_location\n\n\nfind . -name some_pattern -print0 | xargs -0 -J % mv % target_location"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9832: Print the input \"hello world\" to the console followed by a swap of the first two awk fields"
      ],
      "Top-3 Scripts": [
        "nl2bash_9832: echo hello world | tee /dev/tty | awk '{print $2, $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pigz",
      "MP Summary": "compress or expand files",
      "Most Similar TLDR Task": "List the contents of an archive",
      "Most Similar TLDR Script": "pigz -l {{archive.tar.gz}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13181: create an archive using 'pigz' as a compress program"
      ],
      "Top-3 Scripts": [
        "nl2bash_13181: tar -c --use-compress-program=pigz -f tar.file dir_to_zip"
      ],
      "Explanations about Options": {
        "-f": "Force overwrite, compress .gz, links, and to terminal."
      }
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Make the password of the account blank (it will set the named account passwordless)",
      "Most Similar TLDR Script": "passwd -d",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9444: Print content of /etc/passwd and /etc/group files"
      ],
      "Top-3 Scripts": [
        "nl2bash_9444: cat /etc/passwd /etc/group"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "List the contents of a tar file",
      "Most Similar TLDR Script": "tar tvf {{source.tar}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13181: create an archive using 'pigz' as a compress program"
      ],
      "Top-3 Scripts": [
        "nl2bash_13181: tar -c --use-compress-program=pigz -f tar.file dir_to_zip"
      ],
      "Explanations about Options": {
        "--use-compress-program": "Filter data through COMMAND. It must accept the -d option, for decompression. The\n argument can contain command line options.",
        "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given."
      }
    },
    {
      "Command": "hello",
      "MP Summary": "friendly greeting program",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "hello --greeting=\"{{greeting_text}}\"",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9832: Print the input \"hello world\" to the console followed by a swap of the first two awk fields"
      ],
      "Top-3 Scripts": [
        "nl2bash_9832: echo hello world | tee /dev/tty | awk '{print $2, $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Break stdin into ~1M blocks, feed each block to `stdin` of new command",
      "Most Similar TLDR Script": "cat {{big_file.txt}} | parallel --pipe --block 1M {{command}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4439: Find all sample*_1.txt files/directories under current directory, remove _1.txt from the end of file paths and pipe them to the command `parallel program {}-out {}_1.txt {}_2.txt`"
      ],
      "Top-3 Scripts": [
        "nl2bash_4439: find . -name \"sample*_1.txt\" | perl -pe 's/_1\\.txt$//' | parallel program {}-out {}_1.txt {}_2.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Loo[p] over all lines of a file, editing them [i]n-place using a find/replace [e]xpression",
      "Most Similar TLDR Script": "perl -p -i -e 's/{{find}}/{{replace}}/g' {{filename}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4439: Find all sample*_1.txt files/directories under current directory, remove _1.txt from the end of file paths and pipe them to the command `parallel program {}-out {}_1.txt {}_2.txt`"
      ],
      "Top-3 Scripts": [
        "nl2bash_4439: find . -name \"sample*_1.txt\" | perl -pe 's/_1\\.txt$//' | parallel program {}-out {}_1.txt {}_2.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8617: search for the regular/normal files iceweasel or thunderbird in the entire file system and exclude search in the paths /export and directories having the word Recommeded in their name"
      ],
      "Top-3 Scripts": [
        "nl2bash_8617: find / \\( -path /export -o -path \"/*Recommended*\" \\) -prune -o \\   \\( -name iceweasel -o -name thunderbird -type f \\) -print 2>/dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "SSH tunneling: Forward a specific port (localhost:9999 to example.org:80) along with disabling pseudo-[t]ty allocation and executio[n] of remote commands",
      "Most Similar TLDR Script": "ssh -L {{9999}}:{{example.org}}:{{80}} -N -T {{username}}@{{remote_host}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10943: Allocate a pseudo-terminal and execute \"screen -r\" followed by \"ls\" on host \"example.com\"",
        "nl2bash_13510: Forward port 12345 bound on 'localhost' to port 12345 on 'otherHost' as user 'otherUser'",
        "nl2bash_10735: Recursively copy newer files in \"sourcedir/\" to \"user@dest.com:/dest/dir/\" via ssh"
      ],
      "Top-3 Scripts": [
        "nl2bash_10943: ssh -t example.com \"screen -r; ls\"",
        "nl2bash_13510: ssh -f -N -L localhost:12345:otherHost:12345   otherUser@otherHost",
        "nl2bash_10735: rsync -auv -e ssh --progress sourcedir/ user@dest.com:/dest/dir/"
      ],
      "Explanations about Options": {
        "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty.",
        "-f": "Requests ssh to go to background just before command execution. This is useful if\n ssh is going to ask for passwords or passphrases, but the user wants it in the\n background. This implies -n. The recommended way to start X11 programs at a remote\n site is with something like ssh -f host xterm.",
        "-N": "Do not execute a remote command. This is useful for just forwarding ports."
      }
    },
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer directory contents (but not the directory itself) from a remote to local",
      "Most Similar TLDR Script": "rsync -r {{remote_host}}:{{path/to/remote_directory}}/ {{path/to/local_directory}}",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10735: Recursively copy newer files in \"sourcedir/\" to \"user@dest.com:/dest/dir/\" via ssh"
      ],
      "Top-3 Scripts": [
        "nl2bash_10735: rsync -auv -e ssh --progress sourcedir/ user@dest.com:/dest/dir/"
      ],
      "Explanations about Options": {
        "-v": "This option increases the amount of information you are given during the transfer.\n By default, rsync works silently. A single -v will give you information about what\n files are being transferred and a brief summary at the end. Two -v options will\n give you information on what files are being skipped and slightly more information\n at the end. More than two -v options should only be used if you are debugging\n rsync.",
        "-e": "This option allows you to choose an alternative remote shell program to use for\n communication between the local and remote copies of rsync. Typically, rsync is\n configured to use ssh by default, but you may prefer to use rsh on a local network.",
        "-a": "This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and\n want to preserve almost everything (with -H being a notable omission). The only\n exception to the above equivalence is when --files-from is specified, in which case\n -r is not implied.",
        "-u": "This forces rsync to skip any files which exist on the destination and have a\n modified time that is newer than the source file. (If an existing destination file\n has a modification time equal to the source file\u2019s, it will be updated if the sizes\n are different.)"
      }
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10734: Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/",
        "nl2bash_10733: Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/",
        "nl2bash_13056: Creates temporary folder relative to directory '/path/to/dir'."
      ],
      "Top-3 Scripts": [
        "nl2bash_10734: scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path",
        "nl2bash_10733: scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path",
        "nl2bash_13056: mktemp -d -p /path/to/dir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10734: Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/",
        "nl2bash_10733: Recursively copy local file/directory \"/copy/from/path\" to remote location \"/copy/to/path\" on host \"server\", connecting as ssh user \"user\" and using identity key file \"/path/to/your/.pemkey\" instead of the default in ~/.ssh/"
      ],
      "Top-3 Scripts": [
        "nl2bash_10734: scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path",
        "nl2bash_10733: scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_757: display all files in the directory \"dir\" which have been changed in the last 60 minutes",
        "nl2bash_10735: Recursively copy newer files in \"sourcedir/\" to \"user@dest.com:/dest/dir/\" via ssh",
        "nl2bash_13056: Creates temporary folder relative to directory '/path/to/dir'."
      ],
      "Top-3 Scripts": [
        "nl2bash_757: find /dir -cmin -60",
        "nl2bash_10735: rsync -auv -e ssh --progress sourcedir/ user@dest.com:/dest/dir/",
        "nl2bash_13056: mktemp -d -p /path/to/dir"
      ],
      "Explanations about Options": {
        "-c": "with -lt: sort by , and show , ctime (time of last modification of file status\n information); with -l: show ctime and sort by name; otherwise: sort by ctime,\n newest first",
        "-n": "like -l, but list numeric user and group IDs",
        "-i": "print the index number of each file",
        "-m": "fill width with a comma separated list of entries"
      }
    },
    {
      "Command": "src",
      "MP Summary": "simple revision control",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10656: Copy the 3 specified files to /tmp/package, preserving/creating directory structure of each file as specified on command line."
      ],
      "Top-3 Scripts": [
        "nl2bash_10656: cp --parents src/prog.js images/icon.jpg /tmp/package"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "package",
      "MP Summary": "register package user via mailagent",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "change user and group of the file bin to user and group root:wheel",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo chown root:wheel bin\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "chown": {
              "mpsum": "change file owner and group"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "chown": {
              "man1_chown_3998": "chang user group ownership file directori chang owner file directori match refer file chang owner symbol link chang owner user group file directori chang owner user file directori recurs chang owner directori content"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10656: Copy the 3 specified files to /tmp/package, preserving/creating directory structure of each file as specified on command line."
      ],
      "Top-3 Scripts": [
        "nl2bash_10656: cp --parents src/prog.js images/icon.jpg /tmp/package"
      ],
      "Explanations about Options": {}
    }
  ]
}