{
  "Query": "HTTP POST and GET using cURL in Linux",
  "Answers": [
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send a request with an extra header, using a custom HTTP method",
      "Most Similar TLDR Script": "curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68182870: How to pipe the results of the curl command into tar using Powershell?"
      ],
      "Top-3 Scripts": [
        "so_68182870: # Make sure that the target dir. exists and get its full path.\n# (If the target dir. doesn't exist, tar's -C option will fail.)\n$targetDir = (New-Item -Force -ErrorAction Stop -Type Directory $HOME/tomcat-8.6.65).FullName\n\n# Invoke cmd.exe's binary pipeline, passing the target dir.\n# As an aside: tar.exe on Windows does NOT know that ~ refers to the \n#              user's home dir.\ncmd /c @\"\ncurl https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.65/bin/apache-tomcat-8.5.65.tar.gz | tar xvz --strip-components=1 -f - -C \"$targetDir\"\n\"@"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13827: Count the number of lines in every regular .rb file in the current directory tree",
        "nl2bash_5721: Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
        "nl2bash_5689: Recursively finds all files containing text 'OPEN' and prints folder where they are placed."
      ],
      "Top-3 Scripts": [
        "nl2bash_13827: find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l",
        "nl2bash_5721: find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext",
        "nl2bash_5689: grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13827: Count the number of lines in every regular .rb file in the current directory tree",
        "nl2bash_8145: search  in root ( / ) directory downwards all files which  have exactly 2 links.",
        "nl2bash_6511: Search the current directory tree for regular files named `doc.txt' and print \"found\" for each of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_13827: find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;\n\n\nfind . -name \"*.rb\" -type f -print0 | xargs -0 wc -l",
        "nl2bash_8145: find /  -links 2 -print",
        "nl2bash_6511: find ./ -type f -name doc.txt -printf \"found\\n\""
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print.",
        "-links": "File has n hard links.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "md5sum",
      "MP Summary": "compute and check MD5 message digest",
      "Most Similar TLDR Task": "Read a file of MD5SUMs and verify all files have matching checksums",
      "Most Similar TLDR Script": "md5sum -c {{filename.md5}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13673: Calculate md5 sum of file $ecriv"
      ],
      "Top-3 Scripts": [
        "nl2bash_13673: md5sum \"$ecriv\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10193: Write \"2-1.1.1\" to standard output and to file \"/sys/bus/usb/drivers/usb/unbind\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10193: echo '2-1.1.1'|sudo tee /sys/bus/usb/drivers/usb/unbind"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Launch the default shell with superuser privileges",
      "Most Similar TLDR Script": "sudo -i",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10193: Write \"2-1.1.1\" to standard output and to file \"/sys/bus/usb/drivers/usb/unbind\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10193: echo '2-1.1.1'|sudo tee /sys/bus/usb/drivers/usb/unbind"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10193: Write \"2-1.1.1\" to standard output and to file \"/sys/bus/usb/drivers/usb/unbind\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10193: echo '2-1.1.1'|sudo tee /sys/bus/usb/drivers/usb/unbind"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xgettext",
      "MP Summary": "extract gettext strings from source",
      "Most Similar TLDR Task": "Use a different output filename",
      "Most Similar TLDR Script": "xgettext --output {{path/to/output_file}} {{path/to/input_file}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5721: Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool."
      ],
      "Top-3 Scripts": [
        "nl2bash_5721: find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode",
      "Most Similar TLDR Script": "grep -Ei {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5721: Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
        "nl2bash_5689: Recursively finds all files containing text 'OPEN' and prints folder where they are placed."
      ],
      "Top-3 Scripts": [
        "nl2bash_5721: find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext",
        "nl2bash_5689: grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option.",
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create a gzipped archive from a directory using relative paths",
      "Most Similar TLDR Script": "tar czf {{target.tar.gz}} -C {{path/to/directory}} .",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68182870: How to pipe the results of the curl command into tar using Powershell?"
      ],
      "Top-3 Scripts": [
        "so_68182870: # Make sure that the target dir. exists and get its full path.\n# (If the target dir. doesn't exist, tar's -C option will fail.)\n$targetDir = (New-Item -Force -ErrorAction Stop -Type Directory $HOME/tomcat-8.6.65).FullName\n\n# Invoke cmd.exe's binary pipeline, passing the target dir.\n# As an aside: tar.exe on Windows does NOT know that ~ refers to the \n#              user's home dir.\ncmd /c @\"\ncurl https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.65/bin/apache-tomcat-8.5.65.tar.gz | tar xvz --strip-components=1 -f - -C \"$targetDir\"\n\"@"
      ],
      "Explanations about Options": {
        "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13827: Count the number of lines in every regular .rb file in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_13827: find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;\n\n\nfind . -name \"*.rb\" -type f -print0 | xargs -0 wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Delimit output with a NUL character instead of a newline (useful when combining with `xargs`)",
      "Most Similar TLDR Script": "dirname --zero {{path/to/directory_a}} {{path/to/file_b}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5689: Recursively finds all files containing text 'OPEN' and prints folder where they are placed."
      ],
      "Top-3 Scripts": [
        "nl2bash_5689: grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5689: Recursively finds all files containing text 'OPEN' and prints folder where they are placed."
      ],
      "Top-3 Scripts": [
        "nl2bash_5689: grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5689: Recursively finds all files containing text 'OPEN' and prints folder where they are placed."
      ],
      "Top-3 Scripts": [
        "nl2bash_5689: grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5689: Recursively finds all files containing text 'OPEN' and prints folder where they are placed."
      ],
      "Top-3 Scripts": [
        "nl2bash_5689: grep -r OPEN * | awk '{split($1, path, \":\"); print path[1]}' | xargs -I{} dirname {}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sys",
      "MP Summary": "Reports the compile-time CPU/operating system type",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10193: Write \"2-1.1.1\" to standard output and to file \"/sys/bus/usb/drivers/usb/unbind\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10193: echo '2-1.1.1'|sudo tee /sys/bus/usb/drivers/usb/unbind"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bus",
      "MP Summary": "ATM LAN Emulation service demons",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10193: Write \"2-1.1.1\" to standard output and to file \"/sys/bus/usb/drivers/usb/unbind\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10193: echo '2-1.1.1'|sudo tee /sys/bus/usb/drivers/usb/unbind"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dist",
      "MP Summary": "redistribute a message to additional addresses",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68182870: How to pipe the results of the curl command into tar using Powershell?"
      ],
      "Top-3 Scripts": [
        "so_68182870: # Make sure that the target dir. exists and get its full path.\n# (If the target dir. doesn't exist, tar's -C option will fail.)\n$targetDir = (New-Item -Force -ErrorAction Stop -Type Directory $HOME/tomcat-8.6.65).FullName\n\n# Invoke cmd.exe's binary pipeline, passing the target dir.\n# As an aside: tar.exe on Windows does NOT know that ~ refers to the \n#              user's home dir.\ncmd /c @\"\ncurl https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.65/bin/apache-tomcat-8.5.65.tar.gz | tar xvz --strip-components=1 -f - -C \"$targetDir\"\n\"@"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68182870: How to pipe the results of the curl command into tar using Powershell?"
      ],
      "Top-3 Scripts": [
        "so_68182870: # Make sure that the target dir. exists and get its full path.\n# (If the target dir. doesn't exist, tar's -C option will fail.)\n$targetDir = (New-Item -Force -ErrorAction Stop -Type Directory $HOME/tomcat-8.6.65).FullName\n\n# Invoke cmd.exe's binary pipeline, passing the target dir.\n# As an aside: tar.exe on Windows does NOT know that ~ refers to the \n#              user's home dir.\ncmd /c @\"\ncurl https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.65/bin/apache-tomcat-8.5.65.tar.gz | tar xvz --strip-components=1 -f - -C \"$targetDir\"\n\"@"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "project",
      "MP Summary": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5721: Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool."
      ],
      "Top-3 Scripts": [
        "nl2bash_5721: find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext"
      ],
      "Explanations about Options": {
        "-e": "Only accept data records that match the given pattern."
      }
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds files like '*.php' or '*.phtml' in folder /project/directory ignoring case differences, filters out files with any cased pattern '/some/directory' in path, and processes found files with xgettext tool.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /project/directory -iname '*.php' -or -iname '*.phtml' | grep -iv '/some/directory' | xargs xgettext\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy"
            },
            "project": {
              "mpsum": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
              "-e": "Only accept data records that match the given pattern."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-v": "Invert the sense of matching, to select non-matching lines.",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input"
            },
            "xgettext": {
              "mpsum": "extract gettext strings from source"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "project": {
              "man1_project_27299": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "xgettext": {
              "man1_xgettext_37636": "extract gettext string code file append new string exist file add header contain metadata output file scan file output string messag po use differ output filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8172: search and unzip all the \".fq.gz\" files and perform a control check on this raw sequence of data and display the output to the screen"
      ],
      "Top-3 Scripts": [
        "nl2bash_8172: find . -name \"*.fq.gz\"  -exec gunzip -c  '{}' ';' | fastqc  /dev/stdin"
      ],
      "Explanations about Options": {}
    }
  ]
}