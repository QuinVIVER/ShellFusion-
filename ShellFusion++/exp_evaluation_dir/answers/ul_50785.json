{
  "Query": "How do I find out if I am sudoer?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54698135: Linux Find command- exclude find based on file name",
        "nl2bash_5016: Find files under current directory that contains the string '/bin/ksh'",
        "nl2bash_5017: Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst"
      ],
      "Top-3 Scripts": [
        "so_54698135: find . -type d \\( -name Foo-o -name 2Foo -o -name 2_Foo \\) -prune -o -type f ! -size 0 ! -name 'FooInfo.cs' ! -name '*.Foo.cs'   \\( -name \"*.java\" -o -name \"*.cs\" -o -name \"*.cpp\" -o -name \"*.cxx\" -o -name \"*.cc\" -o -name \"*.c\" -o -name \"*.h\" -o -name \"*.scala\" -o -name \"*.css\" -o -name \"*.html\" -o -name \"*.bat\" -o -name \"*.js\" \\) -exec realpath {} \\;| xargs grep -L CUSTOMERINFO  | sed -e 's/$/\\r/g' >> ../output.txt",
        "nl2bash_5016: find . -type f -exec grep -iH '/bin/ksh' {} \\;\n\n\nfind . -type f -print | xargs    grep -il 'bin/ksh'",
        "nl2bash_5017: find . -name \"$1\" > /tmp/safe_del.lst"
      ],
      "Explanations about Options": {
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
        "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54698135: Linux Find command- exclude find based on file name",
        "nl2bash_5016: Find files under current directory that contains the string '/bin/ksh'"
      ],
      "Top-3 Scripts": [
        "so_54698135: find . -type d \\( -name Foo-o -name 2Foo -o -name 2_Foo \\) -prune -o -type f ! -size 0 ! -name 'FooInfo.cs' ! -name '*.Foo.cs'   \\( -name \"*.java\" -o -name \"*.cs\" -o -name \"*.cpp\" -o -name \"*.cxx\" -o -name \"*.cc\" -o -name \"*.c\" -o -name \"*.h\" -o -name \"*.scala\" -o -name \"*.css\" -o -name \"*.html\" -o -name \"*.bat\" -o -name \"*.js\" \\) -exec realpath {} \\;| xargs grep -L CUSTOMERINFO  | sed -e 's/$/\\r/g' >> ../output.txt",
        "nl2bash_5016: find . -type f -exec grep -iH '/bin/ksh' {} \\;\n\n\nfind . -type f -print | xargs    grep -il 'bin/ksh'"
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
        "-L": "Suppress normal output; instead print the name of each input file from which no\n output would normally have been printed. The scanning will stop on the first\n match.",
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54698135: Linux Find command- exclude find based on file name",
        "nl2bash_5016: Find files under current directory that contains the string '/bin/ksh'"
      ],
      "Top-3 Scripts": [
        "so_54698135: find . -type d \\( -name Foo-o -name 2Foo -o -name 2_Foo \\) -prune -o -type f ! -size 0 ! -name 'FooInfo.cs' ! -name '*.Foo.cs'   \\( -name \"*.java\" -o -name \"*.cs\" -o -name \"*.cpp\" -o -name \"*.cxx\" -o -name \"*.cc\" -o -name \"*.c\" -o -name \"*.h\" -o -name \"*.scala\" -o -name \"*.css\" -o -name \"*.html\" -o -name \"*.bat\" -o -name \"*.js\" \\) -exec realpath {} \\;| xargs grep -L CUSTOMERINFO  | sed -e 's/$/\\r/g' >> ../output.txt",
        "nl2bash_5016: find . -type f -print | xargs    grep -il 'bin/ksh'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54698135: Linux Find command- exclude find based on file name"
      ],
      "Top-3 Scripts": [
        "so_54698135: type -f"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "realpath",
      "MP Summary": "print the resolved path",
      "Most Similar TLDR Task": "Display the absolute path for a file or directory",
      "Most Similar TLDR Script": "realpath {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54698135: Linux Find command- exclude find based on file name"
      ],
      "Top-3 Scripts": [
        "so_54698135: find . -type d \\( -name Foo-o -name 2Foo -o -name 2_Foo \\) -prune -o -type f ! -size 0 ! -name 'FooInfo.cs' ! -name '*.Foo.cs'   \\( -name \"*.java\" -o -name \"*.cs\" -o -name \"*.cpp\" -o -name \"*.cxx\" -o -name \"*.cc\" -o -name \"*.c\" -o -name \"*.h\" -o -name \"*.scala\" -o -name \"*.css\" -o -name \"*.html\" -o -name \"*.bat\" -o -name \"*.js\" \\) -exec realpath {} \\;| xargs grep -L CUSTOMERINFO  | sed -e 's/$/\\r/g' >> ../output.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54698135: Linux Find command- exclude find based on file name"
      ],
      "Top-3 Scripts": [
        "so_54698135: find . -type d \\( -name Foo-o -name 2Foo -o -name 2_Foo \\) -prune -o -type f ! -size 0 ! -name 'FooInfo.cs' ! -name '*.Foo.cs'   \\( -name \"*.java\" -o -name \"*.cs\" -o -name \"*.cpp\" -o -name \"*.cxx\" -o -name \"*.cc\" -o -name \"*.c\" -o -name \"*.h\" -o -name \"*.scala\" -o -name \"*.css\" -o -name \"*.html\" -o -name \"*.bat\" -o -name \"*.js\" \\) -exec realpath {} \\;| xargs grep -L CUSTOMERINFO  | sed -e 's/$/\\r/g' >> ../output.txt"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find files under current directory with name (or glob pattern) expanded by $1 and save the list to /tmp/safe_del.lst",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \"$1\" > /tmp/safe_del.lst\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5016: Find files under current directory that contains the string '/bin/ksh'"
      ],
      "Top-3 Scripts": [
        "nl2bash_5016: find . -type f -exec grep -iH '/bin/ksh' {} \\;"
      ],
      "Explanations about Options": {}
    }
  ]
}