{
  "Query": "How can I change the encoding of a subtitle file?",
  "Answers": [
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder",
        "nl2bash_2424: Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/",
        "nl2bash_2426: Find all *shp* directories under current directory and move their contents to ../shp_all/"
      ],
      "Top-3 Scripts": [
        "nl2bash_7848: find . -name \"*.txt\" | parallel 'ext=\"{/}\" ; mv -- {} foo/{/.}.bar.${ext##*.}'\n\n\nfind . -name \"*.txt\" | xargs -I{} sh -c 'base=$(basename $1) ; name=${base%.*} ; ext=${base##*.} ; mv \"$1\" \"foo/${name}.bar.${ext}\"' -- {}\n\n\nfind ./ -name \\*.txt | perl -p -e 's/^(.*\\/(.*)\\.txt)$/mv $1 .\\/foo\\/$2.bar.txt/' | bash",
        "nl2bash_2424: mv $(find $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq) -type f) ../shp_all/",
        "nl2bash_2426: mv $(find . -name \"*shp*\" -printf \"%h\\n\" | uniq)/* ../shp_all/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Determine the mime encoding type of a file",
      "Most Similar TLDR Script": "file -i {{filename}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1516: Execute the file utility for each file found under /etc or below that contains \"test\" in its pathname",
        "nl2bash_531: Show file type information for all regular files under '/home' directory tree",
        "nl2bash_532: Show file type information for files in /usr/bin"
      ],
      "Top-3 Scripts": [
        "nl2bash_1516: find /etc -print0 | grep -azZ test | xargs -0 file",
        "nl2bash_531: find /home -type f -exec file {} \\;",
        "nl2bash_532: find /usr/bin | xargs file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder",
        "nl2bash_7925: find any files or directories called \".svn\" under the current directory and run a long list on each one, displaying a line count of the resultant output."
      ],
      "Top-3 Scripts": [
        "nl2bash_7848: find ./ -name \\*.txt | perl -p -e 's/^(.*\\/(.*)\\.txt)$/mv $1 .\\/foo\\/$2.bar.txt/' | bash",
        "nl2bash_7925: find . -iname .svn -exec bash -c 'ls -l \"{}\" | wc -l' \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them",
        "nl2bash_8233: search for a word in all the files in the current directory and display the list of matched files.",
        "nl2bash_8265: search for all html files in a folder and create a zip file of all these files"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'",
        "nl2bash_8233: find . -type f -exec grep -l 'needle' {} \\;",
        "nl2bash_8265: find /your/path/ -type f -name \"*.html\" | xargs zip all_html_files.zip"
      ],
      "Explanations about Options": {
        "-mtime": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7851: find all the text files in current folder and force delete them",
        "nl2bash_2744: Find all directories named CVS, and deletes them and their contents."
      ],
      "Top-3 Scripts": [
        "nl2bash_7851: find . -name \"*.txt\" | xargs rm -rf",
        "nl2bash_2744: find . -type d -name CVS -exec rm -r {} \\;"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8265: search for all html files in a folder and create a zip file of all these files",
        "nl2bash_7911: find all the zip files in the current folder and create a tar ball of these zip files",
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_8265: find /your/path/ -type f -name \"*.html\" | xargs zip all_html_files.zip",
        "nl2bash_7911: find . -type f -name '*.zip' -print0 | xargs -0 tar -xzf",
        "nl2bash_7848: find . -name \"*.txt\" | xargs -I{} sh -c 'base=$(basename $1) ; name=${base%.*} ; ext=${base##*.} ; mv \"$1\" \"foo/${name}.bar.${ext}\"' -- {}"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8912: Set the permissions of all directories inside the current directory tree to ug=rwx,o=",
        "nl2bash_8911: Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x"
      ],
      "Top-3 Scripts": [
        "nl2bash_8912: find . -type d -name files -exec chmod ug=rwx,o= '{}' \\;",
        "nl2bash_8911: find . -type d -exec chmod u=rwx,g=rx,o=x {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1212: display the contents of all the files in the current folder which start with test ( case insensitive search )",
        "nl2bash_1213: display the contents of all the files in the current folder which start with test (case insensitive search)"
      ],
      "Top-3 Scripts": [
        "nl2bash_1212: find . -iname '*test*' -exec cat {} \\;",
        "nl2bash_1213: find . -iname '*test*' -exec cat {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Package and compress multiple directories and files",
      "Most Similar TLDR Script": "zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8265: search for all html files in a folder and create a zip file of all these files"
      ],
      "Top-3 Scripts": [
        "nl2bash_8265: find /your/path/ -type f -name \"*.html\" | xargs zip all_html_files.zip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "List the human-readable sizes of a directory and of all the files and directories within it",
      "Most Similar TLDR Script": "du -ah {{path/to/directory}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"
      ],
      "Explanations about Options": {
        "-s": "display only a total for each argument"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2389: Find all *.xml files under current directory, search for '<?xml' in those files and print the paths of the matched files."
      ],
      "Top-3 Scripts": [
        "nl2bash_2389: find . -name \\*.xml | while read i; do grep '<?xml' \"$i\" >/dev/null; [ $? == 0 ] && echo $i; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3237: Find all files matching \"abc*\" in the current directory and append \"\\tok\""
      ],
      "Top-3 Scripts": [
        "nl2bash_3237: find . -name 'abc*' | sed 's/$/\\tok/' | column -t"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2525: Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/"
      ],
      "Top-3 Scripts": [
        "nl2bash_2525: find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"
      ],
      "Explanations about Options": {
        "--parents": "use full source file name under DIRECTORY",
        "-a": "same as -dR --preserve=all",
        "--target-directory": "copy all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_7848: find . -name \"*.txt\" | xargs -I{} sh -c 'base=$(basename $1) ; name=${base%.*} ; ext=${base##*.} ; mv \"$1\" \"foo/${name}.bar.${ext}\"' -- {}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3: Sleep until tomorrow at 21:30"
      ],
      "Top-3 Scripts": [
        "nl2bash_3: sleep $(($(date -f - +%s- <<< $'tomorrow 21:30\\nnow')0))"
      ],
      "Explanations about Options": {
        "-f": "like --date; once for each line of DATEFILE",
        "-": "(hyphen) do not pad the field"
      }
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create an archive from files",
      "Most Similar TLDR Script": "tar cf {{target.tar}} {{file1}} {{file2}} {{file3}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7911: find all the zip files in the current folder and create a tar ball of these zip files"
      ],
      "Top-3 Scripts": [
        "nl2bash_7911: find . -type f -name '*.zip' -print0 | xargs -0 tar -xzf"
      ],
      "Explanations about Options": {
        "-z": "Filter the archive through gzip(1).",
        "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted."
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7925: find any files or directories called \".svn\" under the current directory and run a long list on each one, displaying a line count of the resultant output."
      ],
      "Top-3 Scripts": [
        "nl2bash_7925: find . -iname .svn -exec bash -c 'ls -l \"{}\" | wc -l' \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_7848: find . -name \"*.txt\" | xargs -I{} sh -c 'base=$(basename $1) ; name=${base%.*} ; ext=${base##*.} ; mv \"$1\" \"foo/${name}.bar.${ext}\"' -- {}"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10859: Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_10859: find . -name CVS -prune -o -exec mv '{}' `echo {} | tr '[A-Z]' '[a-z]'` \\; -print"
      ],
      "Explanations about Options": {
        "-t": "first truncate SET1 to length of SET2"
      }
    },
    {
      "Command": "vim",
      "MP Summary": "Vi IMproved, a programmer's text editor",
      "Most Similar TLDR Task": "Open a file at a specified line number",
      "Most Similar TLDR Script": "vim +{{line_number}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2524: Find all .txt files in the current directory tree on a BSD system and edit them with `vim'"
      ],
      "Top-3 Scripts": [
        "nl2bash_2524: find . -name \"*.txt\" | xargs -o vim"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl script",
      "Most Similar TLDR Script": "perl {{script.pl}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_7848: find ./ -name \\*.txt | perl -p -e 's/^(.*\\/(.*)\\.txt)$/mv $1 .\\/foo\\/$2.bar.txt/' | bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1516: Execute the file utility for each file found under /etc or below that contains \"test\" in its pathname"
      ],
      "Top-3 Scripts": [
        "nl2bash_1516: find /etc -print0 | grep -azZ test | xargs -0 file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nl",
      "MP Summary": "number lines of files",
      "Most Similar TLDR Task": "Number all lines including blank lines",
      "Most Similar TLDR Script": "nl -b a {{file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9678: Print the absolute path of third-level files under the current directory tree and number the output"
      ],
      "Top-3 Scripts": [
        "nl2bash_9678: ls -d -1 $PWD/**/*/* | nl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8233: search for a word in all the files in the current directory and display the list of matched files.",
        "nl2bash_2389: Find all *.xml files under current directory, search for '<?xml' in those files and print the paths of the matched files.",
        "nl2bash_8107: find the file with the name \"esxcfg-firewall\" in the current folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_8233: find . -type f -exec grep -l 'needle' {} \\;",
        "nl2bash_2389: find . -name \\*.xml | while read i; do grep '<?xml' \"$i\" >/dev/null; [ $? == 0 ] && echo $i; done",
        "nl2bash_8107: find -print | grep esxcfg-firewall"
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8385: search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them"
      ],
      "Top-3 Scripts": [
        "nl2bash_8385: find . -mtime +180 -exec du -ks {} \\; | cut -f1 | awk '{total=total+$1}END{print total/1024}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2389: Find all *.xml files under current directory, search for '<?xml' in those files and print the paths of the matched files."
      ],
      "Top-3 Scripts": [
        "nl2bash_2389: find . -name \\*.xml | while read i; do grep '<?xml' \"$i\" >/dev/null; [ $? == 0 ] && echo $i; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Connect to a remote server with a specific identity (private key)",
      "Most Similar TLDR Script": "ssh -i {{path/to/key_file}} {{username}}@{{remote_host}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_14005: Disable X11 forwarding and execute \"cd yourRemoteDir; ./yourRemoteScript.sh </dev/null >/dev/null 2>&1\" in the background on \"remoteServer\""
      ],
      "Top-3 Scripts": [
        "nl2bash_14005: ssh -x remoteServer \"cd yourRemoteDir; ./yourRemoteScript.sh </dev/null >/dev/null 2>&1 & \""
      ],
      "Explanations about Options": {
        "-x": "Disables X11 forwarding."
      }
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
      "Most Similar TLDR Script": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3237: Find all files matching \"abc*\" in the current directory and append \"\\tok\""
      ],
      "Top-3 Scripts": [
        "nl2bash_3237: find . -name 'abc*' | sed 's/$/\\tok/' | column -t"
      ],
      "Explanations about Options": {
        "-t": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays."
      }
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`, even if the file is rotated",
      "Most Similar TLDR Script": "tail -F {{file}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9700: Print the contents of \"$FILE\" starting from line 2"
      ],
      "Top-3 Scripts": [
        "nl2bash_9700: tail -n +2 \"$FILE\""
      ],
      "Explanations about Options": {
        "-n": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Convert JPG images to PNG using replacement strings",
      "Most Similar TLDR Script": "parallel convert {} {.}.png ::: *.jpg",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7848: find all the text files in current folder and change the extension of these files and move them to another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_7848: find . -name \"*.txt\" | parallel 'ext=\"{/}\" ; mv -- {} foo/{/.}.bar.${ext##*.}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3: Sleep until tomorrow at 21:30",
        "nl2bash_4: sleep for 1 second"
      ],
      "Top-3 Scripts": [
        "nl2bash_3: sleep $(($(date -f - +%s- <<< $'tomorrow 21:30\\nnow')0))",
        "nl2bash_4: sleep 1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7234: find all the directories in current folder and do not search in sub directories and create the same directory structure in another folder"
      ],
      "Top-3 Scripts": [
        "nl2bash_7234: find . -maxdepth 1 -type d -print0 | (cd /SomeWhere/Else; xargs -0 mkdir)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9678: Print the absolute path of third-level files under the current directory tree and number the output"
      ],
      "Top-3 Scripts": [
        "nl2bash_9678: ls -d -1 $PWD/**/*/* | nl"
      ],
      "Explanations about Options": {
        "-d": "list directories themselves, not their contents",
        "-1": "list one file per line. Avoid '\\n' with -q or -b"
      }
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Change the password of the specified user",
      "Most Similar TLDR Script": "passwd {{username}} {{new_password}}",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3254: Find all files name passwd in the root directory and all its sub-directories."
      ],
      "Top-3 Scripts": [
        "nl2bash_3254: find / -name passwd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5856: Search directory /path/to/check/ for regular files"
      ],
      "Top-3 Scripts": [
        "nl2bash_5856: find /path/to/check/* -maxdepth 0 -type f"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2389: Find all *.xml files under current directory, search for '<?xml' in those files and print the paths of the matched files.",
        "nl2bash_14005: Disable X11 forwarding and execute \"cd yourRemoteDir; ./yourRemoteScript.sh </dev/null >/dev/null 2>&1\" in the background on \"remoteServer\""
      ],
      "Top-3 Scripts": [
        "nl2bash_2389: find . -name \\*.xml | while read i; do grep '<?xml' \"$i\" >/dev/null; [ $? == 0 ] && echo $i; done",
        "nl2bash_14005: ssh -x remoteServer \"cd yourRemoteDir; ./yourRemoteScript.sh </dev/null >/dev/null 2>&1 & \""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2525: Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/"
      ],
      "Top-3 Scripts": [
        "nl2bash_2525: find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"
      ],
      "Explanations about Options": {
        "-n": "like -l, but list numeric user and group IDs",
        "-a": "do not ignore entries starting with .",
        "-m": "fill width with a comma separated list of entries"
      }
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "display all the files in the folder \"/Users/Me/Desktop\" which have read permission to them",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /Users/Me/Desktop -readable\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-readable": "Matches files which are readable by the current user. This takes into account\n access control lists and other permissions artefacts which the -perm test ignores.\n This test makes use of the access(2) system call, and so can be fooled by NFS\n servers which do UID mapping (or root-squashing), since many systems implement\n access(2) in the client's kernel and so cannot make use of the UID mapping\n information held on the server."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_532: Show file type information for files in /usr/bin"
      ],
      "Top-3 Scripts": [
        "nl2bash_532: find /usr/bin | xargs file"
      ],
      "Explanations about Options": {}
    }
  ]
}