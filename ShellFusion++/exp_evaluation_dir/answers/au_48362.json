{
  "Query": "How to enable mod_rewrite in Apache?",
  "Answers": [
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image",
      "Most Similar TLDR Script": "ffmpeg -ss {{mm:ss}} -i {{video.mp4}} -frames 1 -s {{128x128}} -f image2 {{image.png}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2214: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the literal '%p' and '%f' as the path and name respectively for each file",
        "nl2bash_2213: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the literal '%p' and '%f' as the path and name respectively for each file",
        "nl2bash_2218: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the path and the name for each file"
      ],
      "Top-3 Scripts": [
        "nl2bash_2214: find . -iname \"*.mov\" -exec ffmpeg -i \"%p\" -f flv \"%f\" \\;",
        "nl2bash_2213: find . -iname \"*.mov\" -exec ffmpeg -i \"%p\" -f flv \"%f\" \\;",
        "nl2bash_2218: find . -iname \"*.mov\" -printf \"%p %f\\n\" | xargs -l bash -c 'echo ffmpeg -i $0 -f flv $1' | xargs\n\n\nfind . -iname \"*.mov\" -printf \"%p %f\\n\" | xargs -r -n2 ffmpeg -f flv -i"
      ],
      "Explanations about Options": {
        "-i": "input file url"
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Recursively remove a directory and all its subdirectories",
      "Most Similar TLDR Script": "rm -r {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2223: Find all *.mp3 files in entire file system greater than 10MB and delete them",
        "nl2bash_2221: Find all *.mp3 (case insensitive) files/directories under /tmp and remove them"
      ],
      "Top-3 Scripts": [
        "nl2bash_2223: find / -type f -name *.mp3 -size +10M -exec rm {} \\;",
        "nl2bash_2221: find /tmp -iname '*.mp3' -print0 | xargs -0 rm"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2218: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the path and the name for each file"
      ],
      "Top-3 Scripts": [
        "nl2bash_2218: find . -iname \"*.mov\" -printf \"%p %f\\n\" | xargs -l bash -c 'echo ffmpeg -i $0 -f flv $1' | xargs"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2134: Find all *.ext files/directories under current directory and print their path and parent directory path",
        "nl2bash_2210: Find all *.mov (case insensitive) files under current directory and run an echo command with the path and the name for each file",
        "nl2bash_2292: Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'"
      ],
      "Top-3 Scripts": [
        "nl2bash_2134: find . -name '*.ext' | parallel echo {} '`dirname {}`'",
        "nl2bash_2210: find . -iname \"*.mov\" -printf \"%p %f\\n\" | while read -a HR ; do echo ffmpeg -i ${HR[0]} -f flv ${HR[1]} ;done",
        "nl2bash_2292: find . -name \"*.rb\" -type f | xargs -I {} echo Hello, {} !"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2249: Find all *.old files and move them to directory oldfiles",
        "nl2bash_6029: Search for all the directories named 'm?' under current directory tree, add the extension \".mbox\" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_2249: find . -name \"*.old\" -exec mv {} oldfiles \\;",
        "nl2bash_6029: find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2218: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the path and the name for each file",
        "nl2bash_2306: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2304: Find all *.so files under current directory and search for mysymbol in their symbol tables"
      ],
      "Top-3 Scripts": [
        "nl2bash_2218: find . -iname \"*.mov\" -print0 | xargs -0 -i sh -c 'ffmpeg -i {} -f flv `basename {}`'",
        "nl2bash_2306: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2304: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps.",
        "-f": "Do not expand file name patterns.",
        "-i": "Integer attribute. n specifies the base to use when displaying the integer\n (if not specified, the base given in the first assignment is used).\n Parameters with this attribute may be assigned values containing arithmetic\n expressions."
      }
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6029: Search for all the directories named 'm?' under current directory tree, add the extension \".mbox\" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_6029: find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2273: Find all *.ps files under $STARTDIR and run ps2pdf for each files with the file path as a argument",
        "nl2bash_2311: Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command"
      ],
      "Top-3 Scripts": [
        "nl2bash_2273: find $STARTDIR -name '*.ps' -print | sed -e 's/.ps$//' | xargs -l -i  ps2pdf \\{}.ps",
        "nl2bash_2311: find -maxdepth 1 -name '*.sql' -exec cat '{}' \\; | sed -e 's/ , );/1,1);/g' | mysql -D ootp\n\n\nfind -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' + | mysql -D ootp\n\n\nfind -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' | mysql -D ootp\n\n\nfind -maxdepth 1 -name '*.sql' -print0 \\; | xargs -0 sed -e 's/ , );/1,1);/g'  | mysql -D ootp"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2218: Find all *.mov (case insensitive) files under current directory and run an ffmpeg command with the path and the name for each file",
        "nl2bash_2221: Find all *.mp3 (case insensitive) files/directories under /tmp and remove them",
        "nl2bash_2273: Find all *.ps files under $STARTDIR and run ps2pdf for each files with the file path as a argument"
      ],
      "Top-3 Scripts": [
        "nl2bash_2218: find . -iname \"*.mov\" -print0 | xargs -0 -i sh -c 'ffmpeg -i {} -f flv `basename {}`'\n\n\nfind . -iname \"*.mov\" -printf \"%p %f\\n\" | xargs -l bash -c 'echo ffmpeg -i $0 -f flv $1' | xargs\n\n\nfind . -iname \"*.mov\" -printf \"%p %f\\n\" | xargs -r -n2 ffmpeg -f flv -i",
        "nl2bash_2221: find /tmp -iname '*.mp3' -print0 | xargs -0 rm",
        "nl2bash_2273: find $STARTDIR -name '*.ps' -print | sed -e 's/.ps$//' | xargs -l -i  ps2pdf \\{}.ps"
      ],
      "Explanations about Options": {
        "-l": "Synonym for the -L option. Unlike -L, the max-lines argument is optional. If max-\n lines is not specified, it defaults to one. The -l option is deprecated since the\n POSIX standard specifies -L instead.",
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension.",
        "-i": "This option is a synonym for -Ireplace-str if replace-str is specified. If the\n replace-str argument is missing, the effect is the same as -I{}. This option is\n deprecated; use -I instead."
      }
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Create an image with nothing but a solid background",
      "Most Similar TLDR Script": "convert -size {{800x600}} \"xc:{{#ff0000}}\" {{image.png}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2089: Find all *.bmp files in the current directory tree and convert them to the JPEG format"
      ],
      "Top-3 Scripts": [
        "nl2bash_2089: find -name *.bmp -type f -exec convert '{}' '{}'.jpg \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mogrify",
      "MP Summary": "resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more. Mogrify overwrites the original image file, whereas, convert-im6.q16hdri(1) writes to a different image file.",
      "Most Similar TLDR Task": "Double the brightness of all image files in the current directory",
      "Most Similar TLDR Script": "mogrify -modulate {{200}} {{*}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2176: Find all *.jpg (case-insensitive) files under maximum 2 levels down the temp/images/* paths and run `mogrify -resize 100x100\">\" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments"
      ],
      "Top-3 Scripts": [
        "nl2bash_2176: find temp/images/* -maxdepth 2 -iname \"*.jpg\" -print0 | xargs -0 mogrify -resize 100x100\">\" -quality 80 -compress JPEG -monitor -strip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Run on multiple machines via SSH",
      "Most Similar TLDR Script": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2134: Find all *.ext files/directories under current directory and print their path and parent directory path"
      ],
      "Top-3 Scripts": [
        "nl2bash_2134: find . -name '*.ext' | parallel echo {} '`dirname {}`'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readelf",
      "MP Summary": "Displays information about ELF files.",
      "Most Similar TLDR Task": "Display the entries in symbol table section of the ELF file, if it has one",
      "Most Similar TLDR Script": "readelf --symbols {{path/to/binary}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2304: Find all *.so files under current directory and search for mysymbol in their symbol tables",
        "nl2bash_2305: Find all *.so files under current directory and search for mysymbol in their symbol tables"
      ],
      "Top-3 Scripts": [
        "nl2bash_2304: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;",
        "nl2bash_2305: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;"
      ],
      "Explanations about Options": {
        "-s": "Displays the entries in symbol table section of the file, if it has one."
      }
    },
    {
      "Command": "pwd",
      "MP Summary": "print name of current/working directory",
      "Most Similar TLDR Task": "Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path)",
      "Most Similar TLDR Script": "pwd -P",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2060: Find all \"YourProgramName\" regular files in the current directory tree and print the full paths to the directories containing them"
      ],
      "Top-3 Scripts": [
        "nl2bash_2060: find . -type f -name YourProgramName -execdir pwd \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2223: Find all *.mp3 files in entire file system greater than 10MB and delete them",
        "nl2bash_2068: Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files",
        "nl2bash_2060: Find all \"YourProgramName\" regular files in the current directory tree and print the full paths to the directories containing them"
      ],
      "Top-3 Scripts": [
        "nl2bash_2223: find / -type f -name *.mp3 -size +10M -exec rm {} \\;",
        "nl2bash_2068: find $1 -path /proc -prune -o -name \"$2\" -print -exec grep -Hn \"$3\" {} \\;",
        "nl2bash_2060: find . -type f -name YourProgramName -execdir pwd \\;"
      ],
      "Explanations about Options": {
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
        "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print."
      }
    },
    {
      "Command": "mysql",
      "MP Summary": "the MySQL command-line client",
      "Most Similar TLDR Task": "Connect to a database",
      "Most Similar TLDR Script": "mysql {{database_name}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2311: Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command"
      ],
      "Top-3 Scripts": [
        "nl2bash_2311: find -maxdepth 1 -name '*.sql' -exec cat '{}' \\; | sed -e 's/ , );/1,1);/g' | mysql -D ootp\n\n\nfind -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' + | mysql -D ootp\n\n\nfind -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' | mysql -D ootp\n\n\nfind -maxdepth 1 -name '*.sql' -print0 \\; | xargs -0 sed -e 's/ , );/1,1);/g'  | mysql -D ootp\n\n\nfind . -maxdepth 1 -name '*.sql' -exec \"sed -e 's/ , );/1,1);/g' '{}' | /usr/bin/mysql -D ootp\" \\;"
      ],
      "Explanations about Options": {
        "-D": "The database to use. This is useful primarily in an option file."
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Enable backspace and GNU readline hotkeys when entering input with read",
      "Most Similar TLDR Script": "read -e {{variable}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count",
        "nl2bash_2210: Find all *.mov (case insensitive) files under current directory and run an echo command with the path and the name for each file"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done",
        "nl2bash_2210: find . -iname \"*.mov\" -printf \"%p %f\\n\" | while read -a HR ; do echo ffmpeg -i ${HR[0]} -f flv ${HR[1]} ;done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2311: Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command"
      ],
      "Top-3 Scripts": [
        "nl2bash_2311: find -maxdepth 1 -name '*.sql' -exec cat '{}' \\; | sed -e 's/ , );/1,1);/g' | mysql -D ootp"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only unique lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -u",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2192: Find all *.jpg files under current directory and print only unique names",
        "nl2bash_2190: Find all *.jpg files under current directory and print only duplicate names"
      ],
      "Top-3 Scripts": [
        "nl2bash_2192: find . -name *.jpg | uniq -u\n\n\nfind . -name \\*.jpg -exec basename {} \\; | uniq -u",
        "nl2bash_2190: find . -name \\*.jpg -exec basename {} \\; | uniq -d"
      ],
      "Explanations about Options": {
        "-d": "only print duplicate lines, one for each group",
        "-u": "only print unique lines"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2255: Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output",
        "nl2bash_10164: Sort \"some_data\" by the first and second \";\" delimited entries, outputing unique lines and stabilizing the sort",
        "nl2bash_2254: Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output"
      ],
      "Top-3 Scripts": [
        "nl2bash_2255: find . -iname *.page -exec ~/t.sh {} \\; | sort",
        "nl2bash_10164: sort -k1,1 -k2,2 -t';' --stable --unique some_data",
        "nl2bash_2254: find . -iname *.page -exec ~/t.sh {} \\; | sort"
      ],
      "Explanations about Options": {
        "--unique": "with -c, check for strict ordering; without -c, output only the first of an equal\n run",
        "--stable": "stabilize sort by disabling last-resort comparison"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2068: Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files",
        "nl2bash_2306: Find all *.so files/directories under current directory and run myCommand with the file/directory paths as its argument then search for ExpectedResult in the output of myCommand",
        "nl2bash_2304: Find all *.so files under current directory and search for mysymbol in their symbol tables"
      ],
      "Top-3 Scripts": [
        "nl2bash_2068: find $1 -path /proc -prune -o -name \"$2\" -print -exec grep -Hn \"$3\" {} \\;",
        "nl2bash_2306: find . -name *.so -print0 | xargs -0 -I % sh -c 'echo % ; myCommand \"%\" | grep ExpectedResult'",
        "nl2bash_2304: find . -type f -name \"*.so\" -exec sh -c \"echo {} && readelf -s {} | grep mysymbol\" \\;"
      ],
      "Explanations about Options": {
        "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
        "-n": "Prefix each line of output with the 1-based line number within its input file."
      }
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2192: Find all *.jpg files under current directory and print only unique names",
        "nl2bash_2190: Find all *.jpg files under current directory and print only duplicate names"
      ],
      "Top-3 Scripts": [
        "nl2bash_2192: find . -name \\*.jpg -exec basename {} \\; | uniq -u",
        "nl2bash_2190: find . -name \\*.jpg -exec basename {} \\; | uniq -d"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2290: Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.",
        "nl2bash_2022: Find List of directory  with non-zero file count",
        "nl2bash_2291: Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path."
      ],
      "Top-3 Scripts": [
        "nl2bash_2290: find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l",
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done",
        "nl2bash_2291: find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "src",
      "MP Summary": "simple revision control",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1965: Find *.html files in the /usr/src/linux directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_1965: find /usr/src/linux -name \"*.html\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps2pdf",
      "MP Summary": "Convert PostScript to PDF using ghostscript",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2273: Find all *.ps files under $STARTDIR and run ps2pdf for each files with the file path as a argument"
      ],
      "Top-3 Scripts": [
        "nl2bash_2273: find $STARTDIR -name '*.ps' -print | sed -e 's/.ps$//' | xargs -l -i  ps2pdf \\{}.ps"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2311: Find all *.sql files in maximum 1 level down the current directory, process it with sed and then send the output to a mysql command"
      ],
      "Top-3 Scripts": [
        "nl2bash_2311: find . -maxdepth 1 -name '*.sql' -exec \"sed -e 's/ , );/1,1);/g' '{}' | /usr/bin/mysql -D ootp\" \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2188: Find all *.jpg files on the system"
      ],
      "Top-3 Scripts": [
        "nl2bash_2188: find / -name *.jpg 2>/dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2022: Find List of directory  with non-zero file count"
      ],
      "Top-3 Scripts": [
        "nl2bash_2022: find -maxdepth 1 -type d | sort | while read -r dir; do n=$(find \"$dir\" -type f | wc -l); if [ $n -gt 0 ]; then printf \"%4d : %s\\n\" $n \"$dir\"; fi; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "egrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2230: Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_2230: find \"$musicdir\" -type f -print | egrep -i '\\.(mp3|aif*|m4p|wav|flac)$'"
      ],
      "Explanations about Options": {
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all *.err files under current directory that are larger than 5120 bytes in size",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f -size +10 -name \"*.err\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2141: Find all *.foo files under current directory and search for 'bar' in those files"
      ],
      "Top-3 Scripts": [
        "nl2bash_2141: find . -name '*.foo' -exec grep bar {} \\;"
      ],
      "Explanations about Options": {}
    }
  ]
}