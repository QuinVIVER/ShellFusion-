{
  "Query": "How to configure the touchpad middle click?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-regextype": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression.",
              "-regex": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "cp": {
              "mpsum": "copy files and directories",
              "--target-directory": "copy all SOURCE arguments into DIRECTORY",
              "-p": "same as --preserve=mode , ownership , timestamps"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "cp": {
              "man1_cp_5093": "copi file directori copi directori recurs verbos mode show file copi copi file anoth directori keep filenam copi file anoth locat copi text file anoth locat interact mode prompt user overwrit derefer symbol link copi recurs copi directori content anoth locat destin exist directori copi insid use full path sourc file creat miss intermedi directori copi"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4942: Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2",
        "nl2bash_6075: Search for files specifying the maximum depth of the search",
        "nl2bash_73: Get a detailed list of all files on the system larger than 10MB"
      ],
      "Top-3 Scripts": [
        "nl2bash_4942: find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2",
        "nl2bash_6075: find -maxdepth num -name query",
        "nl2bash_73: find / -size +10M -printf \u201c%12s %t %h/%fn\u201d"
      ],
      "Explanations about Options": {
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
        "-type": "File is of type c:",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-regextype": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression.",
        "-regex": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option."
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-regextype": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression.",
              "-regex": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "cp": {
              "mpsum": "copy files and directories",
              "--target-directory": "copy all SOURCE arguments into DIRECTORY",
              "-p": "same as --preserve=mode , ownership , timestamps"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "cp": {
              "man1_cp_5093": "copi file directori copi directori recurs verbos mode show file copi copi file anoth directori keep filenam copi file anoth locat copi text file anoth locat interact mode prompt user overwrit derefer symbol link copi recurs copi directori content anoth locat destin exist directori copi insid use full path sourc file creat miss intermedi directori copi"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4942: Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2"
      ],
      "Top-3 Scripts": [
        "nl2bash_4942: find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2"
      ],
      "Explanations about Options": {
        "-p": "same as --preserve=mode , ownership , timestamps",
        "--target-directory": "copy all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-regextype": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression.",
              "-regex": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "cp": {
              "mpsum": "copy files and directories",
              "--target-directory": "copy all SOURCE arguments into DIRECTORY",
              "-p": "same as --preserve=mode , ownership , timestamps"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "cp": {
              "man1_cp_5093": "copi file directori copi directori recurs verbos mode show file copi copi file anoth directori keep filenam copi file anoth locat copi text file anoth locat interact mode prompt user overwrit derefer symbol link copi recurs copi directori content anoth locat destin exist directori copi insid use full path sourc file creat miss intermedi directori copi"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4942: Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2"
      ],
      "Top-3 Scripts": [
        "nl2bash_4942: find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "num",
      "MP Summary": "number utilities for mathematics",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find files not matching the posix extended regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' in their paths under Folder1 and copy them to Folder2",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find Folder1 -type f -regextype posix-extended \\( ! -regex '.+\\-[0-9]{2,4}x[0-9]{2,4}\\.jpg' \\) -print0 |  xargs -0 cp -p --target-directory=Folder2\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-regextype": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression.",
              "-regex": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "cp": {
              "mpsum": "copy files and directories",
              "--target-directory": "copy all SOURCE arguments into DIRECTORY",
              "-p": "same as --preserve=mode , ownership , timestamps"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "cp": {
              "man1_cp_5093": "copi file directori copi directori recurs verbos mode show file copi copi file anoth directori keep filenam copi file anoth locat copi text file anoth locat interact mode prompt user overwrit derefer symbol link copi recurs copi directori content anoth locat destin exist directori copi insid use full path sourc file creat miss intermedi directori copi"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6075: Search for files specifying the maximum depth of the search"
      ],
      "Top-3 Scripts": [
        "nl2bash_6075: find -maxdepth num -name query"
      ],
      "Explanations about Options": {}
    }
  ]
}