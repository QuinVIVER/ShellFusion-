{
  "Query": "Copy Files from Remote RDP to Local Machine",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6161: Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree",
        "nl2bash_7188: find all the \"error_log\" files in the folder \"/home\" which are bigger than 5MB and force delete them",
        "nl2bash_7677: find all the jpg files in current folder and sort them"
      ],
      "Top-3 Scripts": [
        "nl2bash_6161: find . -name '*.[ch]' | xargs grep -E 'expr'",
        "nl2bash_7188: find /home -size +5000000b -name \"error_log\" -exec rm -rf {} \\;",
        "nl2bash_7677: find . -type f|grep -i \"\\.jpg$\" |sort"
      ],
      "Explanations about Options": {
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7188: find all the \"error_log\" files in the folder \"/home\" which are bigger than 5MB and force delete them",
        "nl2bash_7198: find all the backup files in the current folder and delete them",
        "nl2bash_7187: find all the \"error_log\" files in the folder \"/home\" which are bigger than 5MB and force delete them"
      ],
      "Top-3 Scripts": [
        "nl2bash_7188: find /home -size +5000000b -name \"error_log\" -exec rm -rf {} \\;",
        "nl2bash_7198: find . -type f -name \"*.bak\" -exec rm -f {} \\;",
        "nl2bash_7187: find /home -size +5000000b -name \"error_log\" -exec rm -rf {} \\;"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7820: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_13743: Calculate the total disk usage for each \".jpg\" file on the system and prepend the system host name to the output",
        "nl2bash_7818: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions"
      ],
      "Top-3 Scripts": [
        "nl2bash_7820: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_13743: find \"$PWD\" / -iname '*.jpg' -exec du -s {} + | sed \"s/^/$(hostname): /\"",
        "nl2bash_7818: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "cpio",
      "MP Summary": "copy files to and from archives",
      "Most Similar TLDR Task": "Copy all files and directories in a directory and add them [o]nto an archive, in [v]erbose mode",
      "Most Similar TLDR Script": "find {{path/to/directory}} | cpio -ov > {{archive.cpio}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7150: find all text files in the current directory and compress them to a cpio file",
        "nl2bash_7151: find all text files in the current directory and compress them to a cpio file"
      ],
      "Top-3 Scripts": [
        "nl2bash_7150: find . -name '*.txt' | cpio -pdm /path/to/destdir",
        "nl2bash_7151: find . -name '*.txt' | cpio -pdm /path/to/destdir"
      ],
      "Explanations about Options": {
        "-d": "(i and p modes) Create directories as necessary.",
        "-p": "Pass-through mode. See above for description.",
        "-m": "(i and p modes) Set file modification time on created files to match those in the\n source."
      }
    },
    {
      "Command": "scp",
      "MP Summary": "secure copy (remote file copy program)",
      "Most Similar TLDR Task": "Copy a local file to a remote host",
      "Most Similar TLDR Script": "scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13646: On host \"server_b\", connect as ssh user \"user\" and copy \"/my_folder/my_file.xml\" to directory \"/my_new_folder/\", with all transfer data relayed through local host."
      ],
      "Top-3 Scripts": [
        "nl2bash_13646: scp -3 user@server_b:/my_folder/my_file.xml user@server_b:/my_new_folder/"
      ],
      "Explanations about Options": {
        "-3": "Copies between two remote hosts are transferred through the local host. Without\n this option the data is copied directly between the two remote hosts. Note that\n this option disables the progress meter."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6161: Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_6161: find . -name '*.[ch]' | xargs grep -E 'expr'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11610: Remove the last two components (directories) of $path",
        "nl2bash_5509: Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot."
      ],
      "Top-3 Scripts": [
        "nl2bash_11610: echo $path | rev | cut -d'/' -f4- | rev",
        "nl2bash_5509: echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5646: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress each file in parallel",
        "nl2bash_5645: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress each file in parallel"
      ],
      "Top-3 Scripts": [
        "nl2bash_5646: find . -type f  -mtime +7 | tee compressedP.list | parallel compress",
        "nl2bash_5645: find . -type f  -mtime +7 | tee compressedP.list | parallel compress"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Run on multiple machines via SSH",
      "Most Similar TLDR Script": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5646: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress each file in parallel",
        "nl2bash_5645: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress each file in parallel"
      ],
      "Top-3 Scripts": [
        "nl2bash_5646: find . -type f  -mtime +7 | tee compressedP.list | parallel compress",
        "nl2bash_5645: find . -type f  -mtime +7 | tee compressedP.list | parallel compress"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8893: Set status code to a non-zero value if process with PID 4129 is running in a different namespace than init"
      ],
      "Top-3 Scripts": [
        "nl2bash_8893: bash -c \"test -h /proc/4129/ns/pid && test '$(readlink /proc/4129/ns/pid)' != '$(readlink /proc/1/ns/pid)'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6161: Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree",
        "nl2bash_7677: find all the jpg files in current folder and sort them",
        "nl2bash_5509: Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot."
      ],
      "Top-3 Scripts": [
        "nl2bash_6161: find . -name '*.[ch]' | xargs grep -E 'expr'",
        "nl2bash_7677: find . -type f|grep -i \"\\.jpg$\" |sort",
        "nl2bash_5509: echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f3"
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7677: find all the jpg files in current folder and sort them",
        "nl2bash_7820: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_7818: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions"
      ],
      "Top-3 Scripts": [
        "nl2bash_7677: find . -type f|grep -i \"\\.jpg$\" |sort",
        "nl2bash_7820: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_7818: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only duplicate lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -d",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7820: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_7818: find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions",
        "nl2bash_9850: Print the line with most consecutive repeats prefixed with its count from standard input"
      ],
      "Top-3 Scripts": [
        "nl2bash_7820: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_7818: find . -type f | sed -e 's#.*\\(\\.[a-zA-Z]*\\)$#\\1#' | sort | uniq",
        "nl2bash_9850: uniq -c | sort -n | tail -n1"
      ],
      "Explanations about Options": {
        "-c": "prefix lines by the number of occurrences"
      }
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Change the password of the specified user",
      "Most Similar TLDR Script": "passwd {{username}} {{new_password}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7190: find all the \"passwd\" files in the entire file system"
      ],
      "Top-3 Scripts": [
        "nl2bash_7190: find / -iname passwd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "md5sum",
      "MP Summary": "compute and check MD5 message digest",
      "Most Similar TLDR Task": "Calculate MD5 checksums for multiple files",
      "Most Similar TLDR Script": "md5sum {{filename1}} {{filename2}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8082: find the MyCProgram.c (case insensitive find) under the current directory and run the md5sum command against it"
      ],
      "Top-3 Scripts": [
        "nl2bash_8082: find -iname \"MyCProgram.c\" -exec md5sum {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11610: Remove the last two components (directories) of $path",
        "nl2bash_5509: Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot."
      ],
      "Top-3 Scripts": [
        "nl2bash_11610: echo $path | rev | cut -d'/' -f4- | rev",
        "nl2bash_5509: echo \"$f\" | grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?' | cut -d. -f3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "List the human-readable sizes of a directory and of all the files and directories within it",
      "Most Similar TLDR Script": "du -ah {{path/to/directory}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13743: Calculate the total disk usage for each \".jpg\" file on the system and prepend the system host name to the output"
      ],
      "Top-3 Scripts": [
        "nl2bash_13743: find \"$PWD\" / -iname '*.jpg' -exec du -s {} + | sed \"s/^/$(hostname): /\""
      ],
      "Explanations about Options": {
        "-s": "display only a total for each argument"
      }
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination",
      "Most Similar TLDR Script": "install {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8893: Set status code to a non-zero value if process with PID 4129 is running in a different namespace than init"
      ],
      "Top-3 Scripts": [
        "nl2bash_8893: bash -c \"test -h /proc/4129/ns/pid && test '$(readlink /proc/4129/ns/pid)' != '$(readlink /proc/1/ns/pid)'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pass",
      "MP Summary": "stores, retrieves, generates, and synchronizes passwords securely",
      "Most Similar TLDR Task": "Initialize a new Git repository (any changes done by pass will be committed automatically)",
      "Most Similar TLDR Script": "pass git init",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8893: Set status code to a non-zero value if process with PID 4129 is running in a different namespace than init"
      ],
      "Top-3 Scripts": [
        "nl2bash_8893: bash -c \"test -h /proc/4129/ns/pid && test '$(readlink /proc/4129/ns/pid)' != '$(readlink /proc/1/ns/pid)'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse an entire file and print to `stdout`",
      "Most Similar TLDR Script": "rev {{file}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11610: Remove the last two components (directories) of $path"
      ],
      "Top-3 Scripts": [
        "nl2bash_11610: echo $path | rev | cut -d'/' -f4- | rev"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7196: find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\""
      ],
      "Top-3 Scripts": [
        "nl2bash_7196: find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Execute make from another directory",
      "Most Similar TLDR Script": "make --directory {{directory}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13838: Count the number of symbolic links starting from /students"
      ],
      "Top-3 Scripts": [
        "nl2bash_13838: find /students -type l -print 2> /dev/null |wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`, even if the file is rotated",
      "Most Similar TLDR Script": "tail -F {{file}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9850: Print the line with most consecutive repeats prefixed with its count from standard input"
      ],
      "Top-3 Scripts": [
        "nl2bash_9850: uniq -c | sort -n | tail -n1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Mark variables that are modified or created for export",
      "Most Similar TLDR Script": "set -a",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Quickly extract a single frame from a video at time mm:ss and save it as a 128x128 resolution image",
      "Most Similar TLDR Script": "ffmpeg -ss {{mm:ss}} -i {{video.mp4}} -frames 1 -s {{128x128}} -f image2 {{image.png}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5425: Finds all files with names like \"*.rm\" in a '/home/me/download/' folder, launches ffmpeg conversion for each one, and deletes source file after."
      ],
      "Top-3 Scripts": [
        "nl2bash_5425: find /home/me/download/ -type f -name \"*.rm\" -exec ffmpeg -i \\{} -sameq \\{}.mp3 \\; -exec rm \\{} \\;"
      ],
      "Explanations about Options": {
        "-q": " Use fixed quality scale (VBR). The meaning of q/qscale is codec-dependent. If qscale\n is used without a stream_specifier then it applies only to the video stream, this is\n to maintain compatibility with previous behavior and as specifying the same codec\n specific value to 2 different codecs that is audio and video generally is not what is\n intended when no stream_specifier is used.",
        "-i": "input file url"
      }
    },
    {
      "Command": "groups",
      "MP Summary": "print the groups a user is in",
      "Most Similar TLDR Task": "Print group memberships for a specific user",
      "Most Similar TLDR Script": "groups {{username}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7367: find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format"
      ],
      "Top-3 Scripts": [
        "nl2bash_7367: find -mmin -60 -exec ls -l {} \\;"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12275: Convert *.doc files in the current directory tree to the .txt format and remove the original files"
      ],
      "Top-3 Scripts": [
        "nl2bash_12275: find . -name '*.doc' | while read i; do antiword -i 1 \"${i}\" >\"${i/doc/txt}\" && rm \"${i}\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Change file extensions",
      "Most Similar TLDR Script": "rename {{.ext}} {{.bak}} {{*.ext}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5746: Recursively search for all directories containing \"foo\" (case insensitive) under the current directory, renaming them to replace \"foo\" (case insensitive) with \"Bar\""
      ],
      "Top-3 Scripts": [
        "nl2bash_5746: find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt",
      "MP Summary": "command-line interface",
      "Most Similar TLDR Task": "Remove a package (using `purge` instead also removes its configuration files)",
      "Most Similar TLDR Script": "sudo apt remove {{package}}",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: apt list --installed\n\napt download <pkg>\n\n/var/cache/apt/archive"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7150: find all text files in the current directory and compress them to a cpio file",
        "nl2bash_7151: find all text files in the current directory and compress them to a cpio file",
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "nl2bash_7150: find . -name '*.txt' | cpio -pdm /path/to/destdir",
        "nl2bash_7151: find . -name '*.txt' | cpio -pdm /path/to/destdir",
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7192: find all the *.conf files under / (root) redirecting error messages to /dev/null",
        "nl2bash_5104: Find files/directories not changed in two weeks under /dev/shm",
        "nl2bash_13838: Count the number of symbolic links starting from /students"
      ],
      "Top-3 Scripts": [
        "nl2bash_7192: find / -name \"*.conf\" 2>>/dev/null",
        "nl2bash_5104: find /dev/shm /tmp -type f -ctime +14",
        "nl2bash_13838: find /students -type l -print 2> /dev/null |wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ns",
      "MP Summary": "network simulator (version 2)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8893: Set status code to a non-zero value if process with PID 4129 is running in a different namespace than init"
      ],
      "Top-3 Scripts": [
        "nl2bash_8893: bash -c \"test -h /proc/4129/ns/pid && test '$(readlink /proc/4129/ns/pid)' != '$(readlink /proc/1/ns/pid)'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "compress",
      "MP Summary": "compress data",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5646: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress each file in parallel",
        "nl2bash_5645: Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to \"compressedP.list\", and compress each file in parallel"
      ],
      "Top-3 Scripts": [
        "nl2bash_5646: find . -type f  -mtime +7 | tee compressedP.list | parallel compress",
        "nl2bash_5645: find . -type f  -mtime +7 | tee compressedP.list | parallel compress"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "folder",
      "MP Summary": "set/list current folder/message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "installed",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "list",
      "MP Summary": "list algorithms and features",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: apt list --installed"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cache",
      "MP Summary": "cache parameters",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: cache dir\n\n/var/cache/apt/archive"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "up",
      "MP Summary": "Recursively copy directories, preserving AFS metadata",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "have",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "get",
      "MP Summary": "symbolic link to as_run command",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "over",
      "MP Summary": "pretty print and scroll source code on terminal",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find all the JSON files in the directory \"PROD/140725_D0\" and send them as input to the python script \"/tmp/test.py\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py \"$f\"; done' \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
              "-type": "File is of type c:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_863193: How to copy packages from an online machine to an offline machine"
      ],
      "Top-3 Scripts": [
        "au_863193: "
      ],
      "Explanations about Options": {}
    }
  ]
}