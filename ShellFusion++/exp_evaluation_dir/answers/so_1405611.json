{
  "Query": "How to extract the first two characters of a string in shell scripting?",
  "Answers": [
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
      "Most Similar TLDR Script": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12665: change the permissions of all the directories in the folder \"/path/to/someDirectory\" to 755",
        "nl2bash_12664: change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name",
        "nl2bash_11379: Remove all .txt files with spaces in names in and below the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_12665: sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755",
        "nl2bash_12664: find . -type d -print0 | xargs -0 chmod 2775",
        "nl2bash_11379: find -name \"*\\ *.txt\" | xargs rm"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12665: change the permissions of all the directories in the folder \"/path/to/someDirectory\" to 755",
        "nl2bash_12664: change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name",
        "nl2bash_12965: Create symlinks to all  /home/folder1/*.txt files with the same name in current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_12665: sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755",
        "nl2bash_12664: find . -type d -print0 | xargs -0 chmod 2775",
        "nl2bash_12965: find /home/folder1/*.txt -type f -exec ln -s {} \\;"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace the first occurrence of a regular expression in each line of a file, and print the result",
      "Most Similar TLDR Script": "sed 's/{{regex}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56011503: How to remove all but first character before dot",
        "nl2bash_11631: Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories"
      ],
      "Top-3 Scripts": [
        "so_56011503: $ sed 's/\\(.\\)[^.]*/\\1/' <<< 'anyString.ofSomeSort...'\na.ofSomeSort...",
        "nl2bash_11631: find . -not \\( -name .svn -prune -o -name .git -prune \\) -type f -exec sed -i 's/[:space:]+$//' \\{} \\;  -exec sed -i 's/\\r\\n$/\\n/' \\{} \\;"
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)",
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Give the [u]ser rights to [r]ead and [w]rite to a file/directory",
      "Most Similar TLDR Script": "chmod u+rw {{file_or_directory}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12665: change the permissions of all the directories in the folder \"/path/to/someDirectory\" to 755",
        "nl2bash_12664: change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name"
      ],
      "Top-3 Scripts": [
        "nl2bash_12665: sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755",
        "nl2bash_12664: find . -type d -print0 | xargs -0 chmod 2775"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Repeat the last command prefixed with \"sudo\" (only in bash, zsh, etc.)",
      "Most Similar TLDR Script": "sudo !!",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12665: change the permissions of all the directories in the folder \"/path/to/someDirectory\" to 755"
      ],
      "Top-3 Scripts": [
        "nl2bash_12665: sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56011503: How to remove all but first character before dot"
      ],
      "Top-3 Scripts": [
        "so_56011503: $ str='anyString.ofSomeSort...'\n$ echo \"${str:0:1}${str#${str%%.*}}\"\na.ofSomeSort..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11379: Remove all .txt files with spaces in names in and below the current directory",
        "nl2bash_11387: Remove all a.out, *.o, and core files under the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_11379: find -name \"*\\ *.txt\" | xargs rm",
        "nl2bash_11387: find . \\( -name a.out -o -name '*.o' -o -name 'core' \\) -exec rm {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
      "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12965: Create symlinks to all  /home/folder1/*.txt files with the same name in current directory",
        "nl2bash_12853: Create a symbolic link named \"${DESTINATION}${file}\" to \"${TARGET}${file}\"",
        "nl2bash_12964: Create symlinks to all  /home/folder1/*.txt files and 'folder2_' directory with the same name in a target directory named '+'"
      ],
      "Top-3 Scripts": [
        "nl2bash_12965: find /home/folder1/*.txt -type f -exec ln -s {} \\;",
        "nl2bash_12853: ln -s  \"${TARGET}${file}\"  \"${DESTINATION}${file}\"",
        "nl2bash_12964: find /home/folder1/*.txt -type f -exec ln -s {} \"folder2_\" + \\;"
      ],
      "Explanations about Options": {
        "-s": "make symbolic links instead of hard links"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_160: Gets domain name from dig reverse lookup."
      ],
      "Top-3 Scripts": [
        "nl2bash_160: dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_160: Gets domain name from dig reverse lookup."
      ],
      "Top-3 Scripts": [
        "nl2bash_160: $dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n\n\ndig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print every third line starting from the first line",
      "Most Similar TLDR Script": "awk 'NR%3==1' {{filename}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_160: Gets domain name from dig reverse lookup."
      ],
      "Top-3 Scripts": [
        "nl2bash_160: dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dig",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Perform iterative queries and display the entire trace path to resolve a domain name",
      "Most Similar TLDR Script": "dig +trace {{example.com}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_160: Gets domain name from dig reverse lookup."
      ],
      "Top-3 Scripts": [
        "nl2bash_160: $dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n\n\ndig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n\n\ndig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5"
      ],
      "Explanations about Options": {
        "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character in a file, and print the result",
      "Most Similar TLDR Script": "tr {{find_character}} {{replace_character}} < {{filename}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11392: Remove all characters except \";\" and digits from standard input"
      ],
      "Top-3 Scripts": [
        "nl2bash_11392: tr -cd \";0-9\""
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate",
        "-c": "use the complement of SET1"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_160: Gets domain name from dig reverse lookup."
      ],
      "Top-3 Scripts": [
        "nl2bash_160: dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "opt",
      "MP Summary": "LLVM optimizer",
      "Most Similar TLDR Task": "Optimize the program at level 2 and output the result to another file",
      "Most Similar TLDR Script": "opt -O2 {{path/to/file.bc}} -S -o {{path/to/output_file.bc}}",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7288: find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt"
      ],
      "Top-3 Scripts": [
        "nl2bash_7288: find /opt \\( -name error_log -o -name 'access_log' -o -name 'ssl_engine_log' -o -name 'rewrite_log' -o  -name 'catalina.out' \\) -size +300000k -a -size -5000000k"
      ],
      "Explanations about Options": {
        "-o": "Specify the output filename."
      }
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12665: change the permissions of all the directories in the folder \"/path/to/someDirectory\" to 755"
      ],
      "Top-3 Scripts": [
        "nl2bash_12665: sudo find /path/to/someDirectory -type d -print0 | xargs -0 sudo chmod 755"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "log",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Gets domain name from dig reverse lookup.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "$dig -x 8.8.8.8 | grep  PTR | grep -o google.*\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        },
        "1": {
          "script": "dig -x 8.8.8.8 | awk '/PTR[[:space:]]/{print $NF}'\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        },
        "2": {
          "script": "dig -x 8.8.8.8 | grep PTR | cut -d ' ' -f 2 | grep google | cut -f 5\n",
          "command-options": {
            "dig": {
              "mpsum": "DNS lookup utility",
              "-x": "Simplified reverse lookups, for mapping addresses to names. The addr is an IPv4\n address in dotted-decimal notation, or a colon-delimited IPv6 address. When the -x is\n used, there is no need to provide the name, class and type arguments. dig\n automatically performs a lookup for a name like 94.2.0.192.in-addr.arpa and sets the\n query type and class to PTR and IN respectively. IPv6 addresses are looked up using\n nibble format under the IP6.ARPA domain."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "dig": {
              "man1_dig_6795": "dn lookup util find authorit name server zone display soa record get type record given domain name lookup ip associ hostnam record lookup mail server associ given domain name mx record perform revers dn lookup ip address ptr record perform iter queri display entir trace path resolv domain name specifi altern dn server queri"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6115: Search for files/directories with the case insensitive pattern anaconda.* in var/log directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_6115: find var/log/ -iname anaconda.*"
      ],
      "Explanations about Options": {}
    }
  ]
}