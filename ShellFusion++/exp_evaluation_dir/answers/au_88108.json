{
  "Query": "Samba share read only for guests, read write for authenticated users",
  "Answers": [
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12909: Create empty files (or update timestamps if they exist) with names matching each word in variable \"correctFilePathAndName\"",
        "nl2bash_12880: Create a tar file containing all the files in ~/Library folder that contain spaces in their names",
        "nl2bash_11713: Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts."
      ],
      "Top-3 Scripts": [
        "nl2bash_12909: echo -e \"$correctFilePathAndName\" | xargs touch",
        "nl2bash_12880: find ~/Library -name '* *' -print0 | xargs -0 tar rf blah.tar",
        "nl2bash_11713: find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_4982: Find files that don\u2019t have 644 permissions",
        "nl2bash_12880: Create a tar file containing all the files in ~/Library folder that contain spaces in their names",
        "nl2bash_5848: Search current directory for any directory named \"config\" and go to first match found."
      ],
      "Top-3 Scripts": [
        "nl2bash_4982: find / -type f ! -perm 644",
        "nl2bash_12880: find ~/Library -name '* *' -print0 | xargs -0 tar rf blah.tar",
        "nl2bash_5848: cd \"$(find . -name config -type d | sed 1q)\""
      ],
      "Explanations about Options": {
        "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11700: Removes files that are listed in file 'xaa'.",
        "nl2bash_11713: Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts.",
        "nl2bash_11714: Removes resursively all files and folders named \"Thumbs.db\", ignoring case distincts."
      ],
      "Top-3 Scripts": [
        "nl2bash_11700: rm $(<xaa)",
        "nl2bash_11713: find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf",
        "nl2bash_11714: find . -iname \"Thumbs.db\" -print0 | xargs -0 rm -rf"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12881: Create a temporary directory and go into it.",
        "nl2bash_5848: Search current directory for any directory named \"config\" and go to first match found.",
        "nl2bash_12882: Create a temporary directory and go into it."
      ],
      "Top-3 Scripts": [
        "nl2bash_12881: tmpdir=$(mktemp -d) && cd $tmpdir",
        "nl2bash_5848: cd \"$(find . -name config -type d | sed 1q)\"",
        "nl2bash_12882: tmpdir=$(mktemp -d) && cd $tmpdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "Most Similar TLDR Script": "touch {{filename}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12909: Create empty files (or update timestamps if they exist) with names matching each word in variable \"correctFilePathAndName\"",
        "nl2bash_12908: Create empty file (or update timestamp to current date/time if file already exists) named with full timestamp (year/month/day/hour/minute/second).",
        "nl2bash_10902: Update timestamps of all files and directories under directory /path/to/dir."
      ],
      "Top-3 Scripts": [
        "nl2bash_12909: echo -e \"$correctFilePathAndName\" | xargs touch",
        "nl2bash_12908: touch filename_`/bin/date +%Y%m%d%H%M%S`.txt",
        "nl2bash_10902: find /path/to/dir -print0 | xargs -0 touch"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2655: Find all TXT files on the system and copy them to /tmp/txt",
        "nl2bash_2654: Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\"",
        "nl2bash_2656: Find all TXT files on the system and copy them to /tmp/txt"
      ],
      "Top-3 Scripts": [
        "nl2bash_2655: find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt",
        "nl2bash_2654: find \"$HOME\" -name '*.txt' -type f -not -path \"$HOME/newdir/*\" -print0 | xargs -0 cp -t \"$HOME/newdir\"\n\n\nfind \"$HOME\" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t \"$HOME/newdir\"\n\n\nfind \"$HOME\" -name '*.txt' -type f -print0 | xargs -0 cp -ut \"$HOME/newdir\"",
        "nl2bash_2656: find / -iname '*.txt' | xargs --replace=@ cp @ /tmp/txt"
      ],
      "Explanations about Options": {
        "-t": "copy all SOURCE arguments into DIRECTORY",
        "-u": "copy only when the SOURCE file is newer than the destination file or when the\n destination file is missing"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12909: Create empty files (or update timestamps if they exist) with names matching each word in variable \"correctFilePathAndName\"",
        "nl2bash_5635: Prints folder path where $mystring file is located.",
        "nl2bash_5636: Prints folder where current script is located"
      ],
      "Top-3 Scripts": [
        "nl2bash_12909: echo -e \"$correctFilePathAndName\" | xargs touch",
        "nl2bash_5635: echo dirname: $(dirname $mystring)",
        "nl2bash_5636: echo \"dirname: `dirname \"$0\"`\"\n\n\necho \"dirname: `dirname $0`\""
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5635: Prints folder path where $mystring file is located.",
        "nl2bash_11706: Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.",
        "nl2bash_11707: Removes first and last parts of path 'test/90_2a5/Windows' and prints the result."
      ],
      "Top-3 Scripts": [
        "nl2bash_5635: echo dirname: $(dirname $mystring)",
        "nl2bash_11706: echo 'test/90_2a5/Windows' | xargs dirname | xargs basename",
        "nl2bash_11707: echo 'test/90_2a5/Windows' | xargs dirname | xargs basename"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12908: Create empty file (or update timestamp to current date/time if file already exists) named with full timestamp (year/month/day/hour/minute/second).",
        "nl2bash_12883: Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch",
        "nl2bash_12884: Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch"
      ],
      "Top-3 Scripts": [
        "nl2bash_12908: touch filename_`/bin/date +%Y%m%d%H%M%S`.txt",
        "nl2bash_12883: source  <(date +\"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'\")",
        "nl2bash_12884: source  <(date +\"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mktemp",
      "MP Summary": "create a temporary file or directory",
      "Most Similar TLDR Task": "Create an empty temporary file and return the absolute path to it",
      "Most Similar TLDR Script": "mktemp",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12881: Create a temporary directory and go into it.",
        "nl2bash_12882: Create a temporary directory and go into it."
      ],
      "Top-3 Scripts": [
        "nl2bash_12881: tmpdir=$(mktemp -d) && cd $tmpdir",
        "nl2bash_12882: tmpdir=$(mktemp -d) && cd $tmpdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11706: Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.",
        "nl2bash_11707: Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.",
        "nl2bash_11704: Removes first and last parts of path $path and saves the result in 'finalName' variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_11706: echo 'test/90_2a5/Windows' | xargs dirname | xargs basename",
        "nl2bash_11707: echo 'test/90_2a5/Windows' | xargs dirname | xargs basename",
        "nl2bash_11704: finalName=$(basename -- \"$(dirname -- \"$path\")\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_2748: Find all directories named postgis-2.0.0 under / directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_2748: sudo find / -type d -name \"postgis-2.0.0\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace all occurrences of an extended regular expression in a file, and print the result",
      "Most Similar TLDR Script": "sed -r 's/{{regex}}/{{replace}}/g' {{filename}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12875: Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with \"Gene\" at the start of the file.",
        "nl2bash_5848: Search current directory for any directory named \"config\" and go to first match found."
      ],
      "Top-3 Scripts": [
        "nl2bash_12875: join -a1 -a2 <(sed s/^Gene/00ne/ S43.txt | sort) <(sed s/^Gene/00ne/ S44.txt | sort) | column -t | sed s/^00ne/Gene/",
        "nl2bash_5848: cd \"$(find . -name config -type d | sed 1q)\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Extract a (compressed) archive into the target directory",
      "Most Similar TLDR Script": "tar xf {{source.tar[.gz|.bz2|.xz]}} -C {{directory}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12880: Create a tar file containing all the files in ~/Library folder that contain spaces in their names",
        "nl2bash_12879: Create a tar archive with all *.java files under the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_12880: find ~/Library -name '* *' -print0 | xargs -0 tar rf blah.tar",
        "nl2bash_12879: find . -type f -name \"*.java\" | xargs tar cvf myfile.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode",
      "Most Similar TLDR Script": "grep -Ei {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5655: Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.",
        "nl2bash_11698: Removes everything from current folder but '*ddl*' and '*docs*' files.",
        "nl2bash_11697: Removes everything from current folder but '*ddl*' and '*docs*' files."
      ],
      "Top-3 Scripts": [
        "nl2bash_5655: grep -rnw \"pattern\"",
        "nl2bash_11698: ls -1|grep -v -e ddl -e docs| xargs rm -rf",
        "nl2bash_11697: ls -1|grep -v -e ddl -e docs| xargs rm -rf"
      ],
      "Explanations about Options": {
        "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
        "-n": "Prefix each line of output with the 1-based line number within its input file.",
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_294: Display a count of regular files in each directory at the current level.",
        "nl2bash_9605: Print only common strings in sorted content of files 'file1' and 'file2'",
        "nl2bash_2654: Find all TXT files in the current directory and copy them to directory \"$HOME/newdir\""
      ],
      "Top-3 Scripts": [
        "nl2bash_294: find -P . -type f | rev | cut -d/ -f2- | rev | cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c",
        "nl2bash_9605: comm -1 -2 <(sort file1) <(sort file2)",
        "nl2bash_2654: find \"$HOME\" -name '*.txt' -type f -print0 | sort -zu | xargs -0 cp -t \"$HOME/newdir\""
      ],
      "Explanations about Options": {
        "-z": "line delimiter is NUL, not newline",
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run"
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8069: find regular files under the current directory, whose name ends in .mbox, piping the output to the GNU Parallel command that will rename each file to not have a file extension."
      ],
      "Top-3 Scripts": [
        "nl2bash_8069: find . -type f -wholename \\*.mbox -print0 | parallel -0 mv {} {.}\n\n\nfind . -type f -wholename \\*.mbox | parallel mv {} {.}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "Long format list (permissions, ownership, size and modification date) of all files",
      "Most Similar TLDR Script": "ls -la",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11698: Removes everything from current folder but '*ddl*' and '*docs*' files.",
        "nl2bash_10919: display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.",
        "nl2bash_11697: Removes everything from current folder but '*ddl*' and '*docs*' files."
      ],
      "Top-3 Scripts": [
        "nl2bash_11698: ls -1|grep -v -e ddl -e docs| xargs rm -rf",
        "nl2bash_10919: find . -mtime -2 -type f -name \"t*\" -exec ls -l '{}' \\;",
        "nl2bash_11697: ls -1|grep -v -e ddl -e docs| xargs rm -rf"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format",
        "-1": "list one file per line. Avoid '\\n' with -q or -b"
      }
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Set a new environment variable",
      "Most Similar TLDR Script": "export {{VARIABLE}}={{value}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12885: Create a variable FOO_BACKWARDS containing \"oof\"."
      ],
      "Top-3 Scripts": [
        "nl2bash_12885: export FOO_BACKWARDS=$(echo 'foo' | rev)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Run on multiple machines via SSH",
      "Most Similar TLDR Script": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8069: find regular files under the current directory, whose name ends in .mbox, piping the output to the GNU Parallel command that will rename each file to not have a file extension."
      ],
      "Top-3 Scripts": [
        "nl2bash_8069: find . -type f -wholename \\*.mbox -print0 | parallel -0 mv {} {.}\n\n\nfind . -type f -wholename \\*.mbox | parallel mv {} {.}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Enable backspace and GNU readline hotkeys when entering input with read",
      "Most Similar TLDR Script": "read -e {{variable}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57197230: How to read and and write variables from a .dat file in shell script?"
      ],
      "Top-3 Scripts": [
        "so_57197230: #!/bin/bash\nwhile read -r mms1p mms2p mms3p; do\n   : your script that uses mms1p mms2p mms3p variables\ndone < parameters.dat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_206: Take the section of variable \"FILE\" between the last slash and the following dot, if any, and store that section in variable \"NAME\".",
        "nl2bash_294: Display a count of regular files in each directory at the current level."
      ],
      "Top-3 Scripts": [
        "nl2bash_206: NAME=`basename \"$FILE\" | cut -d'.' -f-1`",
        "nl2bash_294: find -P . -type f | rev | cut -d/ -f2- | rev | cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter"
      }
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if directory not exists",
      "Most Similar TLDR Script": "test ! -d {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12911: Create hard links of all files and directories matching \"test/icecream/cupcake/*\" or \"test/mtndew/livewire/*\" in \"test-keep\" preserving directory hierarchy"
      ],
      "Top-3 Scripts": [
        "nl2bash_12911: find test -path 'test/icecream/cupcake/*' -o -path 'test/mtndew/livewire/*' | cpio -padluv test-keep"
      ],
      "Explanations about Options": {
        "-h": "FILE\n FILE exists and is a symbolic link (same as -L)",
        "-t": "FD file descriptor FD is opened on a terminal",
        "-p": "FILE\n FILE exists and is a named pipe"
      }
    },
    {
      "Command": "cpio",
      "MP Summary": "copy files to and from archives",
      "Most Similar TLDR Task": "Copy all files and directories in a directory and add them [o]nto an archive, in [v]erbose mode",
      "Most Similar TLDR Script": "find {{path/to/directory}} | cpio -ov > {{archive.cpio}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12911: Create hard links of all files and directories matching \"test/icecream/cupcake/*\" or \"test/mtndew/livewire/*\" in \"test-keep\" preserving directory hierarchy"
      ],
      "Top-3 Scripts": [
        "nl2bash_12911: find test -path 'test/icecream/cupcake/*' -o -path 'test/mtndew/livewire/*' | cpio -padluv test-keep"
      ],
      "Explanations about Options": {
        "-l": "(p mode only) Create links from the target directory to the original files, instead\n of copying.",
        "-a": "(o and p modes) Reset access times on files after they are read.",
        "-u": "(i and p modes) Unconditionally overwrite existing files. Ordinarily, an older file\n will not overwrite a newer file on disk.",
        "-v": "Print the name of each file to stderr as it is processed. With -t, provide a\n detailed listing of each file.",
        "-d": "(i and p modes) Create directories as necessary.",
        "-p": "Pass-through mode. See above for description."
      }
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12914: Create intermediate directories \"b and \"c\" as required and directory \"c\""
      ],
      "Top-3 Scripts": [
        "nl2bash_12914: mkdir -p a/b/c"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Read only 100 bytes of a file starting from the 500th byte",
      "Most Similar TLDR Script": "od --read-bytes {{100}} --skip-bytes={{500}} -v {{path/to/file}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_293: Display a character dump of \"oldfile\""
      ],
      "Top-3 Scripts": [
        "nl2bash_293: od -c oldfile"
      ],
      "Explanations about Options": {
        "-c": "same as -t c , select printable characters or backslash escapes"
      }
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session, appending to an existing file",
      "Most Similar TLDR Script": "script -a {{path/to/session.out}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57197230: How to read and and write variables from a .dat file in shell script?"
      ],
      "Top-3 Scripts": [
        "so_57197230: #!/bin/bash\nwhile read -r mms1p mms2p mms3p; do\n   : your script that uses mms1p mms2p mms3p variables\ndone < parameters.dat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rmdir",
      "MP Summary": "remove empty directories",
      "Most Similar TLDR Task": "Remove the target and its parent directories (useful for nested dirs)",
      "Most Similar TLDR Script": "rmdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11710: Removes only lowest level subfolders from current directory tree (folders without files and another folders within)."
      ],
      "Top-3 Scripts": [
        "nl2bash_11710: find . -type d | xargs rmdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12875: Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with \"Gene\" at the start of the file."
      ],
      "Top-3 Scripts": [
        "nl2bash_12875: join -a1 -a2 <(sed s/^Gene/00ne/ S43.txt | sort) <(sed s/^Gene/00ne/ S44.txt | sort) | column -t | sed s/^00ne/Gene/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Merge two files side by side, each in its column, using the specified delimiter",
      "Most Similar TLDR Script": "paste -d {{delimiter}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57197230: How to read and and write variables from a .dat file in shell script?"
      ],
      "Top-3 Scripts": [
        "so_57197230: paste scan1_result.dat scan1_para.dat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Print only lines common to both files, reading one file from `stdin`",
      "Most Similar TLDR Script": "cat {{file1}} | comm -12 - {{file2}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9605: Print only common strings in sorted content of files 'file1' and 'file2'"
      ],
      "Top-3 Scripts": [
        "nl2bash_9605: comm -1 -2 <(sort file1) <(sort file2)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only duplicate lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -d",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_294: Display a count of regular files in each directory at the current level."
      ],
      "Top-3 Scripts": [
        "nl2bash_294: find -P . -type f | rev | cut -d/ -f2- | rev | cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c"
      ],
      "Explanations about Options": {
        "-c": "prefix lines by the number of occurrences"
      }
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Split columns automatically and auto-align in a tabular format",
      "Most Similar TLDR Script": "printf \"header1 header2\\nbar foo\\n\" | column -t",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12875: Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with \"Gene\" at the start of the file."
      ],
      "Top-3 Scripts": [
        "nl2bash_12875: join -a1 -a2 <(sed s/^Gene/00ne/ S43.txt | sort) <(sed s/^Gene/00ne/ S44.txt | sort) | column -t | sed s/^00ne/Gene/"
      ],
      "Explanations about Options": {
        "-t": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays."
      }
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse an entire file and print to `stdout`",
      "Most Similar TLDR Script": "rev {{file}}",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_294: Display a count of regular files in each directory at the current level."
      ],
      "Top-3 Scripts": [
        "nl2bash_294: find -P . -type f | rev | cut -d/ -f2- | rev | cut -d/ -f1-2 | cut -d/ -f2- | sort | uniq -c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "config",
      "MP Summary": "build system configuration files",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5848: Search current directory for any directory named \"config\" and go to first match found."
      ],
      "Top-3 Scripts": [
        "nl2bash_5848: cd \"$(find . -name config -type d | sed 1q)\""
      ],
      "Explanations about Options": {
        "-p": "Configure a system for profiling; for example, kgmon(8) and gprof(1). If two\n or more -p options are supplied, config configures a system for high resolution\n profiling."
      }
    },
    {
      "Command": "icecream",
      "MP Summary": "download icecast and shoutcast streams, redirecting all fetched content to stdout and/or to disk at the same time",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12911: Create hard links of all files and directories matching \"test/icecream/cupcake/*\" or \"test/mtndew/livewire/*\" in \"test-keep\" preserving directory hierarchy"
      ],
      "Top-3 Scripts": [
        "nl2bash_12911: find test -path 'test/icecream/cupcake/*' -o -path 'test/mtndew/livewire/*' | cpio -padluv test-keep"
      ],
      "Explanations about Options": {
        "-h": "Print a help message describing all options",
        "-t": "Split stream into tracks (if possible)"
      }
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12908: Create empty file (or update timestamp to current date/time if file already exists) named with full timestamp (year/month/day/hour/minute/second)."
      ],
      "Top-3 Scripts": [
        "nl2bash_12908: touch filename_`/bin/date +%Y%m%d%H%M%S`.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10902: Update timestamps of all files and directories under directory /path/to/dir.",
        "nl2bash_10901: Update timestamps of all files and directories under directory /path/to/dir."
      ],
      "Top-3 Scripts": [
        "nl2bash_10902: find /path/to/dir -print0 | xargs -0 touch",
        "nl2bash_10901: find /path/to/dir -print0 | xargs -0 touch"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10902: Update timestamps of all files and directories under directory /path/to/dir.",
        "nl2bash_10901: Update timestamps of all files and directories under directory /path/to/dir."
      ],
      "Top-3 Scripts": [
        "nl2bash_10902: find /path/to/dir -print0 | xargs -0 touch",
        "nl2bash_10901: find /path/to/dir -print0 | xargs -0 touch"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Create a variable FOO_BACKWARDS containing \"oof\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "export FOO_BACKWARDS=$(echo 'foo' | rev)\n",
          "command-options": {
            "export": {
              "mpsum": "set the export attribute for variables"
            },
            "echo": {
              "mpsum": "display a line of text"
            }
          },
          "TLDR_inform": {
            "export": {
              "man1_export_9322": "command mark shell variabl current environ export newli fork child process append someth path variabl mark shell function export remov environ variabl set new environ variabl"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5159: Find grub.conf files in entire file system discarding errors in csh or tcsh shell"
      ],
      "Top-3 Scripts": [
        "nl2bash_5159: find / -name grub.conf >& /dev/null"
      ],
      "Explanations about Options": {}
    }
  ]
}