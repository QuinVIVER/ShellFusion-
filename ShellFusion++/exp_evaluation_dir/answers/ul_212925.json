{
  "Query": "Using sed to replace special characters",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Most Similar NL2Bash Task": "Print the empty files/directories among empty1, empty2 and not_empty",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find empty1 empty2 not_empty -prune -empty\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-empty": "File is empty and is either a regular file or a directory."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28118257: Find and replace in shell script (special characters)"
      ],
      "Top-3 Scripts": [
        "so_28118257: partitionno=$(echo \"$new\" | sed \"s|$old||g\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Print the empty files/directories among empty1, empty2 and not_empty",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find empty1 empty2 not_empty -prune -empty\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-empty": "File is empty and is either a regular file or a directory."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28118257: Find and replace in shell script (special characters)"
      ],
      "Top-3 Scripts": [
        "so_28118257: partitionno=$(echo \"$new\" | sed \"s|$old||g\")\n\nsed \"s/$old//g\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "Print the empty files/directories among empty1, empty2 and not_empty",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find empty1 empty2 not_empty -prune -empty\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-empty": "File is empty and is either a regular file or a directory."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9760: Print the empty files/directories among empty1, empty2 and not_empty",
        "nl2bash_9761: Print the empty files/directories among empty1, empty2 and not_empty"
      ],
      "Top-3 Scripts": [
        "nl2bash_9760: find empty1 empty2 not_empty -prune -empty",
        "nl2bash_9761: find empty1 empty2 not_empty -prune -empty"
      ],
      "Explanations about Options": {
        "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
        "-empty": "File is empty and is either a regular file or a directory."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Print the empty files/directories among empty1, empty2 and not_empty",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find empty1 empty2 not_empty -prune -empty\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-empty": "File is empty and is either a regular file or a directory."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1994: Find .cpp files that differs in subdirectories PATH1 and PATH2."
      ],
      "Top-3 Scripts": [
        "nl2bash_1994: diff -rqx \"*.a\" -x \"*.o\" -x \"*.d\" ./PATH1 ./PATH2 | grep \"\\.cpp \" | grep \"^Files\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Most Similar NL2Bash Task": "Print the empty files/directories among empty1, empty2 and not_empty",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find empty1 empty2 not_empty -prune -empty\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print",
              "-empty": "File is empty and is either a regular file or a directory."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1994: Find .cpp files that differs in subdirectories PATH1 and PATH2."
      ],
      "Top-3 Scripts": [
        "nl2bash_1994: diff -rqx \"*.a\" -x \"*.o\" -x \"*.d\" ./PATH1 ./PATH2 | grep \"\\.cpp \" | grep \"^Files\""
      ],
      "Explanations about Options": {}
    }
  ]
}