{
  "Query": "Downloading multiple files with youtube-dl",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5044: Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found",
        "nl2bash_5857: Search directory lpi104-6 for files with inode number 1988884",
        "nl2bash_6402: Search the current directory recursively for regular files with the read permission set for everybody"
      ],
      "Top-3 Scripts": [
        "nl2bash_5044: find /tmp -type f -perm -002 | awk -- '1{print \"Found world write permissions:\";print};END{if(NR==0)print \"No world writable found.\"}'",
        "nl2bash_5857: find lpi104-6 -inum 1988884",
        "nl2bash_6402: find -type f ! -perm -444"
      ],
      "Explanations about Options": {
        "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
        "-type": "File is of type c:",
        "-inum": "File has inode number n. It is normally easier to use the -samefile test instead."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7993: find files in the users home directory and for each one, ask the user to confirm to delete the file.",
        "ul_570707: Most efficient way to partially match filenames to textfile and delete accordingly?",
        "nl2bash_8129: finds all directories named CVS, and deletes them and their contents."
      ],
      "Top-3 Scripts": [
        "nl2bash_7993: find $HOME/. -name *.txt -ok rm {} \\;",
        "ul_570707: ",
        "nl2bash_8129: find . -type d -name CVS -exec rm -r {} \\;"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run multiple chained commands on the input data",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} | {{command3}}\"",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12373: Move all files from the `sourceDir' directory tree to the `destDir' directory",
        "ul_570707: Most efficient way to partially match filenames to textfile and delete accordingly?",
        "nl2bash_7990: find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces"
      ],
      "Top-3 Scripts": [
        "nl2bash_12373: find sourceDir -mindepth 1 -print0 | xargs -0 mv --target-directory=destDir",
        "ul_570707: printf '%s\\0' * | grep -zvF -e ID-LIST -f ID-LIST | xargs -0 echo",
        "nl2bash_7990: find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5504: Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.",
        "nl2bash_6404: Search the current directory recursively for text files containing at least one character",
        "ul_570707: Most efficient way to partially match filenames to textfile and delete accordingly?"
      ],
      "Top-3 Scripts": [
        "nl2bash_5504: grep -e TEXT *.log | cut -d' ' --complement -s -f1",
        "nl2bash_6404: find -type f -exec grep -Iq . {} \\; -and -print\n\n\nfind . -type f -exec grep -Iq . {} \\; -and -print",
        "ul_570707: grep -v\n\nprintf '%s\\0' * | grep -zvF -e ID-LIST -f ID-LIST | xargs -0 echo"
      ],
      "Explanations about Options": {
        "-I": "Process a binary file as if it did not contain matching data; this is equivalent to\n the --binary-files=without-match option.",
        "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing.",
        "-q": "Quiet; do not write anything to standard output. Exit immediately with zero status\n if any match is found, even if an error was detected. Also see the -s or\n --no-messages option.",
        "-d": "If an input file is a directory, use ACTION to process it. By default, ACTION is\n read, i.e., read directories just as if they were ordinary files. If ACTION is\n skip, silently skip directories. If ACTION is recurse, read all files under each\n directory, recursively, following symbolic links only if they are on the command\n line. This is equivalent to the -r option.",
        "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
        "-n": "Prefix each line of output with the 1-based line number within its input file.",
        "-F": "Interpret PATTERNS as fixed strings, not regular expressions.",
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option.",
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_570707: Most efficient way to partially match filenames to textfile and delete accordingly?",
        "nl2bash_3502: Find all files under current directory and print only the filenames (not paths)"
      ],
      "Top-3 Scripts": [
        "ul_570707: printf '%s\\0' * | grep -zvF -e ID-LIST -f ID-LIST | xargs -0 echo",
        "nl2bash_3502: find . -type f -execdir echo '{}' ';'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_12373: Move all files from the `sourceDir' directory tree to the `destDir' directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_12373: find sourceDir -mindepth 1 -exec mv \"{}\" --target-directory=destDir \\;\n\n\nfind sourceDir -mindepth 1 -print0 | xargs -0 mv --target-directory=destDir"
      ],
      "Explanations about Options": {
        "--target-directory": "move all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
      "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5504: Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string."
      ],
      "Top-3 Scripts": [
        "nl2bash_5504: grep -e TEXT *.log | cut -d' ' --complement -s -f1"
      ],
      "Explanations about Options": {
        "--complement": "complement the set of selected bytes, characters or fields",
        "-s": "do not print lines not containing delimiters"
      }
    },
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send message to \"testuser\" on terminal \"/dev/tty/5\"",
      "Most Similar TLDR Script": "write {{testuser}} {{tty/5}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5044: Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found"
      ],
      "Top-3 Scripts": [
        "nl2bash_5044: find /tmp -type f -perm -002 | awk -- '1{print \"Found world write permissions:\";print};END{if(NR==0)print \"No world writable found.\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5044: Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found"
      ],
      "Top-3 Scripts": [
        "nl2bash_5044: find /tmp -type f -perm -002 | awk -- '1{print \"Found world write permissions:\";print};END{if(NR==0)print \"No world writable found.\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5044: Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found"
      ],
      "Top-3 Scripts": [
        "nl2bash_5044: find /tmp -type f -perm -002 | awk -- '1{print \"Found world write permissions:\";print};END{if(NR==0)print \"No world writable found.\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "openssl",
      "MP Summary": "OpenSSL command line tool",
      "Most Similar TLDR Task": "Generate a 2048bit RSA private key and save it to a file",
      "Most Similar TLDR Script": "openssl genrsa -out {{filename.key}} 2048",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3504: Find all files under current directory and print their md5 sums"
      ],
      "Top-3 Scripts": [
        "nl2bash_3504: find . -type f -printf '%f ' -exec openssl dgst -md5 {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8135: look for the largest 200 files over 1,000,000 bytes in the filesystem mounted at \"/usr/pcapps\""
      ],
      "Top-3 Scripts": [
        "nl2bash_8135: find /usr/pcapps/ -mount -type f -size +1000000c | perl -lpe ' s{ }{\\\\ }g ' | xargs ls -l | sort +4nr | head -200"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8135: look for the largest 200 files over 1,000,000 bytes in the filesystem mounted at \"/usr/pcapps\""
      ],
      "Top-3 Scripts": [
        "nl2bash_8135: find /usr/pcapps/ -mount -type f -size +1000000c | perl -lpe ' s{ }{\\\\ }g ' | xargs ls -l | sort +4nr | head -200"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_570707: Most efficient way to partially match filenames to textfile and delete accordingly?"
      ],
      "Top-3 Scripts": [
        "ul_570707: printf '%s\\0' * | grep -zvF -e ID-LIST -f ID-LIST | xargs -0 echo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8135: look for the largest 200 files over 1,000,000 bytes in the filesystem mounted at \"/usr/pcapps\""
      ],
      "Top-3 Scripts": [
        "nl2bash_8135: find /usr/pcapps/ -mount -type f -size +1000000c | perl -lpe ' s{ }{\\\\ }g ' | xargs ls -l | sort +4nr | head -200"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_8135: look for the largest 200 files over 1,000,000 bytes in the filesystem mounted at \"/usr/pcapps\""
      ],
      "Top-3 Scripts": [
        "nl2bash_8135: find /usr/pcapps/ -mount -type f -size +1000000c | perl -lpe ' s{ }{\\\\ }g ' | xargs ls -l | sort +4nr | head -200"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6566: Search the directory tree given as variable $dir for regular files"
      ],
      "Top-3 Scripts": [
        "nl2bash_6566: find $dir -type f"
      ],
      "Explanations about Options": {
        "-t": "sort by modification time , newest first",
        "-p": "append / indicator to directories"
      }
    },
    {
      "Command": "dgst",
      "MP Summary": "perform digest operations",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Search the given $directory for files with permissions stored in $permissions",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find \"$directory\" -perm \"$permissions\"\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_3504: Find all files under current directory and print their md5 sums"
      ],
      "Top-3 Scripts": [
        "nl2bash_3504: find . -type f -printf '%f ' -exec openssl dgst -md5 {} \\;"
      ],
      "Explanations about Options": {}
    }
  ]
}