{
  "Query": "iptables  allow certain ips and block all other connection",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "Search the CSS files found in the current directory tree for string \"foo\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \\*.css -print0 | xargs -0 grep -nH foo\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6492: Search the current directory tree for files whose names do not end in \"1\" and \"2\"",
        "nl2bash_11062: Delete all files (files, directories, links, pipes...) named 'core' under current directory",
        "nl2bash_6324: Search the CSS files found in the current directory tree for string \"foo\""
      ],
      "Top-3 Scripts": [
        "nl2bash_6492: find . -type f ! -name \"*1\" ! -name \"*2\" -print",
        "nl2bash_11062: find . -name \"core\" -exec rm -f {} \\;",
        "nl2bash_6324: find . -name \\*.css -print0 | xargs -0 grep -nH foo"
      ],
      "Explanations about Options": {
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run multiple chained commands on the input data",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} | {{command3}}\"",
      "Most Similar NL2Bash Task": "Search the CSS files found in the current directory tree for string \"foo\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \\*.css -print0 | xargs -0 grep -nH foo\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6324: Search the CSS files found in the current directory tree for string \"foo\""
      ],
      "Top-3 Scripts": [
        "nl2bash_6324: find . -name \\*.css -print0 | xargs -0 grep -nH foo"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "Search the CSS files found in the current directory tree for string \"foo\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \\*.css -print0 | xargs -0 grep -nH foo\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_11062: Delete all files (files, directories, links, pipes...) named 'core' under current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_11062: find . -name \"core\" -exec rm -f {} \\;"
      ],
      "Explanations about Options": {
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Search the CSS files found in the current directory tree for string \"foo\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \\*.css -print0 | xargs -0 grep -nH foo\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_6324: Search the CSS files found in the current directory tree for string \"foo\""
      ],
      "Top-3 Scripts": [
        "nl2bash_6324: find . -name \\*.css -print0 | xargs -0 grep -nH foo"
      ],
      "Explanations about Options": {
        "-H": "Print the file name for each match. This is the default when there is more than\n one file to search.",
        "-n": "Prefix each line of output with the 1-based line number within its input file."
      }
    },
    {
      "Command": "info",
      "MP Summary": "read Info documents",
      "Most Similar TLDR Task": "Start reading at given menu item node from top-level directory",
      "Most Similar TLDR Script": "info {{menu_item}}",
      "Most Similar NL2Bash Task": "Search the CSS files found in the current directory tree for string \"foo\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name \\*.css -print0 | xargs -0 grep -nH foo\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18616246: IPtables : Limit number of new ssh connections per minute"
      ],
      "Top-3 Scripts": [
        "so_18616246: # SSH Anti-Bruteforce\n# Next create a limiting rule. I limit to 3 hits in 60 seconds for ssh with this\n/sbin/iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH\n/sbin/iptables -A INPUT -p tcp --dport 22 -m state --state NEW -j ssh-whitelist\n/sbin/iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 60 --hitcount 3 --rttl --name SSH -j LOG --log-level info --log-prefix \"Anti SSH-Bruteforce: \"\n/sbin/iptables -A INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 60 --hitcount 3 --rttl --name SSH -j DROP"
      ],
      "Explanations about Options": {}
    }
  ]
}