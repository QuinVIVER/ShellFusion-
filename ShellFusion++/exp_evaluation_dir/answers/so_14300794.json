{
  "Query": "How do I download a file from the internet to my linux server with Bash",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13827: Count the number of lines in every regular .rb file in the current directory tree",
        "nl2bash_7990: find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
        "nl2bash_13829: Count the number of lines recursively in the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_13827: find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;\n\n\nfind . -name \"*.rb\" -type f -print0 | xargs -0 wc -l",
        "nl2bash_7990: find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing",
        "nl2bash_13829: find ./ -type f -exec wc -l {}  \\; | cut -d' ' -f1 | paste -sd+ | bc"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13827: Count the number of lines in every regular .rb file in the current directory tree",
        "nl2bash_7990: find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
        "nl2bash_7991: find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces"
      ],
      "Top-3 Scripts": [
        "nl2bash_13827: find . -name \"*.rb\" -type f -print0 | xargs -0 wc -l",
        "nl2bash_7990: find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing",
        "nl2bash_7991: find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_7994: find files in the users home directory and for each one, ask the user to confirm to delete the file.",
        "nl2bash_7993: find files in the users home directory and for each one, ask the user to confirm to delete the file."
      ],
      "Top-3 Scripts": [
        "nl2bash_7994: find $HOME/. -name *.txt -ok rm {} \\;",
        "nl2bash_7993: find $HOME/. -name *.txt -ok rm {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13827: Count the number of lines in every regular .rb file in the current directory tree",
        "nl2bash_13829: Count the number of lines recursively in the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_13827: find . -name \"*.rb\" -type f -exec wc -l \\{\\} \\;\n\n\nfind . -name \"*.rb\" -type f -print0 | xargs -0 wc -l",
        "nl2bash_13829: find ./ -type f -exec wc -l {}  \\; | cut -d' ' -f1 | paste -sd+ | bc"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
      "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5504: Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.",
        "nl2bash_13829: Count the number of lines recursively in the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_5504: grep -e TEXT *.log | cut -d' ' --complement -s -f1",
        "nl2bash_13829: find ./ -type f -exec wc -l {}  \\; | cut -d' ' -f1 | paste -sd+ | bc"
      ],
      "Explanations about Options": {
        "--complement": "complement the set of selected bytes, characters or fields",
        "-s": "do not print lines not containing delimiters"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Search for a pattern within a file",
      "Most Similar TLDR Script": "grep {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5504: Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.",
        "nl2bash_7990: find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
        "nl2bash_7991: find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces"
      ],
      "Top-3 Scripts": [
        "nl2bash_5504: grep -e TEXT *.log | cut -d' ' --complement -s -f1",
        "nl2bash_7990: find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing",
        "nl2bash_7991: find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing"
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
      }
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Merge two files side by side, each in its column, using the specified delimiter",
      "Most Similar TLDR Script": "paste -d {{delimiter}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13829: Count the number of lines recursively in the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_13829: find ./ -type f -exec wc -l {}  \\; | cut -d' ' -f1 | paste -sd+ | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_385334: Failed to download repository information, check your internet connection"
      ],
      "Top-3 Scripts": [
        "au_385334: sudo apt-get update"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded",
      "Most Similar TLDR Script": "apt-get autoclean",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_385334: Failed to download repository information, check your internet connection"
      ],
      "Top-3 Scripts": [
        "au_385334: sudo apt-get update"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Run calculator in interactive mode using the standard math library",
      "Most Similar TLDR Script": "bc -l",
      "Most Similar NL2Bash Task": "find files in the current directory with pattern` '*.[ch]' which are contain \u2018thing\u2019 string and print file names which can contain spaces",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -name '*.[ch]' -print0 | xargs -r -0 grep -l thing\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal."
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
              "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13829: Count the number of lines recursively in the current directory"
      ],
      "Top-3 Scripts": [
        "nl2bash_13829: find ./ -type f -exec wc -l {}  \\; | cut -d' ' -f1 | paste -sd+ | bc"
      ],
      "Explanations about Options": {}
    }
  ]
}