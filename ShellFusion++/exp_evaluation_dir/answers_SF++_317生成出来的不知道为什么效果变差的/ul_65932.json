{
  "Query": "How to get the first word of a string?",
  "Answers": [
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55174122: How to get the second word of a string in shell?",
        "so_46021955: Get first line of a shell command's output",
        "so_10113283: Getting text between first occurance of two strings [Shell]"
      ],
      "Top-3 Scripts": [
        "so_55174122: x=\"ls -l DBw | head -n 1 | awk '{ print $2 }'\"\n\nx() {\n    ls -l DBw | head -n 1 | awk '{ print $2 }'\n}",
        "so_46021955: utility 2>&1 | head -n 1",
        "so_10113283: cat <yourfile> | grep \".html\" | head -n1\n\ncat <yourfile> | grep -A1 \"<url>\" | head -n2 | tail -n1\n\ncat <yourfile> | grep -o \"<url>[^<]*</url>\" | head -n1 | cut -d'>' -f2 | cut -d'<' -f1\n\ncat <yourfile> | grep -o \"<url>[^<]*</url>\" | head -n1 | sed -E -e\"s#<url>(.*)</url>#\\1#\""
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the 2nd and 10th fields of each line, using a semicolon as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{;}}' -f{{2,10}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55174122: How to get the second word of a string in shell?",
        "ul_193482: Get last part of string after hyphen",
        "so_27149772: Get first word of string with sed"
      ],
      "Top-3 Scripts": [
        "so_55174122: $ du -sh /dir\n1.3M   /dir\n$ du -sh /dir | cut -f1\n1.3M",
        "ul_193482: cut -d- -f3 <<< \"$string\"",
        "so_27149772: $ echo \"MAC evbyminsd58df\" | cut -d\" \" -f1\nMAC"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Search for an exact string",
      "Most Similar TLDR Script": "grep -F {{exact_string}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35287738: How to get only matching part of a string?",
        "ul_315880: Find the first number, then return the rest of the string",
        "so_10113283: Getting text between first occurance of two strings [Shell]"
      ],
      "Top-3 Scripts": [
        "so_35287738: grep --help\n\n$ echo 'hello world' | grep -o hello\nhello",
        "ul_315880: grep -o '[0-9].*'\n\n$ grep -o '[0-9].*' <<<'SomeText.MoreText.Whatever.1.2.3.4-branch.ext'\n1.2.3.4-branch.ext",
        "so_10113283: cat <yourfile> | grep \".html\" | head -n1\n\ncat <yourfile> | grep -A1 \"<url>\" | head -n2 | tail -n1\n\ncat <yourfile> | grep -o \"<url>[^<]*</url>\" | head -n1 | cut -d'>' -f2 | cut -d'<' -f1\n\ncat <yourfile> | grep -o \"<url>[^<]*</url>\" | head -n1 | sed -E -e\"s#<url>(.*)</url>#\\1#\""
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a text message. Note: quotes are optional",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\"",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_50260269: Why this bash function prints only first word of whole string?",
        "ul_193482: Get last part of string after hyphen",
        "so_27149772: Get first word of string with sed"
      ],
      "Top-3 Scripts": [
        "so_50260269: lbGREEN='\\e[1;92m'\nNC='\\e[0m'\nnormalMessage=\"Everything fine\"\necho_message() {\n    echo -e  ${lbGREEN}$@${NC}\n}\necho_message $normalMessage\n\nlbGREEN='\\e[1;92m'\nNC='\\e[0m'\nnormalMessage=\"Everything fine\"\necho_message() {\n    echo -e  ${lbGREEN}$1${NC}\n}\necho_message \"$normalMessage\"",
        "ul_193482: echo \"foo-bar-123\" | awk -F- '{print $NF}'\n\necho \"foo-bar-123\" | sed 's/.*-//'",
        "so_27149772: $ echo \"MAC evbyminsd58df\" | sed 's/ .*//'\nMAC\n\n$ echo \"MAC evbyminsd58df\" | cut -d\" \" -f1\nMAC\n\n$ read a _ <<< \"MAC evbyminsd58df\"\n$ echo \"$a\"\nMAC\n\n$ echo \"MAC evbyminsd58df\" | { read a _; echo \"$a\"; }\nMAC"
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print every third line starting from the first line",
      "Most Similar TLDR Script": "awk 'NR%3==1' {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_673793: Getting first word of file",
        "so_55174122: How to get the second word of a string in shell?",
        "so_5182484: grep for second word from the surrounding lines of first word"
      ],
      "Top-3 Scripts": [
        "au_673793: awk '{print $1; exit}' /some/file\n\nawk 'FNR == 1 {print $1}' /some/file #still runs the test on all lines",
        "so_55174122: x=\"ls -l DBw | head -n 1 | awk '{ print $2 }'\"\n\nx() {\n    ls -l DBw | head -n 1 | awk '{ print $2 }'\n}",
        "so_5182484: awk '/OBJECT-TYPE/ { obj= $1 } /KEY { .* }/ { print obj, $3 }' file.txt\n\nawk 'BEGIN { nl=1 } /^$/ { nl=1 }  /OBJECT-TYPE/ && nl { obj= $1; nl=0; } /KEY { .* }/ { print obj, $3 }' file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27149772: Get first word of string with sed",
        "ul_343952: How to assign one variable per word of a string"
      ],
      "Top-3 Scripts": [
        "so_27149772: $ read a _ <<< \"MAC evbyminsd58df\"\n$ echo \"$a\"\nMAC\n\n$ echo \"MAC evbyminsd58df\" | { read a _; echo \"$a\"; }\nMAC",
        "ul_343952: echo \"word1 word2 word3\" | read w1 w2 w3\nprintf '\"%s\"\\n' \"$w1\" \"$w2\" \"$w3\"\n\necho \"word1 word2 word3\" | { read w1 w2 w3 && printf '\"%s\"\\n' \"$w1\" \"$w2\" \"$w3\"; }\n\necho \"word1 word2 word3\" | {\n  read w1 w2 w3\n  printf '\"%s\"\\n' \"$w1\" \"$w2\" \"$w3\"\n}\n\nread w1 w2 w3 <<<\"word1 word2 word3\"\nprintf '\"%s\"\\n' \"$w1\" \"$w2\" \"$w3\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Map each character of the first set to the corresponding character of the second set",
      "Most Similar TLDR Script": "tr '{{abcd}}' '{{jkmn}}' < {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_39039: Get text-file word occurrence count of all words & print output sorted",
        "so_22610773: Bash string change part of words"
      ],
      "Top-3 Scripts": [
        "ul_39039: echo \"Lorem ipsum dolor sit sit amet et cetera.\" | tr '[:space:]' '[\\n*]' | grep -v \"^\\s*$\" | sort | uniq -c | sort -bnr",
        "so_22610773: $ echo \"foo.-bar\" | tr '.-' 'D_'\nfooD-bar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36252837: Get parts of string after a certain word? Shell",
        "ul_193482: Get last part of string after hyphen",
        "so_27149772: Get first word of string with sed"
      ],
      "Top-3 Scripts": [
        "so_36252837: sed 's#.*/\\(f2/\\)#\\1#' <<<\"$var\"\n\nsed -E 's#.*/(f2/)#\\1#' <<<\"$var\"\n\nprintf '%s\\n' \"$var\" | sed ...\n\nname='f2'\nsed 's#.*/\\('\"$name\"'/\\)#\\1#' <<<\"$var\"",
        "ul_193482: echo \"foo-bar-123\" | sed 's/.*-//'",
        "so_27149772: $ echo \"MAC evbyminsd58df\" | sed 's/ .*//'\nMAC"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36252837: Get parts of string after a certain word? Shell",
        "ul_193482: Get last part of string after hyphen",
        "so_47963382: Getting first index of array"
      ],
      "Top-3 Scripts": [
        "so_36252837: printf '%s\\n' \"$var\" | sed ...",
        "ul_193482: string=\"foo-bar-123\" && printf \"%s\\n\" \"${string##*-}\"\n123",
        "so_47963382: put_first_index_in () {\n    printf -v \"${1?}\" \"%s\" \"${2?}\"\n}\n\nput_first_index_in first_index \"${!arr[@]}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Number all output lines",
      "Most Similar TLDR Script": "cat -n {{file}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10113283: Getting text between first occurance of two strings [Shell]",
        "so_32790285: linux sed script to make first letter of each word uppercase"
      ],
      "Top-3 Scripts": [
        "so_10113283: cat <yourfile> | grep \".html\" | head -n1\n\ncat <yourfile> | grep -A1 \"<url>\" | head -n2 | tail -n1\n\ncat <yourfile> | grep -o \"<url>[^<]*</url>\" | head -n1 | cut -d'>' -f2 | cut -d'<' -f1\n\ncat <yourfile> | grep -o \"<url>[^<]*</url>\" | head -n1 | sed -E -e\"s#<url>(.*)</url>#\\1#\"",
        "so_32790285: kent$  cat f\nmolly w. bolt 334-78-5443\nwalter q. bugg 984-49-0032\nnoah p. way 887-12-0921\n\nkent$  sed 's/\\b./\\u&/g' f\nMolly W. Bolt 334-78-5443\nWalter Q. Bugg 984-49-0032\nNoah P. Way 887-12-0921"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Start interactive command line interpreter",
      "Most Similar TLDR Script": "zsh",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36252837: Get parts of string after a certain word? Shell",
        "so_47963382: Getting first index of array"
      ],
      "Top-3 Scripts": [
        "so_36252837: ",
        "so_47963382: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, stopping at the first error",
      "Most Similar TLDR Script": "bash -e {{file.sh}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36252837: Get parts of string after a certain word? Shell",
        "ul_343952: How to assign one variable per word of a string",
        "so_51436874: How to get the value of last word in 1st row from command output"
      ],
      "Top-3 Scripts": [
        "so_36252837: ",
        "ul_343952: ",
        "so_51436874: echo ${a[-1]}         # assumes a recent version of bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_673793: Getting first word of file",
        "so_56147516: How can I get words between the first two instance of text/pattern?",
        "so_15331259: Use awk to find first occurrence only of string after a delimiter"
      ],
      "Top-3 Scripts": [
        "au_673793: awk '{print $1; exit}' /some/file\n\nawk 'FNR == 1 {print $1}' /some/file #still runs the test on all lines",
        "so_56147516: $ awk '/^=+$/{f=!f;if(f==1)next;else if(f==0)exit}f' file\nv2.0.0\n\nAdded feature 3\nAdded feature 4\n\n$ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print",
        "so_15331259: awk -F: '$1==\"Account number\"{print $2;exit;}' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' lines in file",
      "Most Similar TLDR Script": "tail -n {{num}} {{file}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10113283: Getting text between first occurance of two strings [Shell]"
      ],
      "Top-3 Scripts": [
        "so_10113283: cat <yourfile> | grep -A1 \"<url>\" | head -n2 | tail -n1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?",
        "so_15331259: Use awk to find first occurrence only of string after a delimiter",
        "so_44220931: Use awk to match a word, then find the first occurrence of another word"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print",
        "so_15331259: ",
        "so_44220931: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files one per line",
      "Most Similar TLDR Script": "ls -1",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55174122: How to get the second word of a string in shell?",
        "au_989033: Why does `read -r` still only get the first word of each line?",
        "so_27490379: how to remove first two words of a strings output"
      ],
      "Top-3 Scripts": [
        "so_55174122: x() {\n    ls -l DBw | head -n 1 | awk '{ print $2 }'\n}",
        "au_989033: $ ls\nfile1  file2  file3",
        "so_27490379: "
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display each line once",
      "Most Similar TLDR Script": "sort {{file}} | uniq",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_39039: Get text-file word occurrence count of all words & print output sorted"
      ],
      "Top-3 Scripts": [
        "ul_39039: echo \"Lorem ipsum dolor sit sit amet et cetera.\" | tr '[:space:]' '[\\n*]' | grep -v \"^\\s*$\" | sort | uniq -c | sort -bnr"
      ],
      "Explanations about Options": {
        "-c": "prefix lines by the number of occurrences"
      }
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_673793: Getting first word of file"
      ],
      "Top-3 Scripts": [
        "au_673793: awk 'FNR == 1 {print $1}' /some/file #still runs the test on all lines"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_989033: Why does `read -r` still only get the first word of each line?"
      ],
      "Top-3 Scripts": [
        "au_989033: PrintInfo $line\n\n$line\n\n$ line=\"one two three\"\n$ PrintInfo $line\n1=one 2=two 3=three\n\n$ line='file?'\n$ PrintInfo $line\n1=file1 2=file2 3=file3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nl",
      "MP Summary": "number lines of files",
      "Most Similar TLDR Task": "Number non-blank lines in a file",
      "Most Similar TLDR Script": "nl {{file}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5182484: grep for second word from the surrounding lines of first word"
      ],
      "Top-3 Scripts": [
        "so_5182484: awk 'BEGIN { nl=1 } /^$/ { nl=1 }  /OBJECT-TYPE/ && nl { obj= $1; nl=0; } /KEY { .* }/ { print obj, $3 }' file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort the passwd file by the 3rd field, numerically",
      "Most Similar TLDR Script": "sort -t: -k 3n /etc/passwd",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_39039: Get text-file word occurrence count of all words & print output sorted"
      ],
      "Top-3 Scripts": [
        "ul_39039: echo \"Lorem ipsum dolor sit sit amet et cetera.\" | tr '[:space:]' '[\\n*]' | grep -v \"^\\s*$\" | sort | uniq -c | sort -bnr\n\nsort -bnr"
      ],
      "Explanations about Options": {
        "-r": "reverse the result of comparisons",
        "-b": "ignore leading blanks",
        "-n": "compare according to string numerical value"
      }
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display the current date as a Unix timestamp (seconds since the Unix epoch)",
      "Most Similar TLDR Script": "date +%s",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_239960: Get the first column of date linux"
      ],
      "Top-3 Scripts": [
        "ul_239960: $ date +%a\nSat\n\nman 1 date"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Search for manpages containing a search string",
      "Most Similar TLDR Script": "man -k \"{{search string}}\"",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_239960: Get the first column of date linux",
        "so_51436874: How to get the value of last word in 1st row from command output"
      ],
      "Top-3 Scripts": [
        "ul_239960: man 1 date",
        "so_51436874: man dup2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "List the human-readable size of all .jpg files in subdirectories of the current directory, and show a cumulative total at the end",
      "Most Similar TLDR Script": "du -ch */*.jpg",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55174122: How to get the second word of a string in shell?",
        "so_66310642: how to grep only the first word of the output"
      ],
      "Top-3 Scripts": [
        "so_55174122: $ du -sh /dir\n1.3M   /dir\n$ du -sh /dir | cut -f1\n1.3M",
        "so_66310642: [ /Downloads - 11:34 AM ]$ du -s /Users/test_user\n80839384    /Users/test_user\n[ /Downloads - 11:34 AM ]$ du -s /Users/test_user | awk '{print $1}'\n80839384\n[ /Downloads - 11:34 AM ]$"
      ],
      "Explanations about Options": {
        "-h": "print sizes in human readable format (e.g., 1K 234M 2G)",
        "-s": "display only a total for each argument"
      }
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a regular expression on `stdin`, printing out the first capture group for each line",
      "Most Similar TLDR Script": "cat {{path/to/input_file}} | perl -nle 'if (/.*({{foo}}).*/) {print \"$1\"; last;}'",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_120706: How to switch the first letters of two words?"
      ],
      "Top-3 Scripts": [
        "ul_120706: perl -pe 's/(\\S)(\\S+\\s+)(\\S)/$3$2$1/'\n\n$ echo 'one two' | perl -pe 's/(\\S)(\\S+\\s+)(\\S)/$3$2$1/'\ntne owo\n$ echo 'one two' | perl -pe 's/(\\S)(\\S+\\s+)(\\S)/$3$2$1/'\ntne owo\n$ echo 'foo bar' | perl -pe 's/(\\S)(\\S+\\s+)(\\S)/$3$2$1/'\nboo far\n$ echo '   one     two' | perl -pe 's/(\\S)(\\S+\\s+)(\\S)/$3$2$1/'\n   tne     owo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from `stdin`",
      "Most Similar TLDR Script": "sh -s",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17542892: How to get the last character of a string in a shell?"
      ],
      "Top-3 Scripts": [
        "so_17542892: sh lash_ch.sh 'abcde*'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "alias",
      "MP Summary": "define or display aliases",
      "Most Similar TLDR Task": "Turn `rm` into an interactive command",
      "Most Similar TLDR Script": "alias {{rm}}=\"{{rm -i}}\"",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_563723: Print first word of the output"
      ],
      "Top-3 Scripts": [
        "ul_563723: alias upgradable='apt list --upgradable | cut -d'/' -f1\n\nalias upgradable=\"apt list --upgradable | awk -F'/' '{print \\$1}'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "who",
      "MP Summary": "show who is logged on",
      "Most Similar TLDR Task": "Display the username, line, and time of all currently logged-in sessions",
      "Most Similar TLDR Script": "who",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43167317: How to get the first element of a string split with space"
      ],
      "Top-3 Scripts": [
        "so_43167317: myUser=$(who am i)\nprintf \"%s\\n\" \"${myUser%% *}\"\nuser4035\n\nwho am i | awk '{print $1}'\nuser4035\n\nmyUser=$(who am i | awk '{print $1}')\nprintf \"%s\\n\" \"$myUser\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xrandr",
      "MP Summary": "primitive command line interface to RandR extension",
      "Most Similar TLDR Task": "Disable disconnected outputs and enable connected ones with default settings",
      "Most Similar TLDR Script": "xrandr --auto",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44220931: Use awk to match a word, then find the first occurrence of another word"
      ],
      "Top-3 Scripts": [
        "so_44220931: xrandr --verbose | awk '/LVDS-1/{f=1}/Brightness:/ && f{print $2; exit}'"
      ],
      "Explanations about Options": {
        "--verbose": "Causes xrandr to be more verbose. When used with -q (or without other options),\n xrandr will display more information about the server state. Please note that the\n gamma and brightness informations are only approximations of the complete color\n profile stored in the server. When used along with options that reconfigure the\n system, progress will be reported while executing the configuration changes."
      }
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in seconds",
      "Most Similar TLDR Script": "sleep {{seconds}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55174122: How to get the second word of a string in shell?"
      ],
      "Top-3 Scripts": [
        "so_55174122: while sleep 1; do\n    x\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Repeat the last command prefixed with \"sudo\" (only in bash, zsh, etc.)",
      "Most Similar TLDR Script": "sudo !!",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43167317: How to get the first element of a string split with space"
      ],
      "Top-3 Scripts": [
        "so_43167317: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Open an `at` prompt to create a new set of scheduled commands, press `Ctrl + D` to save and exit",
      "Most Similar TLDR Script": "at {{hh:mm}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hello",
      "MP Summary": "friendly greeting program",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "hello --greeting=\"{{greeting_text}}\"",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35287738: How to get only matching part of a string?",
        "so_34798963: Extract the two first words of a string in bash"
      ],
      "Top-3 Scripts": [
        "so_35287738: $ echo 'hello world' | grep -o hello\nhello",
        "so_34798963: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_673793: Getting first word of file",
        "so_55174122: How to get the second word of a string in shell?",
        "so_5182484: grep for second word from the surrounding lines of first word"
      ],
      "Top-3 Scripts": [
        "au_673793: awk '{print $1; exit}' /some/file\n\nawk 'FNR == 1 {print $1}' /some/file #still runs the test on all lines",
        "so_55174122: x=\"ls -l DBw | head -n 1 | awk '{ print $2 }'\"\n\nx() {\n    ls -l DBw | head -n 1 | awk '{ print $2 }'\n}",
        "so_5182484: awk '/OBJECT-TYPE/ { obj= $1 } /KEY { .* }/ { print obj, $3 }' file.txt\n\nawk 'BEGIN { nl=1 } /^$/ { nl=1 }  /OBJECT-TYPE/ && nl { obj= $1; nl=0; } /KEY { .* }/ { print obj, $3 }' file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55174122: How to get the second word of a string in shell?"
      ],
      "Top-3 Scripts": [
        "so_55174122: $ du -sh /dir\n1.3M   /dir\n$ du -sh /dir | cut -f1\n1.3M"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_989033: Why does `read -r` still only get the first word of each line?"
      ],
      "Top-3 Scripts": [
        "au_989033: $ ls\nfile1  file2  file3\n\n$ line='file?'\n$ PrintInfo $line\n1=file1 2=file2 3=file3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "flag",
      "MP Summary": "command language",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?",
        "so_60703210: How to Print All line between matching first occurrence of word?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print",
        "so_60703210: awk '/ABC/{flag=1} flag && !count;/EFG/{count++}' Input_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "its",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "first",
      "MP Summary": "Yagi-Uda project quick antenna builder",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "next",
      "MP Summary": "show the next nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "record",
      "MP Summary": "records *.wav files",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56147516: How can I get words between the first two instance of text/pattern?",
        "so_31321661: Postie only sends first word of message"
      ],
      "Top-3 Scripts": [
        "so_56147516: $ awk '/^=+$/ {     # at ===...\n    f=!f            # flag state is flipped\n    if(f==1)        # if its one (first ===...)\n        next        # next record\n    else if(f==0)   # if zero (second ===...)\n        exit        # nothing more to do yeah\n}\nf' file             # print",
        "so_31321661: send-mailmessage -from \"User01 <user01@example.com>\" -to \"User02 <user02@example.com>\", \"User03 <user03@example.com>\" -subject \"Sending the Attachment\" -body \"Forgot to send the attachment. Sending now.\" -Attachments \"data.csv\" -priority High -dno onSuccess, onFailure -smtpServer smtp.fabrikam.com"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "prefix",
      "MP Summary": "Script  that  allows  you  to  reconfigure  environment  variables for multiple installations of a set of software installed on the same machine",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47963382: Getting first index of array"
      ],
      "Top-3 Scripts": [
        "so_47963382: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47963382: Getting first index of array"
      ],
      "Top-3 Scripts": [
        "so_47963382: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "send",
      "MP Summary": "send an nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31321661: Postie only sends first word of message"
      ],
      "Top-3 Scripts": [
        "so_31321661: send-mailmessage -from \"User01 <user01@example.com>\" -to \"User02 <user02@example.com>\", \"User03 <user03@example.com>\" -subject \"Sending the Attachment\" -body \"Forgot to send the attachment. Sending now.\" -Attachments \"data.csv\" -priority High -dno onSuccess, onFailure -smtpServer smtp.fabrikam.com"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "list",
      "MP Summary": "list algorithms and features",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_563723: Print first word of the output"
      ],
      "Top-3 Scripts": [
        "ul_563723: alias upgradable='apt list --upgradable | cut -d'/' -f1\n\nalias upgradable=\"apt list --upgradable | awk -F'/' '{print \\$1}'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "field",
      "MP Summary": "plot a field (rheolef-7.1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27490379: how to remove first two words of a strings output"
      ],
      "Top-3 Scripts": [
        "so_27490379: for servers in /data/field/*; do\n    string=$(cut -d\" \"  -f3- /data/field/$servers/time)\n    echo \"$string\"\ndone\n\ndata/field/*"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bolt",
      "MP Summary": "Efficient large cohorts genome-wide Bayesian mixed-model association testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32790285: linux sed script to make first letter of each word uppercase"
      ],
      "Top-3 Scripts": [
        "so_32790285: kent$  cat f\nmolly w. bolt 334-78-5443\nwalter q. bugg 984-49-0032\nnoah p. way 887-12-0921\n\nkent$  sed 's/\\b./\\u&/g' f\nMolly W. Bolt 334-78-5443\nWalter Q. Bugg 984-49-0032\nNoah P. Way 887-12-0921"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ksh93",
      "MP Summary": "KornShell, a standard/restricted command and programming language",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "egrep -w -R \"word-1|word-2\u201d directory-path\n",
          "command-options": {
            "egrep": {
              "mpsum": "print lines that match patterns",
              "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
              "-R": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r."
            }
          },
          "TLDR_inform": {
            "egrep": {
              "man1_egrep_13356": "",
              "man1_egrep_29281": "",
              "man1_egrep_8522": "",
              "man1_egrep_9973": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_343952: How to assign one variable per word of a string"
      ],
      "Top-3 Scripts": [
        "ul_343952: "
      ],
      "Explanations about Options": {}
    }
  ]
}