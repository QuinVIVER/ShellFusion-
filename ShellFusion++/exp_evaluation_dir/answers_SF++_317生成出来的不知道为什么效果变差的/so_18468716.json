{
  "Query": "How to grep, excluding some patterns?",
  "Answers": [
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_114607: grep to ignore patterns",
        "so_24837635: grep excluding file name pattern",
        "so_25781642: How to search for a pattern using grep and exclude another pattern"
      ],
      "Top-3 Scripts": [
        "ul_114607: $ grep -v \"<a href=.*title=.*NOTNEEDED\" sample.txt \n<a href=\"http://website1.com\" title=\"something\">\n<a href=\"http://website1.com\" information=\"something\" title=\"something\">\n<a href=\"http://website2.com\" title=\"some_other_thing\">\n<a href=\"http://website2.com\" information=\"something\" title=\"something\">\n\n$ curl www.example.com | grep -v \"<a href=.*title=\" | grep -v NOTNEEDED > new.txt",
        "so_24837635: grep -r --exclude=\"*.cmd\"  \"ckim\" ./",
        "so_25781642: grep -P 'http://\\S*tt(?!p:)' file\n\ngrep -cP 'http://\\S*tt(?!p:)' file\n\ngrep -P '(<=http://)?\\S*tt(?!p:)' file\n\ngrep -oP '.*?\\K(http:/)?/\\S*tt(?!p:)\\S*' file\n\ngrep -oP '.*?\\Khttp://\\S*tt(?!p:)\\S*' file\n\nhttp://example.com/redirect?http://some/anyttany.html\nhttp://example.com/http.html\nhttp://example.com/tt.html\nhttp://example.com/somett.html\nhttp://example.com/somettsome.html"
      ],
      "Explanations about Options": {
        "--exclude": "Skip any command-line file with a name suffix that matches the pattern GLOB, using\n wildcard matching; a name suffix is either the whole name, or a trailing part that\n starts with a non-slash character immediately after a slash (/) in the name. When\n searching recursively, skip any subfile whose base name matches GLOB; the base name\n is the part after the last slash. A pattern can use *, ?, and [...] as wildcards,\n and \\ to quote a wildcard or backslash character literally.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option.",
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_61366: grep only subdirectories matching pattern",
        "so_60841285: Make grep not to change pattern",
        "so_17424446: Grep variable pattern match"
      ],
      "Top-3 Scripts": [
        "ul_61366: find /{foo,fooLib,fooHandler,fooGizmo} -type f -exec grep -l \"test\" {} \\;\n\nfind /foo* -type f -exec grep -l \"test\" {} \\;",
        "so_60841285: file $(find /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\n\" | sort -t$'\\t' -k1,1nr | cut -f2)\n\nfind /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\0\" | sort -zt$'\\t' -k1,1nr | cut -zf2- | xargs -0 file\n\nfind /usr/bin -name \"*zip*\" -exec file '{}' +",
        "so_17424446: SOMETHING=$(awk '/^ something/{print substr($4, 1, 3);}' somefile.conf)\nif [ \"$SOMETHING\" = \"123\" ]; then\n    echo \"Found 123\"\nelse\n    echo \"Cannot find 123\" && exit 1  \nfi"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_267018: grep the specific date patterns",
        "ul_365320: How do I grep and sort using this specific pattern?",
        "so_17424446: Grep variable pattern match"
      ],
      "Top-3 Scripts": [
        "su_267018: awk -F - '\"2011/03/25\" < $1 && $1 <= \"2011/04/04\"' filename\n\nd1=\"2011/03/25\" # or whatever commands to set this date\nd2=\"2011/04/04\" # or whatever commands to set this date\nawk -v start=$d1 -v end=$d2 -F - 'start < $1 && $1 <= end' filename",
        "ul_365320: ",
        "so_17424446: SOMETHING=$(awk '/^ something/{print substr($4, 1, 3);}' somefile.conf)\nif [ \"$SOMETHING\" = \"123\" ]; then\n    echo \"Found 123\"\nelse\n    echo \"Cannot find 123\" && exit 1  \nfi\n\nSOMETHING=$(awk -F \".\" '/^ something/{split($1, a, \" \"); print a[2]}' somefile.conf)"
      ],
      "Explanations about Options": {
        "-v": "FS=sepstring"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51743995: grep to exclude pattern and exclude 2 preceding lines",
        "so_59139098: grep return line but exclude pattern",
        "so_47044186: Bash: sed/grep between patterns (including only first pattern)"
      ],
      "Top-3 Scripts": [
        "so_51743995: GNU sed\n\nsed -E 'N;N; /[acgt]{3}cc[acgt][acgt]{3}/d' ip.txt",
        "so_59139098: ls *.jar | sed -E -e 's/^(.*)-+([0-9])(\\.[0-9]+)*.jar$/\\1/'",
        "so_47044186: sed 's/[[:space:]]\\([A-Z]:\\)/\\n\\1/g' input.txt"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed",
        "-E": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_365320: How do I grep and sort using this specific pattern?",
        "so_60841285: Make grep not to change pattern"
      ],
      "Top-3 Scripts": [
        "ul_365320: ",
        "so_60841285: file $(find /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\n\" | sort -t$'\\t' -k1,1nr | cut -f2)\n\nfind /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\0\" | sort -zt$'\\t' -k1,1nr | cut -zf2- | xargs -0 file"
      ],
      "Explanations about Options": {
        "-z": "line delimiter is NUL, not newline",
        "-t": "use SEP instead of non-blank to blank transition"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_460859: grep sentence between (and including) two patterns",
        "so_17424446: Grep variable pattern match"
      ],
      "Top-3 Scripts": [
        "ul_460859: #!/bin/bash\ndata=\"\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7https://www.instagram.com/p/BRhNDg5jne7/\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\"\necho \"$data\" | grep -o 'https://www.instagram.com/p/[^/]\\+/'",
        "so_17424446: SOMETHING=$(awk '/^ something/{print substr($4, 1, 3);}' somefile.conf)\nif [ \"$SOMETHING\" = \"123\" ]; then\n    echo \"Found 123\"\nelse\n    echo \"Cannot find 123\" && exit 1  \nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "locate",
      "MP Summary": "list files in databases that match a pattern",
      "Most Similar TLDR Task": "Look for a file by its exact filename (a pattern containing no globbing characters is interpreted as `*pattern*`)",
      "Most Similar TLDR Script": "locate */{{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6028144: Locate patterns"
      ],
      "Top-3 Scripts": [
        "so_6028144: locate -r '[a-z]\\{10,15\\}.*html'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52761146: bash to capture specific instance of pattern and exclude others",
        "so_28021351: Sed. remove multiline patterns. RegExp",
        "so_61904917: PowerShell Tail file but ignore lines matching pattern"
      ],
      "Top-3 Scripts": [
        "so_52761146: while read -r line; do\n    [[ $line =~ del && ! $line =~ ins ]] && printf '%s\\n' \"$line\"\ndone < file",
        "so_28021351: /^@H/ {     # if the current line begins with @H\n  N         # fetch the next one, append it.\n  /\\n+$/ {  # if the combined pattern has \\n+ at the end (that is, if the new \n            # line is \"+\")\n    N       # fetch another line\n    d       # and discard the lot.\n  }\n}",
        "so_61904917: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59139098: grep return line but exclude pattern",
        "so_52761146: bash to capture specific instance of pattern and exclude others",
        "ul_649198: grep multiple patterns when the variable has multiple strings"
      ],
      "Top-3 Scripts": [
        "so_59139098: shopt -s extglob\nfor file in *.jar ; do\n    printf '%s\\n' \"${file%%-+([0-9.]).jar}\"\ndone\n\nfor file in *.jar ; do\n   [[ \"$file\" =~ ^(.*)-+([0-9])(\\.[0-9]+)*.jar$ ]] && printf '%s\\n' \"${BASH_REMATCH[1]}\"\ndone",
        "so_52761146: while read -r line; do\n    [[ $line =~ del && ! $line =~ ins ]] && printf '%s\\n' \"$line\"\ndone < file",
        "ul_649198: words=(hello world foo bar)\ngrep -F -f <(printf \"%s\\n\" \"${words[@]}\") text.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38234651: Grep Multiple words using a pattern"
      ],
      "Top-3 Scripts": [
        "so_38234651: $ grep -oP '(?<= - ).*(?=] \"GET /identity/ HTTP/1\\.1)' access.log | tr -d '['\nBMC1 06/Jul/2016:07:34:17 -0700\nRMC1 06/Jul/2016:07:34:18 -0700\nRMC1 06/Jul/2016:07:34:24 -0700"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59139098: grep return line but exclude pattern",
        "so_44076797: grep -v excludes a file it should not exclude",
        "ul_116115: Grep files excluding few files names"
      ],
      "Top-3 Scripts": [
        "so_59139098: ls *.jar | sed -E -e 's/^(.*)-+([0-9])(\\.[0-9]+)*.jar$/\\1/'",
        "so_44076797: shopt -s extglob\nls -1 !(*.c)",
        "ul_116115: ls AP_201401{15..31}.gz"
      ],
      "Explanations about Options": {
        "-1": "list one file per line. Avoid '\\n' with -q or -b"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60841285: Make grep not to change pattern"
      ],
      "Top-3 Scripts": [
        "so_60841285: find /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\0\" | sort -zt$'\\t' -k1,1nr | cut -zf2- | xargs -0 file"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49521913: Exclude subdirectories"
      ],
      "Top-3 Scripts": [
        "so_49521913: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60841285: Make grep not to change pattern"
      ],
      "Top-3 Scripts": [
        "so_60841285: file $(find /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\n\" | sort -t$'\\t' -k1,1nr | cut -f2)\n\nfind /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\0\" | sort -zt$'\\t' -k1,1nr | cut -zf2- | xargs -0 file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52761146: bash to capture specific instance of pattern and exclude others"
      ],
      "Top-3 Scripts": [
        "so_52761146: while read -r line; do\n    [[ $line =~ del && ! $line =~ ins ]] && printf '%s\\n' \"$line\"\ndone < file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_267018: grep the specific date patterns"
      ],
      "Top-3 Scripts": [
        "su_267018: d1=\"2011/03/25\" # or whatever commands to set this date\nd2=\"2011/04/04\" # or whatever commands to set this date\nawk -v start=$d1 -v end=$d2 -F - 'start < $1 && $1 <= end' filename"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37561162: Shell globbing exclude directory patterns"
      ],
      "Top-3 Scripts": [
        "so_37561162: $ GLOBIGNORE='**/assets/**:assets/**:**/assets'\n$ ls -1 **/*.js\na/a2/a2.js\nb/b1/b1-2/b1-2-3/test/test2/test3/test4/test4.js\nb/b1/b1-2/b1-2-3/test/test.js\nb/b.js\nc/c.js\nx.js"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl statement",
      "Most Similar TLDR Script": "perl -e {{perl_statement}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20068802: Grep search a multiline string pattern linux"
      ],
      "Top-3 Scripts": [
        "so_20068802: perl -i -lne 'if(/^\\s*Static Temperature/ && $f==1){s/16/17/g;};\n              if(/^\\s*Normal Speed =/ && $f==1){s/4\\.8/3.8/g;$f=0};\n              $f=1 if(/BOUNDARY: CRAC3OUT/);\n              print $_' your_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern",
        "so_59139098: grep return line but exclude pattern",
        "so_52761146: bash to capture specific instance of pattern and exclude others"
      ],
      "Top-3 Scripts": [
        "so_25781642: grep -P 'http://\\S*tt(?!p:)' file\n\ngrep -cP 'http://\\S*tt(?!p:)' file\n\ngrep -P '(<=http://)?\\S*tt(?!p:)' file\n\ngrep -oP '.*?\\K(http:/)?/\\S*tt(?!p:)\\S*' file\n\ngrep -oP '.*?\\Khttp://\\S*tt(?!p:)\\S*' file\n\nhttp://example.com/redirect?http://some/anyttany.html\nhttp://example.com/http.html\nhttp://example.com/tt.html\nhttp://example.com/somett.html\nhttp://example.com/somettsome.html",
        "so_59139098: shopt -s extglob\nfor file in *.jar ; do\n    printf '%s\\n' \"${file%%-+([0-9.]).jar}\"\ndone\n\nfor file in *.jar ; do\n   [[ \"$file\" =~ ^(.*)-+([0-9])(\\.[0-9]+)*.jar$ ]] && printf '%s\\n' \"${BASH_REMATCH[1]}\"\ndone",
        "so_52761146: while read -r line; do\n    [[ $line =~ del && ! $line =~ ins ]] && printf '%s\\n' \"$line\"\ndone < file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Package and compress multiple directories and files",
      "Most Similar TLDR Script": "zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60841285: Make grep not to change pattern"
      ],
      "Top-3 Scripts": [
        "so_60841285: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17424446: Grep variable pattern match",
        "ul_96480: With grep, how can I match a pattern and invert match another pattern?"
      ],
      "Top-3 Scripts": [
        "so_17424446: SOMETHING=$(awk '/^ something/{print substr($4, 1, 3);}' somefile.conf)\nif [ \"$SOMETHING\" = \"123\" ]; then\n    echo \"Found 123\"\nelse\n    echo \"Cannot find 123\" && exit 1  \nfi",
        "ul_96480: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_267018: grep the specific date patterns"
      ],
      "Top-3 Scripts": [
        "su_267018: d1=\"2011/03/25\" # or whatever commands to set this date\nd2=\"2011/04/04\" # or whatever commands to set this date\nawk -v start=$d1 -v end=$d2 -F - 'start < $1 && $1 <= end' filename"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Change file extensions",
      "Most Similar TLDR Script": "rename {{.ext}} {{.bak}} {{*.ext}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_699711: Rename multiple files, exclude pattern"
      ],
      "Top-3 Scripts": [
        "su_699711: rename 's/Versailles - //' *\n\nrename 's/.*- //' *"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_273164: grep --exclude does not exclude my file"
      ],
      "Top-3 Scripts": [
        "ul_273164: --exclude=GLOB\n          Skip   files  whose  base  name  matches  GLOB  (using  wildcard\n          matching).  A file-name  glob  can  use  *,  ?,  and  [...]   as\n          wildcards,  and  \\  to  quote  a wildcard or backslash character\n          literally."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_699711: Rename multiple files, exclude pattern"
      ],
      "Top-3 Scripts": [
        "su_699711: for f in *; do mv -- \"$f\" \"${f#*- }\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_365320: How do I grep and sort using this specific pattern?",
        "so_17424446: Grep variable pattern match",
        "so_20068802: Grep search a multiline string pattern linux"
      ],
      "Top-3 Scripts": [
        "ul_365320: ",
        "so_17424446: SOMETHING=$(awk '/^ something/{print substr($4, 1, 3);}' somefile.conf)\nif [ \"$SOMETHING\" = \"123\" ]; then\n    echo \"Found 123\"\nelse\n    echo \"Cannot find 123\" && exit 1  \nfi\n\nSOMETHING=$(awk -F \".\" '/^ something/{split($1, a, \" \"); print a[2]}' somefile.conf)",
        "so_20068802: perl -i -lne 'if(/^\\s*Static Temperature/ && $f==1){s/16/17/g;};\n              if(/^\\s*Normal Speed =/ && $f==1){s/4\\.8/3.8/g;$f=0};\n              $f=1 if(/BOUNDARY: CRAC3OUT/);\n              print $_' your_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17424446: Grep variable pattern match"
      ],
      "Top-3 Scripts": [
        "so_17424446: SOMETHING=$(awk -F \".\" '/^ something/{split($1, a, \" \"); print a[2]}' somefile.conf)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51178976: grepping output of ps, exclude the word grep"
      ],
      "Top-3 Scripts": [
        "so_51178976: ps -A -f | grep \"[s]leep 1234\""
      ],
      "Explanations about Options": {
        "-f": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm.",
        "-A": "Select all processes. Identical to -e."
      }
    },
    {
      "Command": "most",
      "MP Summary": "browse or page through a text file",
      "Most Similar TLDR Task": "Open a file at the first occurrence of \"string\"",
      "Most Similar TLDR Script": "most {{file}} +/{{string}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern"
      ],
      "Top-3 Scripts": [
        "so_25781642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "see",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "See action can be used to view any file (usually image) on default mailcap explorer",
      "Most Similar TLDR Script": "see {{filename}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern",
        "ul_17175: Pattern Matching Exclude Duplicate Characters"
      ],
      "Top-3 Scripts": [
        "so_25781642: ",
        "ul_17175: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hello",
      "MP Summary": "friendly greeting program",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "hello --greeting=\"{{greeting_text}}\"",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_649198: grep multiple patterns when the variable has multiple strings",
        "so_33506228: Grep every word from a file starting a pattern"
      ],
      "Top-3 Scripts": [
        "ul_649198: words=(hello world foo bar)\ngrep -F -f <(printf \"%s\\n\" \"${words[@]}\") text.txt",
        "so_33506228: grep -o \"/funny/hello/there/[^'\\\"[:blank:]]*\" page.html"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51178976: grepping output of ps, exclude the word grep"
      ],
      "Top-3 Scripts": [
        "so_51178976: sleep 1234"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern"
      ],
      "Top-3 Scripts": [
        "so_25781642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28021351: Sed. remove multiline patterns. RegExp"
      ],
      "Top-3 Scripts": [
        "so_28021351: /^@H/ {     # if the current line begins with @H\n  N         # fetch the next one, append it.\n  /\\n+$/ {  # if the combined pattern has \\n+ at the end (that is, if the new \n            # line is \"+\")\n    N       # fetch another line\n    d       # and discard the lot.\n  }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send data in JSON format, specifying the appropriate content-type header",
      "Most Similar TLDR Script": "curl -d {{'{\"name\":\"bob\"}'}} -H {{'Content-Type: application/json'}} {{http://example.com/users/1234}}",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_114607: grep to ignore patterns"
      ],
      "Top-3 Scripts": [
        "ul_114607: $ curl www.example.com | grep -v \"<a href=.*title=\" | grep -v NOTNEEDED > new.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern",
        "ul_273164: grep --exclude does not exclude my file",
        "so_28021351: Sed. remove multiline patterns. RegExp"
      ],
      "Top-3 Scripts": [
        "so_25781642: ",
        "ul_273164: --exclude=GLOB\n          Skip   files  whose  base  name  matches  GLOB  (using  wildcard\n          matching).  A file-name  glob  can  use  *,  ?,  and  [...]   as\n          wildcards,  and  \\  to  quote  a wildcard or backslash character\n          literally.",
        "so_28021351: /^@H/ {     # if the current line begins with @H\n  N         # fetch the next one, append it.\n  /\\n+$/ {  # if the combined pattern has \\n+ at the end (that is, if the new \n            # line is \"+\")\n    N       # fetch another line\n    d       # and discard the lot.\n  }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern",
        "su_267018: grep the specific date patterns",
        "ul_273164: grep --exclude does not exclude my file"
      ],
      "Top-3 Scripts": [
        "so_25781642: ",
        "su_267018: d1=\"2011/03/25\" # or whatever commands to set this date\nd2=\"2011/04/04\" # or whatever commands to set this date\nawk -v start=$d1 -v end=$d2 -F - 'start < $1 && $1 <= end' filename",
        "ul_273164: --exclude=GLOB\n          Skip   files  whose  base  name  matches  GLOB  (using  wildcard\n          matching).  A file-name  glob  can  use  *,  ?,  and  [...]   as\n          wildcards,  and  \\  to  quote  a wildcard or backslash character\n          literally."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "times",
      "MP Summary": "write process times",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern"
      ],
      "Top-3 Scripts": [
        "so_25781642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tt",
      "MP Summary": "Compile a treetop grammar file to ruby source code",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern"
      ],
      "Top-3 Scripts": [
        "so_25781642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "look",
      "MP Summary": "find lines in a sorted list",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern"
      ],
      "Top-3 Scripts": [
        "so_25781642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25781642: How to search for a pattern using grep and exclude another pattern",
        "su_267018: grep the specific date patterns",
        "ul_273164: grep --exclude does not exclude my file"
      ],
      "Top-3 Scripts": [
        "so_25781642: ",
        "su_267018: d1=\"2011/03/25\" # or whatever commands to set this date\nd2=\"2011/04/04\" # or whatever commands to set this date\nawk -v start=$d1 -v end=$d2 -F - 'start < $1 && $1 <= end' filename",
        "ul_273164: --exclude=GLOB\n          Skip   files  whose  base  name  matches  GLOB  (using  wildcard\n          matching).  A file-name  glob  can  use  *,  ?,  and  [...]   as\n          wildcards,  and  \\  to  quote  a wildcard or backslash character\n          literally."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49521913: Exclude subdirectories"
      ],
      "Top-3 Scripts": [
        "so_49521913: /home/docs/foo/home/docs/bar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49521913: Exclude subdirectories"
      ],
      "Top-3 Scripts": [
        "so_49521913: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gawk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_261263: Print some lines before and after pattern match excluding lines matching another patterns"
      ],
      "Top-3 Scripts": [
        "ul_261263: gawk 'NF > 0' fileName  |ggrep -C5 pattern"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "next",
      "MP Summary": "show the next nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28021351: Sed. remove multiline patterns. RegExp"
      ],
      "Top-3 Scripts": [
        "so_28021351: /^@H/ {     # if the current line begins with @H\n  N         # fetch the next one, append it.\n  /\\n+$/ {  # if the combined pattern has \\n+ at the end (that is, if the new \n            # line is \"+\")\n    N       # fetch another line\n    d       # and discard the lot.\n  }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "new",
      "MP Summary": "report on nmh folders with new messages",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28021351: Sed. remove multiline patterns. RegExp"
      ],
      "Top-3 Scripts": [
        "so_28021351: /^@H/ {     # if the current line begins with @H\n  N         # fetch the next one, append it.\n  /\\n+$/ {  # if the combined pattern has \\n+ at the end (that is, if the new \n            # line is \"+\")\n    N       # fetch another line\n    d       # and discard the lot.\n  }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "discard",
      "MP Summary": "Postfix discard mail delivery agent",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28021351: Sed. remove multiline patterns. RegExp"
      ],
      "Top-3 Scripts": [
        "so_28021351: /^@H/ {     # if the current line begins with @H\n  N         # fetch the next one, append it.\n  /\\n+$/ {  # if the combined pattern has \\n+ at the end (that is, if the new \n            # line is \"+\")\n    N       # fetch another line\n    d       # and discard the lot.\n  }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60841285: Make grep not to change pattern"
      ],
      "Top-3 Scripts": [
        "so_60841285: /usr/bin\n\nfile $(find /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\n\" | sort -t$'\\t' -k1,1nr | cut -f2)\n\nfind /usr/bin -name \"*zip*\" -printf \"%T@\\t%p\\0\" | sort -zt$'\\t' -k1,1nr | cut -zf2- | xargs -0 file\n\nfind /usr/bin -name \"*zip*\" -exec file '{}' +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17424446: Grep variable pattern match"
      ],
      "Top-3 Scripts": [
        "so_17424446: SOMETHING=$(awk '/^ something/{print substr($4, 1, 3);}' somefile.conf)\nif [ \"$SOMETHING\" = \"123\" ]; then\n    echo \"Found 123\"\nelse\n    echo \"Cannot find 123\" && exit 1  \nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "needle",
      "MP Summary": "Needleman-Wunsch global alignment of two sequences",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file \"exclude.pats\".",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats\n",
          "command-options": {
            "diff": {
              "mpsum": "compare two files"
            },
            "dir": {
              "mpsum": "list directory contents",
              "-r": "reverse order while sorting",
              "-X": "sort alphabetically by entry extension"
            }
          },
          "TLDR_inform": {
            "diff": {
              "man1_diff_6775": "compar file directori compar directori recurs show name differ file directori well chang made file compar directori show name file differ compar file list chang turn old_fil new_fil compar file ignor white space compar file show differ unifi format use git diff compar file show differ side side"
            },
            "dir": {
              "man1_dir_6819": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_96480: With grep, how can I match a pattern and invert match another pattern?"
      ],
      "Top-3 Scripts": [
        "ul_96480: "
      ],
      "Explanations about Options": {}
    }
  ]
}