{
  "Query": "How can I measure the execution time of a terminal process?",
  "Answers": [
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42302129: Execute several instances of script same time",
        "so_20444480: How to measure the time of 100 executions of the program?",
        "so_53313786: The parent process keep trace of it child's termination status"
      ],
      "Top-3 Scripts": [
        "so_42302129: 0,5,10 * * * * /bin/bash -c '/path/to/logScript \"script2\" &  /path/to/logScript \"script1\" & /path/to/logScript \"script3\" & '",
        "so_20444480: time bash 1.sh",
        "so_53313786: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25343664: How to slow all time measurements of a process?",
        "nl2bash_16307: Prints elapsed time of command execution.",
        "su_1086474: How to kill all child processes of a terminal, not a tty session?"
      ],
      "Top-3 Scripts": [
        "so_25343664: $ time FAKETIME=\"x0.5\" LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1 sleep 1\nreal    0m2.002s\nuser    0m0.000s\nsys 0m0.000s",
        "nl2bash_16307: \\time -f%e sleep 1",
        "su_1086474: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_30980234: The most reliable way to terminate a family of processes",
        "su_1086474: How to kill all child processes of a terminal, not a tty session?",
        "au_180336: How to find the Process ID (PID) of a running terminal program?"
      ],
      "Top-3 Scripts": [
        "so_30980234: kill -STOP <pid>\n\nkill -CONT",
        "su_1086474: ",
        "au_180336: kill pid\n\nkill -HUP pid\n\nkill -KILL pid\n\nkill -9 pid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for all processes known to the invoking shell to finish",
      "Most Similar TLDR Script": "wait",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47219263: Calculating process run time of child process fork()",
        "so_53313786: The parent process keep trace of it child's termination status"
      ],
      "Top-3 Scripts": [
        "so_47219263: wait()",
        "so_53313786: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_652224: calculating the running time of a process more efficiently",
        "so_1656425: Print execution time of a shell command",
        "so_26475636: measure elapsed time, amount of memory and cpu used by the extern program"
      ],
      "Top-3 Scripts": [
        "ul_652224: time some command",
        "so_1656425: time command",
        "so_26475636: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "Sort processes by memory consumption",
      "Most Similar TLDR Script": "ps --sort size",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_131303: How can I measure the actual memory usage of an application or process?",
        "su_1086474: How to kill all child processes of a terminal, not a tty session?",
        "ul_408139: Process status of the past time"
      ],
      "Top-3 Scripts": [
        "so_131303: ",
        "su_1086474: ps auxf",
        "ul_408139: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Show the individual threads of a given process",
      "Most Similar TLDR Script": "top -Hp {{process_id}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_408139: Process status of the past time",
        "au_180336: How to find the Process ID (PID) of a running terminal program?"
      ],
      "Top-3 Scripts": [
        "ul_408139: ",
        "au_180336: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "valgrind",
      "MP Summary": "a suite of tools for debugging and profiling programs",
      "Most Similar TLDR Task": "Use the Massif tool to profile and log heap memory and stack usage of `program`",
      "Most Similar TLDR Script": "valgrind --tool=massif --stacks=yes {{program}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_131303: How can I measure the actual memory usage of an application or process?",
        "ul_85563: a handy tool to measure memory consumption of a program",
        "so_10093797: How to see contents of /proc/[pid]/status after process finishes execution?"
      ],
      "Top-3 Scripts": [
        "so_131303: valgrind --tool=massif <executable> <arguments>",
        "ul_85563: valgrind --tool=massif prog\n\nvalgrind --tool=massif --stacks=yes prog",
        "so_10093797: "
      ],
      "Explanations about Options": {
        "--tool": "Run the Valgrind tool called toolname, e.g. memcheck, cachegrind, callgrind, helgrind,\n drd, massif, dhat, lackey, none, exp-sgcheck, exp-bbv, etc.",
        "--stacks": "Specifies whether stack profiling should be done. This option slows Massif down\n greatly, and so is off by default. Note that Massif assumes that the main stack has\n size zero at start-up. This is not true, but doing otherwise accurately is difficult.\n Furthermore, starting at zero better indicates the size of the part of the main stack\n that a user program actually has control over."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_999970: timing the execution of a source command",
        "so_31528199: How to measure the depth of a file system path?",
        "so_26475636: measure elapsed time, amount of memory and cpu used by the extern program"
      ],
      "Top-3 Scripts": [
        "au_999970: awk 'NR != 1 {print $0 - prev} {prev = $0; getline}' times",
        "so_31528199: measure_depth() { echo \"${*#/}\" | awk -F/ '{print NF}'; }",
        "so_26475636: retcode, rusage = resource_call(['spam', 'eggs'])\nprint('spam used {}s of system time'.format(rusage.ru_stime))\n\np = subprocess.Popen(['spam', 'eggs'])\nps = psutil.Process(p.pid)\np.wait()\nprint('spam used {}s of system time'.format(ps.cpu_times().system))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5608984: Measuring time of parent and children processes",
        "so_47219263: Calculating process run time of child process fork()"
      ],
      "Top-3 Scripts": [
        "so_5608984: ",
        "so_47219263: // return the runtime as an 8-bit integer to the parent\nexit(run_time[i] & 0xff);"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_458680: Measure execution time of command I just executed without interrupting it now",
        "ul_18841: Measuring RAM usage of a program"
      ],
      "Top-3 Scripts": [
        "su_458680: ",
        "ul_18841: $ tstime date       \nTue Aug 16 21:35:02 CEST 2011\n\nExit status: 0\n\npid: 31169 (date) started: Tue Aug 16 21:35:02 2011\n        real   0.017 s, user   0.000 s, sys   0.000s\n        rss      888 kb, vm     9764 kb"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_180336: How to find the Process ID (PID) of a running terminal program?",
        "so_46165830: How to measure time of execution of each \"sub-process\" of a shell script",
        "so_62758843: Python subprocess time calls /usr/bin/time instead of keyword"
      ],
      "Top-3 Scripts": [
        "au_180336: $ ps ax | grep firefox\n2222 ?        S      0:00 /bin/sh /usr/lib/firefox-3.6.9/firefox\n2231 ?        Sl   514:36 /usr/lib/firefox-3.6.9/firefox-bin\n30290 pts/2    S+     0:00 grep --color=auto firefox",
        "so_46165830: /bin/sh",
        "so_62758843: /bin/sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13007596: Way to measure time of execution program",
        "so_5608984: Measuring time of parent and children processes",
        "ul_18840: Measuring disk I/O usage of a program"
      ],
      "Top-3 Scripts": [
        "so_13007596: ~$ time foo",
        "so_5608984: ",
        "ul_18840: time foo\n\n/usr/bin/time foo\n\nman time\n\n/usr/bin/time -l foo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gnome-terminal",
      "MP Summary": "is a terminal emulation application.",
      "Most Similar TLDR Task": "Run a specific command in a new terminal window",
      "Most Similar TLDR Script": "gnome-terminal -- {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53313786: The parent process keep trace of it child's termination status",
        "su_41826: How can I change the colors of GNOME Terminal each time it starts?"
      ],
      "Top-3 Scripts": [
        "so_53313786: ",
        "su_41826: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "timeout",
      "MP Summary": "run a command with a time limit",
      "Most Similar TLDR Task": "Specify the signal to be sent to the command after the time limit expires. (By default, TERM is sent)",
      "Most Similar TLDR Script": "timeout --signal {{INT}} {{5s}} {{sleep 10}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26475636: measure elapsed time, amount of memory and cpu used by the extern program"
      ],
      "Top-3 Scripts": [
        "so_26475636: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1086474: How to kill all child processes of a terminal, not a tty session?",
        "so_31528199: How to measure the depth of a file system path?",
        "so_19334918: Bash script to watch execution time of other scripts"
      ],
      "Top-3 Scripts": [
        "su_1086474: ",
        "so_31528199: measure_depth() { echo \"${*#/}\" | awk -F/ '{print NF}'; }",
        "so_19334918: ( sleep 10 ; echo 'Takes a while' | sendmail myself@example.com ) &\nemail_pid=$!\nbash $each\nkill $email_pid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_999970: timing the execution of a source command",
        "so_31528199: How to measure the depth of a file system path?",
        "so_54920113: Calculate average execution time of a program using Bash"
      ],
      "Top-3 Scripts": [
        "au_999970: awk 'NR != 1 {print $0 - prev} {prev = $0; getline}' times",
        "so_31528199: measure_depth() { echo \"${*#/}\" | awk -F/ '{print NF}'; }",
        "so_54920113: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47219263: Calculating process run time of child process fork()",
        "so_26475636: measure elapsed time, amount of memory and cpu used by the extern program"
      ],
      "Top-3 Scripts": [
        "so_47219263: // return the runtime as an 8-bit integer to the parent\nexit(run_time[i] & 0xff);",
        "so_26475636: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46165830: How to measure time of execution of each \"sub-process\" of a shell script",
        "su_41826: How can I change the colors of GNOME Terminal each time it starts?"
      ],
      "Top-3 Scripts": [
        "so_46165830: for filename in *.in\ndo\n    time ./tree < \"$filename\" > \"$( sed -e 's/in/out/g' <<< $filename )\"\ndone\n\n\"$( sed -e 's/in/out/g' <<< $filename )\"",
        "su_41826: "
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "pstree",
      "MP Summary": "display a tree of processes",
      "Most Similar TLDR Task": "Display all process trees rooted at processes owned by specified user",
      "Most Similar TLDR Script": "pstree {{user}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_101380: Make terminal print name of parent process OSX"
      ],
      "Top-3 Scripts": [
        "ul_101380: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Repeatedly output \"message\"",
      "Most Similar TLDR Script": "yes {{message}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_85563: a handy tool to measure memory consumption of a program"
      ],
      "Top-3 Scripts": [
        "ul_85563: valgrind --tool=massif --stacks=yes prog"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1086474: How to kill all child processes of a terminal, not a tty session?"
      ],
      "Top-3 Scripts": [
        "su_1086474: pgrep -P $$"
      ],
      "Explanations about Options": {
        "-P": "Only match processes whose parent process ID is listed."
      }
    },
    {
      "Command": "faketime",
      "MP Summary": "manipulate the system time for a given command",
      "Most Similar TLDR Task": "Simulate how any program would act next friday night",
      "Most Similar TLDR Script": "faketime '{{next Friday 1 am}}' {{path/to/any/program}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25343664: How to slow all time measurements of a process?"
      ],
      "Top-3 Scripts": [
        "so_25343664: $ time FAKETIME=\"x0.5\" LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1 sleep 1\nreal    0m2.002s\nuser    0m0.000s\nsys 0m0.000s"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54920113: Calculate average execution time of a program using Bash"
      ],
      "Top-3 Scripts": [
        "so_54920113: -p\n      When in the POSIX locale, use the precise traditional format\n\n      \"real %f\\nuser %f\\nsys %f\\n\"\n\n      (with  numbers  in seconds) where the number of decimals in the\n      output for %f is unspecified but is sufficient to express the\n      clock tick accuracy, and at least one."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strace",
      "MP Summary": "trace system calls and signals",
      "Most Similar TLDR Task": "Start tracing a program by executing it",
      "Most Similar TLDR Script": "strace {{program}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_592050: Unable to resume execution of a background process"
      ],
      "Top-3 Scripts": [
        "ul_592050: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1086474: How to kill all child processes of a terminal, not a tty session?",
        "so_1656425: Print execution time of a shell command",
        "ul_342401: How to recover the deleted binary executable file of a running process"
      ],
      "Top-3 Scripts": [
        "su_1086474: cat /dev/random > /dev/null &\n\n{0} 02:34:57] $ ./test3.sh \ntest3.sh pid: 7015; child pids: 7016 7017\n./test3.sh: line 12:  7016 Terminated              cat /dev/random > /dev/null\n./test3.sh: line 12:  7017 Terminated              cat /dev/random > /dev/null\nno child pids left...\n\nsudo cat /dev/random > /dev/null &\n\n[{0} 02:53:51] $ ./test3.sh \ntest3.sh pid: 8144; child pids: 8145 8146\n./test3.sh: line 9: kill: (8146) - Operation not permitted\n./test3.sh: line 10:  8145 Terminated              cat /dev/random > /dev/null\nPID: 8145; Orig PPID: 8144; Cur PPID: \nPID: 8146; Orig PPID: 8144; Cur PPID: 8150\n\nroot      8146  0.0  0.0 244996  7444 pts/2    S    02:54   0:00 sudo cat /dev/random\nroot      8150  0.0  0.0 113828   744 pts/2    S    02:54   0:00  \\_ cat /dev/random",
        "so_1656425: ",
        "ul_342401: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5608984: Measuring time of parent and children processes",
        "so_47219263: Calculating process run time of child process fork()",
        "so_54920113: Calculate average execution time of a program using Bash"
      ],
      "Top-3 Scripts": [
        "so_5608984: printf(... getpid())",
        "so_47219263: ",
        "so_54920113: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1086474: How to kill all child processes of a terminal, not a tty session?"
      ],
      "Top-3 Scripts": [
        "su_1086474: sudo cat /dev/random > /dev/null &\n\nroot      8146  0.0  0.0 244996  7444 pts/2    S    02:54   0:00 sudo cat /dev/random\nroot      8150  0.0  0.0 113828   744 pts/2    S    02:54   0:00  \\_ cat /dev/random"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1656425: Print execution time of a shell command",
        "au_999970: timing the execution of a source command"
      ],
      "Top-3 Scripts": [
        "so_1656425: ",
        "au_999970: TIMEFMT=%E\nfor file in  ${(M)config_files}\ndo\n    time (source file)\ndone\n\nfor file in  ${(M)config_files}\ndo\n    \\time -f %E zsh -c 'source \"$1\"' zsh \"$file\"\ndone\n\nTIMEFMT=%E\n{time} 2> times\nfor file in  ${(M)config_files}\ndo\n    source file\n    {time} 2>> times\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_50546100: How to find execution time of multiple subprocesses?"
      ],
      "Top-3 Scripts": [
        "so_50546100: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pv",
      "MP Summary": "monitor the progress of data through a pipe",
      "Most Similar TLDR Task": "Measure the speed and amount of data flow between pipes (`-s` is optional)",
      "Most Similar TLDR Script": "command1 | pv -s {{expected_amount_of_data_for_eta}} | command2",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_426683: How to measure size of piped data?"
      ],
      "Top-3 Scripts": [
        "ul_426683: grep pattern file.txt | pv -b > output.txt"
      ],
      "Explanations about Options": {
        "-b": "Turn the total byte counter on. This will display the total amount of data\n transferred so far."
      }
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_652224: calculating the running time of a process more efficiently"
      ],
      "Top-3 Scripts": [
        "ul_652224: $ type -t time\nkeyword"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl script",
      "Most Similar TLDR Script": "perl {{script.pl}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_342401: How to recover the deleted binary executable file of a running process"
      ],
      "Top-3 Scripts": [
        "ul_342401: $ echo sleep 9999 > x\n$ perl x &\n[1] 16439\n$ rm x\n$ readlink /proc/16439/exe\n/usr/bin/perl\n$ ls /proc/16439/fd\n0  1  2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tty",
      "MP Summary": "return user's terminal name",
      "Most Similar TLDR Task": "Print the file name of this terminal",
      "Most Similar TLDR Script": "tty",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38090621: Command to find Linux terminal of the process"
      ],
      "Top-3 Scripts": [
        "so_38090621: ps -o tty -p $pid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sendmail",
      "MP Summary": "send a message using smtp",
      "Most Similar TLDR Task": "Send a message with the content of message.txt to the mail directory of local user `username`",
      "Most Similar TLDR Script": "sendmail {{username}} < {{message.txt}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19334918: Bash script to watch execution time of other scripts"
      ],
      "Top-3 Scripts": [
        "so_19334918: ( sleep 10 ; echo 'Takes a while' | sendmail myself@example.com ) &\nemail_pid=$!\nbash $each\nkill $email_pid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "md5sum",
      "MP Summary": "compute and check MD5 message digest",
      "Most Similar TLDR Task": "Calculate MD5 checksums for multiple files",
      "Most Similar TLDR Script": "md5sum {{filename1}} {{filename2}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_342401: How to recover the deleted binary executable file of a running process"
      ],
      "Top-3 Scripts": [
        "ul_342401: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1086474: How to kill all child processes of a terminal, not a tty session?"
      ],
      "Top-3 Scripts": [
        "su_1086474: {0} 02:34:57] $ ./test3.sh \ntest3.sh pid: 7015; child pids: 7016 7017\n./test3.sh: line 12:  7016 Terminated              cat /dev/random > /dev/null\n./test3.sh: line 12:  7017 Terminated              cat /dev/random > /dev/null\nno child pids left...\n\n[{0} 02:53:51] $ ./test3.sh \ntest3.sh pid: 8144; child pids: 8145 8146\n./test3.sh: line 9: kill: (8146) - Operation not permitted\n./test3.sh: line 10:  8145 Terminated              cat /dev/random > /dev/null\nPID: 8145; Orig PPID: 8144; Cur PPID: \nPID: 8146; Orig PPID: 8144; Cur PPID: 8150"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gcc",
      "MP Summary": "GNU project C and C++ compiler",
      "Most Similar TLDR Task": "Compile multiple source files into executable",
      "Most Similar TLDR Script": "gcc {{source1.c}} {{source2.c}} -o {{executable}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_342401: How to recover the deleted binary executable file of a running process"
      ],
      "Top-3 Scripts": [
        "ul_342401: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Execute command passed as parameter",
      "Most Similar TLDR Script": "zsh -c {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_999970: timing the execution of a source command"
      ],
      "Top-3 Scripts": [
        "au_999970: for file in  ${(M)config_files}\ndo\n    \\time -f %E zsh -c 'source \"$1\"' zsh \"$file\"\ndone"
      ],
      "Explanations about Options": {
        "-c": "Take the first argument as a command to execute, rather than reading commands from\n a script or standard input. If any further arguments are given, the first one is\n assigned to $0, rather than being used as a positional parameter."
      }
    },
    {
      "Command": "factor",
      "MP Summary": "factor a number, generate large primes",
      "Most Similar TLDR Task": "Take the input from `stdin` if no argument is specified",
      "Most Similar TLDR Script": "echo {{number}} | factor",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1656425: Print execution time of a shell command"
      ],
      "Top-3 Scripts": [
        "so_1656425: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_18840: Measuring disk I/O usage of a program",
        "so_24593858: how to measure the running time of a program in terminal",
        "so_54920113: Calculate average execution time of a program using Bash"
      ],
      "Top-3 Scripts": [
        "ul_18840: man time\n\nman getrusage",
        "so_24593858: man time",
        "so_54920113: man time"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "firefox",
      "MP Summary": "a free and open source web browser from Mozilla",
      "Most Similar TLDR Task": "Use a specific profile to allow multiple separate instances of Firefox to run at once",
      "Most Similar TLDR Script": "firefox --profile {{path/to/directory}} {{https://example.com/}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_180336: How to find the Process ID (PID) of a running terminal program?"
      ],
      "Top-3 Scripts": [
        "au_180336: $ ps ax | grep firefox\n2222 ?        S      0:00 /bin/sh /usr/lib/firefox-3.6.9/firefox\n2231 ?        Sl   514:36 /usr/lib/firefox-3.6.9/firefox-bin\n30290 pts/2    S+     0:00 grep --color=auto firefox"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_426683: How to measure size of piped data?"
      ],
      "Top-3 Scripts": [
        "ul_426683: grep pattern file.txt | wc -c"
      ],
      "Explanations about Options": {
        "-c": "print the byte counts"
      }
    },
    {
      "Command": "apt",
      "MP Summary": "command-line interface",
      "Most Similar TLDR Task": "Remove a package (using `purge` instead also removes its configuration files)",
      "Most Similar TLDR Script": "sudo apt remove {{package}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62656421: Linux terminal measure cpu usage of a command"
      ],
      "Top-3 Scripts": [
        "so_62656421: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46165830: How to measure time of execution of each \"sub-process\" of a shell script"
      ],
      "Top-3 Scripts": [
        "so_46165830: find -exec"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tmux",
      "MP Summary": "terminal multiplexer",
      "Most Similar TLDR Task": "Kill the current session (with prefix Ctrl-B)",
      "Most Similar TLDR Script": "Ctrl-B :kill-session<Enter>",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28780304: How can I see the running time of the terminal? (Ubuntu user)"
      ],
      "Top-3 Scripts": [
        "so_28780304: ps -eo '%t %c' | grep tmux"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fd",
      "MP Summary": "find entries in the filesystem",
      "Most Similar TLDR Task": "Find files with a specific extension",
      "Most Similar TLDR Script": "fd --extension {{txt}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_342401: How to recover the deleted binary executable file of a running process"
      ],
      "Top-3 Scripts": [
        "ul_342401: $ echo sleep 9999 > x\n$ perl x &\n[1] 16439\n$ rm x\n$ readlink /proc/16439/exe\n/usr/bin/perl\n$ ls /proc/16439/fd\n0  1  2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print the size of each file and the cumulative size of each directory, in human-readable format",
      "Most Similar TLDR Script": "tree -s -h --du",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46165830: How to measure time of execution of each \"sub-process\" of a shell script"
      ],
      "Top-3 Scripts": [
        "so_46165830: time ./tree < in_1.in > out_1.out 2> time_1.time\n\ntime ./tree < in_1.in &> out_1.out\n\nfor filename in *.in\ndo\n    time ./tree < \"$filename\" > \"$( sed -e 's/in/out/g' <<< $filename )\"\ndone\n\ntime ./tree < \"$filename\" > \"${filename//in/out}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1086474: How to kill all child processes of a terminal, not a tty session?"
      ],
      "Top-3 Scripts": [
        "su_1086474: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_342401: How to recover the deleted binary executable file of a running process"
      ],
      "Top-3 Scripts": [
        "ul_342401: $ echo sleep 9999 > x\n$ perl x &\n[1] 16439\n$ rm x\n$ readlink /proc/16439/exe\n/usr/bin/perl\n$ ls /proc/16439/fd\n0  1  2"
      ],
      "Explanations about Options": {}
    }
  ]
}