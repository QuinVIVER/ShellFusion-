{
  "Query": "Run VirtualBox in background, without a window?",
  "Answers": [
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_207812: How to stop a background process started in the same script, without exit the script?",
        "su_1167718: Running a bash background process on Windows 10 without an open terminal",
        "so_66723574: Run Java process in background without hanging"
      ],
      "Top-3 Scripts": [
        "ul_207812: man bash",
        "su_1167718: # direct, command-dependent\nwsl emacs --display=:0 &\n\n# indirect, more flexible\nwsl bash -c \"DISPLAY=:0 emacs\" &",
        "so_66723574: bash -c \"java -jar appserver-cli.jar list-domains &\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_207812: How to stop a background process started in the same script, without exit the script?",
        "so_24843614: Execute process in background, without printing \"Done\", and get PID",
        "so_60746587: Run and kill java program in background in Linux"
      ],
      "Top-3 Scripts": [
        "ul_207812: for i in $(seq 1 45); do sleep 3; echo; echo; fortune; done &\npid=$!\n\n[ main script here]\n\nif [any-condition]; then\n  kill $pid\nfi",
        "so_24843614: $ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active.",
        "so_60746587: kill $(cat /var/run/javaProgram.pid)"
      ],
      "Explanations about Options": {
        "-s": " Specify the signal to be sent. The signal can be specified by using name or\n number. The behavior of signals is explained in signal(7) manual page."
      }
    },
    {
      "Command": "nohup",
      "MP Summary": "run a command immune to hangups, with output to a non-tty",
      "Most Similar TLDR Task": "Run process that can live beyond the terminal",
      "Most Similar TLDR Script": "nohup {{command options}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_420953: Running picocom in the background without open session",
        "so_45560231: running a process in background in linux",
        "so_32784462: How to run multiple php scripts in background on ubuntu?"
      ],
      "Top-3 Scripts": [
        "ul_420953: stty <my options>\nnohup sh -c \"cat /dev/ttyACM0 > data.log\" &",
        "so_45560231: nohup your_shellscript &",
        "so_32784462: ~$ nohup php script.php >> /var/tmp/script.log 2>&1 &\n\n~$ jobs -l\n[1]+  1797 Running   nohup php script.php >> /var/tmp/script.log 2>&1 &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_19286: How to access USB in VirtualBox running Windows XP as guest OS",
        "au_386043: How can I run Windows on Ubuntu without vt-x?",
        "so_26446757: Vagrant unable to mount in Linux guest with VirtualBox Guest Additions on Windows 7"
      ],
      "Top-3 Scripts": [
        "au_19286: wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -\n\nsudo apt-get purge virtualbox-ose\nsudo apt-get update\n\nsudo apt-get install virtualbox-4.0",
        "au_386043: sudo cd /locationyousavedbundle/nameoffile.bundle",
        "so_26446757: sudo mount -oremount /\nvagrant@precise64:~$ mount\n/dev/mapper/precise64-root on / type ext4 (rw,noatime,errors=remount-ro)\n...\n\nvagrant@precise64:~$ sudo mount -oremount /\nvagrant@precise64:~$ mount\n/dev/mapper/precise64-root on / type ext4 (rw,errors=remount-ro)\n..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Start a new screen session",
      "Most Similar TLDR Script": "screen",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31771066: How to run mininet in ubuntu in background?",
        "so_20694440: How do run commands in background one by one?"
      ],
      "Top-3 Scripts": [
        "so_31771066: ",
        "so_20694440: $ screen\n\n$ screen -r"
      ],
      "Explanations about Options": {
        "-r": " resumes a detached screen session. No other options (except combinations with -d/-D)\n may be specified, though an optional prefix of [pid.]tty.host may be needed to\n distinguish between multiple detached screen sessions. The second form is used to\n connect to another user's screen session which runs in multiuser mode. This indicates\n that screen should look for sessions in another user's directory. This requires\n setuid-root."
      }
    },
    {
      "Command": "fg",
      "MP Summary": "run jobs in the foreground",
      "Most Similar TLDR Task": "Bring most recently suspended background job to foreground",
      "Most Similar TLDR Script": "fg",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_435187: Execute background program in bash without job control"
      ],
      "Top-3 Scripts": [
        "su_435187: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display running processes",
      "Most Similar TLDR Script": "jobs -r",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32784462: How to run multiple php scripts in background on ubuntu?",
        "so_58566781: How to use nohup on a process already running in background"
      ],
      "Top-3 Scripts": [
        "so_32784462: ~$ jobs -l\n[1]+  1797 Running   nohup php script.php >> /var/tmp/script.log 2>&1 &",
        "so_58566781: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "VBoxManage",
      "MP Summary": "x86 virtualization solution",
      "Most Similar TLDR Task": "List all VirtualBox virtual machines",
      "Most Similar TLDR Script": "VBoxManage list vms",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_153894: Launch an application in Windows from the Ubuntu desktop",
        "au_855941: How to use VirtualBox on a Ubuntu Server without any desktop",
        "au_168156: How to use a real partition with Windows 7 installed, in a virtualbox vm?"
      ],
      "Top-3 Scripts": [
        "au_153894: VBoxManage startvm \"<Name_of_VM>\"\n\nVBoxManage --nologo guestcontrol \"<Name_of_VM>\" run --exe \"C:\\\\full\\\\path\\\\to\\\\program.exe\" --username windowsuser --password password --wait-stdout\n\nVBoxManage controlvm \"Name_of_VM\" savestate",
        "au_855941: VBoxManage createvm --name Ubuntu10.10\n\nVBoxManage createhd --filename Ubuntu10.10 --size 5120\n\nVBoxManage registervm '/home/user/VirtualBox VMs/Ubuntu10.10/Ubuntu10.10.vbox'\n\nVBoxManage modifyvm Ubuntu10.10 --ostype Ubuntu\n\nVBoxManage modify Ubuntu10.10 --memory 512\n\nVBoxManage storagectl Ubuntu10.10 --name IDE --add ide --controller PIIX4 --bootable on\n\nVBoxManage storageattach Ubuntu10.10 --storagectl IDE --port 0 --device 0 --type hdd --medium \"filename\"\n\nVBoxManage modifyvm Ubuntu10.10 --vram 128 --accelerate3d on --audio alsa --audiocontroller ac97\n\nVBoxManage modifyvm Ubuntu10.10 --nic1 nat --nictype1 82540EM --cableconnected1 on\n\nVBoxManage startvm Ubuntu10.10",
        "au_168156: VBoxManage internalcommands createrawvmdk -filename Win7.vmdk -rawdisk /dev/sda -partitions 1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "firefox",
      "MP Summary": "a free and open source web browser from Mozilla",
      "Most Similar TLDR Task": "Open a new window",
      "Most Similar TLDR Script": "firefox --new-window {{https://www.duckduckgo.com}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_435187: Execute background program in bash without job control",
        "so_60921436: Run docker in background under Powershell"
      ],
      "Top-3 Scripts": [
        "su_435187: ( firefox & )",
        "so_60921436: # Preferable alternative: Start-ThreadJob\n$job = Start-Job { docker run --rm -e DISPLAY=$using:DISPLAY firefox }\n\n$job = docker run --rm -e DISPLAY=$DISPLAY firefox &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "docker",
      "MP Summary": "Docker image and container command line interface",
      "Most Similar TLDR Task": "List all docker containers (running and stopped)",
      "Most Similar TLDR Script": "docker ps -a",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31570208: docker run a shell script in the background without exiting the container",
        "so_60921436: Run docker in background under Powershell"
      ],
      "Top-3 Scripts": [
        "so_31570208: docker logs <container>\n\ndocker run",
        "so_60921436: # Preferable alternative: Start-ThreadJob\n$job = Start-Job { docker run --rm -e DISPLAY=$using:DISPLAY firefox }\n\n$job = docker run --rm -e DISPLAY=$DISPLAY firefox &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "emacs",
      "MP Summary": "GNU project Emacs editor",
      "Most Similar TLDR Task": "Start in console mode (without X window)",
      "Most Similar TLDR Script": "emacs -nw",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_78232: How to run 'emacs' in the terminal emulator without a separate window?",
        "su_1167718: Running a bash background process on Windows 10 without an open terminal"
      ],
      "Top-3 Scripts": [
        "su_78232: emacs -nw",
        "su_1167718: # direct, command-dependent\nwsl emacs --display=:0 &\n\n# indirect, more flexible\nwsl bash -c \"DISPLAY=:0 emacs\" &"
      ],
      "Explanations about Options": {
        "-nw": "Tell Emacs not to create a graphical frame. If you use this switch when\n invoking Emacs from an xterm(1) window, display is done in that window.",
        "--display": "Create the Emacs window on the display specified by displayname. Must be\n the first option specified in the command line."
      }
    },
    {
      "Command": "stty",
      "MP Summary": "change and print terminal line settings",
      "Most Similar TLDR Task": "Display all settings for the current terminal",
      "Most Similar TLDR Script": "stty -a",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_351013: How to put a job in background without output?",
        "ul_420953: Running picocom in the background without open session"
      ],
      "Top-3 Scripts": [
        "ul_351013: stty tostop\n\nLD_PRELOAD=~/lib/handle_tostop.so\nexport LD_PRELOAD\nstty tostop",
        "ul_420953: stty <my options>\nnohup sh -c \"cat /dev/ttyACM0 > data.log\" &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gnome-terminal",
      "MP Summary": "is a terminal emulation application.",
      "Most Similar TLDR Task": "Run a specific command in a new terminal window",
      "Most Similar TLDR Script": "gnome-terminal -- {{command}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32430894: How do I make a Bash script run a command in the background in another Terminal window?"
      ],
      "Top-3 Scripts": [
        "so_32430894: gnome-terminal -e\n\n# \u2026\nairmon-ng start wlan0\ngnome-terminal -e 'airbase-ng -e FREEINTERNET -c 1 -P wlan0mon' &\nifconfig at0 192.168.1.129 netmask 255.255.255.128\n# \u2026"
      ],
      "Explanations about Options": {
        "-e": "Execute the argument to this option inside the terminal."
      }
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes",
      "Most Similar TLDR Script": "ps aux",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_207812: How to stop a background process started in the same script, without exit the script?",
        "au_1196175: Mouse suddenly stops working in Ubuntu (running as guest in VirtualBox)"
      ],
      "Top-3 Scripts": [
        "ul_207812: long_process &\nwhile ps -p $! >/dev/null; do sleep 3; echo; echo; fortune; done",
        "au_1196175: ps -ax | grep VBoxClient"
      ],
      "Explanations about Options": {
        "-p": "Select by PID. This selects the processes whose process ID numbers appear in\n pidlist. Identical to p and --pid.",
        "-a": "Select all processes except both session leaders (see getsid(2)) and processes not\n associated with a terminal."
      }
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31570208: docker run a shell script in the background without exiting the container",
        "ul_207812: How to stop a background process started in the same script, without exit the script?",
        "so_24843614: Execute process in background, without printing \"Done\", and get PID"
      ],
      "Top-3 Scripts": [
        "so_31570208: while :; do\n  sleep 300\ndone",
        "ul_207812: for i in $(seq 1 45); do sleep 3; echo; echo; fortune; done &\npid=$!\n\n[ main script here]\n\nif [any-condition]; then\n  kill $pid\nfi\n\nlong_process &\nwhile ps -p $! >/dev/null; do sleep 3; echo; echo; fortune; done",
        "so_24843614: { sleep 5 2>&3 & pid=$!; } 3>&2 2>/dev/null\n\n{ sleep 5 2>&3 & disown; pid=$!; } 3>&2 2>/dev/null\n\n{ pid=$( sleep 200s >&3 & echo $! ); } 3>&1\n\npid=$( sleep 200s >&3 & echo $! )\n\npid=$( sleep 200s >/dev/null & echo $! )\n\n{ read pid < <(sleep 200s >&3 & echo $!); } 3>&1\n\n$ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
      "Most Similar TLDR Script": "wait {{pid}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40129259: How to run iisexpress in the background without blocking script?",
        "so_4511704: shell script: run a block of code in the background without defining a new function?"
      ],
      "Top-3 Scripts": [
        "so_40129259: cd \\Program Files\\IIS Express\n\nstart /wait iisexpress /path:%APPVEYOR_BUILD_FOLDER% /port:%iis_port% -PassThru\n\necho \"Start operations\"",
        "so_4511704: #!/bin/sh\n{\n    echo \"sleeping for 5 seconds\"\n    sleep 5\n    echo \"woke up\"\n} &\necho \"waiting\"\nwait\necho \"proceed\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message without the trailing newline",
      "Most Similar TLDR Script": "echo -n \"{{Hello World}}\"",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24843614: Execute process in background, without printing \"Done\", and get PID",
        "so_40129259: How to run iisexpress in the background without blocking script?",
        "so_60746587: Run and kill java program in background in Linux"
      ],
      "Top-3 Scripts": [
        "so_24843614: { pid=$( sleep 200s >&3 & echo $! ); } 3>&1\n\npid=$( sleep 200s >&3 & echo $! )\n\npid=$( sleep 200s >/dev/null & echo $! )\n\n{ read pid < <(sleep 200s >&3 & echo $!); } 3>&1\n\n$ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active.",
        "so_40129259: cd \\Program Files\\IIS Express\n\nstart /wait iisexpress /path:%APPVEYOR_BUILD_FOLDER% /port:%iis_port% -PassThru\n\necho \"Start operations\"",
        "so_60746587: javaProgram &\npid=$!\necho $pid >/var/run/javaProgram.pid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session, appending to an existing file",
      "Most Similar TLDR Script": "script -a {{path/to/session.out}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_207812: How to stop a background process started in the same script, without exit the script?"
      ],
      "Top-3 Scripts": [
        "ul_207812: for i in $(seq 1 45); do sleep 3; echo; echo; fortune; done &\npid=$!\n\n[ main script here]\n\nif [any-condition]; then\n  kill $pid\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gdb",
      "MP Summary": "The GNU Debugger",
      "Most Similar TLDR Task": "Attach a process to gdb",
      "Most Similar TLDR Script": "gdb -p {{procID}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_351013: How to put a job in background without output?"
      ],
      "Top-3 Scripts": [
        "ul_351013: gdb --batch -ex 'call close(1)' -ex 'call open(\"/dev/null\",2)' -p \"$pid\""
      ],
      "Explanations about Options": {
        "-ex": "Execute given GDB command."
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40129259: How to run iisexpress in the background without blocking script?",
        "au_386043: How can I run Windows on Ubuntu without vt-x?",
        "su_771710: Viewing Xubuntu desktop in full screen under Virtualbox on Windows 8"
      ],
      "Top-3 Scripts": [
        "so_40129259: cd \\Program Files\\IIS Express\n\nstart /wait iisexpress /path:%APPVEYOR_BUILD_FOLDER% /port:%iis_port% -PassThru\n\necho \"Start operations\"",
        "au_386043: sudo cd /locationyousavedbundle/nameoffile.bundle",
        "su_771710: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Enable backspace and GNU readline hotkeys when entering input with read",
      "Most Similar TLDR Script": "read -e {{variable}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24843614: Execute process in background, without printing \"Done\", and get PID",
        "su_1190025: Access Samba share from Windows 10 in VirtualBox",
        "so_45284258: Send a running function to background in bash"
      ],
      "Top-3 Scripts": [
        "so_24843614: { read pid < <(sleep 200s >&3 & echo $!); } 3>&1\n\n$ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active.",
        "su_1190025: ",
        "so_45284258: function myfunc {\n    some_command | while read line\n    #some_command must be running indefinitely\n    do\n        #if some condition on ${line} satisfies\n        kill -CONT $$\n    done & kill -STOP $$\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and login using the default shell",
      "Most Similar TLDR Script": "exec -l {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24843614: Execute process in background, without printing \"Done\", and get PID"
      ],
      "Top-3 Scripts": [
        "so_24843614: exec 3>&1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Update the list of available packages and versions (it's recommended to run this before other `apt-get` commands)",
      "Most Similar TLDR Script": "apt-get update",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_19286: How to access USB in VirtualBox running Windows XP as guest OS",
        "su_771710: Viewing Xubuntu desktop in full screen under Virtualbox on Windows 8"
      ],
      "Top-3 Scripts": [
        "au_19286: sudo apt-get purge virtualbox-ose\nsudo apt-get update\n\nsudo apt-get install virtualbox-4.0",
        "su_771710: sudo apt-get install dkms build-essential kernel-devel kernel-headers gcc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "php",
      "MP Summary": "PHP Command Line Interface 'CLI'",
      "Most Similar TLDR Task": "Run PHP interactively",
      "Most Similar TLDR Script": "php -a",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32784462: How to run multiple php scripts in background on ubuntu?"
      ],
      "Top-3 Scripts": [
        "so_32784462: ~$ nohup php script.php >> /var/tmp/script.log 2>&1 &\n\n~$ jobs -l\n[1]+  1797 Running   nohup php script.php >> /var/tmp/script.log 2>&1 &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "sh {{file.sh}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_420953: Running picocom in the background without open session"
      ],
      "Top-3 Scripts": [
        "ul_420953: stty <my options>\nnohup sh -c \"cat /dev/ttyACM0 > data.log\" &"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "gedit",
      "MP Summary": "text editor for the GNOME Desktop",
      "Most Similar TLDR Task": "Open multiple text files",
      "Most Similar TLDR Script": "gedit {{file1 file2 ...}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_370608: How to run a process in background without typing & every time?"
      ],
      "Top-3 Scripts": [
        "ul_370608: function bgedit() {\n  gedit \"$@\" &\n}\n\n/usr/local/bin/gedit"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_102956: How to run a command in the background with a delay?"
      ],
      "Top-3 Scripts": [
        "ul_102956: [ -f /tmp/startdelay ] && sleep 30\n touch /tmp/startdelay\n ( sleep 30 ; rm /tmp/startdelay ) &\n [ -f /tmp/noautostart ] && exit 0\n start_app"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Ping host without trying to lookup symbolic names for addresses",
      "Most Similar TLDR Script": "ping -n {{host}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60921436: Run docker in background under Powershell"
      ],
      "Top-3 Scripts": [
        "so_60921436: ping google.com &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Run commands from file (script)",
      "Most Similar TLDR Script": "zsh {{file}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58566781: How to use nohup on a process already running in background"
      ],
      "Top-3 Scripts": [
        "so_58566781: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "smbpasswd",
      "MP Summary": "change a user's SMB password",
      "Most Similar TLDR Task": "Add a specified user to Samba and set password(user should already exist in system)",
      "Most Similar TLDR Script": "smbpasswd -a {{username}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1190025: Access Samba share from Windows 10 in VirtualBox"
      ],
      "Top-3 Scripts": [
        "su_1190025: smbpasswd -a youruser"
      ],
      "Explanations about Options": {
        "-a": "This option specifies that the username following should be added to the local\n smbpasswd file, with the new password typed (type <Enter> for the old password). This\n option is ignored if the username following already exists in the smbpasswd file and\n it is treated like a regular change password command. Note that the default passdb\n backends require the user to already exist in the system password file (usually\n /etc/passwd), else the request to add the user will fail."
      }
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24795377: Running a remote command through SSH but in the background"
      ],
      "Top-3 Scripts": [
        "so_24795377: -t      Force pseudo-tty allocation.  This can be used to execute arbitrary screen-based programs on a remote machine,\n             which can be very useful, e.g. when implementing menu services.  Multiple -t options force tty allocation, even if\n             ssh has no local tty.\n\nnohup /usr/bin/ssh -2 -t -t remote_user@remote_host ls -l remote_dir &"
      ],
      "Explanations about Options": {
        "-2": "Forces ssh to try protocol version 2 only.",
        "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
      }
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination, setting their `mode`",
      "Most Similar TLDR Script": "install -m {{+x}} {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_19286: How to access USB in VirtualBox running Windows XP as guest OS",
        "su_771710: Viewing Xubuntu desktop in full screen under Virtualbox on Windows 8"
      ],
      "Top-3 Scripts": [
        "au_19286: sudo apt-get install virtualbox-4.0",
        "su_771710: sudo apt-get install dkms build-essential kernel-devel kernel-headers gcc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Accept everything prompted by the `apt-get` command",
      "Most Similar TLDR Script": "yes | sudo apt-get install {{program}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1190025: Access Samba share from Windows 10 in VirtualBox"
      ],
      "Top-3 Scripts": [
        "su_1190025: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "users",
      "MP Summary": "print the user names of users currently logged in to the current host",
      "Most Similar TLDR Task": "Display a list of logged in users according to a specific file",
      "Most Similar TLDR Script": "users {{/var/log/wmtp}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1190025: Access Samba share from Windows 10 in VirtualBox"
      ],
      "Top-3 Scripts": [
        "su_1190025: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gcc",
      "MP Summary": "GNU project C and C++ compiler",
      "Most Similar TLDR Task": "Compile source code without linking",
      "Most Similar TLDR Script": "gcc -c {{source.c}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_351013: How to put a job in background without output?",
        "su_771710: Viewing Xubuntu desktop in full screen under Virtualbox on Windows 8"
      ],
      "Top-3 Scripts": [
        "ul_351013: gcc -Wall -shared -fPIC -nostartfiles -o ~/lib/handle_tostop.so handle_tostop.c",
        "su_771710: sudo apt-get install dkms build-essential kernel-devel kernel-headers gcc"
      ],
      "Explanations about Options": {
        "-shared": "Produce a shared object which can then be linked with other objects to form an\n executable. Not all systems support this option. For predictable results, you must\n also specify the same set of options used for compilation (-fpic, -fPIC, or model\n suboptions) when you specify this linker option.[1]",
        "-nostartfiles": "Do not use the standard system startup files when linking. The standard system\n libraries are used normally, unless -nostdlib, -nolibc, or -nodefaultlibs is used.",
        "-o": "Place output in file file. This applies to whatever sort of output is being produced,\n whether it be an executable file, an object file, an assembler file or preprocessed C\n code.",
        "-fPIC": "If supported for the target machine, emit position-independent code, suitable for\n dynamic linking and avoiding any limit on the size of the global offset table. This\n option makes a difference on AArch64, m68k, PowerPC and SPARC.",
        "-Wall": "turns on the following warning flags:"
      }
    },
    {
      "Command": "ifconfig",
      "MP Summary": "configure network interfaces",
      "Most Similar TLDR Task": "View network settings of an ethernet adapter",
      "Most Similar TLDR Script": "ifconfig eth0",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32430894: How do I make a Bash script run a command in the background in another Terminal window?"
      ],
      "Top-3 Scripts": [
        "so_32430894: # \u2026\nairmon-ng start wlan0\ngnome-terminal -e 'airbase-ng -e FREEINTERNET -c 1 -P wlan0mon' &\nifconfig at0 192.168.1.129 netmask 255.255.255.128\n# \u2026"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount a specific filesystem described in /etc/fstab (e.g. \"/dev/sda1 /my_drive ext2 defaults 0 2\")",
      "Most Similar TLDR Script": "mount {{/my_drive}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26446757: Vagrant unable to mount in Linux guest with VirtualBox Guest Additions on Windows 7",
        "su_771710: Viewing Xubuntu desktop in full screen under Virtualbox on Windows 8"
      ],
      "Top-3 Scripts": [
        "so_26446757: man 8 mount\n\nsudo mount -oremount /\nvagrant@precise64:~$ mount\n/dev/mapper/precise64-root on / type ext4 (rw,noatime,errors=remount-ro)\n...\n\nvagrant@precise64:~$ sudo mount -oremount /\nvagrant@precise64:~$ mount\n/dev/mapper/precise64-root on / type ext4 (rw,errors=remount-ro)\n...",
        "su_771710: sudo mkdir /media/<folder_name>\nsudo mount -t vboxsf SHARENAME /media/<folder_name>"
      ],
      "Explanations about Options": {
        "-t": "The argument following the -t is used to indicate the filesystem type. The\n filesystem types which are currently supported depend on the running kernel. See\n /proc/filesystems and /lib/modules/$(uname -r)/kernel/fs for a complete list of the\n filesystems. The most common are ext2, ext3, ext4, xfs, btrfs, vfat, sysfs, proc,\n nfs and cifs.",
        "-o": "Use the specified mount options. The opts argument is a comma-separated list. For\n example:",
        "-r": "Mount the filesystem read-only. A synonym is -o ro.",
        "-n": "Mount without writing in /etc/mtab. This is necessary for example when /etc is on\n a read-only filesystem."
      }
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41225711: WSL run linux from windows without spawning a cmd-window"
      ],
      "Top-3 Scripts": [
        "so_41225711: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chcon",
      "MP Summary": "change file security context",
      "Most Similar TLDR Task": "Change the security context of a target file, using a reference file",
      "Most Similar TLDR Script": "chcon --reference={{reference_file}} {{target_file}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1190025: Access Samba share from Windows 10 in VirtualBox"
      ],
      "Top-3 Scripts": [
        "su_1190025: chmod -R 770 yoursharefolder\nchcon -R -t samba_share_t yoursharefolder"
      ],
      "Explanations about Options": {
        "-t": "set type TYPE in the target security context",
        "-R": "operate on files and directories recursively"
      }
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Set a new environment variable",
      "Most Similar TLDR Script": "export {{VARIABLE}}={{value}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_351013: How to put a job in background without output?"
      ],
      "Top-3 Scripts": [
        "ul_351013: LD_PRELOAD=~/lib/handle_tostop.so\nexport LD_PRELOAD\nstty tostop"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tty",
      "MP Summary": "return user's terminal name",
      "Most Similar TLDR Task": "Print the file name of this terminal",
      "Most Similar TLDR Script": "tty",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24795377: Running a remote command through SSH but in the background"
      ],
      "Top-3 Scripts": [
        "so_24795377: -t      Force pseudo-tty allocation.  This can be used to execute arbitrary screen-based programs on a remote machine,\n             which can be very useful, e.g. when implementing menu services.  Multiple -t options force tty allocation, even if\n             ssh has no local tty."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-key",
      "MP Summary": "APT key management utility",
      "Most Similar TLDR Task": "Add a key from keyserver with only key id",
      "Most Similar TLDR Script": "apt-key adv --keyserver {{pgp.mit.edu}} --recv {{KEYID}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_19286: How to access USB in VirtualBox running Windows XP as guest OS"
      ],
      "Top-3 Scripts": [
        "au_19286: wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_738284: How do you view the screen of a guest OS in Virtualbox"
      ],
      "Top-3 Scripts": [
        "au_738284: config.vm.provider :virtualbox do |vb|\n  vb.gui = true\nend"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display the name of the disk file that would be executed",
      "Most Similar TLDR Script": "type -p {{command}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26446757: Vagrant unable to mount in Linux guest with VirtualBox Guest Additions on Windows 7"
      ],
      "Top-3 Scripts": [
        "so_26446757: sudo mount -oremount /\nvagrant@precise64:~$ mount\n/dev/mapper/precise64-root on / type ext4 (rw,noatime,errors=remount-ro)\n...\n\nvagrant@precise64:~$ sudo mount -oremount /\nvagrant@precise64:~$ mount\n/dev/mapper/precise64-root on / type ext4 (rw,errors=remount-ro)\n..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Notify of job termination immediately",
      "Most Similar TLDR Script": "set -b",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24843614: Execute process in background, without printing \"Done\", and get PID"
      ],
      "Top-3 Scripts": [
        "so_24843614: set +m"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Display the routing table",
      "Most Similar TLDR Script": "ip route",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_871344: Run commands on an Ubuntu guest in VirtualBox VM from Windows host"
      ],
      "Top-3 Scripts": [
        "su_871344: ip -4 addr"
      ],
      "Explanations about Options": {
        "-4": "shortcut for -family inet."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Forcibly remove a directory, without prompting for confirmation or showing error messages",
      "Most Similar TLDR Script": "rm -rf {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_102956: How to run a command in the background with a delay?"
      ],
      "Top-3 Scripts": [
        "ul_102956: [ -f /tmp/startdelay ] && sleep 30\n touch /tmp/startdelay\n ( sleep 30 ; rm /tmp/startdelay ) &\n [ -f /tmp/noautostart ] && exit 0\n start_app\n\nrm /tmp/startdelay"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "If there are multiple executables which match, display all",
      "Most Similar TLDR Script": "which -a {{executable}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24795377: Running a remote command through SSH but in the background"
      ],
      "Top-3 Scripts": [
        "so_24795377: -t      Force pseudo-tty allocation.  This can be used to execute arbitrary screen-based programs on a remote machine,\n             which can be very useful, e.g. when implementing menu services.  Multiple -t options force tty allocation, even if\n             ssh has no local tty."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Run library module as a script (terminates option list)",
      "Most Similar TLDR Script": "python -m {{module}} {{arguments}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1167718: Running a bash background process on Windows 10 without an open terminal"
      ],
      "Top-3 Scripts": [
        "su_1167718: wsl sleep 20 &\nwsl python -c 'import time; time.sleep(20);' &"
      ],
      "Explanations about Options": {
        "-c": "Specify the command to execute (see next section). This terminates the option list\n (following options are passed as arguments to the command)."
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Give [a]ll users rights to [r]ead and e[x]ecute",
      "Most Similar TLDR Script": "chmod a+rx {{file}}",
      "Most Similar NL2Bash Task": "Spawn a background screen session running myCommand",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "screen -d -m sh -c \"while :; do ./myCommand; done;\"\n",
          "command-options": {
            "screen": {
              "mpsum": "screen manager with VT100/ANSI terminal emulation",
              "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
              "-m": "causes screen to ignore the $STY environment variable. With \"screen -m\" creation of a\n new session is enforced, regardless whether screen is called from within another\n screen session or not. This flag has a special meaning in connection with the `-d'\n option:"
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            }
          },
          "TLDR_inform": {
            "screen": {
              "man1_screen_30545": "hold session open remot server\nmanag multipl window singl ssh connect detach insid screen kill detach screen kill current screen session reattach open screen show open screen session start new daemon log output screenlog x start new name screen session start new screen session"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1190025: Access Samba share from Windows 10 in VirtualBox"
      ],
      "Top-3 Scripts": [
        "su_1190025: chmod -R 770 yoursharefolder\nchcon -R -t samba_share_t yoursharefolder"
      ],
      "Explanations about Options": {
        "-R": "change files and directories recursively"
      }
    }
  ]
}