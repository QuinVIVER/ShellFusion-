{
  "Query": "How to use a shell command to only show the first column and last column in a text file?",
  "Answers": [
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62428959: Replace pattern from first column in file2 by pattern in second column in file2 within file1",
        "so_47277381: Joining one column from a file to another file based on matched value of first column in both",
        "so_17241985: bash print first to nth column in a line iteratively"
      ],
      "Top-3 Scripts": [
        "so_62428959: ",
        "so_47277381: join -1 1 -2 1 -t, -o 1.1,1.2,1.3,2.3 <(head -n 1 file1.csv && tail -n+2 file1.csv | sort -k1 ) <(head -n 1 file2.csv && tail -n+2 file2.csv | sort -k1 )",
        "so_17241985: for i in {2..5}; do\n    snp=$(head -n 1 smaller.txt | awk \"{print \\$$i}\")\n    echo \"$snp\"\ndone"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' lines in file",
      "Most Similar TLDR Script": "tail -n {{num}} {{file}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3854101: Add thousands of numbers stored in second 'column' in text files?",
        "so_62428959: Replace pattern from first column in file2 by pattern in second column in file2 within file1",
        "so_47277381: Joining one column from a file to another file based on matched value of first column in both"
      ],
      "Top-3 Scripts": [
        "so_3854101: find . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$F[1]; print \"$sum\\n\"' | tail -n 1",
        "so_62428959: ",
        "so_47277381: join -1 1 -2 1 -t, -o 1.1,1.2,1.3,2.3 <(head -n 1 file1.csv && tail -n+2 file1.csv | sort -k1 ) <(head -n 1 file2.csv && tail -n+2 file2.csv | sort -k1 )"
      ],
      "Explanations about Options": {
        "-n": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a text message. Note: quotes are optional",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\"",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_549651: Match first column of two files and Merge last column of File2 in File1 in linux",
        "so_70126480: convert a character from row to column using shell command",
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "ul_549651: echo '\\t'\n\necho -e '\\t'\n\necho \\t",
        "so_70126480: echo \"HELLO\" | awk -v FS= -v OFS='\\n' '{$1=$1}1'",
        "so_35661882: #!/bin/bash\ntabstop=$1\ncols=$(tput cols)\npaste <(echo \"$2\" | fold -sw$((tabstop-1))) <(echo \"$3\" | fold -sw$((cols-tabstop-1))) | expand -t$tabstop"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort the passwd file by the 3rd field, numerically",
      "Most Similar TLDR Script": "sort -t: -k 3n /etc/passwd",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_233693: Find the smallest numbers in the second column corresponding to index values in first column",
        "ul_280954: How do I sort on the first column every 4 lines in a file with a key in the second column",
        "so_47277381: Joining one column from a file to another file based on matched value of first column in both"
      ],
      "Top-3 Scripts": [
        "ul_233693: $ sort -nk2 file |  sort -u -k1,1\nApple 3\nBanana 1\nOrange 2",
        "ul_280954: $ paste -d'\\n' <(grep world1 file | sort -k2,2) <(grep world2 file | sort -k2,2) <(grep world3 file | sort -k2,2) <(grep world4 file | sort -k2,2)\nworld1.com           /randomkeygahjuh572/key639839\nworld2.com           /randomkey788gauh72/key63whjk\nworld3.com           /randomkey788gauh72/key63whjk\nworld4.com           /randomkey8998382/key6hh77686\nworld1.com           /randomkeyhueh34778/key67uuu77\nworld2.com           /randomkeyJJJJ1111/key63333\nworld3.com           /randomkey7HHHH0000/key6333355k\nworld4.com           /randomkeyhghgdh778/key67567",
        "so_47277381: join -1 1 -2 1 -t, -o 1.1,1.2,1.3,2.3 <(head -n 1 file1.csv && tail -n+2 file1.csv | sort -k1 ) <(head -n 1 file2.csv && tail -n+2 file2.csv | sort -k1 )"
      ],
      "Explanations about Options": {
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36909480: How to add a specific text to columns in a text file in Linux?",
        "ul_657350: Append data from first column to second column in csv file",
        "so_40450921: How to add specific columns to all text files in a directory in Linux?"
      ],
      "Top-3 Scripts": [
        "so_36909480: awk '{$1=$1\"000\"; $2=$2\"000\"; print}' input.txt",
        "ul_657350: awk -F\\, 'FNR==1 {print $1\",Email Address,\"$2\",\"$3} FNR!=1{print $1\",\"$1\"@xyz.com,\"$2\",\"$3}' input_file",
        "so_40450921: #!/bin/bash\npath=/prosjekt/tvs/QSexpt1_16K\n\njj=0;\nfor file in \"$path\"/*.lsf; do\n  awk \"{printf \\\"$jj\\\"; print}\" \"$file\" >> qq.txt\n  jj=$(($jj+1))\ndone;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Print the contents of a file to the standard output",
      "Most Similar TLDR Script": "cat {{file}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25297778: Parsing a CSV row into columns with the first entry in each row as the first entry in each column",
        "so_21874615: How to display the records in a text file with empty columns in Unix",
        "so_62428959: Replace pattern from first column in file2 by pattern in second column in file2 within file1"
      ],
      "Top-3 Scripts": [
        "so_25297778: $ awk -F, '{for(i=2;i<=NF;i++) print $1\",\"$i}' file > new_file\n$ cat new_file\nallendata,test@test.com\nallendata,test1@test.com  \nallendata2,test1@test.com\nallendata2,test@test.com\nallendata2,test3@test.com",
        "so_21874615: cat data | grep \"^|\\|||\\||$\"",
        "so_62428959: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the 2nd and 10th fields of each line, using a semicolon as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{;}}' -f{{2,10}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51657109: shell command to find values in column appearing more than \"twice\"",
        "so_54912228: How can I send the last column of the first line to standard output?"
      ],
      "Top-3 Scripts": [
        "so_51657109: cut -d \",\" -f 2 PPBondedFieldOver2NeedsFixing.csv | sort | awk '++A[$1]>2'",
        "so_54912228: head -1 file | cut -d'|' -f5\n\nhead -1 file | rev | cut -f1 -d'|' | rev"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Merge two files side by side, each in its column, using TAB as delimiter",
      "Most Similar TLDR Script": "paste {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56749770: I want to copy a column from file to be the first column in another file using Linux command line",
        "ul_280954: How do I sort on the first column every 4 lines in a file with a key in the second column",
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_56749770: $ paste -d' ' file1 file2\n1 2  5\n2 3  5\n2 3  5\n- -  -\n- -  -",
        "ul_280954: $ paste -d'\\n' <(grep world1 file) <(grep world2 file) <(grep world3 file) <(grep world4 file)\nworld1.com           /randomkeygahjuh572/key639839\nworld2.com           /randomkey788gauh72/key63whjk\nworld3.com           /randomkey788gauh72/key63whjk\nworld4.com           /randomkeyhghgdh778/key67567\nworld1.com           /randomkeyhueh34778/key67uuu77\nworld2.com           /randomkeyJJJJ1111/key63333\nworld3.com           /randomkey7HHHH0000/key6333355k\nworld4.com           /randomkey8998382/key6hh77686\n\npaste -d'\\n' <(grep world1 file) <(grep world2 file) <(grep world3 file) <(grep world4 file)\n\npaste -d'\\n' file1 file2 file3 file3.\n\n$ paste -d'\\n' <(grep world1 file | sort -k2,2) <(grep world2 file | sort -k2,2) <(grep world3 file | sort -k2,2) <(grep world4 file | sort -k2,2)\nworld1.com           /randomkeygahjuh572/key639839\nworld2.com           /randomkey788gauh72/key63whjk\nworld3.com           /randomkey788gauh72/key63whjk\nworld4.com           /randomkey8998382/key6hh77686\nworld1.com           /randomkeyhueh34778/key67uuu77\nworld2.com           /randomkeyJJJJ1111/key63333\nworld3.com           /randomkey7HHHH0000/key6333355k\nworld4.com           /randomkeyhghgdh778/key67567",
        "so_35661882: #!/bin/bash\ntabstop=$1\ncols=$(tput cols)\npaste <(echo \"$2\" | fold -sw$((tabstop-1))) <(echo \"$3\" | fold -sw$((cols-tabstop-1))) | expand -t$tabstop"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40450921: How to add specific columns to all text files in a directory in Linux?",
        "so_16944777: Awk subtract last element of 6th Column to each value in column 5",
        "so_25297778: Parsing a CSV row into columns with the first entry in each row as the first entry in each column"
      ],
      "Top-3 Scripts": [
        "so_40450921: #!/bin/bash\npath=/prosjekt/tvs/QSexpt1_16K\n\njj=0;\nfor file in \"$path\"/*.lsf; do\n  awk \"{printf \\\"$jj\\\"; print}\" \"$file\" >> qq.txt\n  jj=$(($jj+1))\ndone;",
        "so_16944777: ",
        "so_25297778: $ awk -F, '{for(i=2;i<=NF;i++) print $1\",\"$i}' file > new_file\n$ cat new_file\nallendata,test@test.com\nallendata,test1@test.com  \nallendata2,test1@test.com\nallendata2,test@test.com\nallendata2,test3@test.com"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files on the first (default) field",
      "Most Similar TLDR Script": "join {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_549651: Match first column of two files and Merge last column of File2 in File1 in linux",
        "so_47277381: Joining one column from a file to another file based on matched value of first column in both"
      ],
      "Top-3 Scripts": [
        "ul_549651: join -t $'\\t'",
        "so_47277381: join -1 1 -2 1 -t, -o 1.1,1.2,1.3,2.3 <(head -n 1 file1.csv && tail -n+2 file1.csv | sort -k1 ) <(head -n 1 file2.csv && tail -n+2 file2.csv | sort -k1 )"
      ],
      "Explanations about Options": {
        "-1": "join on this FIELD of file 1",
        "-t": "CHAR\n use CHAR as input and output field separator",
        "-o": "FORMAT\n obey FORMAT while constructing output line",
        "-2": "join on this FIELD of file 2"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24349187: Shell script for append string to first of each row in column 6 of csv file",
        "so_40450921: How to add specific columns to all text files in a directory in Linux?",
        "so_63739732: In bash how to move row field to column in a text file"
      ],
      "Top-3 Scripts": [
        "so_24349187: ",
        "so_40450921: #!/bin/bash\npath=/prosjekt/tvs/QSexpt1_16K\n\njj=0;\nfor file in \"$path\"/*.lsf; do\n  awk \"{printf \\\"$jj\\\"; print}\" \"$file\" >> qq.txt\n  jj=$(($jj+1))\ndone;",
        "so_63739732: awk -v OFS='\\t' -v RS= '\n((n = split($0, a, / {2,}| *\\n/)) % 2) == 0 {\n   # print header\n   if (NR==1)\n      for (i=1; i<=n; i+=2)\n         printf \"%s\", a[i] (i < n-1 ? OFS : ORS)\n   # print all records\n   for (i=2; i<=n; i+=2)\n      printf \"%s\", a[i] (i < n ? OFS : ORS)\n}' reclamiTestFile.txt | column -t -s $'\\t'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_21874615: How to display the records in a text file with empty columns in Unix",
        "ul_280954: How do I sort on the first column every 4 lines in a file with a key in the second column"
      ],
      "Top-3 Scripts": [
        "so_21874615: cat data | grep \"^|\\|||\\||$\"",
        "ul_280954: $ paste -d'\\n' <(grep world1 file) <(grep world2 file) <(grep world3 file) <(grep world4 file)\nworld1.com           /randomkeygahjuh572/key639839\nworld2.com           /randomkey788gauh72/key63whjk\nworld3.com           /randomkey788gauh72/key63whjk\nworld4.com           /randomkeyhghgdh778/key67567\nworld1.com           /randomkeyhueh34778/key67uuu77\nworld2.com           /randomkeyJJJJ1111/key63333\nworld3.com           /randomkey7HHHH0000/key6333355k\nworld4.com           /randomkey8998382/key6hh77686\n\npaste -d'\\n' <(grep world1 file) <(grep world2 file) <(grep world3 file) <(grep world4 file)\n\n$ grep world4 file\nworld4.com           /randomkeyhghgdh778/key67567\nworld4.com           /randomkey8998382/key6hh77686\n\n$ paste -d'\\n' <(grep world1 file | sort -k2,2) <(grep world2 file | sort -k2,2) <(grep world3 file | sort -k2,2) <(grep world4 file | sort -k2,2)\nworld1.com           /randomkeygahjuh572/key639839\nworld2.com           /randomkey788gauh72/key63whjk\nworld3.com           /randomkey788gauh72/key63whjk\nworld4.com           /randomkey8998382/key6hh77686\nworld1.com           /randomkeyhueh34778/key67uuu77\nworld2.com           /randomkeyJJJJ1111/key63333\nworld3.com           /randomkey7HHHH0000/key6333355k\nworld4.com           /randomkeyhghgdh778/key67567"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24349187: Shell script for append string to first of each row in column 6 of csv file",
        "so_17241985: bash print first to nth column in a line iteratively"
      ],
      "Top-3 Scripts": [
        "so_24349187: read -a",
        "so_17241985: read -a header < smaller.txt\n\nread -a header < smaller.txt\nfor snp in \"${header[@]:1}\"; do\n    echo \"$snp\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51642765: How to change date format ONLY in first column in .csv file using sed in shell",
        "so_22228924: How to use sed to remove all lines until first match in first column?",
        "so_55387867: How to convert the first letter of the nth column of a csv file to uppercase?"
      ],
      "Top-3 Scripts": [
        "so_51642765: sed 's/\\(....\\)-\\(..\\)-\\(..\\)/\\2\\/\\3\\/\\1/'\n\nsed -r 's_(....)-(..)-(..)_\\2/\\3/\\1_'",
        "so_22228924: sed -n '/^Test/,$p' oldfile > newfile",
        "so_55387867: sed 's/[^\",]\\+/\\L\\u&/12' file"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a regular expression on `stdin`, printing out the first capture group for each line",
      "Most Similar TLDR Script": "cat {{path/to/input_file}} | perl -nle 'if (/.*({{foo}}).*/) {print \"$1\"; last;}'",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3854101: Add thousands of numbers stored in second 'column' in text files?",
        "ul_233693: Find the smallest numbers in the second column corresponding to index values in first column",
        "so_46546890: How to move first column to last column in unix?"
      ],
      "Top-3 Scripts": [
        "so_3854101: find . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$S[1]; print \"$sum\\n\"'\n\nfind . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$F[1]; print \"$sum\\n\"' | tail -n 1",
        "ul_233693: $ perl -lane '$k{$F[0]}//=$F[1]; $k{$F[0]}=$F[1] if $F[1]<$k{$F[0]}; \n              END{print \"$_ $k{$_}\" for keys(%k)}' file \nOrange 2\nApple 3\nBanana 1",
        "so_46546890: perl -lane 'push @F, shift @F; print \"@F\"' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_657350: Append data from first column to second column in csv file",
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_3854101: Add thousands of numbers stored in second 'column' in text files?"
      ],
      "Top-3 Scripts": [
        "ul_657350: awk -F\\, 'FNR==1 {print $1\",Email Address,\"$2\",\"$3} FNR!=1{print $1\",\"$1\"@xyz.com,\"$2\",\"$3}' input_file",
        "so_60069707: ",
        "so_3854101: find . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$S[1]; print \"$sum\\n\"'\n\nfind . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$F[1]; print \"$sum\\n\"' | tail -n 1\n\nfind . -type f -printf '%p %s\\n' | awk '{ sum+=$2}; END { print sum}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24349187: Shell script for append string to first of each row in column 6 of csv file",
        "so_14095011: Using awk to align columns in text file?"
      ],
      "Top-3 Scripts": [
        "so_24349187: ",
        "so_14095011: $ head -1 file; tail -n+2 file | rev | column -t | rev\ntesting speed of encryption\ntest   0   (64  bit  key,    16  byte  blocks):  2250265  operations  in  1  seconds  (36004240  bytes)\ntest   1  (128  bit  key,    64  byte  blocks):   879149  operations  in  1  seconds  (56265536  bytes)\ntest   2  (128  bit  key,   256  byte  blocks):   258978  operations  in  1  seconds  (66298368  bytes)\ntest   3  (128  bit  key,  1024  byte  blocks):    68218  operations  in  1  seconds  (69855232  bytes)\ntest   4  (128  bit  key,  8192  byte  blocks):     8614  operations  in  1  seconds  (70565888  bytes)\ntest  10  (256  bit  key,    16  byte  blocks):  1790881  operations  in  1  seconds   (3654096  bytes)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_51440378: How to swap the first line with last line in a text file using SED/AWK"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_51440378: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_35661882: ./twocolumns.sh 20 \"myscript.sh\" \"Execute without arguments to get a menu of options defining the environment.\"\n./twocolumns.sh 20 \"myscript.sh [url]\" \"Add [url] to specify desired server environment with which to run the script.\"\n./twocolumns.sh 20 \"\" \"ex: http://the.server.domain.tld:port/\"\n\nmyscript.sh         Execute without arguments to get a menu of options \n                    defining the environment.\nmyscript.sh [url]   Add [url] to specify desired server environment with which \n                    to run the script.\n                    ex: http://the.server.domain.tld:port/\n\nmyscript.sh         Execute without arguments to get a \n                    menu of options defining the \n                    environment.\nmyscript.sh [url]   Add [url] to specify desired server \n                    environment with which to run the \n                    script.\n                    ex: http://the.server.domain.tld:port/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse the text string \"hello\"",
      "Most Similar TLDR Script": "echo \"hello\" | rev",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14095011: Using awk to align columns in text file?",
        "so_54912228: How can I send the last column of the first line to standard output?"
      ],
      "Top-3 Scripts": [
        "so_14095011: $ head -1 file; tail -n+2 file | rev | column -t | rev\ntesting speed of encryption\ntest   0   (64  bit  key,    16  byte  blocks):  2250265  operations  in  1  seconds  (36004240  bytes)\ntest   1  (128  bit  key,    64  byte  blocks):   879149  operations  in  1  seconds  (56265536  bytes)\ntest   2  (128  bit  key,   256  byte  blocks):   258978  operations  in  1  seconds  (66298368  bytes)\ntest   3  (128  bit  key,  1024  byte  blocks):    68218  operations  in  1  seconds  (69855232  bytes)\ntest   4  (128  bit  key,  8192  byte  blocks):     8614  operations  in  1  seconds  (70565888  bytes)\ntest  10  (256  bit  key,    16  byte  blocks):  1790881  operations  in  1  seconds   (3654096  bytes)",
        "so_54912228: head -1 file | rev | cut -f1 -d'|' | rev"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fold",
      "MP Summary": "wrap each input line to fit in specified width",
      "Most Similar TLDR Task": "Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped)",
      "Most Similar TLDR Script": "fold -w5 -s {{file}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: #!/bin/bash\ntabstop=$1\ncols=$(tput cols)\npaste <(echo \"$2\" | fold -sw$((tabstop-1))) <(echo \"$3\" | fold -sw$((cols-tabstop-1))) | expand -t$tabstop"
      ],
      "Explanations about Options": {
        "-w": "use WIDTH columns instead of 80",
        "-s": "break at spaces"
      }
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24349187: Shell script for append string to first of each row in column 6 of csv file"
      ],
      "Top-3 Scripts": [
        "so_24349187: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Fill columns before filling rows",
      "Most Similar TLDR Script": "printf \"header1\\nbar\\nfoobar\\n\" | column -c {{30}} -x",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63739732: In bash how to move row field to column in a text file",
        "so_14095011: Using awk to align columns in text file?",
        "so_44042255: how to append the text in the first column to all columns linux"
      ],
      "Top-3 Scripts": [
        "so_63739732: awk -v OFS='\\t' -v RS= '\n((n = split($0, a, / {2,}| *\\n/)) % 2) == 0 {\n   # print header\n   if (NR==1)\n      for (i=1; i<=n; i+=2)\n         printf \"%s\", a[i] (i < n-1 ? OFS : ORS)\n   # print all records\n   for (i=2; i<=n; i+=2)\n      printf \"%s\", a[i] (i < n ? OFS : ORS)\n}' reclamiTestFile.txt | column -t -s $'\\t'",
        "so_14095011: $ head -1 file; tail -n+2 file | rev | column -t | rev\ntesting speed of encryption\ntest   0   (64  bit  key,    16  byte  blocks):  2250265  operations  in  1  seconds  (36004240  bytes)\ntest   1  (128  bit  key,    64  byte  blocks):   879149  operations  in  1  seconds  (56265536  bytes)\ntest   2  (128  bit  key,   256  byte  blocks):   258978  operations  in  1  seconds  (66298368  bytes)\ntest   3  (128  bit  key,  1024  byte  blocks):    68218  operations  in  1  seconds  (69855232  bytes)\ntest   4  (128  bit  key,  8192  byte  blocks):     8614  operations  in  1  seconds  (70565888  bytes)\ntest  10  (256  bit  key,    16  byte  blocks):  1790881  operations  in  1  seconds   (3654096  bytes)",
        "so_44042255: column -tx\n\nawk '{suffix=substr($1,1,length($1)-1); for(i=2;i<=NF;i++) $i=$i\"_\"suffix}1' file | column -tx"
      ],
      "Explanations about Options": {
        "-t": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays.",
        "-s": "Specify a set of characters to be used to delimit columns for the -t option.",
        "-x": "Fill columns before filling rows."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a path pattern",
      "Most Similar TLDR Script": "find {{root_path}} -path '{{**/lib/**/*.ext}}'",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3854101: Add thousands of numbers stored in second 'column' in text files?"
      ],
      "Top-3 Scripts": [
        "so_3854101: find . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$S[1]; print \"$sum\\n\"'\n\nfind . -type f -printf '%p %s\\n' | perl -n -a -e '$sum+=$F[1]; print \"$sum\\n\"' | tail -n 1\n\nfind . -type f -printf '%p %s\\n' | awk '{ sum+=$2}; END { print sum}'"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:"
      }
    },
    {
      "Command": "expand",
      "MP Summary": "convert tabs to spaces",
      "Most Similar TLDR Task": "Convert tabs in each file to spaces, writing to standard output",
      "Most Similar TLDR Script": "expand {{file}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: #!/bin/bash\ntabstop=$1\ncols=$(tput cols)\npaste <(echo \"$2\" | fold -sw$((tabstop-1))) <(echo \"$3\" | fold -sw$((cols-tabstop-1))) | expand -t$tabstop"
      ],
      "Explanations about Options": {
        "-t": "have tabs N characters apart, not 8"
      }
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Format output width to a minimum of 4 digits padding with zeros as necessary",
      "Most Similar TLDR Script": "seq -f \"%04g\" 5 3 20",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46768042: Printing a column to a text using bash"
      ],
      "Top-3 Scripts": [
        "so_46768042: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file, each split having 10 lines (except the last split)",
      "Most Similar TLDR Script": "split -l {{10}} {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63739732: In bash how to move row field to column in a text file"
      ],
      "Top-3 Scripts": [
        "so_63739732: awk -v OFS='\\t' -v RS= '\n((n = split($0, a, / {2,}| *\\n/)) % 2) == 0 {\n   # print header\n   if (NR==1)\n      for (i=1; i<=n; i+=2)\n         printf \"%s\", a[i] (i < n-1 ? OFS : ORS)\n   # print all records\n   for (i=2; i<=n; i+=2)\n      printf \"%s\", a[i] (i < n ? OFS : ORS)\n}' reclamiTestFile.txt | column -t -s $'\\t'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "named",
      "MP Summary": "Internet domain name server",
      "Most Similar TLDR Task": "Read a custom configuration file",
      "Most Similar TLDR Script": "named -c {{path/to/named.conf}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_51440378: How to swap the first line with last line in a text file using SED/AWK"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_51440378: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Forcibly remove a directory, without prompting for confirmation or showing error messages",
      "Most Similar TLDR Script": "rm -rf {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24349187: Shell script for append string to first of each row in column 6 of csv file"
      ],
      "Top-3 Scripts": [
        "so_24349187: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tput",
      "MP Summary": "initialize a terminal or query terminfo database",
      "Most Similar TLDR Task": "Show number of columns, lines, or colors",
      "Most Similar TLDR Script": "tput {{cols|lines|colors}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: #!/bin/bash\ntabstop=$1\ncols=$(tput cols)\npaste <(echo \"$2\" | fold -sw$((tabstop-1))) <(echo \"$3\" | fold -sw$((cols-tabstop-1))) | expand -t$tabstop"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_65965820: Should I use the first and/or last slash in commands in bash?"
      ],
      "Top-3 Scripts": [
        "so_65965820: cd etc\n\ncd /etc\n\ncd etc/\n\ncd /etc/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24349187: Shell script for append string to first of each row in column 6 of csv file"
      ],
      "Top-3 Scripts": [
        "so_24349187: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dos2unix",
      "MP Summary": "DOS/Mac to Unix and vice versa text file format converter",
      "Most Similar TLDR Task": "Change the line endings of a file",
      "Most Similar TLDR Script": "dos2unix {{filename}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63404140: using awk in command line to add column to end of csv"
      ],
      "Top-3 Scripts": [
        "so_63404140: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17241985: bash print first to nth column in a line iteratively"
      ],
      "Top-3 Scripts": [
        "so_17241985: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sum",
      "MP Summary": "checksum and count the blocks in a file",
      "Most Similar TLDR Task": "Compute a checksum with BSD-compatible algorithm and 1024-byte blocks",
      "Most Similar TLDR Script": "sum {{file}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_317001: Fast command to calculate the mean of a column in a text file in bash"
      ],
      "Top-3 Scripts": [
        "su_317001: awk -F'\\t' '{ sum += $1 } END { print sum / NR }'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell"
      ],
      "Top-3 Scripts": [
        "so_60069707: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_51440378: How to swap the first line with last line in a text file using SED/AWK"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_51440378: awk -v from=1 -v to=6 'FNR==from{source=$0;next} FNR==to{target=$0;next} {val=val?val ORS $0:$0} END{print target ORS val ORS source}' Input_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_51440378: How to swap the first line with last line in a text file using SED/AWK"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_51440378: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "be",
      "MP Summary": "distributed bug tracking from the command line",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_51440378: How to swap the first line with last line in a text file using SED/AWK"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_51440378: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_56749770: I want to copy a column from file to be the first column in another file using Linux command line",
        "ul_280954: How do I sort on the first column every 4 lines in a file with a key in the second column"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_56749770: $ paste -d' ' file1 file2\n1 2  5\n2 3  5\n2 3  5\n- -  -\n- -  -",
        "ul_280954: paste -d'\\n' file1 file2 file3 file3."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "next",
      "MP Summary": "show the next nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_68311778: grep few columns from a file to another file in shell",
        "so_62428959: Replace pattern from first column in file2 by pattern in second column in file2 within file1"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_68311778: awk '\n    BEGIN  { FS=\"[|][~][|]\"; OFS=\"|~|\" }\n    FNR==1 { for(i=1;i<=NF;i++) arr[$i]=i; next } \n           { print $arr[\"mudId\"], $arr[\"mudType\"], $arr[\"mudDate\"] }\n' file\n\n$ awk '\n>     BEGIN  { FS=\"[|][~][|]\"; OFS=\"|~|\" }\n>     FNR==1 { for(i=1;i<=NF;i++) arr[$i]=i; next }\n>            { print $arr[\"mudId\"], $arr[\"mudType\"], $arr[\"mudDate\"] }\n> ' file\n100|~|Balance|~|21-09-2020\n101|~|Clone|~|11-07-2020\n102|~|Ledger|~|12-06-2019",
        "so_62428959: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "present",
      "MP Summary": "updates your Go import lines",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell"
      ],
      "Top-3 Scripts": [
        "so_60069707: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60069707: Replace the first column in a file with another column in different file using shell",
        "so_35661882: printing text in a column in bash script",
        "so_51440378: How to swap the first line with last line in a text file using SED/AWK"
      ],
      "Top-3 Scripts": [
        "so_60069707: ",
        "so_35661882: ./twocolumns.sh 20 \"myscript.sh\" \"Execute without arguments to get a menu of options defining the environment.\"\n./twocolumns.sh 20 \"myscript.sh [url]\" \"Add [url] to specify desired server environment with which to run the script.\"\n./twocolumns.sh 20 \"\" \"ex: http://the.server.domain.tld:port/\"\n\nmyscript.sh         Execute without arguments to get a menu of options \n                    defining the environment.\nmyscript.sh [url]   Add [url] to specify desired server environment with which \n                    to run the script.\n                    ex: http://the.server.domain.tld:port/\n\nmyscript.sh         Execute without arguments to get a \n                    menu of options defining the \n                    environment.\nmyscript.sh [url]   Add [url] to specify desired server \n                    environment with which to run the \n                    script.\n                    ex: http://the.server.domain.tld:port/",
        "so_51440378: awk -v from=1 -v to=6 'FNR==from{source=$0;next} FNR==to{target=$0;next} {val=val?val ORS $0:$0} END{print target ORS val ORS source}' Input_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_21874615: How to display the records in a text file with empty columns in Unix"
      ],
      "Top-3 Scripts": [
        "so_21874615: |void|bar\nfoo|void|bar\nfoo||bar\nfoo|void|\n\n|void|bar\nfoo||bar\nfoo|void|"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "NF",
      "MP Summary": "awk and print a column (based on the name of the program, 1-9)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_638058: Adding a string to every column in a line- excluding the first column, variable line length, the string is contained in the first column of each line",
        "so_42213594: Taking x number of last columns from a file in awk"
      ],
      "Top-3 Scripts": [
        "ul_638058: ",
        "so_42213594: $NF"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "get",
      "MP Summary": "symbolic link to as_run command",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: ./twocolumns.sh 20 \"myscript.sh\" \"Execute without arguments to get a menu of options defining the environment.\"\n./twocolumns.sh 20 \"myscript.sh [url]\" \"Add [url] to specify desired server environment with which to run the script.\"\n./twocolumns.sh 20 \"\" \"ex: http://the.server.domain.tld:port/\"\n\nmyscript.sh         Execute without arguments to get a menu of options \n                    defining the environment.\nmyscript.sh [url]   Add [url] to specify desired server environment with which \n                    to run the script.\n                    ex: http://the.server.domain.tld:port/\n\nmyscript.sh         Execute without arguments to get a \n                    menu of options defining the \n                    environment.\nmyscript.sh [url]   Add [url] to specify desired server \n                    environment with which to run the \n                    script.\n                    ex: http://the.server.domain.tld:port/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "specify",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: ./twocolumns.sh 20 \"myscript.sh\" \"Execute without arguments to get a menu of options defining the environment.\"\n./twocolumns.sh 20 \"myscript.sh [url]\" \"Add [url] to specify desired server environment with which to run the script.\"\n./twocolumns.sh 20 \"\" \"ex: http://the.server.domain.tld:port/\"\n\nmyscript.sh         Execute without arguments to get a menu of options \n                    defining the environment.\nmyscript.sh [url]   Add [url] to specify desired server environment with which \n                    to run the script.\n                    ex: http://the.server.domain.tld:port/\n\nmyscript.sh         Execute without arguments to get a \n                    menu of options defining the \n                    environment.\nmyscript.sh [url]   Add [url] to specify desired server \n                    environment with which to run the \n                    script.\n                    ex: http://the.server.domain.tld:port/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "server",
      "MP Summary": "server has been renamed to rspserver in rsplib-3.0.0!",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: ./twocolumns.sh 20 \"myscript.sh\" \"Execute without arguments to get a menu of options defining the environment.\"\n./twocolumns.sh 20 \"myscript.sh [url]\" \"Add [url] to specify desired server environment with which to run the script.\"\n./twocolumns.sh 20 \"\" \"ex: http://the.server.domain.tld:port/\"\n\nmyscript.sh         Execute without arguments to get a menu of options \n                    defining the environment.\nmyscript.sh [url]   Add [url] to specify desired server environment with which \n                    to run the script.\n                    ex: http://the.server.domain.tld:port/\n\nmyscript.sh         Execute without arguments to get a \n                    menu of options defining the \n                    environment.\nmyscript.sh [url]   Add [url] to specify desired server \n                    environment with which to run the \n                    script.\n                    ex: http://the.server.domain.tld:port/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "run",
      "MP Summary": "find, execute, and log the results of tests",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35661882: printing text in a column in bash script"
      ],
      "Top-3 Scripts": [
        "so_35661882: ./twocolumns.sh 20 \"myscript.sh\" \"Execute without arguments to get a menu of options defining the environment.\"\n./twocolumns.sh 20 \"myscript.sh [url]\" \"Add [url] to specify desired server environment with which to run the script.\"\n./twocolumns.sh 20 \"\" \"ex: http://the.server.domain.tld:port/\"\n\nmyscript.sh         Execute without arguments to get a menu of options \n                    defining the environment.\nmyscript.sh [url]   Add [url] to specify desired server environment with which \n                    to run the script.\n                    ex: http://the.server.domain.tld:port/\n\nmyscript.sh         Execute without arguments to get a \n                    menu of options defining the \n                    environment.\nmyscript.sh [url]   Add [url] to specify desired server \n                    environment with which to run the \n                    script.\n                    ex: http://the.server.domain.tld:port/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "match",
      "MP Summary": "Match strings against glob patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sort file | uniq | cut -f1 -d' ' | uniq -c | rev\n",
          "command-options": {
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "file": {
              "mpsum": "determine file type"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            },
            "cut": {
              "mpsum": "remove sections from each line of files"
            },
            "rev": {
              "mpsum": "reverse lines characterwise"
            }
          },
          "TLDR_inform": {
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "rev": {
              "man1_rev_29232": "revers line text revers entir file print stdout revers text string hello"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62428959: Replace pattern from first column in file2 by pattern in second column in file2 within file1"
      ],
      "Top-3 Scripts": [
        "so_62428959: match()"
      ],
      "Explanations about Options": {}
    }
  ]
}