{
  "Query": "How to find uptime of a linux process",
  "Answers": [
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Do not show any idle or zombie processes",
      "Most Similar TLDR Script": "top -i",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_180336: How to find the Process ID (PID) of a running terminal program?",
        "au_1072757: How to find cause of zombie process?",
        "su_1415471: dose tune of the kernel parameters can help to decrease the queue of CPU ( low cpu load average )"
      ],
      "Top-3 Scripts": [
        "au_180336: ",
        "au_1072757: ",
        "su_1415471: top -d1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Signal the operating system to immediately terminate a program (which gets no chance to capture the signal)",
      "Most Similar TLDR Script": "kill -{{9|KILL}} {{process_id}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_180336: How to find the Process ID (PID) of a running terminal program?",
        "so_897321: How can I kill all processes of a program?",
        "so_1908610: How to get process ID of background process?"
      ],
      "Top-3 Scripts": [
        "au_180336: kill pid\n\nkill -HUP pid\n\nkill -KILL pid\n\nkill -9 pid",
        "so_897321: kill()",
        "so_1908610: foo &\nFOO_PID=$!\n# do other stuff\nkill $FOO_PID"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38368927: finding the process numbers of a multithread application",
        "so_19853551: Find the process id of the process name",
        "su_545245: Find pid of a certain ssh instance"
      ],
      "Top-3 Scripts": [
        "so_38368927: pgrep -P $$",
        "so_19853551: pgrep bash",
        "su_545245: pgrep -f 'ssh .* -nNCTR'"
      ],
      "Explanations about Options": {
        "-f": "The pattern is normally only matched against the process name. When -f is set, the\n full command line is used.",
        "-P": "Only match processes whose parent process ID is listed."
      }
    },
    {
      "Command": "pstree",
      "MP Summary": "display a tree of processes",
      "Most Similar TLDR Task": "Display all process trees rooted at processes owned by specified user",
      "Most Similar TLDR Script": "pstree {{user}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_137462: How do you find the parent process of a zombie process?",
        "su_1204006: How to find ancestor chain of a process?",
        "au_512871: Find children of the process"
      ],
      "Top-3 Scripts": [
        "su_137462: $ pstree -p dharris\nscreen(17796)\u2500\u252c\u2500bash(4467)\u2500\u2500\u2500emacs(4498)\u2500\u2500\u2500sh(3344)\u2500\u2500\u2500sh(3345)\n              \u251c\u2500bash(4532)\u2500\u2500\u2500su(31037)\u2500\u2500\u2500bash(31041)\n              \u251c\u2500bash(4916)\u2500\u2500\u2500pstree(26456)\n              \u251c\u2500bash(13547)\u2500\u2500\u2500su(20442)\u2500\u2500\u2500bash(20443)\n              \u2514\u2500bash(17797)\n\nsshd(25813)\u2500\u2500\u2500bash(25817)\u2500\u2500\u2500screen(25870)",
        "su_1204006: $ pstree -s 5698 \ninit\u2500\u2500\u2500mdm\u2500\u2500\u2500mdm\u2500\u2500\u2500init\u2500\u2500\u2500at-spi-bus-laun\u2500\u2500\u2500dbus-daemon\n\nmint@mint ~ $ pstree -s -a 5698 \ninit\n  \u2514\u2500mdm\n      \u2514\u2500mdm\n          \u2514\u2500init --user\n              \u2514\u2500at-spi-bus-laun\n                  \u2514\u2500dbus-daemon --config-file=/etc/at-spi2/accessibility.conf ...\n\n$ pstree -s -p -a -G -l 5698 \ninit,1\n  \u2514\u2500mdm,1994\n      \u2514\u2500mdm,5358\n          \u2514\u2500init,5379 --user\n              \u2514\u2500at-spi-bus-laun,5691\n                  \u2514\u2500dbus-daemon,5698 --config-file=/etc/at-spi2/accessibility.conf --nofork --print-address 3",
        "au_512871: $ pstree -p 602\nudisksd(602)-+-{cleanup}(607)\n             |-{gdbus}(605)\n             |-{gmain}(603)\n             `-{probing-thread}(606)"
      ],
      "Explanations about Options": {
        "-p": "Show PIDs. PIDs are shown as decimal numbers in parentheses after each process\n name. -p implicitly disables compaction.",
        "-s": "Show parent processes of the specified process.",
        "-a": "Show command line arguments. If the command line of a process is swapped out, that\n process is shown in parentheses. -a implicitly disables compaction for processes\n but not threads.",
        "-G": "Use VT100 line drawing characters.",
        "-l": "Display long lines. By default, lines are truncated to either the COLUMNS\n environment variable or the display width. If neither of these methods work, the\n default of 132 columns is used."
      }
    },
    {
      "Command": "pidof",
      "MP Summary": "find the process ID of a running program.",
      "Most Similar TLDR Task": "List a single process ID with given name",
      "Most Similar TLDR Script": "pidof -s {{bash}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25661081: How to find a PID of a process whose name I don't know exactly?",
        "ul_251353: How do I find the PID of a particular program?"
      ],
      "Top-3 Scripts": [
        "so_25661081: pidof $(ps -A | grep \"net*\")",
        "ul_251353: pidof <process_name> | tr '\\ ' ','"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "Sort processes by memory consumption",
      "Most Similar TLDR Script": "ps --sort size",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38090621: Command to find Linux terminal of the process",
        "su_137462: How do you find the parent process of a zombie process?",
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)"
      ],
      "Top-3 Scripts": [
        "so_38090621: ps -o tty -p $pid",
        "su_137462: $ ps l\nF   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND\n0   508  3344  4498  18   0   2452  1236 wait   Ss   pts/12     0:00 /bin/sh\n0   508  4467 17796  15   0   4664  1572 wait   Ss   pts/5      0:00 -/bin/bash\n0   508  4498  4467  15   0  23032 15108 -      S+   pts/5      2:20 emacs -nw\n0   508  4532 17796  15   0   4532  1464 wait   Ss   pts/13     0:00 -/bin/bash\n0   508  4916 17796  15   0   4664  1648 wait   Ss   pts/7      0:01 -/bin/bash",
        "so_35125153: ps -ef"
      ],
      "Explanations about Options": {
        "-e": "Select all processes. Identical to -A.",
        "-f": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm."
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_137462: How do you find the parent process of a zombie process?",
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)",
        "so_19853551: Find the process id of the process name"
      ],
      "Top-3 Scripts": [
        "su_137462: $ ps l\nF   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND\n0   508  3344  4498  18   0   2452  1236 wait   Ss   pts/12     0:00 /bin/sh\n0   508  4467 17796  15   0   4664  1572 wait   Ss   pts/5      0:00 -/bin/bash\n0   508  4498  4467  15   0  23032 15108 -      S+   pts/5      2:20 emacs -nw\n0   508  4532 17796  15   0   4532  1464 wait   Ss   pts/13     0:00 -/bin/bash\n0   508  4916 17796  15   0   4664  1648 wait   Ss   pts/7      0:01 -/bin/bash",
        "so_35125153: ",
        "so_19853551: pgrep bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uptime",
      "MP Summary": "Tell how long the system has been running.",
      "Most Similar TLDR Task": "Print current time, uptime, number of logged-in users and other information",
      "Most Similar TLDR Script": "uptime",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_524554: Fix the output of uptime",
        "tldr_4118: Print current time, uptime, number of logged-in users and other information",
        "so_28045009: Checking UPTIME of remote server in Powershell"
      ],
      "Top-3 Scripts": [
        "ul_524554: rest=\"$(uptime | perl -npe'{s/(.*,\\s+)(\\d+\\s+user)/$2/}')\"\n\nprintf \"%d(days), %02d:%02d:%02d(hms), %s\\n\" $days $hr $min $sec \"$rest\"\n\n$ ./uptime.bash\n10(days), 02:45:06(hms), 1 user,  load average: 0.02, 0.03, 0.04\n$ uptime\n 01:02:10 up 10 days,  2:45,  1 user,  load average: 0.02, 0.03, 0.04",
        "tldr_4118: ",
        "so_28045009: $uptime\n\n$lastboottime = (Get-WMIObject -Class Win32_OperatingSystem -ComputerName     $server -Credential $altcreds -ErrorAction SilentlyContinue).LastBootUpTime\nIf($lastboottime){\n    $sysuptime = (Get-Date) - [System.Management.ManagementDateTimeconverter]::ToDateTime($lastboottime)\n    $uptime = \"   UPTIME           :    $($sysuptime.days) Days, $($sysuptime.hours) Hours, $($sysuptime.minutes) Minutes, $($sysuptime.seconds) Seconds\"\n} Else {\n    $uptime = \"   UPTIME           : Unable to determine for host $server\"\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Most Similar TLDR Task": "Force kill a process",
      "Most Similar TLDR Script": "killall -KILL {{process_name}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_897321: How can I kill all processes of a program?",
        "su_152514: Killing all processes of current user"
      ],
      "Top-3 Scripts": [
        "so_897321: ",
        "su_152514: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fuser",
      "MP Summary": "identify processes using files or sockets",
      "Most Similar TLDR Task": "Find which processes are accessing a file or directory",
      "Most Similar TLDR Script": "fuser {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23154547: Get history command of a process"
      ],
      "Top-3 Scripts": [
        "so_23154547: fuser - identify processes using files or sockets\n\nfuser filename"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
      "Most Similar TLDR Script": "wait {{pid}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_137462: How do you find the parent process of a zombie process?",
        "su_1415471: dose tune of the kernel parameters can help to decrease the queue of CPU ( low cpu load average )"
      ],
      "Top-3 Scripts": [
        "su_137462: $ ps l\nF   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND\n0   508  3344  4498  18   0   2452  1236 wait   Ss   pts/12     0:00 /bin/sh\n0   508  4467 17796  15   0   4664  1572 wait   Ss   pts/5      0:00 -/bin/bash\n0   508  4498  4467  15   0  23032 15108 -      S+   pts/5      2:20 emacs -nw\n0   508  4532 17796  15   0   4532  1464 wait   Ss   pts/13     0:00 -/bin/bash\n0   508  4916 17796  15   0   4664  1648 wait   Ss   pts/7      0:01 -/bin/bash",
        "su_1415471: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_137462: How do you find the parent process of a zombie process?",
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)",
        "au_180336: How to find the Process ID (PID) of a running terminal program?"
      ],
      "Top-3 Scripts": [
        "su_137462: $ ps l\nF   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND\n0   508  3344  4498  18   0   2452  1236 wait   Ss   pts/12     0:00 /bin/sh\n0   508  4467 17796  15   0   4664  1572 wait   Ss   pts/5      0:00 -/bin/bash\n0   508  4498  4467  15   0  23032 15108 -      S+   pts/5      2:20 emacs -nw\n0   508  4532 17796  15   0   4532  1464 wait   Ss   pts/13     0:00 -/bin/bash\n0   508  4916 17796  15   0   4664  1648 wait   Ss   pts/7      0:01 -/bin/bash",
        "so_35125153: ",
        "au_180336: $ ps ax | grep firefox\n2222 ?        S      0:00 /bin/sh /usr/lib/firefox-3.6.9/firefox\n2231 ?        Sl   514:36 /usr/lib/firefox-3.6.9/firefox-bin\n30290 pts/2    S+     0:00 grep --color=auto firefox"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19853551: Find the process id of the process name",
        "so_2598145: How to retrieve the process start time (or uptime) in python",
        "au_512871: Find children of the process"
      ],
      "Top-3 Scripts": [
        "so_19853551: ps -ef | grep sshd | grep -v 'grep' | awk '{print $2}'",
        "so_2598145: ps -eo pid,etime | grep $YOUR_PID | awk '{print $2}'\n\nps -eo pid,stime | grep $YOUR_PID | awk '{print $2}'",
        "au_512871: ps -o ppid= -o pid= -A | awk '$1 == <some pid>{print $2}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5414: Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary.",
        "nl2bash_5446: Finds binaries names in a list of running processes and prints containing folder of each binary."
      ],
      "Top-3 Scripts": [
        "nl2bash_5414: ps -A -o pid | xargs -I pid readlink \"/proc/pid/exe\" | xargs -I file dirname \"file\"",
        "nl2bash_5446: ps aux | awk '{print $11}' | grep -x -e \"/.*\" | xargs -I file dirname \"file\"\n\n\nps aux | awk '{print $11}' | grep -x -e \"/.*\" | xargs dirname"
      ],
      "Explanations about Options": {
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69208158: Find owner of Linux DIRECTORY ONLY",
        "so_67106625: Why does bash while loop try to process non-existent results of find?"
      ],
      "Top-3 Scripts": [
        "so_69208158: find . -type d -printf '%p %u\\n' > myfile.txt",
        "so_67106625: while read line; do\n    echo \"line read\"\ndone <<< $(find . 1>/dev/null)\n\nwhile read line; do\n    echo \"line read\"\ndone < <(find . 1>/dev/null)"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:"
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_163603: How to find source of spawning process?",
        "su_103309: How can I know the absolute path of a running process?"
      ],
      "Top-3 Scripts": [
        "ul_163603: sudo sysdig evt.type=execve and evt.arg.exe=ls",
        "su_103309: % sudo ls -l /proc/PID/exe\n\n% ps -auxwe | grep 24466\nroot     24466  0.0  0.0   1476   280 ?        S     2009   0:00 supervise sshd\n% sudo ls -l /proc/24466/exe\nlrwxrwxrwx 1 root root 0 Feb  1 18:05 /proc/24466/exe -> /package/admin/daemontools-0.76/command/supervise"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5414: Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary.",
        "nl2bash_5446: Finds binaries names in a list of running processes and prints containing folder of each binary."
      ],
      "Top-3 Scripts": [
        "nl2bash_5414: ps -A -o pid | xargs -I pid readlink \"/proc/pid/exe\" | xargs -I file dirname \"file\"",
        "nl2bash_5446: ps aux | awk '{print $11}' | grep -x -e \"/.*\" | xargs -I file dirname \"file\"\n\n\nps aux | awk '{print $11}' | grep -x -e \"/.*\" | xargs dirname"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nsenter",
      "MP Summary": "run program with namespaces of other processes",
      "Most Similar TLDR Task": "Run a new command in an existing processes ps-table namespace",
      "Most Similar TLDR Script": "nsenter -t {{pid}} -p {{command}} {{command_arguments}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_68956: Block network access of a process?"
      ],
      "Top-3 Scripts": [
        "ul_68956: $ nsenter -n -t 1 -- ping -c4 example.com\nPING example.com (93.184.216.119) 56(84) bytes of data.\n64 bytes from 93.184.216.119: icmp_seq=1 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=2 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=3 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=4 ttl=50 time=139 ms\n\n--- example.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3004ms\nrtt min/avg/max/mdev = 134.621/136.028/139.848/2.252 ms"
      ],
      "Explanations about Options": {
        "-t": "Specify a target process to get contexts from. The paths to the contexts specified\n by pid are:",
        "-n": "Enter the network namespace. If no file is specified, enter the network namespace\n of the target process. If file is specified, enter the network namespace specified\n by file."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19853551: Find the process id of the process name",
        "so_2598145: How to retrieve the process start time (or uptime) in python",
        "au_512871: Find children of the process"
      ],
      "Top-3 Scripts": [
        "so_19853551: ps -ef | grep sshd | grep -v 'grep' | awk '{print $2}'",
        "so_2598145: ps -eo pid,etime | grep $YOUR_PID | awk '{print $2}'\n\nps -eo pid,stime | grep $YOUR_PID | awk '{print $2}'",
        "au_512871: ps -o ppid= -o pid= -A | awk '$1 == <some pid>{print $2}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
      "Most Similar TLDR Script": "file {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5414: Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary.",
        "nl2bash_5446: Finds binaries names in a list of running processes and prints containing folder of each binary.",
        "so_49260650: How to find the process ID of a running scheduled task?"
      ],
      "Top-3 Scripts": [
        "nl2bash_5414: ps -A -o pid | xargs -I pid readlink \"/proc/pid/exe\" | xargs -I file dirname \"file\"",
        "nl2bash_5446: ps aux | awk '{print $11}' | grep -x -e \"/.*\" | xargs -I file dirname \"file\"",
        "so_49260650: param(\n  [string]$SuperImportantString,\n  [int]$NumberofBagels,\n  [string]$TaskInitiated\n)\n\nSet-Content -Path $file -Value \"I'm running from $TaskInitiated\""
      ],
      "Explanations about Options": {
        "-e": "Exclude the test named in testname from the list of tests made to determine the file\n type. Valid test names are:",
        "-l": "Shows a list of patterns and their strength sorted descending by magic(5) strength\n which is used for the matching (see also the -k option)."
      }
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Set multiple variables and run a program",
      "Most Similar TLDR Script": "env {{variable1}}={{value}} {{variable2}}={{value}} {{variable3}}={{value}} {{program}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_163603: How to find source of spawning process?"
      ],
      "Top-3 Scripts": [
        "ul_163603: 245490 16:53:54.090856066 3 ls (10053) < execve res=0 exe=ls args=--color=auto. tid=10053(ls) pid=10053(ls) ptid=9204(bash) cwd=/home/steved fdlimit=1024 pgft_maj=0 pgft_min=37 vm_size=412 vm_rss=4 vm_swap=0 env=..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_169702: How to return Uptime of successful OpenVPN connection?",
        "so_67106625: Why does bash while loop try to process non-existent results of find?"
      ],
      "Top-3 Scripts": [
        "ul_169702: #!/bin/sh\necho $(date) > ovpnTime.txt",
        "so_67106625: while read line; do\n    echo \"line read\"\ndone <<< $(find . 1>/dev/null)\n\nwhile read line; do\n    echo \"line read\"\ndone <<< \"\"\n\nwhile read line; do\n    echo \"line read\"\ndone < <(find . 1>/dev/null)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uprecords",
      "MP Summary": "provides uptime records",
      "Most Similar TLDR Task": "Display a summary of the top 10 historical uptime records",
      "Most Similar TLDR Script": "uprecords",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_5227: Display a summary of the top 10 historical uptime records"
      ],
      "Top-3 Scripts": [
        "tldr_5227: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2598145: How to retrieve the process start time (or uptime) in python",
        "ul_68956: Block network access of a process?"
      ],
      "Top-3 Scripts": [
        "so_2598145: import time\n# at the beginning of the script\nstartTime = time.time()\n# ...\ndef getUptime():\n    \"\"\"\n    Returns the number of seconds since the program started.\n    \"\"\"\n    # do return startTime if you just want the process start time\n    return time.time() - startTime",
        "ul_68956: $ unshare -n -- sh -c 'ip link set dev lo up; ping 127.0.0.1'\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=32 time=0.066 ms\n\n$ nsenter -n -t 1 -- ping -c4 example.com\nPING example.com (93.184.216.119) 56(84) bytes of data.\n64 bytes from 93.184.216.119: icmp_seq=1 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=2 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=3 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=4 ttl=50 time=139 ms\n\n--- example.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3004ms\nrtt min/avg/max/mdev = 134.621/136.028/139.848/2.252 ms"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dbus-daemon",
      "MP Summary": "Message bus daemon",
      "Most Similar TLDR Task": "Run the daemon with a configuration file",
      "Most Similar TLDR Script": "dbus-daemon --config-file {{path/to/file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)"
      ],
      "Top-3 Scripts": [
        "so_35125153: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_8503: Is it possible to find the path of a running program?",
        "nl2bash_5414: Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary."
      ],
      "Top-3 Scripts": [
        "ul_8503: readlink /proc/8505/exe",
        "nl2bash_5414: ps -A -o pid | xargs -I pid readlink \"/proc/pid/exe\" | xargs -I file dirname \"file\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strace",
      "MP Summary": "trace system calls and signals",
      "Most Similar TLDR Task": "Start tracing a specific process by its PID",
      "Most Similar TLDR Script": "strace -p {{pid}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_163603: How to find source of spawning process?"
      ],
      "Top-3 Scripts": [
        "ul_163603: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2598145: How to retrieve the process start time (or uptime) in python"
      ],
      "Top-3 Scripts": [
        "so_2598145: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_524554: Fix the output of uptime"
      ],
      "Top-3 Scripts": [
        "ul_524554: rest=\"$(uptime | perl -npe'{s/(.*,\\s+)(\\d+\\s+user)/$2/}')\"\n\nprintf \"%d(days), %02d:%02d:%02d(hms), %s\\n\" $days $hr $min $sec \"$rest\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display an arbitrary user's id (UID), group id (GID) and groups to which they belong",
      "Most Similar TLDR Script": "id {{username}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33456328: How to find all child process of a parent process (in C)"
      ],
      "Top-3 Scripts": [
        "so_33456328: STEP1: First get the process id PID\nSTEP2:Find the child process IDs for PID and maintain a list (array) of them.\nSTEP3:Repeat STEP2 for all child process IDs saved in the list"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Get the current status of the user",
      "Most Similar TLDR Script": "passwd -S",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)"
      ],
      "Top-3 Scripts": [
        "so_35125153: /etc/passwd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "su",
      "MP Summary": "run a command with substitute user and group ID",
      "Most Similar TLDR Task": "Execute a command as another user",
      "Most Similar TLDR Script": "su - {{username}} -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3533028: How to find the real owner of a process after su"
      ],
      "Top-3 Scripts": [
        "so_3533028: su - django"
      ],
      "Explanations about Options": {
        "-": "Start the shell as a login shell with an environment similar to a real login:"
      }
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41778732: Unable to change gid of a process"
      ],
      "Top-3 Scripts": [
        "so_41778732: [root@localhost test_c]# sleep 10000 &\n[2] 2922"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Start a new daemon and log the output to screenlog.x",
      "Most Similar TLDR Script": "screen -dmLS {{session_name}} {{command}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_137462: How do you find the parent process of a zombie process?"
      ],
      "Top-3 Scripts": [
        "su_137462: $ pstree -p dharris\nscreen(17796)\u2500\u252c\u2500bash(4467)\u2500\u2500\u2500emacs(4498)\u2500\u2500\u2500sh(3344)\u2500\u2500\u2500sh(3345)\n              \u251c\u2500bash(4532)\u2500\u2500\u2500su(31037)\u2500\u2500\u2500bash(31041)\n              \u251c\u2500bash(4916)\u2500\u2500\u2500pstree(26456)\n              \u251c\u2500bash(13547)\u2500\u2500\u2500su(20442)\u2500\u2500\u2500bash(20443)\n              \u2514\u2500bash(17797)\n\nsshd(25813)\u2500\u2500\u2500bash(25817)\u2500\u2500\u2500screen(25870)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "stat",
      "MP Summary": "display file or file system status",
      "Most Similar TLDR Task": "Show filesystem information",
      "Most Similar TLDR Script": "stat -f {{file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59582151: how to find owner of a process without ps"
      ],
      "Top-3 Scripts": [
        "so_59582151: stat -c '%U' /proc/775\navahi\n\nstat -c '%U' /proc/$$"
      ],
      "Explanations about Options": {
        "-c": "use the specified FORMAT instead of the default; output a newline after each use of\n FORMAT"
      }
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_103309: How can I know the absolute path of a running process?"
      ],
      "Top-3 Scripts": [
        "su_103309: % ps -auxwe | grep 24466\nroot     24466  0.0  0.0   1476   280 ?        S     2009   0:00 supervise sshd\n% sudo ls -l /proc/24466/exe\nlrwxrwxrwx 1 root root 0 Feb  1 18:05 /proc/24466/exe -> /package/admin/daemontools-0.76/command/supervise"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2598145: How to retrieve the process start time (or uptime) in python"
      ],
      "Top-3 Scripts": [
        "so_2598145: import time\n# at the beginning of the script\nstartTime = time.time()\n# ...\ndef getUptime():\n    \"\"\"\n    Returns the number of seconds since the program started.\n    \"\"\"\n    # do return startTime if you just want the process start time\n    return time.time() - startTime"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_169702: How to return Uptime of successful OpenVPN connection?"
      ],
      "Top-3 Scripts": [
        "ul_169702: #!/bin/sh\ncat /dev/null > ovpnTime.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "link",
      "MP Summary": "call the link function to create a link to a file",
      "Most Similar TLDR Task": "Create a hard link from a new file to an existing file",
      "Most Similar TLDR Script": "link {{path/to/existing_file}} {{path/to/new_file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_68956: Block network access of a process?"
      ],
      "Top-3 Scripts": [
        "ul_68956: $ unshare -n -- sh -c 'ip link set dev lo up; ping 127.0.0.1'\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=32 time=0.066 ms"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chroot",
      "MP Summary": "run command or interactive shell with special root directory",
      "Most Similar TLDR Task": "Specify user and group (ID or name) to use",
      "Most Similar TLDR Script": "chroot --userspec={{user:group}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)"
      ],
      "Top-3 Scripts": [
        "so_35125153: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Also display a message if no response was received",
      "Most Similar TLDR Script": "ping -O {{host}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_68956: Block network access of a process?"
      ],
      "Top-3 Scripts": [
        "ul_68956: $ unshare -r -n ping 127.0.0.1\nconnect: Network is unreachable\n\n$ unshare -n -- sh -c 'ip link set dev lo up; ping 127.0.0.1'\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=32 time=0.066 ms\n\n$ nsenter -n -t 1 -- ping -c4 example.com\nPING example.com (93.184.216.119) 56(84) bytes of data.\n64 bytes from 93.184.216.119: icmp_seq=1 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=2 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=3 ttl=50 time=134 ms\n64 bytes from 93.184.216.119: icmp_seq=4 ttl=50 time=139 ms\n\n--- example.com ping statistics ---\n4 packets transmitted, 4 received, 0% packet loss, time 3004ms\nrtt min/avg/max/mdev = 134.621/136.028/139.848/2.252 ms"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sync",
      "MP Summary": "Synchronize cached writes to persistent storage",
      "Most Similar TLDR Task": "Flush all pending write operations on a single file to disk",
      "Most Similar TLDR Script": "sync {{path/to/file}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)"
      ],
      "Top-3 Scripts": [
        "so_35125153: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "valgrind",
      "MP Summary": "a suite of tools for debugging and profiling programs",
      "Most Similar TLDR Task": "Use the (default) Memcheck tool to show a diagnostic of memory usage by `program`",
      "Most Similar TLDR Script": "valgrind {{program}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_131303: How can I measure the actual memory usage of an application or process?"
      ],
      "Top-3 Scripts": [
        "so_131303: valgrind --tool=massif <executable> <arguments>"
      ],
      "Explanations about Options": {
        "--tool": "Run the Valgrind tool called toolname, e.g. memcheck, cachegrind, callgrind, helgrind,\n drd, massif, dhat, lackey, none, exp-sgcheck, exp-bbv, etc."
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_251353: How do I find the PID of a particular program?"
      ],
      "Top-3 Scripts": [
        "ul_251353: pidof <process_name> | tr '\\ ' ','"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_524554: Fix the output of uptime"
      ],
      "Top-3 Scripts": [
        "ul_524554: rest=\"$(uptime | perl -npe'{s/(.*,\\s+)(\\d+\\s+user)/$2/}')\"\n\nprintf \"%d(days), %02d:%02d:%02d(hms), %s\\n\" $days $hr $min $sec \"$rest\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "named",
      "MP Summary": "Internet domain name server",
      "Most Similar TLDR Task": "Read the default configuration file `/etc/named.conf`, read any initial data and listen for queries",
      "Most Similar TLDR Script": "named",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35125153: How to find a working directory of running process(HPUX/Solaris/Linux/AIX)"
      ],
      "Top-3 Scripts": [
        "so_35125153: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "identify",
      "MP Summary": "describes the format and characteristics of one or more image files.",
      "Most Similar TLDR Task": "Collect dimensions of all jpeg files under current directory",
      "Most Similar TLDR Script": "identify -format \"%f,%w,%h\\n\" *.{{jpg}} > {{filelist.csv}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23154547: Get history command of a process"
      ],
      "Top-3 Scripts": [
        "so_23154547: fuser - identify processes using files or sockets"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "firefox",
      "MP Summary": "a free and open source web browser from Mozilla",
      "Most Similar TLDR Task": "Use a specific profile to allow multiple separate instances of Firefox to run at once",
      "Most Similar TLDR Script": "firefox --profile {{path/to/directory}} {{https://example.com/}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_180336: How to find the Process ID (PID) of a running terminal program?"
      ],
      "Top-3 Scripts": [
        "au_180336: $ ps ax | grep firefox\n2222 ?        S      0:00 /bin/sh /usr/lib/firefox-3.6.9/firefox\n2231 ?        Sl   514:36 /usr/lib/firefox-3.6.9/firefox-bin\n30290 pts/2    S+     0:00 grep --color=auto firefox"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67106625: Why does bash while loop try to process non-existent results of find?"
      ],
      "Top-3 Scripts": [
        "so_67106625: while read line; do\n    echo \"line read\"\ndone <<< $(find . 1>/dev/null)\n\nwhile read line; do\n    echo \"line read\"\ndone <<< \"\"\n\nwhile read line; do\n    echo \"line read\"\ndone < <(find . 1>/dev/null)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Notify of job termination immediately",
      "Most Similar TLDR Script": "set -b",
      "Most Similar NL2Bash Task": "(GNU specific) Find the process currently taking the most CPU time.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "top -b -n1 -c  | awk '/PID *USER/{print;getline;print}'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        },
        "1": {
          "script": "top -b -n1 -c  | grep -A 2 '^$'\n",
          "command-options": {
            "top": {
              "mpsum": "display Linux processes",
              "-b": "Starts top in Batch mode, which could be useful for sending output from top to other\n programs or to a file. In this mode, top will not accept input and runs until the\n iterations limit you've set with the `-n' command-line option or until killed.",
              "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "top": {
              "man1_top_34022": "display dynam real-tim inform run process show idl zombi process get help interact command show process own given user show process given pid pass comma-separ list\nnormal know pid hand\nexampl pick pid process name show individu thread given process sort process field start top"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_68956: Block network access of a process?"
      ],
      "Top-3 Scripts": [
        "ul_68956: $ unshare -n -- sh -c 'ip link set dev lo up; ping 127.0.0.1'\nPING 127.0.0.1 (127.0.0.1) 56(84) bytes of data.\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=32 time=0.066 ms"
      ],
      "Explanations about Options": {}
    }
  ]
}