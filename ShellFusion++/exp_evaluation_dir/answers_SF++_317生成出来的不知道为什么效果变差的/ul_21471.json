{
  "Query": "How do I limit the number of files printed by ls?",
  "Answers": [
    {
      "Command": "ulimit",
      "MP Summary": "set or report file size limit",
      "Most Similar TLDR Task": "Get hard limit for the number of simultaneously opened files",
      "Most Similar TLDR Script": "ulimit -H -n",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34588: How do I change the number of open files limit in Linux?",
        "ul_371636: Do files opened by child processes count against the file open limit for the parent process?"
      ],
      "Top-3 Scripts": [
        "so_34588: ulimit -n 2048",
        "ul_371636: $ bash -c 'exec  1023> /dev/null; ulimit -n 500;\n   command exec 600> /dev/null; ls -l /proc/self/fd; exit'\nbash: 600: Bad file descriptor\ntotal 0\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 0 -> /dev/pts/1\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 1 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 1023 -> /dev/null\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 2 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 3 -> /dev/null\nlr-x------ 1 chazelas chazelas 64 Jun 17 08:40 4 -> /proc/8034/fd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count lines in file",
      "Most Similar TLDR Script": "wc -l {{file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_222868: Get number of files in each directory",
        "so_8565159: How count the number of lines of a file group?",
        "ul_284622: Command to print the number of *.pdf files in a chosen directory"
      ],
      "Top-3 Scripts": [
        "ul_222868: for dir in $(find . -type d); do\n    echo \"${dir}: $(find ${dir} -maxdepth 1 -type f | wc -l)\"\ndone",
        "so_8565159: wc -l localhost_access_log.[0-9][0-9]-11-11* | awk 'END{print $1}'",
        "ul_284622: ls | grep -E \"\\.pdf$\" | wc -l\n\nwc -l\n\nls *.pdf | wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_284622: Command to print the number of *.pdf files in a chosen directory",
        "so_5013151: How do I limit the number of results returned from grep?",
        "nl2bash_16202: Limits the number of results from grep to 2 lines"
      ],
      "Top-3 Scripts": [
        "ul_284622: ls | grep -E \"\\.pdf$\" | wc -l\n\nls | grep -cE \"\\.pdf$\"\n\nls -l | grep -cE \"^-.*\\.pdf$\"",
        "so_5013151: grep -m 10 PATTERN [FILE]\n\nman grep\n\n-m NUM, --max-count=NUM\n        Stop reading a file after NUM matching lines.  If the  input  is\n        standard  input  from a regular file, and NUM matching lines are\n        output, grep ensures that the standard input  is  positioned  to\n        just  after the last matching line before exiting, regardless of\n        the presence of trailing context lines.  This enables a  calling\n        process  to resume a search.",
        "nl2bash_16202: grep -o '1.' yourfile | head -n2"
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20491595: print recursively the number of files in folders",
        "ul_456736: Get numbers matching a pattern from the output of ls?",
        "so_66171815: print a sequence of numbers line by line with echo"
      ],
      "Top-3 Scripts": [
        "so_20491595: wcr() {\n  find \"$@\" -type d | while IFS='' read F\n    do\n      printf \"%5d %s\\n\" \"$(ls --sort=none -b \"$F\" | wc -l)\" \"$F\"\n    done\n  echo\n}",
        "ul_456736: for filename in t-*-*.c; do\n    [ ! -f \"$filename\" ] && continue\n    number=${filename#t-}   # remove \"t-\" from start of filename\n    number=${number%%-*}    # remove everything from first \"-\" in what remains\n    printf '%s\\n' \"$number\"\ndone\n\nfor filename in t-*-*.c; do\n    [ ! -f \"$filename\" ] && continue\n    if [[ \"$filename\" =~ ^t-([0-9]+)- ]]; then\n        printf '%s\\n' \"${BASH_REMATCH[1]}\"\n    fi\ndone",
        "so_66171815: printf '%s\\n' {1..99..2}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Every 3rd number from 5 to 20",
      "Most Similar TLDR Script": "seq 5 3 20",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9994: Print three lines of \"some line \" followed by a random number",
        "so_66171815: print a sequence of numbers line by line with echo"
      ],
      "Top-3 Scripts": [
        "nl2bash_9994: seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3",
        "so_66171815: seq 1 2 99"
      ],
      "Explanations about Options": {
        "-f": "use printf style floating-point FORMAT"
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files one per line",
      "Most Similar TLDR Script": "ls -1",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_264442: How do I limit the number of displayed lines through ls?",
        "ul_318886: Suppress printing of total line with ls -l",
        "ul_157285: Why does \"ls | wc -l\" show the correct number of files in current directory?"
      ],
      "Top-3 Scripts": [
        "su_264442: ls -Bgclt /somwhere/in/the/past | head -n 3",
        "ul_318886: ls -l\n\nls -ld /path/to/directory/*\n\nls -l /path/to/directory",
        "ul_157285: info ls"
      ],
      "Explanations about Options": {
        "-t": "sort by modification time , newest first",
        "-c": "with -lt: sort by , and show , ctime (time of last modification of file status\n information); with -l: show ctime and sort by name; otherwise: sort by ctime,\n newest first",
        "-g": "like -l , but do not list owner",
        "-l": "use a long listing format",
        "-B": "do not list implied entries ending with ~"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_222868: Get number of files in each directory",
        "ul_23130: How to report number of files in all subdirectories?",
        "so_20491595: print recursively the number of files in folders"
      ],
      "Top-3 Scripts": [
        "ul_222868: for dir in $(find . -type d); do\n    echo \"${dir}: $(find ${dir} -maxdepth 1 -type f | wc -l)\"\ndone",
        "ul_23130: for f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\; | wc -l && echo $f; done\n\n-exec echo \\;\n\nfor f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\;|wc -l|tr '\\n' ' ' && echo $f; done|awk '{print $2\"\\t\"$1}'\n\n-exec echo {} \\;",
        "so_20491595: wcr() {\n  find \"$@\" -type d | while IFS='' read F\n    do\n      printf \"%5d %s\\n\" \"$(ls --sort=none -b \"$F\" | wc -l)\" \"$F\"\n    done\n  echo\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort human-readable numbers (in this case the 5th field of `ls -lh`)",
      "Most Similar TLDR Script": "ls -lh | sort -h -k 5",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9994: Print three lines of \"some line \" followed by a random number",
        "ul_14728: ls: how do I list directories sorted by timestamps of the files it contains"
      ],
      "Top-3 Scripts": [
        "nl2bash_9994: seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3",
        "ul_14728: ls -ltcr         # sort by and show change time, most recent last\nls -ltur         # sort by and show access time, most recent last\nls -ltr          # sort by date, most recent last"
      ],
      "Explanations about Options": {
        "-R": "shuffle, but group identical keys. See shuf(1)"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a path pattern",
      "Most Similar TLDR Script": "find {{root_path}} -path '{{**/lib/**/*.ext}}'",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_222868: Get number of files in each directory",
        "ul_558014: Limit number of matches of find command",
        "ul_23130: How to report number of files in all subdirectories?"
      ],
      "Top-3 Scripts": [
        "ul_222868: for dir in $(find . -type d); do\n    echo \"${dir}: $(find ${dir} -maxdepth 1 -type f | wc -l)\"\ndone",
        "ul_558014: ",
        "ul_23130: for f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\; | wc -l && echo $f; done\n\nfor f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\;|wc -l|tr '\\n' ' ' && echo $f; done|awk '{print $2\"\\t\"$1}'\n\nfind $f\n\nfind ./$f\n\nfind ./hello, buddy"
      ],
      "Explanations about Options": {
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few bytes of a file",
      "Most Similar TLDR Script": "head -c {{size_in_bytes}} {{filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_264442: How do I limit the number of displayed lines through ls?",
        "nl2bash_9994: Print three lines of \"some line \" followed by a random number",
        "so_47922994: limit number of results of find, head is not working"
      ],
      "Top-3 Scripts": [
        "su_264442: ls -Bgclt /somwhere/in/the/past | head -n 3",
        "nl2bash_9994: seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3",
        "so_47922994: find / -type f | head -n5 | tr '\\n' '\\0' | xargs -0 ls\n\nfind -L $line | head -n50 | tr '\\n' '\\0' | xargs -0 ls > $a$(basename $line)"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5013151: How do I limit the number of results returned from grep?",
        "nl2bash_9591: Print number of bytes in $file.",
        "au_1150749: How to display number of items in sub-directories from command line"
      ],
      "Top-3 Scripts": [
        "so_5013151: -m NUM, --max-count=NUM\n        Stop reading a file after NUM matching lines.  If the  input  is\n        standard  input  from a regular file, and NUM matching lines are\n        output, grep ensures that the standard input  is  positioned  to\n        just  after the last matching line before exiting, regardless of\n        the presence of trailing context lines.  This enables a  calling\n        process  to resume a search.",
        "nl2bash_9591: cat $file | wc -c",
        "au_1150749: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "bash {{file.sh}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_558014: Limit number of matches of find command",
        "ul_456736: Get numbers matching a pattern from the output of ls?",
        "ul_521464: count number of files in directory with a certain name"
      ],
      "Top-3 Scripts": [
        "ul_558014: ",
        "ul_456736: ",
        "ul_521464: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9994: Print three lines of \"some line \" followed by a random number",
        "nl2bash_9620: Print only the number of lines in file \"$f\"",
        "nl2bash_9943: Print the number of lines in file.txt."
      ],
      "Top-3 Scripts": [
        "nl2bash_9994: seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3",
        "nl2bash_9620: wc -l $f | tr -s ' ' | cut -d ' ' -f 1",
        "nl2bash_9943: wc -l file.txt | cut -f1 -d\" \""
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Sum the values in the first column of a file and print the total",
      "Most Similar TLDR Script": "awk '{s+=$1} END {print s}' {{filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8565159: How count the number of lines of a file group?",
        "ul_23130: How to report number of files in all subdirectories?",
        "so_61573449: how to count the repeated number on the second field in file and print the number with count of repeated"
      ],
      "Top-3 Scripts": [
        "so_8565159: wc -l localhost_access_log.[0-9][0-9]-11-11* | awk 'END{print $1}'\n\nawk 'END{print NR}' localhost_access_log.[0-9][0-9]-11-11*",
        "ul_23130: for f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\;|wc -l|tr '\\n' ' ' && echo $f; done|awk '{print $2\"\\t\"$1}'",
        "so_61573449: awk '{++freq[$1]} END{for (i in freq) print i, freq[i]}' file\n\ngnu awk\n\nawk '{++freq[$1]} END{PROCINFO[\"sorted_in\"] = \"@val_num_desc\";\nfor (i in freq) print i, freq[i]}' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9994: Print three lines of \"some line \" followed by a random number",
        "so_5013151: How do I limit the number of results returned from grep?",
        "so_47922994: limit number of results of find, head is not working"
      ],
      "Top-3 Scripts": [
        "nl2bash_9994: seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3",
        "so_5013151: -m NUM, --max-count=NUM\n        Stop reading a file after NUM matching lines.  If the  input  is\n        standard  input  from a regular file, and NUM matching lines are\n        output, grep ensures that the standard input  is  positioned  to\n        just  after the last matching line before exiting, regardless of\n        the presence of trailing context lines.  This enables a  calling\n        process  to resume a search.",
        "so_47922994: find -L $line | head -n50 | tr '\\n' '\\0' | xargs -0 ls > $a$(basename $line)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' lines in file",
      "Most Similar TLDR Script": "tail -n {{num}} {{file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9967: Print the second line of output of \"ls -l\"",
        "nl2bash_10099: Prints the Nth line of output from 'ls -1'"
      ],
      "Top-3 Scripts": [
        "nl2bash_9967: ls -l | head -2 | tail -1\n\n\nls -l | tail -n +2 | head -n1",
        "nl2bash_10099: ls -1 | tail -n +N | head -n1"
      ],
      "Explanations about Options": {
        "-n": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character in a file, and print the result",
      "Most Similar TLDR Script": "tr {{find_character}} {{replace_character}} < {{filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_23130: How to report number of files in all subdirectories?",
        "nl2bash_9620: Print only the number of lines in file \"$f\"",
        "so_47922994: limit number of results of find, head is not working"
      ],
      "Top-3 Scripts": [
        "ul_23130: for f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\;|wc -l|tr '\\n' ' ' && echo $f; done|awk '{print $2\"\\t\"$1}'",
        "nl2bash_9620: wc -l $f | tr -s ' ' | cut -d ' ' -f 1",
        "so_47922994: find / -type f | head -n5 | tr '\\n' '\\0' | xargs -0 ls\n\nfind -L $line | head -n50 | tr '\\n' '\\0' | xargs -0 ls > $a$(basename $line)"
      ],
      "Explanations about Options": {
        "-s": "replace each sequence of a repeated character that is listed in the last specified\n SET, with a single occurrence of that character"
      }
    },
    {
      "Command": "nl",
      "MP Summary": "number lines of files",
      "Most Similar TLDR Task": "Number non-blank lines in a file",
      "Most Similar TLDR Script": "nl {{file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9994: Print three lines of \"some line \" followed by a random number"
      ],
      "Top-3 Scripts": [
        "nl2bash_9994: seq -f 'some line %g' 500 | nl | sort -R | cut -f2- | head -3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20491595: print recursively the number of files in folders",
        "nl2bash_10099: Prints the Nth line of output from 'ls -1'"
      ],
      "Top-3 Scripts": [
        "so_20491595: wcr() {\n  find \"$@\" -type d | while IFS='' read F\n    do\n      printf \"%5d %s\\n\" \"$(ls --sort=none -b \"$F\" | wc -l)\" \"$F\"\n    done\n  echo\n}",
        "nl2bash_10099: ls -1 | (for ((x=0;x<N;x++)) ; do read ; done ; head -n1)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Number all output lines",
      "Most Similar TLDR Script": "cat -n {{file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9591: Print number of bytes in $file."
      ],
      "Top-3 Scripts": [
        "nl2bash_9591: cat $file | wc -c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Use the times from a file to set the times on a second file",
      "Most Similar TLDR Script": "touch -r {{filename}} {{filename2}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_521464: count number of files in directory with a certain name",
        "ul_384681: Determine number of files in directory with only looking at `ls -ald`"
      ],
      "Top-3 Scripts": [
        "ul_521464: ",
        "ul_384681: mkdir testdir && cd testdir\ntouch {1..100000}\nrm {1..100000}\nls -ld ../testdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8565159: How count the number of lines of a file group?",
        "ul_23130: How to report number of files in all subdirectories?",
        "ul_604989: Count the number of directories in a list of directories"
      ],
      "Top-3 Scripts": [
        "so_8565159: wc -l localhost_access_log.[0-9][0-9]-11-11* | awk 'END{print $1}'\n\nawk 'END{print NR}' localhost_access_log.[0-9][0-9]-11-11*",
        "ul_23130: for f in *; do [ -d ./\"$f\" ] && find ./\"$f\" -maxdepth 1 -exec echo \\;|wc -l|tr '\\n' ' ' && echo $f; done|awk '{print $2\"\\t\"$1}'",
        "ul_604989: dirs=(*/)                      # get all directories with globbing\n                               # in current directory\n\nfor d in \"${dirs[@]}\"; do\n  sub=(\"$d\"*/)                 # get all subdirs in $d\n  echo \"${#sub[@]}\"            # print number of array elements/subdirs\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_562076: Selecting from list like array (without name by number)",
        "ul_384681: Determine number of files in directory with only looking at `ls -ald`"
      ],
      "Top-3 Scripts": [
        "au_562076: ",
        "ul_384681: mkdir testdir && cd testdir\ntouch {1..100000}\nrm {1..100000}\nls -ld ../testdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
      "Most Similar TLDR Script": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47922994: limit number of results of find, head is not working",
        "so_62381718: How to limit the number of results from find?",
        "so_8991992: running a limited number of parallel programs using a script"
      ],
      "Top-3 Scripts": [
        "so_47922994: find / -type f | head -n5 | tr '\\n' '\\0' | xargs -0 ls\n\nfind -L $line | head -n50 | tr '\\n' '\\0' | xargs -0 ls > $a$(basename $line)",
        "so_62381718: find -name '*.jpg' -print0 \\\n| head -z -n 50 \\\n| xargs -0 cp -t /destination",
        "so_8991992: "
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "fd",
      "MP Summary": "find entries in the filesystem",
      "Most Similar TLDR Task": "Recursively find files matching the given pattern in the current directory",
      "Most Similar TLDR Script": "fd {{pattern}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_371636: Do files opened by child processes count against the file open limit for the parent process?",
        "so_27090224: How can I print the total number of file descriptors with index 24"
      ],
      "Top-3 Scripts": [
        "ul_371636: $ bash -c 'exec  1023> /dev/null; ulimit -n 500;\n   command exec 600> /dev/null; ls -l /proc/self/fd; exit'\nbash: 600: Bad file descriptor\ntotal 0\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 0 -> /dev/pts/1\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 1 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 1023 -> /dev/null\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 2 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 3 -> /dev/null\nlr-x------ 1 chazelas chazelas 64 Jun 17 08:40 4 -> /proc/8034/fd",
        "so_27090224: ls /proc/*/fd 2>/dev/null | grep -c '^24$'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lpr",
      "MP Summary": "off line print",
      "Most Similar TLDR Task": "Print 2 copies",
      "Most Similar TLDR Script": "lpr -# {{2}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_562076: Selecting from list like array (without name by number)"
      ],
      "Top-3 Scripts": [
        "au_562076: bob@bob-p7-1298c:~$ select item in $( ls );do echo $item;done\n1) adifferentlikethis    6) Documents       11) initramfs       16) MESVG20.xlsx    21) out.png     26) racket      31) t~          36) Untitled        41) VMs\n2) bash_speakit      7) Downloads       12) irssi_log       17) MLGVG17.xlsx    22) output.mp3      27) run.py      32) Templates       37) Document\n3) color_img.jpg     8) ec2         13) likethis        18) MLRVG17.xlsx    23) php5        28) run.sh      33) test        38) 1\n4) DATES         9) examples.desktop    14) lpr         19) Music       24) Pictures        29) space.txt       34) t.sh        39) Videos\n5) Desktop      10) grub.iso        15) MEEVG19.xlsx    20) nano.save       25) Public      30) t           35) Untitled-2.pd   40) VirtualBox\n#?"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Run commands from file and print them as they are executed",
      "Most Similar TLDR Script": "zsh -x {{file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_558014: Limit number of matches of find command",
        "ul_521464: count number of files in directory with a certain name"
      ],
      "Top-3 Scripts": [
        "ul_558014: ",
        "ul_521464: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_14728: ls: how do I list directories sorted by timestamps of the files it contains",
        "so_5013151: How do I limit the number of results returned from grep?"
      ],
      "Top-3 Scripts": [
        "ul_14728: ls -ltcr         # sort by and show change time, most recent last\nls -ltur         # sort by and show access time, most recent last\nls -ltr          # sort by date, most recent last",
        "so_5013151: -m NUM, --max-count=NUM\n        Stop reading a file after NUM matching lines.  If the  input  is\n        standard  input  from a regular file, and NUM matching lines are\n        output, grep ensures that the standard input  is  positioned  to\n        just  after the last matching line before exiting, regardless of\n        the presence of trailing context lines.  This enables a  calling\n        process  to resume a search."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path",
      "Most Similar TLDR Script": "basename {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47922994: limit number of results of find, head is not working"
      ],
      "Top-3 Scripts": [
        "so_47922994: find -L $line | head -n50 | tr '\\n' '\\0' | xargs -0 ls > $a$(basename $line)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print directories only",
      "Most Similar TLDR Script": "tree -d",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1150749: How to display number of items in sub-directories from command line"
      ],
      "Top-3 Scripts": [
        "au_1150749: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_562076: Selecting from list like array (without name by number)"
      ],
      "Top-3 Scripts": [
        "au_562076: bob@bob-p7-1298c:~$ select item in $( ls );do echo $item;done\n1) adifferentlikethis    6) Documents       11) initramfs       16) MESVG20.xlsx    21) out.png     26) racket      31) t~          36) Untitled        41) VMs\n2) bash_speakit      7) Downloads       12) irssi_log       17) MLGVG17.xlsx    22) output.mp3      27) run.py      32) Templates       37) Document\n3) color_img.jpg     8) ec2         13) likethis        18) MLRVG17.xlsx    23) php5        28) run.sh      33) test        38) 1\n4) DATES         9) examples.desktop    14) lpr         19) Music       24) Pictures        29) space.txt       34) t.sh        39) Videos\n5) Desktop      10) grub.iso        15) MEEVG19.xlsx    20) nano.save       25) Public      30) t           35) Untitled-2.pd   40) VirtualBox\n#?"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "shuf",
      "MP Summary": "generate random permutations",
      "Most Similar TLDR Task": "Write the output to another file",
      "Most Similar TLDR Script": "shuf {{filename}} -o {{output_filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_558014: Limit number of matches of find command"
      ],
      "Top-3 Scripts": [
        "ul_558014: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in verbose mode, showing files after they are moved",
      "Most Similar TLDR Script": "mv -v {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_558014: Limit number of matches of find command"
      ],
      "Top-3 Scripts": [
        "ul_558014: mv ./**/*(-.D[1,1000]) /path/to/collection1    # move first 1000 files\nmv ./**/*(-.D[1,1000]) /path/to/collection2    # move next 1000 files\n\npathnames=( ./**/*(-.D) )\n\nmv $pathnames[1,1000]    /path/to/collection1\nmv $pathnames[1001,2000] /path/to/collection2\n\nshopt -s globstar dotglob nullglob\n\npathnames=()\nfor pathname in ./**/*; do\n    [[ -f $pathname ]] && pathnames+=( \"$pathname\" )\ndone\n\nmv \"${pathnames[@]:0:1000}\"    /path/to/collection1\nmv \"${pathnames[@]:1000:1000}\" /path/to/collection2\nmv \"${pathnames[@]:2000:1000}\" /path/to/collection3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34588: How do I change the number of open files limit in Linux?",
        "ul_521464: count number of files in directory with a certain name"
      ],
      "Top-3 Scripts": [
        "so_34588: set rlim_fd_max = 166384\nset rlim_fd_cur = 8192",
        "ul_521464: set -- 2009*\necho \"$#\"\n\n$ set -- 2009*\n$ echo \"$#\"\n1\n\nset -o extended-glob\n\nset -- **/2009*\necho \"$#\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "most",
      "MP Summary": "browse or page through a text file",
      "Most Similar TLDR Task": "Move through opened files",
      "Most Similar TLDR Script": ":O n",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_14728: ls: how do I list directories sorted by timestamps of the files it contains"
      ],
      "Top-3 Scripts": [
        "ul_14728: ls -ltcr         # sort by and show change time, most recent last\nls -ltur         # sort by and show access time, most recent last\nls -ltr          # sort by date, most recent last"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a directory recursively, in verbose mode (shows files as they are copied)",
      "Most Similar TLDR Script": "cp -vr {{path/to/source_directory}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62381718: How to limit the number of results from find?"
      ],
      "Top-3 Scripts": [
        "so_62381718: find -name '*.jpg' -print0 \\\n| head -z -n 50 \\\n| xargs -0 cp -t /destination"
      ],
      "Explanations about Options": {
        "-t": "copy all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in seconds",
      "Most Similar TLDR Script": "sleep {{seconds}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18114010: Limit the number of concurrent processes spawned by incrond"
      ],
      "Top-3 Scripts": [
        "so_18114010: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using TAB as delimiter",
      "Most Similar TLDR Script": "paste -s {{file}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10122: Prints total number of lines of all *.m and *.h files in a current folder and subfolders."
      ],
      "Top-3 Scripts": [
        "nl2bash_10122: find ./ -type f -name \"*.[mh]\" -exec wc -l {}  \\; | sed -e 's/[ ]*//g' | cut -d\".\" -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Execute the ls program literally, even if an ls alias exists",
      "Most Similar TLDR Script": "command {{ls}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_371636: Do files opened by child processes count against the file open limit for the parent process?"
      ],
      "Top-3 Scripts": [
        "ul_371636: $ bash -c 'exec  1023> /dev/null; ulimit -n 500;\n   command exec 600> /dev/null; ls -l /proc/self/fd; exit'\nbash: 600: Bad file descriptor\ntotal 0\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 0 -> /dev/pts/1\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 1 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 1023 -> /dev/null\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 2 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 3 -> /dev/null\nlr-x------ 1 chazelas chazelas 64 Jun 17 08:40 4 -> /proc/8034/fd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_682128: List files of folder page by page with LS command"
      ],
      "Top-3 Scripts": [
        "su_682128: ls -la | more"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "Search for a process that matches a string",
      "Most Similar TLDR Script": "ps aux | grep {{string}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18114010: Limit the number of concurrent processes spawned by incrond"
      ],
      "Top-3 Scripts": [
        "so_18114010: processName=myprocess\n\n    if [ $(ps -ef |grep -v grep|grep ${processName} |wc -l) -le 4 ]\n    then\n      do something\n    fi"
      ],
      "Explanations about Options": {
        "-e": "Select all processes. Identical to -A.",
        "-f": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm."
      }
    },
    {
      "Command": "info",
      "MP Summary": "read Info documents",
      "Most Similar TLDR Task": "Start reading at given menu item node from top-level directory",
      "Most Similar TLDR Script": "info {{menu_item}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_157285: Why does \"ls | wc -l\" show the correct number of files in current directory?"
      ],
      "Top-3 Scripts": [
        "ul_157285: info ls"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "notmuch",
      "MP Summary": "thread-based email index, search, and tagging",
      "Most Similar TLDR Task": "Limit the number of search results to X",
      "Most Similar TLDR Script": "notmuch search --format={{json|text}} --output={{summary|threads|messages|files|tags}} --limit={{X}} \"{{search_term}}\"",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_9229: Limit the number of search results to X"
      ],
      "Top-3 Scripts": [
        "tldr_9229: notmuch search --format={{json|text}} --output={{summary|threads|messages|files|tags}} --limit={{X}} \"{{search_term}}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to the given directory",
      "Most Similar TLDR Script": "cd {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_384681: Determine number of files in directory with only looking at `ls -ald`"
      ],
      "Top-3 Scripts": [
        "ul_384681: mkdir testdir && cd testdir\ntouch {1..100000}\nrm {1..100000}\nls -ld ../testdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10122: Prints total number of lines of all *.m and *.h files in a current folder and subfolders."
      ],
      "Top-3 Scripts": [
        "nl2bash_10122: find ./ -type f -name \"*.[mh]\" -exec wc -l {}  \\; | sed -e 's/[ ]*//g' | cut -d\".\" -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and change the process name",
      "Most Similar TLDR Script": "exec -a {{process_name}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47922994: limit number of results of find, head is not working",
        "ul_371636: Do files opened by child processes count against the file open limit for the parent process?"
      ],
      "Top-3 Scripts": [
        "so_47922994: ",
        "ul_371636: $ bash -c 'exec  1023> /dev/null; ulimit -n 500;\n   command exec 600> /dev/null; ls -l /proc/self/fd; exit'\nbash: 600: Bad file descriptor\ntotal 0\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 0 -> /dev/pts/1\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 1 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 1023 -> /dev/null\nlrwx------ 1 chazelas chazelas 64 Jun 17 08:40 2 -> /dev/pts/1\nl-wx------ 1 chazelas chazelas 64 Jun 17 08:40 3 -> /dev/null\nlr-x------ 1 chazelas chazelas 64 Jun 17 08:40 4 -> /proc/8034/fd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29995818: how do I limit the number of history items in bash?"
      ],
      "Top-3 Scripts": [
        "so_29995818: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create a directory in current directory or given path",
      "Most Similar TLDR Script": "mkdir {{directory}}",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_384681: Determine number of files in directory with only looking at `ls -ald`"
      ],
      "Top-3 Scripts": [
        "ul_384681: mkdir testdir && cd testdir\ntouch {1..100000}\nrm {1..100000}\nls -ld ../testdir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Calculate expression and force number of decimal places to 10",
      "Most Similar TLDR Script": "bc <<< \"scale=10; 5 / 3\"",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_10122: Prints total number of lines of all *.m and *.h files in a current folder and subfolders."
      ],
      "Top-3 Scripts": [
        "nl2bash_10122: find ./ -type f -name \"*.[mh]\" -exec wc -l {}  \\; | sed -e 's/[ ]*//g' | cut -d\".\" -f1 | paste -sd+ - | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Find all files inside all directories (non-recursive) in /tmp/test directory (recursive) and print the number of files in each directory and also print the file/directory paths",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type d -print0 | xargs -0 -I {} sh -c ' echo \"{}: \\c\" ; find {} -maxdepth 1 -type f | wc -l ; find {} -maxdepth 1 -type f -print'\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
              "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
            },
            "sh": {
              "mpsum": "MirBSD Korn shell",
              "-c": "Impose a size limit of n blocks on the size of core dumps."
            },
            "echo": {
              "mpsum": "display a line of text"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sh": {
              "man1_sh_20845": "bourn shell\nstandard command languag interpret execut command run command stdin run command file start interact shell"
            },
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18114010: Limit the number of concurrent processes spawned by incrond"
      ],
      "Top-3 Scripts": [
        "so_18114010: "
      ],
      "Explanations about Options": {}
    }
  ]
}