{
  "Query": "Read the contents of a zipped file without extraction?",
  "Answers": [
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "List the contents of a zip file without extracting",
      "Most Similar TLDR Script": "unzip -l {{file.zip}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_651: List the contents of a zip file without extracting",
        "su_432791: detect content from zip file without uncompress it",
        "so_69282114: get the text inside a zipped text file without extraction"
      ],
      "Top-3 Scripts": [
        "tldr_651: unzip -l {{file.zip}}",
        "su_432791: unzip -l",
        "so_69282114: unzip -p /home/pi/archive.zip '*/file1.txt'"
      ],
      "Explanations about Options": {
        "-p": "extract files to pipe (stdout). Nothing but the file data is sent to stdout , and\n the files are always extracted in binary format, just as they are stored (no\n conversions)."
      }
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Add files to an existing zip file",
      "Most Similar TLDR Script": "zip {{compressed.zip}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "so_44839636: Remove the space from the beginning of file name inside the zip file, without extracting the zip file",
        "au_1333388: Finding a offset of file in a zip without unziping using shell?"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "so_44839636: #!/bin/bash\n\nfor zip in *.zip\ndo\n    ZIPNOTES=$(zipnote \"$zip\")\n    TRIMMED=$(echo \"$ZIPNOTES\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/')\n    echo \"$TRIMMED\" | zipnote -w \"$zip\"\ndone\n\n#!/bin/bash\nfor zip in *.zip; do zipnote \"$zip\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/' | zipnote -w \"$zip\"; done\n\n$ zipnote archive.zip\n@   foo\n@ (comment above this line)\n@ bar\n@ (comment above this line)\n@ (zip file comment below this line)",
        "au_1333388: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "so_44839636: Remove the space from the beginning of file name inside the zip file, without extracting the zip file",
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "so_44839636: $ zipnote archive.zip\n@   foo\n@ (comment above this line)\n@ bar\n@ (comment above this line)\n@ (zip file comment below this line)",
        "so_24065013: -O      (x, t modes only) In extract (-x) mode, files will be written to\n         standard out rather than being extracted to disk.  In list (-t)\n         mode, the file listing will be written to stderr rather than the\n         usual stdout."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a path pattern",
      "Most Similar TLDR Script": "find {{root_path}} -path '{{**/lib/**/*.ext}}'",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?",
        "ul_447023: Extracting the contents of a tar folder into a target directory",
        "so_44682169: Find the file path of a specific file inside a zipped folder"
      ],
      "Top-3 Scripts": [
        "so_24065013: touch log1.txt\ntouch log2.txt\n\necho 'June 5, 2014. The system works!' >> log1.txt\necho 'June 5, 2014. The system found a problem at line 3!' >> log2.txt\n\nfind . -maxdepth 1 -name \"log*.txt\" | xargs tar -czvf logfiles.tar\ngzip logfiles.tar",
        "ul_447023: $ find /tmp/extract\n/tmp/extract\n/tmp/extract/b\n/tmp/extract/a",
        "so_44682169: $ find \"/path/folder\" -name \"*06may2017*\" -exec unzip -l {} \\; | awk '$1 ~ /Archive/{zipname = $2}; $4 ~ /file_B/ {printf \"%s/%s\\n\", zipname, $4}'"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
      }
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "List the contents of a tar file",
      "Most Similar TLDR Script": "tar tvf {{source.tar}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_356496: Can I view file names from zipped tar file without unzip and extracting it?",
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "ul_520188: Using tree with tar.gz file without extracting contents"
      ],
      "Top-3 Scripts": [
        "ul_356496: tar -tvzf file.tar.gz",
        "au_983944: ",
        "ul_520188: "
      ],
      "Explanations about Options": {
        "-z": "Filter the archive through gzip(1).",
        "-t": "List the contents of an archive. Arguments are optional. When given, they specify\n the names of the members to list.",
        "-v": "Verbosely list files processed."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "so_44839636: Remove the space from the beginning of file name inside the zip file, without extracting the zip file",
        "au_1333388: Finding a offset of file in a zip without unziping using shell?"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "so_44839636: #!/bin/bash\n\nfor zip in *.zip\ndo\n    ZIPNOTES=$(zipnote \"$zip\")\n    TRIMMED=$(echo \"$ZIPNOTES\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/')\n    echo \"$TRIMMED\" | zipnote -w \"$zip\"\ndone",
        "au_1333388: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "7z",
      "MP Summary": "A file archiver with high compression ratio format",
      "Most Similar TLDR Task": "Extract an archive to stdout",
      "Most Similar TLDR Script": "7z x {{archived.7z}} -so",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "so_28978031: How to extract a variety of zip files without knowing the extension in bash"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "so_28978031: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "su_647674: Is there a way to edit files inside of a zip file without explicitly extracting them first?"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "su_647674: zipedit(){\n    echo \"Usage: zipedit archive.zip folder/file.txt\"\n    curdir=$(pwd)\n    unzip \"$1\" \"$2\" -d /tmp \n    cd /tmp\n    vi \"$2\" && zip --update \"$curdir/$1\"  \"$2\" \n    # remove this line to just keep overwriting files in /tmp\n    rm -f \"$2\" # or remove -f if you want to confirm\n    cd \"$curdir\"\n}"
      ],
      "Explanations about Options": {
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "so_19253909: Getting files names inside a rar/zip file without unzip",
        "su_647674: Is there a way to edit files inside of a zip file without explicitly extracting them first?"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "so_19253909: ",
        "su_647674: zipedit(){\n    echo \"Usage: zipedit archive.zip folder/file.txt\"\n    curdir=$(pwd)\n    unzip \"$1\" \"$2\" -d /tmp \n    cd /tmp\n    vi \"$2\" && zip --update \"$curdir/$1\"  \"$2\" \n    # remove this line to just keep overwriting files in /tmp\n    rm -f \"$2\" # or remove -f if you want to confirm\n    cd \"$curdir\"\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Open a file",
      "Most Similar TLDR Script": "more {{source_file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?",
        "au_1097242: How to see the contents of a file without using a text editor"
      ],
      "Top-3 Scripts": [
        "so_24065013: tar xfO logfiles.tar.gz log1.txt | less\ntar xfO logfiles.tar.gz log2.txt | less\n\ntar xfO logfiles.tar.gz log1.txt | more\ntar xfO logfiles.tar.gz log2.txt | more",
        "au_1097242: more <file_name>\nless <file_name>\ncat <file_name>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_196679: How to list content of all .zip files in a folder and grep for a specific file?",
        "su_834959: How to zip a list of files in Linux"
      ],
      "Top-3 Scripts": [
        "au_196679: for file in *.zip; do\n    unzip -l \"$file\"\ndone \\\n| grep \"\\.zip\\|setup\"\n\ngrep \"\\.zip\\|your\\ file\"",
        "su_834959: grep -rl \"abc\" file-* | zip archive -@"
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44839636: Remove the space from the beginning of file name inside the zip file, without extracting the zip file",
        "nl2bash_15601: Sum the total content size of the extracted files in \"archive.tar.gz\"",
        "ul_329752: Parallel read the contents of a zipped file without extraction"
      ],
      "Top-3 Scripts": [
        "so_44839636: #!/bin/bash\n\nfor zip in *.zip\ndo\n    ZIPNOTES=$(zipnote \"$zip\")\n    TRIMMED=$(echo \"$ZIPNOTES\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/')\n    echo \"$TRIMMED\" | zipnote -w \"$zip\"\ndone\n\n#!/bin/bash\nfor zip in *.zip; do zipnote \"$zip\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/' | zipnote -w \"$zip\"; done",
        "nl2bash_15601: tar tzvf archive.tar.gz | sed 's/ \\+/ /g' | cut -f3 -d' ' | sed '2,$s/^/+ /' | paste -sd' ' | bc",
        "ul_329752: find *_fastqc.zip -type f | sed 's/\\.zip$//' |\nparallel -j 3 'unzip -c {}.zip {}/fastqc_data.txt | crimson fastqc /dev/stdin' |\nless"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "xz",
      "MP Summary": "Compress or decompress .xz and .lzma files",
      "Most Similar TLDR Task": "Decompress a file and write to `stdout`",
      "Most Similar TLDR Script": "xz -dc {{file.xz}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_155997: Compress a tar file without extracting the content"
      ],
      "Top-3 Scripts": [
        "ul_155997: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1333388: Finding a offset of file in a zip without unziping using shell?",
        "so_23165162: How to extract data from bz2 file without decompress the file"
      ],
      "Top-3 Scripts": [
        "au_1333388: print \"$1,$2\\n\"\n    if /^\\S+\\s+Filename\\s+'(.*?)'.*?^(\\S+?)\\s+PAYLOAD/ms;",
        "so_23165162: bzcat input.txt.bz2 | awk '{print $1}' > output.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Print the contents of a file to the standard output",
      "Most Similar TLDR Script": "cat {{file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1097242: How to see the contents of a file without using a text editor"
      ],
      "Top-3 Scripts": [
        "au_1097242: more <file_name>\nless <file_name>\ncat <file_name>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23165162: How to extract data from bz2 file without decompress the file",
        "so_27028489: How to extract the given list of lines from a file without writing a script",
        "so_44682169: Find the file path of a specific file inside a zipped folder"
      ],
      "Top-3 Scripts": [
        "so_23165162: bzcat input.txt.bz2 | awk '{print $1}' > output.txt",
        "so_27028489: awk 'FNR==NR {a[$1]; next} FNR in a' file1 file2",
        "so_44682169: $ find \"/path/folder\" -name \"*06may2017*\" -exec unzip -l {} \\; | awk '$1 ~ /Archive/{zipname = $2}; $4 ~ /file_B/ {printf \"%s/%s\\n\", zipname, $4}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files one per line",
      "Most Similar TLDR Script": "ls -1",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14295771: How do I extract files without folder structure using tar"
      ],
      "Top-3 Scripts": [
        "so_14295771: $tar -tf tarfolder.tar\ntarfolder/\ntarfolder/file.a\ntarfolder/file.b\n\n$ls -la file.*\nls: file.*: No such file or directory\n\n$tar -xf tarfolder.tar --strip-components 1\n$ls -la file.*\n-rw-r--r--  1 ericgorr  wheel  0 Jan 12 12:33 file.a\n-rw-r--r--  1 ericgorr  wheel  0 Jan 12 12:33 file.b"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format",
        "-a": "do not ignore entries starting with ."
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in verbose mode, showing files after they are moved",
      "Most Similar TLDR Script": "mv -v {{source}} {{target}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself"
      ],
      "Top-3 Scripts": [
        "au_983944: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_15601: Sum the total content size of the extracted files in \"archive.tar.gz\""
      ],
      "Top-3 Scripts": [
        "nl2bash_15601: tar tzvf archive.tar.gz | sed 's/ \\+/ /g' | cut -f3 -d' ' | sed '2,$s/^/+ /' | paste -sd' ' | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Use the times from a file to set the times on a second file",
      "Most Similar TLDR Script": "touch -r {{filename}} {{filename2}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?"
      ],
      "Top-3 Scripts": [
        "so_24065013: touch log1.txt\ntouch log2.txt\n\necho 'June 5, 2014. The system works!' >> log1.txt\necho 'June 5, 2014. The system found a problem at line 3!' >> log2.txt\n\nfind . -maxdepth 1 -name \"log*.txt\" | xargs tar -czvf logfiles.tar\ngzip logfiles.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination, setting their group ownership",
      "Most Similar TLDR Script": "install -g {{user}} {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28978031: How to extract a variety of zip files without knowing the extension in bash"
      ],
      "Top-3 Scripts": [
        "so_28978031: apt-get install p7zip-full"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_471133: Is there an efficient command for listing the header of a particular file in tar.bz2 without uncompressing/extracting?"
      ],
      "Top-3 Scripts": [
        "ul_471133: tar -xOf data.tar.bz2 file-of-interest | head -n1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bzip2",
      "MP Summary": "a block-sorting file compressor, v1.0.8",
      "Most Similar TLDR Task": "Decompress a file",
      "Most Similar TLDR Script": "bzip2 -d {{path/to/compressed_file.bz2}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_155997: Compress a tar file without extracting the content"
      ],
      "Top-3 Scripts": [
        "ul_155997: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using TAB as delimiter",
      "Most Similar TLDR Script": "paste -s {{file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_15601: Sum the total content size of the extracted files in \"archive.tar.gz\""
      ],
      "Top-3 Scripts": [
        "nl2bash_15601: tar tzvf archive.tar.gz | sed 's/ \\+/ /g' | cut -f3 -d' ' | sed '2,$s/^/+ /' | paste -sd' ' | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "p7zip",
      "MP Summary": "Wrapper on 7-Zip file archiver with high compression ratio",
      "Most Similar TLDR Task": "Decompress a file keeping the input file",
      "Most Similar TLDR Script": "p7zip -d -k {{compressed.ext}}.7z",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28978031: How to extract a variety of zip files without knowing the extension in bash"
      ],
      "Top-3 Scripts": [
        "so_28978031: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count lines in file",
      "Most Similar TLDR Script": "wc -l {{file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19047860: How to find the number of lines of the files inside a tar file without extracting"
      ],
      "Top-3 Scripts": [
        "so_19047860: for file in $(tar -tf \"$tarfile\")\ndo\n    NL=$(tar Oxf \"$tarfile\" \"$file\" | wc -l)\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?"
      ],
      "Top-3 Scripts": [
        "so_24065013: touch log1.txt\ntouch log2.txt\n\necho 'June 5, 2014. The system works!' >> log1.txt\necho 'June 5, 2014. The system found a problem at line 3!' >> log2.txt\n\nfind . -maxdepth 1 -name \"log*.txt\" | xargs tar -czvf logfiles.tar\ngzip logfiles.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44682169: Find the file path of a specific file inside a zipped folder"
      ],
      "Top-3 Scripts": [
        "so_44682169: $ find \"/path/folder\" -name \"*06may2017*\" -exec unzip -l {} \\; | awk '$1 ~ /Archive/{zipname = $2}; $4 ~ /file_B/ {printf \"%s/%s\\n\", zipname, $4}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run a command using the input data as arguments",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs {{command}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?"
      ],
      "Top-3 Scripts": [
        "so_24065013: touch log1.txt\ntouch log2.txt\n\necho 'June 5, 2014. The system works!' >> log1.txt\necho 'June 5, 2014. The system found a problem at line 3!' >> log2.txt\n\nfind . -maxdepth 1 -name \"log*.txt\" | xargs tar -czvf logfiles.tar\ngzip logfiles.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66655681: How to create zip without subfolders in Python?"
      ],
      "Top-3 Scripts": [
        "so_66655681: from pathlib import Path\n\n...\nfor file in Path(folder_path).glob(\"*\"):\n    zip_obj.write(file, arcname=file.name)\n..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "bash {{file.sh}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_647674: Is there a way to edit files inside of a zip file without explicitly extracting them first?"
      ],
      "Top-3 Scripts": [
        "su_647674: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "less",
      "MP Summary": "opposite of more",
      "Most Similar TLDR Task": "Open a file",
      "Most Similar TLDR Script": "less {{source_file}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?",
        "au_1097242: How to see the contents of a file without using a text editor",
        "ul_329752: Parallel read the contents of a zipped file without extraction"
      ],
      "Top-3 Scripts": [
        "so_24065013: tar xfO logfiles.tar.gz log1.txt | less\ntar xfO logfiles.tar.gz log2.txt | less\n\ntar xfO logfiles.tar.gz log1.txt | more\ntar xfO logfiles.tar.gz log2.txt | more",
        "au_1097242: more <file_name>\nless <file_name>\ncat <file_name>",
        "ul_329752: find *_fastqc.zip -type f | sed 's/\\.zip$//' |\nparallel -j 3 'unzip -c {}.zip {}/fastqc_data.txt | crimson fastqc /dev/stdin' |\nless"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_244636: Extract a List of .zip files into one new directory each, directory name to be taken from name of the zip file"
      ],
      "Top-3 Scripts": [
        "ul_244636: for z in ./*.zip\ndo name=\"${z%%_*}\"; dest=\".${name//[ .-]/}\"; mkdir \"$dest\"; unzip \"$z\" -d \"$dest\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "named",
      "MP Summary": "Internet domain name server",
      "Most Similar TLDR Task": "Read a custom configuration file",
      "Most Similar TLDR Script": "named -c {{path/to/named.conf}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself"
      ],
      "Top-3 Scripts": [
        "au_983944: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44839636: Remove the space from the beginning of file name inside the zip file, without extracting the zip file",
        "au_1182489: Linux unzip file from script without outputting the unzipped file names"
      ],
      "Top-3 Scripts": [
        "so_44839636: man zipnote",
        "au_1182489: man unzip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "vim",
      "MP Summary": "Vi IMproved, a programmer's text editor",
      "Most Similar TLDR Task": "Save a file",
      "Most Similar TLDR Script": ":write<Enter>",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_647674: Is there a way to edit files inside of a zip file without explicitly extracting them first?"
      ],
      "Top-3 Scripts": [
        "su_647674: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "emacs",
      "MP Summary": "GNU project Emacs editor",
      "Most Similar TLDR Task": "Save a file",
      "Most Similar TLDR Script": "Ctrl + X, Ctrl + S",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_647674: Is there a way to edit files inside of a zip file without explicitly extracting them first?"
      ],
      "Top-3 Scripts": [
        "su_647674: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Convert JPG images to PNG using replacement strings",
      "Most Similar TLDR Script": "parallel convert {} {.}.png ::: *.jpg",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_329752: Parallel read the contents of a zipped file without extraction"
      ],
      "Top-3 Scripts": [
        "ul_329752: find *_fastqc.zip -type f | sed 's/\\.zip$//' |\nparallel -j 3 'unzip -c {}.zip {}/fastqc_data.txt | crimson fastqc /dev/stdin' |\nless"
      ],
      "Explanations about Options": {
        "-j": "Use to limit the number of jobs that are run at the same time."
      }
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a find/replace expression on a file, saving the original file with a given extension",
      "Most Similar TLDR Script": "perl -p -i'.old' -e 's/{{find}}/{{replace}}/g' {{filename}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1333388: Finding a offset of file in a zip without unziping using shell?",
        "so_48582553: Extracting text from a file and appending the contents at the end of each line in unix"
      ],
      "Top-3 Scripts": [
        "au_1333388: $ zipdetails  test.zip | perl -00 -ne 'print \"$1,$2\\n\" if /^\\S+\\s+Filename\\s+'\"'\"'(.*?)'\"'\"'.*?^(\\S+?)\\s+PAYLOAD/ms'\nabc.txt,0041",
        "so_48582553: perl -plaF'/\\|/' -e '$_ .= \"|$F[0]_$F[1]\"' -- file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute the commands and email the result using a local mailing program such as sendmail",
      "Most Similar TLDR Script": "at {{hh:mm}} -m",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?"
      ],
      "Top-3 Scripts": [
        "so_24065013: touch log1.txt\ntouch log2.txt\n\necho 'June 5, 2014. The system works!' >> log1.txt\necho 'June 5, 2014. The system found a problem at line 3!' >> log2.txt\n\nfind . -maxdepth 1 -name \"log*.txt\" | xargs tar -czvf logfiles.tar\ngzip logfiles.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pi",
      "MP Summary": "compute decimal Archimedes' constant Pi to arbitrary accuracy.",
      "Most Similar TLDR Task": "Display recommended readings",
      "Most Similar TLDR Script": "pi --bibliography",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69282114: get the text inside a zipped text file without extraction"
      ],
      "Top-3 Scripts": [
        "so_69282114: unzip -p /home/pi/archive.zip '*/file1.txt'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded",
      "Most Similar TLDR Script": "apt-get autoclean",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28978031: How to extract a variety of zip files without knowing the extension in bash"
      ],
      "Top-3 Scripts": [
        "so_28978031: apt-get install p7zip-full"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Execute script in a given Python file",
      "Most Similar TLDR Script": "python {{script.py}}",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_520188: Using tree with tar.gz file without extracting contents"
      ],
      "Top-3 Scripts": [
        "ul_520188: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Run calculator in interactive mode using the standard math library",
      "Most Similar TLDR Script": "bc -l",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_15601: Sum the total content size of the extracted files in \"archive.tar.gz\""
      ],
      "Top-3 Scripts": [
        "nl2bash_15601: tar tzvf archive.tar.gz | sed 's/ \\+/ /g' | cut -f3 -d' ' | sed '2,$s/^/+ /' | paste -sd' ' | bc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "get",
      "MP Summary": "symbolic link to as_run command",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself"
      ],
      "Top-3 Scripts": [
        "au_983944: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "extract",
      "MP Summary": "determine meta-information about a file",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?",
        "ul_447023: Extracting the contents of a tar folder into a target directory"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "so_24065013: -O      (x, t modes only) In extract (-x) mode, files will be written to\n         standard out rather than being extracted to disk.  In list (-t)\n         mode, the file listing will be written to stderr rather than the\n         usual stdout.",
        "ul_447023: tar --extract --file in.tar --directory /extract /home/me/stuff --strip 3\n\n/tmp/extract\n\n$ find /tmp/extract\n/tmp/extract\n/tmp/extract/b\n/tmp/extract/a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself",
        "au_1333388: Finding a offset of file in a zip without unziping using shell?",
        "so_24065013: How to read a file content from multiple compressed files without decompressing the folder?"
      ],
      "Top-3 Scripts": [
        "au_983944: ",
        "au_1333388: ",
        "so_24065013: -O      (x, t modes only) In extract (-x) mode, files will be written to\n         standard out rather than being extracted to disk.  In list (-t)\n         mode, the file listing will be written to stderr rather than the\n         usual stdout."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "continue",
      "MP Summary": "continue for, while, or until loop",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself"
      ],
      "Top-3 Scripts": [
        "au_983944: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cleanup",
      "MP Summary": "canonicalize and enqueue Postfix message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_983944: Rename the files as they are extracted from the zip file as the name of the zip file itself"
      ],
      "Top-3 Scripts": [
        "au_983944: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zipnote",
      "MP Summary": "write  the  comments  in  zipfile to stdout, edit comments and rename files in zipfile",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "extract the content of the file doc.gz and split it into pieces per 1000 lines compressed with gzip",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat doc.gz | split -l 1000 --filter='gzip > $FILE.gz'\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "split": {
              "mpsum": "split a file into pieces",
              "-l": "put NUMBER lines/records per output file",
              "--filter": "write to shell COMMAND; file name is $FILE"
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44839636: Remove the space from the beginning of file name inside the zip file, without extracting the zip file"
      ],
      "Top-3 Scripts": [
        "so_44839636: #!/bin/bash\n\nfor zip in *.zip\ndo\n    ZIPNOTES=$(zipnote \"$zip\")\n    TRIMMED=$(echo \"$ZIPNOTES\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/')\n    echo \"$TRIMMED\" | zipnote -w \"$zip\"\ndone\n\n#!/bin/bash\nfor zip in *.zip; do zipnote \"$zip\" | sed -e 's/^@[ \\t]\\{2,\\}\\(.*\\)/&\\n@=\\1/' | zipnote -w \"$zip\"; done\n\n$ zipnote archive.zip\n@   foo\n@ (comment above this line)\n@ bar\n@ (comment above this line)\n@ (zip file comment below this line)\n\nman zipnote\n\nzipnote -w archive.zip"
      ],
      "Explanations about Options": {
        "-w": "Write comments to a zipfile from stdin (see below)."
      }
    }
  ]
}