{
  "Query": "Assigning the output of a SQL query to variable",
  "Answers": [
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_15605494: Bash: assigning output of command substitution to an integer variable",
        "so_28730007: Assign specific content of a .txt file into a bash variable",
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "so_15605494: ",
        "so_28730007: ",
        "ul_16024: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_26032752: Assign output of sql query to a variable in unix",
        "so_48500178: assign the multiline output of command to a variable",
        "so_30049179: How to assign the output of calculation to a shell variable"
      ],
      "Top-3 Scripts": [
        "so_26032752: count=`sqlplus -s ${DB_USER}/${DB_PASS}@${DB_INST} <<END\nset pages 0 echo off feed off\nSELECT COUNT(column_name)\nexit;\nEND`",
        "so_48500178: output=`echo abc && uncrustify -c ~/.uncrustify.cfg --check filename && echo def`\n\noutput=\"$(echo abc)\\n$(uncrustify -c ~/.uncrustify.cfg --check filename 2>&1)\\n$(echo def)\"\necho -e \"$output\"",
        "so_30049179: echo $((dec))"
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25263764: how do i assigne out put of command as variable",
        "so_29989457: Assign variable the grep value of command output",
        "ul_365512: assign number of output lines to a variable"
      ],
      "Top-3 Scripts": [
        "so_25263764: ",
        "so_29989457: read variable\n\ndeclare -A details\nwhile IFS== read field value; do\n  details[$field]=\"$value\"\ndone < <(ffprobe -i \"$file\" -show_format -v quiet | grep '.=.')\n\necho \"${details[duration]}\"",
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Mark variables that are modified or created for export",
      "Most Similar TLDR Script": "set -a",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_26032752: Assign output of sql query to a variable in unix",
        "so_2454660: How to assign the output of a command to a variable?",
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "so_26032752: count=`sqlplus -s ${DB_USER}/${DB_PASS}@${DB_INST} <<END\nset pages 0 echo off feed off\nSELECT COUNT(column_name)\nexit;\nEND`",
        "so_2454660: $ var=$(< temp)\n$ set -- $var\n$ echo $7",
        "ul_16024: set -e\n\n#!/bin/zsh\nset -e\ncd ~/Desktop\nthefile=(*\"Screen Shot\"*(om[1]))\nprint -r \"Most recent screenshot is: $thefile\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_2019989: How to assign the output of a command to a Makefile variable",
        "so_11527899: Assigning output of a command to a variable(BASH)"
      ],
      "Top-3 Scripts": [
        "so_2019989: me@Zack:~$ cat Makefile \nMY_VAR := $(shell echo whatever)\n\nall:\n    @echo MY_VAR IS $(MY_VAR)",
        "so_11527899: # Second step : awk has a powerful regular expression engine ^^\nUUID=$(cat /etc/fstab|awk '/UUID.*ext4/ {print substr($1,6)}')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_59343738: Cannot assign output of sed to a variable",
        "so_38288104: Assigning part of a command output to a variable (bash)",
        "so_29989457: Assign variable the grep value of command output"
      ],
      "Top-3 Scripts": [
        "so_59343738: \"${OUTPUT_INLINE}\" | sed \"s|\\<|$PREFIX|g\"\n\nOUTPUT=$(echo -n \"${OUTPUT_INLINE}\" | sed \"s|\\<|$PREFIX|g\")",
        "so_38288104: $ var=\"$(./your_script | sed -E 's/.*(code = [[:digit:]]+).*/\\1/')\"\n$ echo \"$var\"\ncode = 211\n\n$ eval \"$(./your_script | sed -E 's/.*(code = [[:digit:]]+).*/\\1/;s/ //g')\"\n$ echo \"$code\"\n211",
        "so_29989457: str_duration=$(ffprobe -i \"$file\" -show_format -v quiet | sed -ne '/^duration=/s///p')"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed",
        "-E": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_38288104: Assigning part of a command output to a variable (bash)",
        "so_29989457: Assign variable the grep value of command output"
      ],
      "Top-3 Scripts": [
        "so_38288104: $ eval \"$(./your_script | sed -E 's/.*(code = [[:digit:]]+).*/\\1/;s/ //g')\"\n$ echo \"$code\"\n211",
        "so_29989457: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_60737015: generate SQL queries out of CSV table",
        "ul_34130: How to assign value of variable with regex (bash)?"
      ],
      "Top-3 Scripts": [
        "so_60737015: awk 'NR==1{x=$0;next} {printf \"INSERT INTO tablename (%s) VALUES (%s)\\n\",x,$0}' file",
        "ul_34130: ip=($(printf '\n172.31.130.14\n14\\.130\\.31\\.172\n33\\.135\\.220\\.0\n' | sed 's/\\\\//g'))\nfor ((i=0;i<${#ip[@]};i++));do\n  echo \"${ip[i]}\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_11527899: Assigning output of a command to a variable(BASH)",
        "so_28730007: Assign specific content of a .txt file into a bash variable",
        "so_29989457: Assign variable the grep value of command output"
      ],
      "Top-3 Scripts": [
        "so_11527899: UUID=$(grep UUID /etc/fstab|awk '/ext4/ {print $1}'|awk '{print substr($0,6)}')\necho $UUID # writes e577b87e-2fec-893b-c237-6a14aeb5b390\n\n# First step : Only one awk\nUUID=$(grep UUID /etc/fstab|awk '/ext4/ {print substr($1,6)}')",
        "so_28730007: grep -Ewo \"[+-]?[0-9]*\\.?[0-9]+\" file\necho $n\n\n0.78\n\nvar=$(grep -Ewo \"[+-]?[0-9]*\\.[0-9]*\" file)\necho $var",
        "so_29989457: file=\"media/myvideo.mp4\"\nstr_duration=$(ffprobe -i \"$file\" -show_format -v quiet | grep ^duration | cut -d= -f2)\n\ndeclare -A details\nwhile IFS== read field value; do\n  details[$field]=\"$value\"\ndone < <(ffprobe -i \"$file\" -show_format -v quiet | grep '.=.')\n\necho \"${details[duration]}\""
      ],
      "Explanations about Options": {
        "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
      }
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_580007: how to get dynamic variable in a query of a shell script",
        "so_25263764: how do i assigne out put of command as variable"
      ],
      "Top-3 Scripts": [
        "ul_580007: mysql -u$master_db_user -p$master_db_passwd -D$master_db_name \\\n    -e \"select * from uppcl_amount_details where date='$Now' into \\\n         outfile '/created_files/uppcl.csv' fields terminated by ',' \\\n          lines terminated by '\\n'\";\n\n$ date +\"%d-%m-20%Y\"\n14-04-202020\n\n$ date +%F\n2020-04-14\n\nNow=$(date +%F)",
        "so_25263764: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_28730007: Assign specific content of a .txt file into a bash variable",
        "so_29989457: Assign variable the grep value of command output",
        "so_60737015: generate SQL queries out of CSV table"
      ],
      "Top-3 Scripts": [
        "so_28730007: grep -Ewo \"[+-]?[0-9]*\\.?[0-9]+\" file\necho $n\n\n0.78",
        "so_29989457: file=\"media/myvideo.mp4\"\nstr_duration=$(ffprobe -i \"$file\" -show_format -v quiet | grep ^duration | cut -d= -f2)",
        "so_60737015: awk 'NR==1{x=$0;next} {printf \"INSERT INTO tablename (%s) VALUES (%s)\\n\",x,$0}' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_41913630: Problems assigning variable to output of command",
        "ul_365512: assign number of output lines to a variable"
      ],
      "Top-3 Scripts": [
        "so_41913630: out=$(wc -l < songs.txt)",
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5\n\nwc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_15605494: Bash: assigning output of command substitution to an integer variable",
        "so_37194795: Assign output of a shell command to a variable",
        "so_11527899: Assigning output of a command to a variable(BASH)"
      ],
      "Top-3 Scripts": [
        "so_15605494: n_jobs=$( jobs -p | awk '{print NR}' )",
        "so_37194795: size=$(echo ${result[$i]} | awk '{print $1}')\n\n${result[$i]} | awk '{print $1}'",
        "so_11527899: UUID=$(grep UUID /etc/fstab|awk '/ext4/ {print $1}'|awk '{print substr($0,6)}')\necho $UUID # writes e577b87e-2fec-893b-c237-6a14aeb5b390\n\n# First step : Only one awk\nUUID=$(grep UUID /etc/fstab|awk '/ext4/ {print substr($1,6)}')\n\n# Second step : awk has a powerful regular expression engine ^^\nUUID=$(cat /etc/fstab|awk '/UUID.*ext4/ {print substr($1,6)}')\n\n# Third step : awk use fstab directlty\nUUID=$(awk '/UUID.*ext4/ {print substr($1,6)}' /etc/fstab)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_365512: assign number of output lines to a variable"
      ],
      "Top-3 Scripts": [
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_15605494: Bash: assigning output of command substitution to an integer variable",
        "so_37194795: Assign output of a shell command to a variable",
        "so_11527899: Assigning output of a command to a variable(BASH)"
      ],
      "Top-3 Scripts": [
        "so_15605494: n_jobs=$( jobs -p | awk '{print NR}' )",
        "so_37194795: size=$(echo ${result[$i]} | awk '{print $1}')\n\n${result[$i]} | awk '{print $1}'",
        "so_11527899: UUID=$(grep UUID /etc/fstab|awk '/ext4/ {print $1}'|awk '{print substr($0,6)}')\necho $UUID # writes e577b87e-2fec-893b-c237-6a14aeb5b390\n\n# First step : Only one awk\nUUID=$(grep UUID /etc/fstab|awk '/ext4/ {print substr($1,6)}')\n\n# Second step : awk has a powerful regular expression engine ^^\nUUID=$(cat /etc/fstab|awk '/UUID.*ext4/ {print substr($1,6)}')\n\n# Third step : awk use fstab directlty\nUUID=$(awk '/UUID.*ext4/ {print substr($1,6)}' /etc/fstab)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_26867388: How to assign to a bash variable the first result of locate?",
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "so_26867388: VAR1=$(locate -b 'mosesdecoder' . | head -n 1)",
        "ul_16024: thefile=$(ls -td -- *\"Screen Shot\"* | head -n 1)"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Delimit output with a NUL character instead of a newline (useful when combining with `xargs`)",
      "Most Similar TLDR Script": "dirname --zero {{path/to/directory_a}} {{path/to/file_b}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_69569663: How to assign string outputs of expressions in variables without echo?"
      ],
      "Top-3 Scripts": [
        "so_69569663: somepath='/some/path'\nfilename=${somepath##*/}\ndirname=${somepath%/*}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_24896433: Assigning the result of 'test' to a variable"
      ],
      "Top-3 Scripts": [
        "so_24896433: [ -f \"$file\" ]               # run the test\nresult=$?                    # store the result\n\nif (( result == 0 )); then   # 0 is success\n  echo \"success\"\nelse                         # nonzero is failure\n  echo \"failure\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pwd",
      "MP Summary": "print name of current/working directory",
      "Most Similar TLDR Task": "Print the current directory",
      "Most Similar TLDR Script": "pwd",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_2314750: How to assign the output of a Bash command to a variable?"
      ],
      "Top-3 Scripts": [
        "so_2314750: pwd=`pwd`\n\npwd=$(pwd)\n\n$pwd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_281219: How to write down SQL query to get the data count of a table?"
      ],
      "Top-3 Scripts": [
        "ul_281219: sql> select count (*) as fdr_data from fdr_data where datum like (select sysdate -1 from dual);"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Separate the output with a space instead of a newline",
      "Most Similar TLDR Script": "seq -s \" \" 5 3 20",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_365512: assign number of output lines to a variable"
      ],
      "Top-3 Scripts": [
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5\n\nseq 1 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "locate",
      "MP Summary": "list files in databases that match a pattern",
      "Most Similar TLDR Task": "Look for a file by its exact filename (a pattern containing no globbing characters is interpreted as `*pattern*`)",
      "Most Similar TLDR Script": "locate */{{filename}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_26867388: How to assign to a bash variable the first result of locate?"
      ],
      "Top-3 Scripts": [
        "so_26867388: VAR1=$(locate -b 'mosesdecoder' . | head -n 1)"
      ],
      "Explanations about Options": {
        "-b": "Results are considered to match if the pattern specified matches the final\n component of the name of a file as listed in the database. This final component is\n usually referred to as the `base name'."
      }
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_14397393: How to assign the result of a shell command to a MySQL variable?"
      ],
      "Top-3 Scripts": [
        "so_14397393: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_14397393: How to assign the result of a shell command to a MySQL variable?"
      ],
      "Top-3 Scripts": [
        "so_14397393: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Use a specific Makefile",
      "Most Similar TLDR Script": "make --file {{file}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_2019989: How to assign the output of a command to a Makefile variable"
      ],
      "Top-3 Scripts": [
        "so_2019989: me@Zack:~$make\nMY_VAR IS whatever"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uncrustify",
      "MP Summary": "C, C++, C#, D, Java and Pawn source code beautifier",
      "Most Similar TLDR Task": "Explicitly set a configuration variable's value",
      "Most Similar TLDR Script": "uncrustify --set {{option}}={{value}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_48500178: assign the multiline output of command to a variable"
      ],
      "Top-3 Scripts": [
        "so_48500178: output=`echo abc && uncrustify -c ~/.uncrustify.cfg --check filename && echo def`\n\noutput=\"$(echo abc)\\n$(uncrustify -c ~/.uncrustify.cfg --check filename 2>&1)\\n$(echo def)\"\necho -e \"$output\""
      ],
      "Explanations about Options": {
        "--check": "Do not output the new text, instead verify that nothing changes when the file(s)\n are processed. The status of every file is printed to stderr. The exit code is\n EXIT_SUCCESS if there were no changes, EXIT_FAILURE otherwise."
      }
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
      "Most Similar TLDR Script": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_45677551: Get name of column from PowerShell sql query"
      ],
      "Top-3 Scripts": [
        "so_45677551: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_14122698: Getting the output of several MySQL queries all together"
      ],
      "Top-3 Scripts": [
        "so_14122698: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_26032752: Assign output of sql query to a variable in unix"
      ],
      "Top-3 Scripts": [
        "so_26032752: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25263764: how do i assigne out put of command as variable"
      ],
      "Top-3 Scripts": [
        "so_25263764: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "compare",
      "MP Summary": "mathematically  and  visually annotate the difference between an image and its reconstruction.",
      "Most Similar TLDR Task": "Compare 2 images",
      "Most Similar TLDR Script": "compare {{image1.png}} {{image2.png}} {{diff.png}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_34160508: How to assign output of compare command to a variable"
      ],
      "Top-3 Scripts": [
        "so_34160508: comp=$(compare -metric PSNR 1.png 2.png diff.png 2>&1)\necho $comp"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mysql",
      "MP Summary": "the MySQL command-line client",
      "Most Similar TLDR Task": "Execute SQL statements in a script file (batch file)",
      "Most Similar TLDR Script": "mysql -e \"source {{filename.sql}}\" {{database_name}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_580007: how to get dynamic variable in a query of a shell script"
      ],
      "Top-3 Scripts": [
        "ul_580007: mysql -u$master_db_user -p$master_db_passwd -D$master_db_name \\\n    -e \"select * from uppcl_amount_details where date='$Now' into \\\n         outfile '/created_files/uppcl.csv' fields terminated by ',' \\\n          lines terminated by '\\n'\";"
      ],
      "Explanations about Options": {
        "-D": "The database to use. This is useful primarily in an option file.",
        "-u": "The user name of the MySQL account to use for connecting to the server."
      }
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Also display a message if no response was received",
      "Most Similar TLDR Script": "ping -O {{host}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_15455680: Bash scripting assign ALL output from command to variable"
      ],
      "Top-3 Scripts": [
        "so_15455680: ping_results=$(ping -c 4 -q google.com);\n\nping_results=$(ping -c 4 -q google.com 2>&1);"
      ],
      "Explanations about Options": {
        "-q": "Quiet output. Nothing is displayed except the summary lines at startup time and when\n finished.",
        "-c": "Stop after sending count ECHO_REQUEST packets. With deadline option, ping waits for\n count ECHO_REPLY packets, until the timeout expires."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_29989457: Assign variable the grep value of command output"
      ],
      "Top-3 Scripts": [
        "so_29989457: file=\"media/myvideo.mp4\"\nstr_duration=$(ffprobe -i \"$file\" -show_format -v quiet | grep ^duration | cut -d= -f2)"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "ul_16024: IFS=/ read -rd '' ignored thefile < <(\n  find -maxdepth 1 -type f -name \"*Screen Shot*\" -printf \"%T@/%p\\0\" |\n    sort -rnz)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Display the routing table",
      "Most Similar TLDR Script": "ip route",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_34130: How to assign value of variable with regex (bash)?"
      ],
      "Top-3 Scripts": [
        "ul_34130: ip=\"14\\.130\\.31\\.172\"\necho \"${ip//\\\\/}\"\n\nip=($(printf '\n172.31.130.14\n14\\.130\\.31\\.172\n33\\.135\\.220\\.0\n' | sed 's/\\\\//g'))\nfor ((i=0;i<${#ip[@]};i++));do\n  echo \"${ip[i]}\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display information about jobs with changed status",
      "Most Similar TLDR Script": "jobs -n",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_15605494: Bash: assigning output of command substitution to an integer variable"
      ],
      "Top-3 Scripts": [
        "so_15605494: job_pids=( $(jobs -p) )\nn_jobs=${#job_pids[@]}\n\nn_jobs=$( jobs -p | awk '{print NR}' )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25263764: how do i assigne out put of command as variable"
      ],
      "Top-3 Scripts": [
        "so_25263764: s=$bpn$i\nmkdir -- \"$s\"\necho \"$s\"\n\nmkdir -p -- \"$s\""
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Execute command passed as parameter",
      "Most Similar TLDR Script": "zsh -c {{command}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "ul_16024: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zenity",
      "MP Summary": "display GTK+ dialogs",
      "Most Similar TLDR Task": "Display a name/password form and output the data separated by \";\"",
      "Most Similar TLDR Script": "zenity --forms --add-entry=\"{{Name}}\" --add-password=\"{{Password}}\" --separator=\"{{;}}\"",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_8342058: Assigning output of zenity to a variable"
      ],
      "Top-3 Scripts": [
        "so_8342058: OUT=$(zenity --list --text=\"Choose action\" --column= --hide-header opt1 opt2 opt3)"
      ],
      "Explanations about Options": {
        "--hide-header": "Hides the column headers",
        "--column": "Set the column header",
        "--list": "Display list dialog",
        "--text": "Set the dialog text"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "ul_16024: IFS=/ read -rd '' ignored thefile < <(\n  find -maxdepth 1 -type f -name \"*Screen Shot*\" -printf \"%T@/%p\\0\" |\n    sort -rnz)"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-type": "File is of type c:",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:"
      }
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "Show the size of a single directory, in human readable units",
      "Most Similar TLDR Script": "du -sh {{path/to/directory}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25263764: how do i assigne out put of command as variable"
      ],
      "Top-3 Scripts": [
        "so_25263764: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "task",
      "MP Summary": "A command line todo manager.",
      "Most Similar TLDR Task": "Modify task",
      "Most Similar TLDR Script": "task {{task_id}} modify {{new_thing_to_do}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_59936075: Can't assign value to a variable inside of Invoke-Command"
      ],
      "Top-3 Scripts": [
        "so_59936075: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "ul_16024: thefile=$(ls -t -U | grep -m 1 \"Screen Shot\")\n\nthefile=$(ls -td -- *\"Screen Shot\"* | head -n 1)"
      ],
      "Explanations about Options": {
        "-d": "list directories themselves, not their contents",
        "-t": "sort by modification time , newest first"
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "ul_16024: How can I assign the output of a command to a shell variable?"
      ],
      "Top-3 Scripts": [
        "ul_16024: #!/bin/zsh\nset -e\ncd ~/Desktop\nthefile=(*\"Screen Shot\"*(om[1]))\nprint -r \"Most recent screenshot is: $thefile\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ffprobe",
      "MP Summary": "ffprobe media prober",
      "Most Similar TLDR Task": "Display all available stream info for a media file",
      "Most Similar TLDR Script": "ffprobe -v error -show_entries {{input.mp4}}",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_29989457: Assign variable the grep value of command output"
      ],
      "Top-3 Scripts": [
        "so_29989457: file=\"media/myvideo.mp4\"\nstr_duration=$(ffprobe -i \"$file\" -show_format -v quiet | grep ^duration | cut -d= -f2)\n\nstr_duration=$(ffprobe -i \"$file\" -show_format -v quiet | sed -ne '/^duration=/s///p')\n\nstr_duration=$(ffprobe -i \"$file\" -show_format -v quiet | awk -F= '$1==\"duration\"{print $2}')\n\ndeclare -A details\nwhile IFS== read field value; do\n  details[$field]=\"$value\"\ndone < <(ffprobe -i \"$file\" -show_format -v quiet | grep '.=.')\n\necho \"${details[duration]}\""
      ],
      "Explanations about Options": {
        "-i": "Read input_url.",
        "-show_format": "Show information about the container format of the input multimedia stream."
      }
    },
    {
      "Command": "AS",
      "MP Summary": "the portable GNU assembler.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_39819653: How to convert the result of a sql query to a csv format"
      ],
      "Top-3 Scripts": [
        "so_39819653: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "SendEmail",
      "MP Summary": "Lightweight, command line SMTP email client",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25570376: Add result set of an sql query to email Body in Powershell"
      ],
      "Top-3 Scripts": [
        "so_25570376: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "have",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25570376: Add result set of an sql query to email Body in Powershell"
      ],
      "Top-3 Scripts": [
        "so_25570376: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "smtp",
      "MP Summary": "Postfix SMTP+LMTP client",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "find the file \"foo.txt\" in the current folder and assign the output to a variable",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "OUTPUT=`find . -name foo.txt`\n",
          "command-options": {},
          "TLDR_inform": {}
        }
      },
      "Top-3 Similar Questions": [
        "so_25570376: Add result set of an sql query to email Body in Powershell"
      ],
      "Top-3 Scripts": [
        "so_25570376: "
      ],
      "Explanations about Options": {}
    }
  ]
}