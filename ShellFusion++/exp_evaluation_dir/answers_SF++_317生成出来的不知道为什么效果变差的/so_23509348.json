{
  "Query": "How to set all elements of an array to zero or any same value?",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48694446: Assign Element of Array to Variable Bash",
        "so_38007281: How to set a range of array elements in bash",
        "so_25595249: Assigning the value of an array to a variable bash script"
      ],
      "Top-3 Scripts": [
        "so_48694446: constraints=(A B C E Q P S)\nrand=$(( RANDOM % ${#constraints[@]} ))\nconstraint=${constraints[${rand}]}\necho \"$constraint\"\n\necho $var",
        "so_38007281: for i in {1..100}; do echo 0; done\n\n$ declare -i start=12\n$ declare -i end=12\n$ eval $(eval echo \"MY_ARRAY[{$start..$end}]=1;\")",
        "so_25595249: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27554957: How to set the default value of a variable as an array?",
        "so_52678358: How to append values to an array in Bash by adding one element to the previous entry?",
        "ul_485303: How to change string values to index value to use in Array?"
      ],
      "Top-3 Scripts": [
        "so_27554957: man bash",
        "so_52678358: ",
        "ul_485303: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11087918: How can I assign a value to an array in Bash?",
        "ul_485303: How to change string values to index value to use in Array?"
      ],
      "Top-3 Scripts": [
        "so_11087918: ",
        "ul_485303: while IFS=, read -ra v; do\n  for i in \"${!v[@]}\"; do\n    printf 'v[%d] = %s\\n' \"$i\" \"${v[i]}\"\n  done\ndone < file1.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17226404: How to convert all elements of a bash array to lowercase?",
        "so_38007281: How to set a range of array elements in bash",
        "so_27554957: How to set the default value of a variable as an array?"
      ],
      "Top-3 Scripts": [
        "so_17226404: WHITELIST=( \"${WHITELIST[@],,}\" )\nprintf \"%s\\n\" \"${WHITELIST[@]}\"",
        "so_38007281: printf '%.1s\\n' 0{1..100}",
        "so_27554957: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38007281: How to set a range of array elements in bash",
        "so_43091815: Looping over array elements, given an array of arrays' variable names in Bash Script"
      ],
      "Top-3 Scripts": [
        "so_38007281: eval MY_ARRAY[{12..25}]=1\\;\n\n$ declare -i start=12\n$ declare -i end=12\n$ eval $(eval echo \"MY_ARRAY[{$start..$end}]=1;\")",
        "so_43091815: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print all values starting from the third column",
      "Most Similar TLDR Script": "awk '{for (i=3; i <= NF; i++) printf $i\"\"FS; print\"\"}' {{filename}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_12948181: How to use awk to parse values from stdout as elements of an array?",
        "ul_485303: How to change string values to index value to use in Array?"
      ],
      "Top-3 Scripts": [
        "so_12948181: array=($(elb-describe-instance-health | awk '/INSTANCE_ID/ { print $2 }'))",
        "ul_485303: awk -F, '{for (i = 0; i < NF; i++) printf \"v[%d] = %s\\n\", i, $(i+1)}' < file1.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60270842: Bash test value of last function equal to zero"
      ],
      "Top-3 Scripts": [
        "so_60270842: if test $? -eq 0"
      ],
      "Explanations about Options": {
        "-e": "FILE\n FILE exists"
      }
    },
    {
      "Command": "unset",
      "MP Summary": "unset values and attributes of variables and functions",
      "Most Similar TLDR Task": "Remove the variable `foo`, or if the variable doesn't exist, remove the function `foo`",
      "Most Similar TLDR Script": "unset {{foo}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27554957: How to set the default value of a variable as an array?"
      ],
      "Top-3 Scripts": [
        "so_27554957: ${parameter:-word}\n   Use Default Values. If parameter is unset or null, the expansion of word is substituted.\n   Otherwise, the value of parameter is substituted."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57137690: How to set a range of associative array's keys to a value"
      ],
      "Top-3 Scripts": [
        "so_57137690: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11087918: How can I assign a value to an array in Bash?"
      ],
      "Top-3 Scripts": [
        "so_11087918: $ oIFS=\"$IFS\" # Save the old input field separator\n$ IFS=$'\\n'   # Set the IFS to a newline\n$ some_array=($(<hello.txt)) # Splitting on newlines, assign the entire file to an array\n$ echo \"${some_array[2]}\" # Get the third element of the array\nc\n$ echo \"${#some_array[@]}\" # Get the length of the array\n4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58157883: Elements are reading out of array of strings, but can't be compared"
      ],
      "Top-3 Scripts": [
        "so_58157883: if(command == command_array[0].substr(0,5))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "see",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "See action can be used to view any file (usually image) on default mailcap explorer",
      "Most Similar TLDR Script": "see {{filename}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35245240: Adding value to array passed as an argument doesn't add value to it"
      ],
      "Top-3 Scripts": [
        "so_35245240: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_12948181: How to use awk to parse values from stdout as elements of an array?"
      ],
      "Top-3 Scripts": [
        "so_12948181: array=($(elb-describe-instance-health | awk '/INSTANCE_ID/ { print $2 }'))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Search for manpages containing a search string",
      "Most Similar TLDR Script": "man -k \"{{search string}}\"",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27554957: How to set the default value of a variable as an array?"
      ],
      "Top-3 Scripts": [
        "so_27554957: man bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57186089: How can I pull an array index value to a variable in powershell?"
      ],
      "Top-3 Scripts": [
        "so_57186089: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rand",
      "MP Summary": "generate pseudo-random bytes",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48694446: Assign Element of Array to Variable Bash"
      ],
      "Top-3 Scripts": [
        "so_48694446: constraints=(A B C E Q P S)\nrand=$(( RANDOM % ${#constraints[@]} ))\nconstraint=${constraints[${rand}]}\necho \"$constraint\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60270842: Bash test value of last function equal to zero",
        "so_52678358: How to append values to an array in Bash by adding one element to the previous entry?",
        "so_34414376: How to add a value into the middle of an array?"
      ],
      "Top-3 Scripts": [
        "so_60270842: if blueutil --is-connected ac-90-85-3e-0d-04\n  then\n    blueutil --connect ac-90-85-3e-0d-04\n  else\n    blueutil --disconnect ac-90-85-3e-0d-04\nfi",
        "so_52678358: fbseries=()\n\nfor ((i=1; i<=5; i++)); do\n    if [ \"$i\" -eq 1 ]; then\n        fbseries+=(\"$i\")\n    else\n        fbseries+=( $(( ${fbseries[-1]} + $i )) )\n    fi\ndone",
        "so_34414376: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27554957: How to set the default value of a variable as an array?"
      ],
      "Top-3 Scripts": [
        "so_27554957: ${parameter:-word}\n   Use Default Values. If parameter is unset or null, the expansion of word is substituted.\n   Otherwise, the value of parameter is substituted."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Split",
      "MP Summary": "Split a .ti3 into two.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69618492: Powershell: adding an element from an array to another array"
      ],
      "Top-3 Scripts": [
        "so_69618492: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "local",
      "MP Summary": "Postfix local mail delivery",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2172043: set values to elements of an array in a function",
        "so_35245240: Adding value to array passed as an argument doesn't add value to it"
      ],
      "Top-3 Scripts": [
        "so_2172043: local c_bit_mins c_bit_maxs gamma_bit_mins gamma_bit_maxs",
        "so_35245240: $ ary=(foo bar baz)\n$ fn() { local tmp=\"${1}[@]\"; local copy=(\"${!tmp}\"); declare -p copy; }\n$ fn ary\ndeclare -a copy='([0]=\"foo\" [1]=\"bar\" [2]=\"baz\")'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "return",
      "MP Summary": "return from a function or dot script",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11422794: Adding element to new array using assign by addition, but original array value dynamically changes the new array elements too"
      ],
      "Top-3 Scripts": [
        "so_11422794: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "items",
      "MP Summary": "no, '1' - yes) and the third column is the tag name itself.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51305654: foreach on each element of array"
      ],
      "Top-3 Scripts": [
        "so_51305654: $VIPUser = \"Matt\"\n$O365_TransitionGroupMembers = \"Tim\",\"John\"\n\n$collection = (($VIPUser),\"O365_VIP\"),\n(($O365_TransitionGroupMembers),\"O365_Transition\")\n\n$collection | ForEach-Object{\n    write-host (\"This element contains {0} items and the second on is: {1}\" -f $_.count, $_[1])\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51305654: foreach on each element of array"
      ],
      "Top-3 Scripts": [
        "so_51305654: $VIPUser = \"Matt\"\n$O365_TransitionGroupMembers = \"Tim\",\"John\"\n\n$collection = (($VIPUser),\"O365_VIP\"),\n(($O365_TransitionGroupMembers),\"O365_Transition\")\n\n$collection | ForEach-Object{\n    write-host (\"This element contains {0} items and the second on is: {1}\" -f $_.count, $_[1])\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35245240: Adding value to array passed as an argument doesn't add value to it",
        "so_48650075: How to assign a value to dynamic associative array in Bash?",
        "so_35668523: How to replace the first character of an array element in bash"
      ],
      "Top-3 Scripts": [
        "so_35245240: $ ary=(foo bar baz)\n$ fn() { local tmp=\"${1}[@]\"; local copy=(\"${!tmp}\"); declare -p copy; }\n$ fn ary\ndeclare -a copy='([0]=\"foo\" [1]=\"bar\" [2]=\"baz\")'",
        "so_48650075: $ arr=my_array\n$ declare -A \"$arr\"\n$ declare \"$arr[foo]=bar\"\n$ echo \"${my_array[foo]}\"\nbar\n\n$arr[foo]=bar\n\nmy_array[foo]=bar",
        "so_35668523: my_array=(foo bar abc)\necho \"${my_array[@]/?/.}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "members",
      "MP Summary": "outputs members of a group",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16486879: How to initiate array element to 0 in bash?"
      ],
      "Top-3 Scripts": [
        "so_16486879: declare -a MY_ARRAY=(0 0 0 0) # this initializes an array with four members"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "list",
      "MP Summary": "list algorithms and features",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2201571: How to prepend an element to an array in Powershell?"
      ],
      "Top-3 Scripts": [
        "so_2201571: $list = ,\"aa\" + $list"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "input",
      "MP Summary": "Yagi-Uda project antenna defining program",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11087918: How can I assign a value to an array in Bash?"
      ],
      "Top-3 Scripts": [
        "so_11087918: $ oIFS=\"$IFS\" # Save the old input field separator\n$ IFS=$'\\n'   # Set the IFS to a newline\n$ some_array=($(<hello.txt)) # Splitting on newlines, assign the entire file to an array\n$ echo \"${some_array[2]}\" # Get the third element of the array\nc\n$ echo \"${#some_array[@]}\" # Get the length of the array\n4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "field",
      "MP Summary": "plot a field (rheolef-7.1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11087918: How can I assign a value to an array in Bash?"
      ],
      "Top-3 Scripts": [
        "so_11087918: $ oIFS=\"$IFS\" # Save the old input field separator\n$ IFS=$'\\n'   # Set the IFS to a newline\n$ some_array=($(<hello.txt)) # Splitting on newlines, assign the entire file to an array\n$ echo \"${some_array[2]}\" # Get the third element of the array\nc\n$ echo \"${#some_array[@]}\" # Get the length of the array\n4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11087918: How can I assign a value to an array in Bash?",
        "so_57186089: How can I pull an array index value to a variable in powershell?"
      ],
      "Top-3 Scripts": [
        "so_11087918: $ oIFS=\"$IFS\" # Save the old input field separator\n$ IFS=$'\\n'   # Set the IFS to a newline\n$ some_array=($(<hello.txt)) # Splitting on newlines, assign the entire file to an array\n$ echo \"${some_array[2]}\" # Get the third element of the array\nc\n$ echo \"${#some_array[@]}\" # Get the length of the array\n4",
        "so_57186089: Please select a TimeZone by number : 1234\nWARNING: \nWARNING:     Your coice [ 1234 ] is not valid.\nWARNING:     Please try again ...\nWARNING: \nPress Enter to continue...:\n\nPlease select a TimeZone by number : 12\nYou chose 12 - (UTC-07:00) Mountain Time (US & Canada).\nIs that the TimeZone you want to use? [n/y]: y\n\nCurrent TimeZone = (UTC-06:00) Central Time (US & Canada)\nChosen replacement TimeZone = (UTC-07:00) Mountain Time (US & Canada)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tempfile",
      "MP Summary": "create a temporary file in a safe manner",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39126584: How to replace a symbol inside of every element's property of powershell array?"
      ],
      "Top-3 Scripts": [
        "so_39126584: Import-Csv $tempfile -Header $header | ForEach-Object {\n    foreach ($property in $_.PSObject.Properties) {\n        $property.Value = $property.Value.Replace(\"'\", \"\")\n    }\n    # Output the modified line\n    $_\n}"
      ],
      "Explanations about Options": {
        "-d": "Place the file in DIR."
      }
    },
    {
      "Command": "by",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57186089: How can I pull an array index value to a variable in powershell?"
      ],
      "Top-3 Scripts": [
        "so_57186089: Please select a TimeZone by number : 1234\nWARNING: \nWARNING:     Your coice [ 1234 ] is not valid.\nWARNING:     Please try again ...\nWARNING: \nPress Enter to continue...:\n\nPlease select a TimeZone by number : 12\nYou chose 12 - (UTC-07:00) Mountain Time (US & Canada).\nIs that the TimeZone you want to use? [n/y]: y\n\nCurrent TimeZone = (UTC-06:00) Central Time (US & Canada)\nChosen replacement TimeZone = (UTC-07:00) Mountain Time (US & Canada)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "simple",
      "MP Summary": "basic example action",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "set MyVariable to the value of VARIABLE_NAME",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "myVariable=$(env  | grep VARIABLE_NAME | grep -oe '[^=]*$');\n",
          "command-options": {
            "env": {
              "mpsum": "run a program in a modified environment"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            }
          },
          "TLDR_inform": {
            "env": {
              "man1_env_8678": "show environ run program modifi environ clear environ run program remov variabl environ run program run program\noften use script shebang\nlook path program set variabl run program set multipl variabl run program show environ"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39967406: Copy a value of an element into another element"
      ],
      "Top-3 Scripts": [
        "so_39967406: $xml.order.sf_st_mail = $xml.order.sf_re_mail # for simple text values"
      ],
      "Explanations about Options": {}
    }
  ]
}