{
  "Query": "Getting the count of unique values in a column in bash",
  "Answers": [
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13821: Count the number of lines in \"testfile\" wrapped to fit in a width of \"$COLUMNS\" characters",
        "so_38677961: Replacing value in column with another value in txt file using awk",
        "nl2bash_13977: Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: \"length(FOO_NO_TRAIL_SPACE)==<counted number of characters>\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13821: fold -w \"$COLUMNS\" testfile | wc -l",
        "so_38677961: $ awk -v n=\"$(wc -l <file.txt)\" 'NR==n{$2=$5+1} 1' OFS='\\t' file.txt\nAAA     134     145     Sat     150     167\nAAA     156     167     Sat     150     167\nAAA     151     187     Sat     150     167",
        "nl2bash_13977: echo -e \"length(FOO_NO_TRAIL_SPACE)==$(echo -ne \"${FOO_NO_TRAIL_SPACE}\" | wc -m)\""
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only unique lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -u",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56018876: Find number of unique values in a column",
        "so_3502177: How to count number of unique values of a field in a tab-delimited text file?",
        "so_2781491: Counting unique values in a column with a shell script"
      ],
      "Top-3 Scripts": [
        "so_56018876: grep -Po \"ELEC.PLANT.*\" FILE | cut -d. -f -4 | sort | uniq -c\n\nsort | uniq -c\n\ngrep -Po \"ELEC.*\" FILE | cut -d. -f -4 | sort | uniq -c",
        "so_3502177: cat input_file | cut -f 1 | sort | uniq\n\ncut -f 1 input_file | sort | uniq\n\ncut -f 1 input_file | sort | uniq | wc -l",
        "so_2781491: $ cut -f2 file.txt | sort | uniq | wc -l"
      ],
      "Explanations about Options": {
        "-c": "prefix lines by the number of occurrences"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_70219812: Getting sum of values in a particular column with some conditions",
        "so_56018876: Find number of unique values in a column",
        "so_47461202: Find rows with the same value in a column in two files"
      ],
      "Top-3 Scripts": [
        "so_70219812: ",
        "so_56018876: grep -Po \"ELEC.PLANT.*\" FILE | cut -d. -f -4 | sort | uniq -c\n\nsort | uniq -c\n\ngrep -Po \"ELEC.*\" FILE | cut -d. -f -4 | sort | uniq -c",
        "so_47461202: <File1.txt sort -k2,2 > File1-sorted.txt\n<File2.txt sort -k3,3 -S1G > File2-sorted.txt\n\njoin -1 2 -2 3 File1-sorted.txt File2-sorted.txt > matches.txt\n\nsort -k2,2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Sum the values in the first column of a file and print the total",
      "Most Similar TLDR Script": "awk '{s+=$1} END {print s}' {{filename}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52214717: How to get a unique value of the same value in both columns in a Unix command",
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_36987166: How do I get the total number of distinct values in a column in a CSV?"
      ],
      "Top-3 Scripts": [
        "so_52214717: awk -F, '{ if( $6 == $7) print \"equal\" }' test.csv\n\nawk -F,  ' $6 == $7 { print \"equal\" }' test.csv\n\nawk -F,  'NR >1 && $6 != $7 { print $6 $7 }' test.csv",
        "so_14640309: awk -F, 'FNR==NR { a[$1]++; next } { print $0, ($3 in a ? a[$3] : \"0\") }' OFS=, file file",
        "so_36987166: awk -F, '!seen[$1]++{c++} END{print c}' file\n\n2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29307073: Getting variable values from variable names listed in array in Bash",
        "nl2bash_13977: Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: \"length(FOO_NO_TRAIL_SPACE)==<counted number of characters>\"",
        "nl2bash_13975: Reports count of characters in the value of ${FOO_NO_EXTERNAL_SPACE} variable as follows:  \"length(FOO_NO_EXTERNAL_SPACE)==<counted number of characters>\""
      ],
      "Top-3 Scripts": [
        "so_29307073: #!/bin/bash\nVAR1=\"/path/to/source/root\"\nVAR2=\"/path/to/target/root\"\nVAR3=\"50\"\n\nVARS=(\"VAR1\" \"VAR2\" \"VAR3\")\nfor var in ${VARS[*]}; do\n    echo \"value of $var is ${!var}\"\ndone",
        "nl2bash_13977: echo -e \"length(FOO_NO_TRAIL_SPACE)==$(echo -ne \"${FOO_NO_TRAIL_SPACE}\" | wc -m)\"",
        "nl2bash_13975: echo -e \"length(FOO_NO_EXTERNAL_SPACE)==$(echo -ne \"${FOO_NO_EXTERNAL_SPACE}\" | wc -m)\""
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes",
        "-n": "do not output the trailing newline"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56018876: Find number of unique values in a column",
        "so_47461202: Find rows with the same value in a column in two files",
        "so_3502177: How to count number of unique values of a field in a tab-delimited text file?"
      ],
      "Top-3 Scripts": [
        "so_56018876: grep -Po \"ELEC.PLANT.*\" FILE | cut -d. -f -4 | sort | uniq -c\n\ngrep -Po \"ELEC.*\" FILE | cut -d. -f -4 | sort | uniq -c",
        "so_47461202: <File2.txt fgrep -F <( <File1.txt cut -f2 ) > File2-matches.txt",
        "so_3502177: cat input_file | cut -f 1 | sort | uniq\n\ncut -f 1 input_file | sort | uniq\n\ncut -f 1 input_file | sort | uniq | wc -l"
      ],
      "Explanations about Options": {
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60871866: Count the occurences of a number in all the columns in bash",
        "ul_497178: Find count of unique values in columns based on date in column 1",
        "so_46374828: awk to print incremental count of occurrences of unique values in each column"
      ],
      "Top-3 Scripts": [
        "so_60871866: awk '{ for (i = 1; i <= NF; ++i) { if($i == 1) { ++c[i]; } } \n  END{ for (i = 1; i <= NF; ++i) { printf \"%d%s\", c[i], i!=NF ? OFS : ORS; } }",
        "ul_497178: ",
        "so_46374828: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_70219812: Getting sum of values in a particular column with some conditions",
        "so_47461202: Find rows with the same value in a column in two files"
      ],
      "Top-3 Scripts": [
        "so_70219812: ",
        "so_47461202: <File1.txt sort -k2,2 > File1-sorted.txt\n<File2.txt sort -k3,3 -S1G > File2-sorted.txt\n\njoin -1 2 -2 3 File1-sorted.txt File2-sorted.txt > matches.txt\n\njoin -1 2"
      ],
      "Explanations about Options": {
        "-1": "join on this FIELD of file 1"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56018876: Find number of unique values in a column",
        "so_33272296: Counting the number of lines (from result of grep) with a specific symbol in one column?",
        "ul_82544: Count number of lines with a certain value in a column for all files in directory recursively"
      ],
      "Top-3 Scripts": [
        "so_56018876: grep -Po \"ELEC.PLANT.*\" FILE | cut -d. -f -4 | sort | uniq -c\n\ngrep -Po \"ELEC.*\" FILE | cut -d. -f -4 | sort | uniq -c",
        "so_33272296: $ grep ^F1 test.txt | awk '{sum += 1; if($3==\"-\") dash += 1} END {print dash/sum}'\n0.333333",
        "ul_82544: grep -c '^[[:space:]]*2\\>' $(find . -type f -print0 | xargs -0 echo)\n\nCOLNUM=3\nTOMATCH=$(($COLNUM-1))\ngrep -cE \"^[[:space:]]*([0-9]+[[:space:]]+){$TOMATCH}2\\>\" \\\n$(find . -type f -print0 | xargs -0 echo)"
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46374828: awk to print incremental count of occurrences of unique values in each column",
        "so_3502177: How to count number of unique values of a field in a tab-delimited text file?"
      ],
      "Top-3 Scripts": [
        "so_46374828: $ cat input.txt\nName,Amount,Dept,Nonsense\nApple,10,eee,eee\nOrange,20,csc,eee\nApple,30,mec,eee\nMango,40,sss,eee\nApple,10,eee,eee\nOrange,10,csc,eee",
        "so_3502177: cat input_file | cut -f 1 | sort | uniq"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sum",
      "MP Summary": "checksum and count the blocks in a file",
      "Most Similar TLDR Task": "Compute a checksum with BSD-compatible algorithm and 1024-byte blocks",
      "Most Similar TLDR Script": "sum {{file}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_751820: Get the sum of all values in a specific column of a ListView in QML",
        "so_33272296: Counting the number of lines (from result of grep) with a specific symbol in one column?"
      ],
      "Top-3 Scripts": [
        "au_751820: function sum(){\n  var result = 0;\n  for(var i = 0; i < fruitModel.count; i++){\n    result += fruitModel.get(i).cost;\n  }\n  return result;\n}",
        "so_33272296: $ grep ^F1 test.txt | awk '{sum += 1; if($3==\"-\") dash += 1} END {print dash/sum}'\n0.333333"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Split columns automatically and auto-align in a tabular format",
      "Most Similar TLDR Script": "printf \"header1 header2\\nbar foo\\n\" | column -t",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_59048618: How to replace values in a column with zeros in .txt file using bash"
      ],
      "Top-3 Scripts": [
        "so_14640309: ",
        "so_59048618: awk -v FS='[[:space:]]+' '{$2=\"0\"} 1' Input_file | column -t > temp && mv temp Input_file"
      ],
      "Explanations about Options": {
        "-t": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
      "Most Similar TLDR Script": "file {{filename}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_36987166: How do I get the total number of distinct values in a column in a CSV?",
        "so_24973827: Count of unique words from one column of a file in shell"
      ],
      "Top-3 Scripts": [
        "so_14640309: awk -F, 'FNR==NR { a[$1]++; next } { print $0, ($3 in a ? a[$3] : \"0\") }' OFS=, file file",
        "so_36987166: awk -F, '!seen[$1]++{c++} END{print c}' file\n\n2",
        "so_24973827: awk -F, '{c[$2]++} END{for (i in c) print i, c[i]}' file\nTyrus 1\nSam 2\nJohn 1\nMeha 3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_70219812: Getting sum of values in a particular column with some conditions",
        "so_27802769: Count number of values of one column group by value of another column"
      ],
      "Top-3 Scripts": [
        "so_70219812: ",
        "so_27802769: perl -F'\\|' -lane '                                                            \n    $. > 1 and $domains->{$F[3]}->{$F[2]}++;\n    END{\n        print \"domain|count_ip\";\n        print $_, \"|\", scalar keys %{ $domains->{$_} } for keys %$domains;\n    }\n' file | tee new_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_592273: Count the number of unique values based on two columns in a spreadsheet",
        "so_68753211: Use values in a column to separate strings in another column in bash",
        "ul_143771: Compare the values of a column with all the values in another column"
      ],
      "Top-3 Scripts": [
        "au_592273: awk -F $'\\t' '{a[$1, $3]++} END{for (i in a) {split (i, sep, SUBSEP); print sep[1], sep[2], a[i]}}' foo.txt",
        "so_68753211: split()\n\n$ awk '{ split($2, fruits, /,/); if (fruits[$3] != \"*\") print $1, fruits[$3] }' input.txt\nBen mango\nMary orange\nPeter melon",
        "ul_143771: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42700377: bash (replacing values in a column with values in another file)",
        "so_61493820: How to get Count of Values from a Hashtable per key in powershell"
      ],
      "Top-3 Scripts": [
        "so_42700377: $ awk -F: 'NR==FNR  {a[$1]=$3 OFS $4; next}   # cache /etc/passwd user/groupids\n           $1 in a  {print a[$1], $3; next}   # if found replace\n           1' /etc/passwd FS=' +' out         # otherwise print as is",
        "so_61493820: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field"
      ],
      "Top-3 Scripts": [
        "so_14640309: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fgrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Search only lines that match entirely in files",
      "Most Similar TLDR Script": "fgrep -x {{path/to/file1}} {{path/to/file2}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47461202: Find rows with the same value in a column in two files"
      ],
      "Top-3 Scripts": [
        "so_47461202: <File2.txt fgrep -F <( <File1.txt cut -f2 ) > File2-matches.txt"
      ],
      "Explanations about Options": {
        "-F": "Interpret PATTERNS as fixed strings, not regular expressions."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_82544: Count number of lines with a certain value in a column for all files in directory recursively",
        "nl2bash_13849: Count the number of unique 3 to 6 character file extensions are in the current directory tree"
      ],
      "Top-3 Scripts": [
        "ul_82544: grep -c '^[[:space:]]*2\\>' $(find . -type f -print0 | xargs -0 echo)\n\nfind -maxdepth 1 . -type f -print0\n\nCOLNUM=3\nTOMATCH=$(($COLNUM-1))\ngrep -cE \"^[[:space:]]*([0-9]+[[:space:]]+){$TOMATCH}2\\>\" \\\n$(find . -type f -print0 | xargs -0 echo)",
        "nl2bash_13849: find . -type f -name \"*.*\" | grep -o -E \"\\.[^\\.]+$\" | grep -o -E \"[[:alpha:]]{3,6}\" | awk '{print tolower($0)}' | sort | uniq -c | sort -rn"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "fold",
      "MP Summary": "wrap each input line to fit in specified width",
      "Most Similar TLDR Task": "Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped)",
      "Most Similar TLDR Script": "fold -w5 -s {{file}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13821: Count the number of lines in \"testfile\" wrapped to fit in a width of \"$COLUMNS\" characters"
      ],
      "Top-3 Scripts": [
        "nl2bash_13821: fold -w \"$COLUMNS\" testfile | wc -l"
      ],
      "Explanations about Options": {
        "-w": "use WIDTH columns instead of 80"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52214717: How to get a unique value of the same value in both columns in a Unix command",
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_36987166: How do I get the total number of distinct values in a column in a CSV?"
      ],
      "Top-3 Scripts": [
        "so_52214717: awk -F, '{ if( $6 == $7) print \"equal\" }' test.csv\n\nawk -F,  ' $6 == $7 { print \"equal\" }' test.csv\n\nawk -F,  'NR >1 && $6 != $7 { print $6 $7 }' test.csv",
        "so_14640309: awk -F, 'FNR==NR { a[$1]++; next } { print $0, ($3 in a ? a[$3] : \"0\") }' OFS=, file file",
        "so_36987166: awk -F, '!seen[$1]++{c++} END{print c}' file\n\n2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27802769: Count number of values of one column group by value of another column"
      ],
      "Top-3 Scripts": [
        "so_27802769: perl -F'\\|' -lane '                                                            \n    $. > 1 and $domains->{$F[3]}->{$F[2]}++;\n    END{\n        print \"domain|count_ip\";\n        print $_, \"|\", scalar keys %{ $domains->{$_} } for keys %$domains;\n    }\n' file | tee new_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
      "Most Similar TLDR Script": "comm {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_13853: Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\""
      ],
      "Top-3 Scripts": [
        "nl2bash_13853: comm -23 a.txt b.txt | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_497178: Find count of unique values in columns based on date in column 1"
      ],
      "Top-3 Scripts": [
        "ul_497178: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_82544: Count number of lines with a certain value in a column for all files in directory recursively"
      ],
      "Top-3 Scripts": [
        "ul_82544: grep -c '^[[:space:]]*2\\>' $(find . -type f -print0 | xargs -0 echo)\n\nCOLNUM=3\nTOMATCH=$(($COLNUM-1))\ngrep -cE \"^[[:space:]]*([0-9]+[[:space:]]+){$TOMATCH}2\\>\" \\\n$(find . -type f -print0 | xargs -0 echo)"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38677961: Replacing value in column with another value in txt file using awk"
      ],
      "Top-3 Scripts": [
        "so_38677961: $ awk 'NR>1{print last} {last=$0} END{$0=last;$2=$5+1;print}' OFS='\\t' file.txt\nAAA     134     145     Sat     150     167\nAAA     156     167     Sat     150     167\nAAA     151     187     Sat     150     167\n\nlast=$0\n\n$ awk 'NR==1{$2=$5+1} NR>1{print last} {last=$0} END{$0=last;if(NR>1)$2=$5+1;print}' OFS='\\t' file.txt\nAAA     151     145     Sat     150     167\nAAA     156     167     Sat     150     167\nAAA     151     187     Sat     150     167"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "csvstat",
      "MP Summary": "manual page for csvstat 1.0.2",
      "Most Similar TLDR Task": "Show the number of unique values in the \"name\" column",
      "Most Similar TLDR Script": "csvstat -c {{name}} --unique {{data.csv}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_4322: Show the number of unique values in the \"name\" column"
      ],
      "Top-3 Scripts": [
        "tldr_4322: csvstat -c {{name}} --unique {{data.csv}}"
      ],
      "Explanations about Options": {
        "--unique": "Only output counts of unique values.",
        "-c": "COLUMNS, --columns COLUMNS\n A comma separated list of column indices or names to be examined. Defaults to all\n columns."
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59048618: How to replace values in a column with zeros in .txt file using bash"
      ],
      "Top-3 Scripts": [
        "so_59048618: awk -v FS='[[:space:]]+' '{$2=\"0\"} 1' Input_file | column -t > temp && mv temp Input_file\n\nawk '{$2=\"0\"} 1' Input_file > temp && mv temp Input_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_143771: Compare the values of a column with all the values in another column"
      ],
      "Top-3 Scripts": [
        "ul_143771: chmod a+x foo.pl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24549916: List all files with file count as one of the output columns in $BASH?"
      ],
      "Top-3 Scripts": [
        "so_24549916: ls -al | awk '/^d/{d++}{print}END{print \"Directories: \"d}'\n\nls -al | awk '{print}END{print \"Files:\" NR}'"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format",
        "-a": "do not ignore entries starting with ."
      }
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Get the current status of the user",
      "Most Similar TLDR Script": "passwd -S",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42700377: bash (replacing values in a column with values in another file)"
      ],
      "Top-3 Scripts": [
        "so_42700377: $ awk -F: 'NR==FNR  {a[$1]=$3 OFS $4; next}   # cache /etc/passwd user/groupids\n           $1 in a  {print a[$1], $3; next}   # if found replace\n           1' /etc/passwd FS=' +' out         # otherwise print as is"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dash",
      "MP Summary": "command interpreter (shell)",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "dash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33272296: Counting the number of lines (from result of grep) with a specific symbol in one column?"
      ],
      "Top-3 Scripts": [
        "so_33272296: $ grep ^F1 test.txt | awk '{sum += 1; if($3==\"-\") dash += 1} END {print dash/sum}'\n0.333333"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61493820: How to get Count of Values from a Hashtable per key in powershell"
      ],
      "Top-3 Scripts": [
        "so_61493820: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "first",
      "MP Summary": "Yagi-Uda project quick antenna builder",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field"
      ],
      "Top-3 Scripts": [
        "so_14640309: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "list",
      "MP Summary": "list algorithms and features",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field"
      ],
      "Top-3 Scripts": [
        "so_14640309: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_29307073: Getting variable values from variable names listed in array in Bash",
        "so_20531598: Number of occurrences of unique rows in a file"
      ],
      "Top-3 Scripts": [
        "so_14640309: ",
        "so_29307073: #!/bin/bash\nVAR1=\"/path/to/source/root\"\nVAR2=\"/path/to/target/root\"\nVAR3=\"50\"\n\nVARS=(\"VAR1\" \"VAR2\" \"VAR3\")\nfor var in ${VARS[*]}; do\n    echo \"value of $var is ${!var}\"\ndone\n\nvalue of VAR1 is /path/to/source/root\nvalue of VAR2 is /path/to/target/root\nvalue of VAR3 is 50",
        "so_20531598: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "next",
      "MP Summary": "show the next nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field",
        "ul_143771: Compare the values of a column with all the values in another column",
        "so_46374828: awk to print incremental count of occurrences of unique values in each column"
      ],
      "Top-3 Scripts": [
        "so_14640309: awk -F, 'FNR==NR { a[$1]++; next } { print $0, ($3 in a ? a[$3] : \"0\") }' OFS=, file file",
        "ul_143771: ",
        "so_46374828: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "by",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_20531598: Number of occurrences of unique rows in a file"
      ],
      "Top-3 Scripts": [
        "so_14640309: ",
        "so_20531598: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "field",
      "MP Summary": "plot a field (rheolef-7.1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14640309: count the number of times a value in a field appears in another field",
        "so_58904606: How to parse every IP from the Apache access log and count each unique request from them in a CSV file in a bash script?"
      ],
      "Top-3 Scripts": [
        "so_14640309: ",
        "so_58904606: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "NF",
      "MP Summary": "awk and print a column (based on the name of the program, 1-9)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60871866: Count the occurences of a number in all the columns in bash",
        "ul_497178: Find count of unique values in columns based on date in column 1"
      ],
      "Top-3 Scripts": [
        "so_60871866: awk '{ for (i = 1; i <= NF; ++i) { if($i == 1) { ++c[i]; } } \n  END{ for (i = 1; i <= NF; ++i) { printf \"%d%s\", c[i], i!=NF ? OFS : ORS; } }",
        "ul_497178: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "output",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_497178: Find count of unique values in columns based on date in column 1",
        "so_46374828: awk to print incremental count of occurrences of unique values in each column",
        "so_58904606: How to parse every IP from the Apache access log and count each unique request from them in a CSV file in a bash script?"
      ],
      "Top-3 Scripts": [
        "ul_497178: ",
        "so_46374828: ",
        "so_58904606: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cache",
      "MP Summary": "cache parameters",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42700377: bash (replacing values in a column with values in another file)"
      ],
      "Top-3 Scripts": [
        "so_42700377: $ awk -F: 'NR==FNR  {a[$1]=$3 OFS $4; next}   # cache /etc/passwd user/groupids\n           $1 in a  {print a[$1], $3; next}   # if found replace\n           1' /etc/passwd FS=' +' out         # otherwise print as is"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "replace",
      "MP Summary": "a string-replacement utility",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42700377: bash (replacing values in a column with values in another file)"
      ],
      "Top-3 Scripts": [
        "so_42700377: $ awk -F: 'NR==FNR  {a[$1]=$3 OFS $4; next}   # cache /etc/passwd user/groupids\n           $1 in a  {print a[$1], $3; next}   # if found replace\n           1' /etc/passwd FS=' +' out         # otherwise print as is"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gawk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_592273: Count the number of unique values based on two columns in a spreadsheet",
        "so_63541282: How to get unique values in a row in bash (with awk?)",
        "so_58904606: How to parse every IP from the Apache access log and count each unique request from them in a CSV file in a bash script?"
      ],
      "Top-3 Scripts": [
        "au_592273: gawk -F $'\\t' '{a[$1][$3]++} END {for (i in a) for (j in a[i]) print i, j, a[i][j]}' foo.txt",
        "so_63541282: gawk 'BEGIN{PROCINFO[\"sorted_in\"] = \"@ind_str_asc\"; OFS=\"\\t\"}\n      { delete row; s=\"\"\n        for(i=1;i<=NF;i++) row[$i]\n        for (e in row) {\n            s= s ? s OFS e : e\n            total[e]++\n        }\n        print s     \n       }\n    END{ for (e in total) print e, total[e] }' file",
        "so_58904606: "
      ],
      "Explanations about Options": {
        "-F": " Use fs for the input field separator (the value of the FS predefined variable)."
      }
    },
    {
      "Command": "unique",
      "MP Summary": "removes duplicates from a wordlist",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53779180: How to count number of unique fields in a csv file with uneven number of columns in each row"
      ],
      "Top-3 Scripts": [
        "so_53779180: awk -F, '{for(i=2;i<=NF;i++)a[$i]}{print $1, NF-1}\n         END{print \"total unique vars:\"length(a)}' file.csv\n\nfilename1 4\nfilename2 3\nfilename3 5\ntotal unique vars:8"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "return",
      "MP Summary": "return from a function or dot script",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_751820: Get the sum of all values in a specific column of a ListView in QML",
        "so_46374828: awk to print incremental count of occurrences of unique values in each column"
      ],
      "Top-3 Scripts": [
        "au_751820: function sum(){\n  var result = 0;\n  for(var i = 0; i < fruitModel.count; i++){\n    result += fruitModel.get(i).cost;\n  }\n  return result;\n}",
        "so_46374828: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_143771: Compare the values of a column with all the values in another column"
      ],
      "Top-3 Scripts": [
        "ul_143771: ./foo.pl file1 file2\n\n$ foo.pl file1 file2 \nContig2 68\nContig3 102\nContig7 79"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27802769: Count number of values of one column group by value of another column"
      ],
      "Top-3 Scripts": [
        "so_27802769: perl -F'\\|' -lane '                                                            \n    $. > 1 and $domains->{$F[3]}->{$F[2]}++;\n    END{\n        print \"domain|count_ip\";\n        print $_, \"|\", scalar keys %{ $domains->{$_} } for keys %$domains;\n    }\n' file | tee new_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "domain",
      "MP Summary": "nnrpd domain resolver",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27802769: Count number of values of one column group by value of another column"
      ],
      "Top-3 Scripts": [
        "so_27802769: domain|count_ip\nes350.co.kr|1\nkarosel-ind.com|1\nsamtimes.ru|1\nsolusi-it.com|3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "The",
      "MP Summary": "X11 gesture recognition application",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Count the number of unique lines in sorted file \"a.txt\" compared to sorted file \"b.txt\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 a.txt b.txt | wc -l\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "wc": {
              "mpsum": "print newline, word, and byte counts for each file",
              "-l": "print the newline counts"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "wc": {
              "man1_wc_36412": "count line word byte count charact byte file count charact file take multi-byt charact set account count line file count word file use standard input count line word charact byte order"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61493820: How to get Count of Values from a Hashtable per key in powershell"
      ],
      "Top-3 Scripts": [
        "so_61493820: "
      ],
      "Explanations about Options": {}
    }
  ]
}