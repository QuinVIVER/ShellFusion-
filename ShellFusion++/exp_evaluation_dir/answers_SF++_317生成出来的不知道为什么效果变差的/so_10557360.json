{
  "Query": "Convert xlsx to csv in Linux with command line",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_673960: Convert to csv file with same name using AWK command",
        "so_16987474: Convert .txt file to .csv with header in bash",
        "so_20589437: bash scripting how convert log with key into csv"
      ],
      "Top-3 Scripts": [
        "ul_673960: for f in /FILES/detail*; do awk -f test.awk $f > $(echo $f | sed -e 's/^\\/FILES\\///' -e 's/:/_/').csv; done",
        "so_16987474: (echo \"Date;Visit;Login;Euro;Rate\" ; cat file.txt) | sed 's/;/<tab>/g' > file.csv",
        "so_20589437: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_673960: Convert to csv file with same name using AWK command",
        "so_16987474: Convert .txt file to .csv with header in bash",
        "so_49786139: Edit CSV column with unix command"
      ],
      "Top-3 Scripts": [
        "ul_673960: for f in /FILES/detail*; do awk -f test.awk $f > $(echo $f | sed -e 's/^\\/FILES\\///' -e 's/:/_/').csv; done",
        "so_16987474: (echo \"Date;Visit;Login;Euro;Rate\" ; cat file.txt) | sed 's/;/<tab>/g' > file.csv",
        "so_49786139: $ sed -E 's/;[^,]+//' file"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed",
        "-E": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16987474: Convert .txt file to .csv with header in bash",
        "so_17249763: How to edit a particular column in csv file with unix command?",
        "so_55149498: How can I count the rows of a CSV with only the linux terminal?"
      ],
      "Top-3 Scripts": [
        "so_16987474: (echo \"Date;Visit;Login;Euro;Rate\" ; cat file.txt) | sed 's/;/<tab>/g' > file.csv",
        "so_17249763: ",
        "so_55149498: mlr --csv --headerless-csv-output cat -n then stats1 -a max -f n input.csv"
      ],
      "Explanations about Options": {
        "-n": "number all output lines"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44721537: How to read a .csv file with shell command?",
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_49786139: Edit CSV column with unix command"
      ],
      "Top-3 Scripts": [
        "so_44721537: grep \"my_string\" file |awk -F \";\" '{print $5}'\n\nawk -F \";\" '/my_string/ {print $5}' file\n\nawk -F \";\" '$2 ~ /my_string/ {print $5}' file\n\nawk -F \";\" '$2 == \"my_string\" {print $5}' file",
        "so_61227674: ",
        "so_49786139: $ awk '{sub(\";[^,]+\",\"\")}1' file\n\n$ sed -E 's/;[^,]+//' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using the specified delimiter",
      "Most Similar TLDR Script": "paste -s -d {{delimiter}} {{file}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1310451: Convert a .txt file in a .csv with a row every 3 lines",
        "so_10117767: How to merge two single column csv files with linux commands"
      ],
      "Top-3 Scripts": [
        "au_1310451: paste -d,  - - - < file",
        "so_10117767: $ cat file1\nJohn\nMary\n$ cat file2\nSmith\nJones\n$ paste -d, file1 file2\nJohn,Smith\nMary,Jones"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68996590: Convert json to csv using jq with different key",
        "so_42414365: Convert JSON to CSV with jq"
      ],
      "Top-3 Scripts": [
        "so_68996590: to_entries | map([\n    .key,\n    .value.OSmodle,\n    .value.OSversion,\n    .value.IEversion,\n    (.value.hardwareUSB | join(\"&\")),\n    .value.OrderStatus])\n| [\"PCID\", \"OSmodle\", \"OSversion\", \"IEversion\", \"hardwareUSB\", \"OrderStatus\"], .[]\n| @csv",
        "so_42414365: .data[]|{\n    \"sids\":(.meta.sids[0]|split(\" \")[0]),\n    \"ll\":(.meta.ll|map(tostring)|join(\",\")),\n    \"state\":.meta.state,\n    \"name\":.meta.name,\n    \"smry\":(.smry[]|join(\",\"))\n}|join(\",\")\n# or, for robust csv output\n# } | @csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Convert an image from JPG to PNG",
      "Most Similar TLDR Script": "convert {{image.jpg}} {{image.png}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43085889: How to convert a PDF into JPG with command line in Linux?",
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM",
        "so_59202889: Powershell script to convert excel files to csv files with card numbers with 16 digits"
      ],
      "Top-3 Scripts": [
        "so_43085889: $ convert input.pdf output.jpg\n# For good quality use these parameters\n$ convert -density 300 -quality 100 in.pdf out.jpg",
        "so_58244399: ",
        "so_59202889: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_673960: Convert to csv file with same name using AWK command",
        "so_44721537: How to read a .csv file with shell command?",
        "so_49786139: Edit CSV column with unix command"
      ],
      "Top-3 Scripts": [
        "ul_673960: for f in /FILES/detail*; do awk -f test.awk $f > $(echo $f | sed -e 's/^\\/FILES\\///' -e 's/:/_/').csv; done",
        "so_44721537: grep \"my_string\" file |awk -F \";\" '{print $5}'\n\nawk -F \";\" '/my_string/ {print $5}' file\n\nawk -F \";\" '$2 ~ /my_string/ {print $5}' file\n\nawk -F \";\" '$2 == \"my_string\" {print $5}' file",
        "so_49786139: $ awk '{sub(\";[^,]+\",\"\")}1' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20589437: bash scripting how convert log with key into csv",
        "so_59902809: How can I convert CSV files with a meta data header row into flat tables using Powershell?",
        "so_63519349: Import text file with specific format and convert to csv/generate psobject"
      ],
      "Top-3 Scripts": [
        "so_20589437: while read line",
        "so_59902809: ",
        "so_63519349: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_723630: convert txt file to csv seperated with tabs",
        "su_662327: How to convert column of text to CSV"
      ],
      "Top-3 Scripts": [
        "au_723630: tr ' ' ',' < input > output\n\ntr '\\t' ',' < input > output",
        "su_662327: # echo '\"10\"\n\"30\"\n\"u\"\n\"hello\"' | tr '\\n' ',' | sed s/',$'/\\\\n/g\n\n\"10\",\"30\",\"u\",\"hello\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file, each split having 10 lines (except the last split)",
      "Most Similar TLDR Script": "split -l {{10}} {{filename}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42414365: Convert JSON to CSV with jq",
        "so_30293903: Working with complex CSV from Linux command line",
        "so_51929141: Converting tsv with arrays to JSON with jq"
      ],
      "Top-3 Scripts": [
        "so_42414365: .data[]|{\n    \"sids\":(.meta.sids[0]|split(\" \")[0]),\n    \"ll\":(.meta.ll|map(tostring)|join(\",\")),\n    \"state\":.meta.state,\n    \"name\":.meta.name,\n    \"smry\":(.smry[]|join(\",\"))\n}|join(\",\")\n# or, for robust csv output\n# } | @csv",
        "so_30293903: awk -F, '{ n = split($5, subField, \"[[:blank:]]+\"); for (i=1;i<=n;++i) print subField[i] }' file.csv\n\nsplit()",
        "so_51929141: inputs\n| split(\"\\t\")\n| {name: .[0], age: .[1], pet: .[2]}\n| .pet |= split(\",\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64682433: Trouble with converting a xml into a csv with Powershell",
        "so_56149079: Having trouble converting nested xml to csv with Powershell"
      ],
      "Top-3 Scripts": [
        "so_64682433: ",
        "so_56149079: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
      "Most Similar TLDR Script": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_59202889: Powershell script to convert excel files to csv files with card numbers with 16 digits",
        "so_59902809: How can I convert CSV files with a meta data header row into flat tables using Powershell?"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_59202889: ",
        "so_59902809: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "in2csv",
      "MP Summary": "manual page for in2csv 1.0.2",
      "Most Similar TLDR Task": "Convert a specific sheet from an XLSX file to CSV",
      "Most Similar TLDR Script": "in2csv --sheet={{sheet_name}} {{data.xlsx}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_6968: Convert a specific sheet from an XLSX file to CSV"
      ],
      "Top-3 Scripts": [
        "tldr_6968: in2csv --sheet={{sheet_name}} {{data.xlsx}}"
      ],
      "Explanations about Options": {
        "--sheet": "SHEET\n The name of the Excel sheet to operate on."
      }
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output a JSON file, in pretty-print format",
      "Most Similar TLDR Script": "jq . {{file.json}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42414365: Convert JSON to CSV with jq",
        "so_51929141: Converting tsv with arrays to JSON with jq"
      ],
      "Top-3 Scripts": [
        "so_42414365: jq -rf foo.jq file.json",
        "so_51929141: jq -R -f program.jq input.tsv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send message to \"testuser\" on terminal \"/dev/tty/5\"",
      "Most Similar TLDR Script": "write {{testuser}} {{tty/5}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_59902809: How can I convert CSV files with a meta data header row into flat tables using Powershell?"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_59902809: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44721537: How to read a .csv file with shell command?",
        "so_30293903: Working with complex CSV from Linux command line"
      ],
      "Top-3 Scripts": [
        "so_44721537: grep \"my_string\" file |awk -F \";\" '{print $5}'\n\nawk -F \";\" '/my_string/ {print $5}' file\n\nawk -F \";\" '$2 ~ /my_string/ {print $5}' file\n\nawk -F \";\" '$2 == \"my_string\" {print $5}' file",
        "so_30293903: awk -F, '{ n = split($5, subField, \"[[:blank:]]+\"); for (i=1;i<=n;++i) print subField[i] }' file.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdftotext",
      "MP Summary": "Portable Document Format (PDF) to text converter (version 3.03)",
      "Most Similar TLDR Task": "Convert input.pdf to plain text and save it as output.txt",
      "Most Similar TLDR Script": "pdftotext {{input.pdf}} {{output.txt}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_211870: How to convert all pdf files to text (within a folder) with one command?"
      ],
      "Top-3 Scripts": [
        "au_211870: for file in *.pdf; do pdftotext \"$file\" \"$file.txt\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20589437: bash scripting how convert log with key into csv"
      ],
      "Top-3 Scripts": [
        "so_20589437: while read line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43085889: How to convert a PDF into JPG with command line in Linux?",
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_43085889: $ sudo apt-get install imagemagick",
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_47917206: Oracle - How to save table as csv file from terminal with command"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_47917206: #!/bin/sh\n\n$ORACLE_HOME/bin/sqlplus -s /  as sysdba @csv2.sql"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Set various options, e.g. enable `vi` style line editing",
      "Most Similar TLDR Script": "set -o {{vi}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_47917206: Oracle - How to save table as csv file from terminal with command"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_47917206: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18321653: Convert a file into CSV with newline as the delimiter"
      ],
      "Top-3 Scripts": [
        "so_18321653: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44721537: How to read a .csv file with shell command?"
      ],
      "Top-3 Scripts": [
        "so_44721537: grep \"my_string\" file |awk -F \";\" '{print $5}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM",
        "so_68195989: I have a script that makes some manipulation with .xlsx file. How do i loop it with all files within folder?"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_58244399: ",
        "so_68195989: # Open Excel\n$excelObj = New-Object -ComObject Excel.Application\n$excelObj.Visible = $true\n\n# Enumerate files\n$files = Get-ChildItem \"C:\\path\" -Filter *.xlsx"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43085889: How to convert a PDF into JPG with command line in Linux?"
      ],
      "Top-3 Scripts": [
        "so_43085889: $ sudo apt-get install imagemagick"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "units",
      "MP Summary": "unit conversion and calculation program",
      "Most Similar TLDR Task": "Convert between units with quantities",
      "Most Similar TLDR Script": "units {{15 pounds}} {{kilograms}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56149079: Having trouble converting nested xml to csv with Powershell"
      ],
      "Top-3 Scripts": [
        "so_56149079: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "see",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "See action can be used to view any file (usually image) on default mailcap explorer",
      "Most Similar TLDR Script": "see {{filename}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session, appending to an existing file",
      "Most Similar TLDR Script": "script -a {{path/to/session.out}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "Show the current status of a service",
      "Most Similar TLDR Script": "service {{service_name}} status",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20589437: bash scripting how convert log with key into csv"
      ],
      "Top-3 Scripts": [
        "so_20589437: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "libreoffice",
      "MP Summary": "LibreOffice office suite",
      "Most Similar TLDR Task": "Convert all .doc files in current directory to pdf",
      "Most Similar TLDR Script": "libreoffice --convert-to {{pdf}} {{*.doc}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_354043: Convert xlsx to xls in linux shell script"
      ],
      "Top-3 Scripts": [
        "ul_354043: libreoffice --headless --convert-to xls myfile.xlsx\n\nlibreoffice --convert-to xls myfile.xlsx"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "go",
      "MP Summary": "tool for managing Go source code",
      "Most Similar TLDR Task": "Download and install a package, specified by its import path",
      "Most Similar TLDR Script": "go get {{package_path}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expr",
      "MP Summary": "evaluate arguments as an expression",
      "Most Similar TLDR Task": "Extract part of the string",
      "Most Similar TLDR Script": "echo $(expr substr {{string}} {{position_to_start}} {{number_of_characters}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27152776: How do I insert value in custom line with bash"
      ],
      "Top-3 Scripts": [
        "so_27152776: awk -F ', *' -v n=\"$no2\" -v dt=\"$Date2\" -v expr=\"$Expr\" -v OFS=', ' '$1==n\n   {$0 = n OFS dt OFS expr} 1' file.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67287531: Replace with sed on csv file"
      ],
      "Top-3 Scripts": [
        "so_67287531: tink@host:~/tmp$ sed 's/A$/Avocado/;s/B$/Banana/' file.csv\n1111;AAA;... (more columns);A1a;Avocado\n2222;XXX;... (more columns);T3g;Banana\n... (more rows)\n...(more rows)\n4564;AdA;... (more columns);G1a;Avocado\n33321;B1X; ... (more columns);T3g;Banana"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Open an `at` prompt to create a new set of scheduled commands, press `Ctrl + D` to save and exit",
      "Most Similar TLDR Script": "at {{hh:mm}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Update the list of available packages and versions (it's recommended to run this before other `apt-get` commands)",
      "Most Similar TLDR Script": "apt-get update",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43085889: How to convert a PDF into JPG with command line in Linux?"
      ],
      "Top-3 Scripts": [
        "so_43085889: $ sudo apt-get install imagemagick"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sshpass",
      "MP Summary": "noninteractive ssh password provider",
      "Most Similar TLDR Task": "Connect to a remote server using the first line of a file as the password, automatically accept unknown ssh keys, and launch a command",
      "Most Similar TLDR Script": "sshpass -f {{file}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}} \"{{command}}\"",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16026455: Looping through lines in csv file with bash"
      ],
      "Top-3 Scripts": [
        "so_16026455: result=$(sshpass -p \"$password\" ssh -n \"$user\"@\"$target\" ls \"$path\"*heapdump*)\n\nresult=$(sshpass -p \"$password\" ssh -n \"$user\"@\"$target\" ls \"$path\"*heapdump* 2>/dev/null)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?"
      ],
      "Top-3 Scripts": [
        "so_61227674: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files one per line",
      "Most Similar TLDR Script": "ls -1",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16026455: Looping through lines in csv file with bash"
      ],
      "Top-3 Scripts": [
        "so_16026455: result=$(sshpass -p \"$password\" ssh -n \"$user\"@\"$target\" ls \"$path\"*heapdump*)\n\nls filename-or-wildcard\n\nresult=$(sshpass -p \"$password\" ssh -n \"$user\"@\"$target\" ls \"$path\"*heapdump* 2>/dev/null)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16026455: Looping through lines in csv file with bash"
      ],
      "Top-3 Scripts": [
        "so_16026455: result=$(sshpass -p \"$password\" ssh -n \"$user\"@\"$target\" ls \"$path\"*heapdump*)\n\nresult=$(sshpass -p \"$password\" ssh -n \"$user\"@\"$target\" ls \"$path\"*heapdump* 2>/dev/null)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47917206: Oracle - How to save table as csv file from terminal with command"
      ],
      "Top-3 Scripts": [
        "so_47917206: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_47058652: import xlsx converted to csv to powershell"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_47058652: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "leave",
      "MP Summary": "remind you when you have to leave",
      "Most Similar TLDR Task": "Set a reminder in a specific amount of time",
      "Most Similar TLDR Script": "leave +{{amount_of_time}}",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unoconv",
      "MP Summary": "convert any document from and to any LibreOffice supported format",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16845162: convert .csv to a .xlsx from CLI",
        "so_15746295: Convert xlsx to text CSV via command line only on Linux"
      ],
      "Top-3 Scripts": [
        "so_16845162: unoconv -f xls myfile.csv",
        "so_15746295: "
      ],
      "Explanations about Options": {
        "-f": "Specify the output format for the document. You can get a list of possible output\n formats per document type by using the --show option."
      }
    },
    {
      "Command": "sur",
      "MP Summary": "subtle user repository",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64682433: Trouble with converting a xml into a csv with Powershell"
      ],
      "Top-3 Scripts": [
        "so_64682433: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_58244399: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "error",
      "MP Summary": "Postfix error/retry mail delivery agent",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?"
      ],
      "Top-3 Scripts": [
        "so_61227674: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "au_1193534: How to add new columns to CSVs with the same text in all lines",
        "so_55149498: How can I count the rows of a CSV with only the linux terminal?"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "au_1193534: mlr --csv -N put '$a=\"COMPTON\";$b=\"PRECIPITATION\";$c=\"NOT APPLICABLE\"' then reorder -f a  input.csv",
        "so_55149498: mlr --csv --headerless-csv-output cat -n then stats1 -a max -f n input.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "over",
      "MP Summary": "pretty print and scroll source code on terminal",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Converts all windows line endings to unix line endings",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find $(pwd) -type f | xargs -I xxx sed -i 's/\\r//g' xxx\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-type": "File is of type c:"
            },
            "xargs": {
              "mpsum": "build and execute command lines from standard input",
              "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "xargs": {
              "man1_xargs_37433": "execut command pipe argument come anoth command file etc\ninput treat singl block text split separ piec space tab newlin end-of-fil delet file backup extens -print0 use null charact split file name -0 use delimit execut command input line replac occurr placehold mark _ input line parallel run max-proc process time default 1 max-proc 0 xarg run mani process possibl time run command use input data argument run multipl chain command input data"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61227674: How do i convert an xlsx file into a csv file, using powershell?",
        "so_58244399: Using Powershell with MICROSOFT.ACE.OLEDB.12.0 to convert between CSV XML XLS XLSX XLSM"
      ],
      "Top-3 Scripts": [
        "so_61227674: ",
        "so_58244399: "
      ],
      "Explanations about Options": {}
    }
  ]
}