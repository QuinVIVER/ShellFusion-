{
  "Query": "How to grep for same string but multiple files at the same time?",
  "Answers": [
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace all occurrences of a string in a file, overwriting the file (i.e. in-place)",
      "Most Similar TLDR Script": "sed -i 's/{{find}}/{{replace}}/g' {{filename}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?",
        "so_69731339: How to grep for multiple strings in the same line inside a file with similar pattern?",
        "so_44456396: grep for multiple patterns with end of line as a string"
      ],
      "Top-3 Scripts": [
        "ul_168813: sed '/^begin$/,/^end$/!d'",
        "so_69731339: sed -r '/^\\s*#/d' my.txt | grep \"$f_name\" | grep \"$p_name\"",
        "so_44456396: cat input_file.txt | tr '\\n' ':' | sed 's/---:/---;/' | tr ';' '\\n'"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1026259: How to grep for two patterns in multiple files",
        "so_54199162: Recursive grep for gz files search string from an output string",
        "so_25338059: How to search for duplicate, unknown, strings in multiple files"
      ],
      "Top-3 Scripts": [
        "au_1026259: find . -type f -exec awk 'FNR == 1 {a=0; r=0} /AccessToken/{a=1} /Registrationrequest/{r=1} a && r {print FILENAME; nextfile}' {} +",
        "so_54199162: find . -name \"*.gz\" -exec zgrep -H \"PATTERN1\" {} \\; | grep \"PATTERN2\"",
        "so_25338059: find . -name .git -prune -o -type f -name 'Kconfig' -print0 |\n    xargs -0 awk '/^config/ { count[$2]++; files[$2] = files[$2] \" \" FILENAME\":\"FNR; }\n                  END { for (keyword in count) {\n                        if (count[keyword] > 1) { print keyword files[keyword] }\n                        }\n                    }'"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:",
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-prune": "True; if the file is a directory, do not descend into it. If -depth is given, then\n -prune has no effect. Because -delete implies -depth, you cannot usefully use\n -prune and -delete together.\n For example, to skip the directory `src/emacs' and all files and directories\n under it, and print the names of the other files found, do something like this:\n find . -path ./src/emacs -prune -o -print"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_669247: grep for exact multiple strings from a file",
        "so_44456396: grep for multiple patterns with end of line as a string",
        "au_1367950: How to check for a specific string with linebreaks in a file with grep?"
      ],
      "Top-3 Scripts": [
        "ul_669247: ",
        "so_44456396: cat input_file.txt | tr '\\n' ':' | sed 's/---:/---;/' | tr ';' '\\n'",
        "au_1367950: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strings",
      "MP Summary": "print the strings of printable characters in files.",
      "Most Similar TLDR Task": "Print all strings in a binary",
      "Most Similar TLDR Script": "strings {{file}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_223556: How to check for specific strings in files of a large directory",
        "so_3242873: Grep for literal strings"
      ],
      "Top-3 Scripts": [
        "ul_223556: ",
        "so_3242873: -F, --fixed-strings       PATTERN is a set of newline-separated fixed strings"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?",
        "so_26567419: GREP for multiple strings",
        "ul_372258: grep for string without another string before it"
      ],
      "Top-3 Scripts": [
        "ul_168813: (seq 12091; echo begin; seq 4315; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'\n\n(seq 12091; echo begin; seq 4316; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'",
        "so_26567419: $ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"net=pattern2\" hij \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,pattern2,pattern3\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,zero,pattern3",
        "ul_372258: if grep -rl -- '^[^#]*Indexes' \"$DIR1/httpd.conf\" \"$DIR2/http\"; then\n    echo \"The above-listed files use an 'Indexes' directive.\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zgrep",
      "MP Summary": "search compressed files for a regular expression",
      "Most Similar TLDR Task": "Grep a compressed file for multiple patterns",
      "Most Similar TLDR Script": "zgrep -e \"{{pattern_1}}\" -e \"{{pattern_2}}\" {{path/to/compressed/file}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54199162: Recursive grep for gz files search string from an output string",
        "su_214463: How do you search for strings in a file which in turn is in an archive?"
      ],
      "Top-3 Scripts": [
        "so_54199162: find . -name \"*.gz\" -exec zgrep -H \"PATTERN1\" {} \\; | grep \"PATTERN2\"",
        "su_214463: "
      ],
      "Explanations about Options": {
        "-H": "print the filename for each match"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?",
        "so_26567419: GREP for multiple strings",
        "au_1026259: How to grep for two patterns in multiple files"
      ],
      "Top-3 Scripts": [
        "ul_168813: ",
        "so_26567419: while read -r domain\ndo\n    get -q \"$domain\" -O - | awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\ndone <urls.txt\n\nawk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"net=pattern2\" hij \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,pattern2,pattern3\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,zero,pattern3",
        "au_1026259: find . -type f -exec awk 'FNR == 1 {a=0; r=0} /AccessToken/{a=1} /Registrationrequest/{r=1} a && r {print FILENAME; nextfile}' {} +"
      ],
      "Explanations about Options": {
        "-v": "FS=sepstring"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?",
        "ul_669247: grep for exact multiple strings from a file",
        "so_17231292: Searching for a string in multiple files on Linux"
      ],
      "Top-3 Scripts": [
        "ul_168813: grep -zoP  '(?ms)^begin$.*?^end$'",
        "ul_669247: grep -Ev '^(Part Number|Board Revision|PCB Fab Part Number|PCA Assembly Number|PCA Revision Number) *:' file",
        "so_17231292: grep -r \"foo\" /home/thisuser/bar/baz/*\n\ngrep \"foo\" /home/thisuser/bar/baz/somefile.txt\n\ngrep [options] [searched string] [path]\n// -r is an option which states that it will use recursive search\n\ngrep -rnisI \"foo\" /home/thisuser/bar/baz/*"
      ],
      "Explanations about Options": {
        "-z": "Treat input and output data as sequences of lines, each terminated by a zero byte\n (the ASCII NUL character) instead of a newline. Like the -Z or --null option, this\n option can be used with commands like sort -z to process arbitrary file names.",
        "-s": "Suppress error messages about nonexistent or unreadable files.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option.",
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-I": "Process a binary file as if it did not contain matching data; this is equivalent to\n the --binary-files=without-match option.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
        "-n": "Prefix each line of output with the 1-based line number within its input file."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31842610: grep for multiple filenames in a directory",
        "so_25338059: How to search for duplicate, unknown, strings in multiple files"
      ],
      "Top-3 Scripts": [
        "so_31842610: xargs -I % grep -ilR '%' /app/ --include={*.html,*.css,*.js} < images.txt",
        "so_25338059: find . -name .git -prune -o -type f -name 'Kconfig' -print0 |\n    xargs -0 awk '/^config/ { count[$2]++; files[$2] = files[$2] \" \" FILENAME\":\"FNR; }\n                  END { for (keyword in count) {\n                        if (count[keyword] > 1) { print keyword files[keyword] }\n                        }\n                    }'"
      ],
      "Explanations about Options": {
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26567419: GREP for multiple strings",
        "ul_195279: how to grep for specific time period in a log",
        "so_31842610: grep for multiple filenames in a directory"
      ],
      "Top-3 Scripts": [
        "so_26567419: while read -r domain\ndo\n    get -q \"$domain\" -O - | awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\ndone <urls.txt",
        "ul_195279: limit1=$(date -d \"20150408 13:29:28\" +\"%s\")\nlimit2=$(date -d \"20150408 17:55:02\" +\"%s\")\nwhile read -r logdate logtime logline\ndo\n    logsec=$(date -d \"$logdate $logtime\" +\"%s\")\n    if [ $limit1 -le $logsec -a $limit2 -ge $logsec ]\n    then\n        echo $logdate $logtime $logline\n    fi\ndone < log_files",
        "so_31842610: while read -r pat; do\n   printf \"%s - \" \"$pat\"\n   grep -iqR \"$pat\" /app/ --include={*.html,*.css,*.js} && echo \"found\" || echo \"not found\"\ndone < images.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fgrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Search only lines that match entirely in files",
      "Most Similar TLDR Script": "fgrep -x {{path/to/file1}} {{path/to/file2}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_223556: How to check for specific strings in files of a large directory",
        "so_18227567: How do I grep for strings with special characters like []?"
      ],
      "Top-3 Scripts": [
        "ul_223556: @ubuntu:~/WORKING_DIRECTORY/LC_ALL=C fgrep -rFf bar > ~/myfile",
        "so_18227567: fgrep \"\\$GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']\" ..."
      ],
      "Explanations about Options": {
        "-F": "Interpret PATTERNS as fixed strings, not regular expressions.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option.",
        "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26567419: GREP for multiple strings",
        "au_1367950: How to check for a specific string with linebreaks in a file with grep?",
        "so_31842610: grep for multiple filenames in a directory"
      ],
      "Top-3 Scripts": [
        "so_26567419: while read -r domain\ndo\n    get -q \"$domain\" -O - | awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\ndone <urls.txt\n\nawk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\n\nEND{printf \"%s: %s,%s,%s\\n\",d,web,net,office}\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"net=pattern2\" hij \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,pattern2,pattern3\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,zero,pattern3",
        "au_1367950: string='\\n\\ntest1\\n\\ntest2\\n\\n'\nif ! grep -Pzq \"$string\" test.txt; then\n    printf \"$string\" >> test.txt\nfi\n\n$ string=\"\n\n    test1\n\n    test2\n\n    \"\n$ if ! grep -Pzq \"${string//$'\\n'/\\\\n}\" test.txt; then\n    printf \"$string\" >> test.txt\nfi\n\nsearchString='\\n\\nif \\[ -f ~/.script \\]; then\\s*\\n\\s*\\.\\s+~/\\.script\\s*\\nfi\\n\\n'\nprintString='\nif [ -f ~/.script ]; then\n   . ~/.script         \nfi\n\n'\nif ! grep -Pzq \"$searchString\" test.txt; then     \n    printf \"%s\" \"$printString\" >> test.txt \nfi",
        "so_31842610: while read -r pat; do\n   printf \"%s - \" \"$pat\"\n   grep -iqR \"$pat\" /app/ --include={*.html,*.css,*.js} && echo \"found\" || echo \"not found\"\ndone < images.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "Extract zip file(s) (for multiple files, separate file paths by spaces)",
      "Most Similar TLDR Script": "unzip {{file(s)}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_18552: Searching for a string on multiple zip files",
        "su_214463: How do you search for strings in a file which in turn is in an archive?"
      ],
      "Top-3 Scripts": [
        "ul_18552: for file in *.zip; do unzip -c \"$file\" | grep \"ORA-1680\"; done\n\nfor file in *.zip; do\n    if ( unzip -c \"$file\" | grep -q \"ORA-1680\"); then\n        echo \"$file\"\n    fi\ndone",
        "su_214463: unzip -c \\*.zip | grep yourtext"
      ],
      "Explanations about Options": {
        "-c": "extract files to stdout/screen (``CRT''). This option is similar to the -p option\n except that the name of each file is printed as it is extracted, the -a option is\n allowed, and ASCII-EBCDIC conversion is automatically performed if appropriate.\n This option is not listed in the unzip usage screen."
      }
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Separate the output with a space instead of a newline",
      "Most Similar TLDR Script": "seq -s \" \" 5 3 20",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?",
        "au_1367950: How to check for a specific string with linebreaks in a file with grep?"
      ],
      "Top-3 Scripts": [
        "ul_168813: (seq 12091; echo begin; seq 4315; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'\n\n(seq 12091; echo begin; seq 4316; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'",
        "au_1367950: $ string=\"1\n> 2\"\n\n$ seq 10 | grep \"$string\"\n1\n2\n10\n\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character in a file, and print the result",
      "Most Similar TLDR Script": "tr {{find_character}} {{replace_character}} < {{filename}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44456396: grep for multiple patterns with end of line as a string",
        "so_70072390: grep for a string from URLs of different lengths"
      ],
      "Top-3 Scripts": [
        "so_44456396: cat input_file.txt | tr '\\n' ':' | sed 's/---:/---;/' | tr ';' '\\n'\n\n| tr ':' '\\n'",
        "so_70072390: grep -oE '/[[:xdigit:]_-]{15,}/' foo.txt  | tr -d /"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_669247: grep for exact multiple strings from a file",
        "au_551338: How do I grep for multiple patterns on multiple lines?",
        "so_6051263: search for multiple words in file"
      ],
      "Top-3 Scripts": [
        "ul_669247: grep -Ev '^(Part Number|Board Revision|PCB Fab Part Number|PCA Assembly Number|PCA Revision Number) *:' file",
        "au_551338: $ grep -Pzo \"begin(.|\\n)*\\nend\" file\nbegin\nSome text goes here.  \nend\n\ngrep -Pzo \"^begin\\$(.|\\n)*^end$\" file\n\ngrep -Pzo \"(?<=^begin$\\n)(.|\\n)*(?=\\n^end$)\" file\n\ngrep -Pzo \"^begin$\\n\\K(.|\\n)*(?=\\n^end$)\" file\n\ngrep -Pzo \"(?s)^begin$.*?^end$\" file\n\ngrep -Pzo \"^begin\\$[\\s\\S]*?^end$\" file\n\ngrep -Pzo \"^begin$\\n\\K[\\s\\S]*?(?=\\n^end$)\" file # or grep -Pzo \"(?<=^begin$\\n)[\\s\\S]*?(?=\\n^end$)\"\n\ngrep -Pzo \"(?s)(?<=^begin$\\n).*?(?=\\n^end$)\" file",
        "so_6051263: grep token1 file | grep -h token2\n\ngrep -E 'token1(.*?)token2' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1026259: How to grep for two patterns in multiple files",
        "ul_547426: How to look for a specific string after a matched string from a file using sed, awk or grep",
        "ul_677767: How to search for a string in a very large file with very long lines?"
      ],
      "Top-3 Scripts": [
        "au_1026259: find . -type f -exec awk 'FNR == 1 {a=0; r=0} /AccessToken/{a=1} /Registrationrequest/{r=1} a && r {print FILENAME; nextfile}' {} +",
        "ul_547426: awk '/Red Hat Satellite/,/Pool ID:/ { if (/Pool ID:/) print $NF }' file",
        "ul_677767: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "au_551338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?",
        "so_3242873: Grep for literal strings"
      ],
      "Top-3 Scripts": [
        "au_551338: ",
        "so_3242873: -F, --fixed-strings       PATTERN is a set of newline-separated fixed strings"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_195279: how to grep for specific time period in a log"
      ],
      "Top-3 Scripts": [
        "ul_195279: limit1=$(date -d \"20150408 13:29:28\" +\"%s\")\nlimit2=$(date -d \"20150408 17:55:02\" +\"%s\")\nwhile read -r logdate logtime logline\ndo\n    logsec=$(date -d \"$logdate $logtime\" +\"%s\")\n    if [ $limit1 -le $logsec -a $limit2 -ge $logsec ]\n    then\n        echo $logdate $logtime $logline\n    fi\ndone < log_files"
      ],
      "Explanations about Options": {
        "-d": "display time described by STRING, not 'now'"
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18227567: How do I grep for strings with special characters like []?"
      ],
      "Top-3 Scripts": [
        "so_18227567: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53866814: How to grep for arbitrary string containing special characters"
      ],
      "Top-3 Scripts": [
        "so_53866814: line='\"e[?20\"'; echo 'foo - \"e[?20\"' | grep -P \"^.* - \\Q$line\\E$\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_241083: How do I search for text strings in multiple PHP files?"
      ],
      "Top-3 Scripts": [
        "su_241083: for i in *\ndo\n    grep -i -n 'Power' \"$i\"\n\n    if [ \"$?\" -eq 0 ]\n    then\n            cp \"$i\" mvd\n    fi\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "If there are multiple executables which match, display all",
      "Most Similar TLDR Script": "which -a {{executable}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17231292: Searching for a string in multiple files on Linux"
      ],
      "Top-3 Scripts": [
        "so_17231292: grep [options] [searched string] [path]\n// -r is an option which states that it will use recursive search"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "ul_168813: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "openssl",
      "MP Summary": "OpenSSL command line tool",
      "Most Similar TLDR Task": "Generate a 2048bit RSA private key and save it to a file",
      "Most Similar TLDR Script": "openssl genrsa -out {{filename.key}} 2048",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49647201: How to grep search for string but omit string from result"
      ],
      "Top-3 Scripts": [
        "so_49647201: openssl s_client -connect ${CERT}:443 </dev/null 2>&1 | openssl x509 -text | grep \"Not After\" | sed 's/Not After : //g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_477941: How to test for presence of a string before another string on separate lines in a file",
        "ul_677767: How to search for a string in a very large file with very long lines?"
      ],
      "Top-3 Scripts": [
        "ul_477941: awk 'BEGIN{o=d=1} /\\[old\\]/{o=0} /device: 1000/&&o==1{d=0;exit} END{exit d}' file\n\nEND{exit d}\n\nawk 'BEGIN{o=d=1} /\\[old\\]/{o=0} /device: 1000/&&o==1{d=0;exit} END{exit d}' file && echo \"contains\" || echo \"contains not\"",
        "ul_677767: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sam",
      "MP Summary": "screen editor with structural regular expressions",
      "Most Similar TLDR Task": "Initialize a serverless application with a specific runtime",
      "Most Similar TLDR Script": "sam init --runtime {{python3.7}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69731339: How to grep for multiple strings in the same line inside a file with similar pattern?"
      ],
      "Top-3 Scripts": [
        "so_69731339: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "au_551338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39792936: How to grep for the whole string after a word in the string is matched"
      ],
      "Top-3 Scripts": [
        "so_39792936: awk -F'-agentpath:' '{split($2,a,\" \") ;print FS a[1]}' infile\n-agentpath:/www/a/apps/dynatrace/dt.so=name=server1_ProdCellA_master_m1,server=ct_collector:9998"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_111761: grep for string like xxx12345"
      ],
      "Top-3 Scripts": [
        "ul_111761: ps aux |grep foo| grep -o 'foo[0-9]\\+'\n\nps aux | grep -o '[a-z]\\{3\\}[0-9]\\{5\\}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pcregrep",
      "MP Summary": "a grep with Perl-compatible regular expressions.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?",
        "so_25462244: grep from <tag> to </tag> through multiple lines and look for a special string inside"
      ],
      "Top-3 Scripts": [
        "ul_168813: pcregrep -M '(?s)^begin$.*?^end$'\n\n(seq 12091; echo begin; seq 4315; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'\n\n(seq 12091; echo begin; seq 4316; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'",
        "so_25462244: pcregrep -M '(?s)<activity.*?MainActivity.*?<\\/activity>' file\n\npcregrep -M '<activity[\\s\\S]*?MainActivity[\\s\\S]*<\\/activity>' file"
      ],
      "Explanations about Options": {
        "-M": "Allow patterns to match more than one line. When this option is given, patterns\n may usefully contain literal newline characters and internal occurrences of ^\n and $ characters. The output for a successful match may consist of more than one\n line, the last of which is the one in which the match ended. If the matched\n string ends with a newline sequence the output ends at the end of that line."
      }
    },
    {
      "Command": "re",
      "MP Summary": "programm to conver russian texts between different encodings",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "ul_168813: g/re/p"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Test",
      "MP Summary": "Test display patch window, Set Video LUTs, Install profiles.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_669247: grep for exact multiple strings from a file"
      ],
      "Top-3 Scripts": [
        "ul_669247: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Version",
      "MP Summary": "daemon for ''lcd'' display devices",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_669247: grep for exact multiple strings from a file"
      ],
      "Top-3 Scripts": [
        "ul_669247: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17231292: Searching for a string in multiple files on Linux",
        "ul_223556: How to check for specific strings in files of a large directory"
      ],
      "Top-3 Scripts": [
        "so_17231292: grep -r \"foo\" /home/thisuser/bar/baz/*\n\ngrep \"foo\" /home/thisuser/bar/baz/somefile.txt\n\ngrep -rnisI \"foo\" /home/thisuser/bar/baz/*",
        "ul_223556: @ubuntu:~/WORKING_DIRECTORY/LC_ALL=C fgrep -rFf bar > ~/myfile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "option",
      "MP Summary": "manual page for option --version not recognized",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17231292: Searching for a string in multiple files on Linux",
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "so_17231292: grep [options] [searched string] [path]\n// -r is an option which states that it will use recursive search",
        "au_551338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "states",
      "MP Summary": "awk alike text processing tool",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17231292: Searching for a string in multiple files on Linux"
      ],
      "Top-3 Scripts": [
        "so_17231292: grep [options] [searched string] [path]\n// -r is an option which states that it will use recursive search"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69731339: How to grep for multiple strings in the same line inside a file with similar pattern?",
        "ul_372258: grep for string without another string before it",
        "ul_195279: how to grep for specific time period in a log"
      ],
      "Top-3 Scripts": [
        "so_69731339: if [[ $file_line != *\"#\"* ]] && [[ $file_line == *\"$f_name\"* ]] && [[ $file_line == *\"$p_name\"* ]]; then\n    ...\nfi\n\nif [[ $file_line != *\"#\"* ]] && [[ $file_line == *\"$f_name\"*\"$p_name\"* ]]; then\n    ...\nfi",
        "ul_372258: if grep -rl -- '^[^#]*Indexes' \"$DIR1/httpd.conf\" \"$DIR2/http\"; then\n    echo \"The above-listed files use an 'Indexes' directive.\"\nfi",
        "ul_195279: limit1=$(date -d \"20150408 13:29:28\" +\"%s\")\nlimit2=$(date -d \"20150408 17:55:02\" +\"%s\")\nwhile read -r logdate logtime logline\ndo\n    logsec=$(date -d \"$logdate $logtime\" +\"%s\")\n    if [ $limit1 -le $logsec -a $limit2 -ge $logsec ]\n    then\n        echo $logdate $logtime $logline\n    fi\ndone < log_files"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "net",
      "MP Summary": "Tool for administration of Samba and remote CIFS servers.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26567419: GREP for multiple strings"
      ],
      "Top-3 Scripts": [
        "so_26567419: while read -r domain\ndo\n    get -q \"$domain\" -O - | awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\ndone <urls.txt\n\nawk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\n\n-v web=zero -v net=zero -v office=zero\n\n$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2}\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"net=pattern2\" hij \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,pattern2,pattern3\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,zero,pattern3"
      ],
      "Explanations about Options": {
        "-v": "When listing data, give more verbose information on each item."
      }
    },
    {
      "Command": "domain",
      "MP Summary": "nnrpd domain resolver",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26567419: GREP for multiple strings"
      ],
      "Top-3 Scripts": [
        "so_26567419: while read -r domain\ndo\n    get -q \"$domain\" -O - | awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\ndone <urls.txt\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"net=pattern2\" hij \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,pattern2,pattern3\n\n$ domain=www.domain.com\n$ echo 'abc \"web=pattern1\" def \"office=pattern3\" <end>'| awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\nwww.domain.com: pattern1,zero,pattern3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "get",
      "MP Summary": "symbolic link to as_run command",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26567419: GREP for multiple strings"
      ],
      "Top-3 Scripts": [
        "so_26567419: while read -r domain\ndo\n    get -q \"$domain\" -O - | awk -F= -v RS='[\"#]' -v \"d=$domain\" -v web=zero -v net=zero -v office=zero '$1==\"web\"{web=$2} $1==\"net\" {net=$2} $1==\"office\"{office=$2} END{printf \"%s: %s,%s,%s\\n\",d,web,net,office}'\ndone <urls.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "au_551338: grep -Pzo \"^begin$\\n\\K[\\s\\S]*?(?=\\n^end$)\" file # or grep -Pzo \"(?<=^begin$\\n)[\\s\\S]*?(?=\\n^end$)\"\n\ngrep -Pzo \"(?s)(?<=^begin$\\n).*?(?=\\n^end$)\" file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "such",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "au_551338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "output",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "au_551338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "input",
      "MP Summary": "Yagi-Uda project antenna defining program",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?",
        "ul_372258: grep for string without another string before it"
      ],
      "Top-3 Scripts": [
        "au_551338: ",
        "ul_372258: $ grep '^[^#]*Indexes' input\nOptions Indexes\nOptions +Indexes\nOptions Indexes MultiViews\nOptions Indexes # Comment\nOptions Indexes # Indexes\n$ grep -v '^[^#]*Indexes' input\nOptions MultiViews # Indexes\n# Indexes yadayada Indexes"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "by",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "au_551338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "be",
      "MP Summary": "distributed bug tracking from the command line",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?",
        "so_24218032: how to search for a particular string from a .gz file?"
      ],
      "Top-3 Scripts": [
        "au_551338: ",
        "so_24218032: gunzip -c mygzfile.gz | grep \"string to be searched\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?",
        "so_24218032: how to search for a particular string from a .gz file?"
      ],
      "Top-3 Scripts": [
        "au_551338: ",
        "so_24218032: gunzip -c mygzfile.gz | grep \"string to be searched\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Pool",
      "MP Summary": "Sardana Pool Tango device server",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Format and print the time string @133986838 according to the default time format",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "date --date @120024000\n",
          "command-options": {
            "date": {
              "mpsum": "print or set the system date and time",
              "--date": "display time described by STRING, not 'now'"
            }
          },
          "TLDR_inform": {
            "date": {
              "man1_date_5833": "set display system date convert specif date unix timestamp format display specif date repres unix timestamp use default format display current date unix timestamp second sinc unix epoch display current date utc iso 8601 format display current date use rfc-3339 format yyyy-mm-dd hh : mm : ss tz display current date use default local format"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_547426: How to look for a specific string after a matched string from a file using sed, awk or grep"
      ],
      "Top-3 Scripts": [
        "ul_547426: sed -n '/Red Hat Satellite/,/Pool ID:/{ s/.*Pool ID:[[:blank:]]*\\(.*\\)/\\1/p; }' file\n\nPool ID:\n\nawk '/Red Hat Satellite/,/Pool ID:/ { if (/Pool ID:/) print $NF }' file"
      ],
      "Explanations about Options": {}
    }
  ]
}