{
  "Query": "Zipping folders and their contents into a .zip file in Linux",
  "Answers": [
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "List the contents of a zip file without extracting",
      "Most Similar TLDR Script": "unzip -l {{file.zip}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26422433: create a list with content of multiple zip files in linux",
        "au_196679: How to list content of all .zip files in a folder and grep for a specific file?",
        "su_505396: Find out the name of a folder in a root directory inside .zip file"
      ],
      "Top-3 Scripts": [
        "so_26422433: find /home -iname \"*.zip*\" -type f -exec unzip -l {} \\; > /home/list.txt",
        "au_196679: for file in *.zip; do\n    unzip -l \"$file\"\ndone \\\n| grep \"\\.zip\\|setup\"",
        "su_505396: unzip -qql myzip.zip | head -n1 | tr -s ' ' | cut -d' ' -f5-\n\nunzip -qql myzip.zip | sed -r '1 {s/([ ]+[^ ]+){3}\\s+//;q}'"
      ],
      "Explanations about Options": {
        "-q": "perform operations quietly (-qq = even quieter). Ordinarily unzip prints the names\n of the files it's extracting or testing, the extraction methods, any file or\n zipfile comments that may be stored in the archive, and possibly a summary when\n finished with each archive. The -q[q] options suppress the printing of some or all\n of these messages."
      }
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Delete files from an existing zip file",
      "Most Similar TLDR Script": "zip -d {{compressed.zip}} \"{{foo/*.tmp}}\"",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63227507: How to zip contents of a folder in linux command line",
        "su_1065834: Zip only data from folder in Linux",
        "so_44195124: How to compress multiple subfolders into separate files in linux?"
      ],
      "Top-3 Scripts": [
        "so_63227507: zip ../toto.zip . -r",
        "su_1065834: zip -r archive.zip *",
        "so_44195124: for folder in Folder_*/Folder*; do\n  cd \"${folder%/*}\"\n  zip -r ../\"${folder#*/}.zip\" \"${folder#*/}\"\n  cd ..\ndone"
      ],
      "Explanations about Options": {
        "-r": "Travel the directory structure recursively; for example:"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26422433: create a list with content of multiple zip files in linux",
        "nl2bash_13170: create a zip file of all the files in some directory",
        "su_1189040: Recursively zip all files in a directory into individual zip files... but in a separate directory"
      ],
      "Top-3 Scripts": [
        "so_26422433: find /home -iname \"*.zip*\" -type f -exec unzip -l {} \\; > /home/list.txt",
        "nl2bash_13170: find $directory -type -f -execdir zip -j $ZipFileName {}\\;",
        "su_1189040: find . -type f -exec zip -D '../zipdir/{}.zip' '{}' \\;\n\nfind . -type d -exec mkdir -p '../zipdir/{}' \\;"
      ],
      "Explanations about Options": {
        "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28744500: Compress files in a directory in a zip file with the shell",
        "au_1044168: Extract files inside folder in ZIP archive to current folder",
        "su_1115548: Repack 7z files to zip files in linux"
      ],
      "Top-3 Scripts": [
        "so_28744500: ln -s directory new_directory\nzip -r foo.zip new_directory\nrm new_directory",
        "au_1044168: #!/bin/sh\nunzip $1 $2\nmv $2 .\nrm -r $2",
        "su_1115548: "
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively"
      }
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1189040: Recursively zip all files in a directory into individual zip files... but in a separate directory",
        "su_1115548: Repack 7z files to zip files in linux",
        "so_22405538: Batch: Extracting each zip in folder x, to a seperate folder"
      ],
      "Top-3 Scripts": [
        "su_1189040: find . -type d -exec mkdir -p '../zipdir/{}' \\;",
        "su_1115548: ",
        "so_22405538: $ZipFileList = Get-ChildItem -Path c:\\test\\*.zip;\n\nforeach ($ZipFile in $ZipFileList) {\n    mkdir -Path ('{0}\\{1}' -f $ZipFile.Directory, $ZipFile.BaseName);\n    $ArgumentList = 'x \"{0}\" -o\"{1}\\{2}\\\"' -f $ZipFile.FullName, $ZipFile.Directory, $ZipFile.BaseName;\n    Start-Process -FilePath c:\\windows\\7za.exe -ArgumentList $ArgumentList -Wait;\n}"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_196679: How to list content of all .zip files in a folder and grep for a specific file?",
        "ul_1309: How to zip individual files from different directories in one line?",
        "so_42948144: How to delete a zip file after its creation? File keeps being in use"
      ],
      "Top-3 Scripts": [
        "au_196679: for file in *.zip; do\n    unzip -l \"$file\"\ndone \\\n| grep \"\\.zip\\|setup\"\n\nyour file",
        "ul_1309: zip foo.zip /path/to/first/file /path/to/second/file",
        "so_42948144: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "List the contents of a tar file",
      "Most Similar TLDR Script": "tar tvf {{source.tar}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28744500: Compress files in a directory in a zip file with the shell",
        "su_990333: Unzipping results in a file, not a folder"
      ],
      "Top-3 Scripts": [
        "so_28744500: tar czf foo.tar.gz --transform 's:^directory/:new_directory/:' directory",
        "su_990333: tar -cf myzip.tar myfiles_*\n\ntar -cfz myzip.tar.gz\n\ntar -xf myzip.tar.gz"
      ],
      "Explanations about Options": {
        "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
        "--transform": "Use sed replace EXPRESSION to transform file names."
      }
    },
    {
      "Command": "7z",
      "MP Summary": "A file archiver with high compression ratio format",
      "Most Similar TLDR Task": "List the contents of an archive file",
      "Most Similar TLDR Script": "7z l {{archived.7z}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37164348: Compressing ZIP files in a linux server with PHP",
        "su_1478137: how can i unzip a zip file with creating a new folder on the given path in linux"
      ],
      "Top-3 Scripts": [
        "so_37164348: ",
        "su_1478137: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1369344: Zip file made in Powershell can't be used in Linux",
        "au_518370: Extract several zip files, each in a new folder with the same name, via Ubuntu terminal",
        "ul_350445: How to add a text file to a zip in one single command?"
      ],
      "Top-3 Scripts": [
        "su_1369344: echo $contents",
        "au_518370: ",
        "ul_350445: zip --encrypt myarchive.zip -j -FI <(echo message)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1044168: Extract files inside folder in ZIP archive to current folder",
        "su_990333: Unzipping results in a file, not a folder"
      ],
      "Top-3 Scripts": [
        "au_1044168: unzip archive.zip folder/*; mv folder/* .;rm -r folder\n\nf=folder; unzip archive.zip $f; mv $f .;rm -r $f\n\n#!/bin/sh\nunzip $1 $2\nmv $2 .\nrm -r $2",
        "su_990333: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44195124: How to compress multiple subfolders into separate files in linux?",
        "so_49650969: Add multiple folders in one zip file in Powershell",
        "ul_557459: Zipping contents of several directories in bash script"
      ],
      "Top-3 Scripts": [
        "so_44195124: for folder in Folder_*/Folder*; do\n  cd \"${folder%/*}\"\n  zip -r ../\"${folder#*/}.zip\" \"${folder#*/}\"\n  cd ..\ndone",
        "so_49650969: ",
        "ul_557459: (cd root_folder/root_folder2; for i in ./folder? ; do  zip -vr $i $i; done;)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_505396: Find out the name of a folder in a root directory inside .zip file"
      ],
      "Top-3 Scripts": [
        "su_505396: unzip -qql myzip.zip | head -n1 | tr -s ' ' | cut -d' ' -f5-"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1115548: Repack 7z files to zip files in linux"
      ],
      "Top-3 Scripts": [
        "su_1115548: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
      "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28744500: Compress files in a directory in a zip file with the shell"
      ],
      "Top-3 Scripts": [
        "so_28744500: ln -s directory new_directory\nzip -r foo.zip new_directory\nrm new_directory"
      ],
      "Explanations about Options": {
        "-s": "make symbolic links instead of hard links"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Print the contents of a file to the standard output",
      "Most Similar TLDR Script": "cat {{file}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_412335: How to hide zip files in a jpg file in Ubuntu?"
      ],
      "Top-3 Scripts": [
        "au_412335: cat 1.zip 2.zip 3.zip > example.jpg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination",
      "Most Similar TLDR Script": "install {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42948144: How to delete a zip file after its creation? File keeps being in use"
      ],
      "Top-3 Scripts": [
        "so_42948144: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "p7zip",
      "MP Summary": "Wrapper on 7-Zip file archiver with high compression ratio",
      "Most Similar TLDR Task": "Decompress a file keeping the input file",
      "Most Similar TLDR Script": "p7zip -d -k {{compressed.ext}}.7z",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1115548: Repack 7z files to zip files in linux"
      ],
      "Top-3 Scripts": [
        "su_1115548: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Change file extensions",
      "Most Similar TLDR Script": "rename {{.ext}} {{.bak}} {{*.ext}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32508443: How to get a list of directories in a zip?"
      ],
      "Top-3 Scripts": [
        "so_32508443: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34641694: Zip only files starting with mprm* into mprm.zip in python"
      ],
      "Top-3 Scripts": [
        "so_34641694: import glob\nfrom zipfile import ZipFile, ZIP_DEFLATED\n\nfiles = glob.glob('mprm*') #find your stuff\nz = ZipFile('mprm.zip', mode='w', compression=ZIP_DEFLATED) #change if needed\nfor f in files:\n    z.write(f, f)\nprint ('done')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Use the standard input instead of a file",
      "Most Similar TLDR Script": "cat {{path/to/file}} | grep {{search_pattern}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_834959: How to zip a list of files in Linux",
        "au_196679: How to list content of all .zip files in a folder and grep for a specific file?"
      ],
      "Top-3 Scripts": [
        "su_834959: grep -rl \"abc\" file-* | zip archive -@",
        "au_196679: for file in *.zip; do\n    unzip -l \"$file\"\ndone \\\n| grep \"\\.zip\\|setup\"\n\ngrep \"\\.zip\\|your\\ file\""
      ],
      "Explanations about Options": {
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
      }
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Make a bootable usb drive from an isohybrid file (such like archlinux-xxx.iso) and show the progress",
      "Most Similar TLDR Script": "dd if={{file.iso}} of=/dev/{{usb_drive}} status=progress",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32508443: How to get a list of directories in a zip?"
      ],
      "Top-3 Scripts": [
        "so_32508443: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
      "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_505396: Find out the name of a folder in a root directory inside .zip file"
      ],
      "Top-3 Scripts": [
        "su_505396: unzip -qql myzip.zip | head -n1 | tr -s ' ' | cut -d' ' -f5-"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19944378: How to compare files in two .zip folder in Windows PowerShell"
      ],
      "Top-3 Scripts": [
        "so_19944378: Add-Type -AN System.IO.Compression.FileSystem\n$zip1 = [IO.Compression.ZipFile]::OpenRead(\"c:\\test\\test1.zip\")\n$zip2 = [IO.Compression.ZipFile]::OpenRead(\"c:\\test\\test2.zip\")\n$names1 = $zip1.Entries.FullName\n$names2 = $zip2.Entries.FullName\n$counter = (diff $names1 $names2).count\n$zip1.Dispose()\n$zip2.Dispose()"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_505396: Find out the name of a folder in a root directory inside .zip file"
      ],
      "Top-3 Scripts": [
        "su_505396: unzip -qql myzip.zip | sed -r '1 {s/([ ]+[^ ]+){3}\\s+//;q}'"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Translate the contents of a file to upper-case",
      "Most Similar TLDR Script": "tr \"[:lower:]\" \"[:upper:]\" < {{filename}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_505396: Find out the name of a folder in a root directory inside .zip file"
      ],
      "Top-3 Scripts": [
        "su_505396: unzip -qql myzip.zip | head -n1 | tr -s ' ' | cut -d' ' -f5-"
      ],
      "Explanations about Options": {
        "-s": "replace each sequence of a repeated character that is listed in the last specified\n SET, with a single occurrence of that character"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34641694: Zip only files starting with mprm* into mprm.zip in python"
      ],
      "Top-3 Scripts": [
        "so_34641694: import glob\nfrom zipfile import ZipFile, ZIP_DEFLATED\n\nfiles = glob.glob('mprm*') #find your stuff\nz = ZipFile('mprm.zip', mode='w', compression=ZIP_DEFLATED) #change if needed\nfor f in files:\n    z.write(f, f)\nprint ('done')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_261079: How can I create zip file with the date in its name?",
        "au_205421: Is it possible to zip changed files into a separate archive with only the changed files",
        "su_1478137: how can i unzip a zip file with creating a new folder on the given path in linux"
      ],
      "Top-3 Scripts": [
        "au_261079: man date",
        "au_205421: man zip",
        "su_1478137: man unzip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_261079: How can I create zip file with the date in its name?"
      ],
      "Top-3 Scripts": [
        "au_261079: zip -r \"archive-$(date +\"%Y-%m-%d\").zip\" file1 file2 file3 file4\n\nman date"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "sh {{file.sh}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_518370: Extract several zip files, each in a new folder with the same name, via Ubuntu terminal",
        "nl2bash_2396: Find all *.zip files under current directory and unzip them in the same directory as the files"
      ],
      "Top-3 Scripts": [
        "au_518370: find . -name '*.zip' -exec sh -c 'unzip -d \"${1%.*}\" \"$1\"' _ {} \\;\n\nfind . -name '*.zip' -exec sh -c 'echo unzip -d \"${1%.*}\" \"$1\"' _ {} \\;",
        "nl2bash_2396: find . -name '*.zip' -exec sh -c 'unzip -d \"`dirname \\\"{}\\\"`\" \"{}\"' ';'\n\n\nfind . -name '*.zip' -exec sh -c 'unzip -d `dirname {}` {}' ';'"
      ],
      "Explanations about Options": {
        "-d": "Use the first byte of x, NUL if empty, instead of the ASCII newline character\n as input line delimiter.",
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_518370: Extract several zip files, each in a new folder with the same name, via Ubuntu terminal"
      ],
      "Top-3 Scripts": [
        "au_518370: while read -rd $'\\0' f; do \n  unzip -d \"${f%.*}\" \"$f\"\ndone < <(find . -name '*.zip' -print0)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xxd",
      "MP Summary": "make a hexdump or do the reverse.",
      "Most Similar TLDR Task": "Generate a hexdump from a binary file and save it as a text file",
      "Most Similar TLDR Script": "xxd {{input_file}} {{output_file}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1369344: Zip file made in Powershell can't be used in Linux"
      ],
      "Top-3 Scripts": [
        "su_1369344: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46190169: Unable to zip empty folder with Java in Ubuntu"
      ],
      "Top-3 Scripts": [
        "so_46190169: Caused by: java.io.FileNotFoundException: /home/jarvis/project/storage-api/media/user/jarvis/Test/Testing (Is a directory)\nat java.io.FileInputStream.open0(Native Method)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "folder",
      "MP Summary": "set/list current folder/message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44195124: How to compress multiple subfolders into separate files in linux?",
        "au_1044168: Extract files inside folder in ZIP archive to current folder"
      ],
      "Top-3 Scripts": [
        "so_44195124: for folder in Folder_*/Folder*; do\n  cd \"${folder%/*}\"\n  zip -r ../\"${folder#*/}.zip\" \"${folder#*/}\"\n  cd ..\ndone",
        "au_1044168: unzip archive.zip folder/*; mv folder/* .;rm -r folder\n\nscript.sh archive.zip folder"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "archive",
      "MP Summary": "Usenet article archiver",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_834959: How to zip a list of files in Linux",
        "so_42948144: How to delete a zip file after its creation? File keeps being in use"
      ],
      "Top-3 Scripts": [
        "su_834959: zip archive -@ < out.txt\n\ngrep -rl \"abc\" file-* | zip archive -@",
        "so_42948144: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zipinfo",
      "MP Summary": "list detailed information about a ZIP archive",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_196679: How to list content of all .zip files in a folder and grep for a specific file?",
        "so_32508443: How to get a list of directories in a zip?"
      ],
      "Top-3 Scripts": [
        "au_196679: ",
        "so_32508443: zipinfo -1 foo.zip \"*/\""
      ],
      "Explanations about Options": {
        "-1": "list filenames only , one per line. This option excludes all others; headers ,\n trailers and zipfile comments are never printed. It is intended for use in Unix\n shell scripts."
      }
    },
    {
      "Command": "return",
      "MP Summary": "return from a function or dot script",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25143435: Is there a way of manipulating zip file contents in memory with Powershell?"
      ],
      "Top-3 Scripts": [
        "so_25143435: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34100904: Extracting contents of many zipped folders into a single directory",
        "ul_1309: How to zip individual files from different directories in one line?",
        "so_42948144: How to delete a zip file after its creation? File keeps being in use"
      ],
      "Top-3 Scripts": [
        "so_34100904: unzip -j -d /path/to/your/directory '*.zip*'",
        "ul_1309: zip foo.zip /path/to/first/file /path/to/second/file",
        "so_42948144: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_261079: How can I create zip file with the date in its name?"
      ],
      "Top-3 Scripts": [
        "au_261079: zip -r \"archive-$(date +\"%Y-%m-%d\").zip\" file1 file2 file3 file4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zipgrep",
      "MP Summary": "search files in a ZIP archive for lines matching a pattern",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18015866: grep -f on files in a zipped folder"
      ],
      "Top-3 Scripts": [
        "so_18015866: zipgrep -s \"pattern\" TestZipFolder.zip\n\nzipgrep [egrep_options] pattern file[.zip] [file(s) ...] [-x xfile(s) ...]"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5634961: How to compress multiple files into one zip with PowerShell?",
        "so_32508443: How to get a list of directories in a zip?"
      ],
      "Top-3 Scripts": [
        "so_5634961: dir C:\\Logs | where { $_.Extension -eq \".txt\" } | foreach { Write-Zip $_.FullName \"$_.zip\" }",
        "so_32508443: "
      ],
      "Explanations about Options": {
        "-q": "print ? instead of nongraphic characters"
      }
    },
    {
      "Command": "cc",
      "MP Summary": "front-end to the C compiler",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32508443: How to get a list of directories in a zip?"
      ],
      "Top-3 Scripts": [
        "so_32508443: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "aa",
      "MP Summary": "astronomical almanac - calculate planet and star positions",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32508443: How to get a list of directories in a zip?"
      ],
      "Top-3 Scripts": [
        "so_32508443: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "first",
      "MP Summary": "Yagi-Uda project quick antenna builder",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_1309: How to zip individual files from different directories in one line?"
      ],
      "Top-3 Scripts": [
        "ul_1309: zip foo.zip /path/to/first/file /path/to/second/file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34641694: Zip only files starting with mprm* into mprm.zip in python",
        "so_42948144: How to delete a zip file after its creation? File keeps being in use",
        "so_52656611: Delete a file from zip files in powershell 4"
      ],
      "Top-3 Scripts": [
        "so_34641694: import glob\nfrom zipfile import ZipFile, ZIP_DEFLATED\n\nfiles = glob.glob('mprm*') #find your stuff\nz = ZipFile('mprm.zip', mode='w', compression=ZIP_DEFLATED) #change if needed\nfor f in files:\n    z.write(f, f)\nprint ('done')",
        "so_42948144: ",
        "so_52656611: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "new",
      "MP Summary": "report on nmh folders with new messages",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42948144: How to delete a zip file after its creation? File keeps being in use",
        "so_46190169: Unable to zip empty folder with Java in Ubuntu"
      ],
      "Top-3 Scripts": [
        "so_42948144: ",
        "so_46190169: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "The",
      "MP Summary": "X11 gesture recognition application",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42948144: How to delete a zip file after its creation? File keeps being in use"
      ],
      "Top-3 Scripts": [
        "so_42948144: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42948144: How to delete a zip file after its creation? File keeps being in use"
      ],
      "Top-3 Scripts": [
        "so_42948144: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "project",
      "MP Summary": "Project  table data onto lines or great circles, generate tracks, or translate coordinates",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46190169: Unable to zip empty folder with Java in Ubuntu"
      ],
      "Top-3 Scripts": [
        "so_46190169: Caused by: java.io.FileNotFoundException: /home/jarvis/project/storage-api/media/user/jarvis/Test/Testing (Is a directory)\nat java.io.FileInputStream.open0(Native Method)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Test",
      "MP Summary": "Test display patch window, Set Video LUTs, Install profiles.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46190169: Unable to zip empty folder with Java in Ubuntu"
      ],
      "Top-3 Scripts": [
        "so_46190169: Caused by: java.io.FileNotFoundException: /home/jarvis/project/storage-api/media/user/jarvis/Test/Testing (Is a directory)\nat java.io.FileInputStream.open0(Native Method)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "val",
      "MP Summary": "validate SCCS files (DEVELOPMENT)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -maxdepth 2 -size +100000 -exec bzip2 {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
              "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves."
            },
            "bzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "bzip2": {
              "man1_bzip2_3197": "block-sort file compressor compress file decompress file decompress file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46190169: Unable to zip empty folder with Java in Ubuntu"
      ],
      "Top-3 Scripts": [
        "so_46190169: "
      ],
      "Explanations about Options": {}
    }
  ]
}