{
  "Query": "How to split a line into words separated by one or more spaces in bash?",
  "Answers": [
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64420100: Replace multiple words in one line from a .txt file",
        "so_3856630: How to separate words in a \"sentence\" with spaces?",
        "so_21738971: bash replace word in a : separated file"
      ],
      "Top-3 Scripts": [
        "so_64420100: ",
        "so_3856630: ",
        "so_21738971: perl -F: -lane 'print join \":\" , map {$_ eq \"dog\" ? \"fox\" : $_} @F'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fold",
      "MP Summary": "wrap each input line to fit in specified width",
      "Most Similar TLDR Task": "Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped)",
      "Most Similar TLDR Script": "fold -w5 -s {{file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_603739: How can I split a line in 2 by words/characters? (Bash) (Regex)",
        "so_29378720: How can I split a line in 2 by words/characters?",
        "tldr_23: Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped)"
      ],
      "Top-3 Scripts": [
        "au_603739: echo $YOUR_STRING | fold -sw $CHARS\n\nman fold",
        "so_29378720: $ s=\"Hello Hello Hi Hello Hello Hi Hi Hi Hi Hello\"\n$ fold -w $(( ${#s} / 2 + 1)) -s <<< \"$s\"\nHello Hello Hi Hello\nHello Hi Hi Hi Hi Hello\n\nman fold\n\nfold - wrap each input line to fit in specified width\n\n   -s, --spaces\n          break at spaces\n\n   -w, --width=WIDTH\n          use WIDTH columns instead of 80",
        "tldr_23: fold -w5 -s {{file}}"
      ],
      "Explanations about Options": {
        "-s": "break at spaces"
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Use standard input to count lines, words and characters (bytes) in that order",
      "Most Similar TLDR Script": "{{find .}} | wc",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2182953: count specific word in line in bash",
        "au_603739: How can I split a line in 2 by words/characters? (Bash) (Regex)",
        "so_29309679: How to split words in bash"
      ],
      "Top-3 Scripts": [
        "so_2182953: echo \"1,2,3\" | tr -cd ',' | wc -c",
        "au_603739: CHARS=$((`echo $YOUR_STRING | wc -c` /2 + 1))",
        "so_29309679: IFS='()'\necho \"$s\" | wc    # 1 line, 1 word and 10 characters\necho $s | wc      # 1 line, 2 words and 9 characters"
      ],
      "Explanations about Options": {
        "-c": "print the byte counts"
      }
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43373128: How to separate a line into an array with white space in shell scripting",
        "so_21724976: How to join multiple lines separated by a pattern into one in Vi",
        "so_25263521: How to read and split comma separated file in a bash shell script?"
      ],
      "Top-3 Scripts": [
        "so_43373128: do    \n   line = ($row)\n\nline - read one line\n\nfor word in $line\n\nread -r line\necho \"${line%% *}\"     # remove everything after the first space",
        "so_21724976: while read line; do\n   if [ \"$line\" = \"<SHOUT>\" ]; then\n       echo\n       echo $line\n       prefix=\"\"\n   else\n       echo -n \"$prefix${line#*=}\"\n       prefix=\" | \"\n   fi\ndone < file1",
        "so_25263521: Reads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40011867: How does splitting string to array by 'read' with IFS word separator in bash generated extra space element?",
        "ul_378547: Split a string by some separator in bash?",
        "so_28225650: Need to split a string in Bash separated by a colon and assign to variables"
      ],
      "Top-3 Scripts": [
        "so_40011867: l=\"2->4->3\"; IFS=\"->\" read -a la <<< \"$l\"; \\\nfor ((i = 0; i < ${#la[@]}; ++i)) do \\\n[ -n \"${la[i]}\" ] && echo ${la[$i]}; done",
        "ul_378547: ",
        "so_28225650: s='Strings:With:Four:Words'\nIFS=: read -r var1 var2 var3 var4 <<< \"$s\"\necho \"[$var1] [$var2] [$var3 [$var4]\"\n[Strings] [With] [Four [Words]"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10520623: How to split one string into multiple variables in bash shell?",
        "so_54731051: When reading a line using While loop in bash, it's squezzing multiple space into one",
        "ul_282737: Match words in array line by line to a separate file"
      ],
      "Top-3 Scripts": [
        "so_10520623: var1=$(echo $STR | cut -f1 -d-)\nvar2=$(echo $STR | cut -f2 -d-)",
        "so_54731051: #!/bin/bash\n\nwhile IFS= read -r l \ndo\n    echo \"$l\"\n    echo \"$l\" > tempf\n    wc -L tempf | cat > length\n    len=$(cut -d \" \" -f 1 length)\n    echo \"$len\"\ndone < \"$1\"",
        "ul_282737: interesting_titles=$(cat $input |cut -d, -f2)\n\ngrep -F \"$(cat $input |cut -d, -f2)\" $csv2\n\ncat $input |cut -d, -f2 | while read t; do\n  grep -i \"$t\" $csv2\n  if [ $? -eq 0 ];then\n    grep -i \"$t\" $input\n  fi\ndone"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39528273: Split a comma separated strings in Bash",
        "so_57045502: Bash: Split a single line of output with spaces into multiple lines of one word each",
        "so_62657224: Split a string on a word in Bash"
      ],
      "Top-3 Scripts": [
        "so_39528273: tr ',' '\\n' < file\n\nsed 's/,/\\n/g' file\n\nperl 's/,/\\n/g' file\n\nawk 'gsub(/,/,\"\\n\")' file\n\nawk -F, '{for(i=1;i<=NF;i++) print $i}' file\n\nawk -v RS=, '1' file\nawk 1 RS=, file",
        "so_57045502: echo 'foo bar baz are your words' | awk '{NF-=3; OFS=\"\\n\"; $1=$1}1' | sort",
        "so_62657224: echo test-server-domain-name.com | awk -F 'domain' '{print $1}'"
      ],
      "Explanations about Options": {
        "-v": "FS=sepstring"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1469849: How to split one string into multiple strings separated by at least one space in bash shell?",
        "so_40011867: How does splitting string to array by 'read' with IFS word separator in bash generated extra space element?",
        "so_24704470: How to convert space separated text to lines in Bash"
      ],
      "Top-3 Scripts": [
        "so_1469849: sentence=\"This is   a sentence.\"\nfor word in $sentence\ndo\n    echo $word\ndone",
        "so_40011867: l=\"2->4->3\"; IFS=\"->\" read -a la <<< \"$l\"; \\\nfor ((i = 0; i < ${#la[@]}; ++i)) do \\\n[ -n \"${la[i]}\" ] && echo ${la[$i]}; done",
        "so_24704470: ~$ echo 'foo bar boo you too' | tr ' ' '\\n'\nfoo\nbar\nboo\nyou\ntoo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24704470: How to convert space separated text to lines in Bash",
        "so_39528273: Split a comma separated strings in Bash",
        "so_2182953: count specific word in line in bash"
      ],
      "Top-3 Scripts": [
        "so_24704470: ~$ echo 'foo bar boo you too' | tr ' ' '\\n'\nfoo\nbar\nboo\nyou\ntoo",
        "so_39528273: tr ',' '\\n' < file\n\nsed 's/,/\\n/g' file\n\nperl 's/,/\\n/g' file\n\nawk 'gsub(/,/,\"\\n\")' file",
        "so_2182953: echo \"1,2,3\" | tr -cd ',' | wc -c"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate",
        "-c": "use the complement of SET1"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace only on lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39528273: Split a comma separated strings in Bash",
        "so_20711327: replacing one word in one line in a file",
        "so_21738971: bash replace word in a : separated file"
      ],
      "Top-3 Scripts": [
        "so_39528273: tr ',' '\\n' < file\n\nsed 's/,/\\n/g' file\n\nperl 's/,/\\n/g' file\n\nawk 'gsub(/,/,\"\\n\")' file",
        "so_20711327: sed '1s/unix/whatever/2' file",
        "so_21738971: sed -r 's/^|$/:/g; s/:dog:/:fox:/g; s/^:|:$//g;'"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54731051: When reading a line using While loop in bash, it's squezzing multiple space into one",
        "so_6602732: How can I align the columns of a space separated table in Bash?",
        "ul_282737: Match words in array line by line to a separate file"
      ],
      "Top-3 Scripts": [
        "so_54731051: #!/bin/bash\n\nwhile IFS= read -r l \ndo\n    echo \"$l\"\n    echo \"$l\" > tempf\n    wc -L tempf | cat > length\n    len=$(cut -d \" \" -f 1 length)\n    echo \"$len\"\ndone < \"$1\"\n\n$ cat fn\nwho -all\n           system boot  2019-02-13 10:27\n           run-level 5  2019-02-13 10:27\nLOGIN      tty1         2019-02-13 10:27              1389 id=tty1\ndavid    ? :0           2019-02-13 10:27   ?          3118\ndavid    - console      2019-02-13 10:27  old         3118 (:0)",
        "so_6602732: column -t [file]\n\n# or from stdin\ncat file | column -t\n\n# For a quick demonstration, format the output of mount\nmount | column -t",
        "ul_282737: interesting_titles=$(cat $input |cut -d, -f2)\n\ngrep -F \"$(cat $input |cut -d, -f2)\" $csv2\n\ncat $input |cut -d, -f2 | while read t; do\n  grep -i \"$t\" $csv2\n  if [ $? -eq 0 ];then\n    grep -i \"$t\" $input\n  fi\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file, each split having 10 lines (except the last split)",
      "Most Similar TLDR Script": "split -l {{10}} {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_378547: Split a string by some separator in bash?",
        "so_25263521: How to read and split comma separated file in a bash shell script?"
      ],
      "Top-3 Scripts": [
        "ul_378547: perl -E 'say for split quotemeta shift, shift' -- \"$separator\" \"$string\"",
        "so_25263521: Reads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39528273: Split a comma separated strings in Bash",
        "so_37931155: Correctly allow word splitting of command substitution in bash",
        "so_62138023: How to compare the last words of the lines in a file"
      ],
      "Top-3 Scripts": [
        "so_39528273: grep -oP '.*?(?=,|$)' file\n\ngrep -oE '((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' file",
        "so_37931155: read -r -a names < <(docker ps | awk '{print $NF}' | grep -v NAMES)\nprintf 'Found name: %s\\n' \"${names[@]}\"",
        "so_62138023: TOTAL=$(wc -l < summary.txt | xargs echo)\nSUCCESS=$(grep -e 'completed$' summary.txt | wc -l)\ntitle=$(if [ $TOTAL = $SUCCESS ]; then echo 'All Succeeded'; else echo \"$SUCCESS/$TOTAL succeeded\"; fi)\necho $title # or pass into mail command as subject"
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57045502: Bash: Split a single line of output with spaces into multiple lines of one word each",
        "so_3856630: How to separate words in a \"sentence\" with spaces?",
        "so_25883749: How to split a file into words keeping punctuation, in bash?"
      ],
      "Top-3 Scripts": [
        "so_57045502: echo 'foo bar baz are your words' | awk '{NF-=3; OFS=\"\\n\"; $1=$1}1' | sort",
        "so_3856630: ",
        "so_25883749: grep -Eo '\\w+|[^\\w ]' file | sort -f\n,\n.\n;\nWord1\nword2\nword3\nword4\nWord5"
      ],
      "Explanations about Options": {
        "-f": "fold lower case to upper case characters"
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17338863: Split a string (stored in a variable) into multiple words using spaces but not the spaces within double quotes",
        "so_54731051: When reading a line using While loop in bash, it's squezzing multiple space into one"
      ],
      "Top-3 Scripts": [
        "so_17338863: ",
        "so_54731051: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_505266: How to split a string argument in a bash over multiple lines without adding space",
        "so_62683894: How to print many spaces and then print word on the same line in bash?",
        "so_17338863: Split a string (stored in a variable) into multiple words using spaces but not the spaces within double quotes"
      ],
      "Top-3 Scripts": [
        "ul_505266: some_command --flag \"$(printf '%s' foo\\\n    bar\\\n    quux)\" arg2",
        "so_62683894: printf '%*s\\n' \"$spaces\" 'hello!'",
        "so_17338863: s='2012 2013 \"multiple words\"'\ndeclare -a 'a=('\"$s\"')'\nprintf \"%s\\n\" \"${a[@]}\"\n2012\n2013\nmultiple words"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a regular expression on `stdin`, printing out the first capture group for each line",
      "Most Similar TLDR Script": "cat {{path/to/input_file}} | perl -nle 'if (/.*({{foo}}).*/) {print \"$1\"; last;}'",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39528273: Split a comma separated strings in Bash",
        "ul_378547: Split a string by some separator in bash?",
        "so_64420100: Replace multiple words in one line from a .txt file"
      ],
      "Top-3 Scripts": [
        "so_39528273: tr ',' '\\n' < file\n\nsed 's/,/\\n/g' file\n\nperl 's/,/\\n/g' file\n\nawk 'gsub(/,/,\"\\n\")' file",
        "ul_378547: perl -E 'say for split quotemeta shift, shift' -- \"$separator\" \"$string\"",
        "so_64420100: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using the specified delimiter",
      "Most Similar TLDR Script": "paste -s -d {{delimiter}} {{file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9848: Print the last white space separated field of every line in \"file.txt\" as a \", \" separated list"
      ],
      "Top-3 Scripts": [
        "nl2bash_9848: awk '{print $NF}' file.txt | paste -sd, | sed 's/,/, /g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62138023: How to compare the last words of the lines in a file",
        "so_65084182: How to store multiple lines of output in separate variables?"
      ],
      "Top-3 Scripts": [
        "so_62138023: TOTAL=$(wc -l < summary.txt | xargs echo)\nSUCCESS=$(grep -e 'completed$' summary.txt | wc -l)\ntitle=$(if [ $TOTAL = $SUCCESS ]; then echo 'All Succeeded'; else echo \"$SUCCESS/$TOTAL succeeded\"; fi)\necho $title # or pass into mail command as subject",
        "so_65084182: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62138023: How to compare the last words of the lines in a file"
      ],
      "Top-3 Scripts": [
        "so_62138023: xargs echo\n\nTOTAL=$(wc -l < summary.txt | xargs echo)\nSUCCESS=$(grep -e 'completed$' summary.txt | wc -l)\ntitle=$(if [ $TOTAL = $SUCCESS ]; then echo 'All Succeeded'; else echo \"$SUCCESS/$TOTAL succeeded\"; fi)\necho $title # or pass into mail command as subject"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39528273: Split a comma separated strings in Bash",
        "so_20711327: replacing one word in one line in a file",
        "so_25263521: How to read and split comma separated file in a bash shell script?"
      ],
      "Top-3 Scripts": [
        "so_39528273: tr ',' '\\n' < file\n\nsed 's/,/\\n/g' file\n\nperl 's/,/\\n/g' file\n\nawk 'gsub(/,/,\"\\n\")' file\n\ngrep -oP '.*?(?=,|$)' file\n\nawk -F, '{for(i=1;i<=NF;i++) print $i}' file\n\nawk -v RS=, '1' file\nawk 1 RS=, file\n\ngrep -oE '((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)' file",
        "so_20711327: sed '1s/unix/whatever/2' file",
        "so_25263521: while IFS=, read -ra arr; do\n    ## Do something with ${arr0]}, ${arr[1]} and ${arr[2]}\n    ...\ndone < file\n\nwhile IFS=, read -r a b c; do\n    ## Do something with $a, $b and $c\n    ...\ndone < file\n\nReads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17338863: Split a string (stored in a variable) into multiple words using spaces but not the spaces within double quotes"
      ],
      "Top-3 Scripts": [
        "so_17338863: str='2012 2013 \"multiple words\"'\neval x=($str)\necho ${x[2]}\nmultiple words"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62138023: How to compare the last words of the lines in a file",
        "so_25263521: How to read and split comma separated file in a bash shell script?"
      ],
      "Top-3 Scripts": [
        "so_62138023: TOTAL=$(wc -l < summary.txt | xargs echo)\nSUCCESS=$(grep -e 'completed$' summary.txt | wc -l)\ntitle=$(if [ $TOTAL = $SUCCESS ]; then echo 'All Succeeded'; else echo \"$SUCCESS/$TOTAL succeeded\"; fi)\necho $title # or pass into mail command as subject",
        "so_25263521: Reads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39528273: Split a comma separated strings in Bash",
        "so_64420100: Replace multiple words in one line from a .txt file",
        "so_62657224: Split a string on a word in Bash"
      ],
      "Top-3 Scripts": [
        "so_39528273: awk -F, '{for(i=1;i<=NF;i++) print $i}' file",
        "so_64420100: print $_",
        "so_62657224: echo test-server-domain-name.com | awk -F 'domain' '{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current group identity as a number",
      "Most Similar TLDR Script": "id -g",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54731051: When reading a line using While loop in bash, it's squezzing multiple space into one",
        "so_65084182: How to store multiple lines of output in separate variables?"
      ],
      "Top-3 Scripts": [
        "so_54731051: $ cat fn\nwho -all\n           system boot  2019-02-13 10:27\n           run-level 5  2019-02-13 10:27\nLOGIN      tty1         2019-02-13 10:27              1389 id=tty1\ndavid    ? :0           2019-02-13 10:27   ?          3118\ndavid    - console      2019-02-13 10:27  old         3118 (:0)",
        "so_65084182: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37931155: Correctly allow word splitting of command substitution in bash",
        "so_3856630: How to separate words in a \"sentence\" with spaces?"
      ],
      "Top-3 Scripts": [
        "so_37931155: read -r -a names < <(docker ps | awk '{print $NF}' | grep -v NAMES)\nprintf 'Found name: %s\\n' \"${names[@]}\"",
        "so_3856630: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cmp",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Find the byte number and line number of the first difference between the files",
      "Most Similar TLDR Script": "cmp {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3856630: How to separate words in a \"sentence\" with spaces?"
      ],
      "Top-3 Scripts": [
        "so_3856630: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37931155: Correctly allow word splitting of command substitution in bash"
      ],
      "Top-3 Scripts": [
        "so_37931155: set -f"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1269866: How to write multiple lines in one file from bash"
      ],
      "Top-3 Scripts": [
        "au_1269866: #!/bin/bash\ncat <<EOF > test\nA\nB\nC\nEOF\n\n#!/bin/bash\nmessage_content=\"$(cat <<-EOF\n    A\n        B\n    C\nEOF\n)\"\n\necho \"$message_content\" > test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "docker",
      "MP Summary": "Docker image and container command line interface",
      "Most Similar TLDR Task": "Open a shell inside of an already running container",
      "Most Similar TLDR Script": "docker exec -it {{container_name}} {{sh}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37931155: Correctly allow word splitting of command substitution in bash"
      ],
      "Top-3 Scripts": [
        "so_37931155: read -r -a names < <(docker ps | awk '{print $NF}' | grep -v NAMES)\nprintf 'Found name: %s\\n' \"${names[@]}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Search for manpages containing a search string",
      "Most Similar TLDR Script": "man -k \"{{search string}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_603739: How can I split a line in 2 by words/characters? (Bash) (Regex)",
        "so_6602732: How can I align the columns of a space separated table in Bash?",
        "so_29378720: How can I split a line in 2 by words/characters?"
      ],
      "Top-3 Scripts": [
        "au_603739: man fold",
        "so_6602732: man column",
        "so_29378720: man fold"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42271349: replace specific word in one line"
      ],
      "Top-3 Scripts": [
        "so_42271349: find . -type f -exec \\\nperl -i -pe 's/(?<!stripe_)plan/service_$&/g; s/(?<!Stripe::)Plan/Service$&/g' {} +"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69739655: Split string in powershell with space"
      ],
      "Top-3 Scripts": [
        "so_69739655: $TempArray = \"Device: ILO 5 Firmware Version : 2:33 Firmware date : 10-10-2020\" -split(' ')"
      ],
      "Explanations about Options": {
        "-s": "set time described by STRING"
      }
    },
    {
      "Command": "qr",
      "MP Summary": "script to create QR codes at the command line",
      "Most Similar TLDR Task": "Generate a QR code",
      "Most Similar TLDR Script": "echo \"{{data}}\" | qr",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3856630: How to separate words in a \"sentence\" with spaces?"
      ],
      "Top-3 Scripts": [
        "so_3856630: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_65084182: How to store multiple lines of output in separate variables?"
      ],
      "Top-3 Scripts": [
        "so_65084182: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
      "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32133100: How to split contained words string to to function parameters in BASH?"
      ],
      "Top-3 Scripts": [
        "so_32133100: input=(cp directory_a directory_b)\neval_input \"${input[@]}\"\n\ninput=(cp \"directory a\" \"directory b\")\n\n$ echo \"${array[0]}\"\ncp\n$ echo \"${array[1]}\"\ndirectory_a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display the name of the disk file that would be executed",
      "Most Similar TLDR Script": "type -p {{command}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3856630: How to separate words in a \"sentence\" with spaces?"
      ],
      "Top-3 Scripts": [
        "so_3856630: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Split columns automatically and auto-align in a tabular format",
      "Most Similar TLDR Script": "printf \"header1 header2\\nbar foo\\n\" | column -t",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6602732: How can I align the columns of a space separated table in Bash?"
      ],
      "Top-3 Scripts": [
        "so_6602732: column -t [file]\n\n# or from stdin\ncat file | column -t\n\n# For a quick demonstration, format the output of mount\nmount | column -t\n\nman column"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Open an `at` prompt to create a new set of scheduled commands, press `Ctrl + D` to save and exit",
      "Most Similar TLDR Script": "at {{hh:mm}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25263521: How to read and split comma separated file in a bash shell script?",
        "so_29378720: How can I split a line in 2 by words/characters?"
      ],
      "Top-3 Scripts": [
        "so_25263521: Reads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero",
        "so_29378720: fold - wrap each input line to fit in specified width\n\n   -s, --spaces\n          break at spaces\n\n   -w, --width=WIDTH\n          use WIDTH columns instead of 80"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_21738971: bash replace word in a : separated file"
      ],
      "Top-3 Scripts": [
        "so_21738971: awk ... > tmpfile && mv tmpfile orig_file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create a directory in current directory or given path",
      "Most Similar TLDR Script": "mkdir {{directory}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66473280: Split a file by lines into specific subfolders in bash"
      ],
      "Top-3 Scripts": [
        "so_66473280: nr=1\nwhile IFS= read -r line; do\n   mkdir \"child$nr\"\n   printf \"%s\\n\" \"$line\" > \"child$nr/child$nr\"\n   nr=$((nr + 1))\ndone < parent.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25263521: How to read and split comma separated file in a bash shell script?"
      ],
      "Top-3 Scripts": [
        "so_25263521: Reads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pass",
      "MP Summary": "stores, retrieves, generates, and synchronizes passwords securely",
      "Most Similar TLDR Task": "Save a new password and additional information (press Ctrl + D on a new line to complete)",
      "Most Similar TLDR Script": "pass insert --multiline {{path/to/data}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62138023: How to compare the last words of the lines in a file"
      ],
      "Top-3 Scripts": [
        "so_62138023: TOTAL=$(wc -l < summary.txt | xargs echo)\nSUCCESS=$(grep -e 'completed$' summary.txt | wc -l)\ntitle=$(if [ $TOTAL = $SUCCESS ]; then echo 'All Succeeded'; else echo \"$SUCCESS/$TOTAL succeeded\"; fi)\necho $title # or pass into mail command as subject"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mail",
      "MP Summary": "send and receive mail",
      "Most Similar TLDR Task": "Send a typed email message. The commandline below continues after pressing Enter key. Input CC email-id (optional) press Enter key. Input message text (can be multi-line). Press \"Ctrl-D\" key to complete the message text",
      "Most Similar TLDR Script": "mail --subject=\"{{subject line}}\" {{to_user@example.com}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62138023: How to compare the last words of the lines in a file"
      ],
      "Top-3 Scripts": [
        "so_62138023: TOTAL=$(wc -l < summary.txt | xargs echo)\nSUCCESS=$(grep -e 'completed$' summary.txt | wc -l)\ntitle=$(if [ $TOTAL = $SUCCESS ]; then echo 'All Succeeded'; else echo \"$SUCCESS/$TOTAL succeeded\"; fi)\necho $title # or pass into mail command as subject"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "who",
      "MP Summary": "show who is logged on",
      "Most Similar TLDR Task": "Display all available information with table headers",
      "Most Similar TLDR Script": "who -a -H",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54731051: When reading a line using While loop in bash, it's squezzing multiple space into one"
      ],
      "Top-3 Scripts": [
        "so_54731051: $ cat fn\nwho -all\n           system boot  2019-02-13 10:27\n           run-level 5  2019-02-13 10:27\nLOGIN      tty1         2019-02-13 10:27              1389 id=tty1\ndavid    ? :0           2019-02-13 10:27   ?          3118\ndavid    - console      2019-02-13 10:27  old         3118 (:0)"
      ],
      "Explanations about Options": {
        "-l": "print system login processes",
        "-a": "same as -b -d --login -p -r -t -T -u"
      }
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount a specific filesystem described in /etc/fstab (e.g. \"/dev/sda1 /my_drive ext2 defaults 0 2\")",
      "Most Similar TLDR Script": "mount {{/my_drive}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6602732: How can I align the columns of a space separated table in Bash?"
      ],
      "Top-3 Scripts": [
        "so_6602732: column -t [file]\n\n# or from stdin\ncat file | column -t\n\n# For a quick demonstration, format the output of mount\nmount | column -t"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zenity",
      "MP Summary": "display GTK+ dialogs",
      "Most Similar TLDR Task": "Display a name/password form and output the data separated by \";\"",
      "Most Similar TLDR Script": "zenity --forms --add-entry=\"{{Name}}\" --add-password=\"{{Password}}\" --separator=\"{{;}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15001802: Space separated arguments in bash"
      ],
      "Top-3 Scripts": [
        "so_15001802: zenity --entry \"--text=$ret\""
      ],
      "Explanations about Options": {
        "--entry": "Display text entry dialog"
      }
    },
    {
      "Command": "Version",
      "MP Summary": "daemon for ''lcd'' display devices",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69739655: Split string in powershell with space"
      ],
      "Top-3 Scripts": [
        "so_69739655: $TempArray = \"Device: ILO 5 Firmware Version : 2:33 Firmware date : 10-10-2020\" -split(' ')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24704470: How to convert space separated text to lines in Bash",
        "so_57045502: Bash: Split a single line of output with spaces into multiple lines of one word each"
      ],
      "Top-3 Scripts": [
        "so_24704470: ~$ echo 'foo bar boo you too' | tr ' ' '\\n'\nfoo\nbar\nboo\nyou\ntoo",
        "so_57045502: echo 'foo bar baz are your words' | awk '{NF-=3; OFS=\"\\n\"; $1=$1}1' | sort\n\nbar\nbaz\nfoo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29309679: How to split words in bash",
        "so_32133100: How to split contained words string to to function parameters in BASH?",
        "so_25263521: How to read and split comma separated file in a bash shell script?"
      ],
      "Top-3 Scripts": [
        "so_29309679: IFS='()'\necho \"$s\" | wc    # 1 line, 1 word and 10 characters\necho $s | wc      # 1 line, 2 words and 9 characters",
        "so_32133100: , and",
        "so_25263521: Reads a single line from the standard input, or from file descriptor FD\nif the -u option is supplied.  The line is split into fields as with word\nsplitting, and the first word is assigned to the first NAME, the second\nword to the second NAME, and so on, with any leftover words assigned to\nthe last NAME.  Only the characters found in $IFS are recognized as word\ndelimiters.\n\n  -a array  assign the words read to sequential indices of the array\n            variable ARRAY, starting at zero"
      ],
      "Explanations about Options": {}
    }
  ]
}