{
  "Query": "Get exit code of a background process",
  "Answers": [
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_344360: Collect exit codes of parallel background processes (sub shells)",
        "ul_116098: reliable return code of background process",
        "ul_118592: Can a program next in a pipeline see the exit code of the previous program?"
      ],
      "Top-3 Scripts": [
        "ul_344360: ",
        "ul_116098: bash -c '(exit 12; foo) & pid=$!\n         while : bar & [ \"$pid\" != \"$!\" ]; do :;done\n         wait \"$pid\"; echo \"$?\"'",
        "ul_118592: { prog1; echo $?; } | awk '\n    NR != 1 {\n        if (line ~ /[Ee][Rr][Rr][Oo][Rr]/) print \"\\033[31m\" line \"\\033[0m\";\n        else print line;\n    }\n    {line = $0}\n    END {exit($0)}\n'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55157581: bash - how to process exit code when using set -e and get output of command",
        "tldr_6943: Return an exit code of 1",
        "ul_14270: Get exit status of process that's piped to another"
      ],
      "Top-3 Scripts": [
        "so_55157581: if true; then\n    false\nfi",
        "tldr_6943: ",
        "ul_14270: $ false | true\n$ echo \"${PIPESTATUS[0]} ${PIPESTATUS[1]}\"\n1 0\n\n$ false | true\n$ echo \"${pipestatus[1]} ${pipestatus[2]}\"\n1 0\n\n$ false | true\n$ retval_bash=\"${PIPESTATUS[0]}\" retval_zsh=\"${pipestatus[1]}\" retval_final=$?\n$ echo $retval_bash $retval_zsh $retval_final\n1 0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display running processes",
      "Most Similar TLDR Script": "jobs -r",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_662817: Why can I see the output of background processes?",
        "nl2bash_245: get a PID of a process",
        "ul_679783: Reliable way to get PID of piped background process"
      ],
      "Top-3 Scripts": [
        "au_662817: ",
        "nl2bash_245: jobs -x echo %1",
        "ul_679783: cmd & jobs\n\nbash -c '{ sleep 123 | sleep 456; } & jobs -p; sleep 789'\n\njobs -p\n\nPID PPID CMD\n 392  389  |   \\_ bash -c sleep 123 | sleep 456 & jobs -p; sleep 789\n 393  392  |       \\_ sleep 123\n 394  392  |       \\_ sleep 456\n 395  392  |       \\_ sleep 789\n\njobs -p %cmd1\n\njobs -p %?cmd2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
      "Most Similar TLDR Script": "wait {{pid}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44616562: Bash get exit code of a waiting process",
        "so_11364758: Check return status of background process",
        "ul_344360: Collect exit codes of parallel background processes (sub shells)"
      ],
      "Top-3 Scripts": [
        "so_44616562: another_script.sh &\n# Do some other stuff\nwait\nexit_code=$?",
        "so_11364758: cmd &\npid=$!\ncmd2 &\npid2=$!\nwait $pid || echo cmd failed >&2\nwait $pid2 || echo cmd2 failed >&2",
        "ul_344360: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1908610: How to get process ID of background process?",
        "so_45006761: How to get pid of last background process in SSH"
      ],
      "Top-3 Scripts": [
        "so_1908610: foo &\nFOO_PID=$!\n# do other stuff\nkill $FOO_PID",
        "so_45006761: pid=$!\nsleep 3\nkill $pid\n\npid=\"\\$!\"\nsleep 3\nkill \"\\$pid\"\n\nssh -i mycert.pem testuser@myserver.com <<'SSHBLOCK'\npm2 logs --lines 100&\npid=$!\nsleep 3\nkill $pid\nSSHBLOCK"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "Get the parent pid of a process",
      "Most Similar TLDR Script": "ps -o ppid= -p {{pid}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_116098: reliable return code of background process",
        "ul_458973: How can I get only the ancestry processes of a given process?",
        "ul_302762: Get the exit code of processes forked from the master process"
      ],
      "Top-3 Scripts": [
        "ul_116098: ",
        "ul_458973: ps -o ppid=\n\n#! /bin/bash -\npid=${1?Please give a pid}\nwhile\n  [ \"$pid\" -gt 0 ] &&\n    read -r ppid name < <(ps -o ppid= -o comm= -p \"$pid\")\ndo\n  printf '%s\\n' \"$pid $name\"\n  pid=$ppid\ndone",
        "ul_302762: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fg",
      "MP Summary": "run jobs in the foreground",
      "Most Similar TLDR Task": "Bring most recently suspended background job to foreground",
      "Most Similar TLDR Script": "fg",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_662817: Why can I see the output of background processes?"
      ],
      "Top-3 Scripts": [
        "au_662817: fg <job-number>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_14270: Get exit status of process that's piped to another",
        "so_17359779: Getting screenshot of background windows"
      ],
      "Top-3 Scripts": [
        "ul_14270: $ false | true\n$ echo \"${PIPESTATUS[0]} ${PIPESTATUS[1]}\"\n1 0\n\n$ false | true\n$ echo \"${pipestatus[1]} ${pipestatus[2]}\"\n1 0\n\n$ false | true\n$ retval_bash=\"${PIPESTATUS[0]}\" retval_zsh=\"${pipestatus[1]}\" retval_final=$?\n$ echo $retval_bash $retval_zsh $retval_final\n1 0",
        "so_17359779: window 2 where visible is true"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from `stdin`",
      "Most Similar TLDR Script": "bash -s",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_344360: Collect exit codes of parallel background processes (sub shells)",
        "ul_116098: reliable return code of background process",
        "ul_14270: Get exit status of process that's piped to another"
      ],
      "Top-3 Scripts": [
        "ul_344360: ",
        "ul_116098: bash -c '(exit 12; foo) & pid=$!\n         while : bar & [ \"$pid\" != \"$!\" ]; do :;done\n         wait \"$pid\"; echo \"$?\"'",
        "ul_14270: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "timeout",
      "MP Summary": "run a command with a time limit",
      "Most Similar TLDR Task": "Run `sleep 10` and terminate it, if it runs for more than 3 seconds",
      "Most Similar TLDR Script": "timeout {{3s}} {{sleep 10}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_69152: Exit status of an asynchronous process",
        "so_23614039: How to get the exit code of spawned process in expect shell script?"
      ],
      "Top-3 Scripts": [
        "ul_69152: ",
        "so_23614039: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pidof",
      "MP Summary": "find the process ID of a running program.",
      "Most Similar TLDR Task": "Kill all processes with given name",
      "Most Similar TLDR Script": "kill \"$(pidof {{name}})\"",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_48682: How to poll existence of a background script correctly"
      ],
      "Top-3 Scripts": [
        "ul_48682: pidof -m"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Execute the ls program literally, even if an ls alias exists",
      "Most Similar TLDR Script": "command {{ls}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_344360: Collect exit codes of parallel background processes (sub shells)",
        "ul_424417: How can one extract the exit code of a command?",
        "ul_344247: How do I get the pid of a process run in background?"
      ],
      "Top-3 Scripts": [
        "ul_344360: ",
        "ul_424417: ",
        "ul_344247: ./first-script.sh some command line\n\nthepid=$( <background.pid )\n\nthepid=$( ./first-script.sh some command line )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if file exists",
      "Most Similar TLDR Script": "test -e {{filename}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_344360: Collect exit codes of parallel background processes (sub shells)",
        "so_21793755: Child process cannot read after the exiting of parent process",
        "so_37401358: Bash: Compare exit codes of two functions"
      ],
      "Top-3 Scripts": [
        "ul_344360: ",
        "so_21793755: $ echo test | ./parent ./child",
        "so_37401358: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in seconds",
      "Most Similar TLDR Script": "sleep {{seconds}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_225201: How to suppress exit code of finished background jobs",
        "so_16562316: Why this bash script can't get the pid of the background process by $!",
        "ul_679783: Reliable way to get PID of piped background process"
      ],
      "Top-3 Scripts": [
        "ul_225201: $ sleep 5 &\n[1] 1234\n$ disown",
        "so_16562316: su biergaizi -c 'kill `cat /var/php-nginx/biergaizi.test.php.pid` ; sleep 1'",
        "ul_679783: bash -c '{ sleep 123 | sleep 456; } & jobs -p; sleep 789'\n\nPID PPID CMD\n 268  265  |   \\_ bash -c { sleep 123 | sleep 456; } & sleep 789\n 269  268  |       \\_ bash -c { sleep 123 | sleep 456; } & sleep 789\n 270  269  |       |   \\_ sleep 123\n 271  269  |       |   \\_ sleep 456\n 272  268  |       \\_ sleep 789\n\nPID PPID CMD\n 392  389  |   \\_ bash -c sleep 123 | sleep 456 & jobs -p; sleep 789\n 393  392  |       \\_ sleep 123\n 394  392  |       \\_ sleep 456\n 395  392  |       \\_ sleep 789"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display current user's id (UID), group id (GID) and groups to which they belong",
      "Most Similar TLDR Script": "id",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17359779: Getting screenshot of background windows",
        "so_37799113: Why isn't this code getting the name of the file?"
      ],
      "Top-3 Scripts": [
        "so_17359779: i=1; for l in $(osascript -e 'tell app \"Finder\" to id of windows where visible is true' | tr -d ,); do screencapture -l$l /tmp/$((i++)).png; done",
        "so_37799113: cd /work/folder\nfor f in filtered_*.bam; do\n  [[ -e $f ]] || continue  # skip any file that doesn't exist (ie. glob failed)\n  id=${f#filtered_}                  # strip prefix from filename\n  id=${id%.bam}                      # strip suffix from filename\n  samtools sort -n \"$f\" \"sorted_$id\" # run tool\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strace",
      "MP Summary": "trace system calls and signals",
      "Most Similar TLDR Task": "Count time, calls, and errors for each system call and report a summary on program exit",
      "Most Similar TLDR Script": "strace -p {{pid}} -c",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_592050: Unable to resume execution of a background process"
      ],
      "Top-3 Scripts": [
        "ul_592050: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Run a program. Often used in scripts after the shebang (#!) for looking up the path to the program",
      "Most Similar TLDR Script": "env {{program}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23614039: How to get the exit code of spawned process in expect shell script?"
      ],
      "Top-3 Scripts": [
        "so_23614039: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_458973: How can I get only the ancestry processes of a given process?",
        "so_60589788: Capturing exit code of n child processes",
        "ul_344247: How do I get the pid of a process run in background?"
      ],
      "Top-3 Scripts": [
        "ul_458973: #! /bin/bash -\npid=${1?Please give a pid}\nwhile\n  [ \"$pid\" -gt 0 ] &&\n    read -r ppid name < <(ps -o ppid= -o comm= -p \"$pid\")\ndo\n  printf '%s\\n' \"$pid $name\"\n  pid=$ppid\ndone",
        "so_60589788: for (int i = 0; i < 10; i++)\n{       \n        wait_p = wait(&status);\n        printf(\"Child with PID: %d\", wait_p);\n        if (WIFEXITED(status))\n                printf(\" terminated with STATUS: %d\\n\", WEXITSTATUS(status));\n}",
        "ul_344247: \"$@\" &>/dev/null &\ndisown\n\nprintf '%d\\n' \"$!\" >background.pid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Run commands from file (script)",
      "Most Similar TLDR Script": "zsh {{file}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_14270: Get exit status of process that's piped to another"
      ],
      "Top-3 Scripts": [
        "ul_14270: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nohup",
      "MP Summary": "run a command immune to hangups, with output to a non-tty",
      "Most Similar TLDR Task": "Run process that can live beyond the terminal",
      "Most Similar TLDR Script": "nohup {{command options}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8122780: exiting shell script with background processes"
      ],
      "Top-3 Scripts": [
        "so_8122780: nohup myInScript.sh >some.log 2>&1 </dev/null &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Display a prompt before the input",
      "Most Similar TLDR Script": "read -p \"{{Enter your input here: }}\" {{variable}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_116098: reliable return code of background process",
        "ul_458973: How can I get only the ancestry processes of a given process?",
        "so_9261397: How can I get both the process id and the exit code from a bash script?"
      ],
      "Top-3 Scripts": [
        "ul_116098: ",
        "ul_458973: #! /bin/bash -\npid=${1?Please give a pid}\nwhile\n  [ \"$pid\" -gt 0 ] &&\n    read -r ppid name < <(ps -o ppid= -o comm= -p \"$pid\")\ndo\n  printf '%s\\n' \"$pid $name\"\n  pid=$ppid\ndone",
        "so_9261397: { sh -c \"$executable > $log 2>&1 &\"'\necho $! > pidfile\necho   # Alert parent that the pidfile has been written\nwait $!\necho $? > exit-status\n' & } | read"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_118592: Can a program next in a pipeline see the exit code of the previous program?",
        "ul_458973: How can I get only the ancestry processes of a given process?",
        "ul_302762: Get the exit code of processes forked from the master process"
      ],
      "Top-3 Scripts": [
        "ul_118592: { prog1; echo $?; } | awk '\n    NR != 1 {\n        if (line ~ /[Ee][Rr][Rr][Oo][Rr]/) print \"\\033[31m\" line \"\\033[0m\";\n        else print line;\n    }\n    {line = $0}\n    END {exit($0)}\n'",
        "ul_458973: ",
        "ul_302762: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and change the process name",
      "Most Similar TLDR Script": "exec -a {{process_name}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5793069: How to get the return code of a spawned program",
        "ul_302762: Get the exit code of processes forked from the master process",
        "ul_15387: Why can't I get the exit values of a command in this bash script?"
      ],
      "Top-3 Scripts": [
        "so_5793069: ",
        "ul_302762: ",
        "ul_15387: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session, appending to an existing file",
      "Most Similar TLDR Script": "script -a {{path/to/session.out}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_96209: Get exit code of command executed by the linux script command"
      ],
      "Top-3 Scripts": [
        "ul_96209: $ script -e -c ./HelloWorld.sh; echo $?\nScript started, file is typescript\nHello World\nScript done, file is typescript\n1"
      ],
      "Explanations about Options": {
        "-e": "Return the exit code of the child process. Uses the same format as bash\n termination on signal termination exit code is 128+n. The exit code of the child\n process is always stored in type script file too.",
        "-c": "Run the command rather than an interactive shell. This makes it easy for a script\n to capture the output of a program that behaves differently when its stdout is not\n a tty."
      }
    },
    {
      "Command": "mkfifo",
      "MP Summary": "make FIFO special files",
      "Most Similar TLDR Task": "Create a named pipe at a given path",
      "Most Similar TLDR Script": "mkfifo {{path/to/pipe}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_679783: Reliable way to get PID of piped background process",
        "ul_273337: How to redirect STDIN of background process?"
      ],
      "Top-3 Scripts": [
        "ul_679783: tmp=$(mktemp -d) # Remove this in cleanup code\nmkfifo \"$tmp/pipe\"\ncmd1 >\"$tmp/pipe\" & pid1=$!\ncmd2 <\"$tmp/pipe\" & pid2=$!\n\u2026",
        "ul_273337: #!/bin/bash\nset -e\n\nif [ ! -p in ]; then\n    mkfifo in\nfi\ntail -f in | java -jar app.jar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "notify-send",
      "MP Summary": "a program to send desktop notifications",
      "Most Similar TLDR Task": "Show a notification with an app's icon",
      "Most Similar TLDR Script": "notify-send \"{{Test}}\" --icon={{google-chrome}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_345463: Getting the name of the previous process"
      ],
      "Top-3 Scripts": [
        "su_345463: #!/bin/bash\n(eval \"$@\")\nnotify-send \"$1 finished\" \"Command returned $?.\"\n\nnotifyme() {\n    (eval \"$@\")\n    notify-send \"$1 finished\" \"Command returned $?.\"\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35824333: View exit code of a program (After the program exited)",
        "so_11364758: Check return status of background process",
        "ul_344360: Collect exit codes of parallel background processes (sub shells)"
      ],
      "Top-3 Scripts": [
        "so_35824333: ./myprog 2> out\necho $?",
        "so_11364758: cmd &\npid=$!\ncmd2 &\npid2=$!\nwait $pid || echo cmd failed >&2\nwait $pid2 || echo cmd2 failed >&2",
        "ul_344360: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expect",
      "MP Summary": "programmed dialogue with interactive programs, Version 5",
      "Most Similar TLDR Task": "Enter an interactive REPL (use `exit` or Ctrl + D to exit)",
      "Most Similar TLDR Script": "expect -i",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23614039: How to get the exit code of spawned process in expect shell script?"
      ],
      "Top-3 Scripts": [
        "so_23614039: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from `stdin`",
      "Most Similar TLDR Script": "sh -s",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9261397: How can I get both the process id and the exit code from a bash script?"
      ],
      "Top-3 Scripts": [
        "so_9261397: sh -c \"$executable\"' & echo pid=$! > pidfile; wait $!; echo $? > exit-status' &\n\n{ sh -c \"$executable > $log 2>&1 &\"'\necho $! > pidfile\necho   # Alert parent that the pidfile has been written\nwait $!\necho $? > exit-status\n' & } | read"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "su",
      "MP Summary": "run a command with substitute user and group ID",
      "Most Similar TLDR Task": "Switch to a given user and simulate a full login shell",
      "Most Similar TLDR Script": "su - {{username}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16562316: Why this bash script can't get the pid of the background process by $!"
      ],
      "Top-3 Scripts": [
        "so_16562316: su biergaizi -c 'PHPRC=/home/biergaizi/etc/php5 PHP_FCGI_CHILDREN=2 \n                 /usr/bin/php-loop.pl /usr/bin/php-cgi -b /var/run/virtualhost/php5-fpm-biergaizi.test.sock >>/home/biergaizi/logs/php.log 2>&1 </dev/null & \n                 echo $! > /var/php-nginx/biergaizi.test.php.pid'\n\nsu biergaizi -c 'kill `cat /var/php-nginx/biergaizi.test.php.pid` ; sleep 1'"
      ],
      "Explanations about Options": {
        "-c": "Pass command to the shell with the -c option."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37799113: Why isn't this code getting the name of the file?",
        "ul_96209: Get exit code of command executed by the linux script command"
      ],
      "Top-3 Scripts": [
        "so_37799113: cd /work/folder\nfor f in filtered_*.bam; do\n  [[ -e $f ]] || continue  # skip any file that doesn't exist (ie. glob failed)\n  id=${f#filtered_}                  # strip prefix from filename\n  id=${id%.bam}                      # strip suffix from filename\n  samtools sort -n \"$f\" \"sorted_$id\" # run tool\ndone",
        "ul_96209: $ script -e -c ./HelloWorld.sh; echo $?\nScript started, file is typescript\nHello World\nScript done, file is typescript\n1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_69152: Exit status of an asynchronous process",
        "so_8122780: exiting shell script with background processes",
        "so_45006761: How to get pid of last background process in SSH"
      ],
      "Top-3 Scripts": [
        "ul_69152: (ssh $userAtServer \"ls $targetDir/$targetFile\" > $sshOutputFile ; lsReturnValue=$?) &\n\nssh $userAtServer \"ls $targetDir/$targetFile\" > $sshOutputFile &\n\nlsReturnValue=$(\n  {\n    { ssh $userAtServer \"ls $targetDir/$targetFile\" > $sshOutputFile\n      echo $?; } &\n    { sleep 5; echo timeout; } &\n  } | head -n 1)\nif [ \"$lsReturnValue\" = \"timeout\" ]; then \u2026",
        "so_8122780: ssh localhost parent.sh",
        "so_45006761: ssh -i mycert.pem testuser@myserver.com <<'SSHBLOCK'\npm2 logs --lines 100&\npid=$!\nsleep 3\nkill $pid\nSSHBLOCK"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Call `echo` with the \"foo\" argument",
      "Most Similar TLDR Script": "eval \"{{echo foo}}\"",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_345463: Getting the name of the previous process"
      ],
      "Top-3 Scripts": [
        "su_345463: #!/bin/bash\n(eval \"$@\")\nnotify-send \"$1 finished\" \"Command returned $?.\"\n\nnotifyme() {\n    (eval \"$@\")\n    notify-send \"$1 finished\" \"Command returned $?.\"\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Notify of job termination immediately",
      "Most Similar TLDR Script": "set -b",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55157581: bash - how to process exit code when using set -e and get output of command",
        "ul_267026: exit code of the command **before** last?",
        "ul_302762: Get the exit code of processes forked from the master process"
      ],
      "Top-3 Scripts": [
        "so_55157581: set -e",
        "ul_267026: set -o pipefail",
        "ul_302762: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_698784: exit code of diff",
        "ul_56689: Get PID of a function executed in the background"
      ],
      "Top-3 Scripts": [
        "au_698784: ",
        "ul_56689: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_118592: Can a program next in a pipeline see the exit code of the previous program?",
        "ul_344247: How do I get the pid of a process run in background?"
      ],
      "Top-3 Scripts": [
        "ul_118592: { prog1; echo $?; } | awk '\n    NR != 1 {\n        if (line ~ /[Ee][Rr][Rr][Oo][Rr]/) print \"\\033[31m\" line \"\\033[0m\";\n        else print line;\n    }\n    {line = $0}\n    END {exit($0)}\n'",
        "ul_344247: ./first-script.sh some command line\n\nthepid=$( <background.pid )\n\nthepid=$( ./first-script.sh some command line )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Mark a shell function for export",
      "Most Similar TLDR Script": "export -f {{FUNCTION_NAME}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23614039: How to get the exit code of spawned process in expect shell script?"
      ],
      "Top-3 Scripts": [
        "so_23614039: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print every third line starting from the first line",
      "Most Similar TLDR Script": "awk 'NR%3==1' {{filename}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_118592: Can a program next in a pipeline see the exit code of the previous program?",
        "ul_458973: How can I get only the ancestry processes of a given process?"
      ],
      "Top-3 Scripts": [
        "ul_118592: { prog1; echo $?; } | awk '\n    NR != 1 {\n        if (line ~ /[Ee][Rr][Rr][Oo][Rr]/) print \"\\033[31m\" line \"\\033[0m\";\n        else print line;\n    }\n    {line = $0}\n    END {exit($0)}\n'",
        "ul_458973: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37799113: Why isn't this code getting the name of the file?"
      ],
      "Top-3 Scripts": [
        "so_37799113: cd /work/folder\nfor f in filtered_*.bam; do\n  [[ -e $f ]] || continue  # skip any file that doesn't exist (ie. glob failed)\n  id=${f#filtered_}                  # strip prefix from filename\n  id=${id%.bam}                      # strip suffix from filename\n  samtools sort -n \"$f\" \"sorted_$id\" # run tool\ndone\n\ncd .."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Print the contents of a file to the standard output",
      "Most Similar TLDR Script": "cat {{file}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23614039: How to get the exit code of spawned process in expect shell script?"
      ],
      "Top-3 Scripts": [
        "so_23614039: [Linux Dev:anr ]$ cat tmp_script\n exit 3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Ping host and ring the bell when a packet is received (if your terminal supports it)",
      "Most Similar TLDR Script": "ping -a {{host}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_116098: reliable return code of background process"
      ],
      "Top-3 Scripts": [
        "ul_116098: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Check syntax errors on a Perl script",
      "Most Similar TLDR Script": "perl -c {{script.pl}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_302762: Get the exit code of processes forked from the master process"
      ],
      "Top-3 Scripts": [
        "ul_302762: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_69152: Exit status of an asynchronous process"
      ],
      "Top-3 Scripts": [
        "ul_69152: lsReturnValue=$(\n  {\n    { ssh $userAtServer \"ls $targetDir/$targetFile\" > $sshOutputFile\n      echo $?; } &\n    { sleep 5; echo timeout; } &\n  } | head -n 1)\nif [ \"$lsReturnValue\" = \"timeout\" ]; then \u2026"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`",
      "Most Similar TLDR Script": "tail -f {{file}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_273337: How to redirect STDIN of background process?"
      ],
      "Top-3 Scripts": [
        "ul_273337: #!/bin/bash\nset -e\n\nif [ ! -p in ]; then\n    mkfifo in\nfi\ntail -f in | java -jar app.jar"
      ],
      "Explanations about Options": {
        "-f": "output appended data as the file grows;"
      }
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "View all recorded shutdowns (i.e., the last logins of the pseudo user \"shutdown\")",
      "Most Similar TLDR Script": "last shutdown",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_56689: Get PID of a function executed in the background"
      ],
      "Top-3 Scripts": [
        "ul_56689: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Get lines only found in first file, saving the result to a third file",
      "Most Similar TLDR Script": "comm -23 {{file1}} {{file2}} > {{file1_only}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_458973: How can I get only the ancestry processes of a given process?"
      ],
      "Top-3 Scripts": [
        "ul_458973: #! /bin/bash -\npid=${1?Please give a pid}\nwhile\n  [ \"$pid\" -gt 0 ] &&\n    read -r ppid name < <(ps -o ppid= -o comm= -p \"$pid\")\ndo\n  printf '%s\\n' \"$pid $name\"\n  pid=$ppid\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of `stdin`",
      "Most Similar TLDR Script": "cut -c {{1-16}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37799113: Why isn't this code getting the name of the file?"
      ],
      "Top-3 Scripts": [
        "so_37799113: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "vim",
      "MP Summary": "Vi IMproved, a programmer's text editor",
      "Most Similar TLDR Task": "Quit without saving",
      "Most Similar TLDR Script": ":quit!<Enter>",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_56689: Get PID of a function executed in the background"
      ],
      "Top-3 Scripts": [
        "ul_56689: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of a given path",
      "Most Similar TLDR Script": "dirname {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_344360: Collect exit codes of parallel background processes (sub shells)"
      ],
      "Top-3 Scripts": [
        "ul_344360: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file in descending order",
      "Most Similar TLDR Script": "sort -r {{path/to/file}}",
      "Most Similar NL2Bash Task": "Exits the entire bash script with defined status code N.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "exit N\n",
          "command-options": {
            "exit": {
              "mpsum": "cause the shell to exit"
            }
          },
          "TLDR_inform": {
            "exit": {
              "man1_exit_9278": "exit shell exit shell exit code last command execut exit shell specifi exit code"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37799113: Why isn't this code getting the name of the file?"
      ],
      "Top-3 Scripts": [
        "so_37799113: cd /work/folder\nfor f in filtered_*.bam; do\n  [[ -e $f ]] || continue  # skip any file that doesn't exist (ie. glob failed)\n  id=${f#filtered_}                  # strip prefix from filename\n  id=${id%.bam}                      # strip suffix from filename\n  samtools sort -n \"$f\" \"sorted_$id\" # run tool\ndone"
      ],
      "Explanations about Options": {
        "-n": "compare according to string numerical value"
      }
    }
  ]
}