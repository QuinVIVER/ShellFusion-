{
  "Query": "With the Linux \"cat\" command, how do I show only certain lines by number",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60133962: Adding a number to column [line by line]",
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_58216419: Using cat command start each file with new line"
      ],
      "Top-3 Scripts": [
        "so_60133962: while read -ra a; do [[ ${a[3]} != -0 ]] && ((a[3]+=42)); echo \"${a[@]}\"; done < file",
        "so_27096256: ",
        "so_58216419: for file in F_Worker_TEMP_VO.dat ... F_PERSON_NATIONALIDE_SSN_TEMP_VO.dat; do\n   cat \"${file}\"\n   echo\ndone > Worker.dat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60133962: Adding a number to column [line by line]",
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_34188285: Print only a certain string in a line"
      ],
      "Top-3 Scripts": [
        "so_60133962: while read -ra a; do [[ ${a[3]} != -0 ]] && ((a[3]+=42)); echo \"${a[@]}\"; done < file",
        "so_27096256: $ bash readfn.sh\nEnter file path/name: dat/ecread.dat\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      1\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0",
        "so_34188285: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27191682: sed replace whole line by line number - chaining commands",
        "so_17922285: How to know the number of displayed lines of the \"cat\" command?",
        "su_1266319: select columns on cat command"
      ],
      "Top-3 Scripts": [
        "so_27191682: grep|cut",
        "so_17922285: grep \"anypattern\" anyfile.txt | awk 'END{print NR}1'\n\ncount=$(grep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/dev/stderr\"}1' 3>&1 1>&2 2>&3)\n\ngrep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/tmp/_temp\"}1'\ncount=$(</tmp/_temp)",
        "su_1266319: grep -i client3 | cut -f 3\n\ngrep -i client2 | cut -f 2"
      ],
      "Explanations about Options": {
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Number all output lines",
      "Most Similar TLDR Script": "cat -n {{file}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43827032: Use ls to show only certain number of items",
        "ul_31210: How to cat a file for a certain number of seconds?",
        "so_32205052: bash cat all files that contains a certain string in file name"
      ],
      "Top-3 Scripts": [
        "so_43827032: for f in $(ls *.html | head -n 5) ; do cat $f | myhead ; done",
        "ul_31210: timeout 45 cat yourfile",
        "so_32205052: cat *test*.csv\ncat *result*.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Print the version information of bash (use `echo $BASH_VERSION` to show just the version without license information)",
      "Most Similar TLDR Script": "bash --version",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "su_617050: Find directories containing a certain number of files"
      ],
      "Top-3 Scripts": [
        "so_27096256: $ bash readfn.sh\nEnter file path/name: dat/ecread.dat\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      1\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0",
        "su_617050: find . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n  awk '$NF==10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF>=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF<=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{}\\t'; ls '{}' | wc -l\" \\; | \n awk -F\"\\t\" '$NF<=10{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count lines in file",
      "Most Similar TLDR Script": "wc -l {{file}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27236891: diff command to get number of different lines only",
        "su_617050: Find directories containing a certain number of files",
        "ul_537335: Reading a file with n lines and printing number of completed lines"
      ],
      "Top-3 Scripts": [
        "so_27236891: diff file1 file2 | grep \"^>\" | wc -l",
        "su_617050: find . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n  awk '$NF==10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF>=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF<=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{}\\t'; ls '{}' | wc -l\" \\; | \n awk -F\"\\t\" '$NF<=10{print $1}'",
        "ul_537335: "
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort human-readable numbers (in this case the 5th field of `ls -lh`)",
      "Most Similar TLDR Script": "ls -lh | sort -h -k 5",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_544451: How can i count lines in file",
        "so_34188285: Print only a certain string in a line",
        "so_17793979: unix script sort showing the number of items?"
      ],
      "Top-3 Scripts": [
        "ul_544451: cat access_log | awk '{a[$1]++} END {for(i in a) print a[i],i}' | sort -n | tail -n1",
        "so_34188285: egrep -o 'code\\ [0-9]{1,}' $input_variable | sort -u",
        "so_17793979: sort input | uniq -c\n\nsort -u"
      ],
      "Explanations about Options": {
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run",
        "-n": "compare according to string numerical value"
      }
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100",
        "so_33904373: How to join two lines in one"
      ],
      "Top-3 Scripts": [
        "so_27096256: $line",
        "so_54544355: PS C:\\Temp> <b>cat .\\out.txt | cat</b>\n4   <i># &larr; input line 1 (\"4\"), ReadCount = 1, 1st read (returns \"4\")</i>\n5   <i># &larr; input line 1 (\"4\"), ReadCount = 1, 2nd read (returns \"5\")</i>\n6   <i># &larr; input line 1 (\"4\"), ReadCount = 1, 3rd read (returns \"6\")</i>\n4   <i># &larr; input line 2 (\"5\"), ReadCount = 2, 1st read (returns \"4\", \"5\")</i>\n5\n6   <i># &larr; input line 2 (\"5\"), ReadCount = 2, 2nd read (returns \"6\")</i>\n4   <i># &larr; input line 3 (\"6\"), ReadCount = 3, 1st read (returns \"4\", \"5\", \"6\")</i>\n5\n6",
        "so_33904373: every second line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files one per line",
      "Most Similar TLDR Script": "ls -1",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43827032: Use ls to show only certain number of items",
        "so_51965747: linux cat files excluding the ones beginning with a certain prefix",
        "su_617050: Find directories containing a certain number of files"
      ],
      "Top-3 Scripts": [
        "so_43827032: ls *.html -n 5 > myhead\n\nls *.html | head -n 5\n\nfor f in $(ls *.html | head -n 5) ; do myhead $f ; done\n\nmyhead $(ls *.html | head -n 5)\n\nfor f in $(ls *.html | head -n 5) ; do cat $f | myhead ; done",
        "so_51965747: shopt -s extglob\nls !(legend_*).png",
        "su_617050: find . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n  awk '$NF==10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF>=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF<=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{}\\t'; ls '{}' | wc -l\" \\; | \n awk -F\"\\t\" '$NF<=10{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print every third line starting from the first line",
      "Most Similar TLDR Script": "awk 'NR%3==1' {{filename}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string",
        "so_17922285: How to know the number of displayed lines of the \"cat\" command?",
        "ul_544451: How can i count lines in file"
      ],
      "Top-3 Scripts": [
        "so_31030670: awk '/blah blah/ {exit} \n     /Finished/ {count+=1} \n     {next}\n     END{ print count} ' filename",
        "so_17922285: grep \"anypattern\" anyfile.txt | awk 'END{print NR}1'\n\ncount=$(grep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/dev/stderr\"}1' 3>&1 1>&2 2>&3)\n\ngrep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/tmp/_temp\"}1'\ncount=$(</tmp/_temp)",
        "ul_544451: cat access_log | awk '{a[$1]++} END {for(i in a) print a[i],i}' | sort -n | tail -n1\n\ncat access_log | awk '$1 == \"192.168.1.37\" || $1 == \"192.168.1.110\" {a[$1]++} END {for(i in a) print a[i],i}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Allow file to work with special or device files",
      "Most Similar TLDR Script": "file -s {{filename}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60133962: Adding a number to column [line by line]",
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_30073312: Unix - show some characters in file by line number"
      ],
      "Top-3 Scripts": [
        "so_60133962: while read -ra a; do [[ ${a[3]} != -0 ]] && ((a[3]+=42)); echo \"${a[@]}\"; done < file",
        "so_27096256: $ bash readfn.sh\nEnter file path/name: dat/ecread.dat\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      1\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0",
        "so_30073312: awk 'NR==line_number {print substr($0,start_position,num_of_characters_to_show)}' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27191682: sed replace whole line by line number - chaining commands",
        "su_1266319: select columns on cat command"
      ],
      "Top-3 Scripts": [
        "so_27191682: grep|cut",
        "su_1266319: grep -i client3 | cut -f 3\n\ncut -f\n\ngrep -i client2 | cut -f 2"
      ],
      "Explanations about Options": {
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27191682: sed replace whole line by line number - chaining commands",
        "so_28015540: How to show line with certain number of words with command sed in bash",
        "so_3286084: unix command to read line from a file by passing line number"
      ],
      "Top-3 Scripts": [
        "so_27191682: sed -i '/latitude/s/.*/system.latitude=1.888888/' /tmp/system.cfg",
        "so_28015540: $ sed '/^[^ ]\\+[ ]\\+[^ ]\\+[ ]\\+[^ ]\\+$/!d' file.txt \nHel@@lo hi 123\ntwo three four\n1 2 3333333\n\n$ sed -nr '/^[[:space:]]*[^[:space:]]+[[:space:]]+[^[:space:]]+[[:space:]]+[^[:space:]@]+[[:space:]]*$/p' file.txt\nHel@@lo hi 123\ntwo three four\n1 2 3333333\n\nsed -nE '/^[[:space:]]*[^[:space:]]+[[:space:]]+[^[:space:]]+[[:space:]]+[^[:space:]@]+[[:space:]]*$/p' file.txt",
        "so_3286084: sed -n '52p' (file)"
      ],
      "Explanations about Options": {
        "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' lines in 'file' and refresh every 'n' seconds",
      "Most Similar TLDR Script": "tail -n {{num}} -s {{n}} -f {{file}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_544451: How can i count lines in file",
        "su_564554: How to set max line in cat command"
      ],
      "Top-3 Scripts": [
        "ul_544451: cat access_log | awk '{a[$1]++} END {for(i in a) print a[i],i}' | sort -n | tail -n1",
        "su_564554: tail --lines=100\n\ntail --lines=-100"
      ],
      "Explanations about Options": {
        "--lines": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_33904373: How to join two lines in one"
      ],
      "Top-3 Scripts": [
        "so_27096256: ",
        "so_33904373: awk '/^2015/{printf \"%s%s\",(NR>1?\"\\n\":\"\"),$0}/lol1/{printf \" %s\",$0}' f1 f2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32205052: bash cat all files that contains a certain string in file name",
        "so_22044460: Check number of lines returned by bash command"
      ],
      "Top-3 Scripts": [
        "so_32205052: ",
        "so_22044460: test -z\n\ntest -z \"$LIST\"\n\n[ -z \"$LIST\" ]"
      ],
      "Explanations about Options": {
        "-z": "STRING\n the length of STRING is zero"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given size range",
      "Most Similar TLDR Script": "find {{root_path}} -size {{+500k}} -size {{-10M}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51965747: linux cat files excluding the ones beginning with a certain prefix",
        "su_617050: Find directories containing a certain number of files",
        "ul_292253: How to use \"cat\" command on \"find\" command's output?"
      ],
      "Top-3 Scripts": [
        "so_51965747: find . -name '*.png' ! -name 'legend_*' -exec cat {} \\; | ffmpeg",
        "su_617050: find . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n  awk '$NF==10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF>=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF<=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{}\\t'; ls '{}' | wc -l\" \\; | \n awk -F\"\\t\" '$NF<=10{print $1}'",
        "ul_292253: find /location -size 1033c -exec cat {} +\n\nfind /location -size 1033c -exec cat {} \\;\n\nfind /location -size 1033c -exec cat -n {} +\nfind /location -size 1033c -exec cat -n {} \\;"
      ],
      "Explanations about Options": {
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43827032: Use ls to show only certain number of items",
        "su_564554: How to set max line in cat command"
      ],
      "Top-3 Scripts": [
        "so_43827032: ls *.html | head -n 5\n\nfor f in $(ls *.html | head -n 5) ; do myhead $f ; done\n\nmyhead $(ls *.html | head -n 5)\n\nfor f in $(ls *.html | head -n 5) ; do cat $f | myhead ; done",
        "su_564554: head --lines=100\n\nhead --lines=-100"
      ],
      "Explanations about Options": {
        "--lines": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file",
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display number of occurrences of each line along with that line",
      "Most Similar TLDR Script": "sort {{file}} | uniq -c",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17793979: unix script sort showing the number of items?"
      ],
      "Top-3 Scripts": [
        "so_17793979: sort input | uniq -c"
      ],
      "Explanations about Options": {
        "-c": "prefix lines by the number of occurrences"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string",
        "so_17922285: How to know the number of displayed lines of the \"cat\" command?",
        "ul_544451: How can i count lines in file"
      ],
      "Top-3 Scripts": [
        "so_31030670: awk '/blah blah/ {exit} \n     /Finished/ {count+=1} \n     {next}\n     END{ print count} ' filename",
        "so_17922285: grep \"anypattern\" anyfile.txt | awk 'END{print NR}1'\n\ncount=$(grep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/dev/stderr\"}1' 3>&1 1>&2 2>&3)\n\ngrep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/tmp/_temp\"}1'\ncount=$(</tmp/_temp)",
        "ul_544451: cat access_log | awk '{a[$1]++} END {for(i in a) print a[i],i}' | sort -n | tail -n1\n\ncat access_log | awk '$1 == \"192.168.1.37\" || $1 == \"192.168.1.110\" {a[$1]++} END {for(i in a) print a[i],i}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_876162: Is cat output modified by writing to the file"
      ],
      "Top-3 Scripts": [
        "su_876162: somecommand < infile | tee tempfile; mv tempfile infile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Specify how many of the last logins to show",
      "Most Similar TLDR Script": "last -n {{login_count}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100"
      ],
      "Top-3 Scripts": [
        "so_54544355: PS C:\\Temp> <b>'foo' | cat</b>\n<i>cat : The input object cannot be bound to any parameters for the command either\nbecause the command does not take pipeline input or the input and its properties\ndo not match any of the parameters that take pipeline input.</i>\nAt line:1 char:9\n+ 'foo' | cat\n+         ~~~"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27236891: diff command to get number of different lines only"
      ],
      "Top-3 Scripts": [
        "so_27236891: diff file1 file2\n\ndiff file1 file2 | grep \"^>\"\n\ndiff file1 file2 | grep \"^>\" | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "timeout",
      "MP Summary": "run a command with a time limit",
      "Most Similar TLDR Task": "Run `sleep 10` and terminate it, if it runs for more than 3 seconds",
      "Most Similar TLDR Script": "timeout {{3s}} {{sleep 10}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_31210: How to cat a file for a certain number of seconds?"
      ],
      "Top-3 Scripts": [
        "ul_31210: timeout 45 cat yourfile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print the tree without indentation lines, showing the full path instead (use `-N` to not escape whitespace and special characters)",
      "Most Similar TLDR Script": "tree -i -f",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10118519: How to delete all lines containing more than a certain number of letters?"
      ],
      "Top-3 Scripts": [
        "so_10118519: $ awk 'length<=5' input.txt\nbear\ntree"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tac",
      "MP Summary": "concatenate and print files in reverse",
      "Most Similar TLDR Task": "Print the contents of *file1* reversed to the standard output",
      "Most Similar TLDR Script": "tac {{file1}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_564554: How to set max line in cat command"
      ],
      "Top-3 Scripts": [
        "su_564554: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display the current date as a Unix timestamp (seconds since the Unix epoch)",
      "Most Similar TLDR Script": "date +%s",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_537335: Reading a file with n lines and printing number of completed lines"
      ],
      "Top-3 Scripts": [
        "ul_537335: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a regular expression on `stdin`, printing out the first capture group for each line",
      "Most Similar TLDR Script": "cat {{path/to/input_file}} | perl -nle 'if (/.*({{foo}}).*/) {print \"$1\"; last;}'",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_876162: Is cat output modified by writing to the file"
      ],
      "Top-3 Scripts": [
        "su_876162: perl -i -e 'somecommands' infile ..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "users",
      "MP Summary": "print the user names of users currently logged in to the current host",
      "Most Similar TLDR Task": "Display a list of logged in users according to a specific file",
      "Most Similar TLDR Script": "users {{/var/log/wmtp}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_364903: grep certain number of words after match"
      ],
      "Top-3 Scripts": [
        "ul_364903: $ grep -Eo 'Exchange([[:space:]]+[^[:space:]]+){4}' << EOF\nMeta Stack Exchange is where users like you discuss bugs, features, and \nsupport issues that affect the software powering all 167 Stack Exchange \ncommunities.\nEOF\nExchange is where users like\n\n$ grep -Eo 'Exchange(\\s+\\S+){4}' << EOF\nMeta Stack Exchange is where users like you discuss bugs, features, and \nsupport issues that affect the software powering all 167 Stack Exchange \ncommunities.\nEOF\nExchange is where users like"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_201874: dd shows a random number of records in/out"
      ],
      "Top-3 Scripts": [
        "ul_201874: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Read arguments from `stdin`, run 4 jobs at once",
      "Most Similar TLDR Script": "ls *.txt | parallel -j4 gzip",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53374610: Concatenate specific number of files"
      ],
      "Top-3 Scripts": [
        "so_53374610: parallel -n50 \"cat {} > out{#}\" ::: uv_set_*"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in verbose mode, showing files after they are moved",
      "Most Similar TLDR Script": "mv -v {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_876162: Is cat output modified by writing to the file"
      ],
      "Top-3 Scripts": [
        "su_876162: somecommand < infile | tee tempfile; mv tempfile infile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "compare",
      "MP Summary": "mathematically  and  visually annotate the difference between an image and its reconstruction.",
      "Most Similar TLDR Task": "Compare 2 images using a custom metric",
      "Most Similar TLDR Script": "compare -verbose -metric {{PSNR}} {{image1.png}} {{image2.png}} {{diff.png}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string"
      ],
      "Top-3 Scripts": [
        "so_31030670: -eq to compare strings, use =, example:  [ \"$var\" = \"something\" ]\n$(var1) should be either \"${var1}\" or \"$var1\" lines 4 and 8"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download a file, saving the output under the filename indicated by the URL",
      "Most Similar TLDR Script": "curl -O {{http://example.com/filename}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_537335: Reading a file with n lines and printing number of completed lines"
      ],
      "Top-3 Scripts": [
        "ul_537335: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the man page for a command from section 7",
      "Most Similar TLDR Script": "man {{command}}.{{7}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_66196: How to run grep and show x number of lines before and after the match"
      ],
      "Top-3 Scripts": [
        "ul_66196: man grep"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Convert frames from a video or GIF into individual numbered images",
      "Most Similar TLDR Script": "ffmpeg -i {{video.mpg|video.gif}} {{frame_%d.png}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51965747: linux cat files excluding the ones beginning with a certain prefix"
      ],
      "Top-3 Scripts": [
        "so_51965747: find . -name '*.png' ! -name 'legend_*' -exec cat {} \\; | ffmpeg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xz",
      "MP Summary": "Compress or decompress .xz and .lzma files",
      "Most Similar TLDR Task": "Decompress a file and write to `stdout`",
      "Most Similar TLDR Script": "xz -dc {{file.xz}}",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_201874: dd shows a random number of records in/out"
      ],
      "Top-3 Scripts": [
        "ul_201874: xz -dc goren.img.xz > /dev/storage2/goren"
      ],
      "Explanations about Options": {
        "-d": "Decompress.",
        "-c": "Write the compressed or decompressed data to standard output instead of a file.\n This implies --keep."
      }
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string",
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100"
      ],
      "Top-3 Scripts": [
        "so_31030670: -eq to compare strings, use =, example:  [ \"$var\" = \"something\" ]\n$(var1) should be either \"${var1}\" or \"$var1\" lines 4 and 8",
        "so_27096256: ",
        "so_54544355: PS C:\\Temp> <b>'foo' | cat</b>\n<i>cat : The input object cannot be bound to any parameters for the command either\nbecause the command does not take pipeline input or the input and its properties\ndo not match any of the parameters that take pipeline input.</i>\nAt line:1 char:9\n+ 'foo' | cat\n+         ~~~"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "be",
      "MP Summary": "distributed bug tracking from the command line",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string",
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100"
      ],
      "Top-3 Scripts": [
        "so_31030670: -eq to compare strings, use =, example:  [ \"$var\" = \"something\" ]\n$(var1) should be either \"${var1}\" or \"$var1\" lines 4 and 8",
        "so_54544355: PS C:\\Temp> <b>'foo' | cat</b>\n<i>cat : The input object cannot be bound to any parameters for the command either\nbecause the command does not take pipeline input or the input and its properties\ndo not match any of the parameters that take pipeline input.</i>\nAt line:1 char:9\n+ 'foo' | cat\n+         ~~~"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string",
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100"
      ],
      "Top-3 Scripts": [
        "so_31030670: -eq to compare strings, use =, example:  [ \"$var\" = \"something\" ]\n$(var1) should be either \"${var1}\" or \"$var1\" lines 4 and 8",
        "so_54544355: PS C:\\Temp> <b>'foo' | cat</b>\n<i>cat : The input object cannot be bound to any parameters for the command either\nbecause the command does not take pipeline input or the input and its properties\ndo not match any of the parameters that take pipeline input.</i>\nAt line:1 char:9\n+ 'foo' | cat\n+         ~~~"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31030670: Reading through a text file line by line and checking if that line has a certain string",
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100",
        "ul_364903: grep certain number of words after match"
      ],
      "Top-3 Scripts": [
        "so_31030670: -eq to compare strings, use =, example:  [ \"$var\" = \"something\" ]\n$(var1) should be either \"${var1}\" or \"$var1\" lines 4 and 8",
        "so_54544355: PS C:\\Temp> <b>'foo' | cat</b>\n<i>cat : The input object cannot be bound to any parameters for the command either\nbecause the command does not take pipeline input or the input and its properties\ndo not match any of the parameters that take pipeline input.</i>\nAt line:1 char:9\n+ 'foo' | cat\n+         ~~~",
        "ul_364903: $ grep -Eo 'Exchange([[:space:]]+[^[:space:]]+){4}' << EOF\nMeta Stack Exchange is where users like you discuss bugs, features, and \nsupport issues that affect the software powering all 167 Stack Exchange \ncommunities.\nEOF\nExchange is where users like\n\n$ grep -Eo 'Exchange(\\s+\\S+){4}' << EOF\nMeta Stack Exchange is where users like you discuss bugs, features, and \nsupport issues that affect the software powering all 167 Stack Exchange \ncommunities.\nEOF\nExchange is where users like"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: $ bash readfn.sh\nEnter file path/name: dat/ecread.dat\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      1\nText read from file - read: 4163419415       0      0     4163419415   0   4395.007      0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "save",
      "MP Summary": "save revision of a file",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "field",
      "MP Summary": "plot a field (rheolef-7.1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "restore",
      "MP Summary": "restore files or file systems from backups made with dump",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting"
      ],
      "Top-3 Scripts": [
        "so_27096256: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "input",
      "MP Summary": "Yagi-Uda project antenna defining program",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27096256: Read names line by line and perform a certain function on it in Bash scripting",
        "so_54544355: `cat somefile | cat` in powershell gives 10000 lines instead of 100",
        "so_17793979: unix script sort showing the number of items?"
      ],
      "Top-3 Scripts": [
        "so_27096256: ",
        "so_54544355: PS C:\\Temp> <b>'foo' | cat</b>\n<i>cat : The input object cannot be bound to any parameters for the command either\nbecause the command does not take pipeline input or the input and its properties\ndo not match any of the parameters that take pipeline input.</i>\nAt line:1 char:9\n+ 'foo' | cat\n+         ~~~\n\nPS C:\\Temp> <b>cat .\\out.txt | cat</b>\n4   <i># &larr; input line 1 (\"4\"), ReadCount = 1, 1st read (returns \"4\")</i>\n5   <i># &larr; input line 1 (\"4\"), ReadCount = 1, 2nd read (returns \"5\")</i>\n6   <i># &larr; input line 1 (\"4\"), ReadCount = 1, 3rd read (returns \"6\")</i>\n4   <i># &larr; input line 2 (\"5\"), ReadCount = 2, 1st read (returns \"4\", \"5\")</i>\n5\n6   <i># &larr; input line 2 (\"5\"), ReadCount = 2, 2nd read (returns \"6\")</i>\n4   <i># &larr; input line 3 (\"6\"), ReadCount = 3, 1st read (returns \"4\", \"5\", \"6\")</i>\n5\n6",
        "so_17793979: sort input | uniq -c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print every 4th line from 10 lines of \"y\" with line numbers",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "yes | cat -n | head -10 | awk 'NR % 4 == 1'\n",
          "command-options": {
            "yes": {
              "mpsum": "output a string repeatedly until killed"
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output",
              "-n": "number all output lines"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            }
          },
          "TLDR_inform": {
            "yes": {
              "man1_yes_38186": "output someth repeatedli\ncommand commonli use answer ye everi prompt instal command apt-get accept everyth prompt apt-get command repeatedli output messag repeatedli output"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17922285: How to know the number of displayed lines of the \"cat\" command?",
        "ul_201874: dd shows a random number of records in/out",
        "ul_537335: Reading a file with n lines and printing number of completed lines"
      ],
      "Top-3 Scripts": [
        "so_17922285: count=$(grep \"anypattern\" anyfile.txt | awk 'END{print NR > \"/dev/stderr\"}1' 3>&1 1>&2 2>&3)",
        "ul_201874: xz -dc goren.img.xz > /dev/storage2/goren",
        "ul_537335: "
      ],
      "Explanations about Options": {}
    }
  ]
}