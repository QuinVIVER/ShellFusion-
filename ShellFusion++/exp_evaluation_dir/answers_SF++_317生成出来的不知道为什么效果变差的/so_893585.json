{
  "Query": "How to parse XML in Bash?",
  "Answers": [
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49322847: Parsing a XML file in command line (bash/python ideally)",
        "ul_83385: Parse XML to get node value in bash script?",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_49322847: $ bash get_attr.sh \"Orange\" -c\norange\n$ bash get_attr.sh \"Raisin\" -v\n4\n$ bash get_attr.sh \"Raisin\" -d\nUnsupported attribute prefix. Allowed are: -v -c -i\n$ bash get_attr.sh \"I am a fruit\" -i\n6\n$ bash get_attr.sh \"I am a fruit\" -c\nNo color attribute defined",
        "ul_83385: ",
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_49322847: Parsing a XML file in command line (bash/python ideally)",
        "so_4286469: How to parse a CSV file in Bash?"
      ],
      "Top-3 Scripts": [
        "so_34076263: ",
        "so_49322847: ",
        "so_4286469: while IFS=, read -r col1 col2\ndo\n    echo \"I got:$col1|$col2\"\ndone < myfile.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51970739: How to retrieve an xml attribute in shell script?",
        "so_38757920: Parsing line and changing some text in place",
        "so_16970175: Replacing xml tags in BASH"
      ],
      "Top-3 Scripts": [
        "so_51970739: cat file.xml | tr \"<\" \"\\n\" | grep -E \"^(img|audio)\" | sed -Ee \"s/^.*src=\\\"([^\\\"]+)\\\".*$/\\1/g\"\n\nsed -Ee \"s/^.*src=\\\"([^\\\"]+)\\\".*$/\\1/g\"",
        "so_38757920: sed -E '/Jason|Jim/{:a; /Value=/bb; n; ba; :b; s/(Value=\"X*)[^X\"]/\\1X/; tb; }' file.xml\n\n$ sed -E '/Jason|Jim/{:a; /Value=/bb; n; ba; :b; s/(Value=\"X*)[^X\"]/\\1X/; tb; }' file.xml\n<ExtData>Name=\"Jason\" Value=\"XXXXXXX\"</ExtData>\n<ExtData>Name=\"DummyName\" Value=\"Garbage\"</ExtData>\n<ExtData>Name=\"Jim\"\n    Value=\"XX\"\n        </ExtData>\n\n$ sed -E '/[<]ExtData[>]/{:a; /Name=/{/Name=\"(Jason|Jim)\"/!b}; /Value=/bb; n; ba; :b; s/(Value=\"X*)[^X\"]/\\1X/; tb; }' file2.xml\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n<ExtData>Name=\"Jason\" Value=\"XXXXXXX\"</ExtData>\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n<ExtData>Name=\"DummyName\" Value=\"DontChange\"</ExtData>\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n<ExtData>Name=\"Jim\"\n    Value=\"XX\"\n        </ExtData>\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n\nnames='Jason|Jim'\nsed -E '/[<]ExtData[>]/{:a; /Name=/{/Name=\"'\"$names\"'\"/!b}; /Value=/bb; n; ba; :b; s/(Value=\"X*)[^X\"]/\\1X/; tb; }' file2.xml",
        "so_16970175: sed -e 's/<\\([^>\\/\\ ]*\\)[^>]*>/<field name=\\\"\\1\\\">/g' -e 's/<field name=\\\"\\\">/<\\/field>/g' file\n\nsed -i -e 's/<\\([^>\\/\\ ]*\\)[^>]*>/<field name=\\\"\\1\\\">/g' -e 's/<field name=\\\"\\\">/<\\/field>/g' file"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed",
        "-E": "use extended regular expressions in the script (for portability use POSIX -E).",
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "xmllint",
      "MP Summary": "command line XML tool",
      "Most Similar TLDR Task": "Check that a XML file meets the requirements of its DOCTYPE declaration",
      "Most Similar TLDR Script": "xmllint --valid {{source_file.xml}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16711592: parsing xml file in unix",
        "ul_83385: Parse XML to get node value in bash script?"
      ],
      "Top-3 Scripts": [
        "so_16711592: xmllint --xpath '//Read[@IsIndexedRead = \"Y\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'\n\nxmllint --xpath '//Read[@IsIndexedRead = \"N\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'",
        "ul_83385: xmllint --version  #  xmllint: using libxml version 20703\n\n# Note: Newer versions of libxml / xmllint have a --xpath option which \n# makes it possible to use xpath expressions directly as arguments. \n# --xpath also enables precise output in contrast to the --shell & sed approaches below.\n#xmllint --help 2>&1 | grep -i 'xpath'"
      ],
      "Explanations about Options": {
        "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned.",
        "--version": "Display the version of libxml(3) used."
      }
    },
    {
      "Command": "ed",
      "MP Summary": "line-oriented text editor",
      "Most Similar TLDR Task": "Start ed, editing an empty document, with `:` as a command prompt indicator",
      "Most Similar TLDR Script": "ed -p :",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64343895: Replace value in xml file",
        "so_13369933: Replace dynamic content in XML file",
        "so_16205962: How could I remove xml elements in multiple files?"
      ],
      "Top-3 Scripts": [
        "so_64343895: $ cat MyFile\ntest123\n$ xmlstarlet ed --omit-decl --inplace \\\n                --update '//resources/@password' --value \"$(cat MyFile)\" \\\n                file.xml\n$ cat file.xml\n<resources password=\"test123\"/>",
        "so_13369933: xmlstarlet ed --help",
        "so_16205962: xmlstarlet ed -d '//div[@class=\"hello\"]' <input.xml >output.xml"
      ],
      "Explanations about Options": {
        "--help": "display this help and exit"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83385: Parse XML to get node value in bash script?",
        "so_46565306: Parsing a path in bash",
        "so_18805595: Parsing simple text file and integrate content in bash script"
      ],
      "Top-3 Scripts": [
        "ul_83385: ",
        "so_46565306: cat script.ksh\nvar=$1\nPWD=`pwd`\necho \"$PWD\" | awk -v VAR=\"$var\" -F\"/\" '{for(i=2;i<=(NF-VAR);i++){if($i){printf(\"%s%s\",i==2?\"/\"$i:$i,i==(NF-VAR)?RS:\"/\")}}}'",
        "so_18805595: printf 'curl http://example.com/?vehicle=%s&number=%s&period=%s\\n' $(<file.txt)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51970739: How to retrieve an xml attribute in shell script?",
        "so_345518: parsing a line in bash",
        "so_11821979: Parsing .csv file in bash, not reading final line"
      ],
      "Top-3 Scripts": [
        "so_51970739: cat file.xml | tr \"<\" \"\\n\" | grep -E \"^(img|audio)\" | sed -Ee \"s/^.*src=\\\"([^\\\"]+)\\\".*$/\\1/g\"\n\ntr \"<\" \"\\n\"",
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_11821979: tr \",\" \" \" <test.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_4286469: How to parse a CSV file in Bash?",
        "ul_83385: Parse XML to get node value in bash script?"
      ],
      "Top-3 Scripts": [
        "so_34076263: ",
        "so_4286469: while IFS=, read -r col1 col2\ndo\n    echo \"I got:$col1|$col2\"\ndone < myfile.csv",
        "ul_83385: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_13306457: ",
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51970739: How to retrieve an xml attribute in shell script?",
        "so_64343895: Replace value in xml file",
        "so_38757920: Parsing line and changing some text in place"
      ],
      "Top-3 Scripts": [
        "so_51970739: cat file.xml | tr \"<\" \"\\n\" | grep -E \"^(img|audio)\" | sed -Ee \"s/^.*src=\\\"([^\\\"]+)\\\".*$/\\1/g\"",
        "so_64343895: $ cat file.xml\n<resources password=\"password\"/>\n\n$ cat MyFile\ntest123\n$ xmlstarlet ed --omit-decl --inplace \\\n                --update '//resources/@password' --value \"$(cat MyFile)\" \\\n                file.xml\n$ cat file.xml\n<resources password=\"test123\"/>",
        "so_38757920: $ cat file.xml\n<ExtData>Name=\"Jason\" Value=\"Special\"</ExtData>\n<ExtData>Name=\"DummyName\" Value=\"Garbage\"</ExtData>\n<ExtData>Name=\"Jim\"\n    Value=\"OK\"\n        </ExtData>\n\n$ cat file2.xml\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n<ExtData>Name=\"Jason\" Value=\"Special\"</ExtData>\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n<ExtData>Name=\"DummyName\" Value=\"DontChange\"</ExtData>\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>\n<ExtData>Name=\"Jim\"\n    Value=\"OK\"\n        </ExtData>\n<Misc>Name=\"Jason\" Value=\"DontChange\"</Misc>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command using the current environment variables",
      "Most Similar TLDR Script": "exec {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83385: Parse XML to get node value in bash script?"
      ],
      "Top-3 Scripts": [
        "ul_83385: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_345518: parsing a line in bash",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_34076263: ",
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}'\nyo,el,ella\n\n[user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_46565306: cat script.ksh\nvar=$1\nPWD=`pwd`\necho \"$PWD\" | awk -v VAR=\"$var\" -F\"/\" '{for(i=2;i<=(NF-VAR);i++){if($i){printf(\"%s%s\",i==2?\"/\"$i:$i,i==(NF-VAR)?RS:\"/\")}}}'"
      ],
      "Explanations about Options": {
        "-v": "FS=sepstring"
      }
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Combine multiple filters",
      "Most Similar TLDR Script": "cat {{file.json}} | jq 'unique | sort | reverse'",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_593244: Parsing .json in Bash"
      ],
      "Top-3 Scripts": [
        "ul_593244: jq \".episodes | .[0]\" jsonfile\n{\n  \"title\": \"Hired and Fired by Little Richard and Jimi\u2019s first trip on LSD\",\n  \"url\": \"https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW2392375869.mp3\",\n  \"downloaded\": true,\n  \"listened\": false,\n  \"published\": 1582203660\n}\n\njq \".episodes| .[0].title\" jsonfile\n\"Hired and Fired by Little Richard and Jimi\u2019s first trip on LSD\"\n\njq \".episodes| .[0].published\" jsonfile\n1582203660\n\njq '.episodes | .[] | select(.url==\"https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW2392375869.mp3\").title' jsonfile    \n\"Hired and Fired by Little Richard and Jimi\u2019s first trip on LSD\"    \n\njq '.episodes | .[] | select(.url==\"https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW2392375869.mp3\").published' jsonfile\n1582203660"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_443991: How to parse rss-feeds / xml in a shell script"
      ],
      "Top-3 Scripts": [
        "so_443991: wget -q -O- \"http://www.rss-specifications.com/rss-podcast.xml\" | grep -o '<enclosure url=\"[^\"]*' | grep -o '[^\"]*$' | xargs wget -c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3973827: Sorting xml document in powershell"
      ],
      "Top-3 Scripts": [
        "so_3973827: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49322847: Parsing a XML file in command line (bash/python ideally)"
      ],
      "Top-3 Scripts": [
        "so_49322847: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash",
        "so_62524253: How do I get a specific XML node in Powershell",
        "so_25706468: Query an XML document with multiple identically named elements in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: ",
        "so_62524253: Cannot convert value \"<test></Test>\" to type \"System.Xml.XmlDocument\". Error: \"The 'test'\nstart tag on line 1 position 2 does not match the end tag of 'Test'. Line 1, position 9.\"\nAt line:1 char:1\n+ [xml]\"<test></Test>\"\n+ ~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException\n    + FullyQualifiedErrorId : InvalidCastToXmlDocument",
        "so_25706468: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "With `run-mailcap`",
      "Most Similar TLDR Script": "run-mailcap --action=print {{filename}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python",
        "so_345518: parsing a line in bash",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_13306457: ",
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}'\nyo,el,ella\n\n[user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python",
        "so_62524253: How do I get a specific XML node in Powershell"
      ],
      "Top-3 Scripts": [
        "so_13306457: type = quality_of_service",
        "so_62524253: Cannot convert value \"<test></Test>\" to type \"System.Xml.XmlDocument\". Error: \"The 'test'\nstart tag on line 1 position 2 does not match the end tag of 'Test'. Line 1, position 9.\"\nAt line:1 char:1\n+ [xml]\"<test></Test>\"\n+ ~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException\n    + FullyQualifiedErrorId : InvalidCastToXmlDocument"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16711592: parsing xml file in unix",
        "so_37308642: How to parse html in bash?",
        "so_51970739: How to retrieve an xml attribute in shell script?"
      ],
      "Top-3 Scripts": [
        "so_16711592: xmllint --xpath '//Read[@IsIndexedRead = \"Y\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'\n\nxmllint --xpath '//Read[@IsIndexedRead = \"N\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'",
        "so_37308642: ",
        "so_51970739: cat file.xml | tr \"<\" \"\\n\" | grep -E \"^(img|audio)\" | sed -Ee \"s/^.*src=\\\"([^\\\"]+)\\\".*$/\\1/g\"\n\ngrep -E \"^(img|audio)\""
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
      }
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print the tree ignoring the given directories",
      "Most Similar TLDR Script": "tree -I '{{directory_name1|directory_name2}}'",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python"
      ],
      "Top-3 Scripts": [
        "so_13306457: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83385: Parse XML to get node value in bash script?"
      ],
      "Top-3 Scripts": [
        "ul_83385: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python"
      ],
      "Top-3 Scripts": [
        "so_13306457: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Merge two files, with lines added alternatively",
      "Most Similar TLDR Script": "paste -d '\\n' {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_21859383: Bash parse data from xml"
      ],
      "Top-3 Scripts": [
        "so_21859383: sed -n '\n  /<connection-pool /   {s///; s/\\/\\?>$//; s/ \\(initial-limit\\|num-cached-statements\\)=\"[^\"]*\"//g; p} \n  /<connection-factory/ {s///; s/\\/\\?>$//; s/ \\(factory-class\\|user\\|password\\|commit-record-table-name\\)=\"[^\"]*\"//g; p}\n' connections.log | paste -d \"\" - -"
      ],
      "Explanations about Options": {
        "-d": "reuse characters from LIST instead of TABs"
      }
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58294585: How can I compare two XML objects in Powershell"
      ],
      "Top-3 Scripts": [
        "so_58294585: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16970175: Replacing xml tags in BASH",
        "so_12520203: parsing file in bash"
      ],
      "Top-3 Scripts": [
        "so_16970175: sed -e 's/<\\([^>\\/\\ ]*\\)[^>]*>/<field name=\\\"\\1\\\">/g' -e 's/<field name=\\\"\\\">/<\\/field>/g' file\n\nsed -i -e 's/<\\([^>\\/\\ ]*\\)[^>]*>/<field name=\\\"\\1\\\">/g' -e 's/<field name=\\\"\\\">/<\\/field>/g' file",
        "so_12520203: #!/usr/bin/env bash\nwhile read -r\ndo [[ $REPLY =~ ^(Version|[[:digit:]]) ]] && echo \"$REPLY\"\ndone < file\n\n$ grep \"^\\(Version\\|[[:digit:]]\\)\" file\n10.113.193.70\nVersion: 47.80.99.08\n\n$ awk '$1 ~ /^(Version|[0-9])/ { print }' file\n10.113.193.70\nVersion: 47.80.99.08\n\n$ sed -n '/^\\(Version\\|[[:digit:]]\\)/p' file\n10.113.193.70\nVersion: 47.80.99.08"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "If there are multiple executables which match, display all",
      "Most Similar TLDR Script": "which -a {{executable}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
      "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH"
      ],
      "Top-3 Scripts": [
        "so_34076263: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16205962: How could I remove xml elements in multiple files?"
      ],
      "Top-3 Scripts": [
        "so_16205962: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Use a specific Makefile",
      "Most Similar TLDR Script": "make --file {{file}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "indent",
      "MP Summary": "changes the appearance of a C program by inserting or deleting whitespace.",
      "Most Similar TLDR Task": "Format C/C++ source according to the Linux style guide, automatically back up the original files, and replace with the indented versions",
      "Most Similar TLDR Script": "indent --linux-style {{path/to/source.c}} {{path/to/another_source.c}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27969885: Merge entries in XML"
      ],
      "Top-3 Scripts": [
        "so_27969885: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Create an image with nothing but a solid background",
      "Most Similar TLDR Script": "convert -size {{800x600}} \"xc:{{#ff0000}}\" {{image.png}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62524253: How do I get a specific XML node in Powershell"
      ],
      "Top-3 Scripts": [
        "so_62524253: Cannot convert value \"<test></Test>\" to type \"System.Xml.XmlDocument\". Error: \"The 'test'\nstart tag on line 1 position 2 does not match the end tag of 'Test'. Line 1, position 9.\"\nAt line:1 char:1\n+ [xml]\"<test></Test>\"\n+ ~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : InvalidArgument: (:) [], RuntimeException\n    + FullyQualifiedErrorId : InvalidCastToXmlDocument"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pwd",
      "MP Summary": "print name of current/working directory",
      "Most Similar TLDR Task": "Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path)",
      "Most Similar TLDR Script": "pwd -P",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "edit",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "With `run-mailcap`",
      "Most Similar TLDR Script": "run-mailcap --action=edit {{filename}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13369933: Replace dynamic content in XML file"
      ],
      "Top-3 Scripts": [
        "so_13369933: xmlstarlet edit -L -u \"/scs-shop/price[@type='double']\" -v '99.66' file.xml"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH"
      ],
      "Top-3 Scripts": [
        "so_34076263: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fd",
      "MP Summary": "find entries in the filesystem",
      "Most Similar TLDR Task": "Find files with a specific extension",
      "Most Similar TLDR Script": "fd --extension {{txt}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83385: Parse XML to get node value in bash script?"
      ],
      "Top-3 Scripts": [
        "ul_83385: /dev/fd/3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: /singh/is/king/test_1/test/test2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH"
      ],
      "Top-3 Scripts": [
        "so_34076263: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session to a file named `typescript` in the current directory",
      "Most Similar TLDR Script": "script",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83385: Parse XML to get node value in bash script?"
      ],
      "Top-3 Scripts": [
        "ul_83385: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1560393: How to parse a CSV in a Bash script?"
      ],
      "Top-3 Scripts": [
        "so_1560393: grep \"${VALUE}\" inputfile.csv | cut -d, -f\"${INDEX}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "named",
      "MP Summary": "Internet domain name server",
      "Most Similar TLDR Task": "Read the default configuration file `/etc/named.conf`, read any initial data and listen for queries",
      "Most Similar TLDR Script": "named",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "info",
      "MP Summary": "read Info documents",
      "Most Similar TLDR Task": "Start reading at given menu item node from top-level directory",
      "Most Similar TLDR Script": "info {{menu_item}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python"
      ],
      "Top-3 Scripts": [
        "so_13306457: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58294585: How can I compare two XML objects in Powershell"
      ],
      "Top-3 Scripts": [
        "so_58294585: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Specify how many of the last logins to show",
      "Most Similar TLDR Script": "last -n {{login_count}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11821979: Parsing .csv file in bash, not reading final line"
      ],
      "Top-3 Scripts": [
        "so_11821979: #!/bin/bash\n(cat test.csv ; echo) | while IFS=',' read -r last first\ndo\n    echo \"$last $first\"\ndone\n\n!/bin/bash\n(cat test.csv ; echo) | while IFS=',' read -r last first\ndo\n    if [[ $last != \"\" ]] ; then\n        echo \"$last $first\"\n    fi\ndone\n\n#!/bin/bash\nwhile IFS=',' read -r last first\ndo\n    echo \"$last $first\"\ndone <test.csv\nif [[ $last != \"\" ]] ; then\n    echo \"$last $first\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5358304: Replacing XML nodes in PowerShell"
      ],
      "Top-3 Scripts": [
        "so_5358304: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current user identity as a number",
      "Most Similar TLDR Script": "id -u",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38471280: Parsing XML in Powershell",
        "so_49322847: Parsing a XML file in command line (bash/python ideally)",
        "so_5358304: Replacing XML nodes in PowerShell"
      ],
      "Top-3 Scripts": [
        "so_38471280: $ids = $myxml.SelectNodes('//res[@id = \"1057002654\"]/resver[@id]') |Select -Expand id",
        "so_49322847: ",
        "so_5358304: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "light",
      "MP Summary": "a program to control backlight controllers",
      "Most Similar TLDR Task": "Reduce 20 percent from the current backlight value",
      "Most Similar TLDR Script": "light -U {{20}}",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37758828: How does bash parse quotes in this example?"
      ],
      "Top-3 Scripts": [
        "so_37758828: light blue\" dark green\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "Parse XML file \"example.xml\" and extract and number all \"key\" tags from the \"config\" section",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "xmllint example.xml --xpath \"/config/*/@*\" | sed \"s| key|\\nkey|g\" | nl\n",
          "command-options": {
            "xmllint": {
              "mpsum": "command line XML tool",
              "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
            },
            "config": {
              "mpsum": "build system configuration files"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text"
            },
            "nl": {
              "mpsum": "number lines of files"
            }
          },
          "TLDR_inform": {
            "xmllint": {
              "man1_xmllint_37775": "xml parser linter support xpath syntax navig xml tree check xml file meet requir doctyp declar return node tag name foo return human-read indent xml file return content first node name foo string return href attribut second anchor element html file valid xml dtd schema host onlin"
            },
            "config": {
              "man1_config_2046": "",
              "man8_config_1737": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "nl": {
              "man1_nl_22541": "util number line either file standard input number line includ blank line number non-blank line file number bodi line match basic regular express bre pattern number line printabl text read standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58294585: How can I compare two XML objects in Powershell"
      ],
      "Top-3 Scripts": [
        "so_58294585: "
      ],
      "Explanations about Options": {}
    }
  ]
}