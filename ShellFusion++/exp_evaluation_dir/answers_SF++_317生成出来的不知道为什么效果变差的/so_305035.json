{
  "Query": "How to use SSH to run a shell script on a remote machine?",
  "Answers": [
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_91747: ssh_config: specify command to be executed on the remote machine upon login",
        "so_68063160: shell script to run commands over SSH on multiple remote servers",
        "su_1292246: Run a remote script on a local file via SSH"
      ],
      "Top-3 Scripts": [
        "ul_91747: martin@martin ~ % ssh dev2 \"echo hello; ps aux|grep echo\"\n\nhello\nroot     25358  0.0  0.0   5848  1296 ?        Ss   11:27   0:00 bash -c echo hello; ps aux|grep echo\nroot     25362  0.0  0.0   5012   828 ?        S    11:27   0:00 grep echo",
        "so_68063160: ",
        "su_1292246: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31218577: Running part of bash script on a remote machine",
        "ul_345832: How can I start a remote process on a remote machine via ssh?",
        "so_58744639: Run a command on remote machine and store its output in variable on remote machine"
      ],
      "Top-3 Scripts": [
        "so_31218577: ",
        "ul_345832: ssh user@example.com 'nohup sleep 300 >/dev/null 2>/dev/null </dev/null &'\n\nssh user@example.com -t 'screen -D -RR -S this /bin/sleep 300'",
        "so_58744639: ssh user@servername <<EOF\n    echo \"$(hostname)\"\nEOF\n\nssh user@servername <<\"EOF\"\n    echo \"$(hostname)\"\nEOF"
      ],
      "Explanations about Options": {
        "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty.",
        "-S": "Specifies the location of a control socket for connection sharing, or the string\n \u201cnone\u201d to disable connection sharing. Refer to the description of ControlPath and\n ControlMaster in ssh_config(5) for details."
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_274876: How to run a command on remote host from a service?",
        "ul_673638: Run a Local Shell Script on a Remote SSH Server, but the script requires env variables from another local file",
        "au_754786: How to run a command on remote host from a service?"
      ],
      "Top-3 Scripts": [
        "ul_274876: sudo -iu user ssh user@172.21.6.70 \"nohup bash -c 'source ~/.envrc ; (cd /catalog; ./bin/catalog start &)'\"",
        "ul_673638: ",
        "au_754786: sudo -iu user ssh user@172.21.6.70 \"nohup bash -c 'source ~/.envrc ; (cd /catalog; ./bin/catalog start &)'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31218577: Running part of bash script on a remote machine",
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_31218577: ",
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nohup",
      "MP Summary": "run a command immune to hangups, with output to a non-tty",
      "Most Similar TLDR Task": "Run process that can live beyond the terminal",
      "Most Similar TLDR Script": "nohup {{command options}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_345832: How can I start a remote process on a remote machine via ssh?",
        "ul_274876: How to run a command on remote host from a service?",
        "au_754786: How to run a command on remote host from a service?"
      ],
      "Top-3 Scripts": [
        "ul_345832: ",
        "ul_274876: ",
        "au_754786: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Run on multiple machines via SSH",
      "Most Similar TLDR Script": "parallel -S {{machine1}},{{machine2}} {{command}} ::: {{arg1}} {{arg2}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20135054: How do I run many SSH remote commands, on multiple machines, in batch?",
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_20135054: parallel --gnu --bg --jobs 50 \\\nssh -o BatchMode=yes \\\n    -o StrictHostKeyChecking=no \\\n    -o ConnectTimeout=10 \\\n    -l ${USERNAME} \\\n    {} \\\n    \"${COMMAND} -i {} || echo timeout\" \\\n::: ${IP}\n\nparallel <command> ::: <arguments>\n\nparallel --jobs n",
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously",
        "so_38391335: Remove directory in a remote machine using shell script"
      ],
      "Top-3 Scripts": [
        "so_60065192: ",
        "so_38391335: ssh root@server-address \"rm -rf testdir\" #suggest you quote the command"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sshpass",
      "MP Summary": "noninteractive ssh password provider",
      "Most Similar TLDR Task": "Connect to a remote server using the first line of a file as the password, automatically accept unknown ssh keys, and launch a command",
      "Most Similar TLDR Script": "sshpass -f {{file}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}} \"{{command}}\"",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_485667: Running script on multiple ubuntu computers automatically"
      ],
      "Top-3 Scripts": [
        "su_485667: #!/bin/bash\nmyscript=`cat /dev/stdin`\necho \"$myscript; exit;\" | sshpass -p $3 ssh -o StrictHostKeyChecking=no $2@$1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Detach from inside a screen",
      "Most Similar TLDR Script": "Ctrl + A, D",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_345832: How can I start a remote process on a remote machine via ssh?",
        "so_17177745: Leaving a Command Running on a Remote Server"
      ],
      "Top-3 Scripts": [
        "ul_345832: ",
        "so_17177745: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously",
        "ul_673638: Run a Local Shell Script on a Remote SSH Server, but the script requires env variables from another local file",
        "so_38061662: Executing a local script on a remote Machine"
      ],
      "Top-3 Scripts": [
        "so_60065192: ",
        "ul_673638: set -u\n\nset -e",
        "so_38061662: set -- arg1 arg2 arg3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61623166: Running several scripts in parallel bash scripts on remote machines",
        "su_1292246: Run a remote script on a local file via SSH",
        "ul_120699: Running Commands on Remote Linux Server Using SSH"
      ],
      "Top-3 Scripts": [
        "so_61623166: #!/usr/bin/env bash\nssh $server_a  /tmp/activate_nodes.bash      2>&1 | tee ${server_a}_$$.log &\nssh $server_b  /tmp/activate_services.bash   2>&1 | tee ${server_b}_$$.log &\nssh $server_c  /tmp/activate_components.bash 2>&1 | tee ${server_c}_$$.log &\nssh $server_d  /tmp/activate_nfs.bash        2>&1 | tee ${server_d}_$$.log &\nwait",
        "su_1292246: < \"/local_path/to/input_file\" ssh user@remote 'the_tool -some_option1 -option2' | tee \"/local_path/to/output_file\"",
        "ul_120699: ssh <user>@<remote_host> COMMAND | tee FILE"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31218577: Running part of bash script on a remote machine",
        "so_58744639: Run a command on remote machine and store its output in variable on remote machine",
        "ul_91747: ssh_config: specify command to be executed on the remote machine upon login"
      ],
      "Top-3 Scripts": [
        "so_31218577: ",
        "so_58744639: ssh user@servername <<EOF\n    echo \"$(hostname)\"\nEOF\n\necho localhostname\n\nssh user@servername <<\"EOF\"\n    echo \"$(hostname)\"\nEOF",
        "ul_91747: martin@martin ~ % ssh dev2 \"echo hello; ps aux|grep echo\"\n\nhello\nroot     25358  0.0  0.0   5848  1296 ?        Ss   11:27   0:00 bash -c echo hello; ps aux|grep echo\nroot     25362  0.0  0.0   5012   828 ?        S    11:27   0:00 grep echo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mutt",
      "MP Summary": "The Mutt Mail User Agent",
      "Most Similar TLDR Task": "Specify a file to include as the message body",
      "Most Similar TLDR Script": "mutt -i {{file}} {{recipient@example.com}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68063160: shell script to run commands over SSH on multiple remote servers"
      ],
      "Top-3 Scripts": [
        "so_68063160: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Remove variable from the environment and run a program",
      "Most Similar TLDR Script": "env -u {{variable}} {{program}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_673638: Run a Local Shell Script on a Remote SSH Server, but the script requires env variables from another local file"
      ],
      "Top-3 Scripts": [
        "ul_673638: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_673638: Run a Local Shell Script on a Remote SSH Server, but the script requires env variables from another local file"
      ],
      "Top-3 Scripts": [
        "ul_673638: ssh root@remotehost \"env $( jq -r 'to_entries | map(\"\\(.key)=\\(.value)\") | @sh' /home/project/env.json ) sh -s\" <dokku.sh\n\nsh -s"
      ],
      "Explanations about Options": {
        "-s": "If used when the shell is invoked, commands are read from standard input. Set\n automatically if the shell is invoked with no arguments."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_365146: Running Commands on a Remote Linux",
        "so_28670127: Executing command remotely on another linux server from a shell script"
      ],
      "Top-3 Scripts": [
        "ul_365146: ssh root@192.168.137.137 -t uptime 2>/dev/null | awk '{ print $8 }'",
        "so_28670127: #!/bin/sh\ntime1=$1\ntime2=$2\nssh -i key  user@ip -yes cat file | awk '{if(substr($4,2)>=\"'$time1'\" && substr($4,2)<=\"'$time2'\") print $0;}' > tmp.log\n\nsome operation to get detail <tmp.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously",
        "so_28670127: Executing command remotely on another linux server from a shell script"
      ],
      "Top-3 Scripts": [
        "so_60065192: ",
        "so_28670127: #!/bin/sh\ntime1=$1\ntime2=$2\nssh -i key  user@ip -yes cat file | awk '{if(substr($4,2)>=\"'$time1'\" && substr($4,2)<=\"'$time2'\") print $0;}' > tmp.log\n\nsome operation to get detail <tmp.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68063160: shell script to run commands over SSH on multiple remote servers",
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_68063160: ",
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_91747: ssh_config: specify command to be executed on the remote machine upon login",
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "ul_91747: martin@martin ~ % ssh dev2 \"echo hello; ps aux|grep echo\"\n\nhello\nroot     25358  0.0  0.0   5848  1296 ?        Ss   11:27   0:00 bash -c echo hello; ps aux|grep echo\nroot     25362  0.0  0.0   5012   828 ?        S    11:27   0:00 grep echo",
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mssh",
      "MP Summary": "tool to administrate multiple servers at once",
      "Most Similar TLDR Task": "Open a new window and connect to multiple SSH servers",
      "Most Similar TLDR Script": "mssh {{user@host1}} {{user@host2}} {{...}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_60065192: chmod u+x mssh\n\n./mssh -s SERVER1 -s SERVER2 -C script.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1292246: Run a remote script on a local file via SSH",
        "su_485667: Running script on multiple ubuntu computers automatically",
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "su_1292246: ",
        "su_485667: cat script-to-run.sh | script-above.sh SERVER USERNAME PASSWORD",
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "iperf",
      "MP Summary": "perform network throughput tests",
      "Most Similar TLDR Task": "Run on client every 2 seconds",
      "Most Similar TLDR Script": "iperf -c {{server_address}} -i {{2}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48461300: Keep process running on remote machine after exiting ssh session inside bash script"
      ],
      "Top-3 Scripts": [
        "so_48461300: ssh -T root@10.101.10.35 << EOF\niperf -s -B 192.168.99.1 < /dev/null > /tmp/iperf_combined_1.log 2>&1 &\niperf -s -B random_ip2 < /dev/null > /tmp/iperf_combined_2.log 2>&1 &\nEOF"
      ],
      "Explanations about Options": {
        "-B": "bind src ip addr and optional port as the source of traffic (see notes)",
        "-s": "run in server mode"
      }
    },
    {
      "Command": "expect",
      "MP Summary": "programmed dialogue with interactive programs, Version 5",
      "Most Similar TLDR Task": "Execute a specified expect script",
      "Most Similar TLDR Script": "expect -c \"{{commands}}\"",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_4878898: Problems with terminating connection after running scripts on remote computer using shell script"
      ],
      "Top-3 Scripts": [
        "so_4878898: expect -c 'spawn ssh   $UN@$STAGE\n            expect password\n            send \"$PASS\\r\"\n            expect -regexp \"$PROMPT\"\n            send \"./settings.$UN.sh > settings_log.txt\\r\"\n            expect -regexp \"$PROMPT\"\n            send \"exit\\r\"\n            expect eof'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31218577: Running part of bash script on a remote machine",
        "so_6700890: Alternative ways to issue multiple commands on a remote machine using SSH?",
        "ul_274876: How to run a command on remote host from a service?"
      ],
      "Top-3 Scripts": [
        "so_31218577: ",
        "so_6700890: ssh user@host.com << EOF\ncd some/dir/on/remote/machine\ntar -xzf my_tarball.tgz\ncd some/other/dir/on/remote\ncp -R some_directory somewhere_else\nEOF",
        "ul_274876: sudo -iu user ssh user@172.21.6.70 \"nohup bash -c 'source ~/.envrc ; (cd /catalog; ./bin/catalog start &)'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Repeatedly output \"message\"",
      "Most Similar TLDR Script": "yes {{message}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20135054: How do I run many SSH remote commands, on multiple machines, in batch?"
      ],
      "Top-3 Scripts": [
        "so_20135054: parallel --gnu --bg --jobs 50 \\\nssh -o BatchMode=yes \\\n    -o StrictHostKeyChecking=no \\\n    -o ConnectTimeout=10 \\\n    -l ${USERNAME} \\\n    {} \\\n    \"${COMMAND} -i {} || echo timeout\" \\\n::: ${IP}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute the commands and email the result using a local mailing program such as sendmail",
      "Most Similar TLDR Script": "at {{hh:mm}} -m",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_390706: how to run script on remote machine with delay"
      ],
      "Top-3 Scripts": [
        "ul_390706: ssh root@IP 'echo /tmp/script | at now + 5 minutes'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1613852: How do I run a sudo command on a remote machine using ssh?"
      ],
      "Top-3 Scripts": [
        "su_1613852: which pm2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Use a specific Makefile",
      "Most Similar TLDR Script": "make --file {{file}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_237392: Shell script being executed on remote machine exits after running make command"
      ],
      "Top-3 Scripts": [
        "ul_237392: ( make -j8 && make install ) </dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for all processes known to the invoking shell to finish",
      "Most Similar TLDR Script": "wait",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61623166: Running several scripts in parallel bash scripts on remote machines"
      ],
      "Top-3 Scripts": [
        "so_61623166: #!/usr/bin/env bash\nssh $server_a  /tmp/activate_nodes.bash      2>&1 | tee ${server_a}_$$.log &\nssh $server_b  /tmp/activate_services.bash   2>&1 | tee ${server_b}_$$.log &\nssh $server_c  /tmp/activate_components.bash 2>&1 | tee ${server_c}_$$.log &\nssh $server_d  /tmp/activate_nfs.bash        2>&1 | tee ${server_d}_$$.log &\nwait"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6700890: Alternative ways to issue multiple commands on a remote machine using SSH?"
      ],
      "Top-3 Scripts": [
        "so_6700890: ssh user@host.com << EOF\ncd some/dir/on/remote/machine\ntar -xzf my_tarball.tgz\ncd some/other/dir/on/remote\ncp -R some_directory somewhere_else\nEOF"
      ],
      "Explanations about Options": {
        "-R": "copy directories recursively"
      }
    },
    {
      "Command": "trap",
      "MP Summary": "trap signals",
      "Most Similar TLDR Task": "Remove active traps",
      "Most Similar TLDR Script": "trap - {{SIGHUP}} {{SIGINT}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session to a file named `typescript` in the current directory",
      "Most Similar TLDR Script": "script",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_390706: how to run script on remote machine with delay"
      ],
      "Top-3 Scripts": [
        "ul_390706: ssh root@IP 'echo /tmp/script | at now + 5 minutes'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53609650: bash run multiple commands on remote hosts via ssh"
      ],
      "Top-3 Scripts": [
        "so_53609650: for host in $HOSTS; do\n   RESULT+=$(ssh -T $host <<EOF   \n   H=\\$(dirname \\$HOME)\n   M=\\$(mount | grep \\$H | grep nfs)\n   [[ \"\\$M\" ]] && MYFILE=$WD/file1 ||  MYFILE=$WD/file2\n   cd $WD && monit.sh \\$MYFILE\nEOF\n   )\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_237392: Shell script being executed on remote machine exits after running make command"
      ],
      "Top-3 Scripts": [
        "ul_237392: ( make -j8 && make install ) </dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68063160: shell script to run commands over SSH on multiple remote servers"
      ],
      "Top-3 Scripts": [
        "so_68063160: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53058136: How to run sed on remote server using ssh inside a shell script(variables included)"
      ],
      "Top-3 Scripts": [
        "so_53058136: sed -e 's/Red Hat/'${z}'/' /etc/redhat-release\n\nsed -e 's/Red Hat/'\"${z}\"'/' /etc/redhat-release"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed"
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53609650: bash run multiple commands on remote hosts via ssh",
        "ul_402468: ssh: execute command on the remote host instead of a login shell"
      ],
      "Top-3 Scripts": [
        "so_53609650: for host in $HOSTS; do\n   RESULT+=$(ssh -T $host <<EOF   \n   H=\\$(dirname \\$HOME)\n   M=\\$(mount | grep \\$H | grep nfs)\n   [[ \"\\$M\" ]] && MYFILE=$WD/file1 ||  MYFILE=$WD/file2\n   cd $WD && monit.sh \\$MYFILE\nEOF\n   )\ndone",
        "ul_402468: ssh host \"print \\$HOST\"\n\nssh host 'print $HOST'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tmux",
      "MP Summary": "terminal multiplexer",
      "Most Similar TLDR Task": "Kill a session by name",
      "Most Similar TLDR Script": "tmux kill-session -t {{name}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17177745: Leaving a Command Running on a Remote Server"
      ],
      "Top-3 Scripts": [
        "so_17177745: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_60065192: chmod u+x mssh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60065192: How to run remote script on multiple host simultaneously"
      ],
      "Top-3 Scripts": [
        "so_60065192: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create a compressed archive, using archive suffix to determine the compression program",
      "Most Similar TLDR Script": "tar caf {{target.tar.xz}} {{file1}} {{file2}} {{file3}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6700890: Alternative ways to issue multiple commands on a remote machine using SSH?"
      ],
      "Top-3 Scripts": [
        "so_6700890: ssh user@host.com << EOF\ncd some/dir/on/remote/machine\ntar -xzf my_tarball.tgz\ncd some/other/dir/on/remote\ncp -R some_directory somewhere_else\nEOF"
      ],
      "Explanations about Options": {
        "-z": "Filter the archive through gzip(1).",
        "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted."
      }
    },
    {
      "Command": "uptime",
      "MP Summary": "Tell how long the system has been running.",
      "Most Similar TLDR Task": "Print current time, uptime, number of logged-in users and other information",
      "Most Similar TLDR Script": "uptime",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_365146: Running Commands on a Remote Linux"
      ],
      "Top-3 Scripts": [
        "ul_365146: ssh root@192.168.137.137 -t uptime 2>/dev/null | awk '{ print $8 }'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount a directory to another directory",
      "Most Similar TLDR Script": "mount --bind {{path/to/old_dir}} {{path/to/new_dir}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53609650: bash run multiple commands on remote hosts via ssh"
      ],
      "Top-3 Scripts": [
        "so_53609650: for host in $HOSTS; do\n   RESULT+=$(ssh -T $host <<EOF   \n   H=\\$(dirname \\$HOME)\n   M=\\$(mount | grep \\$H | grep nfs)\n   [[ \"\\$M\" ]] && MYFILE=$WD/file1 ||  MYFILE=$WD/file2\n   cd $WD && monit.sh \\$MYFILE\nEOF\n   )\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Combine multiple filters",
      "Most Similar TLDR Script": "cat {{file.json}} | jq 'unique | sort | reverse'",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_673638: Run a Local Shell Script on a Remote SSH Server, but the script requires env variables from another local file"
      ],
      "Top-3 Scripts": [
        "ul_673638: ssh root@remotehost \"env $( jq -r 'to_entries | map(\"\\(.key)=\\(.value)\") | @sh' /home/project/env.json ) sh -s\" <dokku.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hello",
      "MP Summary": "friendly greeting program",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "hello --greeting=\"{{greeting_text}}\"",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_91747: ssh_config: specify command to be executed on the remote machine upon login"
      ],
      "Top-3 Scripts": [
        "ul_91747: martin@martin ~ % ssh dev2 \"echo hello; ps aux|grep echo\"\n\nhello\nroot     25358  0.0  0.0   5848  1296 ?        Ss   11:27   0:00 bash -c echo hello; ps aux|grep echo\nroot     25362  0.0  0.0   5012   828 ?        S    11:27   0:00 grep echo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "visudo",
      "MP Summary": "edit the sudoers file",
      "Most Similar TLDR Task": "Edit sudoers file",
      "Most Similar TLDR Script": "sudo visudo",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1613852: How do I run a sudo command on a remote machine using ssh?"
      ],
      "Top-3 Scripts": [
        "su_1613852: sudo visudo\n\nman visudo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current user identity as a number",
      "Most Similar TLDR Script": "id -u",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_548201: Running a timesten query on a remote server inside a shell script"
      ],
      "Top-3 Scripts": [
        "ul_548201: #!/bin/bash\ncmd=$1\nssh dba@rhost << EOF\nttIsql \"dsn=rhostdsn\";\nselect * from table1 where id='${cmd}';\nEOF"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Store a formatted message in a variable (does not work on zsh)",
      "Most Similar TLDR Script": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}",
      "Most Similar NL2Bash Task": "SSH into me@machine, run \"./executeMyScript\", and spawn a bash shell",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ssh -t me@machine ./executeMyScript '&&' bash -i\n",
          "command-options": {
            "ssh": {
              "mpsum": "OpenSSH SSH client (remote login program)",
              "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
            },
            "bash": {
              "mpsum": "GNU Bourne-Again SHell"
            }
          },
          "TLDR_inform": {
            "ssh": {
              "man1_ssh_32381": "secur shell protocol use secur log onto remot system\nuse log execut command remot server agent forward : forward authent inform remot machin see man ssh_config avail option connect remot server connect remot server use specif port connect remot server specif ident privat key run command remot server ssh jump : connect jumphost remot server multipl jump hop may specifi separ comma charact ssh tunnel : dynam port forward sock proxi localhost:9999 ssh tunnel : forward specif port localhost:9999 exampl org:80 along disabl pseudo- ty alloc executio n remot command"
            },
            "bash": {
              "man1_bash_2190": "bourne-again shell\nsh -compat command line interpret execut command print version inform bash use echo bash_vers show version without licens inform run command stdin run command file run command file log command execut termin run command file stop first error start interact shell"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69502479: bash: ssh : run command on remote machine with expanding variables"
      ],
      "Top-3 Scripts": [
        "so_69502479: printf '%q '\n\nact_url=\"https://someurl\"\nprintf -v rmt_cmd '%q ' somecommand \"$act_url\"\nurl=$(ssh user@xx.xx.xx.xx \"$rmt_cmd\")\necho \"$url\""
      ],
      "Explanations about Options": {}
    }
  ]
}