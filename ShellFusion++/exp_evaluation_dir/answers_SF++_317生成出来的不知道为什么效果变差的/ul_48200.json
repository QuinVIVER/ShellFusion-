{
  "Query": "Recovered deleted files on Mac by command line",
  "Answers": [
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_452283: Mac terminal: How to print a history command on the command prompt without executing it?",
        "so_20359670: Bash: delete chars in a file, only on the first line"
      ],
      "Top-3 Scripts": [
        "ul_452283: ",
        "so_20359670: #\n# Create binary with 15 bytes of bash, then \"Return-Path\", then entire bash in file \"bashed\"\n(dd if=/bin/bash bs=1 count=15 2>/dev/null; echo -n 'Return-Path'; cat /bin/bash) > bashed\n#\n# Chop off junk at start of \"bashed\" and save in \"restored\"\n./behead.sh bashed restored\n#\n# Check the restored \"bash\" is exactly 11 bytes longer than original, \n# as it has \"Return-Path\" at the beginning\nls -l bashed restored"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1205081: Can't run some commands after recovering from file system failure on fedora",
        "so_951347: Comparing files on the unix command line",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "su_1205081: echo $PATH",
        "so_951347: wormhole:tmp admp$ echo -n \"fooa\" > one # -n to supress newline\nwormhole:tmp admp$ echo -n \"foobc\" > two\nwormhole:tmp admp$ SIZE=`stat -c %s one`\nwormhole:tmp admp$ echo $SIZE\n4\nwormhole:tmp admp$ (cmp -s -n $SIZE one two && echo \"equal\") || echo \"not equal\"\nnot equal\nwormhole:tmp admp$ echo -n \"fooac\" > two # first 4 bytes are equal now\nwormhole:tmp admp$ (cmp -s -n $SIZE one two && echo \"equal\") || echo \"not equal\"\nequal",
        "ul_120287: "
      ],
      "Explanations about Options": {
        "-n": "do not output the trailing newline"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33728181: how to delete a file recursively from folders on mac / unix",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder",
        "tldr_1349: Run a bash command on file creation, update or deletion"
      ],
      "Top-3 Scripts": [
        "so_33728181: find parent_dir -name .DS_Store -print0 | xargs -0 rm -f",
        "ul_120287: ",
        "tldr_1349: fswatch {{path/to/file}} | xargs -n 1 {{bash_command}}"
      ],
      "Explanations about Options": {
        "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_452283: Mac terminal: How to print a history command on the command prompt without executing it?",
        "so_47260371: Linux command to split each lines in a file based on a character and write only the specified columns to another file",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "ul_452283: $ cat ~/.bash_profile\n[[ -f ~/.bashrc ]] && source ~/.bashrc\n\n$ cat ~/.bashrc\n...\nshopt -s histverify\n...",
        "so_47260371: cat file.txt | perl -ne 'chomp(@cols = split(\"/\", $_)); print \"@cols[1, 3]\\n\";' > output",
        "ul_120287: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29482817: Unix script to delete the first line of a file on a Mac",
        "so_19038311: Delete lines in a file containing argument passed on command line",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "so_29482817: sed -i .bak -e 2d file.csv\n\nsed -i.bak -e 2d file.csv\n\nsed 2d file.csv > file.csv.bak &&\nmv file.csv.bak file.csv            # Oops; there went the links\n\nsed 2d file.csv > file.csv.bak &&\ncp file.csv.bak file.csv\nrm -f file.csv.bak",
        "so_19038311: sed '/$myvar/d' data.txt\n\nsed \"/$myvar/d\" data.txt",
        "ul_120287: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46917400: powershell delete everything before : after start of a line, on each line",
        "so_45320371: Delete multi-line pattern starting on first line of file only",
        "so_16206507: head command to skip last few lines of file on MAC OSX"
      ],
      "Top-3 Scripts": [
        "so_46917400: foreach($line in Get-Content .\\file.txt) {\n    if($line -match \":\"){\n        $line = $line.split(\":\")[1]\n    }\n\n    write-output $line\n}",
        "so_45320371: sed -e\n    '/<%/           # When we match the start pattern, '<%', execute the following command block\n    {\n        1!b;        # If we're not on the first line when we match the start pattern, exit\n        :x;         # Define label 'x'\n        $!N;        # If not at the end of file, capture the current line\n        /%>/!bx;    # If we're not at the end pattern, '%>', go to label 'x'\n        s/<%.*%>//  # After reaching the end pattern, replace all matching text in the captured lines with nothing\n    }'\n    -i \"file\"",
        "so_16206507: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19659839: how to script folder deletion on MAC",
        "au_1291991: delete files on ubuntu",
        "su_205441: How to retrieve file from Virtual Machine on Mac?"
      ],
      "Top-3 Scripts": [
        "so_19659839: sudo ./deletion.sh",
        "au_1291991: sudo nautilus",
        "su_205441: sudo mount -t vboxsf tmp /media/host/tmp"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33728181: how to delete a file recursively from folders on mac / unix",
        "su_829102: Delete a file inside multiple ZIP archives on the OS X command line",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "so_33728181: find parent_dir -name .DS_Store -delete\n\nfind parent_dir -name .DS_Store -print0 | xargs -0 rm -f\n\nfind parent_dir -name .DS_Store -exec rm -f +",
        "su_829102: find /path/to/files -type f -name '*.zip' -exec zip -d {} '*.html' \\;",
        "ul_120287: "
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1422382: How to search for a pattern inside a file and delete the lines in Unix on the command line?",
        "so_47260371: Linux command to split each lines in a file based on a character and write only the specified columns to another file",
        "so_34337567: Deleting lines in a text file based on column length - Linux"
      ],
      "Top-3 Scripts": [
        "so_1422382: ",
        "so_47260371: cat file.txt | perl -ne 'chomp(@cols = split(\"/\", $_)); print \"@cols[1, 3]\\n\";' > output",
        "so_34337567: /[0-9A-Za-z]+\\s+[0-9]+\\s+[0-9A-Za-z*]{60,}+\\s+[0-9]+/ { print($0); }\n\n/./ { if (length($3) >= 60) print($0); }"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29482817: Unix script to delete the first line of a file on a Mac",
        "so_33728181: how to delete a file recursively from folders on mac / unix",
        "so_19659839: how to script folder deletion on MAC"
      ],
      "Top-3 Scripts": [
        "so_29482817: sed 2d file.csv > file.csv.bak &&\nmv file.csv.bak file.csv            # Oops; there went the links\n\nsed 2d file.csv > file.csv.bak &&\ncp file.csv.bak file.csv\nrm -f file.csv.bak",
        "so_33728181: find parent_dir -name .DS_Store -print0 | xargs -0 rm -f\n\nfind parent_dir -name .DS_Store -exec rm -f +",
        "so_19659839: "
      ],
      "Explanations about Options": {
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1422382: How to search for a pattern inside a file and delete the lines in Unix on the command line?",
        "so_38714635: Shell command to delete \\n on 1 out of 2 line on a file",
        "so_67161552: Replacing new lines with comma, but I need file on a line"
      ],
      "Top-3 Scripts": [
        "so_1422382: awk -f logstrip.awk  in.log > out.log",
        "so_38714635: $ awk '{printf \"%s%s\",$0,(NR%2==0?ORS:\"\")}' File\n1.32640997;;P\n1.14517534;;P\n1.16120958;;P",
        "so_67161552: awk '\n     { printf \"%s%s\", pfx, $0        # print prefix and current line; prefix initially = \"\"\n       pfx=\", \"                      # set prefix to \", \" for subsequent lines\n     }\nEND  { printf \"\\m\" }                 # add a linefeed at the end\n' display.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29482817: Unix script to delete the first line of a file on a Mac",
        "so_50082049: Batch renaming files on command line"
      ],
      "Top-3 Scripts": [
        "so_29482817: sed 2d file.csv > file.csv.bak &&\nmv file.csv.bak file.csv            # Oops; there went the links\n\nsed 2d file.csv > file.csv.bak &&\ncp file.csv.bak file.csv\nrm -f file.csv.bak",
        "so_50082049: for file in *.faa; do mv \"$file\" \"${file#*_}\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1063124: Cannot execute Binary file on Mac OS",
        "so_50191398: How to insert text before the first line of a file on Mac OS",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "su_1063124: file bin/tnt",
        "so_50191398: #!/usr/bin/env bash\n\nshopt -s nullglob\nfor file in *.txt*; do \n    ex -sc '1i|blablabla' -cx \"$file\"\ndone\n\nfor file in myFolder/*.txt*; do",
        "ul_120287: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29482817: Unix script to delete the first line of a file on a Mac",
        "su_988797: How to copy file to /usr/share on mac?"
      ],
      "Top-3 Scripts": [
        "so_29482817: sed 2d file.csv > file.csv.bak &&\nmv file.csv.bak file.csv            # Oops; there went the links\n\nsed 2d file.csv > file.csv.bak &&\ncp file.csv.bak file.csv\nrm -f file.csv.bak",
        "su_988797: mkdir -p ~/.vim/colors\ncp ~/Downloads/kellys.vim ~/.vim/colors/\n\ncp ~/Downloads/kellys.vim /usr/local/share/vim/vim73/colors/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder",
        "so_68004940: delete lines based on one file contain to another"
      ],
      "Top-3 Scripts": [
        "ul_120287: ",
        "so_68004940: $ head file?\n==> file1 <==\n20606516000100070004\n20630555000100030001\n20636222000800050001\n\n==> file2 <==\n20606516000100070004XXXXXXX19.202107.04.202105.03.202101.11.202001.11.2020WWREABBXBOU\n99906516000100070004XXXXXXX19.202107.04.202105.03.202101.11.202001.11.2020WWREABBXBOU"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19659839: how to script folder deletion on MAC",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder",
        "so_20359670: Bash: delete chars in a file, only on the first line"
      ],
      "Top-3 Scripts": [
        "so_19659839: chmod +x deletion.sh",
        "ul_120287: ",
        "so_20359670: chmod +x behead.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "alias",
      "MP Summary": "define or display aliases",
      "Most Similar TLDR Task": "Remove an aliased command",
      "Most Similar TLDR Script": "unalias {{word}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_28425: How can I install the `ll` command on Mac OS X?",
        "su_38984: Linux equivalent command for \"open\" command on Mac/Windows?"
      ],
      "Top-3 Scripts": [
        "ul_28425: alias ll='ls -lG'\n\nalias ll='ls -l --color=auto'",
        "su_38984: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination",
      "Most Similar TLDR Script": "install {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1457295: How can I run terminal commands on my Ubuntu host from host Mac?",
        "au_601457: Is it possible to recover a permemnantly deleted file on EXT partition?"
      ],
      "Top-3 Scripts": [
        "su_1457295: sudo apt install openssh-server",
        "au_601457: sudo add-apt-repository ppa:teejee2008/ppa\nsudo apt-get update\nsudo apt-get install timeshift"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Remove a package and its configuration files",
      "Most Similar TLDR Script": "apt-get purge {{package}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_601457: Is it possible to recover a permemnantly deleted file on EXT partition?"
      ],
      "Top-3 Scripts": [
        "au_601457: sudo add-apt-repository ppa:teejee2008/ppa\nsudo apt-get update\nsudo apt-get install timeshift"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder",
        "so_20359670: Bash: delete chars in a file, only on the first line",
        "so_45320371: Delete multi-line pattern starting on first line of file only"
      ],
      "Top-3 Scripts": [
        "ul_120287: ",
        "so_20359670: ",
        "so_45320371: sed -e\n    '/<%/           # When we match the start pattern, '<%', execute the following command block\n    {\n        1!b;        # If we're not on the first line when we match the start pattern, exit\n        :x;         # Define label 'x'\n        $!N;        # If not at the end of file, capture the current line\n        /%>/!bx;    # If we're not at the end pattern, '%>', go to label 'x'\n        s/<%.*%>//  # After reaching the end pattern, replace all matching text in the captured lines with nothing\n    }'\n    -i \"file\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1205081: Can't run some commands after recovering from file system failure on fedora",
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder",
        "so_60573022: Unable to delete apostrophe using SED command on text file"
      ],
      "Top-3 Scripts": [
        "su_1205081: env | grep -E \"^PATH=\"",
        "ul_120287: ",
        "so_60573022: grep -Po '([0-9]+\\.[0-9]+,? ?)+' input_file > ~/Desktop/testgcloud/results.txt"
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features."
      }
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1422382: How to search for a pattern inside a file and delete the lines in Unix on the command line?",
        "so_67161552: Replacing new lines with comma, but I need file on a line",
        "so_45320371: Delete multi-line pattern starting on first line of file only"
      ],
      "Top-3 Scripts": [
        "so_1422382: ",
        "so_67161552: awk '\n     { printf \"%s%s\", pfx, $0        # print prefix and current line; prefix initially = \"\"\n       pfx=\", \"                      # set prefix to \", \" for subsequent lines\n     }\nEND  { printf \"\\m\" }                 # add a linefeed at the end\n' display.txt",
        "so_45320371: sed -e\n    '/<%/           # When we match the start pattern, '<%', execute the following command block\n    {\n        1!b;        # If we're not on the first line when we match the start pattern, exit\n        :x;         # Define label 'x'\n        $!N;        # If not at the end of file, capture the current line\n        /%>/!bx;    # If we're not at the end pattern, '%>', go to label 'x'\n        s/<%.*%>//  # After reaching the end pattern, replace all matching text in the captured lines with nothing\n    }'\n    -i \"file\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Delete files from an existing zip file",
      "Most Similar TLDR Script": "zip -d {{compressed.zip}} \"{{foo/*.tmp}}\"",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_829102: Delete a file inside multiple ZIP archives on the OS X command line"
      ],
      "Top-3 Scripts": [
        "su_829102: for f in *.zip; do zip -d \"$f\" '*.html'; done\n\nfor f (*.zip) zip -d \"$f\" '*.html'\n\nfind /path/to/files -type f -name '*.zip' -exec zip -d {} '*.html' \\;"
      ],
      "Explanations about Options": {
        "-d": "Remove (delete) entries from a zip archive. For example:"
      }
    },
    {
      "Command": "add-apt-repository",
      "MP Summary": "Adds   a   repository   into   the   /etc/apt/sources.list   or /etc/apt/sources.list.d or removes an existing one",
      "Most Similar TLDR Task": "Update the package cache after adding a repository",
      "Most Similar TLDR Script": "add-apt-repository --update {{repository_spec}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_601457: Is it possible to recover a permemnantly deleted file on EXT partition?"
      ],
      "Top-3 Scripts": [
        "au_601457: sudo add-apt-repository ppa:teejee2008/ppa\nsudo apt-get update\nsudo apt-get install timeshift"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Force making of a target, even if source files are unchanged",
      "Most Similar TLDR Script": "make --always-make {{target}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1063124: Cannot execute Binary file on Mac OS"
      ],
      "Top-3 Scripts": [
        "su_1063124: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "timeshift",
      "MP Summary": "a system restore utility",
      "Most Similar TLDR Task": "Delete a specific snapshot",
      "Most Similar TLDR Script": "sudo timeshift --delete --snapshot '{{snapshot}}'",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_601457: Is it possible to recover a permemnantly deleted file on EXT partition?"
      ],
      "Top-3 Scripts": [
        "au_601457: sudo add-apt-repository ppa:teejee2008/ppa\nsudo apt-get update\nsudo apt-get install timeshift"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_988797: How to copy file to /usr/share on mac?",
        "su_205441: How to retrieve file from Virtual Machine on Mac?"
      ],
      "Top-3 Scripts": [
        "su_988797: mkdir -p ~/.vim/colors\ncp ~/Downloads/kellys.vim ~/.vim/colors/",
        "su_205441: mkdir -p /media/host/tmp"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47260371: Linux command to split each lines in a file based on a character and write only the specified columns to another file",
        "so_46917400: powershell delete everything before : after start of a line, on each line"
      ],
      "Top-3 Scripts": [
        "so_47260371: cat file.txt | perl -ne 'chomp(@cols = split(\"/\", $_)); print \"@cols[1, 3]\\n\";' > output",
        "so_46917400: split()"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "ul_120287: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create an archive from files",
      "Most Similar TLDR Script": "tar cf {{target.tar}} {{file1}} {{file2}} {{file3}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_120287: How to recover from recursive 'chmod -x' on my home folder"
      ],
      "Top-3 Scripts": [
        "ul_120287: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "go",
      "MP Summary": "tool for managing Go source code",
      "Most Similar TLDR Task": "Compile a source file into a named executable",
      "Most Similar TLDR Script": "go build -o {{executable}} {{file}}.go",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45320371: Delete multi-line pattern starting on first line of file only"
      ],
      "Top-3 Scripts": [
        "so_45320371: sed -e\n    '/<%/           # When we match the start pattern, '<%', execute the following command block\n    {\n        1!b;        # If we're not on the first line when we match the start pattern, exit\n        :x;         # Define label 'x'\n        $!N;        # If not at the end of file, capture the current line\n        /%>/!bx;    # If we're not at the end pattern, '%>', go to label 'x'\n        s/<%.*%>//  # After reaching the end pattern, replace all matching text in the captured lines with nothing\n    }'\n    -i \"file\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl script",
      "Most Similar TLDR Script": "perl {{script.pl}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47260371: Linux command to split each lines in a file based on a character and write only the specified columns to another file"
      ],
      "Top-3 Scripts": [
        "so_47260371: cat file.txt | perl -ne 'chomp(@cols = split(\"/\", $_)); print \"@cols[1, 3]\\n\";' > output"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session to a file named `typescript` in the current directory",
      "Most Similar TLDR Script": "script",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3492050: Calling python script on MAC/Linux from Command line - passing arguments"
      ],
      "Top-3 Scripts": [
        "so_3492050: chmod +x /path/to/your/script /path/to/lib/foo.py"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45320371: Delete multi-line pattern starting on first line of file only"
      ],
      "Top-3 Scripts": [
        "so_45320371: sed -e\n    '/<%/           # When we match the start pattern, '<%', execute the following command block\n    {\n        1!b;        # If we're not on the first line when we match the start pattern, exit\n        :x;         # Define label 'x'\n        $!N;        # If not at the end of file, capture the current line\n        /%>/!bx;    # If we're not at the end pattern, '%>', go to label 'x'\n        s/<%.*%>//  # After reaching the end pattern, replace all matching text in the captured lines with nothing\n    }'\n    -i \"file\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "List the name and status of all services",
      "Most Similar TLDR Script": "service --status-all",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1457295: How can I run terminal commands on my Ubuntu host from host Mac?"
      ],
      "Top-3 Scripts": [
        "su_1457295: sudo service ssh start"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1457295: How can I run terminal commands on my Ubuntu host from host Mac?"
      ],
      "Top-3 Scripts": [
        "su_1457295: sudo service ssh start\n\nssh <insert name or IP here>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38714635: Shell command to delete \\n on 1 out of 2 line on a file",
        "so_67161552: Replacing new lines with comma, but I need file on a line"
      ],
      "Top-3 Scripts": [
        "so_38714635: $ awk '{printf \"%s%s\",$0,(NR%2==0?ORS:\"\")}' File\n1.32640997;;P\n1.14517534;;P\n1.16120958;;P",
        "so_67161552: awk '\n     { printf \"%s%s\", pfx, $0        # print prefix and current line; prefix initially = \"\"\n       pfx=\", \"                      # set prefix to \", \" for subsequent lines\n     }\nEND  { printf \"\\m\" }                 # add a linefeed at the end\n' display.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20359670: Bash: delete chars in a file, only on the first line"
      ],
      "Top-3 Scripts": [
        "so_20359670: #\n# Create binary with 15 bytes of bash, then \"Return-Path\", then entire bash in file \"bashed\"\n(dd if=/bin/bash bs=1 count=15 2>/dev/null; echo -n 'Return-Path'; cat /bin/bash) > bashed\n#\n# Chop off junk at start of \"bashed\" and save in \"restored\"\n./behead.sh bashed restored\n#\n# Check the restored \"bash\" is exactly 11 bytes longer than original, \n# as it has \"Return-Path\" at the beginning\nls -l bashed restored"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Remove variable from the environment and run a program",
      "Most Similar TLDR Script": "env -u {{variable}} {{program}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1205081: Can't run some commands after recovering from file system failure on fedora"
      ],
      "Top-3 Scripts": [
        "su_1205081: env | grep -E \"^PATH=\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "vim",
      "MP Summary": "Vi IMproved, a programmer's text editor",
      "Most Similar TLDR Task": "Open a file at a specified line number",
      "Most Similar TLDR Script": "vim +{{line_number}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_988797: How to copy file to /usr/share on mac?"
      ],
      "Top-3 Scripts": [
        "su_988797: cp ~/Downloads/kellys.vim /usr/local/share/vim/vim73/colors/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "users",
      "MP Summary": "print the user names of users currently logged in to the current host",
      "Most Similar TLDR Task": "Display a list of logged in users according to a specific file",
      "Most Similar TLDR Script": "users {{/var/log/wmtp}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57436884: How to create a bash script to delete accounts on mac"
      ],
      "Top-3 Scripts": [
        "so_57436884: #!/bin/bash\nfor d in /users/*/;\ndo\n    if [ \"$d\" != \"/users/exclusionprofile1/\" ] && [ \"$d\" != \"/users/exclusionprofile2/\" ]; then\n           echo \"$d\"\n           sudo rm -rf \"$d\"\n    fi\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Remove an environment variable",
      "Most Similar TLDR Script": "export -n {{VARIABLE}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1223488: middleware for every user defined alias/bash function used on command line; Mac/Ubuntu"
      ],
      "Top-3 Scripts": [
        "su_1223488: export PROMPT_COMMAND=\"echo This is displayed before your prompt\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cmp",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Find the byte number and differing bytes of every difference",
      "Most Similar TLDR Script": "cmp -l {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_951347: Comparing files on the unix command line"
      ],
      "Top-3 Scripts": [
        "so_951347: SIZE=`stat -c %s filea`\ncmp -s -n $SIZE filea fileb # -s for silence\n\nwormhole:tmp admp$ echo -n \"fooa\" > one # -n to supress newline\nwormhole:tmp admp$ echo -n \"foobc\" > two\nwormhole:tmp admp$ SIZE=`stat -c %s one`\nwormhole:tmp admp$ echo $SIZE\n4\nwormhole:tmp admp$ (cmp -s -n $SIZE one two && echo \"equal\") || echo \"not equal\"\nnot equal\nwormhole:tmp admp$ echo -n \"fooac\" > two # first 4 bytes are equal now\nwormhole:tmp admp$ (cmp -s -n $SIZE one two && echo \"equal\") || echo \"not equal\"\nequal"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Notify of job termination immediately",
      "Most Similar TLDR Script": "set -b",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67161552: Replacing new lines with comma, but I need file on a line"
      ],
      "Top-3 Scripts": [
        "so_67161552: awk '\n     { printf \"%s%s\", pfx, $0        # print prefix and current line; prefix initially = \"\"\n       pfx=\", \"                      # set prefix to \", \" for subsequent lines\n     }\nEND  { printf \"\\m\" }                 # add a linefeed at the end\n' display.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount a directory to another directory",
      "Most Similar TLDR Script": "mount --bind {{path/to/old_dir}} {{path/to/new_dir}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_205441: How to retrieve file from Virtual Machine on Mac?"
      ],
      "Top-3 Scripts": [
        "su_205441: mount -t vboxsf $SHARENAME $MOUNTPOINT\n\nsudo mount -t vboxsf tmp /media/host/tmp"
      ],
      "Explanations about Options": {
        "-t": "The argument following the -t is used to indicate the filesystem type. The\n filesystem types which are currently supported depend on the running kernel. See\n /proc/filesystems and /lib/modules/$(uname -r)/kernel/fs for a complete list of the\n filesystems. The most common are ext2, ext3, ext4, xfs, btrfs, vfat, sysfs, proc,\n nfs and cifs."
      }
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_205441: How to retrieve file from Virtual Machine on Mac?"
      ],
      "Top-3 Scripts": [
        "su_205441: sudo mount -t vboxsf tmp /media/host/tmp\n\nmkdir -p /media/host/tmp"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt",
      "MP Summary": "command-line interface",
      "Most Similar TLDR Task": "Remove a package (using `purge` instead also removes its configuration files)",
      "Most Similar TLDR Script": "sudo apt remove {{package}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1457295: How can I run terminal commands on my Ubuntu host from host Mac?"
      ],
      "Top-3 Scripts": [
        "su_1457295: sudo apt install openssh-server"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1063124: Cannot execute Binary file on Mac OS"
      ],
      "Top-3 Scripts": [
        "su_1063124: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20359670: Bash: delete chars in a file, only on the first line"
      ],
      "Top-3 Scripts": [
        "so_20359670: #\n# Create binary with 15 bytes of bash, then \"Return-Path\", then entire bash in file \"bashed\"\n(dd if=/bin/bash bs=1 count=15 2>/dev/null; echo -n 'Return-Path'; cat /bin/bash) > bashed\n#\n# Chop off junk at start of \"bashed\" and save in \"restored\"\n./behead.sh bashed restored\n#\n# Check the restored \"bash\" is exactly 11 bytes longer than original, \n# as it has \"Return-Path\" at the beginning\nls -l bashed restored"
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "Find all php files in current directory and delete lines matching the regex '<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>' in those files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . \\( -name \"*.php\" \\) -exec grep -Hn \"<\\?php /\\*\\*/eval(base64_decode(.*));.*\\?>\" {} \\; -exec sed -i '/<\\?php \\/\\*\\*\\/eval(base64_decode(.*));.*\\?>/d' {} \\;\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-n": "Prefix each line of output with the 1-based line number within its input file.",
              "-H": "Print the file name for each match. This is the default when there is more than\n one file to search."
            },
            "eval": {
              "mpsum": "construct command by concatenating arguments"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-i": "edit files in place (makes backup if SUFFIX supplied)"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "eval": {
              "man1_eval_9187": "execut argument singl command current shell return result call echo foo argument set variabl current shell"
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_50191398: How to insert text before the first line of a file on Mac OS"
      ],
      "Top-3 Scripts": [
        "so_50191398: cd myFolder/"
      ],
      "Explanations about Options": {}
    }
  ]
}