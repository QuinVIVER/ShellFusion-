{
  "Query": "Extract data from log file in specified range of time",
  "Answers": [
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18664086: extract data from log file in specified range of time with awk getline bash",
        "so_36996709: How to get time range in a log file in linux?",
        "ul_283545: extract time range from log file using AWK"
      ],
      "Top-3 Scripts": [
        "so_18664086: ",
        "so_36996709: #To get the current date and hour\n\n\n\n  hour=$( date +'%F|%H')\n\n\n#Filter the logs \n\ngrep $hour log",
        "ul_283545: stime=12\netime=13\ndate=2014-11-24\n\nawk -v a=\"$stime\" -v b=\"$etime\" -v d=\"$date\" -F \"[: ]+\" '\n  { \n  if ( $1 == d && $2+0 >= a && $2+0 < b )\n      print $1,$2,$3\n  }'  logfile.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40341551: batch extracting data from files, naming new files according to string in input file",
        "so_67789552: put date & time in each line using data in the file",
        "so_44917274: Comparing specific column from a file to another file with specified number of times"
      ],
      "Top-3 Scripts": [
        "so_40341551: ",
        "so_67789552: cat input.txt | while read line; do dateField=$(echo $line | cut -d '|' -f 1); fields=$(echo $line | cut -d '|' -f 2-);  echo -n `date -d \"$dateField\" +'%Y-%m-%d'`' '; echo  $fields; done",
        "so_44917274: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
      "Most Similar TLDR Script": "file {{filename}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5468871: Create variable from string/nameonly parameter to extract data in bash?",
        "au_907997: Extract time between events from log file in Bash",
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_5468871: LOGFILE=/root/log.txt\n\nsave()\n{\n    echo \"$1 : ${!1}\" >> ${LOGFILE}\n}\n\nTEST=/file/path\n\nsave TEST",
        "au_907997: $ sed -nr '/0000/N;N; s/.*GPGGA,([^,]+).*/\\1/p' file | sed -n '1p;$p'\n161212.2\n161213.8",
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37854159: Get data from Data reader terminal to a GUI in real time",
        "so_37300645: Extract data from XML in Unix without using grep",
        "su_931702: Error extracting data from a text file, with grep command in bash"
      ],
      "Top-3 Scripts": [
        "so_37854159: ",
        "so_37300645: tr \"<\" \"\\n\" < samp.xml | grep \"^PolNumber\" | cut -d\">\" -f2",
        "su_931702: tr '\\r' '\\n' < silence4.txt |\nawk '\n/silence_start/{ start = $5 }\n/silence_end/ { end = $5; printf \"%s to %s\\n\",start,end }'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9498054: Extract particular data from multiple files in UNIX",
        "su_931702: Error extracting data from a text file, with grep command in bash",
        "ul_241165: Extract entries from a file ranging from one date to another"
      ],
      "Top-3 Scripts": [
        "so_9498054: $ for n in test.txt test1.txt; do printf '$s ' $n; awk 'NR==4{ print $2}' $n; done",
        "su_931702: tr '\\r' '\\n' < silence4.txt |\nawk '\n/silence_start/{ start = $5 }\n/silence_end/ { end = $5; printf \"%s to %s\\n\",start,end }'",
        "ul_241165: REGEX=\"^\\($DAYS\\) \"\nREGEX=$(printf \"%s\" \"$REGEX\" | sed -e 's/\\([|]\\)/\\\\\\1/g')\n\ngrep \"$REGEX\" logfile.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62669438: How can I find numbers within specified range of characters in a string in bash?",
        "so_67789552: put date & time in each line using data in the file",
        "so_18664086: extract data from log file in specified range of time with awk getline bash"
      ],
      "Top-3 Scripts": [
        "so_62669438: s='213_str_12'\nf5=\"${s:0:5}\"\necho \"${f5//[^0-9]/}\"\n213",
        "so_67789552: cat input.txt | while read line; do dateField=$(echo $line | cut -d '|' -f 1); fields=$(echo $line | cut -d '|' -f 2-);  echo -n `date -d \"$dateField\" +'%Y-%m-%d'`' '; echo  $fields; done\n\ndateField=$(echo $line | cut -d '|' -f 1)\n\nfields=$(echo $line | cut -d '|' -f 2-)\n\necho -n `date -d \"$dateField\" +'%Y-%m-%d'`' '\n\necho  $fields\n\necho -n ...",
        "so_18664086: "
      ],
      "Explanations about Options": {
        "-n": "do not output the trailing newline"
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62669438: How can I find numbers within specified range of characters in a string in bash?",
        "so_18664086: extract data from log file in specified range of time with awk getline bash"
      ],
      "Top-3 Scripts": [
        "so_62669438: ",
        "so_18664086: bash script.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67789552: put date & time in each line using data in the file",
        "so_11908919: Python parsing log file to extract events in real time",
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_67789552: cat input.txt | while read line; do dateField=$(echo $line | cut -d '|' -f 1); fields=$(echo $line | cut -d '|' -f 2-);  echo -n `date -d \"$dateField\" +'%Y-%m-%d'`' '; echo  $fields; done\n\ndateField=$(echo $line | cut -d '|' -f 1)\n\nfields=$(echo $line | cut -d '|' -f 2-)",
        "so_11908919: ",
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19726532: Linux script to copy specific range of data from a webpage to a text file",
        "au_907997: Extract time between events from log file in Bash",
        "nl2bash_35: Extract data from HTML table in \"mycode.html\""
      ],
      "Top-3 Scripts": [
        "so_19726532: wget http://kos.hdsat.pl/menu-20.html && sed -n '/<textarea/,${/<\\/textarea/q; s/<.*>//g; p}' menu-20.html > Oscam.srvid",
        "au_907997: $ sed -nr '/0000/N;N; s/.*GPGGA,([^,]+).*/\\1/p' file | sed -n '1p;$p'\n161212.2\n161213.8",
        "nl2bash_35: paste -d: <(grep '<th>' mycode.html | sed -e 's,</*th>,,g') <(grep '<td>' mycode.html | sed -e 's,</*td>,,g')"
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed",
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3631442: Bash script to extract entries from log file based on dates specified in another file?",
        "so_36996709: How to get time range in a log file in linux?",
        "so_37300645: Extract data from XML in Unix without using grep"
      ],
      "Top-3 Scripts": [
        "so_3631442: grep -f\n\nawk -F, 'NR>1 {$1=\"\"; print strftime(\"%m-%d-%y %H:%M:%S\", mktime($0));\n                               print strftime(\"%m-%d-%y %H:%M:%S\", mktime($0) + 1)}' file2.csv > times.list\ngrep -f times.list file1.csv",
        "so_36996709: #To get the current date and hour\n\n\n\n  hour=$( date +'%F|%H')\n\n\n#Filter the logs \n\ngrep $hour log",
        "so_37300645: tr \"<\" \"\\n\" < samp.xml | grep \"^PolNumber\" | cut -d\">\" -f2"
      ],
      "Explanations about Options": {
        "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing."
      }
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Join all the lines into a single line, using the specified delimiter",
      "Most Similar TLDR Script": "paste -s -d {{delimiter}} {{file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62184559: How to extract specific data from grep command in bash?",
        "nl2bash_35: Extract data from HTML table in \"mycode.html\""
      ],
      "Top-3 Scripts": [
        "so_62184559: #/bin/bash\nif [[ $(( $(vnstat -d --oneline|cut -d';' -f6|cut -d. -f1|paste -sd '+') )) -ge 500 ]];then\n  echo 500 Mb reached\nfi",
        "nl2bash_35: paste -d: <(grep '<th>' mycode.html | sed -e 's,</*th>,,g') <(grep '<td>' mycode.html | sed -e 's,</*td>,,g')"
      ],
      "Explanations about Options": {
        "-d": "reuse characters from LIST instead of TABs",
        "-s": "paste one file at a time instead of in parallel"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67789552: put date & time in each line using data in the file",
        "so_62184559: How to extract specific data from grep command in bash?",
        "so_37300645: Extract data from XML in Unix without using grep"
      ],
      "Top-3 Scripts": [
        "so_67789552: cat input.txt | while read line; do dateField=$(echo $line | cut -d '|' -f 1); fields=$(echo $line | cut -d '|' -f 2-);  echo -n `date -d \"$dateField\" +'%Y-%m-%d'`' '; echo  $fields; done\n\ndateField=$(echo $line | cut -d '|' -f 1)\n\nfields=$(echo $line | cut -d '|' -f 2-)",
        "so_62184559: #/bin/bash\nif [[ $(( $(vnstat -d --oneline|cut -d';' -f6|cut -d. -f1|paste -sd '+') )) -ge 500 ]];then\n  echo 500 Mb reached\nfi",
        "so_37300645: tr \"<\" \"\\n\" < samp.xml | grep \"^PolNumber\" | cut -d\">\" -f2"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67789552: put date & time in each line using data in the file",
        "so_18664086: extract data from log file in specified range of time with awk getline bash"
      ],
      "Top-3 Scripts": [
        "so_67789552: cat input.txt | while read line; do dateField=$(echo $line | cut -d '|' -f 1); fields=$(echo $line | cut -d '|' -f 2-);  echo -n `date -d \"$dateField\" +'%Y-%m-%d'`' '; echo  $fields; done\n\nwhile read line; do",
        "so_18664086: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3631442: Bash script to extract entries from log file based on dates specified in another file?",
        "so_40341551: batch extracting data from files, naming new files according to string in input file",
        "ul_283545: extract time range from log file using AWK"
      ],
      "Top-3 Scripts": [
        "so_3631442: awk -F, 'NR>1 {$1=\"\"; print strftime(\"%m-%d-%y %H:%M:%S\", mktime($0));\n                               print strftime(\"%m-%d-%y %H:%M:%S\", mktime($0) + 1)}' file2.csv > times.list\ngrep -f times.list file1.csv",
        "so_40341551: awk -F '[, ]' '/^DE/ {filename=$2} /SQ/,/\\/\\// {print > filename}' file.dat",
        "ul_283545: stime=12\netime=13\ndate=2014-11-24\n\nawk -v a=\"$stime\" -v b=\"$etime\" -v d=\"$date\" -F \"[: ]+\" '\n  { \n  if ( $1 == d && $2+0 >= a && $2+0 < b )\n      print $1,$2,$3\n  }'  logfile.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3631442: Bash script to extract entries from log file based on dates specified in another file?",
        "so_40341551: batch extracting data from files, naming new files according to string in input file",
        "ul_283545: extract time range from log file using AWK"
      ],
      "Top-3 Scripts": [
        "so_3631442: awk -F, 'NR>1 {$1=\"\"; print strftime(\"%m-%d-%y %H:%M:%S\", mktime($0));\n                               print strftime(\"%m-%d-%y %H:%M:%S\", mktime($0) + 1)}' file2.csv > times.list\ngrep -f times.list file1.csv",
        "so_40341551: awk -F '[, ]' '/^DE/ {filename=$2} /SQ/,/\\/\\// {print > filename}' file.dat",
        "ul_283545: stime=12\netime=13\ndate=2014-11-24\n\nawk -v a=\"$stime\" -v b=\"$etime\" -v d=\"$date\" -F \"[: ]+\" '\n  { \n  if ( $1 == d && $2+0 >= a && $2+0 < b )\n      print $1,$2,$3\n  }'  logfile.txt"
      ],
      "Explanations about Options": {
        "-v": "FS=sepstring"
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run multiple chained commands on the input data",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} | {{command3}}\"",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_37123099: how to extract numbers in the same location from many log files",
        "ul_241165: Extract entries from a file ranging from one date to another"
      ],
      "Top-3 Scripts": [
        "so_37123099: $ for i in {1..60}; do awk ... test$i/test$i.log; done\n\n\n$ for i in {1..60}; do echo test$i/test$i.log; done | xargs awk ...",
        "ul_241165: DAYS=$(for D in {0..6} ; do \n           date -d \"last monday + $D days\" +'%Y\\\\/%m\\\\/%d'\n       done | xargs | \n       sed -e 's/ /|/g'\n      )\n\nREGEX=\"^($DAYS) \"\n\ngrep -E \"$REGEX\" logfile.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31673358: Extract data from variable in Unix",
        "so_37123099: how to extract numbers in the same location from many log files"
      ],
      "Top-3 Scripts": [
        "so_31673358: ",
        "so_37123099: $ awk 'FNR==9{f=$1} FNR==10{print FILENAME,f,$1}' test{1..60}.log\n\n$ for i in {1..60}; do awk ... test$i/test$i.log; done\n\n\n$ for i in {1..60}; do echo test$i/test$i.log; done | xargs awk ..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show all file since line 'num'",
      "Most Similar TLDR Script": "tail -n +{{num}} {{file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18664086: extract data from log file in specified range of time with awk getline bash",
        "so_11908919: Python parsing log file to extract events in real time"
      ],
      "Top-3 Scripts": [
        "so_18664086: ",
        "so_11908919: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given size range",
      "Most Similar TLDR Script": "find {{root_path}} -size {{+500k}} -size {{-10M}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51893233: 'find' files containing an integer in a specified range (in bash)"
      ],
      "Top-3 Scripts": [
        "so_51893233: find <path> -regextype egrep -regex '.*file([0-5][0-9]|6[0-7])\\.txt'"
      ],
      "Explanations about Options": {
        "-regextype": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression."
      }
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1171283: How can I extract a page range from a PDF file AND retain the PDF tagging in the new file"
      ],
      "Top-3 Scripts": [
        "au_1171283: sudo apt install pdfsam"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59019271: How can I copy a range of files depending on a timestamp in the filename?"
      ],
      "Top-3 Scripts": [
        "so_59019271: cp  DCS-932L2019*.jpg          target/dir/  # range = \"in 2019\"\ncp  DCS-932L201911*.jpg        target/dir/  # range = \"in november 2019\"\ncp  DCS-932L2019110*.jpg       target/dir/  # range = \"from 2019-11-01 to 2019-11-09\"\ncp  DCS-932L2019{04..12}*.jpg  target/dir/  # range = \"from 2019-04-01 to 2019-12-31\"\n\nprefix=DCS-932\nfor file in \"$prefix\"*.jpg; do\n    withoutPrefix=\"${file/$prefix/}\"\n    timestamp=\"${withoutPrefix/_*/}\"\n    # replace YYYYM... with your range\n    (( timestamp > YYYYMMDDhhmmss )) && \n    (( timestamp < YYYYMMDDhhmmss )) &&\n    cp \"$file\" target/dir/\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and change the process name",
      "Most Similar TLDR Script": "exec -a {{process_name}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_335553: Delete specified range of line number from a text file using sed from within PHP"
      ],
      "Top-3 Scripts": [
        "ul_335553: <?php\n$delete_from_line=35;\n$delete_to_line=40;\n$filename=\"/path/to/your/file\";\n\nexec('sed -i.bak ' . $delete_from_line . ',' . $delete_to_line . 'd ' . $filename);\n?>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "binwalk",
      "MP Summary": "tool for searching binary images for embedded files and executable code",
      "Most Similar TLDR Task": "Extract files from a binary, specifying the output directory",
      "Most Similar TLDR Script": "binwalk --extract --directory {{output_directory}} {{path/to/binary}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_337: Extract files from a binary with the specified file signature"
      ],
      "Top-3 Scripts": [
        "tldr_337: binwalk --dd '{{png image:png}}' {{path/to/binary}}"
      ],
      "Explanations about Options": {
        "--dd": "Extract <type> signatures, give the files an extension of <ext>, and execute <cmd>"
      }
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66114546: Calculate average of the printed time in a log file with Linux commands (or python)?"
      ],
      "Top-3 Scripts": [
        "so_66114546: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix",
        "so_66114546: Calculate average of the printed time in a log file with Linux commands (or python)?"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt",
        "so_66114546: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13642821: Measure Elapsed Time from logs in BASH"
      ],
      "Top-3 Scripts": [
        "so_13642821: NEW=`date --date \"$NEW_DATE\" +%s`\nOLD=`date --date \"$OLD_DATE\" +%s`\ndiff=$((NEW-OLD))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record timing information (data is outputted to the standard error)",
      "Most Similar TLDR Script": "script -t 2> {{path/to/timingfile}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27710914: Using awk to find data matching date range in text file"
      ],
      "Top-3 Scripts": [
        "so_27710914: date=\"20141225011522\"   # December 25, 2014 at 1:15:22\ndate_in_seconds = mktime( date )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sum",
      "MP Summary": "checksum and count the blocks in a file",
      "Most Similar TLDR Task": "Compute a checksum with System V-compatible algorithm and 512-byte blocks",
      "Most Similar TLDR Script": "sum --sysv {{file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66114546: Calculate average of the printed time in a log file with Linux commands (or python)?"
      ],
      "Top-3 Scripts": [
        "so_66114546: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zcat",
      "MP Summary": "decompress and concatenate files to standard output",
      "Most Similar TLDR Task": "Print the uncompressed contents of a gzipped file to the standard output",
      "Most Similar TLDR Script": "zcat {{file.txt.gz}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17713248: Extract value from .gz log files in unix"
      ],
      "Top-3 Scripts": [
        "so_17713248: zcat input.gz | awk -F= '\n{\n  for(i=1;i<=NF;i++) {\n    if($i~/userAgent/) { \n      sub(/[^ ]+$/,\"\",$(i+1))\n      print \"userAgent=\"$(i+1) \n    }\n  }\n}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_618038: Use AWK to Compare Times in a Column"
      ],
      "Top-3 Scripts": [
        "ul_618038: $ awk -F'|' '\n    {\n        split($1,t,\"[/:]\")\n        monthNr = (index(\"JanFebMarAprMayJunJulAugSepOctNovDec\",t[2])+2)/3\n        currSecs = mktime(t[3] \" \" monthNr \" \" t[1] \" \" t[4] \" \" t[5] \" \" t[6])\n\n        print currSecs, NR, $0\n    }\n' log-file.csv | sort -k1,1n -k2,2n | cut -d' ' -f3- > sorted-log-file.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40341551: batch extracting data from files, naming new files according to string in input file"
      ],
      "Top-3 Scripts": [
        "so_40341551: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file with 512 bytes in each split (except the last split; use 512k for kilobytes and 512m for megabytes)",
      "Most Similar TLDR Script": "split -b {{512}} {{filename}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_618038: Use AWK to Compare Times in a Column"
      ],
      "Top-3 Scripts": [
        "ul_618038: $ awk -F'|' '\n    {\n        split($1,t,\"[/:]\")\n        monthNr = (index(\"JanFebMarAprMayJunJulAugSepOctNovDec\",t[2])+2)/3\n        currSecs = mktime(t[3] \" \" monthNr \" \" t[1] \" \" t[4] \" \" t[5] \" \" t[6])\n\n        print currSecs, NR, $0\n    }\n' log-file.csv | sort -k1,1n -k2,2n | cut -d' ' -f3- > sorted-log-file.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add/Delete an ip address to an interface",
      "Most Similar TLDR Script": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_618038: Use AWK to Compare Times in a Column"
      ],
      "Top-3 Scripts": [
        "ul_618038: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n -e 'BEGIN {$cnt=0} END { print $cnt.\"\\n\"} /dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/ && $1 ge \"08:00:00\" && $1 lt \"10:00:00\" && $cnt++' < log.txt\n\nperl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1171283: How can I extract a page range from a PDF file AND retain the PDF tagging in the new file"
      ],
      "Top-3 Scripts": [
        "au_1171283: sudo apt install pdfsam"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sam",
      "MP Summary": "screen editor with structural regular expressions",
      "Most Similar TLDR Task": "Deploy an AWS SAM application",
      "Most Similar TLDR Script": "sam deploy",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26601137: extracting row from a file by providing the specified time interval using shell script"
      ],
      "Top-3 Scripts": [
        "so_26601137: $ awk  '$4~/(22:..:..)|(23:00:00)/' sam\nUpload  XYZ  22/10/2014 22:00:00  22/10/2014 22:15:10  finished\nUpload  ABC  22/10/2014 22:10:00  22/10/2014 22:30:00  failed\nUpload  EFG  22/10/2014 23:00:00  22/10/2014 23:30:00  failed"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt",
      "MP Summary": "command-line interface",
      "Most Similar TLDR Task": "Remove a package (using `purge` instead also removes its configuration files)",
      "Most Similar TLDR Script": "sudo apt remove {{package}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1171283: How can I extract a page range from a PDF file AND retain the PDF tagging in the new file"
      ],
      "Top-3 Scripts": [
        "au_1171283: sudo apt install pdfsam"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "less",
      "MP Summary": "opposite of more",
      "Most Similar TLDR Task": "Forward search for a string (press `n`/`N` to go to next/previous match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18664086: extract data from log file in specified range of time with awk getline bash",
        "so_35409372: Count number of lines between two time period in log file in unix",
        "so_44917274: Comparing specific column from a file to another file with specified number of times"
      ],
      "Top-3 Scripts": [
        "so_18664086: ",
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt",
        "so_44917274: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Version",
      "MP Summary": "daemon for ''lcd'' display devices",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18664086: extract data from log file in specified range of time with awk getline bash"
      ],
      "Top-3 Scripts": [
        "so_18664086: 157.55.34.99 - - [06/Sep/2013:09:13:10 +0300] \"GET /index.php HTTP/1.1\" 200 16977 \"-\" \"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)\"\n85.163.134.149 - - [06/Sep/2013:09:50:23 +0300] \"GET /wap/wapicons/mnrwap.jpg HTTP/1.1\" 200 1217 \"http://mydomain.com/main.php\" \"Mozilla/5.0 (Linux; U; Android 4.1.2; en-gb; GT-I9082 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11908919: Python parsing log file to extract events in real time",
        "so_35409372: Count number of lines between two time period in log file in unix",
        "so_59019271: How can I copy a range of files depending on a timestamp in the filename?"
      ],
      "Top-3 Scripts": [
        "so_11908919: ",
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt",
        "so_59019271: DCS-932*_day.jpg                # all files with _day label\nDCS-932L2019*{_day,_night}.jpg  # all files from 2019 with _day or _night label"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "continue",
      "MP Summary": "continue for, while, or until loop",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11908919: Python parsing log file to extract events in real time"
      ],
      "Top-3 Scripts": [
        "so_11908919: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "log",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36996709: How to get time range in a log file in linux?"
      ],
      "Top-3 Scripts": [
        "so_36996709: #To get the current date and hour\n\n\n\n  hour=$( date +'%F|%H')\n\n\n#Filter the logs \n\ngrep $hour log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "egrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51893233: 'find' files containing an integer in a specified range (in bash)"
      ],
      "Top-3 Scripts": [
        "so_51893233: find <path> -regextype egrep -regex '.*file([0-5][0-9]|6[0-7])\\.txt'\n\n-regextype egrep"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "save",
      "MP Summary": "save revision of a file",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5468871: Create variable from string/nameonly parameter to extract data in bash?"
      ],
      "Top-3 Scripts": [
        "so_5468871: LOGFILE=/root/log.txt\n\nsave()\n{\n    echo \"$1 : ${!1}\" >> ${LOGFILE}\n}\n\nTEST=/file/path\n\nsave TEST\n\n$ TEST=foo; save(){ echo \"$1 : ${!1}\"; }; save TEST\nTEST : foo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "new",
      "MP Summary": "report on nmh folders with new messages",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_907997: Extract time between events from log file in Bash",
        "so_45305141: How to find the files being written between a time range in java in unix"
      ],
      "Top-3 Scripts": [
        "au_907997: s/old/new",
        "so_45305141: File folder = new File(\"your/path\");\nFile[] listOfFiles = folder.listFiles();\n\nfor (int i = 0; i < listOfFiles.length; i++) {\n    if (listOfFiles[i].isFile()) {\n        if(listOfFiles[i].lastModified() > FROM && listOfFiles[i].lastModified() < TO){\n                doSomething();\n        }\n    }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "input",
      "MP Summary": "Yagi-Uda project antenna defining program",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "by",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "match",
      "MP Summary": "Match strings against glob patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Extract two semicolon-separated fields from specified strings, output them separated by a space.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "echo \"bla@some.com;john@home.com\" | awk -F';' '{print $1,$2}'\n",
          "command-options": {
            "echo": {
              "mpsum": "display a line of text"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "echo": {
              "man1_echo_8389": "print given argument append messag file enabl interpret backslash escap special charact print messag environ variabl print messag without trail newlin print text messag\nnote : quot option"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35409372: Count number of lines between two time period in log file in unix"
      ],
      "Top-3 Scripts": [
        "so_35409372: perl -n                  -- runs the script for each line in the input file\n\nBEGIN { $cnt=0 }         -- start by setting $cnt to 0\nEND { print $cnt.\"\\n\"}   -- when all is done, print $cnt\n/dateTime=\"\\d{4}-\\d{2}-\\d{2} (\\d{2}:\\d{2}:\\d{2})/\n                         -- match for time format, keeping the time in the group\n$1 ge \"08:00:00\"         -- check if the time is greater or equal to 08:00:00\n$1 lt \"10:30:00\"         -- check if time is less than 10:30:00 \n$cnt++                   -- if all matches are ok, increase cnt"
      ],
      "Explanations about Options": {}
    }
  ]
}