{
  "Query": "Create a single pdf from multiple text, images or pdf files",
  "Answers": [
    {
      "Command": "pdfimages",
      "MP Summary": "Portable Document Format (PDF) image extractor (version 3.03)",
      "Most Similar TLDR Task": "List information about all the images in a PDF file",
      "Most Similar TLDR Script": "pdfimages -list {{path/to/file.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_248: Extract images from a PDF file and include the page number in the output filenames",
        "tldr_246: Extract all images from a PDF file and save them as PNGs",
        "au_150100: Extracting embedded images from a PDF"
      ],
      "Top-3 Scripts": [
        "tldr_248: pdfimages -p {{path/to/file.pdf}} {{filename_prefix}}",
        "tldr_246: pdfimages -png {{path/to/file.pdf}} {{filename_prefix}}",
        "au_150100: pdfimages [options] <PDF-file> <image-root>\n\npdfimages -all in.pdf /tmp/out\n\npdfimages -j in.pdf /tmp/out"
      ],
      "Explanations about Options": {
        "-p": "Include page numbers in output file names.",
        "-j": "Write images in JPEG format as JPEG files instead of the default format. The JPEG\n file is identical to the JPEG data stored in the PDF.",
        "-png": "Change the default output format to PNG."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_4702511: How to Generate PDF file from .docx from linux server?",
        "so_42192671: Read data from a text file and convert images to PDF referred to it",
        "au_184581: How do I search a PDF file from command line?"
      ],
      "Top-3 Scripts": [
        "so_4702511: ",
        "so_42192671: #!/bin/bash\nwhile read line; do\n   first3=${line:0:3}\n   first6=${line:0:6}\n   echo convert \"/blah/blah/images/H${first3}/${first6}-*.jpg\" \"/test/PDF/${first6}-01.pdf\"\ndone < file.txt",
        "au_184581: for f in pdf_directory; do echo $f; pdftotext $f - | grep -i \"search_term\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdfunite",
      "MP Summary": "Portable Document Format (PDF) page merger",
      "Most Similar TLDR Task": "Merge a directory of PDFs into a single PDF",
      "Most Similar TLDR Script": "pdfunite {{path/to/directory/*.pdf}} {{path/to/merged_output.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_886934: Merge all pdf files from one folder",
        "tldr_6446: Merge 2 PDFs into a single PDF"
      ],
      "Top-3 Scripts": [
        "au_886934: pdfunite *.pdf all.pdf",
        "tldr_6446: pdfunite {{path/to/fileA.pdf}} {{path/to/fileB.pdf}} {{path/to/merged_output.pdf}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdftotext",
      "MP Summary": "Portable Document Format (PDF) to text converter (version 3.03)",
      "Most Similar TLDR Task": "Convert filename.pdf to plain text and save it as filename.txt",
      "Most Similar TLDR Script": "pdftotext {{filename.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1123715: How to translate large pdf from comand line?",
        "au_184581: How do I search a PDF file from command line?"
      ],
      "Top-3 Scripts": [
        "au_1123715: pdftotext your.pdf your.txt",
        "au_184581: pdftotext document.pdf - | grep -C5 -n -i \"search term\"\n\nfor f in pdf_directory; do echo $f; pdftotext $f - | grep -i \"search_term\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gs",
      "MP Summary": "Ghostscript (PostScript and PDF language interpreter and previewer)",
      "Most Similar TLDR Task": "Merge PDF files",
      "Most Similar TLDR Script": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input1.pdf}} {{input2.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1330269: How to print a pdf file to pdf including annotations and force rasterization from the terminal",
        "tldr_373: Extract pages from a PDF file"
      ],
      "Top-3 Scripts": [
        "au_1330269: gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/ebook -dNOPAUSE -dQUIET -dBATCH -sOutputFile=outfile.pdf infile.pdf",
        "tldr_373: gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input.pdf}}"
      ],
      "Explanations about Options": {
        "-sDEVICE": "Selects an alternate initial output device, as described above.",
        "-P": "Makes Ghostscript to look first in the current directory for library files. By\n default, Ghostscript no longer looks in the current directory, unless, of course,\n the first explicitly supplied directory is \".\" in -I. See also the INITIALIZATION\n FILES section below, and bundled Use.htm for detailed discussion on search paths\n and how Ghostcript finds files.",
        "-sOutputFile": "Selects an alternate output file (or pipe) for the initial output device, as\n described above.",
        "-dNOPAUSE": "Disables the prompt and pause at the end of each page. This may be desirable for\n applications where another program is driving Ghostscript."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_675195: How to print PDF files automatically from a directory?",
        "ul_655072: Eliminate duplicate pages from pdf",
        "ul_269033: How to remove zoom information from a PDF bookmark"
      ],
      "Top-3 Scripts": [
        "au_675195: lpr \"$2/$1\" && rm \"$2/$1\"",
        "ul_655072: ",
        "ul_269033: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66825569: Script to merge all image files from a folder inside a pdf",
        "ul_655072: Eliminate duplicate pages from pdf"
      ],
      "Top-3 Scripts": [
        "so_66825569: #!/usr/bin/env bash\n\n# Turn on case-insensitive globs and make ones that\n# don't match anything expand to nothing\nshopt -s nocaseglob nullglob\n\nreadarray -d '' -t images < <(printf \"%s\\0\" *.jpg *.jpeg *.png *.gif *.tiff *.webp *.bmp | sort -Vz)\nconvert \"${images[@]}\" compilation_images.pdf",
        "ul_655072: pdftk original.pdf cat $(find -name 'pg_*.pdf' |\n                        awk -F '[._]' '{printf \"%d\\n\",$3}' |\n                        sort -n ) output new.pdf"
      ],
      "Explanations about Options": {
        "-n": "compare according to string numerical value"
      }
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Convert an image from JPG to PNG",
      "Most Similar TLDR Script": "convert {{image.jpg}} {{image.png}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_546842: Creating a movie from pdf images",
        "ul_277892: How do I create a blank PDF from the command line?",
        "su_1366374: Generate a PDF from the command line and fill up the page with as many copies of an image as possible?"
      ],
      "Top-3 Scripts": [
        "su_546842: for i in {2..9087}\ndo \n   sips -z 1024 -s format png fig${i}.pdf --out png/fig${i}.png\n   convert png/fig${i}.png -background=white -flatten +matte aa.png && \n   mv aa.png png/fig${i}.png\ndone",
        "ul_277892: convert xc:none -page Letter a.pdf\n\nconvert xc:none -page A4 a.pdf\n\nconvert xc:none -page 842x595 a.pdf",
        "su_1366374: convert /folder/*.jpg -gravity center -append /output/out.jpg\n\nconvert /folder/*.jpg -gravity center +append /output/nout.jpg\n\nconvert /output/nout.jpg -page a4 /output/print.jpg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_32139: Remove text information from a PDF?",
        "so_39246545: Creating multiple files from text editor",
        "ul_428238: How can I change a single file from an UBI image"
      ],
      "Top-3 Scripts": [
        "au_32139: pdftk cat",
        "so_39246545: cat > test.txt <<EOF\n$HOME\nEOF\n\ncat > test.txt <<\"EOF\"\n$HOME\nEOF",
        "ul_428238: cat /proc/mtd | grep -i \"NAND Simulator\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination",
      "Most Similar TLDR Script": "install {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_215734: Creating .PDF from Terminal",
        "au_675195: How to print PDF files automatically from a directory?",
        "au_828720: How to remove the password from a PDF?"
      ],
      "Top-3 Scripts": [
        "au_215734: sudo apt-get install wkhtmltopdf",
        "au_675195: sudo apt-get install inoticoming\n\nsudo apt-get install trash-cli",
        "au_828720: sudo apt-get install pdftk"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Remove a package and its configuration files",
      "Most Similar TLDR Script": "apt-get purge {{package}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_215734: Creating .PDF from Terminal",
        "au_675195: How to print PDF files automatically from a directory?",
        "au_828720: How to remove the password from a PDF?"
      ],
      "Top-3 Scripts": [
        "au_215734: sudo apt-get install wkhtmltopdf",
        "au_675195: sudo apt-get install inoticoming\n\nsudo apt-get install trash-cli",
        "au_828720: sudo apt-get install pdftk"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "enscript",
      "MP Summary": "convert text files to PostScript, HTML, RTF, ANSI, and overstrikes",
      "Most Similar TLDR Task": "Generate a PostScript file from a text file",
      "Most Similar TLDR Script": "enscript {{path/to/input_file}} --output={{path/to/output_file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1123715: How to translate large pdf from comand line?"
      ],
      "Top-3 Scripts": [
        "au_1123715: sudo apt-get install enscript ghostscript\n\nenscript -p output.ps your.txt\nps2pdf output.ps your2.pdf"
      ],
      "Explanations about Options": {
        "-p": "Leave the output to file file. If the file is `-', enscript sends the output to\n the standard output stdout."
      }
    },
    {
      "Command": "gedit",
      "MP Summary": "text editor for the GNOME Desktop",
      "Most Similar TLDR Task": "Open multiple text files",
      "Most Similar TLDR Script": "gedit {{file1 file2 ...}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_675195: How to print PDF files automatically from a directory?"
      ],
      "Top-3 Scripts": [
        "au_675195: mkdir -p ~/bin\ngedit ~/bin/printpdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdftk",
      "MP Summary": "A handy tool for manipulating PDF",
      "Most Similar TLDR Task": "Merge (concatenate) a list of PDF files and save the result as another one",
      "Most Similar TLDR Script": "pdftk {{file1.pdf file2.pdf ...}} cat output {{output.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_32139: Remove text information from a PDF?",
        "au_828720: How to remove the password from a PDF?",
        "ul_655072: Eliminate duplicate pages from pdf"
      ],
      "Top-3 Scripts": [
        "au_32139: pdftk burst\n\npdftk cat",
        "au_828720: sudo apt list | grep pdftk\n\npdftk/xenial 2.02-4 amd64 [installed]\n\nsudo apt-get install pdftk\n\npdftk /path/to/input.pdf input_pw <yourpassword> output out.pdf",
        "ul_655072: pdftk original.pdf cat $(find -name 'pg_*.pdf' |\n                        awk -F '[._]' '{printf \"%d\\n\",$3}' |\n                        sort -n ) output new.pdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_546842: Creating a movie from pdf images",
        "ul_269033: How to remove zoom information from a PDF bookmark"
      ],
      "Top-3 Scripts": [
        "su_546842: for i in {2..9087}\ndo \n   sips -z 1024 -s format png fig${i}.pdf --out png/fig${i}.png\n   convert png/fig${i}.png -background=white -flatten +matte aa.png && \n   mv aa.png png/fig${i}.png\ndone",
        "ul_269033: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "printf \"{{%s\\n}}\" \"{{Hello world}}\"",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66825569: Script to merge all image files from a folder inside a pdf",
        "ul_655072: Eliminate duplicate pages from pdf"
      ],
      "Top-3 Scripts": [
        "so_66825569: #!/usr/bin/env bash\n\n# Turn on case-insensitive globs and make ones that\n# don't match anything expand to nothing\nshopt -s nocaseglob nullglob\n\nreadarray -d '' -t images < <(printf \"%s\\0\" *.jpg *.jpeg *.png *.gif *.tiff *.webp *.bmp | sort -Vz)\nconvert \"${images[@]}\" compilation_images.pdf",
        "ul_655072: pdftk original.pdf cat $(find -name 'pg_*.pdf' |\n                        awk -F '[._]' '{printf \"%d\\n\",$3}' |\n                        sort -n ) output new.pdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdfjoin",
      "MP Summary": "join together pages from multiple PDF files",
      "Most Similar TLDR Task": "Merge two PDFs",
      "Most Similar TLDR Script": "pdfjoin {{file1}} {{file2}} --outfile {{output_file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_6442: Merge subranges from two PDFs"
      ],
      "Top-3 Scripts": [
        "tldr_6442: pdfjoin {{file1 3-5,1}} {{file2 4-6}} --outfile {{output_file}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_269033: How to remove zoom information from a PDF bookmark"
      ],
      "Top-3 Scripts": [
        "ul_269033: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "qpdf",
      "MP Summary": "PDF transformation software",
      "Most Similar TLDR Task": "Merge (concatenate) all the pages of a list of PDF files and save the result as a new PDF",
      "Most Similar TLDR Script": "qpdf --empty --pages {{file1.pdf}} {{file2.pdf}} {{file3.pdf}} -- {{output.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_828720: How to remove the password from a PDF?"
      ],
      "Top-3 Scripts": [
        "au_828720: qpdf -password=<your-password> -decrypt /path/to/secured.pdf out.pdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdfinfo",
      "MP Summary": "Portable Document Format (PDF) document information extractor (version 3.03)",
      "Most Similar TLDR Task": "Print PDF file information",
      "Most Similar TLDR Script": "pdfinfo {{path/to/file.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_39464: How to query pdf page size from the command line?"
      ],
      "Top-3 Scripts": [
        "ul_39464: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_14640: Use convert to grab a specific page from a PDF file?"
      ],
      "Top-3 Scripts": [
        "ul_14640: #!/usr/bin/env python\nimport copy, sys\nfrom pyPdf import PdfFileWriter, PdfFileReader\ninput = PdfFileReader(sys.stdin)\noutput = PdfFileWriter()\nfor i in [42, 43]:\n    output.addPage(input.getPage(i))\noutput.write(sys.stdout)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_828720: How to remove the password from a PDF?",
        "ul_428238: How can I change a single file from an UBI image",
        "au_184581: How do I search a PDF file from command line?"
      ],
      "Top-3 Scripts": [
        "au_828720: sudo apt list | grep pdftk",
        "ul_428238: cat /proc/mtd | grep -i \"NAND Simulator\"",
        "au_184581: pdftotext document.pdf - | grep -C5 -n -i \"search term\"\n\nfor f in pdf_directory; do echo $f; pdftotext $f - | grep -i \"search_term\"; done"
      ],
      "Explanations about Options": {
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    },
    {
      "Command": "bmaptool",
      "MP Summary": "create block map (bmap) for a file or copy a file using bmap",
      "Most Similar TLDR Task": "Create a blockmap from image file",
      "Most Similar TLDR Script": "bmaptool create -o {{blockmap.bmap}} {{source.img}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_3182: Create a blockmap from image file"
      ],
      "Top-3 Scripts": [
        "tldr_3182: bmaptool create -o {{blockmap.bmap}} {{source.img}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdfseparate",
      "MP Summary": "Portable Document Format (PDF) page extractor",
      "Most Similar TLDR Task": "Extract pages from PDF file and make a separate PDF file for each page",
      "Most Similar TLDR Script": "pdfseparate {{path/to/source_filename.pdf}} {{path/to/destination_filename-%d.pdf}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_251: Extract pages from PDF file and make a separate PDF file for each page"
      ],
      "Top-3 Scripts": [
        "tldr_251: pdfseparate {{path/to/source_filename.pdf}} {{path/to/destination_filename-%d.pdf}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1330269: How to print a pdf file to pdf including annotations and force rasterization from the terminal"
      ],
      "Top-3 Scripts": [
        "au_1330269: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66825569: Script to merge all image files from a folder inside a pdf"
      ],
      "Top-3 Scripts": [
        "so_66825569: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_150100: Extracting embedded images from a PDF",
        "so_35007942: Image is always at top in converted html from pdf"
      ],
      "Top-3 Scripts": [
        "au_150100: -j:  Normally, all images are written as PBM (for monochrome images) or PPM for\n     non-monochrome images) files. With this option,  images in DCT format are\n     saved as JPEG files. All non-DCT images are saved in PBM/PPM format as usual.",
        "so_35007942: $pg = 0;\nforeach($xml->page as $page) {\n        foreach ($page as $e) {\n            $all_attribute[$pg][(int)$e['top']] = $e;\n        }\n        $pg++;\n    }\n\nforeach($all_attribute as $page) {\n        ksort($page);\n}\n\nforeach($xml->page as $page) {\n  foreach($page as $p){\n      if($p->getName() == 'image'){\n         <img width=\"'.$p['width'].'\" height=\"'.$p['height'].'\" src=\"'.$p['src'].'\" >\n      }\n  }\n}\n\n$font = [];\n    foreach($xml->page as $page) {\n        foreach ($page as $e) {\n            if($e->getName() == 'fontspec'){\n                $font[(int)$e['id']]['family'] = (string)$e['family'];\n                $font[(int)$e['id']]['size'] = (string)$e['size'];\n                $font[(int)$e['id']]['color'] = (string)$e['color'];\n            }\n        }\n    }\n\nforeach($page as $p){\n            if($p->getName() == 'text'){\n                $ind = (int)$p['font'];\n                $font_size = $font[$ind]['size'];\n                $font_color = $font[$ind]['color'];\n                $font_family = $font[$ind]['family'];\n                '<span style=\"font-size:'.$font_size.'px;color:'.$font_color.';font-family:'.$font_family.'; font-weight: 900;\">'.(string)$p.'</span>=';\n          }\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_675195: How to print PDF files automatically from a directory?"
      ],
      "Top-3 Scripts": [
        "au_675195: mkdir -p ~/bin\ngedit ~/bin/printpdf"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_32139: Remove text information from a PDF?"
      ],
      "Top-3 Scripts": [
        "au_32139: print > print to file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pygmentize",
      "MP Summary": "highlights the input file",
      "Most Similar TLDR Task": "Output an HTML file, with additional formatter options (full page, with line numbers)",
      "Most Similar TLDR Script": "pygmentize -f html -O \"full,linenos=True\" -o {{output_file.html}} {{input_file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_596241: Creating Highlighted PDF from JSON"
      ],
      "Top-3 Scripts": [
        "au_596241: pygmentize bar.json | aha > bar.html"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_655072: Eliminate duplicate pages from pdf"
      ],
      "Top-3 Scripts": [
        "ul_655072: pdftk original.pdf cat $(find -name 'pg_*.pdf' |\n                        awk -F '[._]' '{printf \"%d\\n\",$3}' |\n                        sort -n ) output new.pdf"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_215734: Creating .PDF from Terminal",
        "au_675195: How to print PDF files automatically from a directory?",
        "au_828720: How to remove the password from a PDF?"
      ],
      "Top-3 Scripts": [
        "au_215734: sudo apt-get install wkhtmltopdf",
        "au_675195: sudo apt-get install inoticoming\n\nsudo apt-get install trash-cli",
        "au_828720: sudo apt list | grep pdftk\n\nsudo apt-get install pdftk"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_32139: Remove text information from a PDF?"
      ],
      "Top-3 Scripts": [
        "au_32139: print > print to file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_655072: Eliminate duplicate pages from pdf"
      ],
      "Top-3 Scripts": [
        "ul_655072: pdftk original.pdf cat $(find -name 'pg_*.pdf' |\n                        awk -F '[._]' '{printf \"%d\\n\",$3}' |\n                        sort -n ) output new.pdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tesseract",
      "MP Summary": "command-line OCR engine",
      "Most Similar TLDR Task": "Recognize text in an image and save it to `output.txt` (the '.txt' extension is added automatically)",
      "Most Similar TLDR Script": "tesseract {{image.png}} {{output}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_277511: How to extract hocr file from PDF?"
      ],
      "Top-3 Scripts": [
        "ul_277511: tesseract input.tif out pdf hocr"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42192671: Read data from a text file and convert images to PDF referred to it"
      ],
      "Top-3 Scripts": [
        "so_42192671: #!/bin/bash\nwhile read line; do\n   first3=${line:0:3}\n   first6=${line:0:6}\n   echo convert \"/blah/blah/images/H${first3}/${first6}-*.jpg\" \"/test/PDF/${first6}-01.pdf\"\ndone < file.txt\n\nconvert /blah/blah/images/H123/123412-*.jpg /test/PDF/123412-01.pdf\nconvert /blah/blah/images/H123/123413-*.jpg /test/PDF/123413-01.pdf\nconvert /blah/blah/images/H123/123411-*.jpg /test/PDF/123411-01.pdf\nconvert /blah/blah/images/H123/123414-*.jpg /test/PDF/123414-01.pdf\nconvert /blah/blah/images/H123/123415-*.jpg /test/PDF/123415-01.pdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lpr",
      "MP Summary": "off line print",
      "Most Similar TLDR Task": "Print multiple pages per sheet",
      "Most Similar TLDR Script": "lpr -o number-up={{2|4|6|9|16}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_675195: How to print PDF files automatically from a directory?"
      ],
      "Top-3 Scripts": [
        "au_675195: lpr \"$2/$1\" && trash \"$2/$1\"\n\nlpr \"$2/$1\" && rm \"$2/$1\"\n\n#!/usr/bin/env bash\nFILE=\"$1\"\nif [ \"${FILE##*.}\" = \"pdf\" ]\nthen\n    lpr \"$2/$1\" && trash \"$2/$1\"\nfi\nexit 0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exiftool",
      "MP Summary": "Read and write meta information in files",
      "Most Similar TLDR Task": "Recursively rename all JPEG photos in a directory based on the `DateTimeOriginal` field",
      "Most Similar TLDR Script": "exiftool '-filename<DateTimeOriginal' -d %Y-%m-%d_%H-%M-%S%%lc.%%e {{path/to/directory}} -r -ext jpg",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_27381: How to edit pdf metadata from command line?"
      ],
      "Top-3 Scripts": [
        "au_27381: exiftool -Title=\"This is the Title\" -Author=\"Happy Man\" -Subject=\"PDF Metadata\" drawing.pdf"
      ],
      "Explanations about Options": {
        "-t": "Output a tab-delimited list of description/values (useful for database import). May\n be combined with -s to print tag names instead of descriptions, or -S to print tag\n values only, tab-delimited on a single line. The -t option may be combined with -j,\n -php or -X to add tag table information (\"table\", tag \"id\", and \"index\" for cases\n where multiple conditional tags exist with the same ID).",
        "-T": "Output tag values in table form. Equivalent to -t -S -q -f.",
        "-e": "Extract existing tags only - don't calculate composite tags.",
        "-l": "Use long 2-line Canon-style output format. Adds a description and unconverted value\n (if it is different from the converted value) to the XML, JSON or PHP output when -X,\n -j or -php is used. May also be combined with -listf, -listr or -listwf to add\n descriptions of the file types.",
        "-i": "Ignore specified directory name. DIR may be either an individual folder name, or a\n full path. If a full path is specified, it must match the Directory tag exactly to\n be ignored. Use multiple -i options to ignore more than one directory name. A\n special DIR value of \"SYMLINKS\" (case sensitive) may be specified to ignore symbolic\n links when the -r option is used."
      }
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1330269: How to print a pdf file to pdf including annotations and force rasterization from the terminal"
      ],
      "Top-3 Scripts": [
        "au_1330269: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_675195: How to print PDF files automatically from a directory?"
      ],
      "Top-3 Scripts": [
        "au_675195: chmod +x ~/bin/printpdf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lp",
      "MP Summary": "print files",
      "Most Similar TLDR Task": "Print N copies of file to default printer (replace N with desired number of copies)",
      "Most Similar TLDR Script": "lp -n {{N}} {{path/to/filename}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_473827: Printing: Different pages from different feeds (pdf)"
      ],
      "Top-3 Scripts": [
        "su_473827: #!/bin/sh\ni=1\nwhile [ $i -le <number of printouts> ]\ndo\n  lp -o media=<name of feed> <file> -P 1\n  lp <file> -P 2-<number of pages>\n  i=`expr $i + 1`\ndone"
      ],
      "Explanations about Options": {
        "-o": "Prints on both sides of the paper for landscape output.",
        "-P": "Specifies which pages to print in the document. The list can contain a list of\n numbers and ranges (#-#) separated by commas, e.g., \"1,3-5,16\". The page numbers\n refer to the output pages and not the document's original pages - options like\n \"number-up\" can affect the numbering of the pages."
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42192671: Read data from a text file and convert images to PDF referred to it"
      ],
      "Top-3 Scripts": [
        "so_42192671: #!/bin/bash\nwhile read line; do\n   first3=${line:0:3}\n   first6=${line:0:6}\n   echo convert \"/blah/blah/images/H${first3}/${first6}-*.jpg\" \"/test/PDF/${first6}-01.pdf\"\ndone < file.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "firefox",
      "MP Summary": "a free and open source web browser from Mozilla",
      "Most Similar TLDR Task": "Use a specific profile to allow multiple separate instances of Firefox to run at once",
      "Most Similar TLDR Script": "firefox --profile {{path/to/directory}} {{https://example.com/}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1123715: How to translate large pdf from comand line?"
      ],
      "Top-3 Scripts": [
        "au_1123715: trans -browser firefox :fr http://www.w3.org/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66825569: Script to merge all image files from a folder inside a pdf"
      ],
      "Top-3 Scripts": [
        "so_66825569: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount a directory to another directory",
      "Most Similar TLDR Script": "mount --bind {{path/to/old_dir}} {{path/to/new_dir}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_428238: How can I change a single file from an UBI image"
      ],
      "Top-3 Scripts": [
        "ul_428238: mount -t ubifs ubiX /path/to/mount-point/"
      ],
      "Explanations about Options": {
        "-t": "The argument following the -t is used to indicate the filesystem type. The\n filesystem types which are currently supported depend on the running kernel. See\n /proc/filesystems and /lib/modules/$(uname -r)/kernel/fs for a complete list of the\n filesystems. The most common are ext2, ext3, ext4, xfs, btrfs, vfat, sysfs, proc,\n nfs and cifs."
      }
    },
    {
      "Command": "trans",
      "MP Summary": "Command-line translator using Google Translate, Bing Translator, Yandex.Translate, etc.",
      "Most Similar TLDR Task": "Translate a word (language is detected automatically)",
      "Most Similar TLDR Script": "trans \"{{word_or_sentence_to_translate}}\"",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1123715: How to translate large pdf from comand line?"
      ],
      "Top-3 Scripts": [
        "au_1123715: $ trans -brief 'Saluton, Mondo!'\nHello, World!\n\ntrans :fr word\n\ntrans -browser firefox :fr http://www.w3.org/\n\ntrans :fr file://input.txt\n\ntrans file://your.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Run library module as a script (terminates option list)",
      "Most Similar TLDR Script": "python -m {{module}} {{arguments}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_596241: Creating Highlighted PDF from JSON"
      ],
      "Top-3 Scripts": [
        "au_596241: cat foo.json | python -m json.tool > bar.json"
      ],
      "Explanations about Options": {
        "-m": "Searches sys.path for the named module and runs the corresponding .py file as a\n script."
      }
    },
    {
      "Command": "modprobe",
      "MP Summary": "Add and remove modules from the Linux Kernel",
      "Most Similar TLDR Task": "Remove a module from the kernel",
      "Most Similar TLDR Script": "sudo modprobe --remove {{module_name}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_428238: How can I change a single file from an UBI image"
      ],
      "Top-3 Scripts": [
        "ul_428238: modprobe nandsim first_id_byte=... second_id_byte=.. third_id_byte=.. fourth_id_byte=...\n\nmodprobe ubi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Show the individual threads of a given process",
      "Most Similar TLDR Script": "top -Hp {{process_id}}",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35007942: Image is always at top in converted html from pdf"
      ],
      "Top-3 Scripts": [
        "so_35007942: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE pdf2xml SYSTEM \"pdf2xml.dtd\">\n<pdf2xml producer=\"poppler\" version=\"0.33.0\">\n<page number=\"1\" position=\"absolute\" top=\"0\" left=\"0\" height=\"1262\" width=\"892\">\n<fontspec id=\"0\" size=\"16\" family=\"Times\" color=\"#000000\"/>\n<image top=\"117\" left=\"51\" width=\"424\" height=\"96\" src=\"converted_path/create1.jpg\"/>\n<text top=\"57\" left=\"99\" width=\"144\" height=\"16\" font=\"0\">Test document PDF</text>\n</page>\n</pdf2xml>\n\n<text top=\"57\" left=\"99\" width=\"144\" height=\"16\" font=\"0\">"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current user identity as a number",
      "Most Similar TLDR Script": "id -u",
      "Most Similar NL2Bash Task": "Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding \"*_ocr.pdf\" files",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find /somepath -type f -iregex \".*\\.(pdf\\|tif\\|tiff\\|png\\|jpg\\|jpeg\\|bmp\\|pcx\\|dcx)\" ! -name \"*_ocr.pdf\" -print0\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
              "-iregex": "Like -regex, but the match is case insensitive.",
              "-type": "File is of type c:"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35007942: Image is always at top in converted html from pdf"
      ],
      "Top-3 Scripts": [
        "so_35007942: <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE pdf2xml SYSTEM \"pdf2xml.dtd\">\n<pdf2xml producer=\"poppler\" version=\"0.33.0\">\n<page number=\"1\" position=\"absolute\" top=\"0\" left=\"0\" height=\"1262\" width=\"892\">\n<fontspec id=\"0\" size=\"16\" family=\"Times\" color=\"#000000\"/>\n<image top=\"117\" left=\"51\" width=\"424\" height=\"96\" src=\"converted_path/create1.jpg\"/>\n<text top=\"57\" left=\"99\" width=\"144\" height=\"16\" font=\"0\">Test document PDF</text>\n</page>\n</pdf2xml>\n\n<fontspec id=\"0\" size=\"16\" family=\"Times\" color=\"#000000\"/>"
      ],
      "Explanations about Options": {}
    }
  ]
}