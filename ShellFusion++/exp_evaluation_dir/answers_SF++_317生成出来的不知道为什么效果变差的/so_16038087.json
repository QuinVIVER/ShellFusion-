{
  "Query": "Extract and delete all .gz in a directory- Linux",
  "Answers": [
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Recursively remove a directory and all its subdirectories",
      "Most Similar TLDR Script": "rm -r {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46718229: How to delete filename in multiple directories linux",
        "su_1217706: how to find and delete multiple files in bash/linux",
        "ul_621632: how to delete all directories in a folder"
      ],
      "Top-3 Scripts": [
        "so_46718229: find ../home -type f \\( -name k.php -o -name b0x.html \\) -exec rm {} \\;",
        "su_1217706: find ./directory -name \"*.srt\" -exec rm {}  \\;",
        "ul_621632: rm -rf '/content/download/'*/"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46718229: How to delete filename in multiple directories linux",
        "su_1378797: Extract .tar.gz files in different subdirectories",
        "su_1217706: how to find and delete multiple files in bash/linux"
      ],
      "Top-3 Scripts": [
        "so_46718229: find ../home -type f \\( -name k.php -o -name b0x.html \\) -exec rm {} \\;",
        "su_1378797: find . -name \"*.tar.gz\" -execdir tar --one-top-level -xvzf {} \\;\n\nfind . -type f -name \"*.tar.gz\" -execdir sh -c '\n   dirn=\"${1%.tar.gz}\"         # desired directory name\n   mkdir -- \"$dirn\"            # creating a directory\n   cd -- \"$dirn\" &&\n   tar -xvzf ../\"$1\"           # extracting to it\n' find-sh {} \\;",
        "su_1217706: find ./directory -name \"*.srt\" -exec rm {}  \\;"
      ],
      "Explanations about Options": {
        "-d": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Extract a (compressed) archive into the current directory",
      "Most Similar TLDR Script": "tar xf {{source.tar[.gz|.bz2|.xz]}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories",
        "so_60231073: How to extract all .tgz files in subdirectories?",
        "so_18402395: How to uncompress a tar.gz in another directory"
      ],
      "Top-3 Scripts": [
        "su_1378797: find . -name \"*.tar.gz\" -execdir tar --one-top-level -xvzf {} \\;\n\nman 1 tar\n\nfind . -type f -name \"*.tar.gz\" -execdir sh -c '\n   dirn=\"${1%.tar.gz}\"         # desired directory name\n   mkdir -- \"$dirn\"            # creating a directory\n   cd -- \"$dirn\" &&\n   tar -xvzf ../\"$1\"           # extracting to it\n' find-sh {} \\;",
        "so_60231073: for i in *-Grace_*/Grace_*/output.tgz; do \n  tar xzf \"$i\" --directory=\"${i%/*}\"\ndone\n\nfind . -type f -name 'output.tgz' -execdir tar xfz {} +",
        "so_18402395: gzip -dc archive.tar.gz | tar -xf - -C /destination\n\ntar xzf archive.tar.gz -C /destination"
      ],
      "Explanations about Options": {
        "-z": "Filter the archive through gzip(1).",
        "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
        "-v": "Verbosely list files processed.",
        "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_498433: How can I extract specific string in Linux?",
        "so_20751925: Merge fastq.gz files in Unix",
        "so_27164854: linux delete multiple lines in a file"
      ],
      "Top-3 Scripts": [
        "au_498433: cat file.txt | perl -e 's/\\s//g && print \"$_\\n\" for join(\"\", <>) =~ /\\*([\\w\\s]+)[~]{0,1}\\w{3}\\*\\*TP/gm'\n\ncat file.txt | perl -e 'for$a(join(\"\", <>)=~/\\*([A-Z0-9\\s]+?)\\*\\*\\d{8}/g){$a=~s/\\s+//g;print\"$a\\n\"}'",
        "so_20751925: ",
        "so_27164854: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory",
        "so_16484972: how to extract a substring in bash",
        "so_20751925: Merge fastq.gz files in Unix"
      ],
      "Top-3 Scripts": [
        "so_34775232: dirname=\"$1\"\nfor tgz in $(ls ${dirname}/*.tgz) ; do \n    echo \"tar -xzf ${tgz}\";  \n    echo \"cd  ${tgz%%.tgz}\"; \n    echo \"LoadIt\"; \n    echo \"cd ..\"; \ndone\n\ndirname=\"$1\"\nfor tgz in ${dirname}/* ; do\n   if [ \"${tgz##*\\.}\" == \"tgz\" ] then\n        echo \"tar -xzf ${tgz}\";  \n        echo \"cd  ${tgz%%.tgz}\"; \n        echo \"LoadIt\"; \n        echo \"cd ..\"; \n   fi\ndone",
        "so_16484972: $ str=\"abcdefghijklm\"\n$ echo \"${str:0:5}\"\nabcde\n\n$ echo \"${str:0}\"      # default: start from the 0th position\nabcdefghijklm\n$ echo \"${str:1:5}\"    # start from the 1th and get 5 characters\nbcdef\n$ echo \"${str:10:1}\"   # start from 10th just one character\nk\n$ echo \"${str:5}\"      # start from 5th until the end\nfghijklm",
        "so_20751925: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Package and compress multiple directories and files",
      "Most Similar TLDR Script": "zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_50625441: How to unzip a .vw.gz file in linux?",
        "au_29434: How can I maximally compress .gz files in Nautilus?"
      ],
      "Top-3 Scripts": [
        "so_50625441: ",
        "au_29434: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unrar",
      "MP Summary": "extract files from rar archives",
      "Most Similar TLDR Task": "Extract files into current directory, losing directory structure in the archive",
      "Most Similar TLDR Script": "unrar e {{compressed.rar}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_262164: How do I extract a RAR archive in Linux"
      ],
      "Top-3 Scripts": [
        "su_262164: unrar x -o- -y file.rar /usr/local/file/"
      ],
      "Explanations about Options": {
        "-o-": "Do not overwrite existing files.",
        "-y": "Assume Yes on all queries."
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44561749: How to rename .tar.gz file without extracting the contents and creating the new .tar.gz file in UBUNTU?",
        "so_54218706: gzip already has gz suffix unchanged in the script"
      ],
      "Top-3 Scripts": [
        "so_44561749: mv Existing.tar.gz New.tar.gz",
        "so_54218706: find \"$logsDirectory\" -type f \\\n              -not -path \"*/irws/*\" -not -name '*.gz' \\\n              -exec sh -c '\n                for i; do\n                    if /sbin/fuser \"$i\" > /dev/null 2>&1\n                    then\n                        gzip  \"$i\"\n                        mv -v \"$i.gz\" \"$backupDirectory\"\n                    fi\n                done' _ {} +"
      ],
      "Explanations about Options": {
        "-v": "explain what is being done"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
      "Most Similar TLDR Script": "file {{filename}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_57459: Is there a way \"extract and delete zip file\" in a single command?",
        "su_262164: How do I extract a RAR archive in Linux",
        "so_27164854: linux delete multiple lines in a file"
      ],
      "Top-3 Scripts": [
        "au_57459: ",
        "su_262164: unrar x -o- -y file.rar /usr/local/file/",
        "so_27164854: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_16353: Unpack all *.gz archives in the current directory tree",
        "nl2bash_11369: Remove all .gz files in the current directory tree",
        "nl2bash_2143: Find all *.gz files in the current directory and decompress them using gunzip"
      ],
      "Top-3 Scripts": [
        "nl2bash_16353: find . -name '*.gz' -print0 | xargs -0 gunzip",
        "nl2bash_11369: find . -name '*.gz' -type f -printf '\"%p\"\\n' | xargs rm -f",
        "nl2bash_2143: find . -name '*.gz' -print0 | xargs -0 gunzip"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Delimit output with a NUL character instead of a newline (useful when combining with `xargs`)",
      "Most Similar TLDR Script": "dirname --zero {{path/to/directory_a}} {{path/to/file_b}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory",
        "so_60231073: How to extract all .tgz files in subdirectories?"
      ],
      "Top-3 Scripts": [
        "so_34775232: dirname=\"$1\"\nfor tgz in $(ls ${dirname}/*.tgz) ; do \n    echo \"tar -xzf ${tgz}\";  \n    echo \"cd  ${tgz%%.tgz}\"; \n    echo \"LoadIt\"; \n    echo \"cd ..\"; \ndone\n\ndirname=\"$1\"\nfor tgz in ${dirname}/* ; do\n   if [ \"${tgz##*\\.}\" == \"tgz\" ] then\n        echo \"tar -xzf ${tgz}\";  \n        echo \"cd  ${tgz%%.tgz}\"; \n        echo \"LoadIt\"; \n        echo \"cd ..\"; \n   fi\ndone",
        "so_60231073: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pax",
      "MP Summary": "read and write file archives and copy directory hierarchies",
      "Most Similar TLDR Task": "Extract an archive into the current directory",
      "Most Similar TLDR Script": "pax -rf {{source.tar}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories"
      ],
      "Top-3 Scripts": [
        "su_1378797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "Extract zip file(s) (for multiple files, separate file paths by spaces)",
      "Most Similar TLDR Script": "unzip {{file(s)}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_57459: Is there a way \"extract and delete zip file\" in a single command?"
      ],
      "Top-3 Scripts": [
        "au_57459: unzip \"$item\" && trash \"$item\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zcat",
      "MP Summary": "decompress and concatenate files to standard output",
      "Most Similar TLDR Task": "Print compression details of a gzipped file to the standard output",
      "Most Similar TLDR Script": "zcat -l {{file.txt.gz}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32327389: unix commands to search a string in .gz file",
        "nl2bash_16290: Print shared lines in \"number.txt.gz\" and \"xxx.txt.gz\"",
        "so_20751925: Merge fastq.gz files in Unix"
      ],
      "Top-3 Scripts": [
        "so_32327389: zcat file.gz | grep search_pattern",
        "nl2bash_16290: zcat number.txt.gz | { zcat xxx.txt.gz | comm -12 /dev/fd/3 - ; } 3<&0",
        "so_20751925: zcat *R1*.fastq.gz | wc -l\nzcat Sample_51770BL1_R1.fastq.gz | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory",
        "so_54218706: gzip already has gz suffix unchanged in the script"
      ],
      "Top-3 Scripts": [
        "so_34775232: ",
        "so_54218706: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1385: Decompress 'file.gz' to standard output and execute the output in bash"
      ],
      "Top-3 Scripts": [
        "nl2bash_1385: gzip -d --stdout file.gz | bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1039456: Delete an application in linux",
        "so_46627951: Loop over files in tar.gz"
      ],
      "Top-3 Scripts": [
        "au_1039456: No command 'postman' found, did you mean:\n Command 'postmap' from package 'postfix' (main)\npostman: command not found",
        "so_46627951: command | while IFS= read -r line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32327389: unix commands to search a string in .gz file",
        "au_57459: Is there a way \"extract and delete zip file\" in a single command?",
        "nl2bash_5345: Find the largest original \".gz\" file in the current directory tree"
      ],
      "Top-3 Scripts": [
        "so_32327389: zcat file.gz | grep search_pattern",
        "au_57459: ",
        "nl2bash_5345: find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1"
      ],
      "Explanations about Options": {
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "If there are multiple executables which match, display all",
      "Most Similar TLDR Script": "which -a {{executable}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1039456: Delete an application in linux"
      ],
      "Top-3 Scripts": [
        "au_1039456: which postman"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to the given directory",
      "Most Similar TLDR Script": "cd {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories",
        "so_43832107: Delete contents but not directory in Linux?"
      ],
      "Top-3 Scripts": [
        "su_1378797: find . -type f -name \"*.tar.gz\" -execdir sh -c '\n   dirn=\"${1%.tar.gz}\"         # desired directory name\n   mkdir -- \"$dirn\"            # creating a directory\n   cd -- \"$dirn\" &&\n   tar -xvzf ../\"$1\"           # extracting to it\n' find-sh {} \\;",
        "so_43832107: cd dir   \nrm -r *"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1309430: unzip .tar.gz file in terminal",
        "au_1039456: Delete an application in linux"
      ],
      "Top-3 Scripts": [
        "au_1309430: ",
        "au_1039456: sudo rm-rf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories"
      ],
      "Top-3 Scripts": [
        "su_1378797: find . -type f -name \"*.tar.gz\" -execdir sh -c '\n   dirn=\"${1%.tar.gz}\"         # desired directory name\n   mkdir -- \"$dirn\"            # creating a directory\n   cd -- \"$dirn\" &&\n   tar -xvzf ../\"$1\"           # extracting to it\n' find-sh {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_498433: How can I extract specific string in Linux?",
        "so_54218706: gzip already has gz suffix unchanged in the script",
        "nl2bash_5345: Find the largest original \".gz\" file in the current directory tree"
      ],
      "Top-3 Scripts": [
        "au_498433: cat file.txt | perl -e 's/\\s//g && print \"$_\\n\" for join(\"\", <>) =~ /\\*([\\w\\s]+)[~]{0,1}\\w{3}\\*\\*TP/gm'\n\ns/\\s//g && print \"$_\\n\"\n\nprint \"$_\\n\"",
        "so_54218706: ",
        "nl2bash_5345: find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1\n\n\nfind . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories",
        "so_54218706: gzip already has gz suffix unchanged in the script"
      ],
      "Top-3 Scripts": [
        "su_1378797: find . -type f -name \"*.tar.gz\" -execdir sh -c '\n   dirn=\"${1%.tar.gz}\"         # desired directory name\n   mkdir -- \"$dirn\"            # creating a directory\n   cd -- \"$dirn\" &&\n   tar -xvzf ../\"$1\"           # extracting to it\n' find-sh {} \\;",
        "so_54218706: find \"$logsDirectory\" -type f \\\n              -not -path \"*/irws/*\" -not -name '*.gz' \\\n              -exec sh -c '\n                for i; do\n                    if /sbin/fuser \"$i\" > /dev/null 2>&1\n                    then\n                        gzip  \"$i\"\n                        mv -v \"$i.gz\" \"$backupDirectory\"\n                    fi\n                done' _ {} +\n\nsh -c"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27164854: linux delete multiple lines in a file",
        "so_54218706: gzip already has gz suffix unchanged in the script",
        "nl2bash_5345: Find the largest original \".gz\" file in the current directory tree"
      ],
      "Top-3 Scripts": [
        "so_27164854: ",
        "so_54218706: ",
        "nl2bash_5345: find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1\n\n\nfind . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "docker",
      "MP Summary": "Docker image and container command line interface",
      "Most Similar TLDR Task": "Remove a stopped container",
      "Most Similar TLDR Script": "docker rm {{container_name}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61296976: Docker not extracting .tar.gz and cannot find the file in the image"
      ],
      "Top-3 Scripts": [
        "so_61296976: docker run -it modus\n\ndocker run -it <IMAGE_ID>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fd",
      "MP Summary": "find entries in the filesystem",
      "Most Similar TLDR Task": "Find files in a specific directory",
      "Most Similar TLDR Script": "fd {{pattern}} {{path/to/dir}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_16290: Print shared lines in \"number.txt.gz\" and \"xxx.txt.gz\""
      ],
      "Top-3 Scripts": [
        "nl2bash_16290: zcat number.txt.gz | { zcat xxx.txt.gz | comm -12 /dev/fd/3 - ; } 3<&0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Remove an environment variable",
      "Most Similar TLDR Script": "export -n {{VARIABLE}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_27164854: linux delete multiple lines in a file"
      ],
      "Top-3 Scripts": [
        "so_27164854: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fuser",
      "MP Summary": "identify processes using files or sockets",
      "Most Similar TLDR Task": "Find which processes are accessing the filesystem containing a specific file or directory",
      "Most Similar TLDR Script": "fuser --mount {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54218706: gzip already has gz suffix unchanged in the script"
      ],
      "Top-3 Scripts": [
        "so_54218706: find \"$logsDirectory\" -type f \\\n              -not -path \"*/irws/*\" -not -name '*.gz' \\\n              -exec sh -c '\n                for i; do\n                    if /sbin/fuser \"$i\" > /dev/null 2>&1\n                    then\n                        gzip  \"$i\"\n                        mv -v \"$i.gz\" \"$backupDirectory\"\n                    fi\n                done' _ {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories",
        "so_50625441: How to unzip a .vw.gz file in linux?"
      ],
      "Top-3 Scripts": [
        "su_1378797: man 1 tar",
        "so_50625441: man tar\n\nman gzip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Run a multi-line find/replace expression on a file, and save the result in another file",
      "Most Similar TLDR Script": "perl -p0e 's/{{foo\\nbar}}/{{foobar}}/g' {{input_file}} > {{output_file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_498433: How can I extract specific string in Linux?"
      ],
      "Top-3 Scripts": [
        "au_498433: cat file.txt | perl -e 's/\\s//g && print \"$_\\n\" for join(\"\", <>) =~ /\\*([\\w\\s]+)[~]{0,1}\\w{3}\\*\\*TP/gm'\n\ncat file.txt | perl -e 'for$a(join(\"\", <>)=~/\\*([A-Z0-9\\s]+?)\\*\\*\\d{8}/g){$a=~s/\\s+//g;print\"$a\\n\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_498433: How can I extract specific string in Linux?"
      ],
      "Top-3 Scripts": [
        "au_498433: cat file.txt | perl -e 's/\\s//g && print \"$_\\n\" for join(\"\", <>) =~ /\\*([\\w\\s]+)[~]{0,1}\\w{3}\\*\\*TP/gm'\n\njoin(\"\", <>)\n\ncat file.txt | perl -e 'for$a(join(\"\", <>)=~/\\*([A-Z0-9\\s]+?)\\*\\*\\d{8}/g){$a=~s/\\s+//g;print\"$a\\n\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46627951: Loop over files in tar.gz"
      ],
      "Top-3 Scripts": [
        "so_46627951: tar tzf files.tar.gz | while IFS= read -r f ; do \n   echo \">>> Processing file $f\"\n   tar Oxzf files.tar.gz \"$f\" | head | cat -n ;\ndone\n\ncommand | while IFS= read -r line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "df",
      "MP Summary": "report file system disk space usage",
      "Most Similar TLDR Task": "Display filesystems but exclude the specified type",
      "Most Similar TLDR Script": "df -x {{squashfs}} -x {{tmpfs}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54218706: gzip already has gz suffix unchanged in the script"
      ],
      "Top-3 Scripts": [
        "so_54218706: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zgrep",
      "MP Summary": "search compressed files for a regular expression",
      "Most Similar TLDR Task": "Grep a compressed file for multiple patterns",
      "Most Similar TLDR Script": "zgrep -e \"{{pattern_1}}\" -e \"{{pattern_2}}\" {{path/to/compressed/file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32327389: unix commands to search a string in .gz file"
      ],
      "Top-3 Scripts": [
        "so_32327389: zgrep -e search_pattern file.gz"
      ],
      "Explanations about Options": {
        "-e": "use <pattern> as the pattern to match"
      }
    },
    {
      "Command": "ntfsfix",
      "MP Summary": "fix common errors and force Windows to check NTFS",
      "Most Similar TLDR Task": "Fix a given NTFS partition",
      "Most Similar TLDR Script": "sudo ntfsfix {{/dev/sdXN}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_365712: Resolve file deletion issue in Linux"
      ],
      "Top-3 Scripts": [
        "su_365712: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5345: Find the largest original \".gz\" file in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5345: find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1\n\n\nfind . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'"
      ],
      "Explanations about Options": {
        "-k": "sort via a key; KEYDEF gives location and type"
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory"
      ],
      "Top-3 Scripts": [
        "so_34775232: dirname=\"$1\"\nfor tgz in $(ls ${dirname}/*.tgz) ; do \n    echo \"tar -xzf ${tgz}\";  \n    echo \"cd  ${tgz%%.tgz}\"; \n    echo \"LoadIt\"; \n    echo \"cd ..\"; \ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "Most Similar TLDR Script": "touch {{filename}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54218706: gzip already has gz suffix unchanged in the script"
      ],
      "Top-3 Scripts": [
        "so_54218706: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
      "Most Similar TLDR Script": "comm {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_16290: Print shared lines in \"number.txt.gz\" and \"xxx.txt.gz\""
      ],
      "Top-3 Scripts": [
        "nl2bash_16290: zcat number.txt.gz | { zcat xxx.txt.gz | comm -12 /dev/fd/3 - ; } 3<&0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory"
      ],
      "Top-3 Scripts": [
        "so_34775232: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters in file (taking multi-byte character sets into account)",
      "Most Similar TLDR Script": "wc -m {{file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20751925: Merge fastq.gz files in Unix"
      ],
      "Top-3 Scripts": [
        "so_20751925: wc -l\n\nzcat *R1*.fastq.gz | wc -l\nzcat Sample_51770BL1_R1.fastq.gz | wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46627951: Loop over files in tar.gz"
      ],
      "Top-3 Scripts": [
        "so_46627951: command | while IFS= read -r line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`, even if the file is rotated",
      "Most Similar TLDR Script": "tail -F {{file}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5345: Find the largest original \".gz\" file in the current directory tree"
      ],
      "Top-3 Scripts": [
        "nl2bash_5345: find . -name '*.gz' -print | xargs gzip -l | awk '{ print $2, $4 ;}'  | grep -v '(totals)$' | sort -n | tail -1\n\n\nfind . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'"
      ],
      "Explanations about Options": {
        "-n": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_5345: Find the largest original \".gz\" file in the current directory tree",
        "so_46627951: Loop over files in tar.gz"
      ],
      "Top-3 Scripts": [
        "nl2bash_5345: find . -name '*.gz' | xargs gzip -l | tail -n +2 | head -n -1 | sort -k 2 | tail -n 1 | awk '{print $NF}'",
        "so_46627951: tar tzf files.tar.gz | while IFS= read -r f ; do \n   echo \">>> Processing file $f\"\n   tar Oxzf files.tar.gz \"$f\" | head | cat -n ;\ndone"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
      "Most Similar TLDR Script": "wait {{pid}}",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20751925: Merge fastq.gz files in Unix"
      ],
      "Top-3 Scripts": [
        "so_20751925: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory"
      ],
      "Top-3 Scripts": [
        "so_34775232: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "run",
      "MP Summary": "find, execute, and log the results of tests",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61296976: Docker not extracting .tar.gz and cannot find the file in the image"
      ],
      "Top-3 Scripts": [
        "so_61296976: docker run -it modus\n\ndocker run -it <IMAGE_ID>"
      ],
      "Explanations about Options": {
        "-t": "Specify a timeout value of n seconds per test."
      }
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1378797: Extract .tar.gz files in different subdirectories",
        "nl2bash_2455: Find all .gz archives in the /path/to/dir directory tree",
        "so_50625441: How to unzip a .vw.gz file in linux?"
      ],
      "Top-3 Scripts": [
        "su_1378797: find . -type f -name \"*.tar.gz\" -execdir sh -c '\n   dirn=\"${1%.tar.gz}\"         # desired directory name\n   mkdir -- \"$dirn\"            # creating a directory\n   cd -- \"$dirn\" &&\n   tar -xvzf ../\"$1\"           # extracting to it\n' find-sh {} \\;",
        "nl2bash_2455: find /path/to/dir -name \"*.gz\" -type f",
        "so_50625441: tar -jcvf archive_name.tar.bz2 /path/to/some/dir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tgz",
      "MP Summary": "makes a gzip'd tar archive",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Search for case-insensitive \"string\" in \"log.tar.gz\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "zcat log.tar.gz | grep -a -i \"string\"\n",
          "command-options": {
            "zcat": {
              "mpsum": "decompress and concatenate files to standard output"
            },
            "grep": {
              "mpsum": "print lines that match patterns",
              "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
            }
          },
          "TLDR_inform": {
            "zcat": {
              "man1_zcat_38304": "print data gzip compress file print compress detail gzip file standard output print uncompress content gzip file standard output"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34775232: Bash script to extract all .tgz in directory"
      ],
      "Top-3 Scripts": [
        "so_34775232: dirname=\"$1\"\nfor tgz in $(ls ${dirname}/*.tgz) ; do \n    echo \"tar -xzf ${tgz}\";  \n    echo \"cd  ${tgz%%.tgz}\"; \n    echo \"LoadIt\"; \n    echo \"cd ..\"; \ndone\n\ndirname=\"$1\"\nfor tgz in ${dirname}/* ; do\n   if [ \"${tgz##*\\.}\" == \"tgz\" ] then\n        echo \"tar -xzf ${tgz}\";  \n        echo \"cd  ${tgz%%.tgz}\"; \n        echo \"LoadIt\"; \n        echo \"cd ..\"; \n   fi\ndone\n\n$tgz"
      ],
      "Explanations about Options": {}
    }
  ]
}