{
  "Query": "Renaming user name",
  "Answers": [
    {
      "Command": "usermod",
      "MP Summary": "modify a user account",
      "Most Similar TLDR Task": "Change a user's name",
      "Most Similar TLDR Script": "usermod -l {{newname}} {{user}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_7222: Change a user's name",
        "ul_629: Is it possible to rename a Unix user account?"
      ],
      "Top-3 Scripts": [
        "tldr_7222: usermod -l {{newname}} {{user}}",
        "ul_629: usermod --move-home --login <new-login-name> --home <new-home-dir> <old-login-name>\n\nman usermod"
      ],
      "Explanations about Options": {
        "-l": "The name of the user will be changed from LOGIN to NEW_LOGIN. Nothing else is changed.\n In particular, the user's home directory or mail spool should probably be renamed\n manually to reflect the new login name."
      }
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Change the password of the specified user",
      "Most Similar TLDR Script": "passwd {{username}} {{new_password}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18752635: Is there a script to determine linux user name?",
        "au_900977: How should one name \"admin\" user?"
      ],
      "Top-3 Scripts": [
        "so_18752635: grep 1000:1000: /etc/passwd|cut -f1 -d':'",
        "au_900977: grep -hPo '^.+?(?=:)' /etc/passwd /etc/group | sort -u"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "finger",
      "MP Summary": "user information lookup program",
      "Most Similar TLDR Task": "Display the user's login name, real name, terminal name, and other information",
      "Most Similar TLDR Script": "finger -s",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9577: Print login name and full name of all users currently logged in and delete instances of \"of group.*\"",
        "tldr_4401: Display the user's login name, real name, terminal name, and other information"
      ],
      "Top-3 Scripts": [
        "nl2bash_9577: finger -l | awk '/^Login/' | sed 's/of group.*//g'",
        "tldr_4401: finger -s"
      ],
      "Explanations about Options": {
        "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory.",
        "-s": "Finger displays the user's login name, real name, terminal name and write status (as a\n ``*'' after the terminal name if write permission is denied), idle time, login time,\n office location and office phone number."
      }
    },
    {
      "Command": "chroot",
      "MP Summary": "run command or interactive shell with special root directory",
      "Most Similar TLDR Task": "Specify user and group (ID or name) to use",
      "Most Similar TLDR Script": "chroot --userspec={{user:group}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_1724: Specify user and group (ID or name) to use",
        "tldr_1725: Specify user and group (ID or name) to use"
      ],
      "Top-3 Scripts": [
        "tldr_1724: chroot --userspec={{user:group}}",
        "tldr_1725: chroot --userspec={{user:group}}"
      ],
      "Explanations about Options": {
        "--userspec": "specify user and group (ID or name) to use"
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_717270: Rename files owned by user who runs the script",
        "au_900977: How should one name \"admin\" user?"
      ],
      "Top-3 Scripts": [
        "au_717270: ",
        "au_900977: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_870844: recursively add directory name to file name",
        "au_717270: Rename files owned by user who runs the script",
        "au_529542: Renaming multiple files"
      ],
      "Top-3 Scripts": [
        "au_870844: $ find source -type f | rename -n 's:(^|.*/)([^/]*)/([^/]*)$:destination/$2$3:'\nrename(source/dir2/file3.ext3, destination/dir2file3.ext3)\nrename(source/dir2/dir3/file4.ext4, destination/dir3file4.ext4)\nrename(source/dir1/file1.ext1, destination/dir1file1.ext1)\nrename(source/dir1/file2.ext2, destination/dir1file2.ext2)",
        "au_717270: find . -name \"*string1*\" -user \"$USER\" -ok rename -v -- 's/(.*)\\/(.*)string1(.*)/$1\\/beginning_$2string3$3/' {} \\;\n\nfind . -name \"*string1*\" -user \"$USER\" -ok rename -v -- 's/(.*)\\/(.*)string1(.*)/$1\\/beginning_$2string3$3/' {} +",
        "au_529542: find $katalog -name '*.dav.avi' -execdir rename .dav.avi .avi {} \\;\n\nfind . -name \"*.dav.avi\" | while read file; do newFile=`echo $file | awk '{ print substr($0,1,match($0,\"\\\\[\")-1) \".avi\"; }'`; mv $file $newFile; done"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:",
        "-ok": "Like -exec but ask the user first. If the user agrees, run the command. Otherwise\n just return false. If the command is run, its standard input is redirected from\n /dev/null.",
        "-user": "File is owned by user uname (numeric user ID allowed)."
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59987406: copy file n times and rename it with specific names",
        "so_21777371: How to copy multiple files and rename them at once by appending a string in between the file names in Unix?"
      ],
      "Top-3 Scripts": [
        "so_59987406: for f in file_*.nc; do cp bash.sh \"${f%.nc}_bash.sh\"; done",
        "so_21777371: for file in *\ndo\n   name=\"${file%.*}\"\n   extension=\"${file##*.}\"\n   cp $file ${name}_my${extension}\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Do not overwrite existing files at the target",
      "Most Similar TLDR Script": "mv -n {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_102037: How to change user name",
        "ul_248932: How to rename group files",
        "so_49407882: substitute file names using rename"
      ],
      "Top-3 Scripts": [
        "ul_102037: mv /home/algo /home/mpatil",
        "ul_248932: i=0\nfor file in tl*.jpg\ndo\n    printf -v counter \"%05d\" $i\n    mv $file photo$counter.jpg\n    i=$((i+1))\ndone",
        "so_49407882: for f in *; do\n    target=$(echo \"${f}\" | sed -E 's/_[[:upper:]]{8}.*\\././')\n    mv \"${f}\" \"${target}\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "groupmod",
      "MP Summary": "modify a group definition on the system",
      "Most Similar TLDR Task": "Change the group name",
      "Most Similar TLDR Script": "groupmod -n {{new_group_name}} {{old_group_name}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_404135: Rename user's group name"
      ],
      "Top-3 Scripts": [
        "su_404135: $ groupmod --help\nUsage: groupmod [options] GROUP\n\nOptions:\n  -g, --gid GID                 change the group ID to GID\n  -h, --help                    display this help message and exit\n  -n, --new-name NEW_GROUP      change the name to NEW_GROUP\n  -o, --non-unique              allow to use a duplicate (non-unique) GID\n  -p, --password PASSWORD       change the password to this (encrypted)\n                                PASSWORD\n\ngroupmod --new-name NEW_GROUP_NAME OLD_GROUP_NAME"
      ],
      "Explanations about Options": {
        "--new-name": "The name of the group will be changed from GROUP to NEW_GROUP name."
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59987406: copy file n times and rename it with specific names",
        "ul_449965: Copy files under modified name",
        "su_1136926: How to rename multiple file name include subfolders?"
      ],
      "Top-3 Scripts": [
        "so_59987406: ",
        "ul_449965: find $folder -maxdepth 1 -type f -name \"*-[0-9].jpg\" -exec \\\nbash -c 'cp \"$1\" \"${1:0:-4}-mini.jpg\"' _ {} \\;",
        "su_1136926: find . -type f -name '*.png' -execdir bash -c 'mv \"$1\" \"${1%.png}@2x.png\"' Move {} \\;\n\n-execdir bash -c '...' Move {} \\;\n\n$ find . -type f -name '*.png' -execdir bash -c 'mv \"$1\" \"${1%.png}@2x.png\"' Move {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rename",
      "MP Summary": "rename files",
      "Most Similar TLDR Task": "Change file extensions",
      "Most Similar TLDR Script": "rename {{.ext}} {{.bak}} {{*.ext}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_870844: recursively add directory name to file name",
        "au_1182442: How to change several directories' names?",
        "au_717270: Rename files owned by user who runs the script"
      ],
      "Top-3 Scripts": [
        "au_870844: $ find source -type f | rename -n 's:(^|.*/)([^/]*)/([^/]*)$:destination/$2$3:'\nrename(source/dir2/file3.ext3, destination/dir2file3.ext3)\nrename(source/dir2/dir3/file4.ext4, destination/dir3file4.ext4)\nrename(source/dir1/file1.ext1, destination/dir1file1.ext1)\nrename(source/dir1/file2.ext2, destination/dir1file2.ext2)",
        "au_1182442: ",
        "au_717270: find . -name \"*string1*\" -user \"$USER\" -ok rename -v -- 's/(.*)\\/(.*)string1(.*)/$1\\/beginning_$2string3$3/' {} \\;\n\nfind . -name \"*string1*\" -user \"$USER\" -ok rename -v -- 's/(.*)\\/(.*)string1(.*)/$1\\/beginning_$2string3$3/' {} +"
      ],
      "Explanations about Options": {
        "-n": "Do not make any changes; add --verbose to see what would be made.",
        "-v": "Show which files were renamed, if any."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_248932: How to rename group files",
        "so_22315490: How to rename this files",
        "su_549788: Batch rename files in linux using folder name"
      ],
      "Top-3 Scripts": [
        "ul_248932: i=0\nfor file in tl*.jpg\ndo\n    printf -v counter \"%05d\" $i\n    mv $file photo$counter.jpg\n    i=$((i+1))\ndone",
        "so_22315490: for file in [0-9]*.txt; do     \n  mv \"$file\" $(printf %04d.%s ${file%.*} ${file##*.})\ndone\n\n$ touch 1.txt 2.txt 3.txt\n$ ls\n1.txt  2.txt  3.txt\n$ for file in [0-9]*.txt; do     \nmv \"$file\" $(printf %04d.%s ${file%.*} ${file##*.})\ndone\n$ ls\n0001.txt  0002.txt  0003.txt",
        "su_549788: #!/bin/bash\nfor year in 20??; do\n  pushd \"$year\"\n  for file in *; do\n    echo mv \"$file\" ../\"Folder ${year} - ${file}\"\n  done\n  popd\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49407882: substitute file names using rename",
        "su_549788: Batch rename files in linux using folder name",
        "so_58788701: Bash rename files with duplicated file names"
      ],
      "Top-3 Scripts": [
        "so_49407882: for f in *; do\n    target=$(echo \"${f}\" | sed -E 's/_[[:upper:]]{8}.*\\././')\n    mv \"${f}\" \"${target}\"\ndone",
        "su_549788: #!/bin/bash\nfor year in 20??; do\n  pushd \"$year\"\n  for file in *; do\n    echo mv \"$file\" ../\"Folder ${year} - ${file}\"\n  done\n  popd\ndone",
        "so_58788701: for fname in *; do\n  # remove extension\n  name=\"${fname%.*}\"\n  # extract the half and append extension\n  echo mv -- \"$fname\" \"${name::${#name}/2-1}.${fname##*.}\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace all occurrences of a string in a file, overwriting the file (i.e. in-place)",
      "Most Similar TLDR Script": "sed -i 's/{{find}}/{{replace}}/g' {{filename}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49407882: substitute file names using rename",
        "nl2bash_9577: Print login name and full name of all users currently logged in and delete instances of \"of group.*\""
      ],
      "Top-3 Scripts": [
        "so_49407882: for f in *; do\n    target=$(echo \"${f}\" | sed -E 's/_[[:upper:]]{8}.*\\././')\n    mv \"${f}\" \"${target}\"\ndone",
        "nl2bash_9577: finger -l | awk '/^Login/' | sed 's/of group.*//g'"
      ],
      "Explanations about Options": {
        "-E": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command",
        "nl2bash_9399: Print all user names and terminals of users who are logged in",
        "nl2bash_9389: Print all logins formatted as \"The user USER is on TTY\" where USER is the user name and TTY is the login terminal"
      ],
      "Top-3 Scripts": [
        "so_15464439: ",
        "nl2bash_9399: who | awk '{ print $1, $2 }'",
        "nl2bash_9389: who | awk '{print \"The user \" $1 \" is on \" $2}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22315490: How to rename this files"
      ],
      "Top-3 Scripts": [
        "so_22315490: $ touch 1.txt 2.txt 3.txt\n$ ls\n1.txt  2.txt  3.txt\n$ for file in [0-9]*.txt; do     \nmv \"$file\" $(printf %04d.%s ${file%.*} ${file##*.})\ndone\n$ ls\n0001.txt  0002.txt  0003.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command",
        "nl2bash_9399: Print all user names and terminals of users who are logged in",
        "nl2bash_9389: Print all logins formatted as \"The user USER is on TTY\" where USER is the user name and TTY is the login terminal"
      ],
      "Top-3 Scripts": [
        "so_15464439: ",
        "nl2bash_9399: who | awk '{ print $1, $2 }'",
        "nl2bash_9389: who | awk '{print \"The user \" $1 \" is on \" $2}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "who",
      "MP Summary": "show who is logged on",
      "Most Similar TLDR Task": "Display information only for the current terminal session",
      "Most Similar TLDR Script": "who am i",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9399: Print all user names and terminals of users who are logged in",
        "nl2bash_9389: Print all logins formatted as \"The user USER is on TTY\" where USER is the user name and TTY is the login terminal"
      ],
      "Top-3 Scripts": [
        "nl2bash_9399: who | awk '{ print $1, $2 }'\n\n\nwho | cut -d \" \" -f1,2",
        "nl2bash_9389: who | awk '{print \"The user \" $1 \" is on \" $2}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_248932: How to rename group files",
        "so_22315490: How to rename this files"
      ],
      "Top-3 Scripts": [
        "ul_248932: i=0\nfor file in tl*.jpg\ndo\n    printf -v counter \"%05d\" $i\n    mv $file photo$counter.jpg\n    i=$((i+1))\ndone",
        "so_22315490: for file in [0-9]*.txt; do     \n  mv \"$file\" $(printf %04d.%s ${file%.*} ${file##*.})\ndone\n\n$ touch 1.txt 2.txt 3.txt\n$ ls\n1.txt  2.txt  3.txt\n$ for file in [0-9]*.txt; do     \nmv \"$file\" $(printf %04d.%s ${file%.*} ${file##*.})\ndone\n$ ls\n0001.txt  0002.txt  0003.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_629: Is it possible to rename a Unix user account?",
        "so_59394233: Rename only unique files"
      ],
      "Top-3 Scripts": [
        "ul_629: man usermod",
        "so_59394233: man bash\n\nman test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_9399: Print all user names and terminals of users who are logged in",
        "so_18752635: Is there a script to determine linux user name?"
      ],
      "Top-3 Scripts": [
        "nl2bash_9399: who | cut -d \" \" -f1,2",
        "so_18752635: grep 1000:1000: /etc/passwd|cut -f1 -d':'"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter"
      }
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_409853: How to replace the user IDs and group IDs with names instead of numbers in \"ps\"?"
      ],
      "Top-3 Scripts": [
        "ul_409853: ps -o pid,euser,egroup"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command"
      ],
      "Top-3 Scripts": [
        "so_15464439: command [cat file.txt] by sputnick  mer. f\u00e9vr. 13 15:34:44 CET 2013\ncommand [cat l.py] by sputnick  mer. f\u00e9vr. 13 15:45:38 CET 2013\ncommand [cat foobar.pl] by marc  mer. f\u00e9vr. 13 15:47:54 CET 2013"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18752635: Is there a script to determine linux user name?",
        "au_900977: How should one name \"admin\" user?"
      ],
      "Top-3 Scripts": [
        "so_18752635: grep 1000:1000: /etc/passwd|cut -f1 -d':'",
        "au_900977: grep -hPo '^.+?(?=:)' /etc/passwd /etc/group | sort -u"
      ],
      "Explanations about Options": {
        "-h": "Suppress the prefixing of file names on output. This is the default when there is\n only one file (or only standard input) to search.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command"
      ],
      "Top-3 Scripts": [
        "so_15464439: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command"
      ],
      "Top-3 Scripts": [
        "so_15464439: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
      "Most Similar TLDR Script": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63222374: linux rename file names recursively"
      ],
      "Top-3 Scripts": [
        "so_63222374: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "Most Similar TLDR Script": "touch {{filename}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22315490: How to rename this files"
      ],
      "Top-3 Scripts": [
        "so_22315490: $ touch 1.txt 2.txt 3.txt\n$ ls\n1.txt  2.txt  3.txt\n$ for file in [0-9]*.txt; do     \nmv \"$file\" $(printf %04d.%s ${file%.*} ${file##*.})\ndone\n$ ls\n0001.txt  0002.txt  0003.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_900977: How should one name \"admin\" user?"
      ],
      "Top-3 Scripts": [
        "au_900977: grep -hPo '^.+?(?=:)' /etc/passwd /etc/group | sort -u"
      ],
      "Explanations about Options": {
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run"
      }
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59394233: Rename only unique files"
      ],
      "Top-3 Scripts": [
        "so_59394233: man test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_529542: Renaming multiple files"
      ],
      "Top-3 Scripts": [
        "au_529542: find . -name \"*.dav.avi\" | while read file; do newFile=`echo $file | awk '{ print substr($0,1,match($0,\"\\\\[\")-1) \".avi\"; }'`; mv $file $newFile; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_626576: How to rename a batch file"
      ],
      "Top-3 Scripts": [
        "ul_626576: LC_COLLATE=C n=0 sh -c '\nfor i in ./*.mp4; do echo mv \"$i\" \"test$((n+=1)).mp4\"; done'"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_404135: Rename user's group name"
      ],
      "Top-3 Scripts": [
        "su_404135: $ groupmod --help\nUsage: groupmod [options] GROUP\n\nOptions:\n  -g, --gid GID                 change the group ID to GID\n  -h, --help                    display this help message and exit\n  -n, --new-name NEW_GROUP      change the name to NEW_GROUP\n  -o, --non-unique              allow to use a duplicate (non-unique) GID\n  -p, --password PASSWORD       change the password to this (encrypted)\n                                PASSWORD"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "by",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command"
      ],
      "Top-3 Scripts": [
        "so_15464439: command [cat file.txt] by sputnick  mer. f\u00e9vr. 13 15:34:44 CET 2013\ncommand [cat l.py] by sputnick  mer. f\u00e9vr. 13 15:45:38 CET 2013\ncommand [cat foobar.pl] by marc  mer. f\u00e9vr. 13 15:47:54 CET 2013"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "marc",
      "MP Summary": "archive merger",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15464439: Name of the users which executed a command"
      ],
      "Top-3 Scripts": [
        "so_15464439: command [cat file.txt] by sputnick  mer. f\u00e9vr. 13 15:34:44 CET 2013\ncommand [cat l.py] by sputnick  mer. f\u00e9vr. 13 15:45:38 CET 2013\ncommand [cat foobar.pl] by marc  mer. f\u00e9vr. 13 15:47:54 CET 2013"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_404135: Rename user's group name"
      ],
      "Top-3 Scripts": [
        "su_404135: $ groupmod --help\nUsage: groupmod [options] GROUP\n\nOptions:\n  -g, --gid GID                 change the group ID to GID\n  -h, --help                    display this help message and exit\n  -n, --new-name NEW_GROUP      change the name to NEW_GROUP\n  -o, --non-unique              allow to use a duplicate (non-unique) GID\n  -p, --password PASSWORD       change the password to this (encrypted)\n                                PASSWORD"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "display",
      "MP Summary": "displays an image or image sequence on any X server.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_404135: Rename user's group name"
      ],
      "Top-3 Scripts": [
        "su_404135: $ groupmod --help\nUsage: groupmod [options] GROUP\n\nOptions:\n  -g, --gid GID                 change the group ID to GID\n  -h, --help                    display this help message and exit\n  -n, --new-name NEW_GROUP      change the name to NEW_GROUP\n  -o, --non-unique              allow to use a duplicate (non-unique) GID\n  -p, --password PASSWORD       change the password to this (encrypted)\n                                PASSWORD"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_404135: Rename user's group name"
      ],
      "Top-3 Scripts": [
        "su_404135: $ groupmod --help\nUsage: groupmod [options] GROUP\n\nOptions:\n  -g, --gid GID                 change the group ID to GID\n  -h, --help                    display this help message and exit\n  -n, --new-name NEW_GROUP      change the name to NEW_GROUP\n  -o, --non-unique              allow to use a duplicate (non-unique) GID\n  -p, --password PASSWORD       change the password to this (encrypted)\n                                PASSWORD"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "folder",
      "MP Summary": "set/list current folder/message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_449965: Copy files under modified name"
      ],
      "Top-3 Scripts": [
        "ul_449965: find $folder -maxdepth 1 -type f -name \"*-[0-9].jpg\" -exec \\\nbash -c 'cp \"$1\" \"${1:0:-4}-mini.jpg\"' _ {} \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "admin",
      "MP Summary": "create and administer SCCS files (DEVELOPMENT)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_900977: How should one name \"admin\" user?"
      ],
      "Top-3 Scripts": [
        "au_900977: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Print each logged in user's full name",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "finger -l | grep \"Name:\" | cut -d \":\" -f 3 | cut -c 2- | sort | uniq\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program",
              "-l": "Produces a multi-line format displaying all of the information described for the -s\n option as well as the user's home directory, home phone number, login shell, mail\n status, and the contents of the files \u201c.plan\u201d, \u201c.project\u201d, \u201c.pgpkey\u201d and \u201c.forward\u201d\n from the user's home directory."
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-c": "select only these characters",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        },
        "1": {
          "script": "finger | awk 'NR>1{print $2,$3}'\n",
          "command-options": {
            "finger": {
              "mpsum": "user information lookup program"
            },
            "awk": {
              "mpsum": "pattern scanning and processing language"
            },
            "print": {
              "mpsum": "execute programs via entries in the mailcap file"
            }
          },
          "TLDR_inform": {
            "finger": {
              "man1_finger_10100": "user inform lookup program display inform specif user display inform current log user display user login name real name termin name inform prevent match user name use login name produc multi-lin output format display inform -s well user home directori home phone number login shell mail statu etc"
            },
            "awk": {
              "man1_awk_1998": "versatil program languag work file print valu start third column print differ valu base condit print everi third line start first line print fifth column k\nfield space-separ file print last column line file use comma instead space field separ print second column line contain someth space-separ file sum valu first column pretty-print valu total sum valu first column file print total"
            },
            "print": {
              "man1_print_27217": "alia run-mailcap action print\norigin run-mailcap use process mime-typ file print action use print file default run-mailcap tool run-mailcap"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_451375: Rename an alphanumeric file"
      ],
      "Top-3 Scripts": [
        "ul_451375: for file in /dir/*.txt; do\n    mv \"$file\" \"${file%_*}_Others.txt\"\ndone"
      ],
      "Explanations about Options": {}
    }
  ]
}