{
  "Query": "How to do a recursive find/replace of a string with awk or sed?",
  "Answers": [
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15920276: Find and Replace string in all files recursive using grep and sed",
        "so_38229462: Grep/Sed: How to do a recursive find/replace of a string?",
        "so_33455069: Awk/Sed: How to do a recursive find/replace of a string in files with a certain file extension?"
      ],
      "Top-3 Scripts": [
        "so_15920276: grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g",
        "so_38229462: sed -i.bak 's/httpaccess/httpaccesabc/g' access.html\n\nsed -i.bak 's/httpaccess/&abc/g' access.html",
        "so_33455069: sed -i 's/previousword/newword/g' /myprojects/file1.cpp /myprojects/file2.cpp ...\n\nfind /myprojects -type f -name '*.cpp' -print0 | \n  xargs -0 echo sed -i 's/previousword/newword/g'\n\nfind /myprojects -type f -name '*.cpp' -print0 | \n   xargs -0 -n 1 sed -i 's/previousword/newword/g'\n\nfind /myprojects -type f -name '*.cpp' -exec sed -i 's/previousword/newword/g' '{}' +"
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33455069: Awk/Sed: How to do a recursive find/replace of a string in files with a certain file extension?",
        "so_4793892: Recursively rename files using find and sed",
        "so_43130251: How to replace string in files recursively via sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_33455069: find /myprojects -type f -name '*.cpp' -print0 | \n  xargs -0 echo sed -i 's/previousword/newword/g'",
        "so_4793892: find . -exec echo `echo \"{}\" | sed 's/./foo/g'` \\;\n\n#!/bin/sh\necho \"$1\" | sed 's/_test.rb$/_spec.rb/'",
        "so_43130251: echo \"${filesList}\" | xargs sed -i ..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15920276: Find and Replace string in all files recursive using grep and sed",
        "so_33455069: Awk/Sed: How to do a recursive find/replace of a string in files with a certain file extension?",
        "so_43130251: How to replace string in files recursively via sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_15920276: grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g",
        "so_33455069: find ... -print0 | xargs -0 -n 1 ...\n\nfind ... -print0 | xargs -0 ...\n\nfind /myprojects -type f -name '*.cpp' -print0 | \n  xargs -0 echo sed -i 's/previousword/newword/g'\n\nfind /myprojects -type f -name '*.cpp' -print0 | \n   xargs -0 -n 1 sed -i 's/previousword/newword/g'",
        "so_43130251: echo \"${filesList}\" | xargs sed -i ..."
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
        "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit."
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15920276: Find and Replace string in all files recursive using grep and sed",
        "so_33923469: issue with piping find into sed (find and replace)",
        "so_66775781: How to get value after space in string with sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_15920276: grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g",
        "so_33923469: in=\"$FIND\" out=\"$REPLACEWITH\" find \"$DIRECTORY\" -type f -name '*.html' \\\n  -exec grep -F -q -e \"$FIND\" '{}' ';' \\\n  -exec perl -pi -e 's/\\Q$ENV{\"in\"}/$ENV{\"out\"}/g' '{}' +",
        "so_66775781: echo \"./country-flag vendor/country-flag\" | grep -Po '\\b[^ ]+$'"
      ],
      "Explanations about Options": {
        "-q": "Quiet; do not write anything to standard output. Exit immediately with zero status\n if any match is found, even if an error was detected. Also see the -s or\n --no-messages option.",
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
        "-l": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
        "-F": "Interpret PATTERNS as fixed strings, not regular expressions.",
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by matching multiple patterns",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33455069: Awk/Sed: How to do a recursive find/replace of a string in files with a certain file extension?",
        "so_4793892: Recursively rename files using find and sed",
        "so_9577204: Find/sed: How can I recursively search/replace a string in files but only for lines that match a particular regexp"
      ],
      "Top-3 Scripts": [
        "so_33455069: find ... -exec ... {} \\;\n\nfind ... -print0 | xargs -0 -n 1 ...\n\nfind ... -exec ... {} +\n\nfind ... -print0 | xargs -0 ...\n\nfind /myprojects -type f -name '*.cpp' -print0 | \n  xargs -0 echo sed -i 's/previousword/newword/g'\n\nfind /myprojects -type f -name '*.cpp' -print0 | \n   xargs -0 -n 1 sed -i 's/previousword/newword/g'\n\nfind /myprojects -type f -name '*.cpp' -exec sed -i 's/previousword/newword/g' '{}' +",
        "so_4793892: find . -exec echo `echo \"{}\" | sed 's/./foo/g'` \\;",
        "so_9577204: find /path/to/files -type f -print0 | \\\n  xargs -0 sed -i '/^matchstr/{s/oldstring/newstring/g}'"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl statement",
      "Most Similar TLDR Script": "perl -e {{perl_statement}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_324118: Replace string in multiple files using find and sed",
        "ul_477836: Find and replace a pattern using sed or awk",
        "so_40502864: Replacing a pattern with awk or sed"
      ],
      "Top-3 Scripts": [
        "ul_324118: perl -pi -e 's!original!result!g' *java",
        "ul_477836: sed -e 's/REF\\*SY\\*[0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/REF*SY*111111111/g'\nperl -pe 's/REF\\*SY\\*[0-9]{9}REF*SY*111111111/g'",
        "so_40502864: $ perl -pe 's/,[^|]*//g' ip.txt \n12345343|559|-2|20161108000000|FL|62|0|S\n3434344|-100000|20161108000000|GL|135|0|S\n45454545|214|-2000|20161108000001||21|77440|S"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61023717: Find and replace each instance of a single string with another from a list or file",
        "ul_74787: Use sed to find whole word and replace",
        "so_65706721: Unix: Replace line with string in another file"
      ],
      "Top-3 Scripts": [
        "so_61023717: sed '0,/REPLACEME/s//$line/'\n\n$line",
        "ul_74787: substitute\n   (^ start of line OR space)\n   test3\n   (space OR end of line)\nwith match 1 (AKA space or start of line)",
        "so_65706721: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22068233: Awk string replacement",
        "so_40502864: Replacing a pattern with awk or sed",
        "ul_432698: Find and Replace Duplicates"
      ],
      "Top-3 Scripts": [
        "so_22068233: awk 'BEGIN{FS=OFS=\",\"} \n     {for (i=1; i<=NF; i++) if (length($i)>300) $i=substr($i,1,300)}\n     1' file.csv",
        "so_40502864: $ awk '{gsub(/,[^|]*/,\"\")} 1' ip.txt \n12345343|559|-2|20161108000000|FL|62|0|S\n3434344|-100000|20161108000000|GL|135|0|S\n45454545|214|-2000|20161108000001||21|77440|S\n\n$ awk 'gsub(/,[^|]*/,\"\")+1' ip.txt \n12345343|559|-2|20161108000000|FL|62|0|S\n3434344|-100000|20161108000000|GL|135|0|S\n45454545|214|-2000|20161108000001||21|77440|S",
        "ul_432698: awk -F, '{ COMMA=\"\";i=0; while (++i<=NF) {\n           $1=$i; printf (!seen[$1]++)?COMMA$i:\"\"; COMMA=\",\"}; print \"\"\n}' infile.csv\n\nawk  'NR==1; NR>1{id=$1\"\\t\"; COMMA=$1=\"\";split($0, ar, /,| /); \n    for(i in ar){if(ar[i]!=\"\"){printf(!seen[ar[i]]++)?id\"\"COMMA\"\"ar[i]:\"\"; COMMA=\",\";id=\"\"}\n} print \"\"}' infile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48535989: sed: unable to find and replace",
        "so_28963149: string replacement in unix",
        "so_10902292: Sed find,match and replace"
      ],
      "Top-3 Scripts": [
        "so_48535989: cat CUSTOMER_REPORT.txt | sed -e \"s/%customernumbers%/(12345,67890)/g\" > temp.sql\n\ncat -vTE customernumber.txt",
        "so_28963149: ",
        "so_10902292: cat tmp | sed 's/\\bfi[^ ]*/(&)/g'"
      ],
      "Explanations about Options": {
        "-E": "display $ at end of each line",
        "-T": "display TAB characters as ^I",
        "-v": "use ^ and M- notation, except for LFD and TAB"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_432698: Find and Replace Duplicates",
        "so_16681140: sed find/replace lines with whitespaces",
        "so_39545853: replace string with underscore and dots using sed or awk"
      ],
      "Top-3 Scripts": [
        "ul_432698: awk -F, '{ COMMA=\"\";i=0; while (++i<=NF) {\n           $1=$i; printf (!seen[$1]++)?COMMA$i:\"\"; COMMA=\",\"}; print \"\"\n}' infile.csv\n\nawk  'NR==1; NR>1{id=$1\"\\t\"; COMMA=$1=\"\";split($0, ar, /,| /); \n    for(i in ar){if(ar[i]!=\"\"){printf(!seen[ar[i]]++)?id\"\"COMMA\"\"ar[i]:\"\"; COMMA=\",\";id=\"\"}\n} print \"\"}' infile",
        "so_16681140: $ printf '%s\\n' \\\n     '%s/\\([[:space:]]*enable-cache[[:space:]]\\+passwd[[:space:]]\\+\\)no[[:space:]]*/\\1yes/' \\\n     'wq' \\\n    | ex file-to-modify -s -",
        "so_39545853: printf '%s' \"$stringZ\" | sed -e 's/\\([[:lower:]]\\+\\.[[:lower:]]\\+\\.[[:lower:]]\\+\\.[[:lower:]]\\+\\.[[:lower:]]\\+\\.[[:lower:]]\\+\\.[[:lower:]]\\+\\.\\)//g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character in a file, and print the result",
      "Most Similar TLDR Script": "tr {{find_character}} {{replace_character}} < {{filename}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29498696: BASH find and replace in all files in directory using FIND and SED"
      ],
      "Top-3 Scripts": [
        "so_29498696: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11266898: How can I change file content with find and awk?"
      ],
      "Top-3 Scripts": [
        "so_11266898: find . -iregex .+\\.xml -print \\\n-exec bash -c \"awk '{print gensub(/(.*?)=\\\\\"(@(\\+|)id)\\/(.+)\\\\\"/, \\\"\\\\1=\\\"\\\\2/prefix_\\\\4\\\\\"\\\", \\\"g\\\", \\$1);}' {} > {}.NEW\" \\;\n\nfind . -name '111.xml' -exec bash -c \"awk '\\$0 ~ /\\\"/ { print \\$0 }' {} > {}.NEW\" \\;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_74787: Use sed to find whole word and replace",
        "so_21282376: String replacement in a text file",
        "so_24830016: Recursive wildcard search and replace"
      ],
      "Top-3 Scripts": [
        "ul_74787: $ sed 's/\\(^\\| \\)test3\\( \\|$\\)/\\1/g' file\ntest3.legacy test4.legacy test3.kami\n\n$ sed 's/test3\\.\\?[^ ]* *//g' file\ntest4.legacy",
        "so_21282376: sed '/cbr/s/^D/r/' file\n      ^^^ ^ ^^ ^\n       |  | |  |\n       |  | |  replace with \"r\"\n       |  | starting with \"D\"\n       |  replace\n     string containing \"cbr\"\n\nsed s/findsomething/andreplace/' file",
        "so_24830016: sed -r 's|(style=\"position:absolute;top:[0-9]+)(px)?(;left:[0-9]+)(px)?(\">)|\\1px\\3px\\5|g' file\n\nsed -r -e 's@((top|left):[0-9]+)(px)?@\\1px@g' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fgrep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Search only lines that match entirely in files",
      "Most Similar TLDR Script": "fgrep -x {{path/to/file1}} {{path/to/file2}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33923469: issue with piping find into sed (find and replace)"
      ],
      "Top-3 Scripts": [
        "so_33923469: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Use standard input to count lines, words and characters (bytes) in that order",
      "Most Similar TLDR Script": "{{find .}} | wc",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48535989: sed: unable to find and replace"
      ],
      "Top-3 Scripts": [
        "so_48535989: wc -l customernumber.txt"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59634170: How to properly find and replace a multiline text using sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_59634170: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pwd",
      "MP Summary": "print name of current/working directory",
      "Most Similar TLDR Task": "Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path)",
      "Most Similar TLDR Script": "pwd -P",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28963149: string replacement in unix"
      ],
      "Top-3 Scripts": [
        "so_28963149: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_65706721: Unix: Replace line with string in another file"
      ],
      "Top-3 Scripts": [
        "so_65706721: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16681140: sed find/replace lines with whitespaces"
      ],
      "Top-3 Scripts": [
        "so_16681140: $ sed -r -e \\\n     's/^([[:space:]]*enable-cache[[:space:]]+passwd[[:space:]]+)no([[:space:]]*)$/\\1yes\\2/' \\\n     <input-file >output-file \\\n     && mv output-file input-file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_4793892: Recursively rename files using find and sed"
      ],
      "Top-3 Scripts": [
        "so_4793892: sh -c"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "ed",
      "MP Summary": "line-oriented text editor",
      "Most Similar TLDR Task": "Start ed, editing an empty document (which can be saved as a new file in the current directory)",
      "Most Similar TLDR Script": "ed",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16681140: sed find/replace lines with whitespaces"
      ],
      "Top-3 Scripts": [
        "so_16681140: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1146898: Find/replace on specific column in large file with multiple patterns"
      ],
      "Top-3 Scripts": [
        "su_1146898: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36815665: Complicated string replacement in files"
      ],
      "Top-3 Scripts": [
        "so_36815665: unterminated s' command"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1146898: Find/replace on specific column in large file with multiple patterns"
      ],
      "Top-3 Scripts": [
        "su_1146898: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_432698: Find and Replace Duplicates",
        "so_66658520: Replace/Remove only the first occurrence found in a string",
        "so_28963149: string replacement in unix"
      ],
      "Top-3 Scripts": [
        "ul_432698: awk -F, '{ COMMA=\"\";i=0; while (++i<=NF) {\n           $1=$i; printf (!seen[$1]++)?COMMA$i:\"\"; COMMA=\",\"}; print \"\"\n}' infile.csv\n\nawk  'NR==1; NR>1{id=$1\"\\t\"; COMMA=$1=\"\";split($0, ar, /,| /); \n    for(i in ar){if(ar[i]!=\"\"){printf(!seen[ar[i]]++)?id\"\"COMMA\"\"ar[i]:\"\"; COMMA=\",\";id=\"\"}\n} print \"\"}' infile",
        "so_66658520: ",
        "so_28963149: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59634170: How to properly find and replace a multiline text using sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_59634170: sed -z 's/  type pulse\\n  fallback \"sysdefault\"\\n  hint {\\n    show on\\n    description \"Default ALSA Output (currently PulseAudio Sound Server)\"\\n  }/  type plug\\n      slave.pcm hw/g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download a file, saving the output under the filename indicated by the URL",
      "Most Similar TLDR Script": "curl -O {{http://example.com/filename}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61023717: Find and replace each instance of a single string with another from a list or file"
      ],
      "Top-3 Scripts": [
        "so_61023717: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "stat",
      "MP Summary": "display file or file system status",
      "Most Similar TLDR Task": "Show only octal file permissions",
      "Most Similar TLDR Script": "stat -c \"%a %n\" {{file}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33455069: Awk/Sed: How to do a recursive find/replace of a string in files with a certain file extension?"
      ],
      "Top-3 Scripts": [
        "so_33455069: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add/Delete an ip address to an interface",
      "Most Similar TLDR Script": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_65706721: Unix: Replace line with string in another file"
      ],
      "Top-3 Scripts": [
        "so_65706721: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Show only the processes with the given PID(s), passed as a comma-separated list. (Normally you wouldn't know PIDs off hand. This example picks the PIDs from the process name)",
      "Most Similar TLDR Script": "top -p $(pgrep -d ',' {{process_name}})",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24830016: Recursive wildcard search and replace"
      ],
      "Top-3 Scripts": [
        "so_24830016: sed -r -e 's@((top|left):[0-9]+)(px)?@\\1px@g' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Search for manpages containing a search string",
      "Most Similar TLDR Script": "man -k \"{{search string}}\"",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_477836: Find and replace a pattern using sed or awk"
      ],
      "Top-3 Scripts": [
        "ul_477836: man sed"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current group identity as a number",
      "Most Similar TLDR Script": "id -g",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_432698: Find and Replace Duplicates"
      ],
      "Top-3 Scripts": [
        "ul_432698: awk  'NR==1; NR>1{id=$1\"\\t\"; COMMA=$1=\"\";split($0, ar, /,| /); \n    for(i in ar){if(ar[i]!=\"\"){printf(!seen[ar[i]]++)?id\"\"COMMA\"\"ar[i]:\"\"; COMMA=\",\";id=\"\"}\n} print \"\"}' infile\n\nid  emails\n1       jeff@email.com\n2       larry@email.com\n3       jprice@email.com,jeff@stacko.com"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15920276: Find and Replace string in all files recursive using grep and sed",
        "so_9577204: Find/sed: How can I recursively search/replace a string in files but only for lines that match a particular regexp",
        "so_32191705: Replace string in shell using sed or Perl?"
      ],
      "Top-3 Scripts": [
        "so_15920276: grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g",
        "so_9577204: find /path/to/files -type f -print0 | \\\n  xargs -0 sed -i '/^matchstr/{s/oldstring/newstring/g}'",
        "so_32191705: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "folder",
      "MP Summary": "set/list current folder/message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15920276: Find and Replace string in all files recursive using grep and sed"
      ],
      "Top-3 Scripts": [
        "so_15920276: grep -rl $oldstring /path/to/folder | xargs sed -i s@$oldstring@$newstring@g"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "getconf",
      "MP Summary": "get configuration values",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33455069: Awk/Sed: How to do a recursive find/replace of a string in files with a certain file extension?"
      ],
      "Top-3 Scripts": [
        "so_33455069: getconf ARG_MAX"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "new",
      "MP Summary": "report on nmh folders with new messages",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9577204: Find/sed: How can I recursively search/replace a string in files but only for lines that match a particular regexp"
      ],
      "Top-3 Scripts": [
        "so_9577204: s/old/new/g"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "match",
      "MP Summary": "Match strings against glob patterns",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_74787: Use sed to find whole word and replace"
      ],
      "Top-3 Scripts": [
        "ul_74787: substitute\n   (^ start of line OR space)\n   test3\n   (space OR end of line)\nwith match 1 (AKA space or start of line)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "or",
      "MP Summary": "A user friendly system monitoring program.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_74787: Use sed to find whole word and replace"
      ],
      "Top-3 Scripts": [
        "ul_74787: substitute\n   (^ start of line OR space)\n   test3\n   (space OR end of line)\nwith match 1 (AKA space or start of line)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "replace",
      "MP Summary": "a string-replacement utility",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_21282376: String replacement in a text file"
      ],
      "Top-3 Scripts": [
        "so_21282376: sed '/cbr/s/^D/r/' file\n      ^^^ ^ ^^ ^\n       |  | |  |\n       |  | |  replace with \"r\"\n       |  | starting with \"D\"\n       |  replace\n     string containing \"cbr\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sys",
      "MP Summary": "Reports the compile-time CPU/operating system type",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1146898: Find/replace on specific column in large file with multiple patterns"
      ],
      "Top-3 Scripts": [
        "su_1146898: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "repl",
      "MP Summary": "reply to an nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1146898: Find/replace on specific column in large file with multiple patterns"
      ],
      "Top-3 Scripts": [
        "su_1146898: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "input",
      "MP Summary": "Yagi-Uda project antenna defining program",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48535989: sed: unable to find and replace",
        "so_48043172: Replace parameter value using sed or awk"
      ],
      "Top-3 Scripts": [
        "so_48535989: sed -e \"s/%customernumbers%/$input/g\" > temp.sql",
        "so_48043172: sed -e '/#/!s/\\(A_place[[:space:]]*=[[:space:]]*\\)\\(.*\\)/\\1\"new_value\"/'  input"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "style",
      "MP Summary": "analyse surface characteristics of a document",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24830016: Recursive wildcard search and replace"
      ],
      "Top-3 Scripts": [
        "so_24830016: sed -r 's|(style=\"position:absolute;top:[0-9]+)(px)?(;left:[0-9]+)(px)?(\">)|\\1px\\3px\\5|g' file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ex",
      "MP Summary": "text editor",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_16681140: sed find/replace lines with whitespaces"
      ],
      "Top-3 Scripts": [
        "so_16681140: $ printf '%s\\n' \\\n     '%s/\\([[:space:]]*enable-cache[[:space:]]\\+passwd[[:space:]]\\+\\)no[[:space:]]*/\\1yes/' \\\n     'wq' \\\n    | ex file-to-modify -s -"
      ],
      "Explanations about Options": {
        "-": "Place the end of the specified line at the bottom of the display.",
        "-s": "Enter batch mode; applicable only to ex edit sessions. Batch mode is useful when\n running ex scripts. Prompts, informative messages and other user oriented message\n are turned off, and no startup files or environmental variables are read. This is\n the POSIX 1003.2 interface for the historic \u201c-\u201d argument. Nex/nvi supports both\n the old and new syntax."
      }
    },
    {
      "Command": "next",
      "MP Summary": "show the next nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28963149: string replacement in unix",
        "so_65706721: Unix: Replace line with string in another file"
      ],
      "Top-3 Scripts": [
        "so_28963149: ",
        "so_65706721: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "NF",
      "MP Summary": "awk and print a column (based on the name of the program, 1-9)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28963149: string replacement in unix"
      ],
      "Top-3 Scripts": [
        "so_28963149: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cccc",
      "MP Summary": "C and C++ Code Counter, a software metrics tool",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28963149: string replacement in unix"
      ],
      "Top-3 Scripts": [
        "so_28963149: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bar",
      "MP Summary": "show information about a data transfer",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_36795: find & sed (search and replace)"
      ],
      "Top-3 Scripts": [
        "ul_36795: find . -name \"*.java\" -exec sed -i '' s/foo/bar/g {} +\n\nfind . -name \"*.java\" -exec sed -i s/foo/bar/g {} +"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "show",
      "MP Summary": "display nmh messages",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59634170: How to properly find and replace a multiline text using sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_59634170: sed -z 's/  type pulse\\n  fallback \"sysdefault\"\\n  hint {\\n    show on\\n    description \"Default ALSA Output (currently PulseAudio Sound Server)\"\\n  }/  type plug\\n      slave.pcm hw/g'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Sound",
      "MP Summary": "AfterStep module for playing sounds when windowing event occurs",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Finds strings with text \"searched-string\" recursively in all files of current folder.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "grep -r \"searched-string\" .\n",
          "command-options": {
            "grep": {
              "mpsum": "print lines that match patterns",
              "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option."
            }
          },
          "TLDR_inform": {
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59634170: How to properly find and replace a multiline text using sed or awk?"
      ],
      "Top-3 Scripts": [
        "so_59634170: sed -z 's/  type pulse\\n  fallback \"sysdefault\"\\n  hint {\\n    show on\\n    description \"Default ALSA Output (currently PulseAudio Sound Server)\"\\n  }/  type plug\\n      slave.pcm hw/g'"
      ],
      "Explanations about Options": {}
    }
  ]
}