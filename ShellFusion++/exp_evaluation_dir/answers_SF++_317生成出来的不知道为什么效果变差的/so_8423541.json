{
  "Query": "How do you run a SQL Server query from PowerShell?",
  "Answers": [
    {
      "Command": "psql",
      "MP Summary": "PostgreSQL interactive terminal",
      "Most Similar TLDR Task": "Execute a single SQL query or PostgreSQL command on the given database (useful in shell scripts)",
      "Most Similar TLDR Script": "psql -c '{{query}}' {{database}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_65419090: Using mulitple sql query through psql connecting from a remote client",
        "so_60648446: Execute sql queries from shell script",
        "so_10649794: how to execute sql queries from a shell script"
      ],
      "Top-3 Scripts": [
        "so_65419090: psql <<EOF\nBEGIN;\n...\nCOMMIT;\nEOF",
        "so_60648446: psql $dbopts < \"$path_to_sql_script\"\n\nquery=\"\nSELECT 1;\n...\n\"\npsql $dbopts <<< \"$query\"",
        "so_10649794: psql -h $host $dbname $username << EOF\n        select * from students where sid = $x;\nEOF"
      ],
      "Explanations about Options": {
        "-h": " Specifies the host name of the machine on which the server is running. If the value\n begins with a slash, it is used as the directory for the Unix-domain socket."
      }
    },
    {
      "Command": "mysql",
      "MP Summary": "the MySQL command-line client",
      "Most Similar TLDR Task": "Connect to a database on another host",
      "Most Similar TLDR Script": "mysql -h {{database_host}} {{database_name}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_1602904: How do you run a single query through mysql from the command line?",
        "so_47846879: How do I run Mysql queries from the bash shell?"
      ],
      "Top-3 Scripts": [
        "so_1602904: mysql -u <user> -p -e 'select * from schema.table'",
        "so_47846879: "
      ],
      "Explanations about Options": {
        "-e": "Execute the statement and quit. The default output format is like that produced with\n --batch. See Section 4.2.2.1, \u201cUsing Options on the Command Line\u201d, for some examples.\n With this option, mysql does not use the history file.",
        "-u": "The user name of the MySQL account to use for connecting to the server."
      }
    },
    {
      "Command": "mongo",
      "MP Summary": "MongoDB Shell",
      "Most Similar TLDR Task": "Connect to a database",
      "Most Similar TLDR Script": "mongo {{database}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_36787840: MongoDB run query from terminal"
      ],
      "Top-3 Scripts": [
        "so_36787840: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_41529769: teradata betq assigning variable from query",
        "so_61773293: how to get SQL query output from sqlplus to bash script"
      ],
      "Top-3 Scripts": [
        "so_41529769: CREATE VOLATILE TABLE maxdt\nAS \nselect max(order_date) as max_order_date from table1\nWITH DATA;\n\n\n\nselect maxdt.max_order_date as report_run_dt, .... \nfrom table2 cross join maxdt;",
        "so_61773293: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60648446: Execute sql queries from shell script",
        "so_36787840: MongoDB run query from terminal",
        "so_43535022: How to extract one query at a time from an SQL file?"
      ],
      "Top-3 Scripts": [
        "so_60648446: echo \"$dbhost:$dbport:$dbname:$dbname:$dbpass\" > ~/.pgpass\nchmod 600 ~/.pgpass",
        "so_36787840: ",
        "so_43535022: while IFS= read -r line; do\n  echo \"$line\" # Or do what you need to do (e.g. execute SQL statement)\ndone <sql1Temp.sql\n\nlocal statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  if\n    ! SOME_SQL_UTILITY \"$line\"\n  then\n    echo \"$line\" >>\"$failed\"\n  fi\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pass",
      "MP Summary": "stores, retrieves, generates, and synchronizes passwords securely",
      "Most Similar TLDR Task": "Initialize a new Git repository (any changes done by pass will be committed automatically)",
      "Most Similar TLDR Script": "pass git init",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_67268792: Querying data from SQL Server table with Powershell",
        "so_60648446: Execute sql queries from shell script"
      ],
      "Top-3 Scripts": [
        "so_67268792: ",
        "so_60648446: dbhost=localhost\ndbport=5432\ndbuser=user\ndbpass=pass\ndbname=test\nexport PGPASSWORD=\"$dbpass\"\ndbopts=\"-h $dbhost -p $dbport -U $dbuser -d $dbname\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "login",
      "MP Summary": "begin session on the system",
      "Most Similar TLDR Task": "Login as a user on a remote host",
      "Most Similar TLDR Script": "login -h {{host}} {{user}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_26127751: Running SQL Server commands from Powershell?"
      ],
      "Top-3 Scripts": [
        "so_26127751: create login [MYDOMAIN\\myusername] from windows\ngo\n\nsp_addsrvrolemember [MYDOMAIN\\myusername], 'sysadmin'\ngo\n\nInvoke-Sqlcmd -Query \"create login [MYDOMAIN\\myusername] from windows;\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Remove an environment variable",
      "Most Similar TLDR Script": "export -n {{VARIABLE}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60648446: Execute sql queries from shell script",
        "so_61773293: how to get SQL query output from sqlplus to bash script"
      ],
      "Top-3 Scripts": [
        "so_60648446: dbhost=localhost\ndbport=5432\ndbuser=user\ndbpass=pass\ndbname=test\nexport PGPASSWORD=\"$dbpass\"\ndbopts=\"-h $dbhost -p $dbport -U $dbuser -d $dbname\"",
        "so_61773293: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mailx",
      "MP Summary": "send and receive mail",
      "Most Similar TLDR Task": "Send mail specifying the sender address",
      "Most Similar TLDR Script": "mailx -s \"{{subject}}\" -r {{from_addr}} {{to_addr}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60529929: Execute command from query"
      ],
      "Top-3 Scripts": [
        "so_60529929: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?",
        "ul_579595: generate a SQL query from arguments",
        "ul_364994: Extract table columns from a create table query"
      ],
      "Top-3 Scripts": [
        "so_43535022: printf \"%s\" \"$line\" >>\"$failed\"\n\n#!/bin/bash\nlocal statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  SOME_SQL_UTILITY \"$line\" || printf \"%s\" \"$line\" >>\"$failed\"\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\"",
        "ul_579595: ",
        "ul_364994: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_364994: Extract table columns from a create table query",
        "so_61773293: how to get SQL query output from sqlplus to bash script"
      ],
      "Top-3 Scripts": [
        "ul_364994: ",
        "so_61773293: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_10649794: how to execute sql queries from a shell script"
      ],
      "Top-3 Scripts": [
        "so_10649794: psql -h $host $dbname $username << EOF\n        select * from students where sid = $x;\nEOF"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Use a specific Makefile",
      "Most Similar TLDR Script": "make --file {{file}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?"
      ],
      "Top-3 Scripts": [
        "so_42168924: cd $QTDIR/qtbase/src/plugins/sqldrivers/odbc\nqmake \"INCLUDEPATH+=/usr/local/unixODBC/include\" \"LIBS+=-L/usr/local/unixODBC/lib -lodbc\"\nmake"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "go",
      "MP Summary": "tool for managing Go source code",
      "Most Similar TLDR Task": "Download and install a package, specified by its import path",
      "Most Similar TLDR Script": "go get {{package_path}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_26127751: Running SQL Server commands from Powershell?"
      ],
      "Top-3 Scripts": [
        "so_26127751: create login [MYDOMAIN\\myusername] from windows\ngo\n\nsp_addsrvrolemember [MYDOMAIN\\myusername], 'sysadmin'\ngo"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "whoami",
      "MP Summary": "print effective userid",
      "Most Similar TLDR Task": "Display the username after a change in the user ID",
      "Most Similar TLDR Script": "sudo whoami",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_1790711: Fetching unix users from SQL Server"
      ],
      "Top-3 Scripts": [
        "so_1790711: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?"
      ],
      "Top-3 Scripts": [
        "so_43535022: local statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  if\n    ! SOME_SQL_UTILITY \"$line\"\n  then\n    echo \"$line\" >>\"$failed\"\n  fi\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\"\n\n#!/bin/bash\nlocal statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  SOME_SQL_UTILITY \"$line\" || printf \"%s\" \"$line\" >>\"$failed\"\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\""
      ],
      "Explanations about Options": {
        "-f": "do not prompt before overwriting"
      }
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60648446: Execute sql queries from shell script"
      ],
      "Top-3 Scripts": [
        "so_60648446: dbhost=localhost\ndbport=5432\ndbuser=user\ndbpass=pass\ndbname=test\nexport PGPASSWORD=\"$dbpass\"\ndbopts=\"-h $dbhost -p $dbport -U $dbuser -d $dbname\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_364994: Extract table columns from a create table query"
      ],
      "Top-3 Scripts": [
        "ul_364994: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_10649794: how to execute sql queries from a shell script"
      ],
      "Top-3 Scripts": [
        "so_10649794: $ sh scriptname.sh value_of_x"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_364994: Extract table columns from a create table query"
      ],
      "Top-3 Scripts": [
        "ul_364994: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Mark variables that are modified or created for export",
      "Most Similar TLDR Script": "set -a",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_61773293: how to get SQL query output from sqlplus to bash script"
      ],
      "Top-3 Scripts": [
        "so_61773293: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?",
        "ul_364994: Extract table columns from a create table query"
      ],
      "Top-3 Scripts": [
        "so_43535022: ",
        "ul_364994: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60648446: Execute sql queries from shell script"
      ],
      "Top-3 Scripts": [
        "so_60648446: echo \"$dbhost:$dbport:$dbname:$dbname:$dbpass\" > ~/.pgpass\nchmod 600 ~/.pgpass"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?"
      ],
      "Top-3 Scripts": [
        "so_43535022: while IFS= read -r line; do\n  echo \"$line\" # Or do what you need to do (e.g. execute SQL statement)\ndone <sql1Temp.sql\n\nlocal statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  if\n    ! SOME_SQL_UTILITY \"$line\"\n  then\n    echo \"$line\" >>\"$failed\"\n  fi\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\"\n\n#!/bin/bash\nlocal statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  SOME_SQL_UTILITY \"$line\" || printf \"%s\" \"$line\" >>\"$failed\"\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?"
      ],
      "Top-3 Scripts": [
        "so_42168924: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_364994: Extract table columns from a create table query"
      ],
      "Top-3 Scripts": [
        "ul_364994: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?"
      ],
      "Top-3 Scripts": [
        "so_42168924: cd $QTDIR/qtbase/src/plugins/sqldrivers/odbc\nqmake \"INCLUDEPATH+=/usr/local/unixODBC/include\" \"LIBS+=-L/usr/local/unixODBC/lib -lodbc\"\nmake"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60529929: Execute command from query"
      ],
      "Top-3 Scripts": [
        "so_60529929: eval $sqlTxt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Produce a line for each unpairable line for file1",
      "Most Similar TLDR Script": "join -a {{1}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_41529769: teradata betq assigning variable from query"
      ],
      "Top-3 Scripts": [
        "so_41529769: CREATE VOLATILE TABLE maxdt\nAS \nselect max(order_date) as max_order_date from table1\nWITH DATA;\n\n\n\nselect maxdt.max_order_date as report_run_dt, .... \nfrom table2 cross join maxdt;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_26127751: Running SQL Server commands from Powershell?",
        "so_1602904: How do you run a single query through mysql from the command line?",
        "so_33300352: Automated robocopy using variables from a SQL table?"
      ],
      "Top-3 Scripts": [
        "so_26127751: create login [MYDOMAIN\\myusername] from windows\ngo\n\nsp_addsrvrolemember [MYDOMAIN\\myusername], 'sysadmin'\ngo\n\nInvoke-Sqlcmd -Query \"create login [MYDOMAIN\\myusername] from windows;\"",
        "so_1602904: mysql -u <user> -p -e 'select * from schema.table'",
        "so_33300352: Import-Module SQLPS\n$dbServer = 'SQLServerName'\n$database = 'DBName'\n\n$sourceQuery = \"SELECT source from Table\" \n$source = Invoke-Sqlcmd -serverinstance $dbServer -Database $database -Query $sourceQuery"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "odbcinst",
      "MP Summary": "An unixODBC tool for manipulating configuration files",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?"
      ],
      "Top-3 Scripts": [
        "so_42168924: odbcinst -i -d -f /usr/share/tdsodbc/odbcinst.ini"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "src",
      "MP Summary": "simple revision control",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?"
      ],
      "Top-3 Scripts": [
        "so_42168924: cd $QTDIR/qtbase/src/plugins/sqldrivers/odbc\nqmake \"INCLUDEPATH+=/usr/local/unixODBC/include\" \"LIBS+=-L/usr/local/unixODBC/lib -lodbc\"\nmake"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "qmake",
      "MP Summary": "distributed parallel make, scheduling by Grid Engine.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?"
      ],
      "Top-3 Scripts": [
        "so_42168924: cd $QTDIR/qtbase/src/plugins/sqldrivers/odbc\nqmake \"INCLUDEPATH+=/usr/local/unixODBC/include\" \"LIBS+=-L/usr/local/unixODBC/lib -lodbc\"\nmake"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "local",
      "MP Summary": "Postfix local mail delivery",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_42168924: How to access SQL server from linux c++ application?",
        "so_43535022: How to extract one query at a time from an SQL file?"
      ],
      "Top-3 Scripts": [
        "so_42168924: cd $QTDIR/qtbase/src/plugins/sqldrivers/odbc\nqmake \"INCLUDEPATH+=/usr/local/unixODBC/include\" \"LIBS+=-L/usr/local/unixODBC/lib -lodbc\"\nmake",
        "so_43535022: local statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  if\n    ! SOME_SQL_UTILITY \"$line\"\n  then\n    echo \"$line\" >>\"$failed\"\n  fi\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\"\n\n#!/bin/bash\nlocal statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  SOME_SQL_UTILITY \"$line\" || printf \"%s\" \"$line\" >>\"$failed\"\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "and",
      "MP Summary": "auto nice daemon",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_51870375: How to run .sql file using sqlplus from powershell",
        "so_60529929: Execute command from query"
      ],
      "Top-3 Scripts": [
        "so_51870375: ",
        "so_60529929: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "output",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_55628208: Combine result from two SQL queries from different instances, not linkeable"
      ],
      "Top-3 Scripts": [
        "so_55628208: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lookup",
      "MP Summary": "interactive file search and display",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_55628208: Combine result from two SQL queries from different instances, not linkeable"
      ],
      "Top-3 Scripts": [
        "so_55628208: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "args",
      "MP Summary": "manipulate and output command arguments.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_9627225: Execute SQL*Plus from PowerShell"
      ],
      "Top-3 Scripts": [
        "so_9627225: $cmd = \"cmd.exe\";\n$args = \"/c sqlplus user/password@server/sid @C:\\temp\\SQL\\alex.sql\";\n&$cmd $args;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "return",
      "MP Summary": "return from a function or dot script",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_28287316: Building a wrapper to perform SQL queries from Powershell",
        "so_52170690: Execute a query using powershell"
      ],
      "Top-3 Scripts": [
        "so_28287316: ",
        "so_52170690: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ex",
      "MP Summary": "text editor",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_28287316: Building a wrapper to perform SQL queries from Powershell"
      ],
      "Top-3 Scripts": [
        "so_28287316: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "continue",
      "MP Summary": "continue for, while, or until loop",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_28287316: Building a wrapper to perform SQL queries from Powershell"
      ],
      "Top-3 Scripts": [
        "so_28287316: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "what",
      "MP Summary": "identify SCCS files (DEVELOPMENT)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?"
      ],
      "Top-3 Scripts": [
        "so_43535022: while IFS= read -r line; do\n  echo \"$line\" # Or do what you need to do (e.g. execute SQL statement)\ndone <sql1Temp.sql"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?"
      ],
      "Top-3 Scripts": [
        "so_43535022: while IFS= read -r line; do\n  echo \"$line\" # Or do what you need to do (e.g. execute SQL statement)\ndone <sql1Temp.sql"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43535022: How to extract one query at a time from an SQL file?",
        "ul_579595: generate a SQL query from arguments",
        "so_60529929: Execute command from query"
      ],
      "Top-3 Scripts": [
        "so_43535022: local statements=\"sql1Temp.sql\"\nlocal failed=\"sql1Temp.sql.failed\"\nwhile IFS= read -r line; do\n  if\n    ! SOME_SQL_UTILITY \"$line\"\n  then\n    echo \"$line\" >>\"$failed\"\n  fi\ndone <\"$statements\"\n[[ ! -f \"$failed\" ]] || mv -f \"$failed\" \"$statements\"",
        "ul_579595: ",
        "so_60529929: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "shift",
      "MP Summary": "shift positional parameters",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_579595: generate a SQL query from arguments"
      ],
      "Top-3 Scripts": [
        "ul_579595: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "first",
      "MP Summary": "Yagi-Uda project quick antenna builder",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_579595: generate a SQL query from arguments"
      ],
      "Top-3 Scripts": [
        "ul_579595: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "AS",
      "MP Summary": "the portable GNU assembler.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_41529769: teradata betq assigning variable from query",
        "so_34740842: Parameter -ExcludeProperty disables table name from SQL"
      ],
      "Top-3 Scripts": [
        "so_41529769: CREATE VOLATILE TABLE maxdt\nAS \nselect max(order_date) as max_order_date from table1\nWITH DATA;\n\n\n\nselect maxdt.max_order_date as report_run_dt, .... \nfrom table2 cross join maxdt;",
        "so_34740842: $coltitle = 'Files in queue'\n$sqlCommandActual = \"SELECT count(*) AS `\"$coltitle`\" FROM ...\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cme",
      "MP Summary": "Check or edit configuration data with Config::Model",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_60529929: Execute command from query"
      ],
      "Top-3 Scripts": [
        "so_60529929: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "master",
      "MP Summary": "Postfix master process",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_62656139: Cannot query containerised SQL Server database from Azure DevOps Pipeline integration test"
      ],
      "Top-3 Scripts": [
        "so_62656139: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_364994: Extract table columns from a create table query"
      ],
      "Top-3 Scripts": [
        "ul_364994: "
      ],
      "Explanations about Options": {}
    }
  ]
}