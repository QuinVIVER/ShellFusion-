{
  "Query": "How do I autostart docker container at system reboot?",
  "Answers": [
    {
      "Command": "docker",
      "MP Summary": "Docker image and container command line interface",
      "Most Similar TLDR Task": "List all docker containers (running and stopped)",
      "Most Similar TLDR Script": "docker ps -a",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "su_1054678: Can we execute a script as root during docker container startup?",
        "so_24706708: How to start docker container as server"
      ],
      "Top-3 Scripts": [
        "so_45696676: $ docker build -t run-as-user . \n$ docker run -it --rm -v $(pwd):/home/myuser run-as-user /bin/bash",
        "su_1054678: docker run image /bin/bash -c \"/etc/rc.local; <your command>\"",
        "so_24706708: docker run\n\ndocker run -d -p 80:80 ubuntu:14.04 /bin/bash\n\ndocker run -d -p 80:80 ubuntu:14.04 /path/to/yourapp"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "docker-compose",
      "MP Summary": "Define and run multi-container applications with Docker.",
      "Most Similar TLDR Task": "Follow logs for all containers",
      "Most Similar TLDR Script": "docker-compose logs --follow",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59881153: Start docker containers on linux system startup from user directory",
        "so_66730147: run db script from docker container mysql"
      ],
      "Top-3 Scripts": [
        "so_59881153: ",
        "so_66730147: docker-compose up -d\ndocker exec -i ordermanagementsystem_db_1 mysql -u root -p -e \"source dbScript.sql\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "systemctl",
      "MP Summary": "Control the systemd system and service manager",
      "Most Similar TLDR Task": "Start/Stop/Restart/Reload a service",
      "Most Similar TLDR Script": "systemctl start/stop/restart/reload {{unit}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59881153: Start docker containers on linux system startup from user directory",
        "ul_619524: Starting Docker without starting containers"
      ],
      "Top-3 Scripts": [
        "so_59881153: systemctl enable docker-mail.service",
        "ul_619524: sudo systemctl stop docker\n\nsudo systemctl start docker"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "reboot",
      "MP Summary": "Halt, power-off or reboot the machine",
      "Most Similar TLDR Task": "Reboot immediately",
      "Most Similar TLDR Script": "reboot",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55349923: Docker - Rebooting raspberry pi host from within docker container"
      ],
      "Top-3 Scripts": [
        "so_55349923: [root@631fff40f09c /]# reboot\nFailed to connect to bus: No data available\nFailed to talk to init daemon."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "shutdown",
      "MP Summary": "Halt, power-off or reboot the machine",
      "Most Similar TLDR Task": "Reboot immediately",
      "Most Similar TLDR Script": "shutdown -r now",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_593151: How can I reboot system using Upstart?"
      ],
      "Top-3 Scripts": [
        "su_593151: shutdown -r"
      ],
      "Explanations about Options": {
        "-r": "Reboot the machine."
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Edit a file as the superuser with your default editor",
      "Most Similar TLDR Script": "sudo -e {{/etc/fstab}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_766318: Disable Docker autostart at boot?",
        "au_198169: I want to make Tomcat7 autostart at boot",
        "so_63337467: Docker. Can't start docker container with ssh command"
      ],
      "Top-3 Scripts": [
        "au_766318: sudo bash -c 'echo manual | sudo tee /etc/init/docker.override'",
        "au_198169: sudo ln -s /etc/init.d/tomcat /etc/rc5.d/S71tomcat",
        "so_63337467: sudo sshpass -p \"password\" ssh akupyrev@<ip>  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no 'sudo docker run --privileged -d -p 6100:6080 -p 4743:4723 -p 5574:5554 -p 5575:5555 -v /home/androidApk:/root/AndroidApks -e DEVICE=\"Samsung\\ Galaxy\\ S6\" -e APPIUM=true -e APPIUM_HOST=\"127.0.0.1\" -e APPIUM_PORT=4723 --name=Samsung_Galaxy_S6-8.1-11.0.6 budtmo/docker-android-x86-8.1'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "groupmod",
      "MP Summary": "modify a group definition on the system",
      "Most Similar TLDR Task": "Change the group id",
      "Most Similar TLDR Script": "groupmod -g {{new_group_id}} {{old_group_name}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "so_67165575: Running non-root Docker within Ubuntu Docker container"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "so_67165575: RUN groupmod -g <HOST_DOCKER_GROUP_ID> docker"
      ],
      "Explanations about Options": {
        "-g": "The group ID of the given GROUP will be changed to GID."
      }
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes",
      "Most Similar TLDR Script": "ps aux",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67165575: Running non-root Docker within Ubuntu Docker container",
        "so_52887763: Can I run host commands with docker container environment?",
        "so_49628073: Can't restart docker container: OCI runtime create failed: container with id exist"
      ],
      "Top-3 Scripts": [
        "so_67165575: ",
        "so_52887763: ",
        "so_49628073: docker ps -a"
      ],
      "Explanations about Options": {
        "-a": "Select all processes except both session leaders (see getsid(2)) and processes not\n associated with a terminal."
      }
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display current user's id (UID), group id (GID) and groups to which they belong",
      "Most Similar TLDR Script": "id",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "au_1063534: Docker: other users run their containers as my user by default"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "au_1063534: docker run --user=$(id -u):$(id -g) ..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nsenter",
      "MP Summary": "run program with namespaces of other processes",
      "Most Similar TLDR Task": "Run command in existing processes network namespace",
      "Most Similar TLDR Script": "nsenter -t {{pid}} -n {{command}} {{command_arguments}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52887763: Can I run host commands with docker container environment?"
      ],
      "Top-3 Scripts": [
        "so_52887763: $ sudo nsenter -t $CONTAINERIZED_PROCESS_PID -n ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n33: eth0@if34: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default \n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0\n\n$ sudo nsenter -t $CONTAINERIZED_PROCESS_PID -u hostname\nd65269ecf908"
      ],
      "Explanations about Options": {
        "-u": "Enter the UTS namespace. If no file is specified, enter the UTS namespace of the\n target process. If file is specified, enter the UTS namespace specified by file.",
        "-t": "Specify a target process to get contexts from. The paths to the contexts specified\n by pid are:"
      }
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Connect to a remote server",
      "Most Similar TLDR Script": "ssh {{username}}@{{remote_host}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63337467: Docker. Can't start docker container with ssh command",
        "au_792578: How to redirect ssh logins to server's Docker containers"
      ],
      "Top-3 Scripts": [
        "so_63337467: ssh user1@server1 'command2'\n\nsudo sshpass -p \"password\" ssh akupyrev@<ip>  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no 'sudo docker run --privileged -d -p 6100:6080 -p 4743:4723 -p 5574:5554 -p 5575:5555 -v /home/androidApk:/root/AndroidApks -e DEVICE=\"Samsung\\ Galaxy\\ S6\" -e APPIUM=true -e APPIUM_HOST=\"127.0.0.1\" -e APPIUM_PORT=4723 --name=Samsung_Galaxy_S6-8.1-11.0.6 budtmo/docker-android-x86-8.1'",
        "au_792578: Match Group group1\n       ForceCommand ssh -t group1.fqdn\n\nMatch Group=\"*,!local,!group2,!root\"\n       ForceCommand ssh -t group3.fqdn\n\nMatch User foo\n    ForceCommand ssh -t target-host"
      ],
      "Explanations about Options": {
        "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty.",
        "-o": "Can be used to give options in the format used in the configuration file. This is\n useful for specifying options for which there is no separate command-line flag. For\n full details of the options listed below, and their possible values, see\n ssh_config(5)."
      }
    },
    {
      "Command": "npm",
      "MP Summary": "javascript package manager Synopsis npm <command> [args] Version 6.14.4 Description npm  is the package manager for the Node JavaScript platform.  It puts modules in place so that node can find them, and manages dependency conflicts intelligently. It is extremely configurable to support a wide variety of use cases.  Most commonly, it is used to publish, discover, install, and develop node programs. Run npm help to get a list of available commands. Important npm  is  configured  to  use  npm, Inc.'s public registry at https://registry.npmjs.org by default. Use of the  npm  public  registry  is  subject  to  terms  of  use  available  at https://www.npmjs.com/policies/terms. You  can  configure  npm  to  use  any compatible registry you like, and even run your own registry. Use of someone else's registry may be governed by their terms of use. Introduction You probably got npm because you want to install stuff. Use npm install blerg to install the latest  version  of  \"blerg\".   Check  out  npm  help install for more info.  It can do a lot of stuff. Use  the  npm  search  command  to  show  everything that's available.  Use npm ls to show everything you've installed. Dependencies If a package references to another package with a git URL, npm depends on  a  preinstalled git. If one of the packages npm tries to install is a native node module and requires compiling of C++ Code, npm will use node-gyp https://github.com/TooTallNate/node-gyp for that  task. For a Unix system, node-gyp https://github.com/TooTallNate/node-gyp needs Python, make and a buildchain like GCC. On Windows, Python and Microsoft  Visual  Studio  C++  are  needed. Python  3  is not supported by node-gyp https://github.com/TooTallNate/node-gyp.  For more information visit the node-gyp repository https://github.com/TooTallNate/node-gyp and  the node-gyp Wiki https://github.com/TooTallNate/node-gyp/wiki. Directories See npm help folders to learn about where npm puts stuff. In particular, npm has two modes of operation: \u00b7 global  mode:  npm  installs packages into the install prefix at prefix/lib/node_modules and bins are installed in prefix/bin. \u00b7 local mode: npm installs packages into the current project directory, which defaults  to the  current  working directory.  Packages are installed to ./node_modules, and bins are installed to ./node_modules/.bin. Local mode is the default.  Use -g or --global on any command to operate  in  global  mode instead. Developer Usage If you're using npm to develop and publish your code, check out the following help topics: \u00b7 json: Make a package.json file.  See npm help package.json. \u00b7 link:  For linking your current working code into Node's path, so that you don't have to reinstall every time you make a change.  Use npm link to do this. \u00b7 install: It's a good idea to install  things  if  you  don't  need  the  symbolic  link. Especially, installing other peoples code from the registry is done via npm install \u00b7 adduser: Create an account or log in.  Credentials are stored in the user config file. \u00b7 publish: Use the npm publish command to upload your code to the registry. Configuration npm is extremely configurable.  It reads its configuration options from 5 places. \u00b7 Command line switches: Set a config with --key val.  All keys take a value, even if they are booleans (the config parser doesn't know  what  the  options  are  at  the  time  of parsing).  If no value is provided, then the option is set to boolean true. \u00b7 Environment  Variables:  Set any config by prefixing the name in an environment variable with npm_config_.  For example, export npm_config_key=val. \u00b7 User Configs: The file at $HOME/.npmrc is an ini-formatted list of configs.  If present, it is parsed.  If the userconfig option is set in the cli or env, then that will be used instead. \u00b7 Global Configs: The file found at ../etc/npmrc (from the  node  executable,  by  default this  resolves  to  /usr/local/etc/npmrc)  will  be  parsed  if  it  is  found.   If the globalconfig option is set in the cli, env, or user config, then  that  file  is  parsed instead. \u00b7 Defaults:  npm's  default configuration options are defined in lib/utils/config-defs.js. These must not be changed. See npm help config for much much more information. Contributions Patches welcome! If you would like to contribute, but don't know what to work  on,  read  the  contributing guidelines and check the issues list. \u00b7 CONTRIBUTING.md https://github.com/npm/cli/blob/latest/CONTRIBUTING.md \u00b7 Bug tracker https://github.com/npm/cli/issues Bugs When you find issues, please report them: \u00b7 web: https://npm.community/c/bugs Be  sure to follow the template and bug reporting guidelines. You can also ask for help in the support forum https://npm.community/c/support if you're unsure if it's actually a  bug or are having trouble coming up with a detailed reproduction to report. Author Isaac  Z.  Schlueter  http://blog.izs.me/  ::  isaacs  https://github.com/isaacs/  :: @izs https://twitter.com/izs :: i@izs.me See Also \u00b7 npm help help \u00b7 npm help package.json \u00b7 npm help install \u00b7 npm help config \u00b7 npm help npmrc April 2020                                     NPM(1)",
      "Most Similar TLDR Task": "Download a package and add it to the list of dev dependencies in package.json",
      "Most Similar TLDR Script": "npm install {{module_name}} --save-dev",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_600259: How to delay PM2 autostart at boot?",
        "so_67786250: cronjob is not running in Docker container throw Dockerfile"
      ],
      "Top-3 Scripts": [
        "ul_600259: sleep 30s\ncd ./MagicMirror\nDISPLAY=:0 npm start",
        "so_67786250: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hostname",
      "MP Summary": "show or set the system's host name",
      "Most Similar TLDR Task": "Show all network addresses of the host",
      "Most Similar TLDR Script": "hostname -I",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52887763: Can I run host commands with docker container environment?"
      ],
      "Top-3 Scripts": [
        "so_52887763: $ sudo nsenter -t $CONTAINERIZED_PROCESS_PID -u hostname\nd65269ecf908"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "bash {{file.sh}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_766318: Disable Docker autostart at boot?",
        "so_45696676: Set docker image username at container creation time?",
        "su_1054678: Can we execute a script as root during docker container startup?"
      ],
      "Top-3 Scripts": [
        "au_766318: sudo bash -c 'echo manual | sudo tee /etc/init/docker.override'",
        "so_45696676: $ docker build -t run-as-user . \n$ docker run -it --rm -v $(pwd):/home/myuser run-as-user /bin/bash",
        "su_1054678: docker run image /bin/bash -c \"/etc/rc.local; <your command>\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dpkg",
      "MP Summary": "package manager for Debian",
      "Most Similar TLDR Task": "List contents of a local package file",
      "Most Similar TLDR Script": "dpkg -c {{path/to/file.deb}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "ul_633544: Install srvadmin-hapi package on docker container"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "ul_633544: /var/lib/dpkg/info/srvadmin-hapi.postinst\n\nsudo dpkg --configure -a\nsudo apt install srvadmin-hapi\n\n/var/lib/dpkg/status"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_600259: How to delay PM2 autostart at boot?",
        "ul_266850: How to run a program inside a Docker container?"
      ],
      "Top-3 Scripts": [
        "ul_600259: sleep 30s\ncd ./MagicMirror\nDISPLAY=:0 npm start",
        "ul_266850: cd /opt/tomcat/webapps/erddap/WEB-INF/\nbash GenerateDatasetsXml.sh\n\n$ cd /usr/local/erddapData/logs/\n$ cat GenerateDatasetsXml.out"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "su",
      "MP Summary": "run a command with substitute user and group ID",
      "Most Similar TLDR Task": "Switch to a given user and simulate a full login shell",
      "Most Similar TLDR Script": "su - {{username}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_198169: I want to make Tomcat7 autostart at boot"
      ],
      "Top-3 Scripts": [
        "au_198169: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "useradd",
      "MP Summary": "create a new user or update default new user information",
      "Most Similar TLDR Task": "Create new system user without a home directory",
      "Most Similar TLDR Script": "useradd --no-create-home --system {{name}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?"
      ],
      "Top-3 Scripts": [
        "so_45696676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded",
      "Most Similar TLDR Script": "apt-get autoclean",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "au_643847: Why kernel version doesn't match Ubuntu version in a Docker container?",
        "so_40636618: How to start a chrooted directory as a docker container?"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "au_643847: sudo apt-get install linux-generic-lts-utopic\n\nsudo apt-get install linux-generic-lts-vivid",
        "so_40636618: apt-get install upstart"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Make the password of the account blank (it will set the named account passwordless)",
      "Most Similar TLDR Script": "passwd -d",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?"
      ],
      "Top-3 Scripts": [
        "so_45696676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "journalctl",
      "MP Summary": "Query the systemd journal",
      "Most Similar TLDR Task": "Show all messages from this boot",
      "Most Similar TLDR Script": "journalctl -b",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59881153: Start docker containers on linux system startup from user directory"
      ],
      "Top-3 Scripts": [
        "so_59881153: journalctl -u docker-mail.service -b"
      ],
      "Explanations about Options": {
        "-b": "Show messages from a specific boot. This will add a match for \"_BOOT_ID=\"."
      }
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and login using the default shell",
      "Most Similar TLDR Script": "exec -l {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "so_43493478: How can I run docker container without entering into container",
        "ul_266850: How to run a program inside a Docker container?"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "so_43493478: docker exec -it my_container /bin/bash\n\ndocker exec -it my_container /bin/sh",
        "ul_266850: $ docker exec -it erddap bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "runuser",
      "MP Summary": "run a command with substitute user and group ID",
      "Most Similar TLDR Task": "Run command as a different user",
      "Most Similar TLDR Script": "runuser {{user}} -c '{{command}}'",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67165575: Running non-root Docker within Ubuntu Docker container"
      ],
      "Top-3 Scripts": [
        "so_67165575: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sshpass",
      "MP Summary": "noninteractive ssh password provider",
      "Most Similar TLDR Task": "Connect to a remote server using the first line of a file as the password, automatically accept unknown ssh keys, and launch a command",
      "Most Similar TLDR Script": "sshpass -f {{file}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}} \"{{command}}\"",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63337467: Docker. Can't start docker container with ssh command"
      ],
      "Top-3 Scripts": [
        "so_63337467: sudo sshpass -p \"password\" ssh akupyrev@<ip>  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no 'sudo docker run --privileged -d -p 6100:6080 -p 4743:4723 -p 5574:5554 -p 5575:5555 -v /home/androidApk:/root/AndroidApks -e DEVICE=\"Samsung\\ Galaxy\\ S6\" -e APPIUM=true -e APPIUM_HOST=\"127.0.0.1\" -e APPIUM_PORT=4723 --name=Samsung_Galaxy_S6-8.1-11.0.6 budtmo/docker-android-x86-8.1'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination, setting their ownership",
      "Most Similar TLDR Script": "install -o {{user}} {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "au_1311819: Nextcloud does do not launch at reboot/restart session (autostart) in Ubuntu 20.04",
        "au_643847: Why kernel version doesn't match Ubuntu version in a Docker container?"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "au_1311819: sudo apt install gnome-tweaks",
        "au_643847: sudo apt-get install linux-generic-lts-utopic\n\nsudo apt-get install linux-generic-lts-vivid"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "usermod",
      "MP Summary": "modify a user account",
      "Most Similar TLDR Task": "Create a new home directory for a user and move their files to it",
      "Most Similar TLDR Script": "usermod -m -d {{/path/to/home}} {{user}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?"
      ],
      "Top-3 Scripts": [
        "so_45696676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "free",
      "MP Summary": "Display amount of free and used memory in the system",
      "Most Similar TLDR Task": "Display system memory",
      "Most Similar TLDR Script": "free",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_517679: Can't install docker containers on ubuntu"
      ],
      "Top-3 Scripts": [
        "ul_517679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display the current date using the default locale's format",
      "Most Similar TLDR Script": "date +\"%c\"",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68864735: Running a shell script in docker container"
      ],
      "Top-3 Scripts": [
        "so_68864735: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Pass a user name and password for server authentication",
      "Most Similar TLDR Script": "curl -u myusername:mypassword {{http://example.com}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?",
        "so_68864735: Running a shell script in docker container"
      ],
      "Top-3 Scripts": [
        "so_45696676: ",
        "so_68864735: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mail",
      "MP Summary": "send and receive mail",
      "Most Similar TLDR Task": "Send an email that contains file content",
      "Most Similar TLDR Script": "mail --subject=\"{{$HOSTNAME filename.txt}}\" {{to_user@example.com}} < {{path/to/filename.txt}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_59881153: Start docker containers on linux system startup from user directory"
      ],
      "Top-3 Scripts": [
        "so_59881153: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a program using the SIGHUP (hang up) signal. Many daemons will reload instead of terminating",
      "Most Similar TLDR Script": "kill -{{1|HUP}} {{process_id}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_517679: Can't install docker containers on ubuntu"
      ],
      "Top-3 Scripts": [
        "ul_517679: sudo kill -9 <process id>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a path pattern",
      "Most Similar TLDR Script": "find {{root_path}} -path '{{**/lib/**/*.ext}}'",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?"
      ],
      "Top-3 Scripts": [
        "so_45696676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add a default route",
      "Most Similar TLDR Script": "ip route add default via {{ip}} dev {{interface}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52887763: Can I run host commands with docker container environment?"
      ],
      "Top-3 Scripts": [
        "so_52887763: $ sudo nsenter -t $CONTAINERIZED_PROCESS_PID -n ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n33: eth0@if34: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default \n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "alpine",
      "MP Summary": "an Alternatively Licensed Program for Internet News and Email",
      "Most Similar TLDR Task": "Open alpine normally",
      "Most Similar TLDR Script": "alpine",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35689628: Starting a shell in the Docker Alpine container"
      ],
      "Top-3 Scripts": [
        "so_35689628: ole@T:~$ docker run -it --rm alpine /bin/ash\n(inside container) / #"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mysql",
      "MP Summary": "the MySQL command-line client",
      "Most Similar TLDR Task": "Connect to a database, user will be prompted for a password",
      "Most Similar TLDR Script": "mysql -u {{user}} --password {{database_name}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_66730147: run db script from docker container mysql"
      ],
      "Top-3 Scripts": [
        "so_66730147: docker-compose up -d\ndocker exec -i ordermanagementsystem_db_1 mysql -u root -p -e \"source dbScript.sql\""
      ],
      "Explanations about Options": {
        "-e": "Execute the statement and quit. The default output format is like that produced with\n --batch. See Section 4.2.2.1, \u201cUsing Options on the Command Line\u201d, for some examples.\n With this option, mysql does not use the history file.",
        "-u": "The user name of the MySQL account to use for connecting to the server."
      }
    },
    {
      "Command": "link",
      "MP Summary": "call the link function to create a link to a file",
      "Most Similar TLDR Task": "Create a hard link from a new file to an existing file",
      "Most Similar TLDR Script": "link {{path/to/existing_file}} {{path/to/new_file}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52887763: Can I run host commands with docker container environment?"
      ],
      "Top-3 Scripts": [
        "so_52887763: $ sudo nsenter -t $CONTAINERIZED_PROCESS_PID -n ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n33: eth0@if34: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default \n    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff link-netnsid 0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_266850: How to run a program inside a Docker container?",
        "so_50541837: Run sh script from docker container"
      ],
      "Top-3 Scripts": [
        "ul_266850: $ cd /usr/local/erddapData/logs/\n$ cat GenerateDatasetsXml.out",
        "so_50541837: cat .env"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?"
      ],
      "Top-3 Scripts": [
        "so_45696676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute the commands and email the result using a local mailing program such as sendmail",
      "Most Similar TLDR Script": "at {{hh:mm}} -m",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67165575: Running non-root Docker within Ubuntu Docker container"
      ],
      "Top-3 Scripts": [
        "so_67165575: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chown",
      "MP Summary": "change file owner and group",
      "Most Similar TLDR Task": "Change the owner of a file/directory to match a reference file",
      "Most Similar TLDR Script": "chown --reference={{path/to/reference_file}} {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45696676: Set docker image username at container creation time?"
      ],
      "Top-3 Scripts": [
        "so_45696676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_517679: Can't install docker containers on ubuntu"
      ],
      "Top-3 Scripts": [
        "ul_517679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "getent",
      "MP Summary": "get entries from Name Service Switch libraries",
      "Most Similar TLDR Task": "Get list of all services",
      "Most Similar TLDR Script": "getent services",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67165575: Running non-root Docker within Ubuntu Docker container"
      ],
      "Top-3 Scripts": [
        "so_67165575: getent group docker"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "more",
      "MP Summary": "file perusal filter for crt viewing",
      "Most Similar TLDR Task": "Search for a string (press `n` to go to the next match)",
      "Most Similar TLDR Script": "/{{something}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_517679: Can't install docker containers on ubuntu"
      ],
      "Top-3 Scripts": [
        "ul_517679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "node",
      "MP Summary": "server-side JavaScript runtime",
      "Most Similar TLDR Task": "Run a JavaScript file",
      "Most Similar TLDR Script": "node {{path/to/file}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67786250: cronjob is not running in Docker container throw Dockerfile"
      ],
      "Top-3 Scripts": [
        "so_67786250: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40210903: Cannot run script added to existing docker container"
      ],
      "Top-3 Scripts": [
        "so_40210903: docker run --rm -v \"$(pwd)/config\":/path/to/file -ti image_name:latest\" mynewscript $@"
      ],
      "Explanations about Options": {
        "-i": "Causes the file command to output mime type strings rather than the more traditional\n human readable ones. Thus it may say \u2018text/plain; charset=us-ascii\u2019 rather than\n \u201cASCII text\u201d."
      }
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "Most Similar TLDR Script": "touch {{filename}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67786250: cronjob is not running in Docker container throw Dockerfile"
      ],
      "Top-3 Scripts": [
        "so_67786250: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55349923: Docker - Rebooting raspberry pi host from within docker container"
      ],
      "Top-3 Scripts": [
        "so_55349923: docker run -v /run/dbus:/run/dbus -v /run/systemd:/run/systemd --pid=host ..."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56209021: How to mount a host directory into a running docker container"
      ],
      "Top-3 Scripts": [
        "so_56209021: docker cp"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "trap",
      "MP Summary": "trap signals",
      "Most Similar TLDR Task": "Set a trap to execute commands when one or more signals are detected",
      "Most Similar TLDR Script": "trap 'echo \"Caught signal {{SIGHUP}}\"' {{SIGHUP}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52487019: Cleaning up after killing a running docker container"
      ],
      "Top-3 Scripts": [
        "so_52487019: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Copy the file foo.sh into /tmp of the docker container",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "tar -c foo.sh | docker exec -i theDockerContainer /bin/tar -C /tmp -x\n",
          "command-options": {
            "tar": {
              "mpsum": "an archiving utility",
              "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
              "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
              "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow."
            },
            "docker": {
              "mpsum": "Docker image and container command line interface"
            },
            "exec": {
              "mpsum": "execute commands and open, close, or copy file descriptors"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            }
          },
          "TLDR_inform": {
            "tar": {
              "man1_tar_33340": "archiv util\noften combin compress method gzip bzip creat compress archiv use archiv suffix determin compress program creat gzip archiv creat gzip archiv directori use rel path creat archiv file extract compress archiv current directori extract compress archiv target directori extract specif file without preserv folder structur extract file match pattern list content tar file"
            },
            "docker": {
              "man1_docker_7277": "manag docker contain imag fetch follow log contain list docker contain run stop list current run docker contain open shell insid alreadi run contain pull imag docker registri remov stop contain start contain imag custom name start stop exist contain"
            },
            "exec": {
              "man1_exec_9258": "replac current process anoth process replac specifi command chang process name replac specifi command login use default shell replac specifi command use current environ variabl replac specifi command clear environ variabl"
            },
            "bin": {
              "man1_bin_22728": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_517679: Can't install docker containers on ubuntu"
      ],
      "Top-3 Scripts": [
        "ul_517679: ps ax | grep -i apt"
      ],
      "Explanations about Options": {
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other."
      }
    }
  ]
}