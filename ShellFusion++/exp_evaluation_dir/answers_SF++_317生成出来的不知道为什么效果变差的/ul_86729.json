{
  "Query": "Any way to encode the url in curl command?",
  "Answers": [
    {
      "Command": "php",
      "MP Summary": "PHP Command Line Interface 'CLI'",
      "Most Similar TLDR Task": "Parse and execute a php script",
      "Most Similar TLDR Script": "php {{file}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_11876353: URL encoding a string in bash script"
      ],
      "Top-3 Scripts": [
        "so_11876353: ENCODEDMESSAGE=$(php -r \"echo urlencode(\\\"$MESSAGE\\\");\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download a file, saving the output under the filename indicated by the URL",
      "Most Similar TLDR Script": "curl -O {{http://example.com/filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_111535: curl command output in a variable",
        "so_21177159: bash variable in curl command",
        "so_25431384: using URLS in bash script"
      ],
      "Top-3 Scripts": [
        "ul_111535: var=$(curl -s --head http://myurl/ | head -n 1 | grep \"HTTP/1.[01] [23]..\")\necho \"$var\";\nif [ \"$var\" == \"some value\" ]; then    \n    do something;    \nelse\n    do some other thing;\nfi",
        "so_21177159: curl -H \"Content-type: application/json\" -X POST \\\n-d \"{    \n  \\\"service_key\\\": \\\"e93facc04764012d7bfb002500d5d1a6\\\",\n  ...\n  \\\"description\\\": \\\"FAILURE for production/HTTP on machine $machine\\\"\n}\" \\\n\"https://events.pagerduty.com/generic/2010-04-15/create_event.json\"",
        "so_25431384: #!/bin/bash\nwhile read line\ndo\n    /usr/bin/curl -s -o /dev/null -I -w %{http_code} -- \"$line\"\ndone < $1"
      ],
      "Explanations about Options": {
        "-X": "(HTTP) Specifies a custom request method to use when communicating with the HTTP\n server. The specified request method will be used instead of the method otherwise\n used (which defaults to GET). Read the HTTP 1.1 specification for details and\n explanations. Common additional HTTP requests include PUT and DELETE, but related\n technologies like WebDAV offers PROPFIND, COPY, MOVE and more.",
        "-o": "Write output to <file> instead of stdout. If you are using {} or [] to fetch\n multiple documents, you can use '#' followed by a number in the <file> specifier.\n That variable will be replaced with the current string for the URL being fetched.\n Like in:",
        "-s": "Silent or quiet mode. Don't show progress meter or error messages. Makes Curl\n mute. It will still output the data you ask for, potentially even to the\n terminal/stdout unless you redirect it.",
        "--head": "(HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the command HEAD which\n this uses to get nothing but the header of a document. When used on an FTP or FILE\n file, curl displays the file size and last modification time only."
      }
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Remove a package and its configuration files",
      "Most Similar TLDR Script": "apt-get purge {{package}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_227314: Is there a way to make \"apt://\" URLs always open in the terminal",
        "su_67428: Possible to catch URLs in linux?"
      ],
      "Top-3 Scripts": [
        "au_227314: #! /bin/bash\n\naptInstall=\"$@\"\naptInstall=${aptInstall#*:}\ngnome-terminal -e \"sudo apt-get install $aptInstall\"",
        "su_67428: sudo apt-get install ngrep"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a text message. Note: quotes are optional",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\"",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_4712916: How to encode url in bash script?",
        "ul_111535: curl command output in a variable",
        "so_17447746: How do I curl multiple resources in one command?"
      ],
      "Top-3 Scripts": [
        "so_4712916: $ echo http://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/1$41912\nhttp://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/11912\n$ echo 'http://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/1$41912'\nhttp://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/1$41912",
        "ul_111535: var=$(curl -s --head http://myurl/ | head -n 1 | grep \"HTTP/1.[01] [23]..\")\necho \"$var\";\nif [ \"$var\" == \"some value\" ]; then    \n    do something;    \nelse\n    do some other thing;\nfi",
        "so_17447746: echo {1..3}/{1..3}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_58507931: Base64 encoding different in script"
      ],
      "Top-3 Scripts": [
        "so_58507931: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output the value of a given key to a string (and disable JSON output)",
      "Most Similar TLDR Script": "cat {{file.json}} | jq --raw-output '\"some text: \\(.{{key_name}})\"'",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_52979388: Unable to correctly use variable in curl command",
        "so_57689809: use curl/bash command in jq"
      ],
      "Top-3 Scripts": [
        "so_52979388: $ DATA='<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <md:EntityDescriptor'\n$ SP_ID=1\n$ jq --arg metadata \"$DATA\" --arg id \"$SP_ID\" '{\"metadata\": $metadata, \"id\": $id}' <<< {}\n{\n  \"metadata\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<md:EntityDescriptor\",\n  \"id\": \"1\"\n}",
        "so_57689809: jq -r '\"-o /dev/null\\nurl = \\(.[].url)\"' file |\ncurl -sSLK- -w'%{url_effective}\\n' |\njq -R 'fromjson | map(. + {redirection: input})' file -"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "iconv",
      "MP Summary": "convert text from one character encoding to another",
      "Most Similar TLDR Task": "Convert file to a specific encoding, and print to `stdout`",
      "Most Similar TLDR Script": "iconv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_648823: How to read ANSI encoded files in the right way?"
      ],
      "Top-3 Scripts": [
        "au_648823: iconv -f WINDOWS-1252 -t utf8 < filein.txt > fileout.txt\n\niconv --list"
      ],
      "Explanations about Options": {
        "--list": "List all known character set encodings."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Determine the mime encoding type of a file",
      "Most Similar TLDR Script": "file -i {{filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_56235539: Using variables in CURL",
        "so_57689809: use curl/bash command in jq",
        "so_2356694: How to check file encoding in Linux? Handling multilingual scripts"
      ],
      "Top-3 Scripts": [
        "so_56235539: HMM=$1\n\ncurl -H 'Accept:application/json' -F file=@\"${HMM}\" -F processing=hmm http://skylign.org\n#                                         ^\n#                                         |\n#                                         |",
        "so_57689809: jq -r '\"-o /dev/null\\nurl = \\(.[].url)\"' file |\ncurl -sSLK- -w'%{url_effective}\\n' |\njq -R 'fromjson | map(. + {redirection: input})' file -",
        "so_2356694: "
      ],
      "Explanations about Options": {
        "-F": "Use the specified string as the separator between the filename and the file result\n returned. Defaults to \u2018:\u2019."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_48430129: Assign a variable in curl URL shell script",
        "so_66063209: trying to use variable in bash-curl, getting curl: (3) <url> malformed"
      ],
      "Top-3 Scripts": [
        "so_48430129: ",
        "so_66063209: #!/bin/bash -x\n    for i in $(cat upload.list); do\n        content=$(curl -v -u \"$NEXUS_USER\":\"$NEXUS_USER_PASSWORD\" --upload-file \"$i\" \"$NEXUS_UPLOAD\")\n        echo $content\n    done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_25431384: using URLS in bash script",
        "so_48430129: Assign a variable in curl URL shell script"
      ],
      "Top-3 Scripts": [
        "so_25431384: #!/bin/bash\nwhile read line\ndo\n    /usr/bin/curl -s -o /dev/null -I -w %{http_code} -- \"$line\"\ndone < $1",
        "so_48430129: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "firefox",
      "MP Summary": "a free and open source web browser from Mozilla",
      "Most Similar TLDR Task": "Use a specific profile to allow multiple separate instances of Firefox to run at once",
      "Most Similar TLDR Script": "firefox --profile {{path/to/directory}} {{https://example.com/}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_4712916: How to encode url in bash script?"
      ],
      "Top-3 Scripts": [
        "so_4712916: $ firefox 'YOUR_URL'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_7678675: Get cURL response in bash",
        "so_58507931: Base64 encoding different in script"
      ],
      "Top-3 Scripts": [
        "so_7678675: curl -T \"$xmlFolder/$xmlFile\" \"$mediaFTP\" || \n  printf '%s\\n' $?\n\ncurl -T \"$xmlFolder/$xmlFile\" \"$mediaFTP\" >/dev/null || \n  printf '%s\\n' $?",
        "so_58507931: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Create a gif from a series of images with 100ms delay between them",
      "Most Similar TLDR Script": "convert {{image1.png}} {{image2.png}} {{image3.png}} -delay {{10}} {{animation.gif}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_66063209: trying to use variable in bash-curl, getting curl: (3) <url> malformed",
        "so_25602909: cURL analog in C#?"
      ],
      "Top-3 Scripts": [
        "so_66063209: i=image.jpg\n\nconvert $i ${i%jpg}png",
        "so_25602909: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as the superuser",
      "Most Similar TLDR Script": "sudo {{less /var/log/syslog}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "su_67428: Possible to catch URLs in linux?"
      ],
      "Top-3 Scripts": [
        "su_67428: sudo apt-get install ngrep\n\nsudo ngrep -W byline -qilw 'get' tcp dst port 80\n\nsudo ngrep -W byline -qilw 'get' tcp dst port 80 \\\n  | grep -i \" -> \\|get\\|host\"\n\nsudo ngrep -W byline -qilwv 'referer' tcp dst port 80 \\\n  | grep -i \" -> \\|get\\|host\"\n\nsudo tcpdump -Alfq -s 1024 \\\n  'tcp dst port 80 and ip[2:2] > 40 and tcp[tcpflags] & tcp-push != 0' \\\n  | grep -i \" > \\|get\\|host\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Repeatedly output \"message\"",
      "Most Similar TLDR Script": "yes {{message}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_59983700: Execute curl command in ansible"
      ],
      "Top-3 Scripts": [
        "so_59983700: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble the output to a given file",
      "Most Similar TLDR Script": "as {{file.s}} -o {{out.o}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_47913341: Shell - echo some command (curl) vs type the command in the terminal"
      ],
      "Top-3 Scripts": [
        "so_47913341: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_266091: How do I set up ssh port forwarding and run a curl in a single command?"
      ],
      "Top-3 Scripts": [
        "ul_266091: ssh user@10.10.10.10 curl http://remoteserver/my/endpoint/ -o - > result"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_111535: curl command output in a variable",
        "ul_170369: How I can determine the latest version in URL?"
      ],
      "Top-3 Scripts": [
        "ul_111535: var=$(curl -s --head http://myurl/ | head -n 1 | grep \"HTTP/1.[01] [23]..\")\necho \"$var\";\nif [ \"$var\" == \"some value\" ]; then    \n    do something;    \nelse\n    do some other thing;\nfi",
        "ul_170369: curl -s http://dl.4players.de/ts/releases/ | \\\n  grep -Po '(?<=href=\")[0-9]+(\\.[0-9]+){2,3}(?=/\")' | \\\n  sort -Vr | head -1"
      ],
      "Explanations about Options": {
        "-n": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
      }
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_58507931: Base64 encoding different in script"
      ],
      "Top-3 Scripts": [
        "so_58507931: /bin/sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_4712916: How to encode url in bash script?"
      ],
      "Top-3 Scripts": [
        "so_4712916: $ echo http://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/1$41912\nhttp://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/11912\n$ echo 'http://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/1$41912'\nhttp://www.airportbusiness.com//print/Airport-Business-Magazine/Expo-Returns-to-Vegas/1$41912"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_812918: how do I parse this url in ubuntu"
      ],
      "Top-3 Scripts": [
        "au_812918: echo 'https://vimeo.com/library/videos/angular-fire-theme/table-of-contents' | sed 's_.*/\\(.*\\)/table-of-contents_\\1_'\n\necho 'https://vimeo.com/library/videos/angular-fire-theme/table-of-contents' | sed 's_.*/videos/\\(.*\\)/.*_\\1_'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "su_67428: Possible to catch URLs in linux?"
      ],
      "Top-3 Scripts": [
        "su_67428: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ngrep",
      "MP Summary": "network grep",
      "Most Similar TLDR Task": "Capture traffic of a specific interface",
      "Most Similar TLDR Script": "ngrep -d {{eth0}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "su_67428: Possible to catch URLs in linux?"
      ],
      "Top-3 Scripts": [
        "su_67428: sudo apt-get install ngrep\n\nsudo ngrep -W byline -qilw 'get' tcp dst port 80\n\nsudo ngrep -W byline -qilw 'get' tcp dst port 80 \\\n  | grep -i \" -> \\|get\\|host\"\n\nsudo ngrep -W byline -qilwv 'referer' tcp dst port 80 \\\n  | grep -i \" -> \\|get\\|host\""
      ],
      "Explanations about Options": {
        "-q": "Be quiet; don't output any information other than packet headers and their payloads\n (if relevant).",
        "-w": "Match the regex expression as a word.",
        "-l": "Make stdout line buffered.",
        "-i": "Ignore case for the regex expression.",
        "-v": "Invert the match; only display packets that don't match."
      }
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_227314: Is there a way to make \"apt://\" URLs always open in the terminal",
        "su_67428: Possible to catch URLs in linux?"
      ],
      "Top-3 Scripts": [
        "au_227314: #! /bin/bash\n\naptInstall=\"$@\"\naptInstall=${aptInstall#*:}\ngnome-terminal -e \"sudo apt-get install $aptInstall\"",
        "su_67428: sudo apt-get install ngrep"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tcpdump",
      "MP Summary": "dump traffic on a network",
      "Most Similar TLDR Task": "Capture all TCP traffic showing contents (ASCII) in console",
      "Most Similar TLDR Script": "tcpdump -A tcp",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "su_67428: Possible to catch URLs in linux?"
      ],
      "Top-3 Scripts": [
        "su_67428: sudo tcpdump -Alfq -s 1024 \\\n  'tcp dst port 80 and ip[2:2] > 40 and tcp[tcpflags] & tcp-push != 0' \\\n  | grep -i \" > \\|get\\|host\""
      ],
      "Explanations about Options": {
        "-l": "Make stdout line buffered. Useful if you want to see the data while capturing it.\n E.g.,",
        "-q": "Quick (quiet?) output. Print less protocol information so output lines are\n shorter.",
        "-f": "Print `foreign' IPv4 addresses numerically rather than symbolically (this option is\n intended to get around serious brain damage in Sun's NIS server - usually it hangs\n forever translating non-local internet numbers).",
        "-A": "Print each packet (minus its link level header) in ASCII. Handy for capturing web\n pages."
      }
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Give the [u]ser rights to [r]ead and [w]rite to a file/directory",
      "Most Similar TLDR Script": "chmod u+rw {{file_or_directory}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_227314: Is there a way to make \"apt://\" URLs always open in the terminal",
        "so_55793222: Crontab not executing CURL command in linux"
      ],
      "Top-3 Scripts": [
        "au_227314: chmod a+x ~/apt_terminal.sh",
        "so_55793222: chmod a+x /etc/cron.my/refresh.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pwd",
      "MP Summary": "print name of current/working directory",
      "Most Similar TLDR Task": "Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path)",
      "Most Similar TLDR Script": "pwd -P",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_55531658: Unable to use variable in curl command"
      ],
      "Top-3 Scripts": [
        "so_55531658: user=foo\npwd=foo_pwd\necho '{\"username\":\"'\"$user\"'\",\"password\":\"'\"$pwd\"'\"}'\n\nuser=foo\npwd=foo_pwd\ncurl -s --header \"Content-Type:application/json\" --header \"Accept:application/json\" -X POST https://example.com --data-binary '{\"username\":\"'\"$user\"'\",\"password\":\"'\"$pwd\"'\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_64113296: How to concatenate timestamp in curl header?"
      ],
      "Top-3 Scripts": [
        "so_64113296: curl -v \"https://example.com\" -H \"cookie: ts=$(date +%s%3N)\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send a message to a given user on a given terminal id",
      "Most Similar TLDR Script": "write {{username}} {{terminal_id}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_47913341: Shell - echo some command (curl) vs type the command in the terminal"
      ],
      "Top-3 Scripts": [
        "so_47913341: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_25431384: using URLS in bash script",
        "so_25602909: cURL analog in C#?"
      ],
      "Top-3 Scripts": [
        "so_25431384: test=\"curl -s -o /dev/null -I -w %{http_code} '$name'\"",
        "so_25602909: "
      ],
      "Explanations about Options": {
        "-s": "FILE\n FILE exists and has a size greater than zero"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file in case-insensitive way",
      "Most Similar TLDR Script": "sort --ignore-case {{path/to/file}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_170369: How I can determine the latest version in URL?"
      ],
      "Top-3 Scripts": [
        "ul_170369: curl -s http://dl.4players.de/ts/releases/ | \\\n  grep -Po '(?<=href=\")[0-9]+(\\.[0-9]+){2,3}(?=/\")' | \\\n  sort -Vr | head -1"
      ],
      "Explanations about Options": {
        "-r": "reverse the result of comparisons",
        "-V": "natural sort of (version) numbers within text"
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_43609101: curl: (3) Illegal characters found in URL : ${...%?} doesn't work"
      ],
      "Top-3 Scripts": [
        "so_43609101: tr -d '\\r' < test.sh > testWithoutR.sh"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "progress",
      "MP Summary": "Coreutils Progress Viewer",
      "Most Similar TLDR Task": "Launch and monitor a single long-running command",
      "Most Similar TLDR Script": "{{command}} & progress -mp $!",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_47913341: Shell - echo some command (curl) vs type the command in the terminal"
      ],
      "Top-3 Scripts": [
        "so_47913341: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gnome-terminal",
      "MP Summary": "is a terminal emulation application.",
      "Most Similar TLDR Task": "Run a specific command in a new terminal window",
      "Most Similar TLDR Script": "gnome-terminal -- {{command}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_227314: Is there a way to make \"apt://\" URLs always open in the terminal"
      ],
      "Top-3 Scripts": [
        "au_227314: #! /bin/bash\n\naptInstall=\"$@\"\naptInstall=${aptInstall#*:}\ngnome-terminal -e \"sudo apt-get install $aptInstall\""
      ],
      "Explanations about Options": {
        "-e": "Execute the argument to this option inside the terminal."
      }
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_47913341: Shell - echo some command (curl) vs type the command in the terminal",
        "so_8383191: how to use curl in php?"
      ],
      "Top-3 Scripts": [
        "so_47913341: man curl",
        "so_8383191: man curl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_25431384: using URLS in bash script"
      ],
      "Top-3 Scripts": [
        "so_25431384: #!/bin/bash\nwhile read line\ndo\n    /usr/bin/curl -s -o /dev/null -I -w %{http_code} -- \"$line\"\ndone < $1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "netstat",
      "MP Summary": "Print  network  connections,  routing tables, interface statistics, masquerade connections, and multicast memberships",
      "Most Similar TLDR Task": "List routes and do not resolve IP to hostname",
      "Most Similar TLDR Script": "netstat -rn",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_20260977: best way to determine currently open URLs in linux shell"
      ],
      "Top-3 Scripts": [
        "so_20260977: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_47913341: Shell - echo some command (curl) vs type the command in the terminal"
      ],
      "Top-3 Scripts": [
        "so_47913341: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "users",
      "MP Summary": "print the user names of users currently logged in to the current host",
      "Most Similar TLDR Task": "Display a list of logged in users according to a specific file",
      "Most Similar TLDR Script": "users {{/var/log/wmtp}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_22189737: curl not taking my \"&\" sign in URL"
      ],
      "Top-3 Scripts": [
        "so_22189737: curl -O 'https://openapi.etsy.com/v2/users/asdfasdf/profile?fields=blablabla&api_key=fwieahflksfiahrglkdflgkas'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "au_812918: how do I parse this url in ubuntu"
      ],
      "Top-3 Scripts": [
        "au_812918: echo 'https://vimeo.com/library/videos/angular-fire-theme/table-of-contents' | cut -d / -f6"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter"
      }
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_111535: curl command output in a variable",
        "su_67428: Possible to catch URLs in linux?",
        "ul_114604: grep command in curl"
      ],
      "Top-3 Scripts": [
        "ul_111535: var=$(curl -s --head http://myurl/ | head -n 1 | grep \"HTTP/1.[01] [23]..\")\necho \"$var\";\nif [ \"$var\" == \"some value\" ]; then    \n    do something;    \nelse\n    do some other thing;\nfi",
        "su_67428: sudo ngrep -W byline -qilw 'get' tcp dst port 80 \\\n  | grep -i \" -> \\|get\\|host\"\n\nsudo ngrep -W byline -qilwv 'referer' tcp dst port 80 \\\n  | grep -i \" -> \\|get\\|host\"\n\nsudo tcpdump -Alfq -s 1024 \\\n  'tcp dst port 80 and ip[2:2] > 40 and tcp[tcpflags] & tcp-push != 0' \\\n  | grep -i \" > \\|get\\|host\"",
        "ul_114604: curl www.website.com/ | grep '^<a href=.*title=$' > new1.txt\n\ncurl www.website.com/ | grep -P '^<a href=.*?title=$' > new1.txt"
      ],
      "Explanations about Options": {
        "-i": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
        "-P": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features."
      }
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_216042: How do I display all URLs in a redirect chain?"
      ],
      "Top-3 Scripts": [
        "ul_216042: $ wget http://picasaweb.google.com 2>&1 | grep Location:\nLocation: /home [following]\nLocation: https://www.google.com/accounts/ServiceLogin?hl=en_US&continue=https%3A%2F%2Fpicasaweb.google.com%2Flh%2Flogin%3Fcontinue%3Dhttps%253A%252F%252Fpicasaweb.google.com%252Fhome&service=lh2&ltmpl=gp&passive=true [following]\nLocation: https://accounts.google.com/ServiceLogin?hl=en_US&continue=https%3A%2F%2Fpicasaweb.google.com%2Flh%2Flogin%3Fcontinue%3Dhttps%3A%2F%2Fpicasaweb.google.com%2Fhome&service=lh2&ltmpl=gp&passive=true [following]\n\n$ curl -v -L http://picasaweb.google.com 2>&1 | egrep \"^> (Host:|GET)\"\n> GET / HTTP/1.1\n> Host: picasaweb.google.com\n> GET /home HTTP/1.1\n> Host: picasaweb.google.com\n> GET /accounts/ServiceLogin?hl=en_US&continue=https%3A%2F%2Fpicasaweb.google.com%2Flh%2Flogin%3Fcontinue%3Dhttps%253A%252F%252Fpicasaweb.google.com%252Fhome&service=lh2&ltmpl=gp&passive=true HTTP/1.1\n> Host: www.google.com\n> GET /ServiceLogin?hl=en_US&continue=https%3A%2F%2Fpicasaweb.google.com%2Flh%2Flogin%3Fcontinue%3Dhttps%253A%252F%252Fpicasaweb.google.com%252Fhome&service=lh2&ltmpl=gp&passive=true HTTP/1.1\n> Host: accounts.google.com"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current user identity as a number",
      "Most Similar TLDR Script": "id -u",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_52979388: Unable to correctly use variable in curl command",
        "so_48430129: Assign a variable in curl URL shell script"
      ],
      "Top-3 Scripts": [
        "so_52979388: $ DATA='<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n> <md:EntityDescriptor'\n$ SP_ID=1\n$ jq --arg metadata \"$DATA\" --arg id \"$SP_ID\" '{\"metadata\": $metadata, \"id\": $id}' <<< {}\n{\n  \"metadata\": \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<md:EntityDescriptor\",\n  \"id\": \"1\"\n}",
        "so_48430129: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_67933010: Regarding file upload parameter in curl command"
      ],
      "Top-3 Scripts": [
        "so_67933010: $ ls *.jar\nb.jar\n$ echo $(ls -R ${PWD}/*.jar)\n/root/b.jar\n\n-F file=@$(ls -R ${PWD}/*.jar)"
      ],
      "Explanations about Options": {
        "-R": "list subdirectories recursively"
      }
    },
    {
      "Command": "groups",
      "MP Summary": "print the groups a user is in",
      "Most Similar TLDR Task": "Print group memberships for a specific user",
      "Most Similar TLDR Script": "groups {{username}}",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_49115597: how to translate curl command in powershell"
      ],
      "Top-3 Scripts": [
        "so_49115597: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "urlencode",
      "MP Summary": "convert strings to or from URL-encoded form",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_11876353: URL encoding a string in bash script"
      ],
      "Top-3 Scripts": [
        "so_11876353: ENCODEDMESSAGE=$(php -r \"echo urlencode(\\\"$MESSAGE\\\");\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "ul_111535: curl command output in a variable"
      ],
      "Top-3 Scripts": [
        "ul_111535: var=$(curl -s --head http://myurl/ | head -n 1 | grep \"HTTP/1.[01] [23]..\")\necho \"$var\";\nif [ \"$var\" == \"some value\" ]; then    \n    do something;    \nelse\n    do some other thing;\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "return",
      "MP Summary": "return from a function or dot script",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_49115597: how to translate curl command in powershell"
      ],
      "Top-3 Scripts": [
        "so_49115597: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "POST",
      "MP Summary": "Handle a part of posting messages (used by sn news system)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_21177159: bash variable in curl command",
        "so_55531658: Unable to use variable in curl command",
        "so_38716850: curl command in linux"
      ],
      "Top-3 Scripts": [
        "so_21177159: curl -H \"Content-type: application/json\" -X POST \\\n-d \"{    \n  \\\"service_key\\\": \\\"e93facc04764012d7bfb002500d5d1a6\\\",\n  ...\n  \\\"description\\\": \\\"FAILURE for production/HTTP on machine $machine\\\"\n}\" \\\n\"https://events.pagerduty.com/generic/2010-04-15/create_event.json\"",
        "so_55531658: user=foo\npwd=foo_pwd\ncurl -s --header \"Content-Type:application/json\" --header \"Accept:application/json\" -X POST https://example.com --data-binary '{\"username\":\"'\"$user\"'\",\"password\":\"'\"$pwd\"'\"}'",
        "so_38716850: curl -H \"Content-Type: application/json\" -X POST -d '{\"key1\":\"value1\",\"key2\":\"value2\"}' http://domain.com/rest/path/here"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "generic",
      "MP Summary": "generic preprocessor for IRAF",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "None",
      "Most Similar NL2Bash Script": "None",
      "Top-3 Similar Questions": [
        "so_21177159: bash variable in curl command"
      ],
      "Top-3 Scripts": [
        "so_21177159: curl -H \"Content-type: application/json\" -X POST \\\n-d \"{    \n  \\\"service_key\\\": \\\"e93facc04764012d7bfb002500d5d1a6\\\",\n  ...\n  \\\"description\\\": \\\"FAILURE for production/HTTP on machine $machine\\\"\n}\" \\\n\"https://events.pagerduty.com/generic/2010-04-15/create_event.json\""
      ],
      "Explanations about Options": {}
    }
  ]
}