{
  "Query": "Display curl output in readable JSON format in Unix shell script",
  "Answers": [
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Store a formatted message in a variable (does not work on zsh)",
      "Most Similar TLDR Script": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_44389011: how to display output in the following format in unix",
        "so_26455543: Find files and display results in an specific format to txt file"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_44389011: awk -F  \"-\" '{if(NR%2){printf $1 \" \" $2 \" -before load cnt: \" $3}else{printf \" after load cnt: \" $3 \"\\n\"}}' filename",
        "so_26455543: find $target -type f -iname \"*.txt\" \\\n | shuf \\\n | awk -F- '{printf(\"%s:%s\\n\", $0, $NF)}' \\\n | sort -t : -k 2 -s \\\n | cut -d : -f 1 \\\n | awk -F / '{printf(\"file '\\''%s'\\''\\n\", $0)}' \\\n > $destination/results.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_14422065: How to print echo statement in formatted as cat command in shell scripting?",
        "so_64271111: Getting output of curl command in a variable"
      ],
      "Top-3 Scripts": [
        "so_60816352: parset myarr \\\n  -a input.csv \\\n  --jobs 0 \\\n  --timeout $parallel_timeout \\\n  get_data.sh {}\n\necho \"${myarr[3]}\"\n\necho www.google.com > input.txt\necho www.bing.com >> input.txt\n\n# Search for both foo and bar on all sites\nparset output curl https://{1}/?search={2} :::: input.txt ::: foo bar\n\necho \"${output[1]}\"\necho \"${output[2]}\"",
        "so_14422065: o=`cat xyz.log`\necho \"$o\"\n# ---^--^",
        "so_64271111: out=$(curl -u user:password -k ${second_url})\n# or \nout=$(curl -u user:password -k abc.com/${jobid}/result/ --get -d output=json) \n# and\necho \"$out\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output a JSON file, in pretty-print format",
      "Most Similar TLDR Script": "jq . {{file.json}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47018863: Parsing and storing the json output of a curl command in bash",
        "so_59992159: Sending JSON with curl request in BASH File / SHELL script: JSON_PARSING_ERROR: Unexpected character (')",
        "so_70082914: Use bash variable in substitution command with this formatting, with JSON"
      ],
      "Top-3 Scripts": [
        "so_47018863: curl '...' | jq --raw-output '.AssetID'\n\nasset_ID=$( curl '...' | jq --raw-output '.AssetID' )",
        "so_59992159: ",
        "so_70082914: #!/bin/bash\nchanging_stuff='Active-2021-xy Part YX'\ntotal_number=`Command_xy show base name \"$changing_stuff\" limit 1 --format json | jq '.total'`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send data in JSON format, specifying the appropriate content-type header",
      "Most Similar TLDR Script": "curl -d {{'{\"name\":\"bob\"}'}} -H {{'Content-Type: application/json'}} {{http://example.com/users/1234}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_33670959: Running curl in a loop results in unexpected output"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_60816352: echo www.google.com > input.txt\necho www.bing.com >> input.txt\n\n# Search for both foo and bar on all sites\nparset output curl https://{1}/?search={2} :::: input.txt ::: foo bar\n\necho \"${output[1]}\"\necho \"${output[2]}\"",
        "so_33670959: (set -x; curl ${auth_header} -s http://${h}/${p} -o /dev/null ${out_parms})\n\n++ curl -u admin:secret -s http://test.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://test.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://a1.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://a1.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://p.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://p.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000\n\ncurl ${auth_header} -s http://${h}/${p} -o /dev/null -w \"%{http_code} %{url_effective}\\n\"\n\ncurl ${auth_header} -s http://${h}/${p} -o /dev/null \"${out_parms}\""
      ],
      "Explanations about Options": {
        "-o": "Write output to <file> instead of stdout. If you are using {} or [] to fetch\n multiple documents, you can use '#' followed by a number in the <file> specifier.\n That variable will be replaced with the current string for the URL being fetched.\n Like in:",
        "-s": "Silent or quiet mode. Don't show progress meter or error messages. Makes Curl\n mute. It will still output the data you ask for, potentially even to the\n terminal/stdout unless you redirect it."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Display non-printable and whitespace characters (with `M-` prefix if non-ASCII)",
      "Most Similar TLDR Script": "cat -v -t -e {{file}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28971771: Getting JSON value from cURL in Linux Bash",
        "so_17029902: Using curl POST with variables defined in bash script functions",
        "ul_396301: How do I display the contents of find in a shell script"
      ],
      "Top-3 Scripts": [
        "so_28971771: cat <<EOF | json_reformat | \\\n    sed -rne '/:/s@^\\s+\"(\\w+)\":\\s+\"([^\"]+)\",?@json_\\1=\"\\2\"@gp'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\ncat <<EOF | \\\n    sed -re 's@(\\[|\\]|\\{|\\})@@g' -e 's/,/\\n/g' | \\\n    sed -re 's@\"(\\w+)\":\\s*\"?([^\"]*)\"?@json_\\1=\"\\2\"@g'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF",
        "so_17029902: ",
        "ul_396301: #! /bin/bash -\nread -p \"Please enter a directory: \" directory    # Shorter\nread -p \"Please enter a project name: \" projName    # Shorter\nfind \"$directory\" -type f -name \"$projName\" | while read file; do #Always double quote your variables.  The single quotes around projName prevented it from being expanded.\necho \"Reading $file...\"  # $FILE is not a valid variable in your script\ndu -ch \"$file\"          # this being in an exec statement was feeding bad info to your while loop.\ncat \"$file\" | grep 'total$'   # $FILE is not a valid variable in your script.  I think you want to cat the contents of the file and not echo it's filename.\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_4315382: How can i convert linux \"date +%s\" output to a more readable format in bash script",
        "so_33350578: format date column in csv with bash script"
      ],
      "Top-3 Scripts": [
        "so_4315382: date -d @$(($startTime-$1-5))\n\ndate -d @$startTime\n\nman date",
        "so_33350578: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "Long format list with size displayed using human readable units (KB, MB, GB)",
      "Most Similar TLDR Script": "ls -lh",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18605334: Format file size in Unix in readable format",
        "so_69344075: Create a json from given list of filenames in unix script",
        "so_22875338: How do you format output string in bash script for input by another script?"
      ],
      "Top-3 Scripts": [
        "so_18605334: BLOCK_SIZE=\"'1\" ls -l",
        "so_69344075: for file in $(ls *.txt); do file_version=$(echo $file | sed 's/\\(^.*-\\)\\(.*\\)\\(.txt.*$\\)/\\2/'); jq -n --arg name \"$file_version\" --arg path \"$file\" '{name: $name, name: $path}'; done | jq -n '.urls |= [inputs]'",
        "so_22875338: "
      ],
      "Explanations about Options": {
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace the first occurrence of a regular expression in each line of a file, and print the result",
      "Most Similar TLDR Script": "sed 's/{{regex}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_54510711: how to remove extra quotes around the string in Json file in shell script",
        "so_47018863: Parsing and storing the json output of a curl command in bash"
      ],
      "Top-3 Scripts": [
        "so_60816352: ",
        "so_54510711: sed -i 's/\"\"\\([^\",]\\+\\)\"\"/\"\\1\"/g' file",
        "so_47018863: "
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28971771: Getting JSON value from cURL in Linux Bash",
        "so_32181222: curl command not executing via shell script in bash"
      ],
      "Top-3 Scripts": [
        "so_28971771: ",
        "so_32181222: curlCmd=\"curl 'https://www.facebook.com/vivekkumar27june88' > ~/Desktop/fb.html\"\neval $curlCmd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_54510711: how to remove extra quotes around the string in Json file in shell script",
        "so_45490432: Get output from curl executed in PHP",
        "so_33350578: format date column in csv with bash script"
      ],
      "Top-3 Scripts": [
        "so_54510711: sed -i 's/\"\"\\([^\",]\\+\\)\"\"/\"\\1\"/g' file",
        "so_45490432: $ch = curl_init ( 'https://api.sonicapi.com/file/upload?access_id=' . $accessId );\ncurl_setopt_array ( $ch, array (\n        CURLOPT_POST => true,\n        CURLOPT_POSTFIELDS => array (\n                'file'=>new CURLFile('shortaudio.mp3')\n        ),\n        CURLOPT_RETURNTRANSFER=>true\n) );\n$output=curl_exec($ch);\ncurl_close($ch);",
        "so_33350578: awk 'BEGIN{FS=OFS=\",\"} NR>1{cmd = \"date -d \\\"\" $2 \"\\\" \\\"+%Y-%m-%d\\\"\";\n       cmd | getline out; $2=out; close(\"uuidgen\")} 1' file\n\"Column1\",\"Date\",\"Column2\"\n\"fdfsd\",2015-10-23,\"rwer\"\n\"fsdsf\",2015-10-14,\"jjfg\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Display a prompt before the input",
      "Most Similar TLDR Script": "read -p \"{{Enter your input here: }}\" {{variable}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_50649937: return specific items in json object using bash",
        "ul_396301: How do I display the contents of find in a shell script"
      ],
      "Top-3 Scripts": [
        "so_50649937: while IFS= read -r name; do\n    ...\ndone < <(jq -sr '.[].Name' tmp.json)",
        "ul_396301: #!/bin/bash\necho \"Please enter directory: \"\nread directory\necho -e \"Please enter project name: \"\nread projName\nfind $directory -type f -name ' $projName ' -exec du -ch {} + | while read file; do\necho \"Reading $FILE...\"\necho $FILE | grep total$\ndone\n\n#! /bin/bash -\nread -p \"Please enter a directory: \" directory    # Shorter\nread -p \"Please enter a project name: \" projName    # Shorter\nfind \"$directory\" -type f -name \"$projName\" | while read file; do #Always double quote your variables.  The single quotes around projName prevented it from being expanded.\necho \"Reading $file...\"  # $FILE is not a valid variable in your script\ndu -ch \"$file\"          # this being in an exec statement was feeding bad info to your while loop.\ncat \"$file\" | grep 'total$'   # $FILE is not a valid variable in your script.  I think you want to cat the contents of the file and not echo it's filename.\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47018863: Parsing and storing the json output of a curl command in bash",
        "so_45491659: Compare keys in json string using Unix shell script",
        "so_15382335: output of shell script in json form"
      ],
      "Top-3 Scripts": [
        "so_47018863: ",
        "so_45491659: ",
        "so_15382335: echo \"{\\\"Cpu\\\":\\\"`top -b -d1 -n1 | grep Cpu | cut -f3 -d \" \" | cut -f1 -d %`\\\"}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the second column of the lines containing \"something\" in a space-separated file",
      "Most Similar TLDR Script": "awk '/{{something}}/ {print $2}' {{filename}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_44389011: how to display output in the following format in unix",
        "so_60816352: How to store curl output in multiple variables in Bash"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_44389011: awk -F  \"-\" '{if(NR%2){printf $1 \" \" $2 \" -before load cnt: \" $3}else{printf \" after load cnt: \" $3 \"\\n\"}}' filename",
        "so_60816352: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45715538: Parsing variables in curl with bash script"
      ],
      "Top-3 Scripts": [
        "so_45715538: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_47061923: How can I interpret variables on the fly in the shell script?"
      ],
      "Top-3 Scripts": [
        "so_60816352: export -f",
        "so_47061923: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "Show the size of a single directory, in human readable units",
      "Most Similar TLDR Script": "du -sh {{path/to/directory}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18605334: Format file size in Unix in readable format",
        "ul_396301: How do I display the contents of find in a shell script"
      ],
      "Top-3 Scripts": [
        "so_18605334: ",
        "ul_396301: #!/bin/bash\necho \"Please enter directory: \"\nread directory\necho -e \"Please enter project name: \"\nread projName\nfind $directory -type f -name ' $projName ' -exec du -ch {} + | while read file; do\necho \"Reading $FILE...\"\necho $FILE | grep total$\ndone\n\n#! /bin/bash -\nread -p \"Please enter a directory: \" directory    # Shorter\nread -p \"Please enter a project name: \" projName    # Shorter\nfind \"$directory\" -type f -name \"$projName\" | while read file; do #Always double quote your variables.  The single quotes around projName prevented it from being expanded.\necho \"Reading $file...\"  # $FILE is not a valid variable in your script\ndu -ch \"$file\"          # this being in an exec statement was feeding bad info to your while loop.\ncat \"$file\" | grep 'total$'   # $FILE is not a valid variable in your script.  I think you want to cat the contents of the file and not echo it's filename.\ndone"
      ],
      "Explanations about Options": {
        "-h": "print sizes in human readable format (e.g., 1K 234M 2G)",
        "-c": "produce a grand total"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26455543: Find files and display results in an specific format to txt file",
        "so_26105872: Formatting Find output before it's used in next command",
        "ul_396301: How do I display the contents of find in a shell script"
      ],
      "Top-3 Scripts": [
        "so_26455543: find $target -type f -iname \"*.txt\" \\\n | shuf \\\n | awk -F- '{printf(\"%s:%s\\n\", $0, $NF)}' \\\n | sort -t : -k 2 -s \\\n | cut -d : -f 1 \\\n | awk -F / '{printf(\"file '\\''%s'\\''\\n\", $0)}' \\\n > $destination/results.txt",
        "so_26105872: find . -type f -exec sh -c 'joe=$(basename {}); echo $joe' \\;",
        "ul_396301: #!/bin/bash\necho \"Please enter directory: \"\nread directory\necho -e \"Please enter project name: \"\nread projName\nfind $directory -type f -name ' $projName ' -exec du -ch {} + | while read file; do\necho \"Reading $FILE...\"\necho $FILE | grep total$\ndone\n\n#! /bin/bash -\nread -p \"Please enter a directory: \" directory    # Shorter\nread -p \"Please enter a project name: \" projName    # Shorter\nfind \"$directory\" -type f -name \"$projName\" | while read file; do #Always double quote your variables.  The single quotes around projName prevented it from being expanded.\necho \"Reading $file...\"  # $FILE is not a valid variable in your script\ndu -ch \"$file\"          # this being in an exec statement was feeding bad info to your while loop.\ncat \"$file\" | grep 'total$'   # $FILE is not a valid variable in your script.  I think you want to cat the contents of the file and not echo it's filename.\ndone"
      ],
      "Explanations about Options": {
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_32893570: Want to display output in column wise in Linux Shell script",
        "so_9612993: How to convert This Format to JSON Format in perl?"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_32893570: last -w -F | awk '{print $1\",\"$3\",\"$5$6$7$8\",\"$11$12$13$14\",\"$15}' | tac | tr ',' '\\t'",
        "so_9612993: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26455543: Find files and display results in an specific format to txt file",
        "so_45491659: Compare keys in json string using Unix shell script"
      ],
      "Top-3 Scripts": [
        "so_26455543: find $target -type f -iname \"*.txt\" \\\n | shuf \\\n | awk -F- '{printf(\"%s:%s\\n\", $0, $NF)}' \\\n | sort -t : -k 2 -s \\\n | cut -d : -f 1 \\\n | awk -F / '{printf(\"file '\\''%s'\\''\\n\", $0)}' \\\n > $destination/results.txt",
        "so_45491659: "
      ],
      "Explanations about Options": {
        "-t": "use SEP instead of non-blank to blank transition",
        "-s": "stabilize sort by disabling last-resort comparison",
        "-k": "sort via a key; KEYDEF gives location and type"
      }
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_4315382: How can i convert linux \"date +%s\" output to a more readable format in bash script",
        "so_15382335: output of shell script in json form"
      ],
      "Top-3 Scripts": [
        "so_4315382: man date",
        "so_15382335: man cut"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26105872: Formatting Find output before it's used in next command",
        "so_22875338: How do you format output string in bash script for input by another script?"
      ],
      "Top-3 Scripts": [
        "so_26105872: find . -type f -exec sh -c 'joe=$(basename {}); echo $joe' \\;",
        "so_22875338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14422065: How to print echo statement in formatted as cat command in shell scripting?"
      ],
      "Top-3 Scripts": [
        "so_14422065: `echo hi there` # -- command not found 'hi'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "df",
      "MP Summary": "report file system disk space usage",
      "Most Similar TLDR Task": "Display all filesystems and their disk usage in human readable form",
      "Most Similar TLDR Script": "df -h",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18605334: Format file size in Unix in readable format"
      ],
      "Top-3 Scripts": [
        "so_18605334: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of `stdin`",
      "Most Similar TLDR Script": "cut -c {{1-16}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_26455543: Find files and display results in an specific format to txt file",
        "so_15382335: output of shell script in json form"
      ],
      "Top-3 Scripts": [
        "so_60816352: ",
        "so_26455543: find $target -type f -iname \"*.txt\" \\\n | shuf \\\n | awk -F- '{printf(\"%s:%s\\n\", $0, $NF)}' \\\n | sort -t : -k 2 -s \\\n | cut -d : -f 1 \\\n | awk -F / '{printf(\"file '\\''%s'\\''\\n\", $0)}' \\\n > $destination/results.txt",
        "so_15382335: echo \"{\\\"Cpu\\\":\\\"`top -b -d1 -n1 | grep Cpu | cut -f3 -d \" \" | cut -f1 -d %`\\\"}\"\n\nman cut"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "tac",
      "MP Summary": "concatenate and print files in reverse",
      "Most Similar TLDR Task": "Print the contents of the standard input reversed to the standard output",
      "Most Similar TLDR Script": "{{command}} | tac",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32893570: Want to display output in column wise in Linux Shell script"
      ],
      "Top-3 Scripts": [
        "so_32893570: last -w -F | awk '{print $1\",\"$3\",\"$5$6$7$8\",\"$11$12$13$14\",\"$15}' | tac | tr ',' '\\t'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33670959: Running curl in a loop results in unexpected output"
      ],
      "Top-3 Scripts": [
        "so_33670959: (set -x; curl ${auth_header} -s http://${h}/${p} -o /dev/null ${out_parms})"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26105872: Formatting Find output before it's used in next command"
      ],
      "Top-3 Scripts": [
        "so_26105872: find . -type f -exec sh -c 'joe=$(basename {}); echo $joe' \\;"
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Set multiple variables and run a program",
      "Most Similar TLDR Script": "env {{variable1}}={{value}} {{variable2}}={{value}} {{variable3}}={{value}} {{program}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47061923: How can I interpret variables on the fly in the shell script?"
      ],
      "Top-3 Scripts": [
        "so_47061923: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uniq",
      "MP Summary": "report or omit repeated lines",
      "Most Similar TLDR Task": "Display only unique lines",
      "Most Similar TLDR Script": "sort {{file}} | uniq -u",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45491659: Compare keys in json string using Unix shell script"
      ],
      "Top-3 Scripts": [
        "so_45491659: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current user identity as a number",
      "Most Similar TLDR Script": "id -u",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60816352: How to store curl output in multiple variables in Bash"
      ],
      "Top-3 Scripts": [
        "so_60816352: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32893570: Want to display output in column wise in Linux Shell script"
      ],
      "Top-3 Scripts": [
        "so_32893570: last -w -F | awk '{print $1\",\"$3\",\"$5$6$7$8\",\"$11$12$13$14\",\"$15}' | tac | tr ',' '\\t'"
      ],
      "Explanations about Options": {
        "-F": "Print full login and logout times and dates.",
        "-w": "Display full user names and domain names in the output."
      }
    },
    {
      "Command": "ruby",
      "MP Summary": "Interpreted object-oriented scripting language",
      "Most Similar TLDR Task": "Execute a Ruby script",
      "Most Similar TLDR Script": "ruby {{script.rb}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_636714: Format data as a table in bash"
      ],
      "Top-3 Scripts": [
        "su_636714: ruby -e 'require \"rubygems\"; require \"json\"; require \"table_print\";\nd = JSON.parse(ARGF.read);\nd = d.map { |row| row[\"addresses\"] = row[\"addresses\"].join(\", \"); row }; \ntp.set :max_width, 120;\ntp d' < input"
      ],
      "Explanations about Options": {
        "-e": "Specifies script from command-line while telling Ruby not to search the rest\n of the arguments for a script file name."
      }
    },
    {
      "Command": "tty",
      "MP Summary": "return user's terminal name",
      "Most Similar TLDR Task": "Print the file name of this terminal",
      "Most Similar TLDR Script": "tty",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_7532036: Getting a shell error code from curl in Jenkins while still displaying output in console"
      ],
      "Top-3 Scripts": [
        "so_7532036: /dev/tty"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32893570: Want to display output in column wise in Linux Shell script"
      ],
      "Top-3 Scripts": [
        "so_32893570: | tr ',' '\\t'\n\nlast -w -F | awk '{print $1\",\"$3\",\"$5$6$7$8\",\"$11$12$13$14\",\"$15}' | tac | tr ',' '\\t'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60428064: Print output in vertical format for bash with echo"
      ],
      "Top-3 Scripts": [
        "so_60428064: paste <(pgrep java) <(paste <(pgrep http) <(pgrep php))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "Extract zip file(s) (for multiple files, separate file paths by spaces)",
      "Most Similar TLDR Script": "unzip {{file(s)}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22875338: How do you format output string in bash script for input by another script?"
      ],
      "Top-3 Scripts": [
        "so_22875338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Format output for a 30 characters wide display",
      "Most Similar TLDR Script": "printf \"header1 header2\\nbar foo\\n\" | column -c {{30}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45491659: Compare keys in json string using Unix shell script"
      ],
      "Top-3 Scripts": [
        "so_45491659: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Launch the default shell with superuser privileges",
      "Most Similar TLDR Script": "sudo -i",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_636714: Format data as a table in bash"
      ],
      "Top-3 Scripts": [
        "su_636714: sudo gem install json\nsudo gem install table_print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and login using the default shell",
      "Most Similar TLDR Script": "exec -l {{command -with -flags}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_396301: How do I display the contents of find in a shell script"
      ],
      "Top-3 Scripts": [
        "ul_396301: #! /bin/bash -\nread -p \"Please enter a directory: \" directory    # Shorter\nread -p \"Please enter a project name: \" projName    # Shorter\nfind \"$directory\" -type f -name \"$projName\" | while read file; do #Always double quote your variables.  The single quotes around projName prevented it from being expanded.\necho \"Reading $file...\"  # $FILE is not a valid variable in your script\ndu -ch \"$file\"          # this being in an exec statement was feeding bad info to your while loop.\ncat \"$file\" | grep 'total$'   # $FILE is not a valid variable in your script.  I think you want to cat the contents of the file and not echo it's filename.\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "shuf",
      "MP Summary": "generate random permutations",
      "Most Similar TLDR Task": "Write the output to another file",
      "Most Similar TLDR Script": "shuf {{filename}} -o {{output_filename}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26455543: Find files and display results in an specific format to txt file"
      ],
      "Top-3 Scripts": [
        "so_26455543: find $target -type f -iname \"*.txt\" \\\n | shuf \\\n | awk -F- '{printf(\"%s:%s\\n\", $0, $NF)}' \\\n | sort -t : -k 2 -s \\\n | cut -d : -f 1 \\\n | awk -F / '{printf(\"file '\\''%s'\\''\\n\", $0)}' \\\n > $destination/results.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60428064: Print output in vertical format for bash with echo"
      ],
      "Top-3 Scripts": [
        "so_60428064: ps -ef\n\npaste <(ps -ef | grep -o java) <(paste <(ps -ef | grep -o http) <(ps -ef | grep -o php))"
      ],
      "Explanations about Options": {
        "-e": "Select all processes. Identical to -A.",
        "-f": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm."
      }
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare files, showing the differences in unified format (as used by `git diff`)",
      "Most Similar TLDR Script": "diff -u {{old_file}} {{new_file}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45491659: Compare keys in json string using Unix shell script"
      ],
      "Top-3 Scripts": [
        "so_45491659: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hello",
      "MP Summary": "friendly greeting program",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "hello --greeting=\"{{greeting_text}}\"",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28971771: Getting JSON value from cURL in Linux Bash"
      ],
      "Top-3 Scripts": [
        "so_28971771: cat <<EOF | json_reformat | \\\n    sed -rne '/:/s@^\\s+\"(\\w+)\":\\s+\"([^\"]+)\",?@json_\\1=\"\\2\"@gp'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\njson__id=\"54ff35887d8ef574029b9166\"\njson_user=\"54fe4313883bcec2c0ac0d64\"\njson_created=\"2015-03-10T18:18:48.023Z\"\njson_status=\"available\"\njson_pbo_udid=\"lemaker\"\njson_description=\"Prints hello world to console\"\njson_package_name=\"helloworld_1.0-1.deb\"\njson_name=\"Hello World V1\"\n\ncat <<EOF | \\\n    sed -re 's@(\\[|\\]|\\{|\\})@@g' -e 's/,/\\n/g' | \\\n    sed -re 's@\"(\\w+)\":\\s*\"?([^\"]*)\"?@json_\\1=\"\\2\"@g'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\njson__id=\"54ff35887d8ef574029b9166\"\njson_user=\"54fe4313883bcec2c0ac0d64\"\njson___v=\"0\"\njson_created=\"2015-03-10T18:18:48.023Z\"\njson_status=\"available\"\njson_pbo_udid=\"lemaker\"\njson_installation_script=\"\"\njson_description=\"Prints hello world to console\"\njson_package_name=\"helloworld_1.0-1.deb\"\njson_name=\"Hello World V1\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record timing information (data is outputted to the standard error)",
      "Most Similar TLDR Script": "script -t 2> {{path/to/timingfile}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_396301: How do I display the contents of find in a shell script"
      ],
      "Top-3 Scripts": [
        "ul_396301: #! /bin/bash -\nread -p \"Please enter a directory: \" directory    # Shorter\nread -p \"Please enter a project name: \" projName    # Shorter\nfind \"$directory\" -type f -name \"$projName\" | while read file; do #Always double quote your variables.  The single quotes around projName prevented it from being expanded.\necho \"Reading $file...\"  # $FILE is not a valid variable in your script\ndu -ch \"$file\"          # this being in an exec statement was feeding bad info to your while loop.\ncat \"$file\" | grep 'total$'   # $FILE is not a valid variable in your script.  I think you want to cat the contents of the file and not echo it's filename.\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Display the routing table",
      "Most Similar TLDR Script": "ip route",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_21101157: Getting correct output in a shell script from the curl command"
      ],
      "Top-3 Scripts": [
        "so_21101157: IPADDR=$(curl ipinfo.io/ip 2>/dev/null)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Merge two files, with lines added alternatively",
      "Most Similar TLDR Script": "paste -d '\\n' {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60428064: Print output in vertical format for bash with echo"
      ],
      "Top-3 Scripts": [
        "so_60428064: paste <(pgrep java) <(paste <(pgrep http) <(pgrep php))\n\npaste <(ps -ef | grep -o java) <(paste <(ps -ef | grep -o http) <(ps -ef | grep -o php))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_636714: Format data as a table in bash"
      ],
      "Top-3 Scripts": [
        "su_636714: sudo gem install json\nsudo gem install table_print"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22875338: How do you format output string in bash script for input by another script?"
      ],
      "Top-3 Scripts": [
        "so_22875338: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45491659: Compare keys in json string using Unix shell script"
      ],
      "Top-3 Scripts": [
        "so_45491659: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a directory recursively, in verbose mode (shows files as they are copied)",
      "Most Similar TLDR Script": "cp -vr {{path/to/source_directory}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "find regular files whose filename is \"your_pattern\" and display the total size of the files in human readable format.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "find . -type f  -name \"your_pattern\" -exec du -ch {} + 2>/dev/null | grep total$.\n",
          "command-options": {
            "find": {
              "mpsum": "search for files in a directory hierarchy",
              "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
              "-type": "File is of type c:"
            },
            "du": {
              "mpsum": "estimate file space usage",
              "-c": "produce a grand total",
              "-h": "print sizes in human readable format (e.g., 1K 234M 2G)"
            },
            "dev": {
              "mpsum": "release candidate LaTeX testing"
            },
            "grep": {
              "mpsum": "print lines that match patterns"
            }
          },
          "TLDR_inform": {
            "find": {
              "man1_find_10075": "find file directori given directori tree recurs find directori match given name case-insensit mode find file extens find file match multipl pattern find file match given pattern exclud specif path find file match given size rang find file match path pattern find file modifi last 7 day delet run command file use within command access filenam"
            },
            "du": {
              "man1_du_7710": "disk usag : estim summar file directori space usag list human-read size jpg file subdirectori current directori show cumul total end list human-read size directori subdirectori n level deep list human-read size directori file directori within list size directori subdirectori human-read form e\nauto-select appropri unit size list size directori subdirectori given unit b kb mb show size singl directori human readabl unit"
            },
            "dev": {
              "man1_dev_17127": "",
              "man1_dev_18227": "",
              "man1_dev_25075": "",
              "man1_dev_26073": "",
              "man1_dev_35421": "",
              "man1_dev_37549": "",
              "man1_dev_7859": ""
            },
            "grep": {
              "man1_grep_9973": "match pattern input text\nsupport simpl pattern regular express invert match exclud specif string print 3 line c ontext around b efor fter match print file name correspond line number match search pattern r ecurs current directori show match line n umber gnore non-text file search pattern within file search exact string use extend regular express support\n+ case-insensit mode use standard input instead file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22875338: How do you format output string in bash script for input by another script?"
      ],
      "Top-3 Scripts": [
        "so_22875338: "
      ],
      "Explanations about Options": {}
    }
  ]
}