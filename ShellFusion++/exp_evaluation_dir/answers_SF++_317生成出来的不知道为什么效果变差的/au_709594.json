{
  "Query": "How can I disable and enable SSL in Apache (without a command if possible)?",
  "Answers": [
    {
      "Command": "a2enmod",
      "MP Summary": "enable or disable an apache2 module",
      "Most Similar TLDR Task": "Enable a module",
      "Most Similar TLDR Script": "sudo a2enmod {{module}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25946170: How can I install SSL on localhost in Ubuntu?",
        "so_36395007: Enable .htaccess in ubuntu server for php",
        "so_35988990: How to enable php7 module in apache?"
      ],
      "Top-3 Scripts": [
        "so_25946170: sudo a2enmod ssl",
        "so_36395007: john@doe:~$  sudo a2enmod rewrite\njohn@doe:~$  sudo service apache2 reload",
        "so_35988990: a2enmod php7.0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_667466: Is it possible to disable monitor mode in Bash on invocation",
        "ul_187679: Is it possible to reverse a command in the bash shell?"
      ],
      "Top-3 Scripts": [
        "ul_667466: bash +o monitor\n\nbash --rcfile /path/to/that/alternate_bashrc_file",
        "ul_187679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25772670: How do I get console input to work with SSL in bash script?",
        "ul_107547: Disable ForwardX11Timeout without ForwardX11Trusted in OpenSSH Client?",
        "so_56273414: it is possible to use an if without executing its condition"
      ],
      "Top-3 Scripts": [
        "so_25772670: ",
        "ul_107547: ssh -o ForwardX11Timeout=2147423s -X ...",
        "so_56273414: if echo QUIT | netcat server 23 | grep SSH; then\n echo \"found an ssh server\"\nfi"
      ],
      "Explanations about Options": {
        "-X": "Enables X11 forwarding. This can also be specified on a per-host basis in a\n configuration file.",
        "-o": "Can be used to give options in the format used in the configuration file. This is\n useful for specifying options for which there is no separate command-line flag. For\n full details of the options listed below, and their possible values, see\n ssh_config(5)."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message without the trailing newline",
      "Most Similar TLDR Script": "echo -n \"{{Hello World}}\"",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25772670: How do I get console input to work with SSL in bash script?",
        "so_33053456: Is it possible to direct the executed command in a script with bash?",
        "so_67714607: Is it possible to print in the next line without retyping echo in Linux scripting?"
      ],
      "Top-3 Scripts": [
        "so_25772670: ",
        "so_33053456: my_command() {\n    { echo \"Option $1\"; ./a.out --option \"$1\"; } >> log.txt\n}\n\nmy_command 1\nmy_command 2\n\nmy_command() {\n    local cmd=\"./a.out --option $1\"\n    { echo \"$cmd\"; $cmd; } >> log.txt\n}\n\nmy_command 1\nmy_command 2",
        "so_67714607: echo \"firstline\nsecondline\nthirdline\"\n\necho $'firstline\\nsecondline\\nthirdline'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "List the name and status of all services",
      "Most Similar TLDR Script": "service --status-all",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25946170: How can I install SSL on localhost in Ubuntu?",
        "so_36395007: Enable .htaccess in ubuntu server for php",
        "so_24329063: Enabling php_oci8_11g extension in php.ini via Chef recipe for Linux"
      ],
      "Top-3 Scripts": [
        "so_25946170: sudo service apache2 restart",
        "so_36395007: john@doe:~$  sudo a2enmod rewrite\njohn@doe:~$  sudo service apache2 reload",
        "so_24329063: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "a2dismod",
      "MP Summary": "enable or disable an apache2 module",
      "Most Similar TLDR Task": "Disable a module",
      "Most Similar TLDR Script": "sudo a2dismod {{module}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35988990: How to enable php7 module in apache?"
      ],
      "Top-3 Scripts": [
        "so_35988990: a2dismod php5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "a2ensite",
      "MP Summary": "enable or disable an apache2 site / virtual host",
      "Most Similar TLDR Task": "Enable a virtual host",
      "Most Similar TLDR Script": "sudo a2ensite {{virtual_host}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25946170: How can I install SSL on localhost in Ubuntu?"
      ],
      "Top-3 Scripts": [
        "so_25946170: sudo a2ensite default-ssl.conf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "add-apt-repository",
      "MP Summary": "Adds   a   repository   into   the   /etc/apt/sources.list   or /etc/apt/sources.list.d or removes an existing one",
      "Most Similar TLDR Task": "Enable source packages",
      "Most Similar TLDR Script": "add-apt-repository --enable-source {{repository_spec}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_208259: How do I enable SSL in Cherokee without libcherokee-mod-ssl?"
      ],
      "Top-3 Scripts": [
        "au_208259: sudo add-apt-repository ppa:cherokee-webserver/ppa\nsudo apt-get update\nsudo apt-get install libcherokee-mod-libssl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Remove a package and its configuration files",
      "Most Similar TLDR Script": "apt-get purge {{package}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_208259: How do I enable SSL in Cherokee without libcherokee-mod-ssl?"
      ],
      "Top-3 Scripts": [
        "au_208259: sudo add-apt-repository ppa:cherokee-webserver/ppa\nsudo apt-get update\nsudo apt-get install libcherokee-mod-libssl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_208259: How do I enable SSL in Cherokee without libcherokee-mod-ssl?",
        "au_1175409: How should I configure multiple virtual hosts with a single configuration file in Apache?",
        "ul_180754: How to disable script in \"dot-d\" (with suffix \".d\") directory in /etc without deleting it?"
      ],
      "Top-3 Scripts": [
        "au_208259: sudo add-apt-repository ppa:cherokee-webserver/ppa\nsudo apt-get update\nsudo apt-get install libcherokee-mod-libssl",
        "au_1175409: sudo letsencrypt --apache .... -d www.example.com -d example.com",
        "ul_180754: ...  For example, given:\n\n     #includedir /etc/sudoers.d\n\n sudo will read each file in /etc/sudoers.d, skipping file names that end\n in \u2018~\u2019 or contain a \u2018.\u2019"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Notify of job termination immediately",
      "Most Similar TLDR Script": "set -b",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_667466: Is it possible to disable monitor mode in Bash on invocation",
        "so_50243960: How can I secure Jenkins port 8080 with SSL under apache2 in ubuntu 18.04 Server?"
      ],
      "Top-3 Scripts": [
        "ul_667466: set +m",
        "so_50243960: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nano",
      "MP Summary": "Nano's ANOther editor, inspired by Pico",
      "Most Similar TLDR Task": "Before modification, backup separately as `{{current_file_name}}~`",
      "Most Similar TLDR Script": "nano -B {{filename}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25946170: How can I install SSL on localhost in Ubuntu?",
        "au_473318: How can I enable syntax highlighting in a Python file without an extension?"
      ],
      "Top-3 Scripts": [
        "so_25946170: sudo nano /etc/apache2/sites-available/default-ssl.conf",
        "au_473318: nano --syntax=python myscript"
      ],
      "Explanations about Options": {
        "--syntax": "Specify the name of the syntax highlighting to use from among the ones defined in\n the nanorc files."
      }
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36395007: Enable .htaccess in ubuntu server for php",
        "so_45443657: Unable to install SSL in Apache"
      ],
      "Top-3 Scripts": [
        "so_36395007: john@doe:~$  cd /var/www/html/your_website_root/\njohn@doe:~$  ls -la # this command will display all files including hidden files.\njohn@doe:~$  vi .htaccess # to edit the htaccess file",
        "so_45443657: AH00526: Syntax error on line 19 of /etc/apache2/sites-enabled/000-default.conf:\nInvalid command 'SSL', perhaps misspelled or defined by a module not included in the server configuration"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Apply multiple find-replace expressions to a file",
      "Most Similar TLDR Script": "sed -e 's/{{find}}/{{replace}}/' -e 's/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41837615: Bash script to update path to ssl certificate file in ssl.conf",
        "so_41861469: Bash script to update path to SSL certificate file in ssl.conf (RegEx word match with #)"
      ],
      "Top-3 Scripts": [
        "so_41837615: sed -i \"s|.*\\b$SSL_DEFAULT_CERT_PATH\\b.*|$SSL_CERT_PATH|\" file\n\nGNU sed",
        "so_41861469: SSL_CONFIG_PATH=/etc/httpd/conf.d/ssl.conf\n\nSSL_CA_CERT_PATH=/etc/pki/tls/certs/example-ca-bundle.crt\n\nsed -ri \"s|(.*#)(SSLCACertificateFile)\\s+(.*)|\\2 $SSL_CA_CERT_PATH|\" $SSL_CONFIG_PATH"
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)",
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and change the process name",
      "Most Similar TLDR Script": "exec -a {{process_name}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_34822: Is it possible to enable execution of files from a cifs mount in bash?"
      ],
      "Top-3 Scripts": [
        "ul_34822: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "openssl",
      "MP Summary": "OpenSSL command line tool",
      "Most Similar TLDR Task": "Display the certificate presented by an SSL/TLS server",
      "Most Similar TLDR Script": "openssl s_client -connect {{host}}:{{port}} </dev/null",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25946170: How can I install SSL on localhost in Ubuntu?"
      ],
      "Top-3 Scripts": [
        "so_25946170: sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/apache2/ssl/apache.key -out /etc/apache2/ssl/apache.crt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unalias",
      "MP Summary": "remove alias definitions",
      "Most Similar TLDR Task": "Remove an alias",
      "Most Similar TLDR Script": "unalias {{alias_name}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_273016: How to disable an alias in bash for a single command?"
      ],
      "Top-3 Scripts": [
        "ul_273016: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Use a specific Makefile",
      "Most Similar TLDR Script": "make --file {{file}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_39582: how to enable sound support in linux kernel without recompile?"
      ],
      "Top-3 Scripts": [
        "ul_39582: make menuconfig\n\nmake modules_install"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "telnet",
      "MP Summary": "user interface to the TELNET protocol",
      "Most Similar TLDR Task": "Emit the default escape character combination for terminating the session",
      "Most Similar TLDR Script": "Ctrl + ]",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56273414: it is possible to use an if without executing its condition"
      ],
      "Top-3 Scripts": [
        "so_56273414: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Run library module as a script (terminates option list)",
      "Most Similar TLDR Script": "python -m {{module}} {{arguments}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45168222: Enable python autocompletion in Vim without any install",
        "au_473318: How can I enable syntax highlighting in a Python file without an extension?"
      ],
      "Top-3 Scripts": [
        "so_45168222: au FileType python setl ofu=python3complete#Complete",
        "au_473318: nano --syntax=python myscript"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "alias",
      "MP Summary": "define or display aliases",
      "Most Similar TLDR Task": "Create a generic alias",
      "Most Similar TLDR Script": "alias {{word}}=\"{{command}}\"",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_22873671: Is it possible to access environment variables without the '$' in bash?"
      ],
      "Top-3 Scripts": [
        "so_22873671: alias mpsoma='mplayer http://192.168.1.1:8090'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination",
      "Most Similar TLDR Script": "install {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_208259: How do I enable SSL in Cherokee without libcherokee-mod-ssl?"
      ],
      "Top-3 Scripts": [
        "au_208259: sudo add-apt-repository ppa:cherokee-webserver/ppa\nsudo apt-get update\nsudo apt-get install libcherokee-mod-libssl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "7z",
      "MP Summary": "A file archiver with high compression ratio format",
      "Most Similar TLDR Task": "Archive a file or directory",
      "Most Similar TLDR Script": "7z a {{archived.7z}} {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68087138: Is it possible to compress files without keeping the structure in Linux?"
      ],
      "Top-3 Scripts": [
        "so_68087138: 7z a test.zip -l ~/flat_dir"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1131761: How to enable ssl in NGINX using Goddady certificate?",
        "so_43959923: Set up ssl correctly in lighttpd but when i restart it, https will time out?"
      ],
      "Top-3 Scripts": [
        "au_1131761: cat sitecert.crt ca-cert.crt > sitecert.fullchain.pem",
        "so_43959923: cat privkey.pem cert.pem > pemkey.pem"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rev",
      "MP Summary": "reverse lines characterwise",
      "Most Similar TLDR Task": "Reverse an entire file and print to `stdout`",
      "Most Similar TLDR Script": "rev {{file}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68087138: Is it possible to compress files without keeping the structure in Linux?"
      ],
      "Top-3 Scripts": [
        "so_68087138: for full_path_file in $(find ../cpptest -type f)\ndo\necho \"$full_path_file\"\nfilename=$(echo \"$full_path_file\" | rev | cut -d '/' -f 1 | rev)\necho \"$filename\"\nln -s -T \"$full_path_file\" \"$filename\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "git",
      "MP Summary": "the stupid content tracker",
      "Most Similar TLDR Task": "Execute a Git subcommand with a given configuration set",
      "Most Similar TLDR Script": "git -c '{{config.key}}={{value}}' {{subcommand}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_667466: Is it possible to disable monitor mode in Bash on invocation"
      ],
      "Top-3 Scripts": [
        "ul_667466: git clone git://git.savannah.gnu.org/bash.git"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expect",
      "MP Summary": "programmed dialogue with interactive programs, Version 5",
      "Most Similar TLDR Task": "Execute a specified expect script",
      "Most Similar TLDR Script": "expect -c \"{{commands}}\"",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25772670: How do I get console input to work with SSL in bash script?"
      ],
      "Top-3 Scripts": [
        "so_25772670: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chroot",
      "MP Summary": "run command or interactive shell with special root directory",
      "Most Similar TLDR Task": "Run command as new root directory",
      "Most Similar TLDR Script": "chroot {{/path/to/new/root}} {{command}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_187679: Is it possible to reverse a command in the bash shell?"
      ],
      "Top-3 Scripts": [
        "ul_187679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "crontab",
      "MP Summary": "maintain crontab files for individual users (Vixie Cron)",
      "Most Similar TLDR Task": "Sample job which runs every minute on the 3rd of April",
      "Most Similar TLDR Script": "* * 3 Apr * {{command_to_execute}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24964513: How can I allow PHP to use the at command in exec() calls when SELinux is enabled?"
      ],
      "Top-3 Scripts": [
        "so_24964513: $ crontab -l\n*/1 * * * * echo echo|/usr/bin/at now"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unset",
      "MP Summary": "unset values and attributes of variables and functions",
      "Most Similar TLDR Task": "Remove the variable `foo`, or if the variable doesn't exist, remove the function `foo`",
      "Most Similar TLDR Script": "unset {{foo}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_233628: Disable printing all possibilities in tcsh on TAB"
      ],
      "Top-3 Scripts": [
        "ul_233628: unset autolist"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "edit",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Edit action can be used to view any file on default mailcap explorer",
      "Most Similar TLDR Script": "edit {{filename}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_36395007: Enable .htaccess in ubuntu server for php"
      ],
      "Top-3 Scripts": [
        "so_36395007: john@doe:~$  cd /var/www/html/your_website_root/\njohn@doe:~$  ls -la # this command will display all files including hidden files.\njohn@doe:~$  vi .htaccess # to edit the htaccess file"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "module",
      "MP Summary": "command interface to the Modules package",
      "Most Similar TLDR Task": "Display available modules",
      "Most Similar TLDR Script": "module avail",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45443657: Unable to install SSL in Apache"
      ],
      "Top-3 Scripts": [
        "so_45443657: AH00526: Syntax error on line 19 of /etc/apache2/sites-enabled/000-default.conf:\nInvalid command 'SSL', perhaps misspelled or defined by a module not included in the server configuration"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sftp",
      "MP Summary": "OpenSSH secure file transfer",
      "Most Similar TLDR Task": "Get list of files on remote machine",
      "Most Similar TLDR Script": "ls",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56273414: it is possible to use an if without executing its condition"
      ],
      "Top-3 Scripts": [
        "so_56273414: if echo bye | sftp -b - -oPort=23 user@server ; then \n  echo \"sftp succeeded\"\nfi"
      ],
      "Explanations about Options": {
        "-t": "Sort the listing by last modification time.",
        "-o": "Can be used to pass options to ssh in the format used in ssh_config(5). This is\n useful for specifying options for which there is no separate sftp command-line flag.\n For example, to specify an alternate port use: sftp -oPort=24. For full details of\n the options listed below, and their possible values, see ssh_config(5).",
        "-P": "Specifies the port to connect to on the remote host.",
        "-r": "Reverse the sort order of the listing.",
        "-b": "Batch mode reads a series of commands from an input batchfile instead of stdin.\n Since it lacks user interaction it should be used in conjunction with non-\n interactive authentication to obviate the need to enter a password at connection\n time (see sshd(8) and ssh-keygen(1) for details)."
      }
    },
    {
      "Command": "timeout",
      "MP Summary": "run a command with a time limit",
      "Most Similar TLDR Task": "Specify the signal to be sent to the command after the time limit expires. (By default, TERM is sent)",
      "Most Similar TLDR Script": "timeout --signal {{INT}} {{5s}} {{sleep 10}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_107547: Disable ForwardX11Timeout without ForwardX11Trusted in OpenSSH Client?"
      ],
      "Top-3 Scripts": [
        "ul_107547: /opt/X11/bin/xauth:  timeout in locking authority file /var/folders/..../xauthfile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_31470666: SSL credentials for sending mail from gmail account in powershell code",
        "au_10880: Disable CTRL+Q in Firefox without keyconfig extension"
      ],
      "Top-3 Scripts": [
        "so_31470666: $smtp.EnableSSL = $true\n $smtp.credentials = New-Object System.Net.NetworkCredential($Username, $Password);",
        "au_10880: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_187679: Is it possible to reverse a command in the bash shell?"
      ],
      "Top-3 Scripts": [
        "ul_187679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "opt",
      "MP Summary": "LLVM optimizer",
      "Most Similar TLDR Task": "Optimize the program at level 2 and output the result to another file",
      "Most Similar TLDR Script": "opt -O2 {{path/to/file.bc}} -S -o {{path/to/output_file.bc}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_107547: Disable ForwardX11Timeout without ForwardX11Trusted in OpenSSH Client?"
      ],
      "Top-3 Scripts": [
        "ul_107547: /opt/X11/bin/xauth:  timeout in locking authority file /var/folders/..../xauthfile"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_187679: Is it possible to reverse a command in the bash shell?"
      ],
      "Top-3 Scripts": [
        "ul_187679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24964513: How can I allow PHP to use the at command in exec() calls when SELinux is enabled?"
      ],
      "Top-3 Scripts": [
        "so_24964513: $ crontab -l\n*/1 * * * * echo echo|/usr/bin/at now"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
      "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68087138: Is it possible to compress files without keeping the structure in Linux?"
      ],
      "Top-3 Scripts": [
        "so_68087138: for full_path_file in $(find ../cpptest -type f)\ndo\necho \"$full_path_file\"\nfilename=$(echo \"$full_path_file\" | rev | cut -d '/' -f 1 | rev)\necho \"$filename\"\nln -s -T \"$full_path_file\" \"$filename\"\ndone"
      ],
      "Explanations about Options": {
        "-s": "make symbolic links instead of hard links",
        "-T": "treat LINK_NAME as a normal file always"
      }
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_273016: How to disable an alias in bash for a single command?"
      ],
      "Top-3 Scripts": [
        "ul_273016: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Remove an environment variable",
      "Most Similar TLDR Script": "export -n {{VARIABLE}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1435690: How do I enable invocation of a program in bash without an explicit path?"
      ],
      "Top-3 Scripts": [
        "su_1435690: export PATH=\"$PATH:/usr/local/myfolder/bin\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68087138: Is it possible to compress files without keeping the structure in Linux?"
      ],
      "Top-3 Scripts": [
        "so_68087138: for full_path_file in $(find ../cpptest -type f)\ndo\necho \"$full_path_file\"\nfilename=$(echo \"$full_path_file\" | rev | cut -d '/' -f 1 | rev)\necho \"$filename\"\nln -s -T \"$full_path_file\" \"$filename\"\ndone"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_187679: Is it possible to reverse a command in the bash shell?"
      ],
      "Top-3 Scripts": [
        "ul_187679: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Change the password of the specified user",
      "Most Similar TLDR Script": "passwd {{username}} {{new_password}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18789241: How to Disable the output of command in php"
      ],
      "Top-3 Scripts": [
        "so_18789241: system(\"echo $new_password | sudo -u root passwd --stdin $username\") 3>/dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "atq",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Show the current user's scheduled jobs",
      "Most Similar TLDR Script": "atq",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24964513: How can I allow PHP to use the at command in exec() calls when SELinux is enabled?"
      ],
      "Top-3 Scripts": [
        "so_24964513: $ atq\n46  Fri Nov 21 17:23:00 2014 a apache\n\n$ atq\n46  Fri Nov 21 17:23:00 2014 = apache"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "direnv",
      "MP Summary": "unclutter your .profile",
      "Most Similar TLDR Task": "Print some debug status information",
      "Most Similar TLDR Script": "direnv status",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_50308076: Is it possible to have commands available in specific directories only?"
      ],
      "Top-3 Scripts": [
        "so_50308076: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rmdir",
      "MP Summary": "remove empty directories",
      "Most Similar TLDR Task": "Remove directory, provided it is empty. Use `rm -r` to remove non-empty directories",
      "Most Similar TLDR Script": "rmdir {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17476404: Why can't I execute some command in Linux without any output in the terminal?"
      ],
      "Top-3 Scripts": [
        "so_17476404: rmdir * > /dev/null 2> /dev/null"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67714607: Is it possible to print in the next line without retyping echo in Linux scripting?"
      ],
      "Top-3 Scripts": [
        "so_67714607: printf '%s\\n' firstline secondline thirdline"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Replace the \"openssl\" command executable with a symbolic link to \"/usr/local/ssl/bin/openssl\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`\n",
          "command-options": {
            "sudo": {
              "mpsum": "execute a command as another user"
            },
            "ln": {
              "mpsum": "make links between files",
              "-s": "make symbolic links instead of hard links",
              "-f": "remove existing destination files"
            },
            "local": {
              "mpsum": "Postfix local mail delivery"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "openssl": {
              "mpsum": "OpenSSL command line tool"
            }
          },
          "TLDR_inform": {
            "sudo": {
              "man8_sudo_4867": "execut singl command superus anoth user edit file superus default editor launch default shell superus privileg repeat last command prefix sudo bash zsh etc\nrun command anoth user group run command superus"
            },
            "ln": {
              "man1_ln_17837": "creat link file directori creat hard link file creat symbol link file directori overwrit exist symbol point differ file"
            },
            "local": {
              "man8_local_2778": ""
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "openssl": {
              "man1_openssl_23644": "openssl cryptograph toolkit display certif expir date display certif inform display certif present ssl tl server display complet certif chain http server display start expiri date domain certif gener 2048bit rsa privat key save file gener certif sign request sent certif author gener self-sign certif certif sign request valid number day"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45443657: Unable to install SSL in Apache"
      ],
      "Top-3 Scripts": [
        "so_45443657: AH00526: Syntax error on line 19 of /etc/apache2/sites-enabled/000-default.conf:\nInvalid command 'SSL', perhaps misspelled or defined by a module not included in the server configuration"
      ],
      "Explanations about Options": {}
    }
  ]
}