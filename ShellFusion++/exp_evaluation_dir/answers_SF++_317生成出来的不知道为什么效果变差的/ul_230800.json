{
  "Query": "Re-encoding video library in x265 (HEVC) with no quality loss",
  "Answers": [
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Remux MKV video to MP4 without re-encoding audio or video streams",
      "Most Similar TLDR Script": "ffmpeg -i {{input_video}}.mkv -codec copy {{output_video}}.mp4",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_16: Remux MKV video to MP4 without re-encoding audio or video streams",
        "tldr_17: Remux MKV video to MP4 without re-encoding audio or video streams",
        "ul_7284: ffmpeg and libmp3lame produces bad audio quality?"
      ],
      "Top-3 Scripts": [
        "tldr_16: ffmpeg -i {{input_video}}.mkv -codec copy {{output_video}}.mp4",
        "tldr_17: ffmpeg -i {{input_video}}.mkv -codec copy {{output_video}}.mp4",
        "ul_7284: ffmpeg -i ~/test.flv -acodec libmp3lame -qscale 8 test.avi"
      ],
      "Explanations about Options": {
        "-qscale": "For lossy encoding, this controls image quality, 0 to 100. For lossless encoding, this\n controls the effort and time spent at compressing more. The default value is 75. Note\n that for usage via libavcodec, this option is called global_quality and must be\n multiplied by FF_QP2LAMBDA.",
        "-acodec": "Set the audio codec. This is an alias for \"-codec:a\".",
        "-i": "input file url"
      }
    },
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Most Similar TLDR Task": "Download a video or playlist at a specific quality",
      "Most Similar TLDR Script": "youtube-dl --format \"{{best[height<=480]}}\" '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_8705: Download a video or playlist at a specific quality",
        "tldr_6487: Download the best quality audio and video and merge them",
        "au_373538: How can I pause/resume download in youtube video?"
      ],
      "Top-3 Scripts": [
        "tldr_8705: youtube-dl --format \"{{best[height<=480]}}\" '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'",
        "tldr_6487: youtube-dl -f bestvideo+bestaudio '{{url}}'",
        "au_373538: youtube-dl <some_youtube_URL>\n\nyoutube-dl -c <some_youtube_URL>"
      ],
      "Explanations about Options": {
        "-c": "Force resume of partially downloaded files. By default, youtube-dl will resume\n downloads if possible."
      }
    },
    {
      "Command": "mpv",
      "MP Summary": "a media player",
      "Most Similar TLDR Task": "Display the output of webcam or other video input device",
      "Most Similar TLDR Script": "mpv /dev/{{video0}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1606852: FFMPEG: Calculation of image padding on video with different video source resolution",
        "au_1213576: Is there a video player that can do auto refresh rate switching?"
      ],
      "Top-3 Scripts": [
        "su_1606852: ",
        "au_1213576: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Install a package, or update it to the latest available version",
      "Most Similar TLDR Script": "apt-get install {{package}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_656433: High quality software video telephony",
        "au_428878: Bad quality and playback issues when playing video with VLC",
        "au_385575: Video won't play correctly"
      ],
      "Top-3 Scripts": [
        "au_656433: sudo apt-get install empathy\n\nsudo apt-get install ekiga",
        "au_428878: sudo apt-get install ubuntu-restricted-extras",
        "au_385575: sudo apt-get purge flashplugin-installer\n\nsudo apt-get update && sudo apt-get install flashplugin-installer"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Create a gif from a series of images with 100ms delay between them",
      "Most Similar TLDR Script": "convert {{image1.png}} {{image2.png}} {{image3.png}} -delay {{10}} {{animation.gif}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_34139: jpg to pdf without data loss",
        "ul_11835: pdf to jpg without quality loss; gscan2pdf"
      ],
      "Top-3 Scripts": [
        "ul_34139: ",
        "ul_11835: convert -density 300 file.pdf page_%04d.jpg"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cmake",
      "MP Summary": "CMake Command-Line Reference",
      "Most Similar TLDR Task": "Generate a Makefile and use it to compile a project in the same directory as the source",
      "Most Similar TLDR Script": "cmake && make",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51286690: How to do this feature? (What's the name of this feature?)"
      ],
      "Top-3 Scripts": [
        "so_51286690: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "vlc",
      "MP Summary": "the VLC media player",
      "Most Similar TLDR Task": "Play video from a URL",
      "Most Similar TLDR Script": "vlc {{https://www.youtube.com/watch?v=oHg5SJYRHA0}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1305176: VLC - much worse video quality than other players (horizontal stripes)"
      ],
      "Top-3 Scripts": [
        "au_1305176: sudo apt install vlc\n\nsudo snap remove vlc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdfimages",
      "MP Summary": "Portable Document Format (PDF) image extractor (version 3.03)",
      "Most Similar TLDR Task": "Extract all images from a PDF file and save them as PNGs",
      "Most Similar TLDR Script": "pdfimages -png {{path/to/file.pdf}} {{filename_prefix}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_11835: pdf to jpg without quality loss; gscan2pdf"
      ],
      "Top-3 Scripts": [
        "ul_11835: pdfimages -j file.pdf page"
      ],
      "Explanations about Options": {
        "-j": "Write images in JPEG format as JPEG files instead of the default format. The JPEG\n file is identical to the JPEG data stored in the PDF."
      }
    },
    {
      "Command": "gcc",
      "MP Summary": "GNU project C and C++ compiler",
      "Most Similar TLDR Task": "Compile multiple source files into executable",
      "Most Similar TLDR Script": "gcc {{source1.c}} {{source2.c}} -o {{executable}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_1837515: Video decoding and rendering library for XLib"
      ],
      "Top-3 Scripts": [
        "so_1837515: gcc -Wall -O2 `xine-config --cflags`\n    -o muxine muxine.c `xine-config --libs`"
      ],
      "Explanations about Options": {
        "-Wall": "turns on the following warning flags:",
        "-O2": "turns on all optimization flags specified by -O. It also turns on the following\n optimization flags:"
      }
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_656433: High quality software video telephony",
        "au_428878: Bad quality and playback issues when playing video with VLC",
        "au_385575: Video won't play correctly"
      ],
      "Top-3 Scripts": [
        "au_656433: sudo apt-get install empathy\n\nsudo apt-get install ekiga",
        "au_428878: sudo apt-get install ubuntu-restricted-extras",
        "au_385575: sudo apt-get update && sudo apt-get install flashplugin-installer"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_600286: Total video time in a Directory",
        "so_8416009: Display Video on Linux"
      ],
      "Top-3 Scripts": [
        "au_600286: find . -type f -exec mediainfo --Inform=\"General;%Duration%\" \"{}\" \\; 2>/dev/null | awk '{s+=$1/1000} END {h=s/3600; s=s%3600; printf \"%.2d:%.2d\\n\", int(h), int(s/60)}'\n\nfind . -type f -exec avprobe -v quiet -show_format_entry duration \"{}\" \\; | awk '{s+=$1} END {h=s/3600; s=s%3600; printf \"%.2d:%.2d\\n\", int(h), int(s/60)}'",
        "so_8416009: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_24541: Mencoder with same quality output"
      ],
      "Top-3 Scripts": [
        "ul_24541: -sameq\n       Use same quantizer as source (implies VBR).\n\n\u2018-same_quant\u2019\nUse same quantizer as source (implies VBR).\n\nNote that this is NOT SAME QUALITY. Do not use this option unless you know you need it."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1281675: Low quality sound even with A2DP",
        "so_29236209: Why can I stream h264 encoded video from webcam to BOTH display and file, but NOT raw video?"
      ],
      "Top-3 Scripts": [
        "au_1281675: sudo tee /etc/modprobe.d/iwlwifi-opt.conf <<< \"options iwlwifi bt_coex_active=N\"",
        "so_29236209: gst-launch-1.0 -v v4l2src device=/dev/video0 \\\n    ! video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 \\\n    ! tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! x264enc tune=zerolatency ! h264parse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! theoraenc ! theoraparse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! vp8enc ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pngcrush",
      "MP Summary": "optimizes (or modifies) PNG (Portable Network Graphics) files.",
      "Most Similar TLDR Task": "Compress all PNGs and output to directory",
      "Most Similar TLDR Script": "pngcrush -d {{path/to/output}} *.png",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_9714: Tool for high picture compression with low loss of quality"
      ],
      "Top-3 Scripts": [
        "au_9714: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Recursively remove a directory and all its subdirectories",
      "Most Similar TLDR Script": "rm -r {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1281675: Low quality sound even with A2DP",
        "au_221849: All video thumbnails fail to be generated",
        "au_73071: Online video playback in all browsers halting and unwatchable"
      ],
      "Top-3 Scripts": [
        "au_1281675: sudo rm /etc/modprobe.d/iwlwifi-opt.conf",
        "au_221849: sudo apt-get install gstreamer1.0-libav\nrm ~/.cache/thumbnails/fail/gnome-thumbnail-factory/*",
        "au_73071: rm ~/.gstreamer-0.10/*.bin"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sync",
      "MP Summary": "Synchronize cached writes to persistent storage",
      "Most Similar TLDR Task": "Flush all pending write operations on a single file to disk",
      "Most Similar TLDR Script": "sync {{path/to/file}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29236209: Why can I stream h264 encoded video from webcam to BOTH display and file, but NOT raw video?"
      ],
      "Top-3 Scripts": [
        "so_29236209: gst-launch-1.0 -v v4l2src device=/dev/video0 \\\n    ! video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 \\\n    ! tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! x264enc tune=zerolatency ! h264parse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! theoraenc ! theoraparse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! vp8enc ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "snap",
      "MP Summary": "Tool to interact with snaps",
      "Most Similar TLDR Task": "Install a package",
      "Most Similar TLDR Script": "snap install {{package_name}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1305176: VLC - much worse video quality than other players (horizontal stripes)"
      ],
      "Top-3 Scripts": [
        "au_1305176: sudo snap remove vlc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "add-apt-repository",
      "MP Summary": "Adds   a   repository   into   the   /etc/apt/sources.list   or /etc/apt/sources.list.d or removes an existing one",
      "Most Similar TLDR Task": "Enable source packages",
      "Most Similar TLDR Script": "add-apt-repository --enable-source {{repository_spec}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_222138: Videos with Lubuntu and Libreoffice"
      ],
      "Top-3 Scripts": [
        "au_222138: sudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java7-installer"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lsusb",
      "MP Summary": "list USB devices",
      "Most Similar TLDR Task": "List all the USB devices available",
      "Most Similar TLDR Script": "lsusb",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_9741: Video recording in cheese is slow"
      ],
      "Top-3 Scripts": [
        "au_9741: lspci -vvnn\n lsusb\n dmesg\n uname -a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt",
      "MP Summary": "command-line interface",
      "Most Similar TLDR Task": "Install a package, or update it to the latest available version",
      "Most Similar TLDR Script": "sudo apt install {{package}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1305176: VLC - much worse video quality than other players (horizontal stripes)",
        "au_606480: Directory structure based auto-updating video library application"
      ],
      "Top-3 Scripts": [
        "au_1305176: sudo apt install vlc",
        "au_606480: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lspci",
      "MP Summary": "list all PCI devices",
      "Most Similar TLDR Task": "Display drivers and modules handling each device",
      "Most Similar TLDR Script": "lspci -k",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_9741: Video recording in cheese is slow"
      ],
      "Top-3 Scripts": [
        "au_9741: lspci -vvnn\n lsusb\n dmesg\n uname -a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39861885: ffmpeg batch reencode with subfolders",
        "au_600286: Total video time in a Directory"
      ],
      "Top-3 Scripts": [
        "so_39861885: find /path/to/basedir -name '*.avi' -print0 | xargs -0 convert.sh",
        "au_600286: find . -type f -exec mediainfo --Inform=\"General;%Duration%\" \"{}\" \\; 2>/dev/null | awk '{s+=$1/1000} END {h=s/3600; s=s%3600; printf \"%.2d:%.2d\\n\", int(h), int(s/60)}'\n\nfind . -type f -exec avprobe -v quiet -show_format_entry duration \"{}\" \\; | awk '{s+=$1} END {h=s/3600; s=s%3600; printf \"%.2d:%.2d\\n\", int(h), int(s/60)}'"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "dmesg",
      "MP Summary": "print or control the kernel ring buffer",
      "Most Similar TLDR Task": "Show how much physical memory is available on this system",
      "Most Similar TLDR Script": "dmesg | grep -i memory",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_9741: Video recording in cheese is slow"
      ],
      "Top-3 Scripts": [
        "au_9741: lspci -vvnn\n lsusb\n dmesg\n uname -a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uname",
      "MP Summary": "print system information",
      "Most Similar TLDR Task": "Print all available system information (hardware, software, nodename)",
      "Most Similar TLDR Script": "uname -a",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_9741: Video recording in cheese is slow"
      ],
      "Top-3 Scripts": [
        "au_9741: lspci -vvnn\n lsusb\n dmesg\n uname -a"
      ],
      "Explanations about Options": {
        "-a": "print all information, in the following order, except omit -p and -i if unknown:"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_600286: Total video time in a Directory"
      ],
      "Top-3 Scripts": [
        "au_600286: find . -type f -exec mediainfo --Inform=\"General;%Duration%\" \"{}\" \\; 2>/dev/null | awk '{s+=$1/1000} END {h=s/3600; s=s%3600; printf \"%.2d:%.2d\\n\", int(h), int(s/60)}'\n\nfind . -type f -exec avprobe -v quiet -show_format_entry duration \"{}\" \\; | awk '{s+=$1} END {h=s/3600; s=s%3600; printf \"%.2d:%.2d\\n\", int(h), int(s/60)}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Determine the mime encoding type of a file",
      "Most Similar TLDR Script": "file -i {{filename}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_24541: Mencoder with same quality output",
        "so_8416009: Display Video on Linux"
      ],
      "Top-3 Scripts": [
        "ul_24541: ",
        "so_8416009: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_713389: Bad Youtube video quality on Ubuntu 14.04 with NVIDIA card"
      ],
      "Top-3 Scripts": [
        "au_713389: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "see",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "See action can be used to view any file (usually image) on default mailcap explorer",
      "Most Similar TLDR Script": "see {{filename}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_24541: Mencoder with same quality output"
      ],
      "Top-3 Scripts": [
        "ul_24541: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_713389: Bad Youtube video quality on Ubuntu 14.04 with NVIDIA card"
      ],
      "Top-3 Scripts": [
        "au_713389: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39861885: ffmpeg batch reencode with subfolders"
      ],
      "Top-3 Scripts": [
        "so_39861885: find /path/to/basedir -name '*.avi' -print0 | xargs -0 convert.sh"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount a device to a directory",
      "Most Similar TLDR Script": "mount -t {{filesystem_type}} {{path/to/device_file}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_5464: How to re-encode a DVD into a single file?"
      ],
      "Top-3 Scripts": [
        "ul_5464: $ mkdir -p $HOME/virtualdvd\n$ mount -t iso9660 -o loop my-movie.iso $HOME/virtualdvd"
      ],
      "Explanations about Options": {
        "-t": "The argument following the -t is used to indicate the filesystem type. The\n filesystem types which are currently supported depend on the running kernel. See\n /proc/filesystems and /lib/modules/$(uname -r)/kernel/fs for a complete list of the\n filesystems. The most common are ext2, ext3, ext4, xfs, btrfs, vfat, sysfs, proc,\n nfs and cifs.",
        "-o": "Use the specified mount options. The opts argument is a comma-separated list. For\n example:"
      }
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_5464: How to re-encode a DVD into a single file?"
      ],
      "Top-3 Scripts": [
        "ul_5464: $ dd if=/dev/scd0 of=my-movie.iso bs=2048"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39861885: ffmpeg batch reencode with subfolders"
      ],
      "Top-3 Scripts": [
        "so_39861885: #!/bin/bash\n\nfor i; do\n    d=$(dirname \"$i\")\n    b=$(basename \"$i\")\n    ffmpeg -i \"$i\" -c:v libx265 -c:a copy \"$d/X265_$b\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Launch the default shell with superuser privileges",
      "Most Similar TLDR Script": "sudo -i",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_656433: High quality software video telephony",
        "au_428878: Bad quality and playback issues when playing video with VLC",
        "ul_5464: How to re-encode a DVD into a single file?"
      ],
      "Top-3 Scripts": [
        "au_656433: sudo apt-get install empathy\n\nsudo apt-get install ekiga",
        "au_428878: sudo apt-get install ubuntu-restricted-extras",
        "ul_5464: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Notify of job termination immediately",
      "Most Similar TLDR Script": "set -b",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_24541: Mencoder with same quality output"
      ],
      "Top-3 Scripts": [
        "ul_24541: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_5464: How to re-encode a DVD into a single file?"
      ],
      "Top-3 Scripts": [
        "ul_5464: $ mkdir -p $HOME/virtualdvd\n$ mount -t iso9660 -o loop my-movie.iso $HOME/virtualdvd"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Remove an environment variable",
      "Most Similar TLDR Script": "export -n {{VARIABLE}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_597855: LibreOffice distorts embedded videos"
      ],
      "Top-3 Scripts": [
        "ul_597855: export SAL_USE_VCLPLUGIN=gen\n\nexport SAL_USE_VCLPLUGIN=gtk"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39861885: ffmpeg batch reencode with subfolders"
      ],
      "Top-3 Scripts": [
        "so_39861885: #!/bin/bash\n\nfor i; do\n    d=$(dirname \"$i\")\n    b=$(basename \"$i\")\n    ffmpeg -i \"$i\" -c:v libx265 -c:a copy \"$d/X265_$b\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "less",
      "MP Summary": "opposite of more",
      "Most Similar TLDR Task": "Backward search for a string (press `n`/`N` to go to next/previous match)",
      "Most Similar TLDR Script": "?{{something}}",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_577421: short summary about video files (resolution, size, duration, codec)"
      ],
      "Top-3 Scripts": [
        "au_577421: mediainfo --info-parameters | less"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "Long format list with size displayed using human readable units (KB, MB, GB)",
      "Most Similar TLDR Script": "ls -lh",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_972153: FFmpeg/AVconc - Capture Seamless Video"
      ],
      "Top-3 Scripts": [
        "su_972153: $ ls -m1\n2015-09-12_14-10-02.mkv\n2015-09-12_14-10-14.mkv\n2015-09-12_14-10-24.mkv\n2015-09-12_14-10-34.mkv\n2015-09-12_14-10-44.mkv\n2015-09-12_14-10-54.mkv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29236209: Why can I stream h264 encoded video from webcam to BOTH display and file, but NOT raw video?"
      ],
      "Top-3 Scripts": [
        "so_29236209: gst-launch-1.0 -v v4l2src device=/dev/video0 \\\n    ! video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 \\\n    ! tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! x264enc tune=zerolatency ! h264parse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! theoraenc ! theoraparse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! vp8enc ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "profile",
      "MP Summary": "Profile CPU usage by sampling stack traces. Uses Linux eBPF/bcc.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_713389: Bad Youtube video quality on Ubuntu 14.04 with NVIDIA card"
      ],
      "Top-3 Scripts": [
        "au_713389: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Color",
      "MP Summary": "Color Correct a TIFF file using any sequence of ICC profiles or Calibrations.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_713389: Bad Youtube video quality on Ubuntu 14.04 with NVIDIA card"
      ],
      "Top-3 Scripts": [
        "au_713389: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "size",
      "MP Summary": "list section sizes and total size of binary files",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_713389: Bad Youtube video quality on Ubuntu 14.04 with NVIDIA card",
        "au_577421: short summary about video files (resolution, size, duration, codec)"
      ],
      "Top-3 Scripts": [
        "au_713389: ",
        "au_577421: shortinfo() { \n   mediainfo --Inform=\"General;Duration=%Duration/String3%\\nFile size=%FileSize/String1%\" \"$@\"\n   mediainfo --Inform=\"Video;Resolution=%Width%x%Height%\\nCodec=%CodecID%\" \"$@\"; \n}\n\nmediainfo --Inform=\"General;Duration=%Duration/String3%\\nFile size=%FileSize/String1%\" \"$@\"\n\n$ shortinfo sample.mp4\nDuration=00:00:10.027\nFile size=13 MiB\nResolution=1920x1080\nCodec=avc1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "empathy",
      "MP Summary": "GNOME multi-protocol chat and call client",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_656433: High quality software video telephony"
      ],
      "Top-3 Scripts": [
        "au_656433: sudo apt-get install empathy"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39861885: ffmpeg batch reencode with subfolders",
        "ul_24541: Mencoder with same quality output"
      ],
      "Top-3 Scripts": [
        "so_39861885: find /path/to/basedir -name '*.avi' -print0 | xargs -0 convert.sh",
        "ul_24541: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "input",
      "MP Summary": "Yagi-Uda project antenna defining program",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1014051: How to re-encode video into H.264 when ffmpeg Unknown decoder 'libx264' despite --enable-libx264"
      ],
      "Top-3 Scripts": [
        "au_1014051: ffmpeg [input options] -i input [output options] output"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "output",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1014051: How to re-encode video into H.264 when ffmpeg Unknown decoder 'libx264' despite --enable-libx264"
      ],
      "Top-3 Scripts": [
        "au_1014051: ffmpeg [input options] -i input [output options] output"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dev",
      "MP Summary": "release candidate LaTeX testing",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_5464: How to re-encode a DVD into a single file?",
        "au_161940: capturing video from webcam and saving to a file",
        "so_29236209: Why can I stream h264 encoded video from webcam to BOTH display and file, but NOT raw video?"
      ],
      "Top-3 Scripts": [
        "ul_5464: $ dd if=/dev/scd0 of=my-movie.iso bs=2048\n\n/dev/loop?",
        "au_161940: streamer -q -c /dev/video0 -f rgb24 -r 3 -t 00:30:00 -o ~/outfile.avi\n\nffmpeg -f oss -i /dev/dsp -f video4linux2 -s 320x240 -i /dev/video0 out.mpg",
        "so_29236209: gst-launch-1.0 -v v4l2src device=/dev/video0 \\\n    ! video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 \\\n    ! tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! x264enc tune=zerolatency ! h264parse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! theoraenc ! theoraparse ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false\n\ngst-launch-1.0 -v v4l2src device=/dev/video0 ! \\\n    video/x-raw,format=YUY2,width=640,height=480,framerate=15/1 ! \\\n    tee name=t t. ! queue ! xvimagesink sync=false t. ! queue ! \\\n    videoconvert ! vp8enc ! \\\n    matroskamux ! filesink location='raw_dual.mkv' sync=false"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "purge",
      "MP Summary": "magnifying glass into your squid cache",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Prints list of all libraries linked with binaries in '/bin/' and '/usr/bin/', with number of linkages for each library.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "ldd /bin/* /usr/bin/* | sed -e '/^[^\\t]/ d; s/^\\t\\(.* => \\)\\?\\([^ ]*\\) (.*/\\2/g' | sort | uniq -c\n",
          "command-options": {
            "ldd": {
              "mpsum": "print shared object dependencies"
            },
            "bin": {
              "mpsum": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)"
            },
            "sed": {
              "mpsum": "stream editor for filtering and transforming text",
              "-e": "add the script to the commands to be executed"
            },
            "sort": {
              "mpsum": "sort lines of text files"
            },
            "uniq": {
              "mpsum": "report or omit repeated lines",
              "-c": "prefix lines by the number of occurrences"
            }
          },
          "TLDR_inform": {
            "ldd": {
              "man1_ldd_17299": "display share librari depend display share librari depend binari display unus direct depend"
            },
            "bin": {
              "man1_bin_22728": ""
            },
            "sed": {
              "man1_sed_30692": "edit text scriptabl manner appli multipl find-replac express file delet line match line pattern print first 11 line file replac occurr string file overwrit file e\nin-plac replac occurr extend regular express file print result replac line match line pattern replac separ charact use find replac pattern e g replac first occurr regular express line file print result"
            },
            "sort": {
              "man1_sort_31880": "sort line text file sort file ascend order sort file case-insensit way sort file descend order sort file preserv uniqu line sort file use numer rather alphabet order sort human-read number case 5th field ls -lh sort number expon sort passwd file 3rd field numer"
            },
            "uniq": {
              "man1_uniq_35301": "output uniqu line given input file\nsinc detect repeat line unless adjac need sort first display line display number occurr line along line display number occurr line sort frequent display duplic line display uniqu line"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_385575: Video won't play correctly"
      ],
      "Top-3 Scripts": [
        "au_385575: sudo apt-get purge flashplugin-installer"
      ],
      "Explanations about Options": {}
    }
  ]
}