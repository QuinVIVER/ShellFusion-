{
  "Query": "How can I use nohup to run process as a background process in linux?",
  "Answers": [
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_38079541: killing a background process with shell in Ubuntu",
        "so_30171050: Start a process in background, do a task, then kill the process in the background",
        "so_2970937: How to run a linux app in background process?"
      ],
      "Top-3 Scripts": [
        "so_38079541: ",
        "so_30171050: pushd .\nnohup java -jar test/selenium-server.jar > /dev/null 2>&1 &\nserverPID=$!\ncd web/code/protected/tests/\nphpunit functional/\nkill $serverPID\npopd",
        "so_2970937: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display running processes",
      "Most Similar TLDR Script": "jobs -r",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58566781: How to use nohup on a process already running in background",
        "so_38079541: killing a background process with shell in Ubuntu",
        "so_7235185: Change back into a running process on Linux after you put it into the background"
      ],
      "Top-3 Scripts": [
        "so_58566781: ",
        "so_38079541: ",
        "so_7235185: $ jobs\n\n$ gedit &\n[1] 3341\n\n$ jobs\n[1]+  Running                 gedit &\n\n$ fg %1\ngedit"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nohup",
      "MP Summary": "run a command immune to hangups, with output to a non-tty",
      "Most Similar TLDR Task": "Run process that can live beyond the terminal",
      "Most Similar TLDR Script": "nohup {{command options}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58566781: How to use nohup on a process already running in background",
        "so_32576861: nohup has no effect when running a process background with ampersand in the end?",
        "so_45560231: running a process in background in linux"
      ],
      "Top-3 Scripts": [
        "so_58566781: ",
        "so_32576861: nohup ping localhost &",
        "so_45560231: nohup your_shellscript &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from `stdin`",
      "Most Similar TLDR Script": "bash -s",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58566781: How to use nohup on a process already running in background",
        "su_269453: Nohup does not run process in background",
        "so_38027841: Unable to run infinite loop process in background in terminal."
      ],
      "Top-3 Scripts": [
        "so_58566781: ",
        "su_269453: nohup bash -c \"while [ true ]; do echo test; done\" &",
        "so_38027841: bash <<< 'while true; do echo ping; sleep 1; done'\n\n^Z\n[1]+  Stopped                 bash <<< 'while true; do echo ping; sleep 1; done'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
      "Most Similar TLDR Script": "wait {{pid}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18916656: running a process in background in c",
        "so_19144869: Running unix process in background from php",
        "so_41033660: Conditionally run process in background with bash"
      ],
      "Top-3 Scripts": [
        "so_18916656: ",
        "so_19144869: ",
        "so_41033660: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Execute the ls program literally, even if an ls alias exists",
      "Most Similar TLDR Script": "command {{ls}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_344247: How do I get the pid of a process run in background?",
        "so_48847628: how to keep a track of background process run by system() in C Linux?",
        "so_422241: Stop and start running again processes in Linux using C++"
      ],
      "Top-3 Scripts": [
        "ul_344247: ./first-script.sh some command line\n\nthepid=$( <background.pid )\n\nthepid=$( ./first-script.sh some command line )",
        "so_48847628: ",
        "so_422241: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19527970: Is there a linux util for starting a process in the background in bash?",
        "so_48847628: how to keep a track of background process run by system() in C Linux?",
        "so_422241: Stop and start running again processes in Linux using C++"
      ],
      "Top-3 Scripts": [
        "so_19527970: #!/bin/sh\n\n\"$@\" &\nexit 0",
        "so_48847628: ",
        "so_422241: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Kill the current screen session",
      "Most Similar TLDR Script": "Ctrl + A, K",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_20694440: How do run commands in background one by one?",
        "so_39212808: Put php file in the background on Linux",
        "au_106351: Running programs in the background from terminal"
      ],
      "Top-3 Scripts": [
        "so_20694440: $ screen\n\n$ screen -r",
        "so_39212808: apt-get -y install screen\n\nyum -y install screen\n\nscreen -r",
        "au_106351: "
      ],
      "Explanations about Options": {
        "-r": " resumes a detached screen session. No other options (except combinations with -d/-D)\n may be specified, though an optional prefix of [pid.]tty.host may be needed to\n distinguish between multiple detached screen sessions. The second form is used to\n connect to another user's screen session which runs in multiuser mode. This indicates\n that screen should look for sessions in another user's directory. This requires\n setuid-root."
      }
    },
    {
      "Command": "bg",
      "MP Summary": "run jobs in the background",
      "Most Similar TLDR Task": "Resume a specific job (use `jobs -l` to get its ID) and run it in the background",
      "Most Similar TLDR Script": "bg {{job_id}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13676457: How can I put the current running linux process in background?"
      ],
      "Top-3 Scripts": [
        "so_13676457: sleep 60\n^Z  #Suspend character shown after hitting CTRL+Z\n[1]+  Stopped  sleep 60  #Message showing stopped process info\nbg  #Resume current job (last job stopped)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "daemonize",
      "MP Summary": "run a program as a Unix daemon",
      "Most Similar TLDR Task": "Run a command as a daemon",
      "Most Similar TLDR Script": "daemonize {{command}} {{command_arguments}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10037357: Running a script from a script in android"
      ],
      "Top-3 Scripts": [
        "so_10037357: Usage: daemonize [-f logfile] [-a] [-d delay] <program>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fg",
      "MP Summary": "run jobs in the foreground",
      "Most Similar TLDR Task": "Bring most recently suspended background job to foreground",
      "Most Similar TLDR Script": "fg",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_7235185: Change back into a running process on Linux after you put it into the background"
      ],
      "Top-3 Scripts": [
        "so_7235185: $ jobs\n\n$ gedit &\n[1] 3341\n\n$ jobs\n[1]+  Running                 gedit &\n\n$ fg %1\ngedit"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "php",
      "MP Summary": "PHP Command Line Interface 'CLI'",
      "Most Similar TLDR Task": "Parse and execute a php script",
      "Most Similar TLDR Script": "php {{file}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39212808: Put php file in the background on Linux",
        "so_26531144: Why does command line say process stopped after running in background?"
      ],
      "Top-3 Scripts": [
        "so_39212808: php myfile.php\n\n* * * * * php myfile.php",
        "so_26531144: php /path/to/script.php < /dev/null\n\nphp /path/to/script.php < /dev/null &>/dev/null &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "adb",
      "MP Summary": "Android Debug Bridge",
      "Most Similar TLDR Task": "Check whether the adb server process is running and start it",
      "Most Similar TLDR Script": "adb start-server",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_63958384: Running linux shell command in background with '&' always fails"
      ],
      "Top-3 Scripts": [
        "so_63958384: /Users/hexdump/Library/Android/sdk/platform-tools/adb"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Run commands from file (script)",
      "Most Similar TLDR Script": "zsh {{file}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58566781: How to use nohup on a process already running in background"
      ],
      "Top-3 Scripts": [
        "so_58566781: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18916656: running a process in background in c",
        "so_41033660: Conditionally run process in background with bash",
        "so_38027841: Unable to run infinite loop process in background in terminal."
      ],
      "Top-3 Scripts": [
        "so_18916656: ",
        "so_41033660: C=\"\"\ndate\nsleep 5s &\n[ -n \"$C\" ] && { echo \"waiting\"; wait; }\ndate\n\nsleep 5s",
        "so_38027841: bash <<< 'while true; do echo ping; sleep 1; done'\n\n^Z\n[1]+  Stopped                 bash <<< 'while true; do echo ping; sleep 1; done'\n\n(while true; do echo ping; sleep 1; done)\n\n^Z\n[1]+  Stopped                 ( while true; do\n    echo ping; sleep 1;\ndone )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "parallel",
      "MP Summary": "run programs in parallel",
      "Most Similar TLDR Task": "Read arguments from `stdin`, run 4 jobs at once",
      "Most Similar TLDR Script": "ls *.txt | parallel -j4 gzip",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_617994: How to limit the number of background process in Unix"
      ],
      "Top-3 Scripts": [
        "ul_617994: parallel -j 10 nohup ksh my_background_script.ksh -mod ::: {1..100}"
      ],
      "Explanations about Options": {
        "-j": "Use to limit the number of jobs that are run at the same time."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_617994: How to limit the number of background process in Unix"
      ],
      "Top-3 Scripts": [
        "ul_617994: seq 1 100 | xargs -P 10 -I {} nohup ksh my_background_script.ksh -mod {} &"
      ],
      "Explanations about Options": {
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
      }
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes",
      "Most Similar TLDR Script": "ps aux",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18916656: running a process in background in c"
      ],
      "Top-3 Scripts": [
        "so_18916656: ps a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "id",
      "MP Summary": "print real and effective user and group IDs",
      "Most Similar TLDR Task": "Display the current user identity as a number",
      "Most Similar TLDR Script": "id -u",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19711785: Running a process as background service results in exception",
        "so_422241: Stop and start running again processes in Linux using C++"
      ],
      "Top-3 Scripts": [
        "so_19711785: niru@node2:~$ id -a\nuid=2001(niru) gid=2001(niru) groups=2001(niru),4(adm),27(sudo)",
        "so_422241: "
      ],
      "Explanations about Options": {
        "-a": "ignore , for compatibility with other versions"
      }
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Run library module as a script (terminates option list)",
      "Most Similar TLDR Script": "python -m {{module}} {{arguments}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29658335: Running a process in the background with input/output redirection",
        "so_32213565: Nohup for Python script not working when running in the background with &"
      ],
      "Top-3 Scripts": [
        "so_29658335: setsid python script.py < /dev/zero & > log.txt &\nsetsid python script.py & < /dev/zero > log.txt\n\nsetsid python script.py < /dev/zero &\n> log.txt &\n\nsetsid python script.py &\n< /dev/zero > log.txt\n\nsetsid python script.py < /dev/zero &> log.txt &\n\nsetsid python script.py < /dev/zero > log.txt &",
        "so_32213565: nohup python -u test.py &"
      ],
      "Explanations about Options": {
        "-u": "Force the stdout and stderr streams to be unbuffered. This option has no effect on\n the stdin stream."
      }
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_269453: Nohup does not run process in background",
        "so_56008137: How to run maven commands as background process in power shell"
      ],
      "Top-3 Scripts": [
        "su_269453: nohup bash -c \"while [ true ]; do echo test; done\" &",
        "so_56008137: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "crontab",
      "MP Summary": "maintain crontab files for individual users (Vixie Cron)",
      "Most Similar TLDR Task": "Remove all cron jobs for the current user",
      "Most Similar TLDR Script": "crontab -r",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39212808: Put php file in the background on Linux"
      ],
      "Top-3 Scripts": [
        "so_39212808: crontab -e"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yum",
      "MP Summary": "Yellowdog Updater Modified",
      "Most Similar TLDR Task": "Find the package that provides a particular command",
      "Most Similar TLDR Script": "yum provides {{command}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39212808: Put php file in the background on Linux"
      ],
      "Top-3 Scripts": [
        "so_39212808: yum -y install screen"
      ],
      "Explanations about Options": {
        "-y": "Assume yes; assume that the answer to any question which would be asked is yes.\n Configuration Option: assumeyes"
      }
    },
    {
      "Command": "gnome-terminal",
      "MP Summary": "is a terminal emulation application.",
      "Most Similar TLDR Task": "Run a specific command in a new terminal window",
      "Most Similar TLDR Script": "gnome-terminal -- {{command}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15479730: Script for running processes in foreground but on different terminal tab"
      ],
      "Top-3 Scripts": [
        "so_15479730: gnome-terminal \\\n  --tab -e \"./exe1\" \\\n  --tab -e \"./exe2\" \\\n  --tab -e \"./exe3\"\n\ngnome-terminal \\\n  --tab -e \"./exe1\" \\\n  --tab -e \"sh -c 'sleep 5; ./exe2'\" \\\n  --tab -e \"sh -c 'sleep 10; ./exe3'\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_461210: How to run process in background using gcloud ssh"
      ],
      "Top-3 Scripts": [
        "ul_461210: nohup gcloud compute ssh -zone {Zone-Name} {vm2} -- 'cd /app/bin && ./clearcache && nohup ./startWeblogicAdmin >> admin.log' &"
      ],
      "Explanations about Options": {
        "-e": "Sets the escape character for sessions with a pty (default: \u2018~\u2019). The escape\n character is only recognized at the beginning of a line. The escape character\n followed by a dot (\u2018.\u2019) closes the connection; followed by control-Z suspends the\n connection; and followed by itself sends the escape character once. Setting the\n character to \u201cnone\u201d disables any escapes and makes the session fully transparent.",
        "-o": "Can be used to give options in the format used in the configuration file. This is\n useful for specifying options for which there is no separate command-line flag. For\n full details of the options listed below, and their possible values, see\n ssh_config(5)."
      }
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32213565: Nohup for Python script not working when running in the background with &"
      ],
      "Top-3 Scripts": [
        "so_32213565: -u     Force  stdin,  stdout and stderr to be totally unbuffered.  On systems where it matters, also put stdin, stdout\n          and stderr in binary mode.  Note that there is internal buffering in xreadlines(), readlines() and  file-object\n          iterators (\"for line in sys.stdin\") which is not influenced by this option.  To work around this, you will want\n          to use \"sys.stdin.readline()\" inside a \"while 1:\" loop."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute the commands and email the result using a local mailing program such as sendmail",
      "Most Similar TLDR Script": "at {{hh:mm}} -m",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48847628: how to keep a track of background process run by system() in C Linux?"
      ],
      "Top-3 Scripts": [
        "so_48847628: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session, appending to an existing file",
      "Most Similar TLDR Script": "script -a {{path/to/session.out}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_675911: How to run this simple command in the background"
      ],
      "Top-3 Scripts": [
        "ul_675911: o some command script\n\nsome command script"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44107048: Python: Run bash command with redirection in background and get the process id"
      ],
      "Top-3 Scripts": [
        "so_44107048: import subprocess\n with open(\"ls.output.txt\", \"w\") as f:\n     # This is the way you'd run \"ls -al > ls.output.txt\" in the background\n     p = subprocess.Popen([\"ls\", \"-al\"], stdout=f) # This will run in the background\n\n p.wait() # Wait till process completes\n\n with open(\"ls.output.txt\") as f:\n        print (f.readline()) # Will print first line of ls -al output (total 2657828)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Accept everything prompted by the `apt-get` command",
      "Most Similar TLDR Script": "yes | sudo apt-get install {{program}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_2338: Start Redis server, using the specified port, as a background process"
      ],
      "Top-3 Scripts": [
        "tldr_2338: redis-server --port {{port}} --daemonize yes"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48847628: how to keep a track of background process run by system() in C Linux?"
      ],
      "Top-3 Scripts": [
        "so_48847628: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "redis-server",
      "MP Summary": "Persistent key-value database",
      "Most Similar TLDR Task": "Start Redis server, using the specified port, as a background process",
      "Most Similar TLDR Script": "redis-server --port {{port}} --daemonize yes",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_2338: Start Redis server, using the specified port, as a background process"
      ],
      "Top-3 Scripts": [
        "tldr_2338: redis-server --port {{port}} --daemonize yes"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44107048: Python: Run bash command with redirection in background and get the process id"
      ],
      "Top-3 Scripts": [
        "so_44107048: import subprocess\n with open(\"ls.output.txt\", \"w\") as f:\n     # This is the way you'd run \"ls -al > ls.output.txt\" in the background\n     p = subprocess.Popen([\"ls\", \"-al\"], stdout=f) # This will run in the background\n\n p.wait() # Wait till process completes\n\n with open(\"ls.output.txt\") as f:\n        print (f.readline()) # Will print first line of ls -al output (total 2657828)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_30171050: Start a process in background, do a task, then kill the process in the background"
      ],
      "Top-3 Scripts": [
        "so_30171050: pushd .\nnohup java -jar test/selenium-server.jar > /dev/null 2>&1 &\nserverPID=$!\ncd web/code/protected/tests/\nphpunit functional/\nkill $serverPID\npopd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "groups",
      "MP Summary": "print the groups a user is in",
      "Most Similar TLDR Task": "Print group memberships for a specific user",
      "Most Similar TLDR Script": "groups {{username}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19711785: Running a process as background service results in exception"
      ],
      "Top-3 Scripts": [
        "so_19711785: niru@node2:~$ id -a\nuid=2001(niru) gid=2001(niru) groups=2001(niru),4(adm),27(sudo)\n\nuid=2001(niru) gid=2001(niru) groups=2001(niru)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "phpunit",
      "MP Summary": "PHPUnit command line interface",
      "Most Similar TLDR Task": "Run tests in a specific file",
      "Most Similar TLDR Script": "phpunit {{path/to/TestFile.php}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_30171050: Start a process in background, do a task, then kill the process in the background"
      ],
      "Top-3 Scripts": [
        "so_30171050: pushd .\nnohup java -jar test/selenium-server.jar > /dev/null 2>&1 &\nserverPID=$!\ncd web/code/protected/tests/\nphpunit functional/\nkill $serverPID\npopd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkfifo",
      "MP Summary": "make FIFO special files",
      "Most Similar TLDR Task": "Create a named pipe at a given path",
      "Most Similar TLDR Script": "mkfifo {{path/to/pipe}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8837219: how to pass information to a background process in bash"
      ],
      "Top-3 Scripts": [
        "so_8837219: mkfifo link\nrun_sub < link &\ngenerate_output > link"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Update the list of available packages and versions (it's recommended to run this before other `apt-get` commands)",
      "Most Similar TLDR Script": "apt-get update",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_39212808: Put php file in the background on Linux"
      ],
      "Top-3 Scripts": [
        "so_39212808: apt-get -y install screen"
      ],
      "Explanations about Options": {
        "-y": "Automatic yes to prompts; assume \"yes\" as answer to all prompts and run\n non-interactively. If an undesirable situation, such as changing a held package,\n trying to install an unauthenticated package or removing an essential package occurs\n then apt-get will abort. Configuration Item: APT::Get::Assume-Yes."
      }
    },
    {
      "Command": "link",
      "MP Summary": "call the link function to create a link to a file",
      "Most Similar TLDR Task": "Create a hard link from a new file to an existing file",
      "Most Similar TLDR Script": "link {{path/to/existing_file}} {{path/to/new_file}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8837219: how to pass information to a background process in bash"
      ],
      "Top-3 Scripts": [
        "so_8837219: mkfifo link\nrun_sub < link &\ngenerate_output > link"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ruby",
      "MP Summary": "Interpreted object-oriented scripting language",
      "Most Similar TLDR Task": "Open an Interactive Ruby Shell (REPL)",
      "Most Similar TLDR Script": "irb",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11742015: Process working correctly in foreground does not work on background"
      ],
      "Top-3 Scripts": [
        "so_11742015: ruby ./my_process < /dev/zero &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xsel",
      "MP Summary": "manipulate the X selection.",
      "Most Similar TLDR Task": "Use a command's output as input of the clip[b]oard (equivalent to `Ctrl + C`)",
      "Most Similar TLDR Script": "echo 123 | xsel -ib",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_675911: How to run this simple command in the background"
      ],
      "Top-3 Scripts": [
        "ul_675911: xsel -ib"
      ],
      "Explanations about Options": {
        "-i": "read standard input into the selection.",
        "-b": "operate on the CLIPBOARD selection."
      }
    },
    {
      "Command": "yarn",
      "MP Summary": "scenario testing of Unix command line tools",
      "Most Similar TLDR Task": "Install a module and save it as a dependency to the `package.json` file (add `--dev` to save as a dev dependency)",
      "Most Similar TLDR Script": "yarn add {{module_name}}@{{version}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41033660: Conditionally run process in background with bash"
      ],
      "Top-3 Scripts": [
        "so_41033660: npm install -g yarn &\n[ -n \"$CONDITION\" ] && { echo \"waiting for install\"; wait; }"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "npm",
      "MP Summary": "javascript package manager Synopsis npm <command> [args] Version 6.14.4 Description npm  is the package manager for the Node JavaScript platform.  It puts modules in place so that node can find them, and manages dependency conflicts intelligently. It is extremely configurable to support a wide variety of use cases.  Most commonly, it is used to publish, discover, install, and develop node programs. Run npm help to get a list of available commands. Important npm  is  configured  to  use  npm, Inc.'s public registry at https://registry.npmjs.org by default. Use of the  npm  public  registry  is  subject  to  terms  of  use  available  at https://www.npmjs.com/policies/terms. You  can  configure  npm  to  use  any compatible registry you like, and even run your own registry. Use of someone else's registry may be governed by their terms of use. Introduction You probably got npm because you want to install stuff. Use npm install blerg to install the latest  version  of  \"blerg\".   Check  out  npm  help install for more info.  It can do a lot of stuff. Use  the  npm  search  command  to  show  everything that's available.  Use npm ls to show everything you've installed. Dependencies If a package references to another package with a git URL, npm depends on  a  preinstalled git. If one of the packages npm tries to install is a native node module and requires compiling of C++ Code, npm will use node-gyp https://github.com/TooTallNate/node-gyp for that  task. For a Unix system, node-gyp https://github.com/TooTallNate/node-gyp needs Python, make and a buildchain like GCC. On Windows, Python and Microsoft  Visual  Studio  C++  are  needed. Python  3  is not supported by node-gyp https://github.com/TooTallNate/node-gyp.  For more information visit the node-gyp repository https://github.com/TooTallNate/node-gyp and  the node-gyp Wiki https://github.com/TooTallNate/node-gyp/wiki. Directories See npm help folders to learn about where npm puts stuff. In particular, npm has two modes of operation: \u00b7 global  mode:  npm  installs packages into the install prefix at prefix/lib/node_modules and bins are installed in prefix/bin. \u00b7 local mode: npm installs packages into the current project directory, which defaults  to the  current  working directory.  Packages are installed to ./node_modules, and bins are installed to ./node_modules/.bin. Local mode is the default.  Use -g or --global on any command to operate  in  global  mode instead. Developer Usage If you're using npm to develop and publish your code, check out the following help topics: \u00b7 json: Make a package.json file.  See npm help package.json. \u00b7 link:  For linking your current working code into Node's path, so that you don't have to reinstall every time you make a change.  Use npm link to do this. \u00b7 install: It's a good idea to install  things  if  you  don't  need  the  symbolic  link. Especially, installing other peoples code from the registry is done via npm install \u00b7 adduser: Create an account or log in.  Credentials are stored in the user config file. \u00b7 publish: Use the npm publish command to upload your code to the registry. Configuration npm is extremely configurable.  It reads its configuration options from 5 places. \u00b7 Command line switches: Set a config with --key val.  All keys take a value, even if they are booleans (the config parser doesn't know  what  the  options  are  at  the  time  of parsing).  If no value is provided, then the option is set to boolean true. \u00b7 Environment  Variables:  Set any config by prefixing the name in an environment variable with npm_config_.  For example, export npm_config_key=val. \u00b7 User Configs: The file at $HOME/.npmrc is an ini-formatted list of configs.  If present, it is parsed.  If the userconfig option is set in the cli or env, then that will be used instead. \u00b7 Global Configs: The file found at ../etc/npmrc (from the  node  executable,  by  default this  resolves  to  /usr/local/etc/npmrc)  will  be  parsed  if  it  is  found.   If the globalconfig option is set in the cli, env, or user config, then  that  file  is  parsed instead. \u00b7 Defaults:  npm's  default configuration options are defined in lib/utils/config-defs.js. These must not be changed. See npm help config for much much more information. Contributions Patches welcome! If you would like to contribute, but don't know what to work  on,  read  the  contributing guidelines and check the issues list. \u00b7 CONTRIBUTING.md https://github.com/npm/cli/blob/latest/CONTRIBUTING.md \u00b7 Bug tracker https://github.com/npm/cli/issues Bugs When you find issues, please report them: \u00b7 web: https://npm.community/c/bugs Be  sure to follow the template and bug reporting guidelines. You can also ask for help in the support forum https://npm.community/c/support if you're unsure if it's actually a  bug or are having trouble coming up with a detailed reproduction to report. Author Isaac  Z.  Schlueter  http://blog.izs.me/  ::  isaacs  https://github.com/isaacs/  :: @izs https://twitter.com/izs :: i@izs.me See Also \u00b7 npm help help \u00b7 npm help package.json \u00b7 npm help install \u00b7 npm help config \u00b7 npm help npmrc April 2020                                     NPM(1)",
      "Most Similar TLDR Task": "Interactively create a package.json file",
      "Most Similar TLDR Script": "npm init",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41033660: Conditionally run process in background with bash"
      ],
      "Top-3 Scripts": [
        "so_41033660: npm install -g yarn &\n[ -n \"$CONDITION\" ] && { echo \"waiting for install\"; wait; }"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "node",
      "MP Summary": "server-side JavaScript runtime",
      "Most Similar TLDR Task": "Start a REPL (interactive shell)",
      "Most Similar TLDR Script": "node",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48847628: how to keep a track of background process run by system() in C Linux?"
      ],
      "Top-3 Scripts": [
        "so_48847628: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41033660: Conditionally run process in background with bash"
      ],
      "Top-3 Scripts": [
        "so_41033660: C=\"\"\ndate\nsleep 5s &\n[ -n \"$C\" ] && { echo \"waiting\"; wait; }\ndate"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44107048: Python: Run bash command with redirection in background and get the process id"
      ],
      "Top-3 Scripts": [
        "so_44107048: import subprocess\n with open(\"ls.output.txt\", \"w\") as f:\n     # This is the way you'd run \"ls -al > ls.output.txt\" in the background\n     p = subprocess.Popen([\"ls\", \"-al\"], stdout=f) # This will run in the background\n\n p.wait() # Wait till process completes\n\n with open(\"ls.output.txt\") as f:\n        print (f.readline()) # Will print first line of ls -al output (total 2657828)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xclip",
      "MP Summary": "command line interface to X selections (clipboard)",
      "Most Similar TLDR Task": "Copy the contents of a PNG image into the system clipboard (can be pasted in other programs correctly)",
      "Most Similar TLDR Script": "xclip -sel clip -t image/png {{input_file.png}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_675911: How to run this simple command in the background"
      ],
      "Top-3 Scripts": [
        "ul_675911: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "View all logins by a specific user and show the ip address instead of the hostname",
      "Most Similar TLDR Script": "last {{username}} -i",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13676457: How can I put the current running linux process in background?"
      ],
      "Top-3 Scripts": [
        "so_13676457: sleep 60\n^Z  #Suspend character shown after hitting CTRL+Z\n[1]+  Stopped  sleep 60  #Message showing stopped process info\nbg  #Resume current job (last job stopped)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_675911: How to run this simple command in the background"
      ],
      "Top-3 Scripts": [
        "ul_675911: nohup find /dir -iregex \".*\\.\\(jpg\\|jpeg\\)\" -exec jpegoptim --strip-all {} \\; -exec sleep 1 \\; 0<&- >&- 2>&- &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if file exists",
      "Most Similar TLDR Script": "test -e {{filename}}",
      "Most Similar NL2Bash Task": "From another terminal, detach process $PID from its terminal and run it in the background.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "kill -20 $PID; kill -18 $PID\n",
          "command-options": {
            "kill": {
              "mpsum": "send a signal to a process"
            }
          },
          "TLDR_inform": {
            "kill": {
              "man1_kill_16745": "send signal process usual relat stop process\nsignal except sigkil sigstop intercept process perform clean exit list avail signal name use without sig prefix send sigusr1 signal process given gid group id signal oper system immedi termin program get chanc captur signal signal oper system paus program sigcont continu signal receiv termin background job termin program use sighup hang signal\nmani daemon reload instead termin termin program use sigint interrupt signal\ntypic initi user press ctrl + c termin program use default sigterm termin signal"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_30171050: Start a process in background, do a task, then kill the process in the background"
      ],
      "Top-3 Scripts": [
        "so_30171050: pushd .\nnohup java -jar test/selenium-server.jar > /dev/null 2>&1 &\nserverPID=$!\ncd web/code/protected/tests/\nphpunit functional/\nkill $serverPID\npopd"
      ],
      "Explanations about Options": {}
    }
  ]
}