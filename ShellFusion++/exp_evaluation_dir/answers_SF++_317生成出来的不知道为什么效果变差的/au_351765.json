{
  "Query": "Comparing two strings in Bash",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67934265: comparing strings in shell",
        "ul_145160: Comparing two strings in Bash",
        "so_38896968: Compare strings in shell script"
      ],
      "Top-3 Scripts": [
        "so_67934265: ",
        "ul_145160: if [ \"${PACKAGENAME}\" = 'kakadu-v6_4-00902C' ]; then\n    echo \"successfully entered if block!!\"\nfi",
        "so_38896968: while read line\ndo\n if [[ \"${line%:*}\" = \"sheet_name\" ]] #double quote variables deals word splitting\n then\n  echo \"matched\"\n fi\ndone<parameters.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace only on lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6295774: Bash Comparing strings in a directory",
        "so_46476466: Comparing two files in AWK"
      ],
      "Top-3 Scripts": [
        "so_6295774: h1=\"myfile_1_exercise.txt\"\nh2=\"myfile_2_exercise.txt\"\nif [ $( echo ${h1} | sed 's/[0-9]*//g' ) == $( echo ${h2} | sed 's/[0-9]*//g' ) ] ; then \n    # do something here.\nfi",
        "so_46476466: grep -Ef <(sed -E 's/^/^/; s/([[:alpha:]])([[:digit:]])/\\1-?\\2/' Book1) InventorySheet"
      ],
      "Explanations about Options": {
        "-E": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25894094: Compare two files in bash",
        "so_40830060: Awk: how to compare two strings in one line",
        "so_67934265: comparing strings in shell"
      ],
      "Top-3 Scripts": [
        "so_25894094: awk -F/ 'FNR==NR {a[$1];next} $NF in a {print $NF \": \" $(NF-1)}' tmp1.txt tmp2.txt\naaa.txt: test1\nbbb.txt: test2\nccc.txt: test1",
        "so_40830060: awk 'substr($2, length($2), 1) == substr($4, length($4), 1)'",
        "so_67934265: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67934265: comparing strings in shell",
        "so_64054166: How to compare and recursively modify strings in Bash",
        "so_18535902: Concatenating two string variables in bash appending newline"
      ],
      "Top-3 Scripts": [
        "so_67934265: ",
        "so_64054166: #!/bin/bash\ns1=CYVFGDDAS\ns2=CRFDGVEAT\n\nfor ((i=0; i<${#s1} ; ++i)) ; do\n    if [[ ${s1:i:1} != ${s2:i:1} ]] ; then\n        printf '%s\\n' \"${s1:0:i+1}${s2:i+1}\"\n        printf '%s\\n' \"${s1:i:1}A$((i+1))${s2:i:1}\"\n    fi\ndone",
        "so_18535902: printf \"%s\\n\" \"$final_list\"\nurl1\nurl2\nurl3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69316571: Compare two files in linux?",
        "ul_83254: Comparing two files in a script",
        "so_30539931: Comparing Numbers Two number in bash"
      ],
      "Top-3 Scripts": [
        "so_69316571: $ grep -Fwvf File2.txt File1.txt\nname2 12.90.543.87\nname3 34.47.26.230",
        "ul_83254: while read line do\n    grep \"^$line$\" file2.txt >>matches.txt\ndone < file1.txt",
        "so_30539931: "
      ],
      "Explanations about Options": {
        "-F": "Interpret PATTERNS as fixed strings, not regular expressions.",
        "-w": "Select only those lines containing matches that form whole words. The test is that\n the matching substring must either be at the beginning of the line, or preceded by\n a non-word constituent character. Similarly, it must be either at the end of the\n line or followed by a non-word constituent character. Word-constituent characters\n are letters, digits, and the underscore. This option has no effect if -x is also\n specified.",
        "-f": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing.",
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29135022: How to compare two strings in variables in bash",
        "au_514105: Compare strings in two files"
      ],
      "Top-3 Scripts": [
        "so_29135022: $ awk '{print $1}' WEDI_RC | sort -u\nfile1\nfile2\nfile3",
        "au_514105: sort -b username > username.sorted\nsort -b contacts > contacts.sorted\n\njoin -t \":\" <(sort -b username) <(sort -b contacts)"
      ],
      "Explanations about Options": {
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run",
        "-b": "ignore leading blanks"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Concatenate several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} > {{target_file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10754788: Comparing values in two files",
        "au_648275: Compare Strings in Bash",
        "ul_385338: compare string in bash"
      ],
      "Top-3 Scripts": [
        "so_10754788: #!/bin/bash\nrm -f binary\nfor i in $(cat file1); do\n     awk 'BEGIN {isthere=0;} { if ($1==\"'$i'\") isthere=1;} END { print \"'$i'\",isthere}' < file2 >> binary\ndone",
        "au_648275: var=$(sudo cat /dev/ttyUSB0| tr -d \" \\t\\n\")",
        "ul_385338: a=$(cat file1.txt | tr -d '\\r' | grep '^Server:');"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45227668: Comparing two numeric variables in Linux",
        "au_648275: Compare Strings in Bash",
        "ul_385338: compare string in bash"
      ],
      "Top-3 Scripts": [
        "so_45227668: #                                  v-- Here\nremote_file_size=$(curl -sI $URL | tr -d '\\r' | grep -i content-length | awk '{print $2}')",
        "au_648275: var=$(sudo cat /dev/ttyUSB0| tr -d \" \\t\\n\")",
        "ul_385338: a=$(cat file1.txt | tr -d '\\r' | grep '^Server:');"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_514105: Compare strings in two files"
      ],
      "Top-3 Scripts": [
        "au_514105: join -t \":\" username contacts\n\njoin -t \":\" <(sort -b username) <(sort -b contacts)"
      ],
      "Explanations about Options": {
        "-t": "CHAR\n use CHAR as input and output field separator"
      }
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83254: Comparing two files in a script",
        "so_38896968: Compare strings in shell script",
        "au_1137981: Compare two dates in the shell"
      ],
      "Top-3 Scripts": [
        "ul_83254: while read line do\n    grep \"^$line$\" file2.txt >>matches.txt\ndone < file1.txt",
        "so_38896968: while read line\ndo\n if [[ \"${line%:*}\" = \"sheet_name\" ]] #double quote variables deals word splitting\n then\n  echo \"matched\"\n fi\ndone<parameters.txt",
        "au_1137981: /home/terdon/scripts/foo.sh: line 7: 0: No such file or directory"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "php",
      "MP Summary": "PHP Command Line Interface 'CLI'",
      "Most Similar TLDR Task": "Parse and execute a php script",
      "Most Similar TLDR Script": "php {{file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32509895: how to compare strings in bash shell script"
      ],
      "Top-3 Scripts": [
        "so_32509895: COMPARE_RESULT=sudo php /home/xxx/compareMD5.php\n\nCOMPARE_RESULT=`sudo php /home/xxx/compareMD5.php`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8435912: Script to compare a string in two different files",
        "so_8436881: Comparing two date strings in bash"
      ],
      "Top-3 Scripts": [
        "so_8435912: s1 = set([1,2,3])  # You can add things incrementally with \"s1.add(value)\"\ns2 = set([2,3,4])\n\nshared_items = s1.intersection(s2)\nprint shared_items\n\nset([2, 3])\n\nimport csv\n\nset1 = set()\nfor record in csv.reader(open('foo.csv', 'rb')):\n    user, machine_id, ip_address, mac_address = record\n    set1.add(mac_address)\n    # or simply \"set1.add(record[3])\", if you don't need the other fields.\n\ncsvfile = csv.reader(open('foo.csv', 'rb'))\nset1 = set(rec[3] for rec in csvfile)   # Assuming mac-address is the 4th column.",
        "so_8436881: set -vx"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare files, ignoring white spaces",
      "Most Similar TLDR Script": "diff -w {{old_file}} {{new_file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8116503: How to compare two DateTime strings and return difference in hours? (bash shell)"
      ],
      "Top-3 Scripts": [
        "so_8116503: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_83254: Comparing two files in a script",
        "so_38896968: Compare strings in shell script"
      ],
      "Top-3 Scripts": [
        "ul_83254: while read line do\n    grep \"^$line$\" file2.txt >>matches.txt\ndone < file1.txt",
        "so_38896968: while read line\ndo\n if [[ \"${line%:*}\" = \"sheet_name\" ]] #double quote variables deals word splitting\n then\n  echo \"matched\"\n fi\ndone<parameters.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Display file using default settings: octal format, 8 bytes per line, byte offsets in octal, and duplicate lines replaced with `*`",
      "Most Similar TLDR Script": "od {{path/to/file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67934265: comparing strings in shell",
        "so_27606460: How to compare two value in shell?"
      ],
      "Top-3 Scripts": [
        "so_67934265: ",
        "so_27606460: od -c <<< \"$currentDNS\""
      ],
      "Explanations about Options": {
        "-c": "same as -t c , select printable characters or backslash escapes"
      }
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61225025: Shell: How to compare two Time strings and return difference in minutes?",
        "so_52878320: Comparing two dates in Linux bash shell script",
        "au_1137981: Compare two dates in the shell"
      ],
      "Top-3 Scripts": [
        "so_61225025: current_utc_time=$(date +\"%H%M\")\nsch_time=$(date +\"18%M\")\n\nepoch_current=$(date -j -f \"%H%M\" \"$current_utc_time\" +%s)\nepoch_sch=$(date -j -f \"%H%M\" \"$sch_time\" +%s)\n\nepoch_current=$(date --date \"$current_utc_time\" +%s)\nepoch_sch=$(date --date \"$sch_time\" +%s)",
        "so_52878320: ",
        "au_1137981: peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n000000\n\n$ peak_time=\"10:05:31\"\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n100531"
      ],
      "Explanations about Options": {
        "--date": "display time described by STRING, not 'now'",
        "-d": "display time described by STRING, not 'now'"
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "bash -c \"{{command}}\"",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_145160: Comparing two strings in Bash"
      ],
      "Top-3 Scripts": [
        "ul_145160: man bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
      "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55574994: Compare the file names in two directories",
        "so_9099233: Bash: How to apply two string operations in one line?"
      ],
      "Top-3 Scripts": [
        "so_55574994: ",
        "so_9099233: for F in $( find /foo/bar -name \"*.ext\" )\ndo\n  : ${F%.ext}\n  cp $F ${_//bar/b0r}.tmp\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expr",
      "MP Summary": "evaluate arguments as an expression",
      "Most Similar TLDR Task": "Get position of the first character in 'string' that matches 'substring'",
      "Most Similar TLDR Script": "echo $(expr index {{string}} {{substring}})",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29310990: Compare two dates in shell script"
      ],
      "Top-3 Scripts": [
        "so_29310990: d1=\"2015-03-31\" d2=\"2015-04-01\"\nif [ \"$d1\" = \"$d2\" ]; then\n    echo \"same day\"\nelif expr \"$d1\" \"<\" \"$d2\" >/dev/null; then\n    echo \"d1 is earlier than d2\"\nelse\n    echo \"d1 is later than d2\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_145160: Comparing two strings in Bash"
      ],
      "Top-3 Scripts": [
        "ul_145160: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8435912: Script to compare a string in two different files",
        "so_27415991: How to compare two time fields in python"
      ],
      "Top-3 Scripts": [
        "so_8435912: import csv\n\nset1 = set()\nfor record in csv.reader(open('foo.csv', 'rb')):\n    user, machine_id, ip_address, mac_address = record\n    set1.add(mac_address)\n    # or simply \"set1.add(record[3])\", if you don't need the other fields.",
        "so_27415991: import datetime    \nt=datetime.datetime.strptime(\"20141020@030047.006710@EDT\",\"%Y%m%d@%H%M%S.%f@%Z\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unset",
      "MP Summary": "unset values and attributes of variables and functions",
      "Most Similar TLDR Task": "Remove the variable `foo`, or if the variable doesn't exist, remove the function `foo`",
      "Most Similar TLDR Script": "unset {{foo}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_14917474: Comparing strings in bash script"
      ],
      "Top-3 Scripts": [
        "so_14917474: $ unset x\n$ [ $x == 3 ]\n-bash: [: ==: unary operator expected\n$ [ \"$x\" == \"3\" ]\n$"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32509895: how to compare strings in bash shell script",
        "au_648275: Compare Strings in Bash"
      ],
      "Top-3 Scripts": [
        "so_32509895: COMPARE_RESULT=sudo php /home/xxx/compareMD5.php",
        "au_648275: var=$(sudo cat /dev/ttyUSB0| tr -d \" \\t\\n\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is equal to given string",
      "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29310990: Compare two dates in shell script"
      ],
      "Top-3 Scripts": [
        "so_29310990: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25496113: Comparing files in two different directories",
        "so_55574994: Compare the file names in two directories",
        "au_1137981: Compare two dates in the shell"
      ],
      "Top-3 Scripts": [
        "so_25496113: for file in f2/*; do\n    rm -f f1/\"$(basename \"$file\")\"\ndone",
        "so_55574994: ",
        "au_1137981: /home/terdon/scripts/foo.sh: line 7: 0: No such file or directory"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62024681: Comparing two strings containing '_' lexicographically in bash"
      ],
      "Top-3 Scripts": [
        "so_62024681: export LC_ALL=...\n\n$ export LC_ALL=en_US.UTF-8; [[ ab < a_c ]]; echo $?\n0\n$ export LC_ALL=C; [[ ab < a_c ]]; echo $?\n1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10754788: Comparing values in two files",
        "so_25496113: Comparing files in two different directories"
      ],
      "Top-3 Scripts": [
        "so_10754788: #!/bin/bash\nrm -f binary\nfor i in $(cat file1); do\n     awk 'BEGIN {isthere=0;} { if ($1==\"'$i'\") isthere=1;} END { print \"'$i'\",isthere}' < file2 >> binary\ndone",
        "so_25496113: rm -f\n\nfor file in f2/*; do\n    rm -f f1/\"$(basename \"$file\")\"\ndone"
      ],
      "Explanations about Options": {
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25496113: Comparing files in two different directories"
      ],
      "Top-3 Scripts": [
        "so_25496113: for file in f2/*; do\n    rm -f f1/\"$(basename \"$file\")\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show all file since line 'num'",
      "Most Similar TLDR Script": "tail -n +{{num}} {{file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69047166: Compare columns in two files and if match change string in another column"
      ],
      "Top-3 Scripts": [
        "so_69047166: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9099233: Bash: How to apply two string operations in one line?"
      ],
      "Top-3 Scripts": [
        "so_9099233: for F in $( find /foo/bar -name \"*.ext\" )\ndo\n  : ${F%.ext}\n  cp $F ${_//bar/b0r}.tmp\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_30539931: Comparing Numbers Two number in bash"
      ],
      "Top-3 Scripts": [
        "so_30539931: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32519495: compare two strings in bash"
      ],
      "Top-3 Scripts": [
        "so_32519495: if [[ ($version != 5 && $type != \"dbma\") || ($version != 6 && type != \"dbmy\") ]]"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send data in JSON format, specifying the appropriate content-type header",
      "Most Similar TLDR Script": "curl -d {{'{\"name\":\"bob\"}'}} -H {{'Content-Type: application/json'}} {{http://example.com/users/1234}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45227668: Comparing two numeric variables in Linux",
        "ul_385338: compare string in bash"
      ],
      "Top-3 Scripts": [
        "so_45227668: #                                  v-- Here\nremote_file_size=$(curl -sI $URL | tr -d '\\r' | grep -i content-length | awk '{print $2}')",
        "ul_385338: "
      ],
      "Explanations about Options": {
        "-I": "(HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the command HEAD which\n this uses to get nothing but the header of a document. When used on an FTP or FILE\n file, curl displays the file size and last modification time only.",
        "-s": "Silent or quiet mode. Don't show progress meter or error messages. Makes Curl\n mute. It will still output the data you ask for, potentially even to the\n terminal/stdout unless you redirect it."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25894094: Compare two files in bash",
        "so_40830060: Awk: how to compare two strings in one line",
        "so_67934265: comparing strings in shell"
      ],
      "Top-3 Scripts": [
        "so_25894094: awk -F/ 'FNR==NR {a[$1];next} $NF in a {print $NF \": \" $(NF-1)}' tmp1.txt tmp2.txt\naaa.txt: test1\nbbb.txt: test2\nccc.txt: test1",
        "so_40830060: { print $0 }",
        "so_67934265: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session to a file named `typescript` in the current directory",
      "Most Similar TLDR Script": "script",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9099233: Bash: How to apply two string operations in one line?"
      ],
      "Top-3 Scripts": [
        "so_9099233: $_    Temporary variable; initialized to pathname of script or program\n      being executed. Later, stores the last argument of previous command.\n      Also stores name of matching MAIL \ufb01le during mail checks."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mail",
      "MP Summary": "send and receive mail",
      "Most Similar TLDR Task": "Send a typed email message. The commandline below continues after pressing Enter key. Input CC email-id (optional) press Enter key. Input message text (can be multi-line). Press \"Ctrl-D\" key to complete the message text",
      "Most Similar TLDR Script": "mail --subject=\"{{subject line}}\" {{to_user@example.com}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9099233: Bash: How to apply two string operations in one line?",
        "so_43210697: Compare two variables having multiple values in shell script"
      ],
      "Top-3 Scripts": [
        "so_9099233: $_    Temporary variable; initialized to pathname of script or program\n      being executed. Later, stores the last argument of previous command.\n      Also stores name of matching MAIL \ufb01le during mail checks.",
        "so_43210697: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Search for manpages containing a search string",
      "Most Similar TLDR Script": "man -k \"{{search string}}\"",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_145160: Comparing two strings in Bash",
        "so_43210697: Compare two variables having multiple values in shell script",
        "so_8116503: How to compare two DateTime strings and return difference in hours? (bash shell)"
      ],
      "Top-3 Scripts": [
        "ul_145160: man bash",
        "so_43210697: ",
        "so_8116503: man date"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer directory contents (but not the directory itself) from a remote to local",
      "Most Similar TLDR Script": "rsync -r {{remote_host}}:{{path/to/remote_directory}}/ {{path/to/local_directory}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25496113: Comparing files in two different directories"
      ],
      "Top-3 Scripts": [
        "so_25496113: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_6295774: Bash Comparing strings in a directory",
        "so_32370589: Compare two arrays in powershell including order"
      ],
      "Top-3 Scripts": [
        "so_6295774: ",
        "so_32370589: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_9099233: Bash: How to apply two string operations in one line?"
      ],
      "Top-3 Scripts": [
        "so_9099233: $_    Temporary variable; initialized to pathname of script or program\n      being executed. Later, stores the last argument of previous command.\n      Also stores name of matching MAIL \ufb01le during mail checks."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "at",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute a script at the given time",
      "Most Similar TLDR Script": "at {{hh:mm}} -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_286690: Compare string in two files And Merge its Output"
      ],
      "Top-3 Scripts": [
        "ul_286690: $ awk 'FNR==NR{a[$1]=$2; next} {print $0,a[$1]}' bandwidth.txt hits.txt\nonlinestudyboard.com     received  186     hits  from  31/May/2016  at  1201 \naaspak.org               received  184     hits  from  31/May/2016  at  1202 211.57M\nkhawajarubber.com        received  183     hits  from  31/May/2016  at  1246 \naatonerpk.com            received  182     hits  from  31/May/2016  at  1231 14.87M"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "lp",
      "MP Summary": "print files",
      "Most Similar TLDR Task": "Print N copies of file to default printer (replace N with desired number of copies)",
      "Most Similar TLDR Script": "lp -n {{N}} {{path/to/filename}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43210697: Compare two variables having multiple values in shell script"
      ],
      "Top-3 Scripts": [
        "so_43210697: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sync",
      "MP Summary": "Synchronize cached writes to persistent storage",
      "Most Similar TLDR Task": "Flush all pending write operations on a single file to disk",
      "Most Similar TLDR Script": "sync {{path/to/file}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_43210697: Compare two variables having multiple values in shell script"
      ],
      "Top-3 Scripts": [
        "so_43210697: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32370589: Compare two arrays in powershell including order"
      ],
      "Top-3 Scripts": [
        "so_32370589: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ab",
      "MP Summary": "Apache HTTP server benchmarking tool",
      "Most Similar TLDR Task": "Execute 100 HTTP GET requests, processing up to 10 requests concurrently, to given URL",
      "Most Similar TLDR Script": "ab -n {{100}} -c {{10}} {{url}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62024681: Comparing two strings containing '_' lexicographically in bash"
      ],
      "Top-3 Scripts": [
        "so_62024681: $ export LC_ALL=en_US.UTF-8; [[ ab < a_c ]]; echo $?\n0\n$ export LC_ALL=C; [[ ab < a_c ]]; echo $?\n1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "time",
      "MP Summary": "time a simple command",
      "Most Similar TLDR Task": "Time \"ls\"",
      "Most Similar TLDR Script": "time ls",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1137981: Compare two dates in the shell"
      ],
      "Top-3 Scripts": [
        "au_1137981: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "info",
      "MP Summary": "read Info documents",
      "Most Similar TLDR Task": "Start reading at given menu item node from top-level directory",
      "Most Similar TLDR Script": "info {{menu_item}}",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_251646: Comparing values in one same string"
      ],
      "Top-3 Scripts": [
        "ul_251646: content=$(wget 10.0.1.5:8000/currentsong?sid=1 -q -O \ncontent_old=$(cat /tmp/content.old)\nif [ \"$content\" != \"$content_old\" ]; then\n        echo \"New song info there..\"\nelse\n        echo \"NOTHING\"\nfi\necho $content > /tmp/content.old"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "version",
      "MP Summary": "Web interface for the double-entry accounting tool Beancount",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_32519495: compare two strings in bash"
      ],
      "Top-3 Scripts": [
        "so_32519495: if [[ ($version != 5 && $type != \"dbma\") || ($version != 6 && type != \"dbmy\") ]]"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2237080: How to compare strings in Bash",
        "so_67934265: comparing strings in shell",
        "ul_145160: Comparing two strings in Bash"
      ],
      "Top-3 Scripts": [
        "so_2237080: if [ \"$x\" = \"valid\" ]; then\n\nif [ = \"valid\" ]; then\n\nif [[ \"$x\" == \"valid\" ]]; then",
        "so_67934265: ",
        "ul_145160: if [ \"${PACKAGENAME}\" = 'kakadu-v6_4-00902C' ]; then\n    echo \"successfully entered if block!!\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "NF",
      "MP Summary": "awk and print a column (based on the name of the program, 1-9)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "comm -23 <(ls) <(ls *Music*)\n",
          "command-options": {
            "comm": {
              "mpsum": "select or reject lines common to two files"
            },
            "ls": {
              "mpsum": "list directory contents"
            }
          },
          "TLDR_inform": {
            "comm": {
              "man1_comm_4709": "select reject line common two file\nfile must sort get line found first file save result third file print line found second file file sort print line common file print line common file read one file stdin produc three tab-separ column : line first file line second file common line"
            },
            "ls": {
              "man1_ls_18038": "list directori content list file includ hidden file list file trail ad directori name list file one per line long format list permiss ownership size modif date file long format list file sort modif date oldest first long format list sort size descend long format list size display use human readabl unit kb mb gb"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25894094: Compare two files in bash",
        "so_69047166: Compare columns in two files and if match change string in another column"
      ],
      "Top-3 Scripts": [
        "so_25894094: awk -F/ 'FNR==NR {a[$1];next} $NF in a {print $NF \": \" $(NF-1)}' tmp1.txt tmp2.txt\naaa.txt: test1\nbbb.txt: test2\nccc.txt: test1",
        "so_69047166: $ cat tst.awk\nNR==FNR {\n    genes[\"\\\"\"$1\"\\\";\"]\n    next\n}\n$NF in genes {\n    match($0,/((\\S+\\s+){3})\\S+(.*)/,a)\n    $0 = a[1] \"pseudogene\" a[3]\n}\n{ print }"
      ],
      "Explanations about Options": {}
    }
  ]
}