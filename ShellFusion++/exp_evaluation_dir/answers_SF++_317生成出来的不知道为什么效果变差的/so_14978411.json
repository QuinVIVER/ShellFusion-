{
  "Query": "HTTP POST and GET using cURL in Linux",
  "Answers": [
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send a request with an extra header, using a custom HTTP method",
      "Most Similar TLDR Script": "curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26735545: http file upload using cURL in linux(command line)",
        "so_17344185: How to send a post request to google safebrowsing using the curl in bash?",
        "so_52930372: passing values with spaces in curl command using POST"
      ],
      "Top-3 Scripts": [
        "so_26735545: curl -i -F filename=image.jpg -F image=@/path/to/image.jpg http://localhost/xmlcreate/curlupload.php",
        "so_17344185: curl -k \"https://sb-ssl.google.com/safebrowsing/api/lookup?client=api&apikey=hidden&appver=1.0&pver=3.01\" -d \\\n'2\nhttp://test.com\nhttp://ask.com'",
        "so_52930372: while IFS= read -r line ; do\n  curl -d '{\"name\": \"'\"$line\"'\"}' \\ \n    -H \"Authorization: Basic YWRtaW46YWRtaW4=\" \\\n    -H \"Content-Type: application/json\" \\\n    -H \"Accept: application/json\" \\\n    -X POST 'http://localhost:3000/api/teams'\ndone < /tmp/group.txt\n\nwhile IFS= read -r line; do\n  d=$(jq -n --argjson x \"$line\" '{name: $x}')\n  curl -d \"$d\" ...\ndone < /tmp/group.txt\n\njq -c -R '{name: .}' | while IFS= read -r line; do\n  curl -d \"$line\" ...\ndone"
      ],
      "Explanations about Options": {
        "-d": "(HTTP) Sends the specified data in a POST request to the HTTP server, in the same\n way that a browser does when a user has filled in an HTML form and presses the\n submit button. This will cause curl to pass the data to the server using the\n content-type application/x-www-form-urlencoded. Compare to -F, --form.",
        "-k": "(TLS) By default, every SSL connection curl makes is verified to be secure. This\n option allows curl to proceed and operate even for server connections otherwise\n considered insecure.",
        "-F": "(HTTP SMTP IMAP) For HTTP protocol family, this lets curl emulate a filled-in form\n in which a user has pressed the submit button. This causes curl to POST data using\n the Content-Type multipart/form-data according to RFC 2388.",
        "-i": "Include the HTTP response headers in the output. The HTTP response headers can\n include things like server name, cookies, date of the document, HTTP version and\n more..."
      }
    },
    {
      "Command": "openssl",
      "MP Summary": "OpenSSL command line tool",
      "Most Similar TLDR Task": "Display the complete certificate chain of an HTTPS server",
      "Most Similar TLDR Script": "openssl s_client -connect {{host}}:443 -showcerts </dev/null",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call",
        "au_1034622: curl cannot connect to HTTPS sites in 18.04"
      ],
      "Top-3 Scripts": [
        "so_64084797: ",
        "au_1034622: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ab",
      "MP Summary": "Apache HTTP server benchmarking tool",
      "Most Similar TLDR Task": "Execute 100 HTTP POST requests to a given URL, using a JSON payload from a file",
      "Most Similar TLDR Script": "ab -n {{100}} -T {{application/json}} -p {{data.json}} {{url}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56235539: Using variables in CURL",
        "so_41114306: How to get http status code and content separately using curl in linux",
        "so_45490432: Get output from curl executed in PHP"
      ],
      "Top-3 Scripts": [
        "so_56235539: HMM=$1\n\ncurl -H 'Accept:application/json' -F file=@\"${HMM}\" -F processing=hmm http://skylign.org\n#                                         ^\n#                                         |\n#                                         |",
        "so_41114306: code=$(curl -s -o file -w '%{response_code}' http://example.com/)\nif test \"$code\" != \"200\"; then\n   echo $code >> response-log\nelse\n   echo \"wohoo 'file' is fine\"\nfi",
        "so_45490432: $ch = curl_init ( 'https://api.sonicapi.com/file/upload?access_id=' . $accessId );\ncurl_setopt_array ( $ch, array (\n        CURLOPT_POST => true,\n        CURLOPT_POSTFIELDS => array (\n                'file'=>new CURLFile('shortaudio.mp3')\n        ),\n        CURLOPT_RETURNTRANSFER=>true\n) );\n$output=curl_exec($ch);\ncurl_close($ch);"
      ],
      "Explanations about Options": {
        "-F": "Use the specified string as the separator between the filename and the file result\n returned. Defaults to \u2018:\u2019."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_46853407: How to get correct response from curl in executable bash script?",
        "so_45520666: How to pass dynamic parameters in curl request",
        "so_64271111: Getting output of curl command in a variable"
      ],
      "Top-3 Scripts": [
        "so_46853407: #!/bin/bash\nresult=\"$(curl -i -H \"Accept: application/json\" -H \"Content-Type: application/json\" https://jsonplaceholder.typicode.com/posts/1)\"\necho the result is: \"${result}\"",
        "so_45520666: testing() {\n   local url=\"$1\"\n   local httpType=\"$2\"\n\n   shift 2 # shift 2 times to discard first 2 arguments\n   local params=\"$@\" # store rest of them in a var\n\n   response=$(curl -s -w \"HTTPSTATUS:%{http_code}\" -X \"$httpType\" \"$url\" \"$params\")\n   echo \"$response\"\n}",
        "so_64271111: out=$(curl -u user:password -k ${second_url})\n# or \nout=$(curl -u user:password -k abc.com/${jobid}/result/ --get -d output=json) \n# and\necho \"$out\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Print the version information of bash (use `echo $BASH_VERSION` to show just the version without license information)",
      "Most Similar TLDR Script": "bash --version",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_45520666: How to pass dynamic parameters in curl request"
      ],
      "Top-3 Scripts": [
        "so_45520666: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Read JSON objects from a file into an array, and output it (inverse of `jq .[]`)",
      "Most Similar TLDR Script": "jq --slurp . {{file.json}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52930372: passing values with spaces in curl command using POST",
        "so_68712132: Passing Variables in CURL GET",
        "so_66438353: How to insert another JSON, in the POST cURL request JSON data?"
      ],
      "Top-3 Scripts": [
        "so_52930372: while IFS= read -r line; do\n  d=$(jq -n --argjson x \"$line\" '{name: $x}')\n  curl -d \"$d\" ...\ndone < /tmp/group.txt\n\njq -c -R '{name: .}' | while IFS= read -r line; do\n  curl -d \"$line\" ...\ndone",
        "so_68712132: ruleId=$($whitelist | jq -r '.[].ruleId')\nalert=$($whitelist | jq -r '.[].alertName')\nnewLevel=$($whitelist | jq -r '.[].newLevel')\nurl=$($whitelist | jq -r '.[].url')\nurlIsRegex=$($whitelist | jq -r '.[].urlIsRegex')\nenabled=$($whitelist | jq -r '.[].enabled')\nparameter=$($whitelist | jq -r '.[].parameter')\nevidence=$($whitelist | jq -r '.[].evidence')",
        "so_66438353: test_report=$(jq .summary mezi_automation_test_report.json)\ncurl \"http://localhost/send\" -d '{\"text\":'\"$test_report\"' } '\n\npassed=$(jq .summary.passed mezi_automation_test_report.json)\ntotal=$(jq .summary.total mezi_automation_test_report.json)\ncollected=$(jq .summary.collected mezi_automation_test_report.json)\ncurl \"http://localhost/send\" -d '{\"text\":\"Test Report: \\nPassed: '$passed' \\nTotal: '$total' \\nCollected: '$collected' \\nEnd of Report\" } '"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add/Delete an ip address to an interface",
      "Most Similar TLDR Script": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29102954: expanding shell variable in curl POST?"
      ],
      "Top-3 Scripts": [
        "so_29102954: ip=10.1.1.1\ncurl -X POST 'http://'\"$ip\"':8086/db?u=root&p=root' -d '{name: test1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Store a formatted message in a variable (does not work on zsh)",
      "Most Similar TLDR Script": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call",
        "so_7678675: Get cURL response in bash",
        "so_30624289: How to escape a JSON variable posted with curl in bash script?"
      ],
      "Top-3 Scripts": [
        "so_64084797: ",
        "so_7678675: curl -T \"$xmlFolder/$xmlFile\" \"$mediaFTP\" || \n  printf '%s\\n' $?\n\ncurl -T \"$xmlFolder/$xmlFile\" \"$mediaFTP\" >/dev/null || \n  printf '%s\\n' $?",
        "so_30624289: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17029902: Using curl POST with variables defined in bash script functions",
        "so_28971771: Getting JSON value from cURL in Linux Bash",
        "so_21061498: How can I send a file's contents as a POST parameter using cURL?"
      ],
      "Top-3 Scripts": [
        "so_17029902: ",
        "so_28971771: cat <<EOF | json_reformat | \\\n    sed -rne '/:/s@^\\s+\"(\\w+)\":\\s+\"([^\"]+)\",?@json_\\1=\"\\2\"@gp'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\ncat <<EOF | \\\n    sed -re 's@(\\[|\\]|\\{|\\})@@g' -e 's/,/\\n/g' | \\\n    sed -re 's@\"(\\w+)\":\\s*\"?([^\"]*)\"?@json_\\1=\"\\2\"@g'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF",
        "so_21061498: $ curl --data \"foo:$(cat foo.txt)\" http://localhost/yourfile.php\n\n$ curl --data \"foo:$(cat foo.txt | base64)\" http://localhost/yourfile.php"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_356123: Can I create file in server using CURL?",
        "so_41114306: How to get http status code and content separately using curl in linux"
      ],
      "Top-3 Scripts": [
        "ul_356123: curl -D- -u user:pass -X PUT --data \"@test.txt\" https://my-windows/test/test.txt",
        "so_41114306: code=$(curl -s -o file -w '%{response_code}' http://example.com/)\nif test \"$code\" != \"200\"; then\n   echo $code >> response-log\nelse\n   echo \"wohoo 'file' is fine\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "progress",
      "MP Summary": "Coreutils Progress Viewer",
      "Most Similar TLDR Task": "Show the progress of running coreutils",
      "Most Similar TLDR Script": "progress",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_26426: How do I get (only) the http status of a site in a shell script?"
      ],
      "Top-3 Scripts": [
        "ul_26426: -s/--silent\n          Silent or quiet mode. Don't show progress meter \n          or error messages.  Makes Curl mute."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "Show the current status of a service",
      "Most Similar TLDR Script": "service {{service_name}} status",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55724669: get a pagingobject in http response requested over curl"
      ],
      "Top-3 Scripts": [
        "so_55724669: curl http://127.0.0.1:80/service/ressource/elementuri?limit=2&offset=2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "type",
      "MP Summary": "write a description of command type",
      "Most Similar TLDR Task": "Display all locations containing the specified executable",
      "Most Similar TLDR Script": "type -a {{command}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_33973583: cURL command to POST with data embedded in request"
      ],
      "Top-3 Scripts": [
        "so_33973583: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28971771: Getting JSON value from cURL in Linux Bash",
        "so_52242133: How to get file from POST data in Bash CGI script?"
      ],
      "Top-3 Scripts": [
        "so_28971771: cat <<EOF | json_reformat | \\\n    sed -rne '/:/s@^\\s+\"(\\w+)\":\\s+\"([^\"]+)\",?@json_\\1=\"\\2\"@gp'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\ncat <<EOF | \\\n    sed -re 's@(\\[|\\]|\\{|\\})@@g' -e 's/,/\\n/g' | \\\n    sed -re 's@\"(\\w+)\":\\s*\"?([^\"]*)\"?@json_\\1=\"\\2\"@g'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF",
        "so_52242133: "
      ],
      "Explanations about Options": {
        "-e": "add the script to the commands to be executed",
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53100425: using curl with commands in go"
      ],
      "Top-3 Scripts": [
        "so_53100425: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Use extended regular expressions (supporting `?`, `+`, `{}`, `()` and `|`), in case-insensitive mode",
      "Most Similar TLDR Script": "grep -Ei {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_26426: How do I get (only) the http status of a site in a shell script?",
        "so_52242133: How to get file from POST data in Bash CGI script?",
        "su_619592: Get modification time of remote file over HTTP in Bash script"
      ],
      "Top-3 Scripts": [
        "ul_26426: res=`curl -s -I $1 | grep HTTP/1.1 | awk {'print $2'}`",
        "so_52242133: ",
        "su_619592: curl -s -v -X HEAD http://foo.com/bar/baz.pdf 2>&1 | grep '^< Last-Modified:'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Enable backspace and GNU readline hotkeys when entering input with read",
      "Most Similar TLDR Script": "read -e {{variable}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52930372: passing values with spaces in curl command using POST"
      ],
      "Top-3 Scripts": [
        "so_52930372: while IFS= read -r line ; do\n  curl -d '{\"name\": \"'\"$line\"'\"}' \\ \n    -H \"Authorization: Basic YWRtaW46YWRtaW4=\" \\\n    -H \"Content-Type: application/json\" \\\n    -H \"Accept: application/json\" \\\n    -X POST 'http://localhost:3000/api/teams'\ndone < /tmp/group.txt\n\nwhile IFS= read -r line; do\n  d=$(jq -n --argjson x \"$line\" '{name: $x}')\n  curl -d \"$d\" ...\ndone < /tmp/group.txt\n\njq -c -R '{name: .}' | while IFS= read -r line; do\n  curl -d \"$line\" ...\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "go",
      "MP Summary": "tool for managing Go source code",
      "Most Similar TLDR Task": "Download and install a package, specified by its import path",
      "Most Similar TLDR Script": "go get {{package_path}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53100425: using curl with commands in go"
      ],
      "Top-3 Scripts": [
        "so_53100425: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "base64",
      "MP Summary": "base64 encode/decode data and print to standard output",
      "Most Similar TLDR Task": "Decode a file",
      "Most Similar TLDR Script": "base64 -d {{filename}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fd",
      "MP Summary": "find entries in the filesystem",
      "Most Similar TLDR Task": "Find files in a specific directory",
      "Most Similar TLDR Script": "fd {{pattern}} {{path/to/dir}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "df",
      "MP Summary": "report file system disk space usage",
      "Most Similar TLDR Task": "Display filesystems but exclude the specified type",
      "Most Similar TLDR Script": "df -x {{squashfs}} -x {{tmpfs}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ac",
      "MP Summary": "print statistics about users' connect time",
      "Most Similar TLDR Task": "Also display additional details",
      "Most Similar TLDR Script": "ac --compatibility",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_591211: How does `curl` access SSL certs in macOS?"
      ],
      "Top-3 Scripts": [
        "ul_591211: brew install curl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Compress a series of identical characters to a single character",
      "Most Similar TLDR Script": "tr -s '{{input_characters}}' < {{filename}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52242133: How to get file from POST data in Bash CGI script?"
      ],
      "Top-3 Scripts": [
        "so_52242133: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the man page for a command from section 7",
      "Most Similar TLDR Script": "man {{command}}.{{7}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_8383191: how to use curl in php?"
      ],
      "Top-3 Scripts": [
        "so_8383191: man curl"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to the given directory",
      "Most Similar TLDR Script": "cd {{path/to/directory}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fc",
      "MP Summary": "frontend script to the f2c fortran compiler",
      "Most Similar TLDR Task": "Specify an editor to open with",
      "Most Similar TLDR Script": "fc -e {{'emacs'}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_591211: How does `curl` access SSL certs in macOS?"
      ],
      "Top-3 Scripts": [
        "ul_591211: export PATH=\"/usr/local/opt/curl/bin:$PATH\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from `stdin`",
      "Most Similar TLDR Script": "sh -s",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_65629304: Jenkins: Using variable in Shell Script / CURL Request"
      ],
      "Top-3 Scripts": [
        "so_65629304: sh(\"curl https....\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52242133: How to get file from POST data in Bash CGI script?"
      ],
      "Top-3 Scripts": [
        "so_52242133: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28971771: Getting JSON value from cURL in Linux Bash"
      ],
      "Top-3 Scripts": [
        "so_28971771: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Keep reading file until `Ctrl + C`",
      "Most Similar TLDR Script": "tail -f {{file}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52242133: How to get file from POST data in Bash CGI script?",
        "su_569092: How to split the HTTP error code from the contents in cURL?"
      ],
      "Top-3 Scripts": [
        "so_52242133: ",
        "su_569092: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52930372: passing values with spaces in curl command using POST"
      ],
      "Top-3 Scripts": [
        "so_52930372: $line\n\nwhile IFS= read -r line ; do\n  curl -d '{\"name\": \"'\"$line\"'\"}' \\ \n    -H \"Authorization: Basic YWRtaW46YWRtaW4=\" \\\n    -H \"Content-Type: application/json\" \\\n    -H \"Accept: application/json\" \\\n    -X POST 'http://localhost:3000/api/teams'\ndone < /tmp/group.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Display file in hexadecimal format along with its character representation, and do not print byte offsets",
      "Most Similar TLDR Script": "od --format={{xz}} --address-radix={{n}} -v {{path/to/file}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_26426: How do I get (only) the http status of a site in a shell script?"
      ],
      "Top-3 Scripts": [
        "ul_26426: res=`curl -s -I $1 | grep HTTP/1.1 | awk {'print $2'}`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Run calculator in interactive mode using the standard math library",
      "Most Similar TLDR Script": "bc -l",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "hello",
      "MP Summary": "friendly greeting program",
      "Most Similar TLDR Task": "Print a text message",
      "Most Similar TLDR Script": "hello --greeting=\"{{greeting_text}}\"",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28971771: Getting JSON value from cURL in Linux Bash"
      ],
      "Top-3 Scripts": [
        "so_28971771: cat <<EOF | json_reformat | \\\n    sed -rne '/:/s@^\\s+\"(\\w+)\":\\s+\"([^\"]+)\",?@json_\\1=\"\\2\"@gp'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\njson__id=\"54ff35887d8ef574029b9166\"\njson_user=\"54fe4313883bcec2c0ac0d64\"\njson_created=\"2015-03-10T18:18:48.023Z\"\njson_status=\"available\"\njson_pbo_udid=\"lemaker\"\njson_description=\"Prints hello world to console\"\njson_package_name=\"helloworld_1.0-1.deb\"\njson_name=\"Hello World V1\"\n\ncat <<EOF | \\\n    sed -re 's@(\\[|\\]|\\{|\\})@@g' -e 's/,/\\n/g' | \\\n    sed -re 's@\"(\\w+)\":\\s*\"?([^\"]*)\"?@json_\\1=\"\\2\"@g'\n[{\"_id\":\"54ff35887d8ef574029b9166\",\"user\":\"54fe4313883bcec2c0ac0d64\",\"__v\":0,\"created\":\"2015-03-10T18:18:48.023Z\",\"status\":\"available\",\"pbo_udid\":\"lemaker\",\"installation_script\":\"\",\"description\":\"Prints hello world to console\",\"package_name\":\"helloworld_1.0-1.deb\",\"name\":\"Hello World V1\"}]\nEOF\n\njson__id=\"54ff35887d8ef574029b9166\"\njson_user=\"54fe4313883bcec2c0ac0d64\"\njson___v=\"0\"\njson_created=\"2015-03-10T18:18:48.023Z\"\njson_status=\"available\"\njson_pbo_udid=\"lemaker\"\njson_installation_script=\"\"\njson_description=\"Prints hello world to console\"\njson_package_name=\"helloworld_1.0-1.deb\"\njson_name=\"Hello World V1\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dc",
      "MP Summary": "an arbitrary precision calculator",
      "Most Similar TLDR Task": "Calculate 4 times 5 [4 5 *], subtract 17 [17 -], and [p]rint the output (using echo)",
      "Most Similar TLDR Script": "echo \"4 5 * 17 - p\"| dc",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64084797: Curl POST request in Bash removing characters in API call"
      ],
      "Top-3 Scripts": [
        "so_64084797: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "opt",
      "MP Summary": "LLVM optimizer",
      "Most Similar TLDR Task": "Run an optimization or analysis on a bitcode file",
      "Most Similar TLDR Script": "opt -{{passname}} {{path/to/file.bc}} -S -o {{file_opt.bc}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_591211: How does `curl` access SSL certs in macOS?"
      ],
      "Top-3 Scripts": [
        "ul_591211: export PATH=\"/usr/local/opt/curl/bin:$PATH\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52242133: How to get file from POST data in Bash CGI script?",
        "su_569092: How to split the HTTP error code from the contents in cURL?"
      ],
      "Top-3 Scripts": [
        "so_52242133: ",
        "su_569092: head -n-1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sleep",
      "MP Summary": "delay for a specified amount of time",
      "Most Similar TLDR Task": "Delay in minutes",
      "Most Similar TLDR Script": "sleep {{minutes}}m",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_64271111: Getting output of curl command in a variable"
      ],
      "Top-3 Scripts": [
        "so_64271111: sleep 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "image",
      "MP Summary": "Translate LaTeX documents to GIF images.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26735545: http file upload using cURL in linux(command line)"
      ],
      "Top-3 Scripts": [
        "so_26735545: curl -i -F filename=image.jpg -F image=@/path/to/image.jpg http://localhost/xmlcreate/curlupload.php"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_26735545: http file upload using cURL in linux(command line)",
        "so_45520666: How to pass dynamic parameters in curl request",
        "so_43779892: Posting a user defined variable in JSON array using CURL"
      ],
      "Top-3 Scripts": [
        "so_26735545: curl -i -F filename=image.jpg -F image=@/path/to/image.jpg http://localhost/xmlcreate/curlupload.php",
        "so_45520666: testing() {\n   local url=\"$1\"\n   local httpType=\"$2\"\n\n   shift 2 # shift 2 times to discard first 2 arguments\n   local params=\"$@\" # store rest of them in a var\n\n   response=$(curl -s -w \"HTTPSTATUS:%{http_code}\" -X \"$httpType\" \"$url\" \"$params\")\n   echo \"$response\"\n}",
        "so_43779892: N=21; START='{\"device_id\":';\n\nEND=',\"lattitude\":2323,\"longitude\":443}';\ncurl -X POST -H \"Content-Type: application/json\" -d \"$START$N$END\" http://ipadress.com/path/to"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "post",
      "MP Summary": "deliver an nmh message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5370636: How to make a HTTP Post/GET request in Powershell?"
      ],
      "Top-3 Scripts": [
        "so_5370636: Invoke-Http -verb post"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "POST",
      "MP Summary": "Handle a part of posting messages (used by sn news system)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_52930372: passing values with spaces in curl command using POST",
        "so_29102954: expanding shell variable in curl POST?",
        "so_53391708: invalid_json in curl using variable in POST"
      ],
      "Top-3 Scripts": [
        "so_52930372: while IFS= read -r line ; do\n  curl -d '{\"name\": \"'\"$line\"'\"}' \\ \n    -H \"Authorization: Basic YWRtaW46YWRtaW4=\" \\\n    -H \"Content-Type: application/json\" \\\n    -H \"Accept: application/json\" \\\n    -X POST 'http://localhost:3000/api/teams'\ndone < /tmp/group.txt",
        "so_29102954: ip=10.1.1.1\ncurl -X POST 'http://'\"$ip\"':8086/db?u=root&p=root' -d '{name: test1}'",
        "so_53391708: curl -X POST -d \"{\\\"api_token\\\": \\\"test_api\\\", \\\"id\\\": $var}\" 'https://api_test.com/'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mytool",
      "MP Summary": "manipulate map files for yudit, uniconv and uniprint",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53100425: using curl with commands in go"
      ],
      "Top-3 Scripts": [
        "so_53100425: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "package",
      "MP Summary": "register package user via mailagent",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53100425: using curl with commands in go"
      ],
      "Top-3 Scripts": [
        "so_53100425: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "main",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "send GET request to \"https://graph.facebook.com/me/feed\" using URL-encoding \"access_token=$(cat .fb_access_token)\"",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -v --get --data-urlencode \"access_token=$(cat .fb_access_token)\" https://graph.facebook.com/me/feed\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
              "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
              "--data-urlencode": "(HTTP) This posts data, similar to the other -d, --data options with the exception\n that this performs URL-encoding."
            },
            "cat": {
              "mpsum": "concatenate files and print on the standard output"
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            },
            "cat": {
              "man1_cat_3454": "print concaten file append sever file target file concaten sever file target file display non-print whitespac charact m- prefix non-ascii number output line print content file standard output"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_53100425: using curl with commands in go"
      ],
      "Top-3 Scripts": [
        "so_53100425: "
      ],
      "Explanations about Options": {}
    }
  ]
}