{
  "Query": "Fetch a specific branch using git",
  "Answers": [
    {
      "Command": "git",
      "MP Summary": "the stupid content tracker",
      "Most Similar TLDR Task": "Execute a Git subcommand with a given configuration set",
      "Most Similar TLDR Script": "git -c '{{config.key}}={{value}}' {{subcommand}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10105996: Creating multiple git branches using a bashrc sh alias",
        "so_3846380: How to iterate through all git branches using bash script",
        "ul_480153: How to print only git message/title using bash script?"
      ],
      "Top-3 Scripts": [
        "so_10105996: function branches {\n    cd folder1\n    git checkout -b $1\n    cd folder2\n    git checkout -b $1\n    cd folder3\n    git checkout -b $1\n    cd folder4\n    git checkout -b $1\n}\n\nfunction branches {\n    for folder in folder1 folder2 folder3 folder4 ; do\n        cd $folder\n        git checkout -b $1\n    done\n}",
        "so_3846380: git for-each-ref --shell \\\n  --format='git log --oneline %(refname) ^origin/master' \\\n  refs/heads/\n\ngit log --oneline 'refs/heads/master' ^origin/master\ngit log --oneline 'refs/heads/other' ^origin/master\ngit log --oneline 'refs/heads/pu' ^origin/master\n\nfor branch in $(git for-each-ref --format='%(refname)' refs/heads/); do\n    git log --oneline \"$branch\" ^origin/master\ndone\n\nbranches=()\neval \"$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)\"\nfor branch in \"${branches[@]}\"; do\n    # \u2026\ndone",
        "ul_480153: git show --oneline -s HEAD\n\ngit show --pretty=format:%s -s HEAD\n\ngit show --pretty=format:\"%H %s\" -s HEAD"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62191331: Automatically updating git repository using crontab",
        "so_40783422: Create local respository using git same as remote respository (Local git server same as remote)"
      ],
      "Top-3 Scripts": [
        "so_62191331: * * * * * /bin/bash -l -c 'cd /var/www/project && ./autogit-project.sh >> /home/cron_log.log 2>&1'",
        "so_40783422: git branch -a | grep \"remotes/origin\" | egrep -v \"origin/(master|HEAD)$\" | \\\n   sed \"s:remotes/\\([^/]\\+/\\(.\\+\\)\\)$:git checkout -b \\2 \\1:\" | bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded",
      "Most Similar TLDR Script": "apt-get autoclean",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_527551: How to access a git repository using SSH?",
        "so_41865387: how to install latest git using apt-get?"
      ],
      "Top-3 Scripts": [
        "au_527551: sudo apt-get install git",
        "so_41865387: sudo add-apt-repository ppa:git-core/ppa\nsudo apt-get update\nsudo apt-get install git"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55931638: split pipe separated string fetched using SQL",
        "so_19293222: How to prevent remote branch deletion in git without using gitolite",
        "so_28047181: How do I fetch this substring using awk?"
      ],
      "Top-3 Scripts": [
        "so_55931638: ",
        "so_19293222: ",
        "so_28047181: $ echo \"$k\" | awk -F _ '{for (i=0; i<=NF; i++) {print i\"=\"$i}}'\n0=CHECK_SOMETHING_CUSTOM_executable.acs\n1=CHECK\n2=SOMETHING\n3=CUSTOM\n4=executable.acs\n\necho \"$k\" | awk -F _ -v OFS=_ '{print $3,$4}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24787266: Unable to fetch the process information using shell script",
        "so_55931638: split pipe separated string fetched using SQL",
        "so_7871573: How can I run the makefile on every git branch"
      ],
      "Top-3 Scripts": [
        "so_24787266: read PID < <(exec ps -o ppid= \"$ID\")\n\nwhile read -u 4 P; do\n    top -c -n 1 -p \"$P\" > /tmp/stat.log\ndone 4< <(exec pgrep -P \"$PID\")\n\nwhile read -u 4 P; do\n    top -c -n 1 -p \"$P\"\ndone 4< <(exec pgrep -P \"$PID\") > /tmp/stat.log",
        "so_55931638: ",
        "so_7871573: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_527551: How to access a git repository using SSH?",
        "so_41865387: how to install latest git using apt-get?"
      ],
      "Top-3 Scripts": [
        "au_527551: sudo apt-get install git",
        "so_41865387: sudo add-apt-repository ppa:git-core/ppa\nsudo apt-get update\nsudo apt-get install git"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18899835: Convert git date using GNU date",
        "so_42711886: Getting SVN url of all branches using single line command",
        "so_59892713: How to convert all merged remote git branches to tags? (create tags, delete branches)"
      ],
      "Top-3 Scripts": [
        "so_18899835: git log -1 --format=\"%at\" | xargs -I{} date -d @{} +%Y%m%d",
        "so_42711886: svn ls https://my.svn.net/svn/projectA/branches | xargs -I {} svn info \"{}\"\n\nsvn ls https://my.svn.net/svn/projectA/branches | \\\n    xargs -I {} svn info \"https://my.svn.net/svn/projectA/{}\"\n\nGNU xargs\n\nxargs -r -I {} svn info \"https://my.svn.net/svn/projectA/{}\"",
        "so_59892713: git branch --remotes --merged |\ngrep --invert-match --perl-regexp \"^  origin/(HEAD ->|master$)\" |\nsed \"s#^  origin/##g\" |\nxargs -I {} \\\ngit push origin origin/{}:refs/tags/merged/{}\n\nxargs -I"
      ],
      "Explanations about Options": {
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
        "-r": "If the standard input does not contain any nonblanks, do not run the command.\n Normally, the command is run once even if there is no input. This option is a GNU\n extension."
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go up to the parent of the current directory",
      "Most Similar TLDR Script": "cd ..",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10105996: Creating multiple git branches using a bashrc sh alias",
        "so_19293222: How to prevent remote branch deletion in git without using gitolite"
      ],
      "Top-3 Scripts": [
        "so_10105996: function branches {\n    cd folder1\n    git checkout -b $1\n    cd folder2\n    git checkout -b $1\n    cd folder3\n    git checkout -b $1\n    cd folder4\n    git checkout -b $1\n}\n\nfunction branches {\n    for folder in folder1 folder2 folder3 folder4 ; do\n        cd $folder\n        git checkout -b $1\n    done\n}",
        "so_19293222: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57170426: Get current branch and store as variable using bash",
        "so_40783422: Create local respository using git same as remote respository (Local git server same as remote)",
        "so_45828518: how to show remote branches of a specific remote"
      ],
      "Top-3 Scripts": [
        "so_57170426: alias IMLAZY='git branch |grep \\* | cut -d \" \" -f2'",
        "so_40783422: git branch -a | grep \"remotes/origin\" | egrep -v \"origin/(master|HEAD)$\" | \\\n   sed \"s:remotes/\\([^/]\\+/\\(.\\+\\)\\)$:git checkout -b \\2 \\1:\" | bash",
        "so_45828518: git branch --remote | grep rep2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_527551: How to access a git repository using SSH?",
        "so_41865387: how to install latest git using apt-get?"
      ],
      "Top-3 Scripts": [
        "au_527551: sudo apt-get install git",
        "so_41865387: sudo add-apt-repository ppa:git-core/ppa\nsudo apt-get update\nsudo apt-get install git"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3846380: How to iterate through all git branches using bash script",
        "so_55931638: split pipe separated string fetched using SQL"
      ],
      "Top-3 Scripts": [
        "so_3846380: set --\n\nset -- \"$@\" %(refname)",
        "so_55931638: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40783422: Create local respository using git same as remote respository (Local git server same as remote)",
        "so_57228842: git - how to get $(git_current_branch) variable from outside the git directory",
        "so_59892713: How to convert all merged remote git branches to tags? (create tags, delete branches)"
      ],
      "Top-3 Scripts": [
        "so_40783422: git branch -a | grep \"remotes/origin\" | egrep -v \"origin/(master|HEAD)$\" | \\\n   sed \"s:remotes/\\([^/]\\+/\\(.\\+\\)\\)$:git checkout -b \\2 \\1:\" | bash",
        "so_57228842: current_git_branch=$(git -C \"$1\" branch | sed  '/^\\*/!d;s/\\* //')",
        "so_59892713: git branch --remotes --merged |\ngrep --invert-match --perl-regexp \"^  origin/(HEAD ->|master$)\" |\nsed \"s#^  origin/##g\" |\nxargs -I {} \\\ngit push origin origin/{}:refs/tags/merged/{}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gitk",
      "MP Summary": "The Git repository browser",
      "Most Similar TLDR Task": "Show at most 100 changes in all branches",
      "Most Similar TLDR Script": "gitk --max-count={{100}} --all",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_7357624: How to get the removed branches in git"
      ],
      "Top-3 Scripts": [
        "so_7357624: gitk --all"
      ],
      "Explanations about Options": {
        "--all": "Show all refs (branches, tags, etc.)."
      }
    },
    {
      "Command": "alias",
      "MP Summary": "define or display aliases",
      "Most Similar TLDR Task": "View the command associated to a given alias",
      "Most Similar TLDR Script": "alias {{word}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57170426: Get current branch and store as variable using bash"
      ],
      "Top-3 Scripts": [
        "so_57170426: alias IMLAZY='git branch |grep \\* | cut -d \" \" -f2'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download a file, saving the output under the filename indicated by the URL",
      "Most Similar TLDR Script": "curl -O {{http://example.com/filename}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_49429092: Fetching and deleting a message over IMAP using cURL"
      ],
      "Top-3 Scripts": [
        "so_49429092: curl 'imaps://imap.example.com/inbox;UIDVALIDITY=6' ...\n\ncurl 'imaps://imap.example.com/inbox;uidvalidity=7' -X 'UID FETCH 7421 (ENVELOPE)'\n\ncurl 'imaps://imap.example.com/inbox;uidvalidity=7' -X 'UID STORE 7421 +Flags \\Deleted'"
      ],
      "Explanations about Options": {
        "-X": "(HTTP) Specifies a custom request method to use when communicating with the HTTP\n server. The specified request method will be used instead of the method otherwise\n used (which defaults to GET). Read the HTTP 1.1 specification for details and\n explanations. Common additional HTTP requests include PUT and DELETE, but related\n technologies like WebDAV offers PROPFIND, COPY, MOVE and more."
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42711886: Getting SVN url of all branches using single line command",
        "so_19337405: How to fetch certain filenames using grep?"
      ],
      "Top-3 Scripts": [
        "so_42711886: svn ls https://my.svn.net/svn/projectA/branches | xargs -I {} svn info \"{}\"\n\nsvn ls ..\n\nsvn ls https://my.svn.net/svn/projectA/branches | \\\n    xargs -I {} svn info \"https://my.svn.net/svn/projectA/{}\"",
        "so_19337405: ls -1 | grep \"^customer_[^r].*$\""
      ],
      "Explanations about Options": {
        "-1": "list one file per line. Avoid '\\n' with -q or -b"
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_7871573: How can I run the makefile on every git branch"
      ],
      "Top-3 Scripts": [
        "so_7871573: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Change permissions recursively giving [g]roup and [o]thers the ability to [w]rite",
      "Most Similar TLDR Script": "chmod -R g+w,o+w {{directory}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62191331: Automatically updating git repository using crontab",
        "so_19293222: How to prevent remote branch deletion in git without using gitolite"
      ],
      "Top-3 Scripts": [
        "so_62191331: chmod a+x autogit-project.sh",
        "so_19293222: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44201838: Make git commit using sudo"
      ],
      "Top-3 Scripts": [
        "so_44201838: -c <name>=<value>\n       Pass a configuration parameter to the command. The value given will override\n       values from configuration files. The <name> is expected in the same format as\n       listed by git config (subkeys separated by dots)."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Display a specific date (represented as a Unix timestamp) using the default format",
      "Most Similar TLDR Script": "date -d @1473305798",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_18899835: Convert git date using GNU date"
      ],
      "Top-3 Scripts": [
        "so_18899835: git log -1 --format=\"%at\" | xargs -I{} date -d @{} +%Y%m%d"
      ],
      "Explanations about Options": {
        "-d": "display time described by STRING, not 'now'"
      }
    },
    {
      "Command": "add-apt-repository",
      "MP Summary": "Adds   a   repository   into   the   /etc/apt/sources.list   or /etc/apt/sources.list.d or removes an existing one",
      "Most Similar TLDR Task": "Add a new apt repository",
      "Most Similar TLDR Script": "add-apt-repository {{repository_spec}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_41865387: how to install latest git using apt-get?"
      ],
      "Top-3 Scripts": [
        "so_41865387: sudo add-apt-repository ppa:git-core/ppa\nsudo apt-get update\nsudo apt-get install git"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_19337405: How to fetch certain filenames using grep?"
      ],
      "Top-3 Scripts": [
        "so_19337405: find . \\! -iname \"customer_rows*\""
      ],
      "Explanations about Options": {
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'."
      }
    },
    {
      "Command": "svn",
      "MP Summary": "Subversion command line client tool",
      "Most Similar TLDR Task": "Put files and directories under version control, scheduling them for addition to repository. They will be added in next commit",
      "Most Similar TLDR Script": "svn add {{PATH}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42711886: Getting SVN url of all branches using single line command"
      ],
      "Top-3 Scripts": [
        "so_42711886: svn ls https://my.svn.net/svn/projectA/branches | xargs -I {} svn info \"{}\"\n\nsvn info\n\nsvn ls ..\n\nsvn ls https://my.svn.net/svn/projectA/branches | \\\n    xargs -I {} svn info \"https://my.svn.net/svn/projectA/{}\"\n\nxargs -r -I {} svn info \"https://my.svn.net/svn/projectA/{}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command using the current environment variables",
      "Most Similar TLDR Script": "exec {{command -with -flags}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24787266: Unable to fetch the process information using shell script"
      ],
      "Top-3 Scripts": [
        "so_24787266: read PID < <(exec ps -o ppid= \"$ID\")\n\nwhile read -u 4 P; do\n    top -c -n 1 -p \"$P\" > /tmp/stat.log\ndone 4< <(exec pgrep -P \"$PID\")\n\nwhile read -u 4 P; do\n    top -c -n 1 -p \"$P\"\ndone 4< <(exec pgrep -P \"$PID\") > /tmp/stat.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Most Similar TLDR Task": "Test if given variable is empty",
      "Most Similar TLDR Script": "test -z $GIT_BRANCH",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_67675114: How can I dynamically add git reviewers using powershell script?"
      ],
      "Top-3 Scripts": [
        "so_67675114: # Command line actually used, as rebuilt by PowerShell behind the scenes. \ngit push \"--receive-pack=git receive-pack --reviewer=m.ks\" origin HEAD:refs/for/test"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Show the individual threads of a given process",
      "Most Similar TLDR Script": "top -Hp {{process_id}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24787266: Unable to fetch the process information using shell script"
      ],
      "Top-3 Scripts": [
        "so_24787266: while read -u 4 P; do\n    top -c -n 1 -p \"$P\" > /tmp/stat.log\ndone 4< <(exec pgrep -P \"$PID\")\n\nwhile read -u 4 P; do\n    top -c -n 1 -p \"$P\"\ndone 4< <(exec pgrep -P \"$PID\") > /tmp/stat.log"
      ],
      "Explanations about Options": {
        "-p": ":Monitor-PIDs mode as: -pN1 -pN2 ... or -pN1 , N2 , N3 ...\n Monitor only processes with specified process IDs. This option can be given up to 20\n times, or you can provide a comma delimited list with up to 20 pids. Co-mingling\n both approaches is permitted.",
        "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information.",
        "-n": ":Number-of-iterations limit as: -n number\n Specifies the maximum number of iterations, or frames, top should produce before\n ending."
      }
    },
    {
      "Command": "crontab",
      "MP Summary": "maintain crontab files for individual users (Vixie Cron)",
      "Most Similar TLDR Task": "Edit the crontab file for a specific user",
      "Most Similar TLDR Script": "sudo crontab -e -u {{user}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62191331: Automatically updating git repository using crontab"
      ],
      "Top-3 Scripts": [
        "so_62191331: crontab -l \nor \ncrontab -l -u $user_name"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Use a specific Makefile",
      "Most Similar TLDR Script": "make --file {{file}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_7871573: How can I run the makefile on every git branch"
      ],
      "Top-3 Scripts": [
        "so_7871573: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24787266: Unable to fetch the process information using shell script"
      ],
      "Top-3 Scripts": [
        "so_24787266: PID=$(ps -o ppid= \"$ID\")\n\nread PID < <(exec ps -o ppid= \"$ID\")\n\nPID=$(ps -o ppid= \"$ID\" | egrep -o '\\S+')\n\nshopt -s extglob\nPID=$(ps -o ppid= \"$ID\")\nPID=${PID##+([[:blank:]])}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "feedreader",
      "MP Summary": "modern rss reader application",
      "Most Similar TLDR Task": "Grab a specific article using its URL",
      "Most Similar TLDR Script": "feedreader --grabArticle={{article_url}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_8535: Grab a specific article using its URL"
      ],
      "Top-3 Scripts": [
        "tldr_8535: feedreader --grabArticle={{article_url}}"
      ],
      "Explanations about Options": {
        "--grabArticle": "use the ContentGrabber to grab the given URL"
      }
    },
    {
      "Command": "tsc",
      "MP Summary": "TypeScript compiler",
      "Most Similar TLDR Task": "Run the compiler using command line options and arguments fetched from a text file",
      "Most Similar TLDR Script": "tsc @{{args.txt}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_1580: Run the compiler using command line options and arguments fetched from a text file"
      ],
      "Top-3 Scripts": [
        "tldr_1580: tsc @{{args.txt}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Connect to a remote server with a specific identity (private key)",
      "Most Similar TLDR Script": "ssh -i {{path/to/key_file}} {{username}}@{{remote_host}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48472938: Git can't connect to remote using private ssh file"
      ],
      "Top-3 Scripts": [
        "so_48472938: ssh -Tv -i ~/Documents/keydir/key.pem ubuntu@myserver.com"
      ],
      "Explanations about Options": {
        "-T": "Disable pseudo-terminal allocation.",
        "-v": "Verbose mode. Causes ssh to print debugging messages about its progress. This is\n helpful in debugging connection, authentication, and configuration problems.\n Multiple -v options increase the verbosity. The maximum is 3."
      }
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture a specific window, given its ID as displayed by `xwininfo`, into the JPEG format",
      "Most Similar TLDR Script": "import -window {{window_id}} {{output.jpg}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_267898: Create a new repository/branch using bzrlib"
      ],
      "Top-3 Scripts": [
        "au_267898: from bzrlib import bzrdir\nbzrdir.BzrDir.create_branch_convenience('./foo')"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_24787266: Unable to fetch the process information using shell script"
      ],
      "Top-3 Scripts": [
        "so_24787266: while read -u 4 P; do\n    top -c -n 1 -p \"$P\" > /tmp/stat.log\ndone 4< <(exec pgrep -P \"$PID\")\n\nwhile read -u 4 P; do\n    top -c -n 1 -p \"$P\"\ndone 4< <(exec pgrep -P \"$PID\") > /tmp/stat.log"
      ],
      "Explanations about Options": {
        "-P": "Only match processes whose parent process ID is listed."
      }
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_55931638: split pipe separated string fetched using SQL",
        "so_7871573: How can I run the makefile on every git branch"
      ],
      "Top-3 Scripts": [
        "so_55931638: ",
        "so_7871573: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh-keygen",
      "MP Summary": "authentication key generation, management and conversion",
      "Most Similar TLDR Task": "Specify file in which to save the key",
      "Most Similar TLDR Script": "ssh-keygen -f ~/.ssh/{{filename}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_527551: How to access a git repository using SSH?"
      ],
      "Top-3 Scripts": [
        "au_527551: ssh-keygen -t rsa -b 4096"
      ],
      "Explanations about Options": {
        "-t": "Specifies the type of key to create. The possible values are \u201crsa1\u201d for protocol\n version 1 and \u201cdsa\u201d, \u201cecdsa\u201d, \u201ced25519\u201d, or \u201crsa\u201d for protocol version 2."
      }
    },
    {
      "Command": "reset",
      "MP Summary": "terminal initialization",
      "Most Similar TLDR Task": "Display the terminal type instead",
      "Most Similar TLDR Script": "reset -q",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_40842061: How to get all branches with someone\u2019s commits using git?",
        "so_7871573: How can I run the makefile on every git branch"
      ],
      "Top-3 Scripts": [
        "so_40842061: git checkout X\ngit reset --hard F\ngit checkout Y\ngit reset --hard D",
        "so_7871573: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
      "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69774201: force push to another remote branch using husky hook"
      ],
      "Top-3 Scripts": [
        "so_69774201: ln -s refs/heads/master HEAD"
      ],
      "Explanations about Options": {
        "-s": "make symbolic links instead of hard links"
      }
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3846380: How to iterate through all git branches using bash script"
      ],
      "Top-3 Scripts": [
        "so_3846380: branches=()\neval \"$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)\"\nfor branch in \"${branches[@]}\"; do\n    # \u2026\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28047181: How do I fetch this substring using awk?"
      ],
      "Top-3 Scripts": [
        "so_28047181: $ echo \"$k\" | awk -F _ '{for (i=0; i<=NF; i++) {print i\"=\"$i}}'\n0=CHECK_SOMETHING_CUSTOM_executable.acs\n1=CHECK\n2=SOMETHING\n3=CUSTOM\n4=executable.acs\n\necho \"$k\" | awk -F _ -v OFS=_ '{print $3,$4}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57170426: Get current branch and store as variable using bash"
      ],
      "Top-3 Scripts": [
        "so_57170426: alias IMLAZY='git branch |grep \\* | cut -d \" \" -f2'"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter"
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print different values based on conditions",
      "Most Similar TLDR Script": "awk '{if ($1 == \"foo\") print \"Exact match foo\"; else if ($1 ~ \"bar\") print \"Partial match bar\"; else print \"Baz\"}' {{filename}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_28047181: How do I fetch this substring using awk?"
      ],
      "Top-3 Scripts": [
        "so_28047181: awk -F '_'\n\n$ echo \"$k\" | awk -F _ '{for (i=0; i<=NF; i++) {print i\"=\"$i}}'\n0=CHECK_SOMETHING_CUSTOM_executable.acs\n1=CHECK\n2=SOMETHING\n3=CUSTOM\n4=executable.acs\n\necho \"$k\" | awk -F _ -v OFS=_ '{print $3,$4}'"
      ],
      "Explanations about Options": {
        "-v": "FS=sepstring"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_58298291: how do I get the correct latest release branch name using shell sort?"
      ],
      "Top-3 Scripts": [
        "so_58298291: sort --version-sort\n\nsort -V"
      ],
      "Explanations about Options": {
        "-V": "natural sort of (version) numbers within text"
      }
    },
    {
      "Command": "info",
      "MP Summary": "read Info documents",
      "Most Similar TLDR Task": "Start reading at given menu item node from top-level directory",
      "Most Similar TLDR Script": "info {{menu_item}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42711886: Getting SVN url of all branches using single line command"
      ],
      "Top-3 Scripts": [
        "so_42711886: svn ls https://my.svn.net/svn/projectA/branches | xargs -I {} svn info \"{}\"\n\nsvn info\n\nsvn ls https://my.svn.net/svn/projectA/branches | \\\n    xargs -I {} svn info \"https://my.svn.net/svn/projectA/{}\"\n\nxargs -r -I {} svn info \"https://my.svn.net/svn/projectA/{}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the location of a manpage rather than the manpage itself",
      "Most Similar TLDR Script": "man -w {{command}}",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42711886: Getting SVN url of all branches using single line command"
      ],
      "Top-3 Scripts": [
        "so_42711886: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "true",
      "MP Summary": "do nothing, successfully",
      "Most Similar TLDR Task": "Return a successful exit code",
      "Most Similar TLDR Script": "true",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69774201: force push to another remote branch using husky hook"
      ],
      "Top-3 Scripts": [
        "so_69774201: detached=false unborn=false\nbranch=$(git symbolic-ref --short HEAD 2>/dev/null) || detached=true\nif ! $detached; then\n    git rev-parse -q --verify HEAD >/dev/null || unborn=true\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69774201: force push to another remote branch using husky hook"
      ],
      "Top-3 Scripts": [
        "so_69774201: detached=false unborn=false\nbranch=$(git symbolic-ref --short HEAD 2>/dev/null) || detached=true\nif ! $detached; then\n    git rev-parse -q --verify HEAD >/dev/null || unborn=true\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "branch",
      "MP Summary": "handle a family of fields (rheolef-7.1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_57170426: Get current branch and store as variable using bash",
        "so_3846380: How to iterate through all git branches using bash script",
        "so_40842061: How to get all branches with someone\u2019s commits using git?"
      ],
      "Top-3 Scripts": [
        "so_57170426: alias IMLAZY='git branch |grep \\* | cut -d \" \" -f2'",
        "so_3846380: for branch in $(git for-each-ref --format='%(refname)' refs/heads/); do\n    git log --oneline \"$branch\" ^origin/master\ndone\n\nbranches=()\neval \"$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)\"\nfor branch in \"${branches[@]}\"; do\n    # \u2026\ndone",
        "so_40842061: +-- branch X\n               v\nA -- B -- C -- D \n       \\\n        - E -- F\n               ^\n               +-- branch Y\n\n+-- branch Y\n               v\nA -- B -- C -- D \n       \\\n        - E -- F\n               ^\n               +-- branch X"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "folder",
      "MP Summary": "set/list current folder/message",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10105996: Creating multiple git branches using a bashrc sh alias"
      ],
      "Top-3 Scripts": [
        "so_10105996: function branches {\n    for folder in folder1 folder2 folder3 folder4 ; do\n        cd $folder\n        git checkout -b $1\n    done\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "master",
      "MP Summary": "Postfix master process",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "prints the name of the current git branch",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "git status | head -1 | cut -d ' ' -f 3\n",
          "command-options": {
            "git": {
              "mpsum": "the stupid content tracker"
            },
            "head": {
              "mpsum": "output the first part of files"
            },
            "cut": {
              "mpsum": "remove sections from each line of files",
              "-d": "use DELIM instead of TAB for field delimiter",
              "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            }
          },
          "TLDR_inform": {
            "git": {
              "man1_git_12328": "distribut version control system check git version execut git subcommand execut git subcommand custom repositori root path execut git subcommand given configur set show gener help show help git subcommand like commit log etc"
            },
            "head": {
              "man1_head_14119": "output first part file output everyth last byte file output everyth last line file output first byte file output first line file"
            },
            "cut": {
              "man1_cut_5505": "cut field stdin file cut everyth 3rd charact end line cut 2nd 10th field line use semicolon delimit cut field 3 end line use space delimit cut fifth field line use colon field delimit default delimit tab cut first sixteen charact line stdin cut first sixteen charact line given file"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3846380: How to iterate through all git branches using bash script",
        "so_48472938: Git can't connect to remote using private ssh file",
        "so_40783422: Create local respository using git same as remote respository (Local git server same as remote)"
      ],
      "Top-3 Scripts": [
        "so_3846380: origin/master\n\nrefs/remotes/origin/master\n\ngit log --oneline 'refs/heads/master' ^origin/master\ngit log --oneline 'refs/heads/other' ^origin/master\ngit log --oneline 'refs/heads/pu' ^origin/master\n\nfor branch in $(git for-each-ref --format='%(refname)' refs/heads/); do\n    git log --oneline \"$branch\" ^origin/master\ndone",
        "so_48472938: git push -u origin master",
        "so_40783422: $ git branch\n* master\n\n$ git branch -a\n* master\n  remotes/origin/HEAD\n  remotes/origin/master\n  remotes/origin/other_branch\n  remotes/origin/branch_two\n\n$ git branch\n master\n* other_branch\n\ngit branch -a | grep \"remotes/origin\" | egrep -v \"origin/(master|HEAD)$\" | \\\n   sed \"s:remotes/\\([^/]\\+/\\(.\\+\\)\\)$:git checkout -b \\2 \\1:\" | bash"
      ],
      "Explanations about Options": {}
    }
  ]
}