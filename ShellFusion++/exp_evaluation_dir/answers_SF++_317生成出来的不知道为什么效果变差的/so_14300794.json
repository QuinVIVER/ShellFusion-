{
  "Query": "How do I download a file from the internet to my linux server with Bash",
  "Answers": [
    {
      "Command": "scp",
      "MP Summary": "secure copy (remote file copy program)",
      "Most Similar TLDR Task": "Copy a file between two remote hosts transferring through the local host",
      "Most Similar TLDR Script": "scp -3 {{host1}}:{{path/to/remote_file}} {{host2}}:{{path/to/remote_directory}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1478867: How to copy a file from a local machine to a linux server using bash",
        "so_33587157: Using SCP command to download files from Linux server to client server",
        "so_21621968: Download a file from a Server with double ssh"
      ],
      "Top-3 Scripts": [
        "su_1478867: scp myfile.txt myserveruseraccount@myserver.example.com:/path/on/server/",
        "so_33587157: scp data.txt $USER@${SSH_CONNECTION%% *}:",
        "so_21621968: scp -r -i path-to-secret-key ubuntu@ec2-address:/home/ubuntu/app-folder-location /home/user/local-mc-location\n\nscp -r ubuntu@ec2-address:/home/ubuntu/app-folder-location /home/user/local-mc-location"
      ],
      "Explanations about Options": {
        "-r": "Recursively copy entire directories. Note that scp follows symbolic links\n encountered in the tree traversal."
      }
    },
    {
      "Command": "ftp",
      "MP Summary": "Internet file transfer program",
      "Most Similar TLDR Task": "Delete multiple files on the remote server",
      "Most Similar TLDR Script": "mdelete {{*.txt}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_891479: Download multiple files from ftp server with bash script",
        "au_1196809: delete files from FTP servers with linux terminal"
      ],
      "Top-3 Scripts": [
        "su_891479: ftp -in ftp://user:pw@ftp.srv1.de << EOF\n    binary\n    cd Datenbankbackup\n    mget *\nEOF",
        "au_1196809: ftp -i"
      ],
      "Explanations about Options": {
        "-i": "Turns off interactive prompting during multiple file transfers.",
        "-n": "Restrains ftp from attempting \u201cauto-login\u201d upon initial connection. If auto-login is\n enabled, ftp will check the .netrc (see netrc(5)) file in the user's home directory\n for an entry describing an account on the remote machine. If no entry exists, ftp\n will prompt for the remote machine login name (default is the user identity on the\n local machine), and, if necessary, prompt for a password and an account with which to\n login."
      }
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download the contents of an URL to a file",
      "Most Similar TLDR Script": "curl {{http://example.com}} -o {{filename}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69816743: Download multiple files simultaneously with variable in URL with Curl",
        "so_58684175: Download latest file from remote server using curl",
        "so_53134352: How to download images from Google with terminal? (Mac)"
      ],
      "Top-3 Scripts": [
        "so_69816743: curl 'https://website.com/shop.php?store_id=[4-80]&page=[1-200]&PHPSESSID=sessionID' -O --parallel --parallel-max 100",
        "so_58684175: P=https://website.com/remote/path\ncurl .. \"$P/\" > listing.txt\nLATEST=$(sed -ne '/href=/{s@.*href=\".*/\\([0-9]\\+_[^\"]\\+\\).*@\\1@p}' < listing.txt | sort -nr | head -1)\ncurl ... \"$P/$LATEST\"",
        "so_53134352: curl -O https://i.imgur.com/PmPGYHR.png\n\ncurl https://imgur.com/gallery/yu5An |grep \"link rel=\\\"image_src\" |cut -d'\"' -f4"
      ],
      "Explanations about Options": {
        "--parallel-max": "When asked to do parallel transfers, using -Z, --parallel, this option controls the\n maximum amount of transfers to do simultaneously.",
        "-O": "Write output to a local file named like the remote file we get. (Only the file part\n of the remote file is used, the path is cut off.)",
        "--parallel": "Makes curl perform its transfers in parallel as compared to the regular serial\n manner."
      }
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Run a command on a remote server",
      "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68230707: Downloading a File from SSH with Sudo",
        "au_76239: Downloading a file from a remove server",
        "so_24855407: Sending file by reference to a remote server?"
      ],
      "Top-3 Scripts": [
        "so_68230707: $ CONTENT=$(expect -c 'spawn ssh -t user@localhost \"sudo cat /tmp/file.txt\"; expect \"password\"; send \"userpassword\\r\"; expect \"password\"; send \"userpassword\\r\"; interact' | sed -n '4p')\n\n$ CONTENT=$(expect -c \n       'spawn ssh -t user@localhost \"sudo cat /tmp/deneme.txt\";\n        expect \"password\"; send \"userpassword\\r\";       #for first prompt of remote connection.\n        expect \"password\"; send \"userpassword\\r\";       #for second prompt of sudo.\n        interact' | sed -n '4p')                        #4th line displayed in the terminal is the file content.\n\n$ expect -c 'spawn ssh -t user@localhost \"sudo cat /tmp/file.txt\"; expect \"password\"; send \"userpassword\\r\"; expect \"password\"; send \"userpassword\\r\"; interact'\nspawn ssh -t user@localhost sudo cat /tmp/file.txt\nuser@localhost's password: \n[sudo] password for user: \nlorem ipsum dolor sit amet\nConnection to localhost closed.",
        "au_76239: rsync -rP -e ssh username@serveraddress:\"directory/file\" /destinationfolder/\n\ne ssh",
        "so_24855407: while read p; do\n    ssh $p \"get_last_entry_of_directory\" >> sample_file.txt\ndone < usernames_list.txt"
      ],
      "Explanations about Options": {
        "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty."
      }
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68230707: Downloading a File from SSH with Sudo",
        "au_705045: Use internet connection from one server in second server",
        "au_704480: Can't connect to wifi with static IP on Ubuntu server"
      ],
      "Top-3 Scripts": [
        "so_68230707: $ expect -c 'spawn ssh -t user@localhost \"sudo cat /tmp/file.txt\"; expect \"password\"; send \"userpassword\\r\"; expect \"password\"; send \"userpassword\\r\"; interact'\nspawn ssh -t user@localhost sudo cat /tmp/file.txt\nuser@localhost's password: \n[sudo] password for user: \nlorem ipsum dolor sit amet\nConnection to localhost closed.",
        "au_705045: sudo iptables -A FORWARD -o em1 -i em2 -s 192.168.2.0/24 -m conntrack --ctstate NEW -j ACCEPT\nsudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT   \nsudo iptables -t nat -F POSTROUTING    \nsudo iptables -t nat -A POSTROUTING -o em1 -j MASQUERADE\n\nsudo iptables-save | sudo tee /etc/iptables.sav\n\nsudo sh -c \"echo 1 > /proc/sys/net/ipv4/ip_forward\"\n\nsudo /etc/init.d/networking stop\n\nsudo /etc/init.d/networking restart",
        "au_704480: sudo ifdown wlo1 && sudo ifup wlo1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "smbclient",
      "MP Summary": "ftp-like client to access SMB/CIFS resources on servers",
      "Most Similar TLDR Task": "Download a file from the server",
      "Most Similar TLDR Script": "smbclient {{//server/share}} --directory {{path/to/directory}} --command \"get {{file.txt}}\"",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56154775: Script to copy log files from linux server to windows shared server",
        "tldr_8709: Download a file from the server"
      ],
      "Top-3 Scripts": [
        "so_56154775: smbclient //192.168.77.199/sharedFolder -U user --pass password -D \"folder\" -c \"put $FILE1\"\n\nsmbclient  -L \\\\192.168.77.199 -U user",
        "tldr_8709: smbclient {{//server/share}} --directory {{path/to/directory}} --command \"get {{file.txt}}\""
      ],
      "Explanations about Options": {
        "-L": "This option allows you to look at what services are available on a server. You use it\n as smbclient -L host and a list should appear. The -I option may be useful if your\n NetBIOS names don't match your TCP/IP DNS host names or if you are trying to reach a\n host on another network.",
        "-U": "Sets the SMB username or username and password."
      }
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_891479: Download multiple files from ftp server with bash script",
        "so_13940610: transfer files!!! from a unix server to a linux server",
        "au_1196809: delete files from FTP servers with linux terminal"
      ],
      "Top-3 Scripts": [
        "su_891479: ftp -in ftp://user:pw@ftp.srv1.de << EOF\n    binary\n    cd Datenbankbackup\n    mget *\nEOF",
        "so_13940610: cd /usr/local/scripts/scripts\n cp -r * ../.\n //Check to make sure it looks good\n rm -r /usr/local/scripts/scripts",
        "au_1196809: cd <folder_name>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1515364: Copy a file from windows server to a linux server",
        "so_68230707: Downloading a File from SSH with Sudo",
        "au_345935: Do some files downloaded from the internet have execute permission by default?"
      ],
      "Top-3 Scripts": [
        "su_1515364: scp -i /path/to/key/file Filepathinwindows username@ubuntuserverip:linuxserverpath",
        "so_68230707: $ CONTENT=$(expect -c \n       'spawn ssh -t user@localhost \"sudo cat /tmp/deneme.txt\";\n        expect \"password\"; send \"userpassword\\r\";       #for first prompt of remote connection.\n        expect \"password\"; send \"userpassword\\r\";       #for second prompt of sudo.\n        interact' | sed -n '4p')                        #4th line displayed in the terminal is the file content.",
        "au_345935: mask - umask = file permissions\n0666 - 0022  = 0644"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69615186: Move downloaded files from sftp to custom path in s3 bucket",
        "au_665055: Stop internet service provider website from loading automatically every time I connect to internet for the first time"
      ],
      "Top-3 Scripts": [
        "so_69615186: ",
        "au_665055: find / -newermt <1 day before dongle> ! -newermt <1 day after dongle>\n\nfind / -newermt \"2014-12-20\" ! -newermt \"2014-12-22\""
      ],
      "Explanations about Options": {
        "-n": "for less than n ,"
      }
    },
    {
      "Command": "nginx",
      "MP Summary": "HTTP and reverse proxy server, mail proxy server",
      "Most Similar TLDR Task": "Start server with the default config file",
      "Most Similar TLDR Script": "nginx",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1166827: log files with .log extension is getting downloaded instead of opening in the browser with nginx server"
      ],
      "Top-3 Scripts": [
        "au_1166827: /etc/nginx/nginx.conf\n\nservice nginx reload"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_720565: rsync to download (in one way) files from one server to another",
        "so_13940610: transfer files!!! from a unix server to a linux server"
      ],
      "Top-3 Scripts": [
        "au_720565: #!/bin/sh\nrsync -acz /folder_to_copy username@serverB:/path/to/store\nrm -rf /folder_to_remove",
        "so_13940610: cd /usr/local/scripts/scripts\n cp -r * ../.\n //Check to make sure it looks good\n rm -r /usr/local/scripts/scripts"
      ],
      "Explanations about Options": {
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file, logging all commands executed to the terminal",
      "Most Similar TLDR Script": "bash -x {{file.sh}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_1478867: How to copy a file from a local machine to a linux server using bash"
      ],
      "Top-3 Scripts": [
        "su_1478867: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "aria2c",
      "MP Summary": "The ultra fast download utility",
      "Most Similar TLDR Task": "Download with multiple connections",
      "Most Similar TLDR Script": "aria2c -s {{connections_num}} {{url}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_679813: Download manager with browser integration in chrome"
      ],
      "Top-3 Scripts": [
        "au_679813: aria2c \"https://upload.wikimedia.org/wikipedia/commons/a/a3/Philaethria_hecale_2_Richard_Bartz.jpg\"\n\naria2c -x8 \"https://upload.wikimedia.org/wikipedia/commons/a/a3/Philaethria_hecale_2_Richard_Bartz.jpg\"\n\ncd ~/Downloads\naria2c -x8 \"https://upload.wikimedia.org/wikipedia/commons/a/a3/Philaethria_hecale_2_Richard_Bartz.jpg\"\n\nman aria2c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Ping host",
      "Most Similar TLDR Script": "ping {{host}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_704480: Can't connect to wifi with static IP on Ubuntu server"
      ],
      "Top-3 Scripts": [
        "au_704480: ping -c3 10.1.1.1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer file from local to remote host",
      "Most Similar TLDR Script": "rsync {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_720565: rsync to download (in one way) files from one server to another",
        "au_76239: Downloading a file from a remove server"
      ],
      "Top-3 Scripts": [
        "au_720565: #!/bin/sh\nrsync -acz /folder_to_copy username@serverB:/path/to/store\nrm -rf /folder_to_remove",
        "au_76239: rsync -rP -e ssh username@serveraddress:\"directory/file\" /destinationfolder/"
      ],
      "Explanations about Options": {
        "-z": "With this option, rsync compresses the file data as it is sent to the destination\n machine, which reduces the amount of data being transmitted - something that is\n useful over a slow connection.",
        "-a": "This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and\n want to preserve almost everything (with -H being a notable omission). The only\n exception to the above equivalence is when --files-from is specified, in which case\n -r is not implied.",
        "-P": "The -P option is equivalent to --partial --progress. Its purpose is to make it\n much easier to specify these two options for a long transfer that may be\n interrupted.",
        "-e": "This option allows you to choose an alternative remote shell program to use for\n communication between the local and remote copies of rsync. Typically, rsync is\n configured to use ssh by default, but you may prefer to use rsh on a local network.",
        "-r": "This tells rsync to copy directories recursively. See also --dirs (-d)."
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
      "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_817361: Is it possible to get the download file name of an mp3 from server using bash?",
        "so_53134352: How to download images from Google with terminal? (Mac)",
        "so_35786393: How can I download using a bash script from a CSV file with URLs?"
      ],
      "Top-3 Scripts": [
        "su_817361: echo -e \"GET /track/haunt_opaque/mixdown.mp3 HTTP/1.1\\nHost: api.audiotool.com\\n\\n\" | nc -q 3 api.audiotool.com 80 | head -n 20 | grep -a \"^Content-Disposition:\" | cut -d = -f 2",
        "so_53134352: curl https://imgur.com/gallery/yu5An |grep \"link rel=\\\"image_src\" |cut -d'\"' -f4",
        "so_35786393: cut -d, -f1 testfile.csv | xargs wget --user=NEXUSER --password=\"\""
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_69615186: Move downloaded files from sftp to custom path in s3 bucket",
        "au_345935: Do some files downloaded from the internet have execute permission by default?",
        "so_24855407: Sending file by reference to a remote server?"
      ],
      "Top-3 Scripts": [
        "so_69615186: ",
        "au_345935: 0644\n^^^^\n||||\n|||\\_ others permissions, in this case only read\n|| \\__ groups permissions, in this case only read\n| \\___ user permissions, in this case read and write\n \\__ special byte",
        "so_24855407: while read p; do\n    ssh $p \"get_last_entry_of_directory\" >> sample_file.txt\ndone < usernames_list.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nc",
      "MP Summary": "arbitrary TCP and UDP connections and listens",
      "Most Similar TLDR Task": "Scan the open ports of a specified host",
      "Most Similar TLDR Script": "nc -v -z {{ip_address}} {{port}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_817361: Is it possible to get the download file name of an mp3 from server using bash?"
      ],
      "Top-3 Scripts": [
        "su_817361: echo -e \"GET /track/haunt_opaque/mixdown.mp3 HTTP/1.1\\nHost: api.audiotool.com\\n\\n\" | nc -q 3 api.audiotool.com 80 | head -n 20 | grep -a \"^Content-Disposition:\" | cut -d = -f 2"
      ],
      "Explanations about Options": {
        "-q": "after EOF on stdin, wait the specified number of seconds and then quit. If seconds\n is negative, wait forever (default). Specifying a non-negative seconds implies -N."
      }
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56703852: File download of an authenticated Django Apps from a Linux core server in Python"
      ],
      "Top-3 Scripts": [
        "so_56703852: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13940610: transfer files!!! from a unix server to a linux server"
      ],
      "Top-3 Scripts": [
        "so_13940610: cd /usr/local/scripts/scripts\n cp -r * ../.\n //Check to make sure it looks good\n rm -r /usr/local/scripts/scripts"
      ],
      "Explanations about Options": {
        "-r": "copy directories recursively"
      }
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add/Delete an ip address to an interface",
      "Most Similar TLDR Script": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_9939: iptables rule for local network with free internet blocking unrequested connection from internet to server?"
      ],
      "Top-3 Scripts": [
        "ul_9939: ip route show | grep default\n\nip route add default vie <IP_of_eth1's_gateway> dev eth1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "login",
      "MP Summary": "begin session on the system",
      "Most Similar TLDR Task": "Login as a user on a remote host",
      "Most Similar TLDR Script": "login -h {{host}} {{user}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56703852: File download of an authenticated Django Apps from a Linux core server in Python"
      ],
      "Top-3 Scripts": [
        "so_56703852: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "stat",
      "MP Summary": "display file or file system status",
      "Most Similar TLDR Task": "Show file properties such as size, permissions, creation and access dates among others",
      "Most Similar TLDR Script": "stat {{file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56703852: File download of an authenticated Django Apps from a Linux core server in Python"
      ],
      "Top-3 Scripts": [
        "so_56703852: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded",
      "Most Similar TLDR Script": "apt-get autoclean",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_679813: Download manager with browser integration in chrome"
      ],
      "Top-3 Scripts": [
        "au_679813: sudo apt-get update\nsudo apt-get install aria2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "script",
      "MP Summary": "make typescript of terminal session",
      "Most Similar TLDR Task": "Record a new session to a file named `typescript` in the current directory",
      "Most Similar TLDR Script": "script",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_720565: rsync to download (in one way) files from one server to another"
      ],
      "Top-3 Scripts": [
        "au_720565: chmod u+x /path/to/script/with/name.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files and apply access/modification times of source to destination",
      "Most Similar TLDR Script": "install -p {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_679813: Download manager with browser integration in chrome"
      ],
      "Top-3 Scripts": [
        "au_679813: sudo apt-get update\nsudo apt-get install aria2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send a message to a given user on a given terminal id",
      "Most Similar TLDR Script": "write {{username}} {{terminal_id}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_345935: Do some files downloaded from the internet have execute permission by default?"
      ],
      "Top-3 Scripts": [
        "au_345935: 0644\n^^^^\n||||\n|||\\_ others permissions, in this case only read\n|| \\__ groups permissions, in this case only read\n| \\___ user permissions, in this case read and write\n \\__ special byte"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "link",
      "MP Summary": "call the link function to create a link to a file",
      "Most Similar TLDR Task": "Create a hard link from a new file to an existing file",
      "Most Similar TLDR Script": "link {{path/to/existing_file}} {{path/to/new_file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_952243: How can I change the default download directory of downthemall from /root/Downloads/ to /home/user/Downloads/?"
      ],
      "Top-3 Scripts": [
        "au_952243: save link with DownThemAll"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "host",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68230707: Downloading a File from SSH with Sudo"
      ],
      "Top-3 Scripts": [
        "so_68230707: local host\n\nremote host"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "route",
      "MP Summary": "show / manipulate the IP routing table",
      "Most Similar TLDR Task": "Add route rule",
      "Most Similar TLDR Script": "sudo route add -net {{ip_address}} netmask {{netmask_address}} gw {{gw_address}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_9939: iptables rule for local network with free internet blocking unrequested connection from internet to server?"
      ],
      "Top-3 Scripts": [
        "ul_9939: ip route show | grep default\n\nip route add default vie <IP_of_eth1's_gateway> dev eth1"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "Start/Stop/Restart/Reload service (start/stop should always be available)",
      "Most Similar TLDR Script": "service {{service_name}} {{start|stop|restart|reload}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1166827: log files with .log extension is getting downloaded instead of opening in the browser with nginx server"
      ],
      "Top-3 Scripts": [
        "au_1166827: service nginx reload"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command and login using the default shell",
      "Most Similar TLDR Script": "exec -l {{command -with -flags}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_562225: Expect script to download newest file from remote server with grep"
      ],
      "Top-3 Scripts": [
        "ul_562225: exec od -c <<$expect_out(buffer)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56703852: File download of an authenticated Django Apps from a Linux core server in Python"
      ],
      "Top-3 Scripts": [
        "so_56703852: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Force making of a target, even if source files are unchanged",
      "Most Similar TLDR Script": "make --always-make {{target}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_13940610: transfer files!!! from a unix server to a linux server"
      ],
      "Top-3 Scripts": [
        "so_13940610: cd /usr/local/scripts/scripts\n cp -r * ../.\n //Check to make sure it looks good\n rm -r /usr/local/scripts/scripts"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Parallel runs of up to `max-procs` processes at a time; the default is 1. If `max-procs` is 0, xargs will run as many processes as possible at a time",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -P {{max-procs}} {{command}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_35786393: How can I download using a bash script from a CSV file with URLs?"
      ],
      "Top-3 Scripts": [
        "so_35786393: cut -d, -f1 testfile.csv | xargs wget --user=NEXUSER --password=\"\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a hard link to a file",
      "Most Similar TLDR Script": "ln {{path/to/file}} {{path/to/hardlink}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_51078528: Linking files downloaded in a loop, to an identifier in a text list with a bash loop"
      ],
      "Top-3 Scripts": [
        "so_51078528: for i in $(<idpandas.txt)\ndo\n    echo $i\n    ncbi-genome-download --format protein-fasta --species-taxid $i archaea,bacteria\n    ln -s $DOWNLOAD_NAME $i\ndone"
      ],
      "Explanations about Options": {
        "-s": "make symbolic links instead of hard links"
      }
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "sh {{file.sh}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_705045: Use internet connection from one server in second server"
      ],
      "Top-3 Scripts": [
        "au_705045: sudo sh -c \"echo 1 > /proc/sys/net/ipv4/ip_forward\""
      ],
      "Explanations about Options": {
        "-c": "Impose a size limit of n blocks on the size of core dumps."
      }
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Print standard input to the terminal, and also pipe it into another program for further processing",
      "Most Similar TLDR Script": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_705045: Use internet connection from one server in second server"
      ],
      "Top-3 Scripts": [
        "au_705045: sudo iptables-save | sudo tee /etc/iptables.sav"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56703852: File download of an authenticated Django Apps from a Linux core server in Python"
      ],
      "Top-3 Scripts": [
        "so_56703852: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "chmod",
      "MP Summary": "change file mode bits",
      "Most Similar TLDR Task": "Give [a]ll users rights to [r]ead and e[x]ecute",
      "Most Similar TLDR Script": "chmod a+rx {{file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_720565: rsync to download (in one way) files from one server to another"
      ],
      "Top-3 Scripts": [
        "au_720565: chmod u+x /path/to/script/with/name.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rmdir",
      "MP Summary": "remove empty directories",
      "Most Similar TLDR Task": "Remove the target and its parent directories (useful for nested dirs)",
      "Most Similar TLDR Script": "rmdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1196809: delete files from FTP servers with linux terminal"
      ],
      "Top-3 Scripts": [
        "au_1196809: rmdir -r <folder_name>\n\nrmdir folder_name"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Execute the ls program literally, even if an ls alias exists",
      "Most Similar TLDR Script": "command {{ls}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15650388: Trying to download a file to a directory on a remote server"
      ],
      "Top-3 Scripts": [
        "so_15650388: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_68230707: Downloading a File from SSH with Sudo"
      ],
      "Top-3 Scripts": [
        "so_68230707: $ cat file.txt\nlorem ipsum dolor sit amet\n\n$ CONTENT=$(expect -c 'spawn ssh -t user@localhost \"sudo cat /tmp/file.txt\"; expect \"password\"; send \"userpassword\\r\"; expect \"password\"; send \"userpassword\\r\"; interact' | sed -n '4p')\n\n$ CONTENT=$(expect -c \n       'spawn ssh -t user@localhost \"sudo cat /tmp/deneme.txt\";\n        expect \"password\"; send \"userpassword\\r\";       #for first prompt of remote connection.\n        expect \"password\"; send \"userpassword\\r\";       #for second prompt of sudo.\n        interact' | sed -n '4p')                        #4th line displayed in the terminal is the file content.\n\n$ expect -c 'spawn ssh -t user@localhost \"sudo cat /tmp/file.txt\"; expect \"password\"; send \"userpassword\\r\"; expect \"password\"; send \"userpassword\\r\"; interact'\nspawn ssh -t user@localhost sudo cat /tmp/file.txt\nuser@localhost's password: \n[sudo] password for user: \nlorem ipsum dolor sit amet\nConnection to localhost closed."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_679813: Download manager with browser integration in chrome"
      ],
      "Top-3 Scripts": [
        "au_679813: man aria2c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "List all running processes including the full command string",
      "Most Similar TLDR Script": "ps auxww",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_665055: Stop internet service provider website from loading automatically every time I connect to internet for the first time"
      ],
      "Top-3 Scripts": [
        "au_665055: ps -ewfH"
      ],
      "Explanations about Options": {
        "-e": "Select all processes. Identical to -A.",
        "-w": "Wide output. Use this option twice for unlimited width.",
        "-f": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm.",
        "-H": "Show process hierarchy (forest)."
      }
    },
    {
      "Command": "batch",
      "MP Summary": "queue, examine, or delete jobs for later execution",
      "Most Similar TLDR Task": "Execute commands from a given file",
      "Most Similar TLDR Script": "batch -f {{path/to/file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_56677389: Download most recent file of specific file name pattern from SFTP server using WinSCP in PowerShell"
      ],
      "Top-3 Scripts": [
        "so_56677389: option batch abort\noption confirm off\nopen sftp://..........\nget -latest /outbound/test/FileName_A_* \\\\sharedrive\\\nexit"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "groups",
      "MP Summary": "print the groups a user is in",
      "Most Similar TLDR Task": "Print group memberships for a specific user",
      "Most Similar TLDR Script": "groups {{username}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_345935: Do some files downloaded from the internet have execute permission by default?"
      ],
      "Top-3 Scripts": [
        "au_345935: 0644\n^^^^\n||||\n|||\\_ others permissions, in this case only read\n|| \\__ groups permissions, in this case only read\n| \\___ user permissions, in this case read and write\n \\__ special byte"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "umask",
      "MP Summary": "get or set the file mode creation mask",
      "Most Similar TLDR Task": "Set the mask (using octal) to restrict no permissions for the file's owner, and restrict all permissions for everyone else",
      "Most Similar TLDR Script": "umask {{077}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_345935: Do some files downloaded from the internet have execute permission by default?"
      ],
      "Top-3 Scripts": [
        "au_345935: mask - umask = file permissions\n0666 - 0022  = 0644"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "od",
      "MP Summary": "dump files in octal and other formats",
      "Most Similar TLDR Task": "Display file in verbose mode, i.e. without replacing duplicate lines with `*`",
      "Most Similar TLDR Script": "od -v {{path/to/file}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_562225: Expect script to download newest file from remote server with grep"
      ],
      "Top-3 Scripts": [
        "ul_562225: exec od -c <<$expect_out(buffer)"
      ],
      "Explanations about Options": {
        "-c": "same as -t c , select printable characters or backslash escapes"
      }
    },
    {
      "Command": "htpdate",
      "MP Summary": "Time synchronization (daemon)",
      "Most Similar TLDR Task": "Set time immediate after the syncronization",
      "Most Similar TLDR Script": "sudo htpdate -s {{host}}",
      "Most Similar NL2Bash Task": "download contents from  \"http://url\" using a proxy server",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url\n",
          "command-options": {
            "curl": {
              "mpsum": "transfer a URL",
              "-x": "Use the specified proxy.",
              "--proxy-user": "Specify the user name and password to use for proxy authentication."
            }
          },
          "TLDR_inform": {
            "curl": {
              "man1_curl_5489": "transfer data server\nsupport protocol includ http ftp pop3 download file follow l ocat redirect automat c ontinu resum previou file transfer download file save output filenam indic url download content url file pass user name password server authent pass client certif key resourc skip certif valid send request extra header use custom http method send data json format specifi appropri content-typ header send form-encod data post request type applic x-www-form-urlencod\nuse -d file_nam -d - read stdin"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_42171601: How to use SSH tunnel in ansible to provide internet access to a server"
      ],
      "Top-3 Scripts": [
        "so_42171601: - hosts: remote-host\n  environment:\n    http_proxy: http://localhost:3128\n  tasks:\n    - command: htpdate -da -l -P localhost:3128 3.in.pool.ntp.org 1.asia.pool.ntp.org 3.asia.pool.ntp.org"
      ],
      "Explanations about Options": {
        "-d": "Turn debug on. Shows the \"raw\" timestamp , round trip time , time delta and and basic\n statistics of web server responses. Useful to determining the quality of a specific\n web server as time source.",
        "-l": "Use syslog for output (levels LOG_WARNING and LOG_INFO). Convenient if you use\n htpdate from cron.",
        "-a": "Adjust time smoothly (default in daemon mode).",
        "-P": "Proxy server hostname or ip-address."
      }
    }
  ]
}