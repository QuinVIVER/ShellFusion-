{
  "Query": "Linux command for extracting war file?",
  "Answers": [
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "Extract zip file(s) (for multiple files, separate file paths by spaces)",
      "Most Similar TLDR Script": "unzip {{file(s)}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_84093: How to read a .war file?",
        "tldr_326: Extract zip file(s) (for multiple files, separate file paths by spaces)",
        "ul_4367: Extracting nested zip files"
      ],
      "Top-3 Scripts": [
        "ul_84093: jar -xvf Sample.war\nunzip Sample.war",
        "tldr_326: unzip {{file(s)}}",
        "ul_4367: find . -type f -name '*.zip' -exec unzip -- '{}' -x '*.zip' \\;\n\nwhile [ \"`find . -type f -name '*.zip' | wc -l`\" -gt 0 ]\ndo\n    find . -type f -name \"*.zip\" -exec unzip -- '{}' \\; -exec rm -- '{}' \\;\ndone"
      ],
      "Explanations about Options": {
        "-c": "extract files to stdout/screen (``CRT''). This option is similar to the -p option\n except that the name of each file is printed as it is extracted, the -a option is\n allowed, and ASCII-EBCDIC conversion is automatically performed if appropriate.\n This option is not listed in the unzip usage screen."
      }
    },
    {
      "Command": "unrar",
      "MP Summary": "extract files from rar archives",
      "Most Similar TLDR Task": "Extract files to a specified path with the original directory structure",
      "Most Similar TLDR Script": "unrar x {{compressed.rar}} {{path/to/extract}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_712452: Unable to extract extracting .rar file?",
        "au_476676: Combining .rar extraction"
      ],
      "Top-3 Scripts": [
        "au_712452: unrar t html.rar",
        "au_476676: unrar x -e file.part1.rar\n\nsudo apt-get install rar unrar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_4367: Extracting nested zip files",
        "su_420373: linux find command to move files",
        "so_25830095: find *.tar then extract and delete the files"
      ],
      "Top-3 Scripts": [
        "ul_4367: find . -type f -name '*.zip' -exec unzip -- '{}' -x '*.zip' \\;\n\nfind . -type f -mindepth 2 -exec mv -- '{}' . \\;\n\nwhile [ \"`find . -type f -name '*.zip' | wc -l`\" -gt 0 ]\ndo\n    find . -type f -name \"*.zip\" -exec unzip -- '{}' \\; -exec rm -- '{}' \\;\ndone",
        "su_420373: find . -name '*cover*' -size +100k -exec mv '{}' /root/img \\;",
        "so_25830095: find ~ -name '*.tar' -exec tar -xf {} \\; -exec rm -f {} \\;"
      ],
      "Explanations about Options": {
        "-size": "File uses n units of space, rounding up. The following suffixes can be used:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_326: Extract zip file(s) (for multiple files, separate file paths by spaces)",
        "au_712452: Unable to extract extracting .rar file?",
        "so_65279607: Linux wifi extract script"
      ],
      "Top-3 Scripts": [
        "tldr_326: unzip {{file(s)}}",
        "au_712452: file html.rar",
        "so_65279607: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Extract a specific file without preserving the folder structure",
      "Most Similar TLDR Script": "tar xf {{source.tar}} {{source.tar/path/to/extract}} --strip-components={{depth_to_strip}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_48454111: how to Extract tar Files?",
        "so_6621751: shell script to extract tar file please help",
        "so_25830095: find *.tar then extract and delete the files"
      ],
      "Top-3 Scripts": [
        "so_48454111: tar xvf ...",
        "so_6621751: tar xvf 1.0.1.tar\n\ntar(1)",
        "so_25830095: find ~ -name '*.tar' -exec tar -xf {} \\; -exec rm -f {} \\;"
      ],
      "Explanations about Options": {
        "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted.",
        "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given."
      }
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Add files to an existing zip file",
      "Most Similar TLDR Script": "zip {{compressed.zip}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_4520822: Is there a quick way to delete a file from a Jar / war without having to extract the jar and recreate it?",
        "ul_146206: Why can't tar extract .zip files?",
        "so_65279607: Linux wifi extract script"
      ],
      "Top-3 Scripts": [
        "so_4520822: zip -d file.jar unwanted_file.txt",
        "ul_146206: ",
        "so_65279607: "
      ],
      "Explanations about Options": {
        "-d": "Remove (delete) entries from a zip archive. For example:"
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_4367: Extracting nested zip files",
        "so_25830095: find *.tar then extract and delete the files",
        "au_1110468: Unzip command equivalent to \"extract here\""
      ],
      "Top-3 Scripts": [
        "ul_4367: while [ \"`find . -type f -name '*.zip' | wc -l`\" -gt 0 ]\ndo\n    find . -type f -name \"*.zip\" -exec unzip -- '{}' \\; -exec rm -- '{}' \\;\ndone",
        "so_25830095: find ~ -name '*.tar' -exec tar -xf {} \\; -exec rm -f {} \\;",
        "au_1110468: "
      ],
      "Explanations about Options": {
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10282296: Split tar.bz2 file and extract each individually",
        "so_36732482: How to use linux command to extract sequencing data"
      ],
      "Top-3 Scripts": [
        "so_10282296: ",
        "so_36732482: #!/bin/bash\na=`cat index.txt`\nfor i in $a\ndo\n    cat ecoli.ffn|awk -F: -v i=\"$i\" 'BEGIN{flag=0} {if($2 == i){print $0;flag=1;} if(flag ==1 && $2 != i){print $0; flag=0;} }'\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Move files in arbitrary locations",
      "Most Similar TLDR Script": "mv {{source}} {{target}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_4367: Extracting nested zip files",
        "su_420373: linux find command to move files",
        "so_15744023: How to extract filename.tar.gz file"
      ],
      "Top-3 Scripts": [
        "ul_4367: find . -type f -mindepth 2 -exec mv -- '{}' . \\;",
        "su_420373: find . -name '*cover*' -size +100k -exec mv '{}' /root/img \\;",
        "so_15744023: mv filename.tar.gz filename.tar # optional\ntar xvf filename.tar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_52230: How do I extract a RPM file?",
        "au_1106252: How do I extract an ISO file?",
        "au_476676: Combining .rar extraction"
      ],
      "Top-3 Scripts": [
        "au_52230: $ sudo apt-get install rpm2cpio\n$ rpm2cpio /path/to/file.rpm | cpio -i --make-directories",
        "au_1106252: sudo mount -t udf file.iso /media/iso\n\nsudo mount -t udf, iso13346 -o loop file.iso /media/iso",
        "au_476676: sudo apt-get install rar unrar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_21024285: Extracting data from a text file and output xml file",
        "au_1186367: I have a zip file. I extracted it and modified some files. How do I list them?"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_21024285: echo \"<result>\"\nfor f in Test*.txt\n  do\n    source $f\n    echo \"<test><id>\"$id\"</id><time>\"$time\"</time></test>\"\n  done\necho \"</result>\"",
        "au_1186367: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, including hidden files",
      "Most Similar TLDR Script": "ls -a",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_712452: Unable to extract extracting .rar file?",
        "so_12002237: tar extracting most recent file",
        "so_11687001: Is that the 'path to war' which I am giving wrong? If yes,how do I do a rollback?"
      ],
      "Top-3 Scripts": [
        "au_712452: ls -lh",
        "so_12002237: ls -1 /home/user/logs/backup.*.tar.gz | sort -t . -k2rn | head -1",
        "so_11687001: ls /home/non-admin/NetBeansProjects/'Personal Site'/web/war"
      ],
      "Explanations about Options": {
        "-1": "list one file per line. Avoid '\\n' with -q or -b",
        "-l": "use a long listing format",
        "-h": "with -l and -s, print sizes like 1K 234M 2G etc."
      }
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_60029962: Shell Script to extract only file name",
        "au_1186367: I have a zip file. I extracted it and modified some files. How do I list them?"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_60029962: awk -F / '{ print $NF }' \"$BASE_PATH\"/publishfile.txt",
        "au_1186367: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination, setting their ownership",
      "Most Similar TLDR Script": "install -o {{user}} {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_52230: How do I extract a RPM file?",
        "au_476676: Combining .rar extraction"
      ],
      "Top-3 Scripts": [
        "au_52230: $ sudo apt-get install rpm2cpio\n$ rpm2cpio /path/to/file.rpm | cpio -i --make-directories",
        "au_476676: sudo apt-get install rar unrar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34293398: Linux command to extract a text",
        "so_62471575: Looking help in unix commands to extract and replace string",
        "so_47157198: How can I extract multiple pattern and create a csv file?"
      ],
      "Top-3 Scripts": [
        "so_34293398: sed 's/.*\\(ERROR:[^\\.]*\\.\\).*/\\1/'",
        "so_62471575: formatted_url=\"https://jenkinsurl.com/job/GitHub%20Organization%20Scans/job/Project_Dev/job/reponame/job/dev/72/\"\n\necho $formatted_url | cut -d'/' -f4- | sed 's/%20/ /g;s/job/jobs/g' | sed 's/^/\\/var\\/jenkins_home\\//;s/$/branches\\/dev\\/builds\\/$BUILD_NUMBER\\/log/'",
        "so_47157198: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Clean the local repository - removing package files (.deb) from interrupted downloads that can no longer be downloaded",
      "Most Similar TLDR Script": "apt-get autoclean",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_52230: How do I extract a RPM file?",
        "au_476676: Combining .rar extraction"
      ],
      "Top-3 Scripts": [
        "au_52230: $ sudo apt-get install rpm2cpio\n$ rpm2cpio /path/to/file.rpm | cpio -i --make-directories",
        "au_476676: sudo apt-get install rar unrar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_84093: How to read a .war file?",
        "au_476676: Combining .rar extraction"
      ],
      "Top-3 Scripts": [
        "ul_84093: cd /usr/local/standalone/deployments/Sample.war/WEB-INF/classes/",
        "au_476676: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Assemble a file, writing the output to a.out",
      "Most Similar TLDR Script": "as {{file.s}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_32349097: Invalid user/usergroupd while extracting tar file",
        "so_65279607: Linux wifi extract script"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_32349097: --same-owner\n       try extracting files with the same ownership as exists in the ar\u2010\n       chive (default for superuser)\n\n--no-same-owner\n       extract files as yourself (default for ordinary users)",
        "so_65279607: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
      "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62471575: Looking help in unix commands to extract and replace string",
        "so_52308082: execute command is bash and extract data for it output"
      ],
      "Top-3 Scripts": [
        "so_62471575: formatted_url=\"https://jenkinsurl.com/job/GitHub%20Organization%20Scans/job/Project_Dev/job/reponame/job/dev/72/\"\n\necho $formatted_url | cut -d'/' -f4- | sed 's/%20/ /g;s/job/jobs/g' | sed 's/^/\\/var\\/jenkins_home\\//;s/$/branches\\/dev\\/builds\\/$BUILD_NUMBER\\/log/'",
        "so_52308082: emulator -avd emualtor-666 | head -1 | cut -d ':' -f 3"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_12002237: tar extracting most recent file",
        "so_34824458: how to find the last modified file and then extract it"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_12002237: ls -1 /home/user/logs/backup.*.tar.gz | sort -t . -k2rn | head -1",
        "so_34824458: 7z e `ls -t | head -1`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_60029962: Shell Script to extract only file name",
        "au_1186367: I have a zip file. I extracted it and modified some files. How do I list them?",
        "so_47157198: How can I extract multiple pattern and create a csv file?"
      ],
      "Top-3 Scripts": [
        "so_60029962: while read",
        "au_1186367: ",
        "so_47157198: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_12002237: tar extracting most recent file",
        "so_17565137: Grep command to extract unique words"
      ],
      "Top-3 Scripts": [
        "so_12002237: ls -1 /home/user/logs/backup.*.tar.gz | sort -t . -k2rn | head -1",
        "so_17565137: $ grep -o '\\btemp\\w*' file | sort -u\ntemp1\ntemp2\ntemp3\ntempabc"
      ],
      "Explanations about Options": {
        "-t": "use SEP instead of non-blank to blank transition",
        "-u": "with -c, check for strict ordering; without -c, output only the first of an equal\n run"
      }
    },
    {
      "Command": "bzip2",
      "MP Summary": "a block-sorting file compressor, v1.0.8",
      "Most Similar TLDR Task": "Decompress a file",
      "Most Similar TLDR Script": "bzip2 -d {{path/to/compressed_file.bz2}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_15744023: How to extract filename.tar.gz file",
        "ul_39513: ungzip the gizpped war"
      ],
      "Top-3 Scripts": [
        "so_15744023: $ file ~/Downloads/filename.tbz2\n/User/Name/Downloads/filename.tbz2: bzip2 compressed data, block size = 400k",
        "ul_39513: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "php",
      "MP Summary": "PHP Command Line Interface 'CLI'",
      "Most Similar TLDR Task": "Parse and execute a php script",
      "Most Similar TLDR Script": "php {{file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1186367: I have a zip file. I extracted it and modified some files. How do I list them?"
      ],
      "Top-3 Scripts": [
        "au_1186367: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cpio",
      "MP Summary": "copy files to and from archives",
      "Most Similar TLDR Task": "Take a list of file names from standard input and add them [o]nto an archive in cpio's binary format",
      "Most Similar TLDR Script": "echo \"{{file1}} {{file2}} {{file3}}\" | cpio -o > {{archive.cpio}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_52230: How do I extract a RPM file?"
      ],
      "Top-3 Scripts": [
        "au_52230: $ sudo apt-get install rpm2cpio\n$ rpm2cpio /path/to/file.rpm | cpio -i --make-directories"
      ],
      "Explanations about Options": {
        "--make-directories": "(i and p modes) Create directories as necessary.",
        "-i": "Input mode. See above for description."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the second column of the lines containing \"something\" in a space-separated file",
      "Most Similar TLDR Script": "awk '/{{something}}/ {print $2}' {{filename}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_60029962: Shell Script to extract only file name",
        "au_1186367: I have a zip file. I extracted it and modified some files. How do I list them?"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_60029962: awk -F / '{ print $NF }' \"$BASE_PATH\"/publishfile.txt",
        "au_1186367: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
      "Most Similar TLDR Script": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_25830095: find *.tar then extract and delete the files"
      ],
      "Top-3 Scripts": [
        "so_25830095: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_17564751: grep command to extract a word",
        "so_17565137: Grep command to extract unique words"
      ],
      "Top-3 Scripts": [
        "so_17564751: $ grep -o \"temp[0-9]\"",
        "so_17565137: $ grep -o '\\btemp\\w*' file | sort -u\ntemp1\ntemp2\ntemp3\ntempabc"
      ],
      "Explanations about Options": {
        "-o": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
      }
    },
    {
      "Command": "rar",
      "MP Summary": "archive files with compression",
      "Most Similar TLDR Task": "Password protect the resulting archive",
      "Most Similar TLDR Script": "rar a -p{{password}} {{path/to/archive_name.rar}} {{path/to/file_or_directory}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_476676: Combining .rar extraction"
      ],
      "Top-3 Scripts": [
        "au_476676: sudo apt-get install rar unrar"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "7z",
      "MP Summary": "A file archiver with high compression ratio format",
      "Most Similar TLDR Task": "Extract an archive to stdout",
      "Most Similar TLDR Script": "7z x {{archived.7z}} -so",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_34824458: how to find the last modified file and then extract it"
      ],
      "Top-3 Scripts": [
        "so_34824458: 7z e `ls -t | head -1`"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture contents of a remote X server screen in the PNG image format",
      "Most Similar TLDR Script": "import -window root -display {{remote_host}}:{screen}.{display} {{output.png}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_65279607: Linux wifi extract script"
      ],
      "Top-3 Scripts": [
        "so_65279607: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Use the times from a file to set the times on a second file",
      "Most Similar TLDR Script": "touch -r {{filename}} {{filename2}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1110468: Unzip command equivalent to \"extract here\""
      ],
      "Top-3 Scripts": [
        "au_1110468: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_4367: Extracting nested zip files"
      ],
      "Top-3 Scripts": [
        "ul_4367: while [ \"`find . -type f -name '*.zip' | wc -l`\" -gt 0 ]\ndo\n    find . -type f -name \"*.zip\" -exec unzip -- '{}' \\; -exec rm -- '{}' \\;\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file, each split having 10 lines (except the last split)",
      "Most Similar TLDR Script": "split -l {{10}} {{filename}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_10282296: Split tar.bz2 file and extract each individually"
      ],
      "Top-3 Scripts": [
        "so_10282296: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
      "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1110468: Unzip command equivalent to \"extract here\""
      ],
      "Top-3 Scripts": [
        "au_1110468: mkdir a"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "export",
      "MP Summary": "set the export attribute for variables",
      "Most Similar TLDR Task": "Append something to the PATH variable",
      "Most Similar TLDR Script": "export PATH=$PATH:{{path/to/append}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2778153: How to extract nested tar.gz files easily?"
      ],
      "Top-3 Scripts": [
        "so_2778153: #!/bin/bash\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\nexport PATH\nfor next in *.tar.gz\n    do\n        echo \"Untaring - $next\"\n        tar -xzf $next -C ~/foo\n    done\nexit 0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_65279607: Linux wifi extract script",
        "so_47157198: How can I extract multiple pattern and create a csv file?"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_65279607: ",
        "so_47157198: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print directories only",
      "Most Similar TLDR Script": "tree -d",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1110468: Unzip command equivalent to \"extract here\""
      ],
      "Top-3 Scripts": [
        "au_1110468: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display information about jobs with changed status",
      "Most Similar TLDR Script": "jobs -n",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_62471575: Looking help in unix commands to extract and replace string"
      ],
      "Top-3 Scripts": [
        "so_62471575: formatted_url=\"https://jenkinsurl.com/job/GitHub%20Organization%20Scans/job/Project_Dev/job/reponame/job/dev/72/\"\n\necho $formatted_url | cut -d'/' -f4- | sed 's/%20/ /g;s/job/jobs/g' | sed 's/^/\\/var\\/jenkins_home\\//;s/$/branches\\/dev\\/builds\\/$BUILD_NUMBER\\/log/'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_39513: ungzip the gizpped war"
      ],
      "Top-3 Scripts": [
        "ul_39513: man gzip\n\nman man"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "last",
      "MP Summary": "show a listing of last logged in users",
      "Most Similar TLDR Task": "Print the full date and time for entries and then display the hostname column last to prevent truncation",
      "Most Similar TLDR Script": "last -F -a",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44560049: How do I \"extract\" my commited files?"
      ],
      "Top-3 Scripts": [
        "so_44560049: git checkout -- path/to/    # extracts the whole \"path/to\" directory\ngit checkout -- .           # extract all the content of the last commit"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "git",
      "MP Summary": "the stupid content tracker",
      "Most Similar TLDR Task": "Execute a Git subcommand with a given configuration set",
      "Most Similar TLDR Script": "git -c '{{config.key}}={{value}}' {{subcommand}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_44560049: How do I \"extract\" my commited files?"
      ],
      "Top-3 Scripts": [
        "so_44560049: git checkout -- path/to/file1.c\ngit checkout -- path/to/file1.h\n\ngit checkout -- path/to/    # extracts the whole \"path/to\" directory\ngit checkout -- .           # extract all the content of the last commit\n\ngit checkout other_branch -- path/to/   # extracts content from other_branch\ngit checkout v1.7.3 -- path/to/         #                  from this tag\ngit checkout eacf33b -- path/to/        #                  from this commit"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mount",
      "MP Summary": "mount a filesystem",
      "Most Similar TLDR Task": "Mount all the filesystem defined in /etc/fstab",
      "Most Similar TLDR Script": "mount -a",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_1106252: How do I extract an ISO file?"
      ],
      "Top-3 Scripts": [
        "au_1106252: sudo mount -t udf file.iso /media/iso\n\nsudo mount -t udf, iso13346 -o loop file.iso /media/iso"
      ],
      "Explanations about Options": {
        "-t": "The argument following the -t is used to indicate the filesystem type. The\n filesystem types which are currently supported depend on the running kernel. See\n /proc/filesystems and /lib/modules/$(uname -r)/kernel/fs for a complete list of the\n filesystems. The most common are ext2, ext3, ext4, xfs, btrfs, vfat, sysfs, proc,\n nfs and cifs.",
        "-o": "Use the specified mount options. The opts argument is a comma-separated list. For\n example:"
      }
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Execute script in a given Python file",
      "Most Similar TLDR Script": "python {{script.py}}",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_2778153: How to extract nested tar.gz files easily?"
      ],
      "Top-3 Scripts": [
        "so_2778153: #!/bin/bash\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\nexport PATH\nfor next in *.tar.gz\n    do\n        echo \"Untaring - $next\"\n        tar -xzf $next -C ~/foo\n    done\nexit 0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "local",
      "MP Summary": "Postfix local mail delivery",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_84093: How to read a .war file?",
        "so_2778153: How to extract nested tar.gz files easily?",
        "ul_363821: Why does my tar file extraction to destination throw an error?"
      ],
      "Top-3 Scripts": [
        "ul_84093: cd /usr/local/standalone/deployments/Sample.war/WEB-INF/classes/",
        "so_2778153: #!/bin/bash\nPATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:~/bin\nexport PATH\nfor next in *.tar.gz\n    do\n        echo \"Untaring - $next\"\n        tar -xzf $next -C ~/foo\n    done\nexit 0",
        "ul_363821: tar -zxvf IUS17.05_g311_lnx86_GPLV3_N20170504.tar.gz -C /cad/local/apps/cadence/xcelium"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tf",
      "MP Summary": "TinyFugue, a MUD client",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_560: List a .jar/.war file content"
      ],
      "Top-3 Scripts": [
        "tldr_560: jar tf {{path/to/file.jar}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "to",
      "MP Summary": "as the filename. --logdir <name> Writes each synchronization log output in a new file in the specified directory. --logexpire <hours> Removes logs older than the value specified (in hours). This command is  used  with --logdir. --logflush Clears (flushes) the log file after each write action. --logdebug Also  output  debug-level  messages  in  the log (equivalent to setting the env var QT_LOGGING_RULES=\"qt.*=true;*.debug=true\"). ) --confdir <dirname> Uses the specified configuration directory. The ownCloud Client reads a configuration file.  You can locate this configuration file as follows: On Linux distributions: $HOME/.config/ownCloud/owncloud.cfg On Microsoft Windows systems: %APPDATA%\\ownCloud\\owncloud.cfg On MAC OS X systems: $HOME/Library/Preferences/ownCloud/owncloud.cfg The configuration file contains settings using the Microsoft Windows .ini file format. You can overwrite changes using the ownCloud configuration dialog. NOTE: Use caution when making changes to the ownCloud Client configuration  file.   Incorrect settings can produce unintended results. Some interesting values that can be set on the configuration file are: \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[ownCloud] section          \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                    \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502remotePollInterval          \u2502 30000   \u2502 Specifies  the poll time \u2502 \u2502                            \u2502         \u2502 for      the      remote \u2502 \u2502                            \u2502         \u2502 repository            in \u2502 \u2502                            \u2502         \u2502 milliseconds.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502forceSyncInterval           \u2502 7200000 \u2502 The   duration   of   no \u2502 \u2502                            \u2502         \u2502 activity  after  which a \u2502 \u2502                            \u2502         \u2502 synchronization      run \u2502 \u2502                            \u2502         \u2502 shall    be    triggered \u2502 \u2502                            \u2502         \u2502 automatically.           \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502fullLocalDiscoveryInterval  \u2502 3600000 \u2502 The interval after which \u2502 \u2502                            \u2502         \u2502 the next synchronization \u2502 \u2502                            \u2502         \u2502 will   perform   a  full \u2502 \u2502                            \u2502         \u2502 local discovery.         \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502notificationRefreshInterval \u2502 300000  \u2502 Specifies   the  default \u2502 \u2502                            \u2502         \u2502 interval of checking for \u2502 \u2502                            \u2502         \u2502 new server notifications \u2502 \u2502                            \u2502         \u2502 in milliseconds.         \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[General] section       \u2502         \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable                \u2502 Default \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502chunkSize               \u2502 5242880 \u2502 Specifies the chunk size \u2502 \u2502                        \u2502         \u2502 of   uploaded  files  in \u2502 \u2502                        \u2502         \u2502 bytes.                   \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502promptDeleteAllFiles    \u2502 true    \u2502 If a  UI  prompt  should \u2502 \u2502                        \u2502         \u2502 ask  for confirmation if \u2502 \u2502                        \u2502         \u2502 it was detected that all \u2502 \u2502                        \u2502         \u2502 files  and  folders were \u2502 \u2502                        \u2502         \u2502 deleted.                 \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502maxLogLines             \u2502 20000   \u2502 Specifies  the   maximum \u2502 \u2502                        \u2502         \u2502 number   of   log  lines \u2502 \u2502                        \u2502         \u2502 displayed  in  the   log \u2502 \u2502                        \u2502         \u2502 window.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502timeout                 \u2502 300     \u2502 The  timeout for network \u2502 \u2502                        \u2502         \u2502 connections in seconds.  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502moveToTrash             \u2502 false   \u2502 If  non-locally  deleted \u2502 \u2502                        \u2502         \u2502 files should be moved to \u2502 \u2502                        \u2502         \u2502 trash     instead     of \u2502 \u2502                        \u2502         \u2502 deleting            them \u2502 \u2502                        \u2502         \u2502 completely.  This option \u2502 \u2502                        \u2502         \u2502 only works on linux      \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502showExperimentalOptions \u2502 false   \u2502 Whether      to     show \u2502 \u2502                        \u2502         \u2502 experimental     options \u2502 \u2502                        \u2502         \u2502 that      are      still \u2502 \u2502                        \u2502         \u2502 undergoing  testing   in \u2502 \u2502                        \u2502         \u2502 the    user   interface. \u2502 \u2502                        \u2502         \u2502 Turning this on does not \u2502 \u2502                        \u2502         \u2502 enable      experimental \u2502 \u2502                        \u2502         \u2502 behavior on its own.  It \u2502 \u2502                        \u2502         \u2502 does     enable     user \u2502 \u2502                        \u2502         \u2502 inferface  options  that \u2502 \u2502                        \u2502         \u2502 can be used to opt in to \u2502 \u2502                        \u2502         \u2502 experimental features.   \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502[Proxy] section      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502Variable             \u2502 Default   \u2502 Meaning                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502host                 \u2502 127.0.0.1 \u2502 The address of the proxy \u2502 \u2502                     \u2502           \u2502 server.                  \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502port                 \u2502 8080      \u2502 The  port were the proxy \u2502 \u2502                     \u2502           \u2502 is listening.            \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u2502type                 \u2502 2         \u2502 0 for System Proxy.      \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25021 for SOCKS5 Proxy.  \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25022 for No Proxy.      \u2502           \u2502                          \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 \u25023 for HTTP(S) Proxy. \u2502           \u2502                          \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Please report bugs at https://github.com/owncloud/client/issues. owncloudcmd(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_560: List a .jar/.war file content",
        "au_52230: How do I extract a RPM file?",
        "tldr_327: Extract zip files(s) to given path"
      ],
      "Top-3 Scripts": [
        "tldr_560: jar tf {{path/to/file.jar}}",
        "au_52230: $ sudo apt-get install rpm2cpio\n$ rpm2cpio /path/to/file.rpm | cpio -i --make-directories",
        "tldr_327: unzip {{compressed_file(s)}} -d {{/path/to/put/extracted_file(s)}}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_61586327: How to read file and extract particular data in shell script?",
        "so_47157198: How can I extract multiple pattern and create a csv file?"
      ],
      "Top-3 Scripts": [
        "so_61586327: if [ -n \"$1\" ]; then \n    line=`grep $1 sltconfig.cfg |head -1`\n    param=`echo line | awk -F'=' '{print $2}'`\n    python /medaff/Scripts/python/iMedical_Consumption_load_Procs.py \"${param}\"\nelse\n    echo \"Pass the application name as argument\"\nfi",
        "so_47157198: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rpm2cpio",
      "MP Summary": "Extract cpio archive from RPM Package Manager (RPM) package.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Redirects content of extracted file to a pipe",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "bunzip2 -c compressedfile.bz2 | yourfilterprogram\n",
          "command-options": {
            "bunzip2": {
              "mpsum": "a block-sorting file compressor, v1.0.8",
              "-c": "Compress or decompress to standard output."
            }
          },
          "TLDR_inform": {
            "bunzip2": {
              "man1_bunzip2_3090": "",
              "man1_bunzip2_3190": "",
              "man1_bunzip2_3197": "",
              "man1_bunzip2_3198": ""
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_52230: How do I extract a RPM file?"
      ],
      "Top-3 Scripts": [
        "au_52230: $ sudo apt-get install rpm2cpio\n$ rpm2cpio /path/to/file.rpm | cpio -i --make-directories"
      ],
      "Explanations about Options": {}
    }
  ]
}