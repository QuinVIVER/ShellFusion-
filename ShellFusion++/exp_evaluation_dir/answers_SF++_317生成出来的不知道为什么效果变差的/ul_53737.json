{
  "Query": "How to list all files ordered by size",
  "Answers": [
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "Long format list sorted by size (descending)",
      "Most Similar TLDR Script": "ls -lS",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_915388: List files in order of size with certain name",
        "so_3495492: Listing Folder Size by Piping",
        "so_11675007: list files by length file name order, after alphabetic"
      ],
      "Top-3 Scripts": [
        "su_915388: ls -lSh $(find -name atom.in)\n\nls -lSh `find -name atom.in`",
        "so_3495492: ls | Add-Member -Force -Passthru -Type ScriptProperty -Name Length -Value { \n   ls $this -recurse | Measure -Sum Length | Select -Expand Sum }",
        "so_11675007: ls -l\n\nls -l | sort -t_ -k1,2 -k3n"
      ],
      "Explanations about Options": {
        "-a": "do not ignore entries starting with .",
        "-s": "print the allocated size of each file, in blocks",
        "-c": "with -lt: sort by , and show , ctime (time of last modification of file status\n information); with -l: show ctime and sort by name; otherwise: sort by ctime,\n newest first",
        "-u": "with -lt: sort by , and show , access time; with -l: show access time and sort by\n name; otherwise: sort by access time, newest first",
        "-t": "sort by modification time , newest first",
        "-o": "like -l , but do not list group information",
        "-l": "use a long listing format",
        "-S": "sort by file size , largest first",
        "-T": "assume tab stops at each COLS instead of 8",
        "-h": "with -l and -s, print sizes like 1K 234M 2G etc.",
        "-r": "reverse order while sorting",
        "-N": "print entry names without quoting",
        "-F": "append indicator (one of */=>@|) to entries",
        "-p": "append / indicator to directories",
        "-m": "fill width with a comma separated list of entries",
        "-n": "like -l, but list numeric user and group IDs"
      }
    },
    {
      "Command": "du",
      "MP Summary": "estimate file space usage",
      "Most Similar TLDR Task": "List the human-readable sizes of a directory and of all the files and directories within it",
      "Most Similar TLDR Script": "du -ah {{path/to/directory}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_494806: Listing files recursively, grouping by user and summing its size",
        "so_51443182: List all directories sorted by size in descending order",
        "su_87776: Show file size by type in Linux?"
      ],
      "Top-3 Scripts": [
        "ul_494806: ",
        "so_51443182: du -b * | sort -nr",
        "su_87776: find Music/ -type f -name \"*.mp3\" -exec du -shc {} + | tail -1 | awk '{print $1}'"
      ],
      "Explanations about Options": {
        "-h": "print sizes in human readable format (e.g., 1K 234M 2G)",
        "-s": "display only a total for each argument",
        "-b": "equivalent to '--apparent-size --block-size=1'",
        "-c": "produce a grand total"
      }
    },
    {
      "Command": "stat",
      "MP Summary": "display file or file system status",
      "Most Similar TLDR Task": "Show the size of the file in bytes",
      "Most Similar TLDR Script": "stat -c \"%s %n\" {{file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash",
        "ul_426758: Move files by its size",
        "ul_560351: save in a text file list of files with the size of each file"
      ],
      "Top-3 Scripts": [
        "ul_635743: ",
        "ul_426758: stat -c '%s' file",
        "ul_560351: shopt -s globstar dotglob nullglob\n\nfor pathname in ./**/*; do\n    if [[ -f $pathname ]] && [[ ! -h $pathname ]]; then\n        stat -c $'%s\\t%n' \"$pathname\"\n    fi\ndone >outfile.csv\n\nshopt -s globstar dotglob nullglob\n\nfor pathname in ./**/*; do\n    if [[ -f $pathname ]] && [[ ! -h $pathname ]]; then\n        stat -f '%z%t%N' \"$pathname\"\n    fi\ndone >outfile.csv\n\nzmodload -F zsh/stat b:zstat\nzstat -n +size ./**/*(D.)"
      ],
      "Explanations about Options": {
        "-c": "use the specified FORMAT instead of the default; output a newline after each use of\n FORMAT"
      }
    },
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few bytes of a file",
      "Most Similar TLDR Script": "head -c {{size_in_bytes}} {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "nl2bash_1280: display the three smallest files by size in a folder.",
        "nl2bash_1279: display the three largest files by size in current folder",
        "nl2bash_14378: List all files under current directory with their paths and sizes"
      ],
      "Top-3 Scripts": [
        "nl2bash_1280: find /etc/ -type f -exec ls -s {} + | sort -n | head -3",
        "nl2bash_1279: find . -type f -exec ls -s {} + | sort -n -r | head -3",
        "nl2bash_14378: find . -type f |xargs ls -lS |head -20 | awk '{print $9, $5}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given size range",
      "Most Similar TLDR Script": "find {{root_path}} -size {{+500k}} -size {{-10M}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_915388: List files in order of size with certain name",
        "nl2bash_1280: display the three smallest files by size in a folder.",
        "so_29260363: Print an ordered list of files based on files size in bash"
      ],
      "Top-3 Scripts": [
        "su_915388: ls -lSh $(find -name atom.in)\n\n$(find -name atom.in)\n\nfind ./ -name 'PKA.dump' -size -1600c\n\nman find",
        "nl2bash_1280: find /etc/ -type f -exec ls -s {} + | sort -n | head -3",
        "so_29260363: find $loc_to_look -type f -name \"*.txt\" -size +5M -printf \"%f %s\\n\" | sort -n -k 2\n\nfind $loc_to_look -type f -printf \"%f %s\\n\" | sort -n -k 2 | awk '{ printf \"%s %.1fM\\n\", $1, $2/1024/1024}'"
      ],
      "Explanations about Options": {
        "-type": "File is of type c:",
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file in descending order",
      "Most Similar TLDR Script": "sort -r {{path/to/file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_11675007: list files by length file name order, after alphabetic",
        "nl2bash_1280: display the three smallest files by size in a folder.",
        "so_34528974: PowerShell script to copy files ordered by size"
      ],
      "Top-3 Scripts": [
        "so_11675007: ls -l | sort -t_ -k1,2 -k3n",
        "nl2bash_1280: find /etc/ -type f -exec ls -s {} + | sort -n | head -3",
        "so_34528974: Get-ChildItem | sort -property Length -Descending  | Select -ExpandProperty FullName | Copy-Item -Destination $LOCAL_BKP_FINAL"
      ],
      "Explanations about Options": {
        "-d": "consider only blanks and alphanumeric characters",
        "-s": "stabilize sort by disabling last-resort comparison",
        "-c": "check for sorted input; do not sort",
        "-r": "reverse the result of comparisons",
        "-t": "use SEP instead of non-blank to blank transition",
        "-o": "write result to FILE instead of standard output",
        "-g": "compare according to general numerical value",
        "-i": "consider only printable characters",
        "-n": "compare according to string numerical value"
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Use standard input to count lines, words and characters (bytes) in that order",
      "Most Similar TLDR Script": "{{find .}} | wc",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_264357: To find the size of some group of files",
        "ul_395871: Listing files by year"
      ],
      "Top-3 Scripts": [
        "ul_264357: find . -type f -user agalya|wc -c",
        "ul_395871: ls -l --time-style=long-iso | tail +2 |  sed -n 's/  */ /gp' - | cut -d ' ' -f 6 | cut -d '-' -f 1 | sort -u | wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts",
        "-c": "print the byte counts"
      }
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' bytes in file",
      "Most Similar TLDR Script": "tail -c {{num}} {{file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_87776: Show file size by type in Linux?",
        "ul_264357: To find the size of some group of files",
        "ul_395871: Listing files by year"
      ],
      "Top-3 Scripts": [
        "su_87776: find Music/ -type f -name \"*.mp3\" -exec du -shc {} + | tail -1 | awk '{print $1}'",
        "ul_264357: find . -type f -user agalya -print0 | du -hc --files0-from=- | tail -n 1",
        "ul_395871: ls -l --time-style=long-iso | tail +2 |  sed -n 's/  */ /gp' - | cut -d ' ' -f 6 | cut -d '-' -f 1 | sort -u | wc -l"
      ],
      "Explanations about Options": {
        "-n": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
      }
    },
    {
      "Command": "vdir",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List files and directories sorting entries by size (largest first)",
      "Most Similar TLDR Script": "vdir -S",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_8206: List files and directories sorting entries by size (largest first)"
      ],
      "Top-3 Scripts": [
        "tldr_8206: vdir -S"
      ],
      "Explanations about Options": {
        "-S": "sort by file size , largest first"
      }
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_395871: Listing files by year",
        "so_21989860: Get total size of a list of files in UNIX",
        "nl2bash_419: Display the file size of file '/data/sflow_log' in bytes"
      ],
      "Top-3 Scripts": [
        "ul_395871: ls -l --time-style=long-iso | tail +2 |  sed -n 's/  */ /gp' - | cut -d ' ' -f 6 | cut -d '-' -f 1 | sort -u | wc -l",
        "so_21989860: du -ch $file_list | tail -1 | cut -f 1\n\ncut -f 1",
        "nl2bash_419: du -sb /data/sflow_log | cut -f1"
      ],
      "Explanations about Options": {
        "-d": "use DELIM instead of TAB for field delimiter",
        "-f": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Don't stop at first file type match; keep going until the end of the file",
      "Most Similar TLDR Script": "file -k {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_426758: Move files by its size",
        "su_368784: How can I sort all files by size in a directory?",
        "so_47856564: sorting in unix by file size"
      ],
      "Top-3 Scripts": [
        "ul_426758: stat -c '%s' file\n\n#!/bin/bash\n\ncd \"$1\"\n\nfor file in *; do\n    # code/tests here on each \"$file\"\ndone",
        "su_368784: -S     sort by file size",
        "so_47856564: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a float number with the unicode Euro sign",
      "Most Similar TLDR Script": "printf \"{{\\u20AC %.2f\\n}}\" {{123.4}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29260363: Print an ordered list of files based on files size in bash",
        "ul_494806: Listing files recursively, grouping by user and summing its size",
        "ul_560351: save in a text file list of files with the size of each file"
      ],
      "Top-3 Scripts": [
        "so_29260363: find $loc_to_look -type f -printf \"%f %s\\n\" | sort -n -k 2 | awk '{ printf \"%s %.1fM\\n\", $1, $2/1024/1024}'",
        "ul_494806: find . -printf '%D+%i:%u:%b\\n' | awk -F: '\n  !seen[$1]++ {du[$2] += $3}\n  END {for (user in du) printf \"%20s: %lu\\n\", user, du[user] * 512}'",
        "ul_560351: zstat -L -A data -n +size ./**/*(D.)\nfor name size in $data; do\n    printf '%s\\t%s\\n' $size $name\ndone >outfile.csv\n\nzstat -L -A data -n +size ./**/*(D.)\nprintf '%2$s\\t%1$s\\n' $data >outfile.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Number all output lines",
      "Most Similar TLDR Script": "cat -n {{file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_972024: Searching files by size range",
        "so_47856564: sorting in unix by file size"
      ],
      "Top-3 Scripts": [
        "au_972024: cat result.txt\n/var/log/wtmp\n/var/log/audit/audit.log.1\n/var/log/audit/audit.log\n/var/log/anaconda/journal.log\n/var/log/mongo/mongod-11.0.0.11.log",
        "so_47856564: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23635756: sorting text file by order listed in other file"
      ],
      "Top-3 Scripts": [
        "so_23635756: while read line\ndo\n   grep -wF \"$line\" f1\ndone < f2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
      "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23635756: sorting text file by order listed in other file",
        "ul_85731: grep for multiple strings in files, and then list the files in the order of size",
        "so_5405363: To list files based on size in unix"
      ],
      "Top-3 Scripts": [
        "so_23635756: while read line\ndo\n   grep -wF \"$line\" f1\ndone < f2\n\ngrep -w\n\ngrep -F\n\n$ while read line; do grep \"$line\" f1; done < f2\nrs1333026 0.000 0.000 0.000 1.000 0.000 1.000 0.000 0.000 0.000 1.000 0.000  \nrs11847697 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000  \nrs4771122 1.983 0.998 1.998 1.990 0.998 0.988 1.000 1.984 0.001 1.998 1.996  \nrs10150332 1.000 0.000 1.000 0.000 1.000 0.000 1.000 1.000 0.975 0.000 1.000",
        "ul_85731: find . -maxdepth 1 -exec grep -q stringA {} \\; -exec grep -q stringB {} \\; \\\n        -printf '%10s %p\\n' | \n    sort -n",
        "so_5405363: ssh serverName du /folderName/\\* 2>&1 | grep -v 'cannot' | sort -nr | head -10"
      ],
      "Explanations about Options": {
        "-q": "Quiet; do not write anything to standard output. Exit immediately with zero status\n if any match is found, even if an error was detected. Also see the -s or\n --no-messages option.",
        "-x": "Select only those matches that exactly match the whole line. For a regular\n expression pattern, this is like parenthesizing the pattern and then surrounding it\n with ^ and $.",
        "-v": "Invert the sense of matching, to select non-matching lines."
      }
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Sum the values in the first column of a file and print the total",
      "Most Similar TLDR Script": "awk '{s+=$1} END {print s}' {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_29260363: Print an ordered list of files based on files size in bash",
        "ul_494806: Listing files recursively, grouping by user and summing its size",
        "su_87776: Show file size by type in Linux?"
      ],
      "Top-3 Scripts": [
        "so_29260363: find $loc_to_look -type f -printf \"%f %s\\n\" | sort -n -k 2 | awk '{ printf \"%s %.1fM\\n\", $1, $2/1024/1024}'",
        "ul_494806: find . -printf '%D+%i:%u:%b\\n' | awk -F: '\n  !seen[$1]++ {du[$2] += $3}\n  END {for (user in du) printf \"%20s: %lu\\n\", user, du[user] * 512}'",
        "su_87776: find Music/ -type f -name \"*.mp3\" -exec du -shc {} + | tail -1 | awk '{print $1}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Most Similar TLDR Task": "Print action can be used to print any file on default run-mailcap tool",
      "Most Similar TLDR Script": "print {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_87776: Show file size by type in Linux?",
        "nl2bash_14378: List all files under current directory with their paths and sizes",
        "so_23689419: How to search file by its size using Python"
      ],
      "Top-3 Scripts": [
        "su_87776: find Music/ -type f -name \"*.mp3\" -exec du -shc {} + | tail -1 | awk '{print $1}'",
        "nl2bash_14378: find . -type f |xargs ls -lS |head -20 | awk '{print $9, $5}'",
        "so_23689419: def find_by_size(size, path):\n    result = []\n    for root, dirs, files in os.walk(path):\n        if os.stat(path+name).st_size == size:\n            result.append((os.path.join(name), stats.st_size))\n        else:\n            print (\"Nothing of size %d was found\" % size)\n        return result"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run a command using the input data as arguments",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs {{command}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5755588: Recently modified files....listed by size?",
        "nl2bash_14378: List all files under current directory with their paths and sizes",
        "ul_644726: select directories by name and list ordered by size"
      ],
      "Top-3 Scripts": [
        "so_5755588: find .  -mtime -2  -type f| xargs ls -al | sort -n -k 5\n\nfind .  -mtime -2 | xargs ls -al -d | sort -n -k 5",
        "nl2bash_14378: find . -type f |xargs ls -lS |head -20 | awk '{print $9, $5}'",
        "ul_644726: find -name '.stversions' | xargs du -hd1 | sort -h\n\nfind -type d -name '.stversions' -print0 | xargs -0 du -hd1 | sort -h"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the actual file to which the symlink points",
      "Most Similar TLDR Script": "readlink {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash"
      ],
      "Top-3 Scripts": [
        "ul_635743: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "man",
      "MP Summary": "an interface to the system reference manuals",
      "Most Similar TLDR Task": "Display the path searched for manpages",
      "Most Similar TLDR Script": "man --path",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_915388: List files in order of size with certain name",
        "ul_493857: Find file by size is not working?",
        "ul_426758: Move files by its size"
      ],
      "Top-3 Scripts": [
        "su_915388: man find",
        "ul_493857: man find",
        "ul_426758: man find | less +/-size"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "units",
      "MP Summary": "unit conversion and calculation program",
      "Most Similar TLDR Task": "Show the conversion between two compound units",
      "Most Similar TLDR Script": "units \"{{meters / second}}\" \"{{inches / hour}}\"",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_972024: Searching files by size range"
      ],
      "Top-3 Scripts": [
        "au_972024: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cd",
      "MP Summary": "change the working directory",
      "Most Similar TLDR Task": "Go to home directory of current user",
      "Most Similar TLDR Script": "cd",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash",
        "ul_426758: Move files by its size"
      ],
      "Top-3 Scripts": [
        "ul_635743: ",
        "ul_426758: #!/bin/bash\n\ncd \"$1\"\n\nfor file in *; do\n    # code/tests here on each \"$file\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "install",
      "MP Summary": "copy files and set attributes",
      "Most Similar TLDR Task": "Copy files to destination, setting their group ownership",
      "Most Similar TLDR Script": "install -g {{user}} {{path/to/source}} {{path/to/destination}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_973132: How to sort files order by \"type\" for all directories?"
      ],
      "Top-3 Scripts": [
        "au_973132: sudo apt install dconf-editor"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "getent",
      "MP Summary": "get entries from Name Service Switch libraries",
      "Most Similar TLDR Task": "Get list of all groups",
      "Most Similar TLDR Script": "getent group",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_494806: Listing files recursively, grouping by user and summing its size"
      ],
      "Top-3 Scripts": [
        "ul_494806: getent passwd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy text files to another location, in interactive mode (prompts user before overwriting)",
      "Most Similar TLDR Script": "cp -i {{*.txt}} {{path/to/target_directory}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_464496: ls and du disagree about file size, by a few orders of magnitude"
      ],
      "Top-3 Scripts": [
        "ul_464496: cp --sparse=always\n\ncp --sparse=always -p file new_file"
      ],
      "Explanations about Options": {
        "--sparse": "control creation of sparse files. See below",
        "-p": "same as --preserve=mode , ownership , timestamps"
      }
    },
    {
      "Command": "csvsort",
      "MP Summary": "manual page for csvsort 1.0.2",
      "Most Similar TLDR Task": "Sort a CSV file by the \"name\" column in descending order",
      "Most Similar TLDR Script": "csvsort -r -c {{name}} {{data.csv}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "tldr_8183: Sort a CSV file by the \"name\" column in descending order"
      ],
      "Top-3 Scripts": [
        "tldr_8183: csvsort -r -c {{name}} {{data.csv}}"
      ],
      "Explanations about Options": {
        "-r": "Sort in descending order.",
        "-c": "COLUMNS, --columns COLUMNS\n A comma separated list of column indices or names to sort by. Defaults to all\n columns."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash",
        "so_64902179: I want to assign numbers to the listed elements in order"
      ],
      "Top-3 Scripts": [
        "ul_635743: ",
        "so_64902179: echo \"$((i+1)). ${ARRAY[${i}]}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Run commands from file (script)",
      "Most Similar TLDR Script": "zsh {{file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_560351: save in a text file list of files with the size of each file",
        "ul_524234: Finding a file by alphabetical order"
      ],
      "Top-3 Scripts": [
        "ul_560351: zmodload -F zsh/stat b:zstat\nzstat -n +size ./**/*(D.)",
        "ul_524234: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_23635756: sorting text file by order listed in other file"
      ],
      "Top-3 Scripts": [
        "so_23635756: while read line\ndo\n   grep -wF \"$line\" f1\ndone < f2\n\n$ while read line; do grep \"$line\" f1; done < f2\nrs1333026 0.000 0.000 0.000 1.000 0.000 1.000 0.000 0.000 0.000 1.000 0.000  \nrs11847697 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000 2.000  \nrs4771122 1.983 0.998 1.998 1.990 0.998 0.988 1.000 1.984 0.001 1.998 1.996  \nrs10150332 1.000 0.000 1.000 0.000 1.000 0.000 1.000 1.000 0.975 0.000 1.000"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Print the first 11 lines of a file",
      "Most Similar TLDR Script": "sed 11q {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_395871: Listing files by year"
      ],
      "Top-3 Scripts": [
        "ul_395871: ls -l --time-style=long-iso | tail +2 |  sed -n 's/  */ /gp' - | cut -d ' ' -f 6 | cut -d '-' -f 1 | sort -u | wc -l"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files in verbose mode, printing a message for each removed file",
      "Most Similar TLDR Script": "rm -v {{path/to/directory/*}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash"
      ],
      "Top-3 Scripts": [
        "ul_635743: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "passwd",
      "MP Summary": "change user password",
      "Most Similar TLDR Task": "Make the password of the account blank (it will set the named account passwordless)",
      "Most Similar TLDR Script": "passwd -d",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_494806: Listing files recursively, grouping by user and summing its size"
      ],
      "Top-3 Scripts": [
        "ul_494806: /etc/passwd\n\ngetent passwd"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "less",
      "MP Summary": "opposite of more",
      "Most Similar TLDR Task": "Open a file",
      "Most Similar TLDR Script": "less {{source_file}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_426758: Move files by its size"
      ],
      "Top-3 Scripts": [
        "ul_426758: man find | less +/-size"
      ],
      "Explanations about Options": {
        "-e": "Causes less to automatically exit the second time it reaches end-of-file. By\n default, the only way to exit less is via the \"q\" command.",
        "-i": "Causes searches to ignore case; that is, uppercase and lowercase are considered\n identical. This option is ignored if any uppercase letters appear in the search\n pattern; in other words, if a pattern contains uppercase letters, then that search\n does not ignore case.",
        "-s": "Causes consecutive blank lines to be squeezed into a single blank line. This is\n useful when viewing nroff output."
      }
    },
    {
      "Command": "ag",
      "MP Summary": "The Silver Searcher. Like ack, but faster.",
      "Most Similar TLDR Task": "Find files containing \"foo\", but only list the filenames",
      "Most Similar TLDR Script": "ag -l {{foo}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47856564: sorting in unix by file size"
      ],
      "Top-3 Scripts": [
        "so_47856564: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "compare",
      "MP Summary": "mathematically  and  visually annotate the difference between an image and its reconstruction.",
      "Most Similar TLDR Task": "Compare 2 images using a custom metric",
      "Most Similar TLDR Script": "compare -verbose -metric {{PSNR}} {{image1.png}} {{image2.png}} {{diff.png}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47856564: sorting in unix by file size"
      ],
      "Top-3 Scripts": [
        "so_47856564: -h, --human-numeric-sort\n          compare human readable numbers (e.g., 2K 1G)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_524234: Finding a file by alphabetical order",
        "au_973132: How to sort files order by \"type\" for all directories?"
      ],
      "Top-3 Scripts": [
        "ul_524234: set -- *\nprintf '%s\\n' \"$5\"",
        "au_973132: gsettings set org.gnome.nautilus.preferences default-sort-order 'type'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_973132: How to sort files order by \"type\" for all directories?"
      ],
      "Top-3 Scripts": [
        "au_973132: sudo apt install dconf-editor"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bash",
      "MP Summary": "GNU Bourne-Again SHell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "bash {{file.sh}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_560351: save in a text file list of files with the size of each file"
      ],
      "Top-3 Scripts": [
        "ul_560351: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt",
      "MP Summary": "command-line interface",
      "Most Similar TLDR Task": "List all packages",
      "Most Similar TLDR Script": "apt list",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_973132: How to sort files order by \"type\" for all directories?"
      ],
      "Top-3 Scripts": [
        "au_973132: sudo apt install dconf-editor"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Translate the contents of a file to upper-case",
      "Most Similar TLDR Script": "tr \"[:lower:]\" \"[:upper:]\" < {{filename}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_47856564: sorting in unix by file size"
      ],
      "Top-3 Scripts": [
        "so_47856564: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash"
      ],
      "Top-3 Scripts": [
        "ul_635743: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mongo",
      "MP Summary": "MongoDB Shell",
      "Most Similar TLDR Task": "Connect to a database running on a given host on a given port",
      "Most Similar TLDR Script": "mongo --host {{host}} --port {{port}} {{database}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "au_972024: Searching files by size range"
      ],
      "Top-3 Scripts": [
        "au_972024: cat result.txt\n/var/log/wtmp\n/var/log/audit/audit.log.1\n/var/log/audit/audit.log\n/var/log/anaconda/journal.log\n/var/log/mongo/mongod-11.0.0.11.log"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "SSH tunneling: Forward a specific port (localhost:9999 to example.org:80) along with disabling pseudo-[t]ty allocation and executio[n] of remote commands",
      "Most Similar TLDR Script": "ssh -L {{9999}}:{{example.org}}:{{80}} -N -T {{username}}@{{remote_host}}",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_5405363: To list files based on size in unix"
      ],
      "Top-3 Scripts": [
        "so_5405363: ssh serverName du /folderName/\\* 2>&1 | grep -v 'cannot' | sort -nr | head -10"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "Measure",
      "MP Summary": "Read Print Spot values.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "so_3495492: Listing Folder Size by Piping"
      ],
      "Top-3 Scripts": [
        "so_3495492: ls | Add-Member -Force -Passthru -Type ScriptProperty -Name Length -Value { \n   ls $this -recurse | Measure -Sum Length | Select -Expand Sum }"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "readonly",
      "MP Summary": "set the readonly attribute for variables",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash"
      ],
      "Top-3 Scripts": [
        "ul_635743: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_635743: Deleting files by checking file size in bash",
        "ul_560351: save in a text file list of files with the size of each file"
      ],
      "Top-3 Scripts": [
        "ul_635743: ",
        "ul_560351: shopt -s globstar dotglob nullglob\n\nfor pathname in ./**/*; do\n    if [[ -f $pathname ]] && [[ ! -h $pathname ]]; then\n        stat -c $'%s\\t%n' \"$pathname\"\n    fi\ndone >outfile.csv\n\nshopt -s globstar dotglob nullglob\n\nfor pathname in ./**/*; do\n    if [[ -f $pathname ]] && [[ ! -h $pathname ]]; then\n        stat -f '%z%t%N' \"$pathname\"\n    fi\ndone >outfile.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zstat",
      "MP Summary": "display Zephyr statistics",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_560351: save in a text file list of files with the size of each file"
      ],
      "Top-3 Scripts": [
        "ul_560351: zmodload -F zsh/stat b:zstat\nzstat -n +size ./**/*(D.)\n\nzstat -L -A data -n +size ./**/*(D.)\nfor name size in $data; do\n    printf '%s\\t%s\\n' $size $name\ndone >outfile.csv\n\nzstat -L -A data -n +size ./**/*(D.)\nprintf '%2$s\\t%1$s\\n' $data >outfile.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file2",
      "MP Summary": "kanji code checker.",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_560351: save in a text file list of files with the size of each file"
      ],
      "Top-3 Scripts": [
        "ul_560351: ./file1 136\n./file2 136\n./somedir/file3 136"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "size",
      "MP Summary": "list section sizes and total size of binary files",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "ul_560351: save in a text file list of files with the size of each file",
        "su_368784: How can I sort all files by size in a directory?",
        "so_23689419: How to search file by its size using Python"
      ],
      "Top-3 Scripts": [
        "ul_560351: zstat -L -A data -n +size ./**/*(D.)\nfor name size in $data; do\n    printf '%s\\t%s\\n' $size $name\ndone >outfile.csv",
        "su_368784: -S     sort by file size",
        "so_23689419: def find_by_size(size, path):\n    result = []\n    for root, dirs, files in os.walk(path):\n        if os.stat(path+name).st_size == size:\n            result.append((os.path.join(name), stats.st_size))\n        else:\n            print (\"Nothing of size %d was found\" % size)\n        return result"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "by",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Most Similar TLDR Task": "",
      "Most Similar TLDR Script": "",
      "Most Similar NL2Bash Task": "Split \"file\" into 10 files of about equal size without splitting lines",
      "Most Similar NL2Bash Script": {
        "0": {
          "script": "split -n l/10 file\n",
          "command-options": {
            "split": {
              "mpsum": "split a file into pieces",
              "-n": "generate CHUNKS output files; see explanation below"
            },
            "file": {
              "mpsum": "determine file type"
            }
          },
          "TLDR_inform": {
            "split": {
              "man1_split_32175": "split file piec split file 5 file\nfile split split size except last split split file 512 byte split except last split use 512k kilobyt 512m megabyt split file 512 byte split without break line split file split 10 line except last split"
            },
            "file": {
              "man1_file_10007": "determin file type allow file work special devic file determin mime encod type file stop first file type match keep go end file give descript type specifi file\nwork fine file file extens look insid zip file determin file type insid"
            }
          }
        }
      },
      "Top-3 Similar Questions": [
        "su_368784: How can I sort all files by size in a directory?"
      ],
      "Top-3 Scripts": [
        "su_368784: -S     sort by file size"
      ],
      "Explanations about Options": {}
    }
  ]
}