nl_9926 ===> Print the names of all files in or below the current directory, with all of the file permission bits S_ISUID, S_ISGID, and S_IWOTH set ===> nl2bash
nl2bash_7152 ===> find all text files in the current directory and display them page wise ===> 0.5124845003030636
nl2bash_7367 ===> find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format ===> 0.48290268380814444
nl2bash_7181 ===> find all the ".mov" files in the current folder and give it as an input to the myffmpeg.sh script file ===> 0.4808711002337859
nl2bash_7183 ===> find all the ".mov" video files in the current folder and convert them to flv using ffmpeg. print0 is used to handle files with newline in their names ===> 0.4768052956041134
nl2bash_13864 ===> Counts all *.mod files in a /boot/grub/ folder. ===> 0.47251551293717403
nl2bash_13856 ===> Count the occurrence of 2 in the string '1 1 2 2 2 5' ===> 0.44773121535268656
nl2bash_13855 ===> Count the number of users logged in minus one ===> 0.44773121535268656
nl2bash_2680 ===> Find all directories containing 'linux' in their names under '/root' directory tree ===> 0.426046753059162
nl2bash_5120 ===> Find files/directories that is under group 'root' or have no group and set their group to 'apache' ===> 0.4242942021894328
nl2bash_6714 ===> find ".flac" files in current folder using regular expressions ===> 0.4141955035966687
nl2bash_8784 ===> split content of the files *.txt beginning with 1001st line into pieces per 1000 lines ===> 0.4135387961317204
nl2bash_13089 ===> Generate a random 32 ASCII character password from /dev/urandom and save it to variable 'pass' ===> 0.4124034751429002
nl2bash_13230 ===> create symbolic links in current directory to all files located in "dir" directory and have filename extension "jpg" ===> 0.41177781749754816
nl2bash_13831 ===> Count the number of non localhost users ===> 0.41037234133822575
nl2bash_8082 ===> find the MyCProgram.c (case insensitive find) under the current directory and run the md5sum command against it ===> 0.40861280210889084
nl2bash_9748 ===> Print the day at 1 day ago in 2 months from now ===> 0.4031006470287363
nl2bash_10182 ===> Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 ";" array[$1,$2] }' on compressed files "input1.vcf.gz" and "input2.vcf.gz" ===> 0.40206527456343677
nl2bash_5742 ===> Recursively from current folder searches only files that names match ".*xxx" pattern, ignores binary files and prints file name before every string that contains "my Text to grep". ===> 0.3983903992864961
nl2bash_6168 ===> Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names ===> 0.39817419788838826
nl2bash_12942 ===> Create links for all files in the current directory tree that are more than 1000 days old in "/home/user/archives" ===> 0.39352356152890855
nl2bash_7187 ===> find all the "error_log" files in the folder "/home" which are bigger than 5MB and force delete them ===> 0.3931229448152981
ul_370645 ===> Getting rsync to delete source files that already exist on destination ===> 0.3859584901211839
nl2bash_4777 ===> Find file `Chapter1' on the system ===> 0.3822078296056146
nl2bash_9746 ===> Print the date, then prompt "Hit ENTER or wait ten seconds" with a 10 second timeout, then the date again ===> 0.37953102651705395
nl2bash_9749 ===> Print the difference between line 2 and 3 in file "$f" ===> 0.37810064702873636
nl2bash_8840 ===> Recursively set the file access control list of "app/cache" and "app/logs" to rwx for the current user and for user "www-data" ===> 0.37645346370406974
nl2bash_9884 ===> Print the list of files in the current directory tree excluding those whose paths contain "exclude3" or "exclude4" ===> 0.3756888277295041
nl2bash_11273 ===> Print summary of new/missing files, and which files differ between folder1 and folder2, excluding those matching pattern "node_modules". ===> 0.3728418905874862
nl2bash_7182 ===> find all the ".mov" files in the current folder and give it as an input to the myffmpeg.sh script file ===> 0.37067069005566955
nl2bash_8837 ===> Recursively set all permissions under "/folder" to 755 ===> 0.36988525004671935
nl2bash_8838 ===> Recursively set all permissions under "/opt/lampp/htdocs" to 755 ===> 0.36988525004671935
nl2bash_8836 ===> Recursively set all permissions under "/directory" to 755 ===> 0.3686491882550972
nl2bash_8835 ===> Recursively set all permissions under "../tools" to 777 ===> 0.3686491882550972
nl2bash_942 ===> display all the files in the current folder excluding those ending with ".disabled" in sorted order ===> 0.36708520729971944
nl2bash_12650 ===> change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775. ===> 0.36356858768175393
nl2bash_2474 ===> Find all .mp3 files starting from the current directory and delete them ===> 0.36277675830887424
nl2bash_2473 ===> Find all .mp3 files starting from the current directory ===> 0.36277675830887424
nl2bash_4958 ===> Find files readable only by the group ===> 0.36057537912028487
nl2bash_6420 ===> Search the current directory tree for .log files containing the string "The SAS System", and save their names to sas_log_list.txt ===> 0.358930760068912
nl2bash_12206 ===> Change the owner to "user" and group to "group" of files "file ..." ===> 0.3587114014917373
nl2bash_3179 ===> Find all files in the current directory tree whose names are ".DS_STORE" and delete them ===> 0.3561752046709794
nl2bash_9744 ===> Print the date formatted with "%a %x %X" followed by the host name ===> 0.3545310265170539
nl2bash_7180 ===> find all the ".jpg" files in current folder and display their count ===> 0.3526171352962203
nl2bash_8839 ===> Recursively set all permissions under "/whatever/your/directory/is" to 755 ===> 0.35145346370406977
nl2bash_7188 ===> find all the "error_log" files in the folder "/home" which are bigger than 5MB and force delete them ===> 0.34312294481529804
nl2bash_5361 ===> Find the password file between sub-directory level 2 and 4 ===> 0.3379456726333932
nl2bash_14127 ===> Clean up the output of "unzip -l" and print only the "jar" files ===> 0.33324808831057495
nl2bash_10414 ===> Continuously send ping requests to broadcast address "10.10.0.255" and print the IP addresses who respond ===> 0.3325600443325738
nl2bash_13842 ===> Count the number of times that a single "-----------\n" separated record contains both "A=2" and "dummy=2" and the number of records that do not have "dummy=2" in compressed file "file.gz" ===> 0.3177411649485822
nl2bash_14094 ===> Identify CMS version/releases accross all your Drupal websites ===> 0.3129276658743636
