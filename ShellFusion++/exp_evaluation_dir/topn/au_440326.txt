nl_8224 ===> search for a word in all files in a directory ===> nl2bash
au_173801 ===> Use swap partition for hibernation ===> 0.4169993445500557
nl2bash_7126 ===> find all regular/normal files in the folder "pathfolder" and display the count of files, save all the errors to err.txt file ===> 0.40750817498108005
nl2bash_7125 ===> find all regular/normal files in the folder "myfiles" which have read and write permission to the other users ===> 0.4068919555416005
nl2bash_2291 ===> Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path. ===> 0.399161252203148
nl2bash_2290 ===> Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path. ===> 0.3989043622592975
nl2bash_2292 ===> Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!' ===> 0.3953803553321873
nl2bash_2993 ===> Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time ===> 0.39207502090115276
nl2bash_7361 ===> find all the files in the current directory and print them excluding those that have the name SCCS. ===> 0.3809788022211743
nl2bash_10808 ===> Prints $m latest modified files within the $d folder, using $f format for printing timestamp. ===> 0.38076389456106685
nl2bash_7127 ===> find all regular/normal files in the folder "pathfolder" and display the count of files, save all the errors to err.txt file ===> 0.3776671600910288
nl2bash_2289 ===> Find all *.rb (regular) files under current directory and count their line numbers ===> 0.37022512543054004
nl2bash_13597 ===> Merge already sorted files "*.txt" and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix "output" ===> 0.35390958431244907
nl2bash_6125 ===> Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety ===> 0.3501242987698089
nl2bash_1682 ===> run command "$WEB --quiet" in backgrounf as user  named as the value of the variable $USER ===> 0.3497646407406915
nl2bash_8325 ===> search for all the files excluding directories ending with old or sccs or core or orig in the project folder and save the output to the file exclude ===> 0.34830580088347185
nl2bash_6092 ===> Search for files with "demo" in their names and "sitesearch" in their path names ===> 0.3448449940990908
nl2bash_8934 ===> Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to "proxyhost" port 8888 and a reverse connection from "officefirewall" port 22222 to "localhost" port 22 ===> 0.34436019455808975
nl2bash_6154 ===> Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory ===> 0.34130264907202623
nl2bash_6156 ===> Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree ===> 0.3359824900516335
nl2bash_8224 ===> search for a word in all files in a directory ===> 0.32919420079410966
nl2bash_7124 ===> find all regular/normal files in the folder "myfiles" which have read and write permission to the other users ===> 0.3288739274743717
nl2bash_6001 ===> Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory. ===> 0.3251242987698089
nl2bash_8935 ===> Set up a local SSH tunnel from port 80 to port 3000 ===> 0.32436019455808973
nl2bash_5096 ===> Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o' ===> 0.3179420750906442
nl2bash_6023 ===> Search for all jpg images on the system and archive them ===> 0.3078744997693502
nl2bash_6111 ===> Search for files/directories with the case insensitive pattern anaconda* in /var/log ===> 0.3074245081458273
nl2bash_7312 ===> find all the files ending with ".sh" in the folder /dir excluding those wth the name node_modules and search for a pattern in these files ===> 0.3003934681233591
nl2bash_5973 ===> Search for 'whatIWantToFind' in all files under current directory ===> 0.2999849152492452
nl2bash_6153 ===> Search for the case insensitive pattern 'search for me' in all files with '.p', '.w' and '.i' extension under current directory tree without descending into '.svn' and 'pdv' directories ===> 0.24130264907202625
nl2bash_6093 ===> Search for files with "demo" in their names and "sitesearch" in their path names ===> 0.19597408789027687
