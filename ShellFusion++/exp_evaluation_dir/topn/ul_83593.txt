nl_5598 ===> Look for SUID files and directories ===> nl2bash
nl2bash_12493 ===> Recursively change the user and group of all files in "/var/log/jenkins" to "root" ===> 0.5206343976075031
nl2bash_8470 ===> search for files cart1 or cart2 or cart3 or ...cart6 in the folder junk which is in home folder and display all its details. Discard all the errors and do not display them. ===> 0.503590907088229
nl2bash_7145 ===> find all text files in current folder and trim the extra spaces in all lines in these files and save it to the original file ===> 0.4612745815206337
nl2bash_7154 ===> find all text files in the current folder ===> 0.4612745815206337
nl2bash_6664 ===> Search through the /usr/local directory for files that end with the extension .html, and print the file locations. ===> 0.45129561010718616
nl2bash_5494 ===> Finds recursively and following symlinks from root folder all files that contain "text-to-find-here" and prints files names. ===> 0.4486154954333523
nl2bash_5101 ===> Find files/directories named blah (case insensitive) under current directory ===> 0.4410281381293436
nl2bash_13089 ===> Generate a random 32 ASCII character password from /dev/urandom and save it to variable 'pass' ===> 0.43632167283923706
nl2bash_6650 ===> Search the system for regular files whose names are "filename" ignoring the case ===> 0.43513828269543053
nl2bash_9876 ===> Print the list of files and directories of the current directory ===> 0.43300298647782154
nl2bash_775 ===> display all html files in current folder and replace some pattern in all these files ===> 0.43063342984075936
nl2bash_774 ===> display all html files in current folder and replace some pattern in all these files ===> 0.43063342984075936
nl2bash_8637 ===> search for the word "put" in all the files in the current folder which have the word "bills" in their name and display the matched line along with the filename. ===> 0.4297048292451269
nl2bash_4228 ===> Find all regular files in <path> and execute process with all of them as arguments ===> 0.4293448296145234
nl2bash_2920 ===> Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last : ===> 0.4274428299469385
nl2bash_5285 ===> Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in "file1" ===> 0.4245238864847938
nl2bash_13863 ===> Count used space on device "/dev/sda" in megabytes ===> 0.41986618597976355
nl2bash_9850 ===> Print the line with most consecutive repeats prefixed with its count from standard input ===> 0.4142558747904522
nl2bash_13274 ===> Dump a MySQL database over a compressed SSH tunnel and use it as input to mysql ===> 0.4125647389438425
nl2bash_9620 ===> Print only the number of lines in file "$f" ===> 0.41236498610344474
nl2bash_7176 ===> find all the ".flac" files in the current folder and create a sub shell and convert these to mp3 with 128k bit rate ===> 0.40797366372418764
nl2bash_7206 ===> find all the configuration files in the files system and donot display any errors. ===> 0.3997963162074566
nl2bash_5286 ===> Find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in "file1" ===> 0.3995238864847938
nl2bash_819 ===> display all soft links in current folder ===> 0.39548209441358395
so_34885455 ===> Copy most recent file from folder to destination ===> 0.39189620062022934
nl2bash_4227 ===> Find all regular files in <path> and execute process with all of them as arguments ===> 0.3879842939251579
nl2bash_13275 ===> Dump a MySQL database over a compressed SSH tunnel and use it as input to mysql ===> 0.38756473894384247
nl2bash_5935 ===> Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files ===> 0.3856424531208761
nl2bash_5598 ===> Look for SUID files and directories ===> 0.37761031140561707
nl2bash_5600 ===> Look for `regexp' in binary files ===> 0.37761031140561707
nl2bash_5933 ===> Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files ===> 0.3750060547073318
nl2bash_7192 ===> find all the *.conf files under / (root) redirecting error messages to /dev/null ===> 0.36442656325565753
nl2bash_7175 ===> find all the ".flac" files in the current folder and convert them to mp3 with 160k bit rate ===> 0.3629736637241876
nl2bash_9619 ===> Print only the line "foo///" given two empty directories foo and bar ===> 0.3623649861034447
nl2bash_12694 ===> convert all text files in the current folder from dos to unix format ===> 0.35487841847712104
nl2bash_6026 ===> Search for all the directories in directories taken from the glob pattern '/path/to/folders/*' and add the extension ".mbox" to all and create directories named 'Messages' inside them ===> 0.35363043945065886
nl2bash_5632 ===> Prints directory where the executing script ($0) is located. ===> 0.35305381650063783
nl2bash_512 ===> Show all files in user's home directory that have read, write and execute permissions set for user, group and others. ===> 0.35253608126576574
nl2bash_13836 ===> Count the number of regular files with 755 permission under current directory tree ===> 0.3491198669615095
nl2bash_14007 ===> Disable wildcard expansion and name globbing ===> 0.34387996747995797
nl2bash_13273 ===> Dump "testscript.sh" as 2 byte hexadecimale, printable characters, and octal values ===> 0.3375647389438425
nl2bash_13606 ===> Merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file. ===> 0.2959370693653133
nl2bash_5658 ===> Recursively finds all "*.pas" and "*.dfm" files and prints strings with "searchtext" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number. ===> 0.2790333899662093
nl2bash_5661 ===> Recursively finds all "*.pas" and "*.dfm" files and prints strings with "searchtext" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number. ===> 0.27786818988037
nl2bash_5934 ===> Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files ===> 0.2770191464811048
