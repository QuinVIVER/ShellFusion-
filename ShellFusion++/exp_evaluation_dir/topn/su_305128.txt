nl_8 ===> sleep until a specific date ===> nl2bash
nl2bash_9640 ===> Print output of 'script -q /dev/null ./a' to standard output and "output.txt" ===> 0.43464304940469584
nl2bash_9869 ===> Print the list of all regular files residing in the current directory and below ===> 0.413852978657362
nl2bash_10466 ===> Send a lot of packets to "remote.machine" on port "CLOSED_PORT" at 0.1 second intervals ===> 0.4119444814766768
nl2bash_9716 ===> Print the contents of all ".py" on the file system as input to "tqdm --unit loc --unit_scale True | wc -l" ===> 0.40221130111844855
nl2bash_9708 ===> Print the contents of "foo.txt" starting with line 2 ===> 0.3998435475191422
nl2bash_73 ===> Get a detailed list of all files on the system larger than 10MB ===> 0.39923500869399525
nl2bash_9652 ===> Print second section of data coming from stdin where sections are separated by one or more whitespace. ===> 0.3958216385073602
nl2bash_9705 ===> Print the contents of "file" in reverse order ===> 0.395402513225913
nl2bash_9713 ===> Print the contents of "somefile" as input to "splitter 16224-16482" ===> 0.3915914329571254
nl2bash_9868 ===> Print the list of all regular files on the system using "echo" ===> 0.388852978657362
nl2bash_75 ===> Get a list of all files in the /home directory tree and their coressponding inode numbers ===> 0.3882199588800249
nl2bash_82 ===> Get a recursive file list of directory $dir ===> 0.38791671047926723
nl2bash_9648 ===> Print relative path of device of disk with UUID "b928a862-6b3c-45a8-82fe-8f1db2863be3" ===> 0.3857539587653026
nl2bash_10498 ===> Send uncompressed contents of "input.gz" to "./myscript.pl" ===> 0.38246672301593904
nl2bash_9667 ===> Print the 2nd white space separated fields in "file.txt" as a comma separated list ===> 0.3794372894633793
nl2bash_33 ===> Extract any line in sorted file "A" that does not appear in "B", "C", or "D" ===> 0.37459550552270254
nl2bash_45 ===> Extract protocol part from URL. ===> 0.3696391923666722
nl2bash_74 ===> Get a detailed listing of all symbolic links in /usr/bin starting with "z" ===> 0.3691130853381972
nl2bash_10396 ===> prints the name of the current git branch ===> 0.36900758336863937
nl2bash_1039 ===> display all the files in the home folder which end with ".xbm" ===> 0.36835642251026196
nl2bash_1040 ===> display all the files in the home folder which have not been modified in the last 365*24 hours ===> 0.36835642251026196
nl2bash_31 ===> Extract any line in "fileA" which does not appear as the first word of any line in "fileB" ===> 0.3677481701106969
nl2bash_30 ===> Extract any line in "file1.txt" which does not appear as the first ";" delimited entry in "file2.txt" ===> 0.3677481701106969
nl2bash_10397 ===> prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 Kilobytes. ===> 0.3646148657164911
nl2bash_10467 ===> Send a single ping request with a TTL of 1 to "192.168.1.1" ===> 0.3619444814766768
nl2bash_5540 ===> Locate all *.csv files under the current directory tree separating the file names with zeroes ===> 0.3610867784715349
nl2bash_2153 ===> Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format ===> 0.35803811361972976
nl2bash_9710 ===> Print the contents of "n" ===> 0.35662770941496713
nl2bash_9709 ===> Print the contents of "my_script.py" ===> 0.35662770941496713
nl2bash_9651 ===> Print second field from semicolon-seprated line <line>. ===> 0.35339353172711796
nl2bash_9715 ===> Print the contents of "~/.ssh/config" ===> 0.35221130111844856
nl2bash_1493 ===> Execute commands from "$file" in the current shell. ===> 0.3515593946919538
nl2bash_9677 ===> Print the absolute path of "$path" ===> 0.3503536069687244
nl2bash_9707 ===> Print the contents of "filename" ===> 0.3498435475191422
nl2bash_3738 ===> Find all files/directories in entire file system for which owner has read/write/execute permissions, or the group has at least execute permission, or others have at least execute permission ===> 0.3467122732699439
nl2bash_9706 ===> Print the contents of "file" with " | " appended to each line ===> 0.3454025132259131
nl2bash_9712 ===> Print the contents of "order.txt" ===> 0.34234442313628766
nl2bash_9711 ===> Print the contents of "numbers.txt" ===> 0.34234442313628766
nl2bash_9714 ===> Print the contents of "xx.sh" ===> 0.34159143295712546
nl2bash_9736 ===> Print the current user's mail file in "/var/spool/mail" ===> 0.33715883898865895
nl2bash_5146 ===> Find files/directories under current directory without descending into it ===> 0.33709672843216865
nl2bash_9686 ===> Print the boot time in standard date format ===> 0.33547996819847037
nl2bash_3672 ===> Find all files with name ending with .txt and display only the filenames without full paths ===> 0.3340172473804778
nl2bash_8157 ===> search all the ".sh" files in the /usr folder and follow the symbolic links to their original file ===> 0.32363053762479277
nl2bash_2210 ===> Find all *.mov (case insensitive) files under current directory and run an echo command with the path and the name for each file ===> 0.3233877488487473
nl2bash_37 ===> Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters. ===> 0.3222354831452678
nl2bash_11294 ===> Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty. ===> 0.3203848837741061
nl2bash_62 ===> Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk. ===> 0.3190962590429567
nl2bash_28 ===> Extract any line in "file1" or "file2" which does not appear in the other ===> 0.31503965751275453
nl2bash_21 ===> Extract 8 bytes as an unsigned integer that is "$o" offset into "$rpm" ===> 0.31332192840619755
