nl_1264 ===> display the name and size of all the regular/normal files  in the var/log folder which are bigger than 100MB ===> nl2bash
nl2bash_1963 ===> Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end ===> 0.4513278721594196
nl2bash_6990 ===> find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file ===> 0.4441375600823461
nl2bash_832 ===> display all text, mpg, jpg files  in the folder /Users/david/Desktop ===> 0.4191121761779498
nl2bash_6989 ===> find all files with pattern` '*.mp3' ===> 0.41826909245167754
nl2bash_13287 ===> Reports time consumed by command 'sleep 1' to the file time.txt together, and saves command error output to sleep.stderr. ===> 0.4169621227337078
nl2bash_1495 ===> Execute md5sum command on files found by the find command ===> 0.41474951930093273
nl2bash_13609 ===> Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt ===> 0.411372939914901
nl2bash_6993 ===> find all files with pattern` '*song*abc2009*.jpg' and replace "abc2009" with "def2010" ===> 0.4087798684023134
nl2bash_6983 ===> find all files under the current directory, redirecting error messages to the output and filtering any lines containing the text "Permission denied", writing the remaining output to some_file ===> 0.407944064797124
nl2bash_13283 ===> Format the time string @133986838 according to the default time format and save it to variable 'VARIABLENAME' ===> 0.4072481621122981
nl2bash_10206 ===> Write "deb blah ... blah" to standard output and append to "/etc/apt/sources.list" as root ===> 0.4033590564470094
nl2bash_13289 ===> Save "1 4 6 9 11 17 22" as a bash array "arr" ===> 0.40071155643359824
nl2bash_1496 ===> Execute python script "test.py" with "LD_PRELOAD=./linebufferedstdout.so" and write the output to console and append to "test.out" ===> 0.40023817595809896
nl2bash_3621 ===> Find all files under var/ directory and change their permission to 600 ===> 0.39666399177919986
nl2bash_6974 ===> find all files under the /etc directory and display IP address patterns in them ===> 0.3944282706090133
nl2bash_1616 ===> Run the find command with all positional parameters ===> 0.39389957190804537
nl2bash_13286 ===> Reports time consumed by command 'sleep 1' to the file time.txt together, and saves command error output to sleep.stderr. ===> 0.3919621227337078
nl2bash_3498 ===> Find all files under current directory and pipe their contents to the wordfrequency command and then search for 'yourword' in the output ===> 0.3915019544315832
nl2bash_7414 ===> find all the files in the current folder ending with cpp or hpp or chpp and save the output to the file cscope.files. ===> 0.3910852175776607
nl2bash_1499 ===> Execute script "your_command_here" for each file from directory tree /target/path passing the filename as an argument to the script ===> 0.3906947031552853
nl2bash_3883 ===> Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \".*/$now.*\" (where $now is a variable) and save the output in file $FILE_LIST ===> 0.39059538871507427
nl2bash_1068 ===> display all the jars in the current folder ===> 0.38744447318727093
nl2bash_1066 ===> display all the html files in the folder /var/www ===> 0.38430166492825124
nl2bash_1614 ===> Run the command 'true' with an empty environment variable doFirst ===> 0.3827611323921317
nl2bash_1613 ===> Run the PHP script 'yourscript.php', making it immune to SIGHUP signals. ===> 0.3827611323921317
nl2bash_7003 ===> find all gif files in the file system ===> 0.38210465720425724
nl2bash_9246 ===> Print IP addresses of the current host ===> 0.3820528792179204
nl2bash_3943 ===> Find all files/directories under /proc and run ls command on each. ===> 0.38130844879695414
nl2bash_3942 ===> Find all files/directories under /path/to/files/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks, stat them and apply the sed replacement "s/(.*\|)([0-9]{4})\-([0-9]{2})\-([0-9]{2}) ([0-9]{2})\:([0-9]{2})\:([0-9]{2}\.[0-9]{9}).*/\1\2\3\4\5\6\7/g" on the output ===> 0.38130844879695414
nl2bash_6975 ===> find all files under the /etc directory and display any IP address patterns in them ===> 0.3811192488996976
nl2bash_6973 ===> find all files under the /etc directory and display IP address patterns in them ===> 0.3803482588402164
nl2bash_1269 ===> display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins ===> 0.3800049187023597
nl2bash_1500 ===> Execute script "your_command_here" passing all regular files from directory tree /target/path as arguments to it ===> 0.3786882011371624
nl2bash_7952 ===> find files having the extension "bam" in current directory ===> 0.37813781428988325
nl2bash_6985 ===> find all files under the current folder except dir1 dir2 dir3  folder ===> 0.37574333046208397
nl2bash_13288 ===> Save "$N" number of '.' characters in variable "myvar" ===> 0.37571155643359827
nl2bash_6855 ===> find all files in current folder and display the total lines in them ===> 0.3738157748720453
nl2bash_6976 ===> find all files under the /etc directory and display any IP address patterns in them ===> 0.37229622182700195
nl2bash_3110 ===> Find all files in current directory and execute multiple commands for each file ===> 0.3709976164684191
nl2bash_3111 ===> Find all files in current directory and search for 'searchName' in those files ===> 0.3709976164684191
nl2bash_9155 ===> Output the last slash-separated component of specified path, in this case "data_report_PD_import_script_ABF1_6" ===> 0.3683810268883349
nl2bash_12047 ===> Change all directories under "./bootstrap/cache/" to owner "apache" and group "laravel" ===> 0.36578402725926046
nl2bash_3508 ===> Find all files under current directory and print them by removing the leading ./ in their paths ===> 0.3653365388864729
nl2bash_6994 ===> find all files with the first letter “e” or “f” and last one x in /usr/bin directory: ===> 0.3648029426195397
nl2bash_10469 ===> Send at most 3 ping requests to "8.8.8.8" with a timeout of 3 seconds on interface "eth9" ===> 0.3638822223717482
nl2bash_10470 ===> Send command to named screen session with special characters ===> 0.3638822223717482
nl2bash_1267 ===> display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output) ===> 0.36349093429184526
nl2bash_10392 ===> prints last part of a logfile since timestamp 423 ===> 0.3631803691614103
nl2bash_10393 ===> prints the last non-empty line of a file ===> 0.3631803691614103
nl2bash_6998 ===> find all foo.bar files in the entire file system ===> 0.36288325595313004
