nl_10829 ===> Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end ===> nl2bash
nl2bash_14050 ===> Check if *RBENV* variable is defined in global environment ===> 0.36838200521415776
nl2bash_14051 ===> Check if *RBENV* variable is defined in tmux session 'sessname' environment. ===> 0.3614924747775797
nl2bash_14055 ===> Check if a drive is mounted to nfs ===> 0.3474813230112934
nl2bash_2097 ===> Find all *.c files under and below the current directory that contain "hogehoge" ===> 0.27442557195388184
nl2bash_6183 ===> Search for the regex '->get(\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames ===> 0.27012665897497534
nl2bash_976 ===> display all the files in the current folder which have been modified in the last 24 hours excluding all directories ===> 0.26996070651930915
nl2bash_1970 ===> Find *.java files in the current directory and replace foo with bar in those files ===> 0.26994379596430207
nl2bash_10828 ===> Rename "svnlog.py" to "svnlog" ===> 0.26798564372903144
nl2bash_5717 ===> Recursively finds files like '*.js', and filters out files with 'excludeddir' in path. ===> 0.2649205738481182
nl2bash_1979 ===> Find *.js UTF-8 files with BOM and correct them ===> 0.2607979918392306
nl2bash_10829 ===> Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end ===> 0.26015275285327755
nl2bash_8210 ===> search for a pattern in all the python files in the current folder. and save the output to a txt file ===> 0.259998944122761
nl2bash_6318 ===> Search the /usr/bin directory tree for regular files modified or created less than 10 days ago ===> 0.2586728657273881
nl2bash_4035 ===> Find all files/directories under current directory with 'foo' in their paths and copy them to ~/bar ===> 0.25803765471995366
nl2bash_5853 ===> Search directories /res/values-en-rUS and /res/xml for XML files ===> 0.25743219974924114
nl2bash_2074 ===> Find all 'test' directories in the current directory tree ===> 0.2544751859786025
nl2bash_5709 ===> Recursively finds and compresses all files in a current folder with 4 parallel processes. ===> 0.2535161682812782
nl2bash_3174 ===> Find all files in the current directory tree that are not newer than some_file ===> 0.25255944851064727
nl2bash_6386 ===> Search the current directory recursively for files writable for `others' ===> 0.25110023052122543
nl2bash_4505 ===> Find all the files in file system which are greater than 50MB and less than 100MB ===> 0.24770863499423856
nl2bash_6313 ===> Search the /tmp/ directory recursively for files matching regular expression ".*file[0-9]+$" ===> 0.24298490881443374
nl2bash_6516 ===> Search the current directory tree for regular files that contain "string" ===> 0.2368666944878271
nl2bash_2153 ===> Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format ===> 0.23602548021282027
nl2bash_2152 ===> Find all *.htm files under current directory and change their names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format ===> 0.23586022915609817
nl2bash_6317 ===> Search the /usr/bin directory tree for regular files modified or created less than 10 days ago ===> 0.23367286572738816
ul_338070 ===> How does nload determine the total traffic? ===> 0.2331461297648823
nl2bash_4630 ===> Find and list all files on your current directory and show a few lines of output from the beginning ===> 0.23181765846370428
nl2bash_6519 ===> Search the current directory tree for regular files that were modified $FTIME days ago ===> 0.2299039674724414
nl2bash_1950 ===> Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder ===> 0.22952119324300513
nl2bash_8768 ===> Starts new window named 'win0' in detached tmux session 'vims', opens file 'foo' within. ===> 0.22883734811406226
nl2bash_8560 ===> search for the file "process.txt" in the current folder (case insensitive search) ===> 0.22826577650886612
nl2bash_6517 ===> Search the current directory tree for regular files that were accessed $FTIME days ago ===> 0.22234175131260803
nl2bash_4622 ===> Find and delete all hard links in the /home directory tree to file1 ===> 0.2182020351283609
nl2bash_1960 ===> Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end ===> 0.21580933769594163
nl2bash_2081 ===> Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter ===> 0.21371211845062385
nl2bash_2033 ===> Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format ===> 0.21281007858540063
nl2bash_7693 ===> find all the links in the current directory and print them in each line and display their names. ===> 0.20961778053229463
nl2bash_6922 ===> find all files in the current folder which have only the write permission for the others ===> 0.2043899047476368
nl2bash_10012 ===> Print unique lines of sorted file "A.txt" compared to sorted file "B.txt" ===> 0.197717207905932
nl2bash_6324 ===> Search the CSS files found in the current directory tree for string "foo" ===> 0.1924633246781846
nl2bash_13571 ===> Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt ===> 0.1829331022562377
nl2bash_7706 ===> find all the mp3 files in the current folder and move them to another folder ===> 0.18258584543647804
nl2bash_7691 ===> find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names) ===> 0.17723279714738693
nl2bash_13728 ===> Calculate the md5sum of the executable file of command "cc" ===> 0.1642369806983804
nl2bash_11647 ===> Remove trailing white spaces from all files under dir directory and keep backups of the originals ===> 0.15919431738743492
