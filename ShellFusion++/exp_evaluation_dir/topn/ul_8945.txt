nl_7371 ===> find all the files in the current directory that have the extension "bar" and donot search in the subdirecotries directories. ===> nl2bash
nl2bash_8459 ===> search for bash and rsync files in the entire file system excluding search in the path /usr/share folder and discard all the errors ===> 0.3613870618305002
nl2bash_8501 ===> search for php files  in current directory and search for a word in all these files ===> 0.350904233335667
nl2bash_5792 ===> Search /tmp/ for files smaller than 100 bytes ===> 0.3307155470799218
nl2bash_5762 ===> Recursively unzip files to stdout in "/some/dir/here" and search for "blah" ===> 0.32887906568198855
nl2bash_5750 ===> Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 1000000 characters per command. ===> 0.32887906568198855
nl2bash_5898 ===> Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them ===> 0.32887906568198855
nl2bash_5857 ===> Search directory lpi104-6 for files with inode number 1988884 ===> 0.3278771316320215
nl2bash_6658 ===> Search the ~/Books directory recursively for files named "Waldo" ===> 0.3224923070108259
nl2bash_6659 ===> Search the ~/Books directory recursively for regular files named "Waldo" ===> 0.3224923070108259
nl2bash_5856 ===> Search directory /path/to/check/ for regular files ===> 0.3171870678269957
nl2bash_5756 ===> Recursively search the current directory for unique entries of "searchtext" and replace "matchtext" with "replacetext" ===> 0.30612606449587976
nl2bash_6618 ===> Search the home directory tree for regular files modified yesterday ===> 0.3040332116194203
nl2bash_5866 ===> Search folder /home/ABCD/ recursively for regular files ===> 0.30008906808909086
so_23903793 ===> How can I increase erlang process for rabbitmq? ===> 0.29709432865327146
nl2bash_5791 ===> Search /some/directory for files that are owned by the user "joebob" ===> 0.29633247902368276
nl2bash_7564 ===> find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ). ===> 0.29466525277729216
nl2bash_6652 ===> Search the system for the file “testfile.txt” ===> 0.2905745905096918
nl2bash_5802 ===> Search all .java files residing in the current directory tree and modified at least 7 days ago for string "swt" ===> 0.2865436761259752
nl2bash_8037 ===> find in the file system for the directories with the name "httpdocs" ===> 0.28517312736264644
nl2bash_5790 ===> Search /root/directory/to/search recursively for the files matching pattern 'filename.*' ===> 0.2788790656819885
nl2bash_5797 ===> Search all *.txt files under ~/documents for the word "DOGS" ===> 0.2788790656819885
nl2bash_5777 ===> Search "input.txt" for regex patterns only matching those listed in "ignore.txt", list the unique lines and prefix with the number of occurrences ===> 0.27275192212896443
nl2bash_5827 ===> Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it. ===> 0.2705796401463164
nl2bash_5828 ===> Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it. ===> 0.2705796401463164
nl2bash_5855 ===> Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg ===> 0.2691640932317398
nl2bash_7563 ===> find all the files in the home folder which have been modified after a file ===> 0.26817572705436876
nl2bash_5824 ===> Search all files under and below /etc for IP addresses ===> 0.2658781651262474
nl2bash_1018 ===> display all the files in the folder /home which do not belong to the group test ===> 0.26364650302958903
nl2bash_5842 ===> Search all the .c and .h files in the current directory tree for "expr" ===> 0.26259272680868295
nl2bash_8038 ===> find in the file system for the directories with the name "httpdocs" discard all the errors ===> 0.2619157007542704
nl2bash_5826 ===> Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat. ===> 0.261774480952087
nl2bash_5899 ===> Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them ===> 0.26151991395362
nl2bash_5833 ===> Search all regular files from the current directory tree for lines containing "California" and "surfboard", and save the output as SurfsUp.txt ===> 0.26151991395362
nl2bash_6626 ===> Search the regular files of the current directory tree for string "foo" ===> 0.26137522966129134
nl2bash_3273 ===> Find all files named "test2" in the current directory ===> 0.2606935700311264
nl2bash_5788 ===> Search .c and .h files in the current directory tree for "expr" ===> 0.25721828754503506
nl2bash_7565 ===> find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ). ===> 0.2540303178255455
nl2bash_4366 ===> Find all regular files under and below /home/admin/public_html/, and change their permissions to 644 ===> 0.25382840099101145
nl2bash_6600 ===> Search the files under and below /directory/containing/files for "text to search" ===> 0.24858906678561618
nl2bash_5766 ===> Search  all directory from /usr downwards for files whose inode number is 1234 and print them . ===> 0.24848268772745882
nl2bash_5804 ===> Search all .py files in the current directory tree for "some_function" ===> 0.24847848438432033
nl2bash_8032 ===> find in $HOME files ending in "txt" and do nothing with them, or files ending in "html" and list them null separated. ===> 0.2454147691457688
nl2bash_5823 ===> Search all files under and below /etc for IP addresses ===> 0.24087816512624743
nl2bash_5740 ===> Recursively finds strings with"text string to search” in files under 'directory-path', regarding provided options '[option]'. ===> 0.23912469136119402
nl2bash_5763 ===> Retrieve column number from column name "Target" in file "table" ===> 0.23651991395362
nl2bash_13570 ===> Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt ===> 0.23551299428368808
nl2bash_8040 ===> find md5sum of 'string to be hashed' ===> 0.23449022434543842
nl2bash_2169 ===> Find all *.java files under current directory and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files ===> 0.23317981283303169
nl2bash_5839 ===> Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict' ===> 0.23268617881607082
nl2bash_5742 ===> Recursively from current folder searches only files that names match ".*xxx" pattern, ignores binary files and prints file name before every string that contains "my Text to grep". ===> 0.23114190503427423
