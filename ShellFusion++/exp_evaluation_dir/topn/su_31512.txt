nl_9591 ===> Print number of bytes in $file. ===> nl2bash
nl2bash_2668 ===> Find all build* directories under /var/www/html/ and reverse sort them ===> 0.4499301720695754
nl2bash_920 ===> display all the files in the current directory excluding the paths "targert", "tools", "git" ===> 0.42654117238217765
nl2bash_2735 ===> Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories ===> 0.4251045120053505
nl2bash_8895 ===> Set the 'verbose' shell option causing bash to print shell input lines as they are read ===> 0.42505730892189
nl2bash_4760 ===> Find empty files under test directory ===> 0.42071903134273825
nl2bash_12037 ===> Redirects output of 'time' built-in function and prints only real-time statistic. ===> 0.4169527188207739
nl2bash_439 ===> Display the number of regular files under current directory tree ===> 0.41553342317138564
nl2bash_9601 ===> Print only common file names in sorted listings of directory 'dir1' and 'dir2' ===> 0.4140481487109493
nl2bash_2768 ===> Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves ===> 0.4112852194374631
nl2bash_13507 ===> Bind mount "/dev/random" on "/tmp/fakerandom" ===> 0.41077871985453984
nl2bash_8333 ===> search for all the files in a directory and give the first five characters of the file ===> 0.41039307948203474
nl2bash_9591 ===> Print number of bytes in $file. ===> 0.40945867520970514
nl2bash_368 ===> Display human-readable file type description of utf8.txt ===> 0.40620508584923265
nl2bash_2731 ===> Find all directories named $1 under $HOME directory tree and remove them ===> 0.40414797021192705
nl2bash_441 ===> Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them ===> 0.40330819061185086
nl2bash_9113 ===> List files greater than 1024KB under /path/to/directory and print the time and size on stdout ===> 0.40239871707093056
nl2bash_2733 ===> Find all directories named '.texturedata' under '/path/to/look/in/' directory tree ===> 0.3997288378081445
nl2bash_2770 ===> Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories ===> 0.3997288378081445
nl2bash_9044 ===> set alias "vv" for command "$(date)" ===> 0.39959904788266254
nl2bash_822 ===> display all symbolic links in the folder "myfiles" ===> 0.39634047804370065
nl2bash_1797 ===> Append the contents of ".cwdhist" file to the current in-memory history list ===> 0.39584809962507395
nl2bash_1796 ===> Append history lines from this session to the history list ===> 0.39584809962507395
nl2bash_4187 ===> Find all pdf files in /path and search for "your pattern" in the converted text output and print the paths to the matching files ===> 0.3951928265156608
nl2bash_5913 ===> Search for 'Processed Files' in all $srch* (case insensitive) files under current directory run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output and redirect the final output to temp2 file ===> 0.39392783340072823
nl2bash_9065 ===> Constantly write "y" to backingfile as a background process ===> 0.39228387131201997
nl2bash_5046 ===> Find files with 777 permissions and change them to 755 ===> 0.39109934233638977
nl2bash_13303 ===> Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files' ===> 0.3905562188460009
nl2bash_13648 ===> On host "server_b", connect as ssh user "user" and copy "/my_folder/my_file.xml" to directory "/my_new_folder/". ===> 0.38420635683619564
nl2bash_9923 ===> Print the names of all files in /some/directory and its subdirectories recursively whose MIME type is video ===> 0.3826560072268994
nl2bash_7034 ===> find all java files in the current folder and search for the pattern REGEX ===> 0.37899440663055173
nl2bash_13306 ===> Save a nginx link to "/path/to/file" with the current user and system FQDN host name in variable "path" ===> 0.3778625214319534
nl2bash_8898 ===> Set the bash environmental variable "PROMPT_COMMAND" to save the output of the last executed command to variable "LAST" and file '/tmp/x" ===> 0.3778621121710555
nl2bash_2299 ===> Find all *.rb files/directories under current directory ===> 0.3769097575894321
nl2bash_690 ===> display all directories in the current folder ===> 0.3725770360758032
nl2bash_13281 ===> Format the time string $timestamp according to the format string "%Y-%m-%d %H:%M:%S" and save the output to variable 'CDATE' ===> 0.37198756836066793
nl2bash_13280 ===> Format the time string $timestamp according to the format string "%Y-%m-%d %H:%M:%S" and save the output to variable 'CDATE' ===> 0.37198756836066793
nl2bash_10030 ===> Print whether "$file" and "${file/${dir1}/${dir2}}" differ ===> 0.37092831620013245
nl2bash_3556 ===> Find all files under current directory that match the case insensitive regex .\|./.git and replace the text matching the regex '$lower1'  (literal) with $lower2 (literal)in these files ===> 0.36960827613339753
nl2bash_12036 ===> Redirects content of extracted file to a pipe ===> 0.3677370801960551
nl2bash_8893 ===> Set status code to a non-zero value if process with PID 4129 is running in a different namespace than init ===> 0.3674360851146222
nl2bash_13610 ===> Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt ===> 0.36564467163496556
nl2bash_8371 ===> search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file "files.secure". ===> 0.36425453026910865
nl2bash_12704 ===> display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00 ===> 0.36342230310062407
nl2bash_832 ===> display all text, mpg, jpg files  in the folder /Users/david/Desktop ===> 0.3611187166758186
nl2bash_3524 ===> Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files ===> 0.3581579990769325
nl2bash_10342 ===> Write the standard output and error of "program.sh" to console and append to "log" ===> 0.3559634760364976
nl2bash_13649 ===> Print joined strings from 'file', using space symbol as separator. ===> 0.35588591925108065
nl2bash_549 ===> Show manual page for the find utility ===> 0.354650834865311
nl2bash_7428 ===> find all the files in the current folder which are exactly 1234 bytes ===> 0.3536247799123312
nl2bash_8435 ===> search for all the regular/normal mp3 files in the file system and create a directory int /mt/mp3/ with the basename of the mp3 file ===> 0.3524810702794226
