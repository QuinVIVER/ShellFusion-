nl_9663 ===> Print summary of files present only in dir1. ===> nl2bash
nl2bash_2495 ===> Find all .rpm files and change their permissions to 755 ===> 0.5273843596308381
nl2bash_8735 ===> Enables shell option 'progcomp'. ===> 0.518711578353254
nl2bash_9287 ===> Print a line of 100 random characters either "." or " " ===> 0.5142748724923961
nl2bash_9975 ===> Print the sizes and names of all TXT files from the current directory tree ===> 0.5098754735111176
nl2bash_536 ===> Show filename and filetype description of all PHP files in current directory whose name or filetype description includes "UTF" ===> 0.5037540388003481
nl2bash_3829 ===> Find all files/directories newer than ttt or owned by user 'wn' in entire file system ===> 0.49994736292140934
nl2bash_9370 ===> Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name ===> 0.4990298961334465
nl2bash_9320 ===> Print a minimal set of differences between files in directories "teste1" and "teste2", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context ===> 0.49873567067029956
nl2bash_9235 ===> Print 1000 astarisk ('*') ===> 0.49620210056492664
nl2bash_3719 ===> Find all files/directories in current directory and execute multiple ANDed commands (cmd1 and cmd2) for each file ===> 0.49485859133127463
nl2bash_8963 ===> Sets 'extglob' shell option. ===> 0.49444752090728356
nl2bash_8421 ===> search for all the regular files in the current folder and display the contents ===> 0.49219629807096155
nl2bash_9399 ===> Print all user names and terminals of users who are logged in ===> 0.49186420595712943
nl2bash_2837 ===> Find all directories under and below /root that match pattern "*linux*", case insensitive ===> 0.49139919307268354
nl2bash_9323 ===> Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to "google.com" ===> 0.4904598020563952
nl2bash_5300 ===> Find the "erl" executable in $PATH and read the "RELEASES" file to extract the erlang release number ===> 0.48904489294028164
nl2bash_10549 ===> Copy "local_file" to "user@host:remote_file" via ssh protocol, saving partially transferred files, and showing progress ===> 0.48698560878795133
nl2bash_9577 ===> Print login name and full name of all users currently logged in and delete instances of "of group.*" ===> 0.4845025822474146
nl2bash_10309 ===> Write the current date and time followed by " 0" to the console and append to "log.csv" ===> 0.48445825588022934
nl2bash_3386 ===> Find all files under $d directory (no sub-directories) that are executable by owner and print only their names ===> 0.4814407084230691
nl2bash_7013 ===> find all instances of a file in current folder and discard the errors ===> 0.4804652931962078
nl2bash_290 ===> Display 12345 backwards ===> 0.47808210451044486
nl2bash_2582 ===> Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files ===> 0.47671933015441603
nl2bash_1765 ===> Add read and execute permission to command "node" ===> 0.4766564488043858
nl2bash_8800 ===> Archive all files (not directories) in "folder1" to "copy_of_folder1" specifying to include files info.txt and data.zip ===> 0.4755381526481813
nl2bash_8712 ===> Archive all files beginning with .env or .bash in current directory to user's home directory on host "app1", preserving timestamps and skipping files that are newer on "app1" ===> 0.47546765555959897
nl2bash_12050 ===> Change all directories under "./storage/" to owner "apache" and group "laravel" ===> 0.4736491545332538
nl2bash_5321 ===> Find the file in the current directory tree with inode number $inum and delete it ===> 0.4730253979749179
nl2bash_8724 ===> Enables shell option 'cmdhist'. ===> 0.4726960392549566
nl2bash_5318 ===> Find the empty directories and files under current directory ===> 0.47200753675101487
nl2bash_9665 ===> Print the /proc directory tree, ignoring the PID-process things ===> 0.47177423720317957
nl2bash_1356 ===> Prints process tree of a cron process with command arguments and process id number. ===> 0.4709955683311746
nl2bash_3432 ===> Find all files under /mountpoint and below which have hard links ===> 0.4687197549141201
nl2bash_12995 ===> Creates temporary file and saves path to it in 'content_dir2' variable. ===> 0.46477425074415035
nl2bash_13202 ===> create directory /etc/cron.minute ===> 0.46389352511782145
nl2bash_8715 ===> Enable history and history expansion within a script ===> 0.46180423033077495
nl2bash_9324 ===> Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to "google.com" ===> 0.45554489349065025
nl2bash_8804 ===> Archive directory specified by variable "myFolder" to current directory. ===> 0.4546288264032491
nl2bash_3721 ===> Find all files/directories in current directory and execute multiple commands (cmd1, cmd2) for each file/directory ===> 0.45334351311337984
nl2bash_9666 ===> Print the 10 most used commands ===> 0.45038668237275536
nl2bash_395 ===> Display the biggest file sizes only ===> 0.4490475475540566
nl2bash_5288 ===> Find symlinks in the current directory tree ===> 0.44832271007302593
nl2bash_3805 ===> Find all files/directories named 'query' (case insensitive) under current directory tree ===> 0.4461017782169106
nl2bash_3800 ===> Find all files/directories named 'photo.jpg' (case insensitive) under current directory tree ===> 0.4461017782169106
nl2bash_3232 ===> Find all files larger than 100M and delete them ===> 0.4453528416523453
nl2bash_13561 ===> Connect via ssh to "your.server.example.com" and recursively copy directory "/path/to/foo" on this host to direcotry "/home/user/Desktop" on local host, using "blowfish" cipher algorithm. ===> 0.4448902626844399
nl2bash_3572 ===> Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output ===> 0.4443852853420508
nl2bash_13560 ===> Connect to port 2222 of example.com as ssh user "user", and copy local file "/absolute_path/source-folder/some-file" to remote directory "/absolute_path/destination-folder" ===> 0.44288320392293307
nl2bash_9068 ===> Continuously print "123456789" and line buffer the output via "grep" for input to "{ head -n 1; head -n 1; }" ===> 0.44152569646169737
nl2bash_8649 ===> search for the word foo in all the js files in the current folder ===> 0.4392988293921927
