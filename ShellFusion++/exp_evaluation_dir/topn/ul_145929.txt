nl_10541 ===> Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC ===> nl2bash
nl2bash_8210 ===> search for a pattern in all the python files in the current folder. and save the output to a txt file ===> 0.5151107577523404
nl2bash_7084 ===> find all png images in the current folder and convert the to jpg images. ===> 0.49289085331959936
nl2bash_8703 ===> Apply script 'script.ksh' to all files matching pattern 'image\*.jpg' under the directory tree 'dir' ===> 0.45571398875791147
nl2bash_6515 ===> Search the current directory tree for regular files that can be read by noone ===> 0.44936589633502183
nl2bash_10541 ===> Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC ===> 0.4486040142257597
nl2bash_2074 ===> Find all 'test' directories in the current directory tree ===> 0.44083276824744577
nl2bash_10519 ===> Archive "/path/to/copy" to "/path/to/local/storage" on host "host.remoted.from" as user "user" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission ===> 0.43818450315592744
nl2bash_6307 ===> Search the /root directory recursively for the regular file named "myfile" ignoring "work" directories ===> 0.4342034594634411
nl2bash_6390 ===> Search the current directory recursively for regular files last accessed more than 2 days ago ===> 0.4342034594634411
nl2bash_6516 ===> Search the current directory tree for regular files that contain "string" ===> 0.43191758537285674
nl2bash_3194 ===> Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder with confirmation ===> 0.42353626785622184
nl2bash_7774 ===> find all the png files in current folder and pass them as input to the perl script and copy the result files to a folder ===> 0.42221093927024245
nl2bash_4199 ===> Find all php files in the current directory ===> 0.42132566129371657
nl2bash_1609 ===> Run the Java archive "program.jar" in the background and immune to SIGHUP (hangup signals) sent to it. ===> 0.42004188445379065
nl2bash_4296 ===> Find all regular files residing in the current directory tree and search them for string "/bin/ksh" ===> 0.4194036649719053
nl2bash_6283 ===> Search the /myfiles directory tree for files last accessed more than 30 days ago ===> 0.4136605097201058
nl2bash_6284 ===> Search the /myfiles directory tree for files last modified 2 days ago ===> 0.4136605097201058
nl2bash_11270 ===> Print content of 'domains.txt' with removed first one of dot-delimited fields ===> 0.4128594463630113
nl2bash_11610 ===> Remove the last two components (directories) of $path ===> 0.4114024803713957
nl2bash_11062 ===> Delete all files (files, directories, links, pipes...) named 'core' under current directory ===> 0.4067814192093472
nl2bash_4845 ===> Find files in the current directory and below that are 2000 kB in size ===> 0.4058575679748566
nl2bash_6519 ===> Search the current directory tree for regular files that were modified $FTIME days ago ===> 0.40174165721931976
nl2bash_2081 ===> Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter ===> 0.3976457420925884
nl2bash_5371 ===> Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers ===> 0.39727156591788804
nl2bash_10520 ===> Clone the permissions of "$srcdir" to "$dstdir" ===> 0.39668122911178105
nl2bash_5856 ===> Search directory /path/to/check/ for regular files ===> 0.39091017462452016
nl2bash_5864 ===> Search everywhere for files changed within the last minute ===> 0.39082215392484265
nl2bash_12139 ===> Change permissions to 500 for all regular files under and below the current directory ===> 0.38963597320204474
nl2bash_12138 ===> Change permissions to 0755 for all directories in the /path directory tree ===> 0.38963597320204474
nl2bash_10984 ===> Export variable "JAVA_HOME" as symlink resolved absolute path of two parent directories above "/usr/bin/javac" ===> 0.3887483359933903
nl2bash_5769 ===> Search  in current directory downwards all files whic  have permission 777 . ===> 0.38700838201690246
nl2bash_6470 ===> Search the current directory tree for files executable by at least someone ===> 0.38575318753487564
nl2bash_10987 ===> Preprocess C++ file 'omnitest.cpp' (resolve all preprocessor directives) and page interactively through the result. ===> 0.38478175857142094
nl2bash_5803 ===> Search all .pdf files  from directory tree ~/.personal/tips for "hot" ===> 0.3846896486489939
nl2bash_5802 ===> Search all .java files residing in the current directory tree and modified at least 7 days ago for string "swt" ===> 0.37972394405118937
nl2bash_5806 ===> Search all Python files in the current directory tree for string "import antigravity" ===> 0.3791410498569414
nl2bash_14244 ===> List all .jpg files in the home directory tree in a fast way ===> 0.3770836231280317
nl2bash_13571 ===> Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt ===> 0.37444365567628524
nl2bash_12604 ===> change the current working directory to "B" and display all the files in that folder and append the output to the file "tmp.txt" ===> 0.35957894372581267
nl2bash_5778 ===> Search "input.txt" for regex patterns only matching those listed in "ignore.txt", list the unique lines and prefix with the number of occurrences ===> 0.35406078457092865
nl2bash_51 ===> Extract the contents of "Input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences ===> 0.3533644143758696
nl2bash_4518 ===> Find all the files on the system that have been accessed within the last hour ===> 0.34998328584732413
nl2bash_5746 ===> Recursively search for all directories containing "foo" (case insensitive) under the current directory, renaming them to replace "foo" (case insensitive) with "Bar" ===> 0.347875546554959
nl2bash_7097 ===> find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files ===> 0.347529667676676
nl2bash_7096 ===> find all regex  ".*/[a-f0-9\-]\{36\}\.jpg" files ===> 0.347529667676676
nl2bash_7103 ===> find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has ===> 0.347529667676676
nl2bash_6183 ===> Search for the regex '->get(\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames ===> 0.34464357730418793
nl2bash_1979 ===> Find *.js UTF-8 files with BOM and correct them ===> 0.34038673060213653
nl2bash_7192 ===> find all the *.conf files under / (root) redirecting error messages to /dev/null ===> 0.3362238842041094
nl2bash_13728 ===> Calculate the md5sum of the executable file of command "cc" ===> 0.33585975893055114
