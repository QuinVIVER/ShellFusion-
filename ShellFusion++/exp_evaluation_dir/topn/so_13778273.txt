nl_1180 ===> display long listing of all the files in the folder "/myfiles" ===> nl2bash
nl2bash_4813 ===> Find files and directories with the name RAID but don't traverse a particular directory ===> 0.5493290187534263
nl2bash_3055 ===> Find all files and directories with permissions 664 ===> 0.5342473672020308
nl2bash_11561 ===> Remove leading and trailing spaces or tabs from "$string" ===> 0.5176799467932556
nl2bash_12975 ===> Creates 5-letter random file name and saves it in 'rand_str' variable. ===> 0.5146537926460946
nl2bash_10997 ===> Archive "/home/user1" to "wobgalaxy02:/home/user1" excluding hidden files ===> 0.5032556982668672
nl2bash_12979 ===> Creates detached tmux session named 'cf'. ===> 0.5024629653957384
nl2bash_14279 ===> List all environment variables (name and value) whose name either equals PATH or starts with GOBIN ===> 0.49945935953934373
nl2bash_12978 ===> Creates alias for network interface 'eth0' with IP address '192.0.2.55' and network mask '255.255.255.255'. ===> 0.4976347863752085
nl2bash_197 ===> Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines ===> 0.49732214508623207
nl2bash_11554 ===> Remove leading and trailing spaces from the output of 'hg st -R "$path"' and save the result in variable "var" ===> 0.49540466243810927
nl2bash_14260 ===> List all directories and subdirectories ===> 0.4953722510923171
nl2bash_9180 ===> Print "I am USER and the program named ls is in LS_PATH" where "USER" is the current user's user name and "LS_PATH" is the full path of the command "ls" ===> 0.49106724440807215
nl2bash_14275 ===> List all environment variables (name and value) whose name either equals HOME or PATH, or starts with GO ===> 0.48979805260416653
nl2bash_1175 ===> display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) . ===> 0.4807800445382265
nl2bash_10980 ===> Archive "./htmlguide" to "~/src/" with resolved symbolic links and delete any extraneous files from "~/src/" not found in "./htmlguide" ===> 0.48006073583145337
nl2bash_12985 ===> Creates path as current folder path and folder that contains $0 file, and saves result in 'script_dir' variable. ===> 0.47918797508784966
nl2bash_1956 ===> Find *.c and *.sh files ===> 0.4782034711523971
nl2bash_3041 ===> Find all files and directories that have been modified in the last seven days. ===> 0.4726803563647253
nl2bash_13061 ===> Creates temporary folder, and saves current folder path   joined with created temporary folder path in 'tdir' variable. ===> 0.4704765123643184
nl2bash_1635 ===> Runs programs and prints formatted summary of system resource usage. ===> 0.4667357520029447
nl2bash_13148 ===> create a sub shell and search for regular/normal file with the name "myfile" in the entire file system and discard all the errors ===> 0.46671280798981113
nl2bash_12971 ===> Create tar.gz files older than one day logs ===> 0.4658377445065969
nl2bash_11560 ===> Remove leading and trailing spaces or tabs from "$string" ===> 0.46509479458335934
nl2bash_13106 ===> Parse output from "script.sh" in the current directory which is expected to generate "variable: value" formatted data, and add the resulting variables to the current shell's environment. ===> 0.4504342759969483
nl2bash_10296 ===> Write standard output and error of "./a.out" to standard output and to file "output" ===> 0.44989473725401524
nl2bash_7880 ===> find all the text files in the home folder ===> 0.4482151121915797
nl2bash_5171 ===> Find links to file path/to/foo.txt ===> 0.44474985170485515
nl2bash_12976 ===> Creates 5-letter random file name and saves it in 'rand_str' variable. ===> 0.4396537926460946
nl2bash_12980 ===> Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable. ===> 0.43784804910196906
nl2bash_11180 ===> Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days ===> 0.4352704642173719
nl2bash_12987 ===> Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable. ===> 0.43214989687337785
nl2bash_8233 ===> search for a word in all the files in the current directory and display the list of matched files. ===> 0.4302648990254302
so_62337702 ===> How to extract multiple unique substrings in Bash ===> 0.4297381546674167
nl2bash_12982 ===> Creates file with random 10-byte size content. ===> 0.42746296539573847
nl2bash_13120 ===> create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG ===> 0.4247776463744627
nl2bash_12984 ===> Creates path as current folder path and folder that contains $0 file, and saves result in 'script_dir' variable. ===> 0.4235139998892534
nl2bash_12973 ===> Create the directory '.npm-packages' in the user's home directory($HOME) ===> 0.42338129365987054
nl2bash_12977 ===> Creates alias for network interface 'eth0' with IP address '192.0.2.55' and network mask '255.255.255.255'. ===> 0.4233808377343132
nl2bash_12981 ===> Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable. ===> 0.42054889021441344
nl2bash_12986 ===> Creates path as current folder path and folder that contains $0 file, and saves result in 'script_dir' variable. ===> 0.4197725217876135
nl2bash_3018 ===> Find all files and directories in the current directory recursively that contain spaces in their names ===> 0.4176393369931451
nl2bash_10999 ===> Archive "blanktest/" to "test/" deleting any files in the destination not found in the source ===> 0.41738535055689135
nl2bash_12974 ===> Create thumbnails from the first page of each PDF files under /path/to/dir ===> 0.4146537926460946
nl2bash_13499 ===> optimize all the png images in the current folder to level 5 and save the log to the file optipng.log ===> 0.41446911700935074
nl2bash_13293 ===> Save 'echo whatever you "want your" command to be' in history ===> 0.41290900381917756
nl2bash_11944 ===> Compress from standard input and print the byte count preceded with 'gzip.' ===> 0.41236950368656955
nl2bash_9377 ===> Print all files that exceed 1000 blocks and were modified at least a month ago ===> 0.4117672861212457
nl2bash_2666 ===> Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf ' ===> 0.41070644873836315
nl2bash_11059 ===> Delete all empty subdirectories in and below directory/ ===> 0.41045006901642966
nl2bash_1530 ===> From another terminal, detach process $PID from its terminal and run it in the background. ===> 0.41032427901727897
