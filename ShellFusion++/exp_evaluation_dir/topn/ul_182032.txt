nl_13272 ===> Dump "testscript.sh" as 2 byte hexadecimale, printable characters, and octal values ===> nl2bash
nl2bash_8891 ===> Set shell option 'dotglob'. ===> 0.4981585361488538
nl2bash_9618 ===> Print only the line "foo///" given two empty directories foo and bar ===> 0.4876195110802047
nl2bash_13516 ===> Reattach a session and if necessary detach or  even  create first ===> 0.48578202369996065
nl2bash_9089 ===> For each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format. ===> 0.48029105065425226
nl2bash_10507 ===> Variable PID contains a process ID, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals. ===> 0.4772451794305496
nl2bash_9194 ===> Print "file1.txt" "file2.txt" and "file3.txt" with filename headers ===> 0.47179575051623845
nl2bash_719 ===> display all files in current folder and follow the symbolic links and display the pointed file ===> 0.4703579191979037
nl2bash_11694 ===> Removes empty folder 'symlink'. ===> 0.4690962351900045
nl2bash_12556 ===> change owner and group  of all files and directory into current directory to user and group apache ===> 0.46199909294618613
nl2bash_12555 ===> change html files to mode 644 ===> 0.46199909294618613
nl2bash_10107 ===> Prints the length and contents of the longest line in filename ===> 0.46186930111582847
nl2bash_10105 ===> Prints the file path composed from the path where symlink target file is located, and name of the symbolic link itself. ===> 0.46186930111582847
nl2bash_768 ===> display all files in the folder /usr and its sub directory(do not search beyond the sub directory) ===> 0.45736213963174577
nl2bash_538 ===> Show filename and filetype description of all PHP files in current directory whose name or filetype description includes "UTF" ===> 0.44540079728242743
nl2bash_7834 ===> find all the symbolic links in the current folder ===> 0.4409706041004809
nl2bash_10463 ===> Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen/window in characters. ===> 0.43951741297733626
nl2bash_9527 ===> Print file type information of the "java" executable ===> 0.43897329958741144
nl2bash_794 ===> display all php,xml and phtml files in current folder ===> 0.4388480215226816
nl2bash_9522 ===> Print file system disk space usage in posix and human readable format, format as a table ===> 0.4365763001468411
nl2bash_9196 ===> Print "hello" followed by the current user name ===> 0.43453698024774967
nl2bash_9189 ===> Print "a\nb\ncccccccccccc\nd" as two columns and neatly format into a table ===> 0.4305898959214586
nl2bash_8863 ===> Set permissions for files in `foldername' and its subdirectories to 644 ===> 0.4304922460738362
nl2bash_13502 ===> save the list of all the core files in the entire file system which belong to the group mycomp to the file "mycompcore" and delete them ===> 0.42819478725377613
nl2bash_11977 ===> Verbosely compresses all files on sixth and seventh depth level keeping original files in place. ===> 0.4280280377865955
nl2bash_9197 ===> Print "huge-file.log" starting at line 1000001 ===> 0.42349148725439045
nl2bash_5309 ===> Find the current directory and all its subdirectories. ===> 0.42322914842971043
nl2bash_8865 ===> Set permissions for files in `foldername' to 777 ===> 0.4228005389503062
nl2bash_13507 ===> Bind mount "/dev/random" on "/tmp/fakerandom" ===> 0.415466949581204
nl2bash_9511 ===> Print file information of command "studio" ===> 0.4150520206161996
nl2bash_9510 ===> Print file information of command "passwd" ===> 0.4150520206161996
nl2bash_10460 ===> Send SIGTERM signal to first process sent to background by the current shell. ===> 0.413796276685779
nl2bash_10461 ===> Send SIGTERM signal to last process sent to background by the current shell. ===> 0.413796276685779
nl2bash_9521 ===> Print file system disk space usage in human readable format of the root filesystem ===> 0.4125389651512902
nl2bash_9190 ===> Print "a\nb\ncccccccccccc\nd" as two columns and neatly format into a table ===> 0.4101736811365362
nl2bash_11978 ===> Verbosely compresses all files on sixth and seventh depth level keeping original files in place. ===> 0.4048435479190604
nl2bash_9607 ===> Print only digits in variable "$name" ===> 0.4047264492816107
nl2bash_13269 ===> Dump "input_file" as a 2 byte hexadecimal, character, and octal value and view the contents in "less" ===> 0.40311684433955886
nl2bash_13270 ===> Dump "myDB" via "pg_dump" and compress to "myDB.sql.gz" ===> 0.40311684433955886
nl2bash_9066 ===> Continuously output "y" at a rate of 10 bytes per second ===> 0.40218153433839443
nl2bash_11992 ===> compresses all the files in the current folder with default depth ===> 0.40159177046876104
nl2bash_11623 ===> Remove trailing spaces from all files under current directory and keep backups of the originals ===> 0.40139398780686064
nl2bash_8991 ===> set alias "cats" for command 'konqueror http:'//icanhazcheezburger.com'' ===> 0.39962530450488365
nl2bash_9020 ===> set alias "m" for command "mplayer -novideo -loop 0" ===> 0.3993845802954581
nl2bash_9019 ===> set alias "lvim" for command "vim -c \"normal '0\"" ===> 0.3993845802954581
nl2bash_9218 ===> Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree ===> 0.3987385125420242
nl2bash_9045 ===> set alias "webshare" for command 'python -m SimpleHTTPServer' ===> 0.39745798657644693
nl2bash_9022 ===> set alias "mkcd" for command "_(){ mkdir -pv $1; cd $1; }; _" ===> 0.39745798657644693
nl2bash_650 ===> display a long listing of all regular/normal files in current directory which have been changed in the last 7 days and save the output to new.files ===> 0.39605268474707744
nl2bash_13563 ===> Copy file in current directory of local host to host "remote", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer. ===> 0.39544493837538686
nl2bash_9536 ===> Print first word of lines unique for 'file1' file ===> 0.393752140741885
