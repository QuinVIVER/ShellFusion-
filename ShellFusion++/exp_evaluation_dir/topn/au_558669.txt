nl_11034 ===> Delete all contents form the files that contain the regex 'string' in maximum 1 level down the / directory excluding other partitions ===> nl2bash
nl2bash_10651 ===> Copy recursively "tata/" to "tata2/" and remove read, write, and execute permission for other ===> 0.5140731289827678
nl2bash_11055 ===> Delete all empty files and directories in the "test" directory tree ===> 0.5086644455071068
nl2bash_11546 ===> Remove from the current directory tree all the regular files which have a dot in their names and contain string "<img-name>-<width:integer>x<height:integer>.<file-ext> syntax" ===> 0.5019332659976767
nl2bash_10653 ===> Copy specific sub-directories "company1/" and "company1/unique_folder1" from "user@server.com:/path/to/old/data/" to "/path/to/new/data" via ssh ===> 0.4995143836801087
nl2bash_8733 ===> Enables shell option 'nocasematch'. ===> 0.49259416153142743
nl2bash_3022 ===> Find all files and directories in the current directory tree with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP ===> 0.4895276344007091
nl2bash_1925 ===> Find ".c" and ".h" files in the current directory tree and print lines containing "#include" ===> 0.4872150192859004
nl2bash_10676 ===> Copy the owner and group of "originalfile" to "newfile" ===> 0.4782240521636422
nl2bash_3107 ===> Find all files in current directory and execute command1 and command2 for each file ===> 0.4763621297597771
nl2bash_7694 ===> find all the links in the current directory and print them in each line and display their names. ===> 0.46079574654369
nl2bash_11061 ===> Delete all filename* files under /dir directory ===> 0.4415332186190912
nl2bash_11054 ===> Delete all empty directories under test directory ===> 0.4336644455071067
nl2bash_11196 ===> Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days ===> 0.42830202036348475
nl2bash_186 ===> Represent the UTC date given in time string "1970.01.01-$string1" as number of seconds since the epoch and save it in 't1' variable ===> 0.42346385469773695
nl2bash_5655 ===> Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word. ===> 0.4172869740001147
nl2bash_13909 ===> Counts lines in file file1 and shows progress bar while doing. ===> 0.41265334338552584
nl2bash_10584 ===> Copy all .pdf files in the ./work/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the ./backup/ directory ===> 0.410495195540139
nl2bash_11330 ===> Remove "\r" at the end of each line in "infile" and display the result as printable characters or backslash escapes ===> 0.41004321907644403
nl2bash_10652 ===> Copy recursively "tata/" to "tata2/" and remove read, write, and execute permission for other ===> 0.4075562581118747
nl2bash_2760 ===> Find all directories that have been accessed $FTIME days ago under current directory tree ===> 0.40598640645155226
nl2bash_3295 ===> Find all files named `file1' on the system ===> 0.4048386915923149
nl2bash_11197 ===> Delete interactively all the files/directories with inode number 782263 under current directory tree ===> 0.4033020203634848
nl2bash_11195 ===> Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days ===> 0.4033020203634848
nl2bash_2577 ===> Find all 777 permission files/directories under current directory tree ===> 0.40278598179813097
nl2bash_6441 ===> Search the current directory tree for directories that can be opened by noone ===> 0.40163179588577214
nl2bash_11556 ===> Remove leading and trailing spaces from the output of 'hg st -R "$path"' and save the result in variable "var" ===> 0.3982622401788236
nl2bash_1622 ===> Run the specified git command, paging through the output with raw characters written to the terminal, without initializing the terminal capabilities, and automatically exiting when the end of the output is reached. ===> 0.3969126968040222
nl2bash_10650 ===> Copy recursively "tata/" to "tata2/" and remove read, write, and execute permission for other ===> 0.3938082104421461
nl2bash_5522 ===> Finds total lines count of all *.php files in a current folder and subfolders. ===> 0.39338487893755414
nl2bash_8192 ===> search for a file "file" in current folder and display all instances of this file ===> 0.3895381195019527
nl2bash_8222 ===> search for a string in gzip'd files ===> 0.38829684739656967
nl2bash_7204 ===> find all the configuration files in /etc folder along with the last access & modification time ===> 0.3857815275202571
nl2bash_11221 ===> Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file "exclude.pats". ===> 0.38528515503185223
nl2bash_6355 ===> Search the current directory for PHP files ===> 0.38321718518544
nl2bash_11555 ===> Remove leading and trailing spaces from the output of 'hg st -R "$path"' and save the result in variable "var" ===> 0.38074542754480656
nl2bash_10943 ===> Allocate a pseudo-terminal and execute "screen -r" followed by "ls" on host "example.com" ===> 0.3799933089128011
nl2bash_11329 ===> Remove "\r" at the end of each line in "infile" and display the result as printable characters or backslash escapes ===> 0.372543219076444
nl2bash_12516 ===> Recursively move all files in "/path/to/srcdir" to "dest/" ===> 0.37135458766846574
nl2bash_11060 ===> Delete all empty subdirectories in and below directory/ ===> 0.36653321861909116
nl2bash_11193 ===> Delete files with inode number specified by [inode-number] under current directory ===> 0.36011312444994353
nl2bash_11194 ===> Delete history entry at offset, defined in first argument of executed script ===> 0.36011312444994353
nl2bash_3296 ===> Find all files named `file1' starting from / ===> 0.35983869159231485
nl2bash_4208 ===> Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile' ===> 0.3588511947232587
nl2bash_4059 ===> Find all files/directories under mnt/naspath without descending into .snapshot directory, calculate the total size and redirect the result to /tmp/size.log file ===> 0.3521577961114512
nl2bash_14255 ===> List all cron jobs for current user. ===> 0.3483795867917849
nl2bash_5635 ===> Prints folder path where $mystring file is located. ===> 0.34228697400011465
nl2bash_5636 ===> Prints folder where current script is located ===> 0.34228697400011465
nl2bash_1624 ===> Run two processes, cmd1 whose output is fed as input to cmd2: cmd1 is immune to all SIGHUP (hangup) signals sent to it, but cmd2 is not. ===> 0.3416538250806823
nl2bash_11394 ===> Remove all directories called "test" from the /path/to/dir directory tree ===> 0.34077821397196656
nl2bash_13908 ===> Counts lines in file 'filename' ignoring empty lines and lines with spaces only. ===> 0.33765334338552583
