nl_14084 ===> Check whether "/full/path" is a mount point with no output and using the exit code ===> nl2bash
nl2bash_3504 ===> Find all files under current directory and print their md5 sums ===> 0.5356440991627552
nl2bash_1394 ===> Execute "1" and write output to standard output and file "${LOG_FILE}" ===> 0.512195226866143
nl2bash_2244 ===> Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory ===> 0.5033990100596585
nl2bash_3282 ===> Find all files named 'aaa.txt' under current directory tree and display their contents ===> 0.4985917441929053
nl2bash_1363 ===> Prints process tree of a process having id $mypid, with command options and process id number. ===> 0.49810484404499134
nl2bash_11805 ===> delete what was typed in the command line and run "pwd" when button "\e[24~" ===> 0.4978808380035152
nl2bash_10328 ===> Write the output of "input_prog" to standard output and error on console and as input to command "my_editor" ===> 0.497550363897588
nl2bash_12979 ===> Creates detached tmux session named 'cf'. ===> 0.4971962190955778
nl2bash_7836 ===> find all the symbolic links in the current folder and check the file type and display the names of files which are broken ===> 0.49291237130740784
nl2bash_10023 ===> Print user and group information of all users logged in ===> 0.4924795228087368
nl2bash_10444 ===> Send SIGKILL signal to process ID 16085, killing it instantly. ===> 0.48983231398730576
nl2bash_5701 ===> Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them. ===> 0.48141730943924094
nl2bash_7207 ===> find all the configuration files in the files system and donot display any errors. ===> 0.480279724369008
nl2bash_10946 ===> Allow all users to execute "myscript.sh" ===> 0.4798183345339038
so_29707377 ===> Simple way to run java classfile (Terminal) ===> 0.47702988226335463
nl2bash_14084 ===> Check whether "/full/path" is a mount point with no output and using the exit code ===> 0.4741041623948846
nl2bash_14083 ===> Check whether "/full/path" is a mount point with no output and using the exit code ===> 0.4741041623948846
nl2bash_1372 ===> Process all files matching pattern 'file*' and residing in the xargstest/ directory tree with script `myscript.sh' ===> 0.4707007133193198
nl2bash_9738 ===> Print the current working directory and the base name of "$1" ===> 0.4680806915938657
nl2bash_13805 ===> Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry' ===> 0.4526191627439119
nl2bash_9427 ===> Print common files of directory "1" and "2" ===> 0.4521306649575001
nl2bash_9200 ===> Print "new.txt" with line numbers prepended and line 2 or any line containing "2" deleted ===> 0.4473502022411845
nl2bash_1664 ===> download contents from "https://www.npmjs.com/install.sh" and execute ===> 0.44012699270160377
nl2bash_1548 ===> Print PID and user of processes running ssh or sshd and replace sequential spaces with a single space ===> 0.43896562824750085
nl2bash_13866 ===> Counts all files in a DIR_NAME folder and subfolders. ===> 0.43254880615197094
nl2bash_1377 ===> Processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. ===> 0.43082860663871003
nl2bash_5353 ===> Find the passwd file in the current directory and one level down ===> 0.4296838684934408
nl2bash_1530 ===> From another terminal, detach process $PID from its terminal and run it in the background. ===> 0.4287613115458705
nl2bash_6070 ===> Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one. ===> 0.42754985356223396
nl2bash_1366 ===> Prints process tree of user 'user' processes. ===> 0.42678737374604964
nl2bash_8650 ===> search for the word hello in all the text files in the temp folder and delete them ===> 0.42650052795694315
nl2bash_9266 ===> Print a count of duplicate lines in "filename" ===> 0.42629500038992385
nl2bash_12987 ===> Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable. ===> 0.4223465030903971
nl2bash_12982 ===> Creates file with random 10-byte size content. ===> 0.4221962190955778
nl2bash_6557 ===> Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user. ===> 0.4212220836556488
nl2bash_9854 ===> Print the list of .txt files under and below the current directory ===> 0.4208418327349397
nl2bash_11512 ===> Remove empty directories from the current directory tree ===> 0.4203901076787817
nl2bash_6578 ===> Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file while sending anything printed to stderr to /dev/null. ===> 0.4178894979312657
nl2bash_7758 ===> find all the perl files in /var/www ( case insensitive search ) ===> 0.4141774602930522
nl2bash_112 ===> Get the disk space used by all *.txt (case insensitive) files/directories under /path directory ===> 0.41394034452789014
nl2bash_10394 ===> prints the last occurrence of text between two tags ===> 0.4137367457929574
nl2bash_11057 ===> Delete all empty files in the current directory tree ===> 0.4107770667761317
nl2bash_1531 ===> From another terminal, detach process $PID from its terminal and run it in the background. ===> 0.4107714532813731
nl2bash_10122 ===> Prints total number of lines of all *.m and *.h files in a current folder and subfolders. ===> 0.4099069604122998
nl2bash_12134 ===> Change permissions of all files ending in ".php" under the current directory to 755 and print a count of modified files ===> 0.40875873555241404
nl2bash_11101 ===> Delete all files with '.old' extension under current directory tree ===> 0.40857710061333263
nl2bash_12080 ===> Change every file under "/var/www/html/" to have permissions 664 ===> 0.40840802609865856
nl2bash_1414 ===> Execute "chown -R ask:ask /www/askapache.com" in the background on server "askapache" ===> 0.4066734806208522
nl2bash_9948 ===> Print the path composed of the current working directory and the directory containing "$0" ===> 0.4065527180142511
nl2bash_1376 ===> Process each file beginning with "file" in the current directory as an argument to "bash script.sh" ===> 0.40582860663871007
