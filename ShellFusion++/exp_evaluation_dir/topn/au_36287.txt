nl_8270 ===> search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago ===> nl2bash
nl2bash_6994 ===> find all files with the first letter “e” or “f” and last one x in /usr/bin directory: ===> 0.42475742944985906
nl2bash_2001 ===> Find .jpg files owned by user daniel in the current directory and its sub-directories. ===> 0.4162396712105505
nl2bash_2077 ===> Find all * * regular files under current directory ===> 0.40698426170538904
nl2bash_1965 ===> Find *.html files in the /usr/src/linux directory tree ===> 0.4032579145900643
nl2bash_2338 ===> Find all *.txt files on the vfat file system ===> 0.40071030686223763
nl2bash_5835 ===> Search all regular files in the current directory for "example" ===> 0.39787518366056185
nl2bash_1939 ===> Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ===> 0.3967227291007418
nl2bash_6681 ===> Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x). ===> 0.395040788807798
nl2bash_2228 ===> Find all *.mp3 files under current directory and run mplayer with these files ===> 0.3890654563262751
nl2bash_5893 ===> Search for "www.athabasca" in all files under current directory ===> 0.38555430190818285
nl2bash_2257 ===> Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION} ===> 0.37730069235626185
nl2bash_8271 ===> search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file ===> 0.3751903780044684
nl2bash_2229 ===> Find all *.mp3 files under current directory and run mplayer with these files ===> 0.374850237494465
nl2bash_5885 ===> Search for "pattern" in "file" and join each line by a space ===> 0.37480783529167244
nl2bash_5840 ===> Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict' ===> 0.36989287479632776
nl2bash_5754 ===> Recursively search for all regular files below directory "dir1" in currentd directory, and output the name of each, without any containing directories. ===> 0.36921038609848966
nl2bash_2080 ===> Find all *.$input_file_type files/directories under $source_dir ===> 0.3673396037622957
nl2bash_2190 ===> Find all *.jpg files under current directory and print only duplicate names ===> 0.3669166624815692
nl2bash_6800 ===> find all directories with the name "lib64" in the usr folder and replace space with ':' ===> 0.3650441023690253
nl2bash_2253 ===> Find all *.p[lm] files/directories under current directory ===> 0.3645171194170842
nl2bash_3493 ===> Find all files under current directory and count the output line number ===> 0.3636393776751822
nl2bash_2226 ===> Find all *.mp3 files in file system with more than 10MB and delete them using rm command ===> 0.3588770867436416
ul_220030 ===> Faster way to enter in command mode with vi mode in the shell ===> 0.35580516304459686
nl2bash_2070 ===> Find all $tofind* files/directories under $parentdir ===> 0.35381023366234643
nl2bash_9129 ===> Mount "vfat" filesystem "/dev/sda7" to "/mnt/my_partition" with read and write permission, umask of files and directories set to "0000", and save in fstab and allow ordinary users to mount ===> 0.3493294984085946
nl2bash_5770 ===> Search  in current directory downwards all files which  have not been accessed since last 7 days ===> 0.34889159181039575
nl2bash_5816 ===> Search all files in the current directory tree that are named "whatever" for "whatever" ===> 0.33042401415137795
nl2bash_2083 ===> Find all *.* files not within .git directory and run $SED_CMD -i "s/$1/$2/g" on each of them ===> 0.32922780764404125
nl2bash_9126 ===> Login to a bash shell on localhost via ssh and print the bash version ===> 0.3243294984085946
nl2bash_6680 ===> Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x). ===> 0.32004078880779796
nl2bash_2319 ===> Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago and show a message if no files were found ===> 0.31574801317686463
nl2bash_2318 ===> Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago ===> 0.3080847095220206
nl2bash_4176 ===> Find all of the character devices on the system ===> 0.306327427805089
nl2bash_10162 ===> Sort "file1.txt" and output the result to "file1.txt" ===> 0.3034738265638809
nl2bash_5852 ===> Search directories /res/values-en-rUS and /res/xml for XML files ===> 0.3007103956787367
nl2bash_3494 ===> Find all files under current directory and count the output line number ===> 0.2956004175871364
nl2bash_2126 ===> Find all *.dbf files/directories in entire file system discarding errors and print their sorted and unique parent directory paths ===> 0.28464427939938486
nl2bash_6704 ===> find  files which  full path name is /tmp/foo/bar under foo directory and print ===> 0.2844846286871425
nl2bash_7267 ===> find all the directories starting with the name "someNamePrefix" which have not been modified in the last 10 days and force delete them ===> 0.2777213223103452
nl2bash_8409 ===> search for all the mp3 files in the file system and move them to the folder /mnt/mp3 ===> 0.27770376034184263
nl2bash_8270 ===> search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago ===> 0.2757196719165431
nl2bash_9127 ===> Login to a bash shell on localhost via ssh and print the bash version ===> 0.27432949840859455
nl2bash_2729 ===> Find all directories named "D" in the current directory tree and print their parents ===> 0.2588224805780559
nl2bash_5847 ===> Search all variables and their values for "NAME" ===> 0.2184368046052167
nl2bash_9128 ===> Mount "vfat" filesystem "/dev/sda7" to "/mnt/my_partition" with read and write permission, umask of files and directories set to "0000", and save in fstab and allow ordinary users to mount ===> 0.1993294984085946
nl2bash_7333 ===> find all the files from root folder which have nogroup or noname and dispaly their details. ===> 0.17198802512394873
