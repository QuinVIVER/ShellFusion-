nl_13490 ===> Store N symbols of input into variable 'buffer' ===> nl2bash
nl2bash_6194 ===> Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree ===> 0.3393436205028266
nl2bash_13657 ===> Calculate MD5 sums for all regular files in the current directory tree and save the result as "MD5SUMS" ===> 0.31836431745307703
nl2bash_10873 ===> Rename file extension '.andnav' to '.tile' for all files/directories under current directory tree ===> 0.29943826415732
nl2bash_12246 ===> Change user ownership to `foo' for files with UID=1005 ===> 0.2869699332184342
nl2bash_10874 ===> Rename file file.txt.123456 to file.txt ===> 0.27943826415732
nl2bash_1152 ===> display all the text files in current folder and save the output to a file ===> 0.27561557985135915
nl2bash_6310 ===> Search the /tmp directory tree for files owned by user `ian' ===> 0.2750693471166057
nl2bash_10878 ===> Rename recursively all files in the current directory tree that are called "article.xml" to "001_article.xml" ===> 0.26895913050567166
so_22153137 ===> Stop processing sourced file and continue ===> 0.2663928163048811
nl2bash_12893 ===> Create an empty file called "emptyfile.c" ===> 0.26580867456190693
nl2bash_12260 ===> Changes group ownership of /sys/class/gpio/export and /sys/class/gpio/unexport to 'gpio'. ===> 0.26028145906228706
nl2bash_6238 ===> Search the *.pdf files from directory tree PDFs/ for text "perry sound", ignoring the case, and print the list of matched files ===> 0.2595695526247994
nl2bash_11092 ===> Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago ===> 0.25893570824811274
nl2bash_7692 ===> find all the links in the current directory and print them in each line and display their names. ===> 0.2519371285533887
nl2bash_4660 ===> Find and remove multiple *.txt files ===> 0.24995988039758518
nl2bash_8454 ===> search for all xml files in current folder and display them ===> 0.24702856392807418
nl2bash_7274 ===> find all the directory's from root which have the sticky bit on and display their details. Do not display any errors on the standard output. ===> 0.24476785953520294
nl2bash_12503 ===> Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'. ===> 0.2402903842046707
nl2bash_5727 ===> Recursively finds last 5 modified files in a directory ===> 0.2360230600799938
nl2bash_6239 ===> Search the *.pdf files from directory tree PDFs/ for text "perry sound", ignoring the case, and print the list of matched files ===> 0.23525599994683888
nl2bash_8046 ===> find md5sum of string 'hi' ===> 0.22877214649391964
nl2bash_7381 ===> find all the files in the current directory which have been modified in the last 24 hours ===> 0.22856782320486638
nl2bash_7382 ===> find all the files in the current directory which have been modified in the last 30 days and display the contents. ===> 0.22856782320486638
nl2bash_13662 ===> Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE ===> 0.22424170198229842
nl2bash_8564 ===> search for the file "program.c" in the entire file system and save the errors to the file errors.txt ===> 0.22251780109239294
nl2bash_7338 ===> find all the files in current directory of size greater than 2GB. ===> 0.2211185882140314
nl2bash_11091 ===> Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago ===> 0.21589618787123815
nl2bash_12892 ===> Create an empty file (or update timestamp of file) specified by variable "correctFilePathAndName" ===> 0.21580867456190694
nl2bash_12891 ===> Create an empty file 'last.check' in directory pointed by variable "log_dir", with specified timestamp. ===> 0.21580867456190694
nl2bash_13490 ===> Store N symbols of input into variable 'buffer' ===> 0.21409292869869512
nl2bash_12393 ===> Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory ===> 0.21355685300682253
nl2bash_7845 ===> find all the symbolic links in the current folder that are broken ===> 0.20665556938818097
nl2bash_143 ===> Gets IP addresses of all active network interfaces. ===> 0.20450778809759185
nl2bash_10755 ===> recursively copy files by file extension, preserving directory structure ===> 0.20428706756917347
nl2bash_12390 ===> Move all lines starting with "Ca" to the beginning of the file ===> 0.19807752216690042
nl2bash_12394 ===> Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory ===> 0.1964139958639654
nl2bash_10875 ===> Rename file with inode number 31467125 to new_name.html ===> 0.19215134793724725
nl2bash_12783 ===> Create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmpfile' ===> 0.19206040043884637
nl2bash_10756 ===> remote copy all text files from one location to another ===> 0.17928706756917345
nl2bash_13663 ===> Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE ===> 0.17766414498133948
nl2bash_123 ===> Get the sizes (and total size) of all files under dir1 directory ===> 0.17649847530282625
nl2bash_13171 ===> create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search ===> 0.17340540057502635
nl2bash_6730 ===> find CSS files, omitting results containing "CVS" ===> 0.1697729677117753
nl2bash_13168 ===> create a tar of all png & jpg images in the current folder ===> 0.16397338780395265
nl2bash_5735 ===> Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings. ===> 0.16300570096329686
nl2bash_13169 ===> create a tar.gz compress file with all the jpg files in the entire file system ===> 0.15958896803924771
nl2bash_13170 ===> create a zip file of all the files in some directory ===> 0.15565308072819128
nl2bash_11340 ===> Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields ===> 0.1540775818962041
nl2bash_11341 ===> Remove all "CVS" directories from the current directory tree, ignoring the case ===> 0.1540775818962041
nl2bash_2203 ===> Find all *.md files in entire file system and convert them to HTML (*.html) files ===> 0.15022152582061898
