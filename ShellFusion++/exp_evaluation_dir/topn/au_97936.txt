nl_6626 ===> Search the regular files of the current directory tree for string "foo" ===> nl2bash
nl2bash_4804 ===> Find files and directories that are at least seven levels of nesting in the directory /usr/src ===> 0.4842506437737955
nl2bash_7888 ===> find all the text files that have modified in the last 2 days and not modified today ===> 0.4779134531420622
nl2bash_4556 ===> Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory ===> 0.45937884789188266
nl2bash_6618 ===> Search the home directory tree for regular files modified yesterday ===> 0.42742337251798246
nl2bash_3922 ===> Find all files/directories under /home/feeds/data directory ===> 0.42332895317227975
nl2bash_4242 ===> Find all regular files in the current directory and search them for "example" ===> 0.41293822752863496
nl2bash_5529 ===> Finds users with X session in system and puts the result into USERS variable ===> 0.4091849053054818
nl2bash_2367 ===> Find all *.txt files/directories under current directory and execute process for each of them ===> 0.40630421558602414
nl2bash_4587 ===> Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree ===> 0.3971503802282056
nl2bash_2726 ===> Find all directories named "D" in the "A" directory tree ===> 0.39677791075317903
nl2bash_2995 ===> Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time ===> 0.3853286325939116
nl2bash_5528 ===> Finds users with X session in system and puts the result into USERS variable ===> 0.3841849053054818
nl2bash_2701 ===> Find all directories in maximum 2 levels down the /tmp/test directory ===> 0.3802027761015202
nl2bash_4647 ===> Find and print the names of all files found in the current directory and all of its sub-directories. ===> 0.37354432566948065
nl2bash_6626 ===> Search the regular files of the current directory tree for string "foo" ===> 0.36300090097978593
nl2bash_6983 ===> find all files under the current directory, redirecting error messages to the output and filtering any lines containing the text "Permission denied", writing the remaining output to some_file ===> 0.3555302303326541
nl2bash_6135 ===> Search for line 111 in file "active_record.rb" with 2 lines of context ===> 0.35081671216430776
nl2bash_3923 ===> Find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago ===> 0.34832895317227974
nl2bash_6625 ===> Search the regular files from directory tree 'folder_name' for "your_text" ===> 0.34500428617500045
nl2bash_6627 ===> Search the regular files of the current directory tree for string "stringYouWannaFind", ignoring the case ===> 0.34500428617500045
nl2bash_4588 ===> Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree ===> 0.33978268786761656
nl2bash_6600 ===> Search the files under and below /directory/containing/files for "text to search" ===> 0.3366216204074993
nl2bash_2990 ===> Find all file names in the current directory tree that begin with "headdump" and write them to file `delete.txt' ===> 0.33455133053521435
nl2bash_7887 ===> find all the text files that have modified in the last 2 days and not modified today ===> 0.3279134531420622
nl2bash_2703 ===> Find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes ===> 0.31894246241444846
nl2bash_4648 ===> Find and print the names of all files found in the current directory and all of its sub-directories. ===> 0.3139927409954274
so_29688932 ===> Mac terminal -bash command not found? ===> 0.31278673875605
nl2bash_5149 ===> Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path ===> 0.3120909846238521
nl2bash_4679 ===> Find and show all files on the system that are larger than 900 MB ===> 0.3109260409662944
nl2bash_6717 ===> find *.gif files under the currently directory and sub-directories and list them using the ls command ===> 0.30837653732446035
nl2bash_6987 ===> find all files which name contain 'foo' and path is not dir1 or dir2 ===> 0.2937915148729281
nl2bash_6986 ===> find all files which name contain 'foo' and path is not dir1 or dir2 ===> 0.2937915148729281
nl2bash_13820 ===> Count the number of lines in "myfile.txt" ===> 0.2775726988366546
nl2bash_8503 ===> search for regular files in the current folder which path is not  "./.*" and not "./*/.*" ===> 0.27308230193164185
