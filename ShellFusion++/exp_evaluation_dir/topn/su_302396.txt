nl_1895 ===> add read permission to others for the files in the current folder having the name "rc.conf" in their name. ===> nl2bash
nl2bash_2649 ===> Find all SUID set files under current directory and show a few lines of output from the beginning ===> 0.4093454826568248
nl2bash_5281 ===> Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in "*/systemctl" ===> 0.39291608491199437
nl2bash_11849 ===> remove all the core files in the home folder ===> 0.39114393067579367
nl2bash_11848 ===> remove all the core files in the current directory ===> 0.39048962195501313
nl2bash_11846 ===> remove all the DS_Store files in the current directory ===> 0.39048962195501313
nl2bash_531 ===> Show file type information for all regular files under '/home' directory tree ===> 0.38827034711808583
nl2bash_532 ===> Show file type information for files in /usr/bin ===> 0.38827034711808583
nl2bash_4376 ===> Find all regular files under and below dir/ and change their names from UTF8 to the ASCII/TRANSLIT encoding ===> 0.3876193564307663
nl2bash_1873 ===> Puts the job 1 in the background. ===> 0.38649650379991185
nl2bash_1973 ===> Find *.java files under current directory and compress them to myfile.tar ===> 0.3852898768078209
nl2bash_1974 ===> Find *.java files under current directory and compress them to myfile.tar ===> 0.3852898768078209
nl2bash_8015 ===> find files with pattern` '*.h' and print comparison between file and /tmp/master directory ===> 0.38296339027077386
nl2bash_4231 ===> Find all regular files in current directory and /home/www directory ===> 0.3824768374819605
nl2bash_2883 ===> Find all directories under current directory and set their permission to 775 ===> 0.38044271557351483
nl2bash_10008 ===> Print unique lines of "a" and "b" ===> 0.3796086441221912
nl2bash_1874 ===> Puts working directory into clipboard, stripping newlines ===> 0.37829686780645344
nl2bash_10304 ===> Write summary of files present only in dir1, and which files differ between dir1 and dir2 to file 'difference1.txt' ===> 0.37702724836957063
nl2bash_1741 ===> Add cron lists from "file1" and "file2" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. ===> 0.3760101659264742
nl2bash_1862 ===> Prints string "0 1 * * * /root/test.sh" to the terminal, and append it to file '/var/spool/cron/root' ===> 0.37584366314578466
nl2bash_1864 ===> Push the current directory path to the dirs stack ===> 0.37584366314578466
nl2bash_2909 ===> Find all directories under minimum 1 level down the current directory and set their permission to 755 ===> 0.3749804077215235
nl2bash_1894 ===> Write "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" to standard output and append to "/etc/apt/sources.list.d/10gen.list" as root ===> 0.3745301400942641
nl2bash_1893 ===> Write "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" to standard output and append to "/etc/apt/sources.list.d/10gen.list" as root ===> 0.374272523999882
nl2bash_13297 ===> Save Java home in variable "JAVA_HOME" ===> 0.37420935602717453
nl2bash_1657 ===> Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results. ===> 0.3721340880421625
nl2bash_1870 ===> Put the absolute directory path to the current script to MY_DIR variable ===> 0.3687009766774049
nl2bash_11850 ===> remove all the core files in the temp file after user confirmation ===> 0.3661439306757937
nl2bash_1292 ===> search in the current folder for all the text files and display their names ===> 0.365791060597054
nl2bash_6294 ===> Search the /path directory tree for files missing g+w and o+w bits ===> 0.3656432625943285
nl2bash_6287 ===> Search the /myfiles directory tree for regular files with at least these permissions: 647 ===> 0.36348606241071013
nl2bash_14403 ===> List all files/directories under current directory ===> 0.3614872549388779
nl2bash_8408 ===> search for all the mp3 files in the current folder and change the character encoding of them to <source-encoding> ===> 0.35852813044736365
nl2bash_10586 ===> Copy all .txt files from the dir/ directory tree along with their parent directories hierarchy ===> 0.35834203709249673
nl2bash_3126 ===> Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable ===> 0.35775313274677545
nl2bash_51 ===> Extract the contents of "Input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences ===> 0.35737328555894793
nl2bash_13860 ===> Count total number of lines in all *.txt file in cuuent directory . ===> 0.35433213550595466
nl2bash_1875 ===> Recursively add ".jpg" to all files in the current directory tree ===> 0.3532968678064535
nl2bash_6355 ===> Search the current directory for PHP files ===> 0.3523837171434925
nl2bash_1742 ===> Add cron lists from "file1" and "file2" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. ===> 0.3510101659264742
nl2bash_1743 ===> Add cron lists from "filename" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. ===> 0.3510101659264742
nl2bash_8774 ===> beginning at the end of the file, prints lines matching /2012/ and exits after first non-matching line ===> 0.3504625691792674
nl2bash_1895 ===> add read permission to others for the files in the current folder having the name "rc.conf" in their name. ===> 0.34953014009426414
nl2bash_201 ===> Take first text field from file 'file.txt' as a domain name and get short A record for this one. ===> 0.3468571506485093
nl2bash_4417 ===> Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments ===> 0.3465041063718972
nl2bash_4804 ===> Find files and directories that are at least seven levels of nesting in the directory /usr/src ===> 0.3463161464572427
nl2bash_1865 ===> Push the directory containing the first existing command found in all arguments to the directory stack. ===> 0.3461436697608686
nl2bash_10007 ===> Print unique lines in sorted file "a.txt" compared to sorted file "b.txt" ===> 0.34536861724454637
nl2bash_1871 ===> Put the output of tty into a variable, then searches the output of "who" for TTY with "/dev/" removed and saves it to "WHOLINE" ===> 0.34370097667740496
nl2bash_4018 ===> Find all files/directories under current directory tree whose names start with 'some_text_2014.08.19' ===> 0.34277039816084864
nl2bash_8196 ===> search for a file in a directory and pass it as an input to the script getLine ===> 0.34022318250333644
