nl_1116 ===> display all the regular/normal files in current folder which have been modified exactly 60 minutes before ===> nl2bash
nl2bash_9963 ===> Print the ping statistics of 4 requests to "www.google.com" ===> 0.4856162678372584
nl2bash_8797 ===> (GNU specific) Set variable LINE to full process info of process currently taking the most CPU time, squeezing multiple consecutive spaces into one. ===> 0.4553510435388191
nl2bash_8944 ===> Set variable "extract_dir" to list of top-level directories and files contained in tar archive specified by variable FILE. ===> 0.45044376559203614
nl2bash_1786 ===> Append "\r" on each line of file "input" and display the printable characters ===> 0.4485429545489835
nl2bash_8942 ===> Set variable "b" to the first word of "a" converted to lowercase. ===> 0.4429505255392313
nl2bash_10017 ===> Print unique lines of sorted file "b" compared with sorted file "a" ===> 0.44212215850251746
nl2bash_13922 ===> Counts number of *.php files in a current folder and subfolders. ===> 0.43033413690565425
nl2bash_8655 ===> search in all the directories of the folder /PROD for JSON files and send them as input to the python file /tmp/test.py ===> 0.4300671050713621
nl2bash_8983 ===> set a crontab to create or update the timestamp of "washere1" in the current directory every minute. ===> 0.42835948082404124
nl2bash_8793 ===> start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found ===> 0.4276054677853407
nl2bash_8925 ===> Set the variable "me" to the name of the running script. ===> 0.427540887762245
nl2bash_8928 ===> Set timestamp of old_file.dat to specified timestamp. ===> 0.4237139358697465
nl2bash_9827 ===> Print the home folder of "$USER_NAME" ===> 0.42287613148743475
nl2bash_9826 ===> Print the home directory of "$username" ===> 0.42287613148743475
nl2bash_13953 ===> Counts total number of lines in a git repository. ===> 0.4216489637674909
nl2bash_8674 ===> search the word "MySearchStr" in all the regular/normal files in the current folder and display the line number and the file name ===> 0.42048759346089937
nl2bash_13954 ===> Counts total number of lines in all file under current folder. ===> 0.41935992467065697
nl2bash_13884 ===> Counts lines in each *.php file, sorted by number of lines, descending. ===> 0.4168247181792025
nl2bash_8773 ===> View the bash manpage, starting with the view positioned at the first occurrence of the expression "BASH_SOURCE". ===> 0.41549078178204657
nl2bash_13883 ===> Counts lines in each *.php file sorted by file path. ===> 0.41023251617217066
nl2bash_9299 ===> Print a list of all files/directories under current directory in myfile.sh file ===> 0.41010868711075665
nl2bash_8678 ===> search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder ===> 0.40928298182837064
nl2bash_8946 ===> Set variable "filename" to only the name of document specified by URL, in this case "pic.jpg" ===> 0.40885821075271633
nl2bash_13934 ===> Counts the number of lines in each *.cs file in a git repository. ===> 0.40797591877507866
nl2bash_13957 ===> Evaluate the output of recursively changing the owner and group of "/data/*" to "mongodb" ===> 0.40762899214919357
nl2bash_8810 ===> Assign permissions 755 to directories in the current directory tree ===> 0.40000182952410046
au_73709 ===> How do I delete all empty directories in a directory from the command line? ===> 0.3997437590902913
nl2bash_13650 ===> Print pathname of a file that is connected to the standard output of the command "yes" ===> 0.398572775208438
nl2bash_1636 ===> Runs programs and prints formatted summary of system resource usage. ===> 0.39785496837094486
nl2bash_9809 ===> Print the full path of command "gcc" ===> 0.3955514068432517
nl2bash_9808 ===> Print the full path of command "cc" ===> 0.3955514068432517
nl2bash_1216 ===> display the contents of all the regular/normal files in the entire file system with the name dummy and discard all the errors ===> 0.39519743599329094
nl2bash_3433 ===> Find all files under /myfiles with 647 permission ===> 0.39371277223448603
nl2bash_3434 ===> Find all files under /myfiles with read-write access for others ===> 0.39371277223448603
nl2bash_9683 ===> Print the base name of the current working directory ===> 0.39292840409343943
nl2bash_9684 ===> Print the base name via grep of the current working directory ===> 0.39292840409343943
nl2bash_1945 ===> Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory ===> 0.3896401370383336
nl2bash_13880 ===> Counts all non-blank lines in the $i file. ===> 0.3890346476082465
nl2bash_13882 ===> Counts lines in each *.cpp, *.c, *.h file. ===> 0.3869635139164135
nl2bash_13924 ===> Counts number of lines returned by curl request. ===> 0.38674537897648703
nl2bash_13881 ===> Counts all top-level files in a current folder. ===> 0.3862883075588229
nl2bash_13940 ===> Counts the number of lines in each file but png|jpg|ico files in a git repository. ===> 0.38607842073840926
nl2bash_8687 ===> this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _ ===> 0.38564046581836886
nl2bash_13889 ===> Counts lines in each of *.php files in a current folder and subfolders and prints total count. ===> 0.38479082064805625
nl2bash_8945 ===> Set variable "extract_dir" to list of top-level directories and files contained in tar archive specified by variable FILE. ===> 0.38385821075271637
nl2bash_2820 ===> Find all directories under /path/to/base/dir and change their permission to 755 ===> 0.3835213920292463
nl2bash_13885 ===> Counts lines in each *.php file. ===> 0.3829805585748091
nl2bash_8785 ===> start 2 sleep processes in the background ===> 0.3825849991194623
nl2bash_1795 ===> Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive ===> 0.3819801819292875
nl2bash_8927 ===> Set timestamp of all PHP files in current directory to date specified. ===> 0.38024518876287605
