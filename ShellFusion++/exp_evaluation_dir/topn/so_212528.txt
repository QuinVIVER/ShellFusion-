nl_10541 ===> Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC ===> nl2bash
nl2bash_11610 ===> Remove the last two components (directories) of $path ===> 0.542633630359653
nl2bash_10984 ===> Export variable "JAVA_HOME" as symlink resolved absolute path of two parent directories above "/usr/bin/javac" ===> 0.5015364511295353
nl2bash_11270 ===> Print content of 'domains.txt' with removed first one of dot-delimited fields ===> 0.4934478169661568
nl2bash_10520 ===> Clone the permissions of "$srcdir" to "$dstdir" ===> 0.47489502150256324
nl2bash_4296 ===> Find all regular files residing in the current directory tree and search them for string "/bin/ksh" ===> 0.4584901343059996
nl2bash_10802 ===> Modify and rewrite 'file' replacing all instances of "foo" with "bar" ===> 0.4516792876984034
nl2bash_7084 ===> find all png images in the current folder and convert the to jpg images. ===> 0.44788425229505413
nl2bash_7774 ===> find all the png files in current folder and pass them as input to the perl script and copy the result files to a folder ===> 0.44356219239472117
nl2bash_4845 ===> Find files in the current directory and below that are 2000 kB in size ===> 0.43780742158031843
nl2bash_10519 ===> Archive "/path/to/copy" to "/path/to/local/storage" on host "host.remoted.from" as user "user" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission ===> 0.43209224164815846
nl2bash_6531 ===> Search the current directory tree for symlinks whose contents match pattern "*sysdep.c" ===> 0.430944534125411
nl2bash_4199 ===> Find all php files in the current directory ===> 0.42777395157091314
nl2bash_6515 ===> Search the current directory tree for regular files that can be read by noone ===> 0.42671556791938015
nl2bash_10541 ===> Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC ===> 0.4170513377491146
nl2bash_10987 ===> Preprocess C++ file 'omnitest.cpp' (resolve all preprocessor directives) and page interactively through the result. ===> 0.4121890179382658
nl2bash_51 ===> Extract the contents of "Input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences ===> 0.411703334810037
nl2bash_6470 ===> Search the current directory tree for files executable by at least someone ===> 0.40677062457767676
nl2bash_11062 ===> Delete all files (files, directories, links, pipes...) named 'core' under current directory ===> 0.40238787633565565
nl2bash_3194 ===> Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder with confirmation ===> 0.3834819840765523
nl2bash_10599 ===> Copy all files in "/mail" to "/home/username" preserving the directory hierarchy and modification times ===> 0.3795864146656217
nl2bash_1609 ===> Run the Java archive "program.jar" in the background and immune to SIGHUP (hangup signals) sent to it. ===> 0.37910906566087416
nl2bash_4518 ===> Find all the files on the system that have been accessed within the last hour ===> 0.3729854578784929
nl2bash_12409 ===> Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits. ===> 0.36950455816623384
nl2bash_12604 ===> change the current working directory to "B" and display all the files in that folder and append the output to the file "tmp.txt" ===> 0.3675757827106241
nl2bash_7097 ===> find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files ===> 0.3636136663451298
nl2bash_7096 ===> find all regex  ".*/[a-f0-9\-]\{36\}\.jpg" files ===> 0.3636136663451298
nl2bash_7103 ===> find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has ===> 0.3636136663451298
nl2bash_11272 ===> Print standard input to standard output line by line, discarding any adjascent duplicate lines. ===> 0.3604304715473847
nl2bash_10986 ===> Preprocess C++ file 'omnitest.cpp' (resolve all preprocessor directives) and page interactively through the result. ===> 0.3604304715473847
nl2bash_12139 ===> Change permissions to 500 for all regular files under and below the current directory ===> 0.36015243186823825
nl2bash_12138 ===> Change permissions to 0755 for all directories in the /path directory tree ===> 0.36015243186823825
nl2bash_10800 ===> Mark variables and function which are modified or created for export to the environment of subsequent commands ===> 0.34986455711161335
nl2bash_10977 ===> same as above example with -exec , in this example with -OK it should ask for confirmation before executing the rm command . that is called user intractive command ===> 0.34644182803878043
nl2bash_897 ===> display all the files ending with ".user" in /var/adm/logs/morelogs/ and excluding all regular files ===> 0.34441396091714627
nl2bash_6194 ===> Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree ===> 0.33635921100360644
nl2bash_4520 ===> Find all the files on the system that have been modified within the last hour ===> 0.334201497698015
nl2bash_11063 ===> Delete all files and directories ===> 0.3273878763356557
nl2bash_561 ===> Show the files or directories in the current directory whose names are not "MyCProgram.c" ===> 0.3197357920308179
nl2bash_6444 ===> Search the current directory tree for executable files and searchable directories ===> 0.3132134113301687
nl2bash_8548 ===> search for the file "file_name" in the folder /path ===> 0.30898661513678727
nl2bash_5524 ===> Finds total lines count of few types of files (*.h and *.cpp) in a current folder and subfolders. ===> 0.306463637807211
nl2bash_7104 ===> find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has ===> 0.28861366634512986
nl2bash_4843 ===> Find files in the /var/log folder which were modified between 60 minutes and 10 minutes ago ===> 0.2878074215803184
nl2bash_4031 ===> Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others ===> 0.28668266656216784
nl2bash_11245 ===> Forcibly removes all files like '*.bak' and '*~' ===> 0.2845778080098529
nl2bash_10803 ===> Modify and rewrite 'file' replacing the first instance of "foo" on each line with "bar" ===> 0.27667928769840333
nl2bash_10985 ===> Parse "file.json" to print JSON "title" entries whose "price" are less than 10 ===> 0.2765364511295353
nl2bash_10801 ===> Modify and rewrite 'file' replacing all instances of "foo" with "bar" ===> 0.27486455711161334
nl2bash_11271 ===> Print last 10 commands in history with the first 7 characters removed ===> 0.2725166702098905
nl2bash_10600 ===> Copy all files in "/mail" to "/home/username" preserving the directory hierarchy and modification times ===> 0.2677225232188633
