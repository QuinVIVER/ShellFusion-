nl_1909 ===> FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines ===> nl2bash
nl2bash_7963 ===> find files in /u/bill directory which are access an 2 to 6 minutes ago ===> 0.5297134047314582
nl2bash_747 ===> display all files in the current folder which do not belong to the user john ===> 0.49601613747312884
nl2bash_7964 ===> find files in /usr directory which are modified after February 1 of the current year ===> 0.4922798806991334
nl2bash_997 ===> display all the files in the file system which are smaller than 20 bytes ===> 0.49166214403136577
nl2bash_8674 ===> search the word "MySearchStr" in all the regular/normal files in the current folder and display the line number and the file name ===> 0.4747138929662654
nl2bash_13883 ===> Counts lines in each *.php file sorted by file path. ===> 0.4679280558209562
nl2bash_7825 ===> find all the regular/normal files in the current folder which have been accessed in the last 1440*24 hours and not modified in 1441*24 hours excluding those which are in the custom sub directory tree ===> 0.46483121996872506
nl2bash_7827 ===> find all the regular/normal files in the folder "myfiles" which have the permission 647. ===> 0.4577666393477632
nl2bash_7909 ===> find all the xml files in the current folder which are present in the pattern text file ===> 0.4487198899347731
nl2bash_2639 ===> Find all SGID set files in the file system ===> 0.4475130528982094
nl2bash_1896 ===> add read,write permissions to all the files in the current folder which have the permission 600 ===> 0.44657405859380156
nl2bash_7953 ===> find files in $HOME ending in "txt" or "html" and case insensitive search for the word "vpn" ===> 0.4406725473175719
nl2bash_1414 ===> Execute "chown -R ask:ask /www/askapache.com" in the background on server "askapache" ===> 0.4393374880614511
nl2bash_13757 ===> Count all the lines of all '*.c' files in current directory recursively ===> 0.4354417026129649
nl2bash_1212 ===> display the contents of all the files in the current folder which start with test ( case insensitive search ) ===> 0.43506922569122025
nl2bash_1213 ===> display the contents of all the files in the current folder which start with test (case insensitive search) ===> 0.43506922569122025
nl2bash_13881 ===> Counts all top-level files in a current folder. ===> 0.43168111360875133
nl2bash_1858 ===> Print appended data in "file" and search for "my_pattern" without buffering ===> 0.42892233788888456
nl2bash_1308 ===> show all files in the current folder that belongs to a specific userid ===> 0.42829348895343566
nl2bash_7959 ===> find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled ===> 0.4249795634047838
nl2bash_13885 ===> Counts lines in each *.php file. ===> 0.4245669623616398
nl2bash_8134 ===> locate large files (> 100 MB) in /home/ for 'cleaning' ===> 0.41969015739256255
nl2bash_9282 ===> Print a hex dump of "$DIREC" as characters ===> 0.41843660773886415
nl2bash_1574 ===> Run 'top' in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file 'output.log' in current directory. ===> 0.41443649391823634
nl2bash_7886 ===> find all the text files present in the current directory excluding the search in certain paths. ===> 0.40897214588937264
nl2bash_13882 ===> Counts lines in each *.cpp, *.c, *.h file. ===> 0.4074628999238258
nl2bash_13435 ===> Save the percentage of packets lost of the 5 packets sent to "$host" in variable "packet_loss" ===> 0.40497145118876177
nl2bash_13884 ===> Counts lines in each *.php file, sorted by number of lines, descending. ===> 0.4033059787161358
nl2bash_2678 ===> Find all directories at level 3 of directory tree $from_dir ===> 0.40253754814973575
nl2bash_7907 ===> find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files ===> 0.40236556331262124
nl2bash_1843 ===> Mathematically add each line in "filename" ===> 0.4014628791183742
nl2bash_1846 ===> Page through the contents of yourFile, adding a $ at the end of each line. ===> 0.39972120591780336
nl2bash_1847 ===> Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment. ===> 0.39972120591780336
nl2bash_1844 ===> Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I. ===> 0.39787981324586036
nl2bash_13880 ===> Counts all non-blank lines in the $i file. ===> 0.39603043238107294
nl2bash_9143 ===> Output all lines in 'file' comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates. ===> 0.3957209450493039
nl2bash_7944 ===> find file end with  '.txt' in current directory. ===> 0.39545783506586
nl2bash_7902 ===> find all the xml files in a directory and pass it as an argument to a jar ===> 0.39240970363316174
nl2bash_1391 ===> Execute "./my_script.sh" every 3 seconds and highlight the differences in successive runs ===> 0.38912207202746485
nl2bash_1156 ===> display all the text files in the current folder and discard all the errors. ===> 0.3885892497352419
nl2bash_7872 ===> find all the text files in the file system and search only in the disk partition of the root. ===> 0.38839105938181007
nl2bash_7841 ===> find all the symbolic links in the current folder and follow to the original file ===> 0.3860728513327799
nl2bash_12568 ===> change owner and group of the directory  $dstdir" to the user and group of the file "$srcdir" ===> 0.3830385396379698
nl2bash_1153 ===> display all the text files in the current folder ===> 0.3826328217021189
nl2bash_1154 ===> display all the text files in the current folder  and do not search in the bin directory ===> 0.3826328217021189
nl2bash_7911 ===> find all the zip files in the current folder and create a tar ball of these zip files ===> 0.3824630683158344
nl2bash_1158 ===> display all the text files in the current folder except readme files ===> 0.38245177857618684
nl2bash_1884 ===> SSH into "$NAME" as user "${USERNAME}" using key file "${KEYDIR}/${KEY}.pem", automatically add the host to list of known hosts and execute "${COMMANDS}" ===> 0.38187188320421495
nl2bash_1883 ===> Recursively add user write permission to all files under "/path/to/git/repo/objects" ===> 0.38187188320421495
nl2bash_8100 ===> find the file "httpd.log" in the entire file system ===> 0.3816825042568418
