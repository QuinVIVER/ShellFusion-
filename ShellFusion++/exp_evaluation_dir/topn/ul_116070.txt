nl_12885 ===> Create a variable FOO_BACKWARDS containing "oof". ===> nl2bash
nl2bash_5450 ===> Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them. ===> 0.4976562645081327
nl2bash_1850 ===> Pipe output of "yes" to "more" and append the first 3 lines to "file" ===> 0.44917707484481073
nl2bash_1775 ===> Add variable 'v' with value '5' to a temporary environment, list this environment using 'less' to interactively view it. ===> 0.43843573645391887
nl2bash_1743 ===> Add cron lists from "filename" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. ===> 0.43780629507038926
nl2bash_9074 ===> Continuously write "UUUUUUUUUUUUUUUUU" without newlines to "/dev/to/overwrite" ===> 0.43756060498753835
nl2bash_9605 ===> Print only common strings in sorted content of files 'file1' and 'file2' ===> 0.43479494103569133
nl2bash_1781 ===> Append " | COUNTRY" to every line in "file" ===> 0.43385902749641986
nl2bash_1865 ===> Push the directory containing the first existing command found in all arguments to the directory stack. ===> 0.42855855058641995
nl2bash_12879 ===> Create a tar archive with all *.java files under the current directory ===> 0.42567728557250456
nl2bash_3614 ===> Find all files under the current directory and copy their permissions to the same file in "../version1" ===> 0.4202854426827405
nl2bash_3940 ===> Find all files/directories under /path/to/files/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks, stat them and apply the sed replacement "s/(.*\|)([0-9]{4})\-([0-9]{2})\-([0-9]{2}) ([0-9]{2})\:([0-9]{2})\:([0-9]{2}\.[0-9]{9}).*/\1\2\3\4\5\6\7/g" on the output ===> 0.4198877038690383
nl2bash_294 ===> Display a count of regular files in each directory at the current level. ===> 0.41367283647754494
nl2bash_2658 ===> Find all `doc.txt' files in the current directory tree printing "found" for each of them ===> 0.4128181976765422
nl2bash_2654 ===> Find all TXT files in the current directory and copy them to directory "$HOME/newdir" ===> 0.40576006150794586
nl2bash_2656 ===> Find all TXT files on the system and copy them to /tmp/txt ===> 0.40576006150794586
nl2bash_3012 ===> Find all files accessed on the 29th of September, 2008, starting from the current directory ===> 0.4023495207095336
nl2bash_8362 ===> search for all the files in the current folder which have spaces, save the output of a file and save the long listing of these files to a log file ===> 0.40097912956512
nl2bash_5277 ===> Find strings with 'Features' in /var/run/dmesg.boot' file ===> 0.39523981496924454
nl2bash_8126 ===> find the type of all the regular/normal files in the current folder ===> 0.3944694057456066
nl2bash_2935 ===> Find all directories with space in their names under current directory and rename them by replacing all spaces with _ ===> 0.3917527579737047
nl2bash_5276 ===> Find string "STRING" in files residing in the current directory tree, case insensitive ===> 0.39044730696668933
nl2bash_1742 ===> Add cron lists from "file1" and "file2" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. ===> 0.3878062950703893
nl2bash_1862 ===> Prints string "0 1 * * * /root/test.sh" to the terminal, and append it to file '/var/spool/cron/root' ===> 0.3846111111192355
nl2bash_1864 ===> Push the current directory path to the dirs stack ===> 0.3846111111192355
nl2bash_1780 ===> Adds execution permissions on a script ./etc/bash_completion within Homebrew home folder path. ===> 0.38385902749641987
nl2bash_1779 ===> Adds %Pathname% to the dirs stack (Windows format). ===> 0.38385902749641987
nl2bash_8331 ===> search for all the files having spaces in the current folder and save the output to the variable founddata ===> 0.38177762659339837
nl2bash_12878 ===> Create a tar archive of files from directory tree "data" ===> 0.38142899453133106
nl2bash_12876 ===> Create a table from '111 22 3\n4 555 66\n' with columns separated by a single space ===> 0.38142899453133106
nl2bash_12877 ===> Create a tar archive of all regular files modified in the last 24 hours ===> 0.38142899453133106
nl2bash_12883 ===> Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch ===> 0.38012515145387515
nl2bash_1868 ===> Pushes to the dirs stack directory path of the current script, or current directory path if executed from bash shell. ===> 0.3775918466840685
nl2bash_3009 ===> Find all filenames ending with .c in the current directory tree ===> 0.37697723307254627
nl2bash_3008 ===> Find all filenames ending with .c in the /usr directory tree ===> 0.37697723307254627
nl2bash_10921 ===> list files in /usr modified after February 1 of the current year ===> 0.3766025960181116
nl2bash_12880 ===> Create a tar file containing all the files in ~/Library folder that contain spaces in their names ===> 0.37567728557250457
nl2bash_1871 ===> Put the output of tty into a variable, then searches the output of "who" for TTY with "/dev/" removed and saves it to "WHOLINE" ===> 0.3720961298362197
nl2bash_1870 ===> Put the absolute directory path to the current script to MY_DIR variable ===> 0.3720961298362197
nl2bash_2792 ===> Find all directories under /directory-path and change their permission to 2755 ===> 0.3690537768827463
nl2bash_8515 ===> search for text files in the directory "/home/user1" and copy them to the directory /home/backup ===> 0.364522180539611
nl2bash_293 ===> Display a character dump of "oldfile" ===> 0.3636728364775449
nl2bash_11877 ===> Archive "/path/to/sfolder" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission ===> 0.36238473590469295
nl2bash_3908 ===> Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents ===> 0.35858158864375766
nl2bash_2655 ===> Find all TXT files on the system and copy them to /tmp/txt ===> 0.35576006150794587
nl2bash_2936 ===> Find all directories with space in their names under current directory and rename them by replacing all spaces with _ ===> 0.3542527579737047
nl2bash_11917 ===> Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours ===> 0.347042422432699
nl2bash_11919 ===> Compress all files in the "$FILE" directory tree that were last modified 30 days ago ===> 0.347042422432699
nl2bash_11918 ===> Compress all files in directory "$PATH_TO_LOGS" that were last modified more than "$SOME_NUMBER_OF_DAYS" days ago ===> 0.347042422432699
nl2bash_3860 ===> Find all files/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree ===> 0.3454643354160405
nl2bash_3859 ===> Find all files/directories that do not contain 'photo' in their names under current directory tree ===> 0.3454643354160405
