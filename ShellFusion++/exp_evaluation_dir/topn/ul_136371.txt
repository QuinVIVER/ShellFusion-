nl_11584 ===> Remove symbolic links and get absolute path of "${the_stuff_you_test}" and save to variable "DIR_PATH" ===> nl2bash
nl2bash_8146 ===> search a url in all regular/normal files in a folder. ===> 0.46423486333804886
nl2bash_13829 ===> Count the number of lines recursively in the current directory ===> 0.3645317567262309
nl2bash_7992 ===> find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.) ===> 0.3480642503106337
nl2bash_13827 ===> Count the number of lines in every regular .rb file in the current directory tree ===> 0.34566423507237287
nl2bash_11351 ===> Remove all *.doc files from the current directory tree ===> 0.31695341436414914
nl2bash_4296 ===> Find all regular files residing in the current directory tree and search them for string "/bin/ksh" ===> 0.3109432575288158
nl2bash_4081 ===> Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely ===> 0.30710660604611906
nl2bash_3524 ===> Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files ===> 0.2980914118954493
nl2bash_13825 ===> Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??' ===> 0.2961670608079161
nl2bash_1586 ===> Run a shell in a named screen session ===> 0.2949499528965268
nl2bash_4750 ===> Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username ===> 0.2884954963907613
nl2bash_11256 ===> List and remove all regular files named "core" under /prog that are larger than 500k ===> 0.2854676196345871
au_431505 ===> How can I list the hard drive and all its partitions including size from terminal? ===> 0.2799020924785547
nl2bash_11350 ===> Remove all *.bak files under current directory ===> 0.2669534143641491
nl2bash_206 ===> Take the section of variable "FILE" between the last slash and the following dot, if any, and store that section in variable "NAME". ===> 0.26523628036711244
nl2bash_11584 ===> Remove symbolic links and get absolute path of "${the_stuff_you_test}" and save to variable "DIR_PATH" ===> 0.2510495479768877
nl2bash_8021 ===> find for a filename with multiple patterns in the current folder ===> 0.23449389401286982
nl2bash_7994 ===> find files in the users home directory and for each one, ask the user to confirm to delete the file. ===> 0.23449389401286982
nl2bash_7989 ===> find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names ===> 0.2284697449399415
