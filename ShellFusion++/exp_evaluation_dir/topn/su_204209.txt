nl_3670 ===> Find all files with name "file.ext" under the current working directory tree and print each full path directory name ===> nl2bash
nl2bash_9251 ===> Print a 2 byte decimal integer from "/dev/random" ===> 0.5209747773475879
nl2bash_9615 ===> Print only printable characters from "/dev/urandom" ===> 0.4963934022850939
nl2bash_62 ===> Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk. ===> 0.48778593145133564
nl2bash_9249 ===> Print NS record for domain 'domain.' from 8.8.8.8 nameserver ===> 0.4503890966112226
nl2bash_9616 ===> Print only second from the end field from slash-separated string in file 'datafile' ===> 0.4463934022850939
nl2bash_9250 ===> Print TXT record with server`s hostname from nameserver 'server' ===> 0.4349550601601787
nl2bash_5554 ===> Locate all files in the current directory and below that have "testfile" in their names regardless of the case ===> 0.4187941141971825
nl2bash_2920 ===> Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last : ===> 0.4068202543189028
nl2bash_9501 ===> Print every 4th line from 10 lines of "y" with line numbers ===> 0.40538516382763723
nl2bash_1353 ===> Prints process tree for the current process with ASCII line drawing characters. ===> 0.4045696737383421
nl2bash_9698 ===> Print the content of file ===> 0.3921522120135227
nl2bash_10441 ===> Send SIGHUP signal to all SSH server processes, causing them to re-read the SSH server configuration. ===> 0.39209045357377004
nl2bash_9671 ===> Print the IP addresses for the current host name ===> 0.3859037732906633
nl2bash_9672 ===> Print the IP addresses of the host name ===> 0.3859037732906633
nl2bash_9673 ===> Print the MD5 message digest of "/path/to/destination/file" ===> 0.3847807961313835
nl2bash_13274 ===> Dump a MySQL database over a compressed SSH tunnel and use it as input to mysql ===> 0.3843379482315723
nl2bash_5527 ===> Finds users with X session in system and puts the result in USERS variable. ===> 0.3840364070210881
nl2bash_10010 ===> Print unique lines of "second-file-sorted.txt" compared to "first-file-sorted.txt" ===> 0.3825351074435077
nl2bash_35 ===> Extract data from HTML table in "mycode.html" ===> 0.38094514011007635
nl2bash_7071 ===> find all normal/regular files in the folder "//path/to/source/Directory" and calculate the md5sum of them and save the output to  file Output.txt ===> 0.3807723559957813
nl2bash_7072 ===> find all normal/regular files in the folder "//path/to/source/Directory" and calculate the md5sum of them and save the output to  file Output.txt ===> 0.37962608249283925
nl2bash_7206 ===> find all the configuration files in the files system and donot display any errors. ===> 0.3787512106945118
nl2bash_14272 ===> List all empty files under the current directory ===> 0.3751312527220467
nl2bash_9480 ===> Print each line in parallel in files "tmp/sample-XXX.tim" and "tmp/sample-XXX.log" ===> 0.3638059355851095
nl2bash_5348 ===> Find the most recently modified files in /path/to/dir and print the modification time followed by a tab and the filename for each file ===> 0.36199661572834574
nl2bash_8871 ===> Set permissions to 2770 for all directories in the current directory tree ===> 0.3604353326079635
nl2bash_9674 ===> Print the PIDs of the current user's instances of "firefox" ===> 0.3597807961313835
nl2bash_10766 ===> Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482. ===> 0.35975090659693487
nl2bash_13275 ===> Dump a MySQL database over a compressed SSH tunnel and use it as input to mysql ===> 0.35933794823157234
nl2bash_10826 ===> Rename "old" to "tmp" ===> 0.3588516948414705
nl2bash_6636 ===> Search the src/ directory recursively for .c and .h files ===> 0.35807520932610637
nl2bash_1351 ===> Kills all child process and process itself having id 24901. ===> 0.3577664717732474
nl2bash_12703 ===> display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to "peter","peter" ===> 0.35682702707334435
nl2bash_9500 ===> Print every 3 characters of standard input as a line ===> 0.35538516382763724
nl2bash_9710 ===> Print the contents of "n" ===> 0.3531989265588534
nl2bash_9709 ===> Print the contents of "my_script.py" ===> 0.3531989265588534
nl2bash_9715 ===> Print the contents of "~/.ssh/config" ===> 0.34867714869323707
nl2bash_9707 ===> Print the contents of "filename" ===> 0.3473064019125567
nl2bash_9374 ===> Print all files in the current directory tree as a comma separated list ===> 0.3472530374055324
nl2bash_9373 ===> Print all files in the current directory as a comma separated list ===> 0.3472530374055324
nl2bash_9712 ===> Print the contents of "order.txt" ===> 0.34624055364564943
nl2bash_9711 ===> Print the contents of "numbers.txt" ===> 0.34624055364564943
nl2bash_9714 ===> Print the contents of "xx.sh" ===> 0.34613276368912443
nl2bash_8055 ===> find regular file named foo.txt under root / directory. ===> 0.34107662452455545
nl2bash_14273 ===> List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page. ===> 0.3376312527220467
nl2bash_9497 ===> Print every 16 bytes of standard input in groups of two followed by a space ===> 0.3359121361479513
nl2bash_9498 ===> Print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20 ===> 0.3359121361479513
nl2bash_7862 ===> find all the text files in the current folder and display their Permissions and size along with their name ===> 0.3335932171327324
nl2bash_9141 ===> Output all lines from file1 except those present in file2, assuming both files are sorted. ===> 0.3292005079355558
nl2bash_9142 ===> Output all lines from file1 except those present in file2. ===> 0.3292005079355558
