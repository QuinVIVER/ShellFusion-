nl_3540 ===> Find all files under current directory excluding the $OUTPUT file, calculate their md5sum with $MD5SUM_OPTIONS options and redirect the result to $OUTPUT ===> nl2bash
nl2bash_6163 ===> Search for the files that are owned by user rooter or by user www-data ===> 0.5419126370068806
nl2bash_12922 ===> Create intermediate directories "x" and "p" as required and create "q" ===> 0.5418239700540317
nl2bash_195 ===> SSH into "server" as user "user" and interpret commands in "/bin/bash" until "EOT" is received ===> 0.5293359521830168
nl2bash_10327 ===> Write the output of "input_prog" to standard output and error on console and as input to command "my_editor" ===> 0.5154588031859528
nl2bash_10278 ===> Write output of "ls -a" to standard output and to "output.file" ===> 0.5145422227924864
nl2bash_13872 ===> Counts all files in a current folder and in subfolders one-level lower, and sort folder list by number of files within. ===> 0.506937843048574
nl2bash_10384 ===> print top 10 largest files and directories ===> 0.49582349704673
nl2bash_13923 ===> Counts number of *.php files in a current folder and subfolders. ===> 0.4957235727606618
nl2bash_13763 ===> Count all the mp3 files in the music user's home and subdirs. ===> 0.4936196978280069
nl2bash_10284 ===> Write output of "ls -lR /" to standard output and to "output.file" ===> 0.4901356931525958
nl2bash_1435 ===> Execute "myscript.rb" with the first argument as the current host name and the second "file.txt" ===> 0.48898623196455904
nl2bash_9150 ===> Output line number and lines 200000000 through 200000005 from the infinite input of "y" ===> 0.48817000839918995
nl2bash_13375 ===> Save the current working directory and the directory name of the current script to variable "DIR" ===> 0.48774476618045015
nl2bash_11458 ===> Remove all files/directories in the current directory without '.git' and '.gitignore' ===> 0.4858374062875157
nl2bash_11016 ===> Delete all 'restore.php' files in /var/www and 3 levels below ===> 0.48023274169764163
nl2bash_10250 ===> Write differences between files "file1" and "file2" to "file3". ===> 0.47838553489475877
nl2bash_13242 ===> force create hard link between $GIT_DIR/../apresentacao/apresentacao.pdf and $GIT_DIR/../capa/apresentacao.pdf ===> 0.4748349876116167
nl2bash_3075 ===> Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name ===> 0.4610907713053831
nl2bash_13869 ===> Counts all files in a current folder and in subfolders one-level lower and sorts result by number of files within. ===> 0.45687905557732245
nl2bash_6462 ===> Search the current directory tree for files and directories with permissions 775 ===> 0.4466061459675394
nl2bash_5358 ===> Find the passwd file under root and two levels down ===> 0.4429831871308939
nl2bash_14094 ===> Identify CMS version/releases accross all your Drupal websites ===> 0.3776937042494899
nl2bash_10328 ===> Write the output of "input_prog" to standard output and error on console and as input to command "my_editor" ===> 0.3654588031859529
nl2bash_8737 ===> Enables shell options 'expand_aliases', 'extglob', 'xpg_echo'. ===> 0.36525228817324323
nl2bash_13217 ===> create directory es if it is not exist and create direcoty LC_MESSAGES ===> 0.35591092595640894
nl2bash_14127 ===> Clean up the output of "unzip -l" and print only the "jar" files ===> 0.35323581006513105
nl2bash_13200 ===> create directory /etc/cron.15sec ===> 0.3514312105001067
nl2bash_12465 ===> Recursively change the owner and group of all files in the current directory to "andrewr" ===> 0.348034972365469
nl2bash_8732 ===> Enables shell option 'nocaseglob'. ===> 0.34768485019504747
nl2bash_8738 ===> Enables shell options 'extglob' and 'progcomp' ===> 0.34767658448291205
nl2bash_14299 ===> List all files and directories from the current directory tree ===> 0.3468605851046752
nl2bash_1460 ===> Execute 'echo -e "\tHello World"' every 2 seconds ===> 0.34668792020342554
nl2bash_1429 ===> Execute "ls" every 2 seconds ===> 0.338986231964559
nl2bash_9149 ===> Output line number and lines 200000000 through 200000005 from the infinite input of "y" ===> 0.33817000839919
nl2bash_2853 ===> Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other ===> 0.3380193793641344
nl2bash_1239 ===> display the file name and creation month of top 11 files in the entire file system ===> 0.3376922794356173
nl2bash_10428 ===> SSH in server 'server' as user 'user' with X11 forwarding disabled ===> 0.3369335581015711
nl2bash_10427 ===> Request authority info with comments for 'djzah.com' from name server 'ns1.hosangit.com', and pass it to 'script.awk' awk script. ===> 0.3369335581015711
nl2bash_13220 ===> create directory new_dir ===> 0.3354812889755079
nl2bash_2645 ===> Find all SUID files . ===> 0.3338775008457623
nl2bash_11348 ===> Remove all *.bak and *.backup files that were accessed last time more than 30 days ago ===> 0.332333133717867
nl2bash_1351 ===> Kills all child process and process itself having id 24901. ===> 0.33162379341695614
nl2bash_8784 ===> split content of the files *.txt beginning with 1001st line into pieces per 1000 lines ===> 0.3271093653085531
nl2bash_13218 ===> create directory foo ===> 0.32346347895843997
nl2bash_5742 ===> Recursively from current folder searches only files that names match ".*xxx" pattern, ignores binary files and prints file name before every string that contains "my Text to grep". ===> 0.3229086161111776
nl2bash_1142 ===> display all the text files and hidden files in the home folder ===> 0.3222693506741864
nl2bash_5120 ===> Find files/directories that is under group 'root' or have no group and set their group to 'apache' ===> 0.31847598282767015
nl2bash_7152 ===> find all text files in the current directory and display them page wise ===> 0.31660950978170627
nl2bash_676 ===> display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled. ===> 0.31592928536428067
nl2bash_1440 ===> Execute "ps -mo pid,tid,%cpu,psr -p \`pgrep BINARY-NAME\`" every half second displayed with no title and highlighting the differences ===> 0.31341867135189105
