nl_6049 ===> Search for filenames matching "android" in the current directory and number the output ===> nl2bash
nl2bash_8415 ===> search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size. ===> 0.47359038930572644
nl2bash_5821 ===> Search all files in the current directory tree, except *.html and *.svn*, for "SearchString" ===> 0.4552495120701782
nl2bash_5999 ===> Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory. ===> 0.4511499076490094
nl2bash_6000 ===> Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory. ===> 0.4432031762829778
nl2bash_6003 ===> Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory. ===> 0.41413234865080006
nl2bash_6178 ===> Search for the regex $greppattern in all files with '.c' or '.h' extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines ===> 0.41254551942260564
nl2bash_6002 ===> Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory. ===> 0.29883669871146656
nl2bash_8149 ===> search all html files in the current folder and remove all the empty lines ===> 0.2885203314184318
au_154063 ===> How do I reinstall the default (non-proprietary) display drivers? ===> 0.28276000585512207
nl2bash_8354 ===> search for all the files in the current folder and sort them in the order of their depth and display the file names ===> 0.281770934896013
nl2bash_4049 ===> Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them ===> 0.28040154415255736
nl2bash_6670 ===> Searches for 'something' in a large file and prints the matching line ===> 0.2776541222658354
nl2bash_6049 ===> Search for filenames matching "android" in the current directory and number the output ===> 0.2765784195441445
nl2bash_7285 ===> find all the empty regular/normal files in the current folder and delete them ===> 0.2734209198255044
nl2bash_11608 ===> Remove the last line from "$file" without reading the whole file or rewriting anything ===> 0.2671039269200349
nl2bash_4051 ===> Find all files/directories under maximum 1 level down the current directory and print their inode numbers and names ===> 0.25584443920515565
nl2bash_6419 ===> Search the current directory tree for .log files containing the string "The SAS System" on the first line ===> 0.25201130947233924
nl2bash_6418 ===> Search the current directory tree for .aux files ===> 0.25201130947233924
nl2bash_4389 ===> Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files ===> 0.249126575197474
nl2bash_6052 ===> Search for files bigger than 10M ===> 0.24273699737448684
nl2bash_5998 ===> Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory. ===> 0.2373688536058894
nl2bash_6135 ===> Search for line 111 in file "active_record.rb" with 2 lines of context ===> 0.23055190024775754
nl2bash_6311 ===> Search the /tmp tree for files between 10kb and 20kb ===> 0.22907489221566818
nl2bash_6984 ===> find all files under the current directory, redirecting error messages to the output and filtering any lines containing the text "Permission denied", writing the remaining output to some_file ===> 0.22588762780545935
nl2bash_5927 ===> Search for 'example' in all regular files from the current directory tree ===> 0.21234754571023817
nl2bash_2122 ===> Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths ===> 0.2033181729318692
nl2bash_3883 ===> Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \".*/$now.*\" (where $now is a variable) and save the output in file $FILE_LIST ===> 0.20210169354119845
nl2bash_22 ===> Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*' ===> 0.20109358631890112
nl2bash_6993 ===> find all files with pattern` '*song*abc2009*.jpg' and replace "abc2009" with "def2010" ===> 0.19413434564577825
nl2bash_4233 ===> Find all regular files in minimum 1 level down the $dir directory ===> 0.19212243678040047
nl2bash_7789 ===> find all the regular files in a folder which do not start with the word find and assign the output to a variable ===> 0.18772809453766665
nl2bash_6434 ===> Search the current directory tree for all image files ===> 0.18557892635853568
nl2bash_3862 ===> Find all files/directories that start with 'a1a2' and end with 'txt' in their names and move their parent directories to '/home/spenx/dst/' directory ===> 0.18348497958562993
nl2bash_6983 ===> find all files under the current directory, redirecting error messages to the output and filtering any lines containing the text "Permission denied", writing the remaining output to some_file ===> 0.1784349123794639
nl2bash_3655 ===> Find all files whose permission are 777 ===> 0.17736494762249583
nl2bash_11607 ===> Remove the last line from "$file" without reading the whole file or rewriting anything ===> 0.17710392692003488
nl2bash_4050 ===> Find all files/directories under maximum 1 level down the current directory and print their inode numbers and names ===> 0.17330923550934163
nl2bash_3863 ===> Find all files/directories that start with 'a1a2' and end with 'txt' in their names and move their parent directories to '/home/spenx/dst/' directory ===> 0.16901446265199566
nl2bash_8750 ===> Search directory /home/ABCD recursively, starting from one level below, for regular files ===> 0.160175483774249
nl2bash_1077 ===> display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names ===> 0.15241000029065427
nl2bash_4297 ===> Find all regular files starting from / that have permissions 777 ===> 0.14736458826779475
nl2bash_4388 ===> Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files ===> 0.136626575197474
