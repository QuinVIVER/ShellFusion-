nl_8568 ===> search for the file foo in  the current folder and display a long listing of it in sorted order of modification date ===> nl2bash
nl2bash_4656 ===> Find and remove all .txt regular files under the current directory and below ===> 0.49390358771148424
nl2bash_5611 ===> Look for files that have SUID or SGID set ===> 0.49242110383671045
nl2bash_7824 ===> find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000 ===> 0.4785209126753128
nl2bash_10779 ===> As root, edit the cron job list of user "apache" using the editor specified by EDITOR environment variable, or default /usr/bin/editor if this variable is not set. ===> 0.47005883948638355
nl2bash_5334 ===> Find the first file/directory in ... directory and quit ===> 0.46956052947520194
nl2bash_6689 ===> Unzip "bigfile.txt.gz" to standard output, search for patterns in "patterns.txt", and list the unique matches ===> 0.46155057891574947
nl2bash_6657 ===> Search the ~ and `Music' directory trees for .mp3 files ===> 0.457267618243132
nl2bash_5979 ===> Search for *pattern* in and below current directory ===> 0.45690272360998707
nl2bash_6556 ===> Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user. ===> 0.45492860260512324
nl2bash_2547 ===> Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444 ===> 0.45035735924760684
nl2bash_7210 ===> find all the configuration or text files in current directory ===> 0.448767600272386
nl2bash_4640 ===> Find and print the full pathname of all PDF files in the current directory and its sub-directories. ===> 0.444214448576257
nl2bash_8272 ===> search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file ===> 0.3266059132742374
nl2bash_2266 ===> Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths ===> 0.31298749349128696
nl2bash_5884 ===> Search for "mpirun" in all processes owned by the current user ===> 0.3087021369469358
nl2bash_7209 ===> find all the configuration or text files in current directory ===> 0.298767600272386
nl2bash_6690 ===> Unzip "bigfile.txt.gz" to standard output, search for patterns in "patterns.txt", and list the unique matches ===> 0.29851056988142666
nl2bash_13585 ===> Join lines in file "aa" with lines in file "bb" if the lines share a common first word and sort the result numerically ===> 0.2948580370707171
nl2bash_8262 ===> search for all empty directories in the folder /home ===> 0.2822546259211588
nl2bash_8568 ===> search for the file foo in  the current folder and display a long listing of it in sorted order of modification date ===> 0.2808188664073602
nl2bash_5612 ===> Look for files whose names begin with letters a-j ===> 0.27442369151289403
nl2bash_13578 ===> Join comma-separated information in 4 files - files must be sorted. ===> 0.2640197398020134
nl2bash_6013 ===> Search for all files newer than file /tmp/t ===> 0.26365742611805987
nl2bash_13577 ===> Join comma-separated information in 4 files ===> 0.2615195276998456
nl2bash_5885 ===> Search for "pattern" in "file" and join each line by a space ===> 0.26070657008396825
nl2bash_13575 ===> Join comma-separated data in file1 and file2, including extra non-matching information in both files. ===> 0.25511191553542334
nl2bash_8481 ===> search for files in the current folder ending with ".au" and save the output to the file names.txt ===> 0.2542802267854126
nl2bash_6149 ===> Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files ===> 0.25353883376504516
nl2bash_2554 ===> Find all 15MB files in entire file system ===> 0.25326945086081243
nl2bash_7162 ===> find all text files in the folder "FFF" and find the md5sum for them and save the output to a file ===> 0.25315990124058
so_63953280 ===> How to extract simple text and store into a file? ===> 0.2517842019284747
nl2bash_5879 ===> Search for "foo" in every file in the current directory and number the output ===> 0.251548677899293
nl2bash_5333 ===> Find the first file/directory in ... directory and quit ===> 0.24802823554530834
nl2bash_7159 ===> find all text files in the folder "FFF" and find the md5sum for them ===> 0.24795494352305192
nl2bash_5726 ===> Recursively finds in all folders but "./output/*" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string. ===> 0.24727626424692228
nl2bash_6658 ===> Search the ~/Books directory recursively for files named "Waldo" ===> 0.24435752604271815
nl2bash_6659 ===> Search the ~/Books directory recursively for regular files named "Waldo" ===> 0.24435752604271815
nl2bash_5413 ===> Finds PIDs of all running processes, gets executable binary of each process, and prints containing folder of each binary. ===> 0.2439730332097449
nl2bash_10813 ===> Prints ten latest modified files within the current directory. ===> 0.2406018665441983
nl2bash_5880 ===> Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow ===> 0.2389218301409796
nl2bash_13576 ===> Join comma-separated data in file1 and file2, including extra non-matching information in both files. ===> 0.23822019882562007
nl2bash_6078 ===> Search for files that are at least 100MB ===> 0.23648605229514214
nl2bash_936 ===> display all the files in the current folder except those whose name is "PERSONAL" ===> 0.23113091466003954
nl2bash_8663 ===> search in the current folder for the file with the name "test" ===> 0.2288470052684154
nl2bash_4791 ===> Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores ===> 0.2269506637996634
nl2bash_13586 ===> Join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields. ===> 0.2198580370707171
nl2bash_7401 ===> find all the files in the current folder and display them in the sorted order of their name ===> 0.2175375897437355
nl2bash_21 ===> Extract 8 bytes as an unsigned integer that is "$o" offset into "$rpm" ===> 0.2141218477670242
nl2bash_4033 ===> Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar ===> 0.21323454470862585
nl2bash_5878 ===> Search for "foo" in every file in the current directory and number the output ===> 0.2060912447666341
