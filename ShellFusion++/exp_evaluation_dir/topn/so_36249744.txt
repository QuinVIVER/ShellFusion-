nl_1 ===> Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page. ===> nl2bash
nl2bash_1990 ===> Find *2011* files and grep for the string 'From: Ralph' in those files ===> 0.4843379960315977
nl2bash_5815 ===> Search all files in the current directory tree for "SearchString", ignoring .html files and skipping .svn directories ===> 0.46855396888434037
nl2bash_5055 ===> Find files with group write permission and remove the permission ===> 0.4657911894386141
nl2bash_1426 ===> Execute "ls -l" every 2 seconds and highlight the differences in runs ===> 0.4621735772563937
nl2bash_10180 ===> Use "/var/log/wtmp" and print IPs and search for "^msw.*127.0.0.1" ===> 0.4585934199949185
nl2bash_9882 ===> Print the list of files from the "/zu/durchsuchender/Ordner" directory tree whose names begin with "beispieldatei" and which contain string "Beispielinhalt" ===> 0.45672121550474376
au_958384 ===> How do I fix this error installing Laravel? ===> 0.45541894589472126
nl2bash_12816 ===> Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS. ===> 0.45529125946494414
nl2bash_12739 ===> recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user ===> 0.45435352289967335
nl2bash_5187 ===> Find process "terminal" displaying the searching process ===> 0.44821296441846226
nl2bash_3497 ===> Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission ===> 0.4358438572933767
nl2bash_2040 ===> Find a file/directory named modules under current directory and exit with the number of files/directories named 'modules'  found in this path ===> 0.42936790740924097
nl2bash_7267 ===> find all the directories starting with the name "someNamePrefix" which have not been modified in the last 10 days and force delete them ===> 0.42849704640470393
nl2bash_7281 ===> find all the empty files and folders in your system ===> 0.4215697273101213
nl2bash_1942 ===> Find '.git' directories in directory tree /home/madhu/release/workspace ===> 0.41535822260047506
nl2bash_5820 ===> Search all files in the current directory tree, except *.html and *.svn*, for "SearchString" ===> 0.4084871849867563
nl2bash_1975 ===> Find *.java files under current directory and compress them to myfile.tar  (unsafe) ===> 0.4053820337569023
nl2bash_8202 ===> search for a file using name patterns from the list of all the regular files in the folder project and save the output to the file Include. ===> 0.40428098100058363
nl2bash_3491 ===> Find all files under current directory and change their permission to 644 ===> 0.40238946319949553
nl2bash_2175 ===> Find all *.jpg (case-insensitive) files under maximum 2 levels down the temp/images/* paths and run `mogrify -resize 100x100">" -quality 80 -compress JPEG -monitor -strip` with the file paths as arguments ===> 0.3958229546135762
nl2bash_2121 ===> Find all *.dbf files/directories in entire file system ===> 0.39488629153513133
nl2bash_2157 ===> Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format ===> 0.3922112534421468
nl2bash_3492 ===> Find all files under current directory and change their permission to 644 ===> 0.39220793950320376
nl2bash_1948 ===> Find *.NEF files under current directory and take only the filename without extension and run other commands on this    file name. ===> 0.391545206180567
nl2bash_2077 ===> Find all * * regular files under current directory ===> 0.39018822177123047
nl2bash_2635 ===> Find all Read Only files in the file system ===> 0.389998279576218
nl2bash_3608 ===> Find all files under media/ directory and change their permission to 600 ===> 0.38877221553215524
nl2bash_5814 ===> Search all files in the current directory tree for "SearchString", ignoring .html files and skipping .svn directories ===> 0.38646245268014345
nl2bash_2082 ===> Find all *.* directories under /home/feeds/data directory ===> 0.3854154675547806
nl2bash_12853 ===> Create a symbolic link named "${DESTINATION}${file}" to "${TARGET}${file}" ===> 0.3847886669493529
nl2bash_2229 ===> Find all *.mp3 files under current directory and run mplayer with these files ===> 0.376595405683973
nl2bash_1362 ===> Prints process tree of a process having id $mypid, with command options and process id number. ===> 0.3729943305662157
nl2bash_2057 ===> Find all "G*.html" files modified more than 7 days ago in the current directory tree ===> 0.36736233198471957
nl2bash_2166 ===> Find all *.java files under current directory and archive them to myfile.tar ===> 0.366545206180567
nl2bash_12741 ===> recursively change owner of the directory /Users/xxx/Library/Developer/Xcode/Templates and all files to user xxx ===> 0.3644044676673457
nl2bash_1936 ===> Find '*prefs copy' files under /mnt/zip and delete them ensuring white space safety ===> 0.3639165788922897
nl2bash_1999 ===> Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with "autumn". ===> 0.36144562300777905
nl2bash_1 ===> Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page. ===> 0.35801061537834633
nl2bash_12815 ===> Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS. ===> 0.35529125946494416
nl2bash_2052 ===> Find absolute path of command with PID "$pid" ===> 0.3508005606183178
nl2bash_2228 ===> Find all *.mp3 files under current directory and run mplayer with these files ===> 0.34858862325008655
nl2bash_2092 ===> Find all *.c files located under /home and below ===> 0.3382643374163331
nl2bash_5973 ===> Search for 'whatIWantToFind' in all files under current directory ===> 0.3378760876948178
nl2bash_1957 ===> Find *.c and *.sh files ===> 0.3345596278983761
nl2bash_301 ===> Display a long list of all the files/directories named ".todo" under $STORAGEFOLDER directory tree ===> 0.33056348569828825
nl2bash_13632 ===> Merge lines from "file_1" and "file_2" and format the output as a table with tab separators ===> 0.32700390617834874
nl2bash_7498 ===> find all the files in the entire file system which have been modified in the last 48 hours ===> 0.321994038637915
nl2bash_1981 ===> Find *.pdf files in the PDFs directory tree that contain text "perry sound" and "October 26, 2004" ===> 0.31988629153513126
nl2bash_2951 ===> Find all empty files (zero byte files) in your home directory and its sub-directories. ===> 0.319573069460073
nl2bash_7377 ===> find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder. ===> 0.3193348487787562
