{
  "Query": "How to generate random number in Bash?",
  "Answers": [
    {
      "Command": "shuf",
      "MP Summary": "generate random permutations",
      "Most Similar TLDR Task": "Generate random numbers in range",
      "Most Similar TLDR Script": "shuf -i {{1-10}}",
      "Top-3 Similar Questions": [
        "so_54554364: Generate random number except values in bash",
        "so_43462892: How do I generate random numbers in 3 lines - Linux Shell Script",
        "ul_674916: How to create a random complex password in SuSe 12"
      ],
      "Top-3 Scripts": [
        "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(printf %s\\\\n 1 2 4 5 6 7 9)\n\nshuf -n 1 <(printf %s\\\\n 1 2 {4..7} 9)\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)",
        "so_43462892: ",
        "ul_674916: shuf -r -n2 -e '!' '\"' '#' '$' % '&' '(' ')' '*' + , - . / : ';' '<' = '>' '?' @ '[' '\\' ']' '^' _ '{' '|' '}'\n\nset -f\nshuf -r -n2 -e $(sed -e 's/./& /g' <<< '!\"#$%&()*+,-./:;<=>?@[\\]^_{|}' )\n\n#!/bin/bash\n\nset -f\npw=$(shuf -r -n1 -e {A..Z} {a..z})\npw=\"$pw$( { shuf -r -n4 -e {A..Z}; shuf -r -n4 -e {a..z}; shuf -r -n4 -e {0..9}; shuf -r -n2 -e $(sed -e 's/./& /g' <<< '@%+\\/!#$^?:.(){}[]-_.'); } | shuf | tr -d '\\n' )\"\necho \"$pw\""
      ],
      "Explanations about Options": {
        "-r": "output lines can be repeated",
        "-n": "output at most COUNT lines",
        "-e": "treat each ARG as an input line"
      }
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Every 3rd number from 5 to 20",
      "Most Similar TLDR Script": "seq 5 3 20",
      "Top-3 Similar Questions": [
        "so_54554364: Generate random number except values in bash",
        "so_58894982: How to generate a random string in a specific range (bash)",
        "su_1213178: How to generate comma separated numbers in linux shell?"
      ],
      "Top-3 Scripts": [
        "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)",
        "so_58894982: #! /bin/bash\n\nsymbols='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVYXWZ~#$&_+-=/\\'  # Stupid SO: '\ncount_symbols=${#symbols}\n(( length = RANDOM % 6 + 10 ))\npassword=\"\"\nfor i in $(seq 1 $length) ; do\n    password+=${symbols:RANDOM % count_symbols:1}\ndone\necho \"$password\"",
        "su_1213178: $ seq -s, 7 12\n7,8,9,10,11,12"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uuidgen",
      "MP Summary": "create a new UUID value",
      "Most Similar TLDR Task": "Create a random UUID",
      "Most Similar TLDR Script": "uuidgen --random",
      "Top-3 Similar Questions": [
        "ul_500572: Create unique random numbers (UUIDs) in bash",
        "so_56172946: How to generate a uuid in shell script"
      ],
      "Top-3 Scripts": [
        "ul_500572: $ uuidgen\n5528f550-6559-4d61-9054-efb5a16a4de0",
        "so_56172946: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Calculate expression and force number of decimal places to 10",
      "Most Similar TLDR Script": "bc <<< \"scale=10; 5 / 3\"",
      "Top-3 Similar Questions": [
        "so_54554364: Generate random number except values in bash",
        "so_25117833: Generate report in bash"
      ],
      "Top-3 Scripts": [
        "so_54554364: bc <<< \"($RANDOM % 7 * 1.25 + 1.5) / 1\"",
        "so_25117833: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Top-3 Similar Questions": [
        "so_43384770: In bash, how to generate all possible word combination, but in original order?",
        "so_25613429: Generate ID number from a name in bash"
      ],
      "Top-3 Scripts": [
        "so_43384770: ",
        "so_25613429: wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    }
  ]
}