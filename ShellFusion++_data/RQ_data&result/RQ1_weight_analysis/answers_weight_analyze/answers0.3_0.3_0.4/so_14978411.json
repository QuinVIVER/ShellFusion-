{
  "Query": "HTTP POST and GET using cURL in Linux",
  "Answers": [
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send a request with an extra header, using a custom HTTP method",
      "Most Similar TLDR Script": "curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}",
      "Top-3 Similar Questions": [
        "so_63554578: Bash: works at command line but getting 'curl: (1) Protocol \"\"https\" not supported or disabled in libcurl' when using in a script",
        "so_7489453: Unix cURL POST to specific variable using contents from a file",
        "so_53391708: invalid_json in curl using variable in POST"
      ],
      "Top-3 Scripts": [
        "so_63554578: curl -vv \\\n--location \\\n--request GET \\\n\"$curl_combined\" \\\n--header \"Authorization: Bearer ${token}\" \\\n-o \"$k.json\"",
        "so_7489453: curl --data-urlencode @file http://example.com\n\nPOST / HTTP/1.1\nUser-Agent: curl/7.19.5 (i486-pc-linux-gnu) libcurl/7.19.5 OpenSSL/0.9.8g zlib/1.2.3.3 libidn/1.15\nHost: example.com\nAccept: */*\nContent-Length: 90\nContent-Type: application/x-www-form-urlencoded\n\n00%3A0f%3A1f%3A64%3A7d%3Aff%0A00%3A0f%3A1f%3A64%3A7d%3Aff%0A00%3A0f%3A1f%3A64%3A7d%3Aff%0A\n\ncurl -F MACS=@file http://example.com\n\ncurl -F MACS=<file http://example.com",
        "so_53391708: curl -X POST -d \"{\\\"api_token\\\": \\\"test_api\\\", \\\"id\\\": $var}\" 'https://api_test.com/'"
      ],
      "Explanations about Options": {
        "-v": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
        "-X": "(HTTP) Specifies a custom request method to use when communicating with the HTTP\n server. The specified request method will be used instead of the method otherwise\n used (which defaults to GET). Read the HTTP 1.1 specification for details and\n explanations. Common additional HTTP requests include PUT and DELETE, but related\n technologies like WebDAV offers PROPFIND, COPY, MOVE and more.",
        "-F": "(HTTP SMTP IMAP) For HTTP protocol family, this lets curl emulate a filled-in form\n in which a user has pressed the submit button. This causes curl to POST data using\n the Content-Type multipart/form-data according to RFC 2388."
      }
    },
    {
      "Command": "sftp",
      "MP Summary": "OpenSSH secure file transfer",
      "Most Similar TLDR Task": "Get list of files on remote machine",
      "Most Similar TLDR Script": "ls",
      "Top-3 Similar Questions": [
        "su_859382: Error executing sftp with curl"
      ],
      "Top-3 Scripts": [
        "su_859382: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Connect to a remote server using a specific port",
      "Most Similar TLDR Script": "ssh {{username}}@{{remote_host}} -p {{2222}}",
      "Top-3 Similar Questions": [
        "so_21942342: Execute a php file using curl",
        "so_53285645: How to use CURL over SSH and get the file as well as the return value?",
        "su_859382: Error executing sftp with curl"
      ],
      "Top-3 Scripts": [
        "so_21942342: ",
        "so_53285645: #!/bin/bash\n\nCONTENT=$(sshpass -p xxxxxx ssh root@172.17.1.33 \"curl -X POST http://127.0.0.1:10000/status -H 'Content-Type: application/json'\")\n\nRETURN=$?\n\necho \"$RETURN, $CONTENT\"",
        "su_859382: ssh hostname.com"
      ],
      "Explanations about Options": {
        "-X": "Enables X11 forwarding. This can also be specified on a per-host basis in a\n configuration file."
      }
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add/Delete an ip address to an interface",
      "Most Similar TLDR Script": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
      "Top-3 Similar Questions": [
        "so_58330316: How to use variable for URL inside cURL GET command"
      ],
      "Top-3 Scripts": [
        "so_58330316: ....GET '$ip/$index/_stats'....\n\n$ip/$index/_stats\n\n....GET \"$ip/$index/_stats\"....\n\ncurl -k -u $user:$pass -HContent-Type:application/json -X GET '$ip/$index/_stats' | jq '._all.primaries.docs.count'\n\ndocs=\"`curl -k -u $user:$pass -HContent-Type:application/json -X GET \"$ip/$index/_stats\" | jq '._all.primaries.docs.count'`\"\n\ndocs=\"$(curl -k -u $user:$pass -HContent-Type:application/json -X GET \"$ip/$index/_stats\" | jq '._all.primaries.docs.count')\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sshpass",
      "MP Summary": "noninteractive ssh password provider",
      "Most Similar TLDR Task": "Connect to a remote server using the first line of a file as the password, automatically accept unknown ssh keys, and launch a command",
      "Most Similar TLDR Script": "sshpass -f {{file}} ssh -o StrictHostKeyChecking=no {{user}}@{{hostname}} \"{{command}}\"",
      "Top-3 Similar Questions": [
        "so_53285645: How to use CURL over SSH and get the file as well as the return value?"
      ],
      "Top-3 Scripts": [
        "so_53285645: #!/bin/bash\n\nCONTENT=$(sshpass -p xxxxxx ssh root@172.17.1.33 \"curl -X POST http://127.0.0.1:10000/status -H 'Content-Type: application/json'\")\n\nRETURN=$?\n\necho \"$RETURN, $CONTENT\""
      ],
      "Explanations about Options": {}
    }
  ]
}