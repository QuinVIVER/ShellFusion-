{
  "Query": "Sending a simple TCP message using Netcat",
  "Answers": [
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send message to \"testuser\" on terminal \"/dev/tty/5\"",
      "Most Similar TLDR Script": "write {{testuser}} {{tty/5}}",
      "Top-3 Similar Questions": [
        "so_59682559: Send a message to my microcontroller using Netcat - C language",
        "so_2784500: How to send a simple string between two programs using pipes?"
      ],
      "Top-3 Scripts": [
        "so_59682559: fp = popen(\"nc 192.168.4.1 555\", \"w\");\nif (fp == NULL) {\n   /* Handle error */\n   printf(\"Couldn't spawn nc\\n\");\n   exit(1);\n}\nfprintf(fp, \"key\"); // write to netcat's STDIN\npclose(fp);",
        "so_2784500: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nc",
      "MP Summary": "arbitrary TCP and UDP connections and listens",
      "Most Similar TLDR Task": "Listen on a specified port and print any data received",
      "Most Similar TLDR Script": "nc -l {{port}}",
      "Top-3 Similar Questions": [
        "so_21130757: Send Commands to socket using netcat",
        "so_18861961: netcat script to send a message to a marquee device",
        "su_98089: Sending file via netcat"
      ],
      "Top-3 Scripts": [
        "so_21130757: nc 192.168.1.186 9760 < commands.txt\n\nnc 192.168.1.186 9760 <<END\ncommand1\ncommand2\nEND\n\necho command1^\n\ncommand2 > commands.txt\n\nnc 192.168.1.186 9760 < commands.txt\n\necho command1 & echo.command2 | nc 192.168.1.186 9760",
        "so_18861961: #!/bin/bash\n\nwhile read p; do\n   echo \"try $p\"\n   echo \"\\x00\\x00\\x00\\x00\\x00\\x01\\x5A\\x30\\x30\\x02\\x41\\x41\\x1B\\x22\\x61 Test message!\\x04\" | nc -v \"$p\" 3001 2>&1 | tee \"$p.log\" &\ndone < candidateIPs\n\nwait",
        "su_98089: <PRE>\nnc -l -p 1234 -q 1 > something.zip < /dev/null\n</PRE>"
      ],
      "Explanations about Options": {
        "-l": "Listen for an incoming connection rather than initiating a connection to a remote\n host. The destination and port to listen on can be specified either as non-optional\n arguments, or with options -s and -p respectively. Cannot be used together with -x\n or -z. Additionally, any timeouts specified with the -w option are ignored.",
        "-q": "after EOF on stdin, wait the specified number of seconds and then quit. If seconds\n is negative, wait forever (default). Specifying a non-negative seconds implies -N.",
        "-v": "Produce more verbose output.",
        "-p": "Specify the source port nc should use, subject to privilege restrictions and\n availability."
      }
    },
    {
      "Command": "sendmail",
      "MP Summary": "send a message using smtp",
      "Most Similar TLDR Task": "Send a message with the content of message.txt to the mail directory of local user `username`",
      "Most Similar TLDR Script": "sendmail {{username}} < {{message.txt}}",
      "Top-3 Similar Questions": [
        "so_24854116: How to send simple email using Python"
      ],
      "Top-3 Scripts": [
        "so_24854116: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mailx",
      "MP Summary": "send and receive mail",
      "Most Similar TLDR Task": "Send mail with content passed from another command",
      "Most Similar TLDR Script": "echo \"{{content}}\" | mailx -s \"{{subject}}\" {{to_addr}}",
      "Top-3 Similar Questions": [
        "so_8314999: Sending simple message body + file attachment using Linux Mailx"
      ],
      "Top-3 Scripts": [
        "so_8314999: (uuencode output.txt output.txt; echo \"Body of text\") | mailx -s 'Subject' user@domain.com\n\n(echo \"Body of text\"; uuencode output.txt output.txt) | mailx -s 'Subject' user@domain.com"
      ],
      "Explanations about Options": {
        "-s": "Specify subject on command line (only the first argument after the -s flag is used\n as a subject; be careful to quote subjects containing spaces)."
      }
    },
    {
      "Command": "mail",
      "MP Summary": "send and receive mail",
      "Most Similar TLDR Task": "Send a tar.gz file as an attachment",
      "Most Similar TLDR Script": "tar cvzf - {{path/to/directory1 path/to/directory2}} | uuencode {{data.tar.gz}} | mail --subject=\"{{subject line}}\" {{to_user@example.com}}",
      "Top-3 Similar Questions": [
        "so_24854116: How to send simple email using Python"
      ],
      "Top-3 Scripts": [
        "so_24854116: mail()"
      ],
      "Explanations about Options": {}
    }
  ]
}