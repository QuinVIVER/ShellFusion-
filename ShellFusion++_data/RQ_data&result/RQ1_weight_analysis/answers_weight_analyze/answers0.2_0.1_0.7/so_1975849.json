{
  "Query": "How to split a line into words separated by one or more spaces in bash?",
  "Answers": [
    {
      "Command": "fold",
      "MP Summary": "wrap each input line to fit in specified width",
      "Most Similar TLDR Task": "Wrap each line to width \"5\" and break the line at spaces (puts each space separated word in a new line, words with length > 5 are wrapped)",
      "Most Similar TLDR Script": "fold -w5 -s {{file}}",
      "Top-3 Similar Questions": [
        "au_603739: How can I split a line in 2 by words/characters? (Bash) (Regex)",
        "so_29378720: How can I split a line in 2 by words/characters?"
      ],
      "Top-3 Scripts": [
        "au_603739: echo $YOUR_STRING | fold -sw $CHARS\n\nman fold",
        "so_29378720: $ s=\"Hello Hello Hi Hello Hello Hi Hi Hi Hi Hello\"\n$ fold -w $(( ${#s} / 2 + 1)) -s <<< \"$s\"\nHello Hello Hi Hello\nHello Hi Hi Hi Hi Hello\n\nman fold\n\nfold - wrap each input line to fit in specified width\n\n   -s, --spaces\n          break at spaces\n\n   -w, --width=WIDTH\n          use WIDTH columns instead of 80"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "split",
      "MP Summary": "split a file into pieces",
      "Most Similar TLDR Task": "Split a file, each split having 10 lines (except the last split)",
      "Most Similar TLDR Script": "split -l {{10}} {{filename}}",
      "Top-3 Similar Questions": [
        "so_62026693: Bash split command to split line in comma separated values",
        "ul_378547: Split a string by some separator in bash?",
        "so_23852093: Split file by lines"
      ],
      "Top-3 Scripts": [
        "so_62026693: split -d -l 25 large.txt file\n\n$ split -d -l 25 --filter=\"awk '{ printf \\\"%s%s\\\", sep, \\$0 ; sep=\\\",\\\" } END { print \\\"\\\" }' > \\$FILE\" large.txt file\n$ cat file00\nhost1,host2,host3...,host25",
        "ul_378547: perl -E 'say for split quotemeta shift, shift' -- \"$separator\" \"$string\"",
        "so_23852093: split --lines=100 -d -a 3 file ''\n\nman split"
      ],
      "Explanations about Options": {
        "--filter": "write to shell COMMAND; file name is $FILE",
        "-l": "put NUMBER lines/records per output file",
        "-d": "use numeric suffixes starting at 0 , not alphabetic"
      }
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Use standard input to count lines, words and characters (bytes) in that order",
      "Most Similar TLDR Script": "{{find .}} | wc",
      "Top-3 Similar Questions": [
        "so_29309679: How to split words in bash",
        "au_603739: How can I split a line in 2 by words/characters? (Bash) (Regex)"
      ],
      "Top-3 Scripts": [
        "so_29309679: IFS='()'\necho \"$s\" | wc    # 1 line, 1 word and 10 characters\necho $s | wc      # 1 line, 2 words and 9 characters",
        "au_603739: CHARS=$((`echo $YOUR_STRING | wc -c` /2 + 1))"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
      "Top-3 Similar Questions": [
        "so_10520623: How to split one string into multiple variables in bash shell?"
      ],
      "Top-3 Scripts": [
        "so_10520623: var1=$(echo $STR | cut -f1 -d-)\nvar2=$(echo $STR | cut -f2 -d-)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expand",
      "MP Summary": "convert tabs to spaces",
      "Most Similar TLDR Task": "Use a comma separated list of explicit tab positions",
      "Most Similar TLDR Script": "expand -t={{1,4,6}}",
      "Top-3 Similar Questions": [
        "so_37425595: Bash: split on space but not on escaped space"
      ],
      "Top-3 Scripts": [
        "so_37425595: "
      ],
      "Explanations about Options": {}
    }
  ]
}