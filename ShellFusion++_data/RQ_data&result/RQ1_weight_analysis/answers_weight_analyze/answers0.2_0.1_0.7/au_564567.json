{
  "Query": "How to download playlist to mp3 format with youtube-dl?",
  "Answers": [
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Most Similar TLDR Task": "Download a playlist and extract mp3 from it",
      "Most Similar TLDR Script": "youtube-dl -i --extract-audio --audio-format mp3 -o \"%(title)s.%(ext)s\" '{{url to playlist}}'",
      "Top-3 Similar Questions": [
        "ul_272868: Download only format mp4 on youtube-dl",
        "au_1202599: youtube-dl won't download mp3",
        "au_673442: Downloading youtube playlist with youtube-dl, skipping existing files"
      ],
      "Top-3 Scripts": [
        "ul_272868: youtube-dl -F url\n\nyoutube-dl -f 11 url\n\nyoutube-dl -F http://www.youtube.com/watch?v=3JZ_D3ELwOQ\n\nyoutube-dl -f 22 http://www.youtube.com/watch?v=3JZ_D3ELwOQ\n\nyoutube-dl -f 137+140 http://www.youtube.com/watch?v=3JZ_D3ELwOQ",
        "au_1202599: sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl\nsudo chmod a+rx /usr/local/bin/youtube-dl\n\nsudo youtube-dl -U",
        "au_673442: youtube-dl --download-archive downloaded.txt --no-post-overwrites -ciwx --audio-format mp3 -o \"%(title)s.%(ext)s\" <em>[path here]</em>"
      ],
      "Explanations about Options": {
        "-w": "Do not overwrite files",
        "--audio-format": "Specify audio format: \"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or\n \"wav\"; \"best\" by default; No effect without -x",
        "-o": "Output filename template, see the \"OUTPUT TEMPLATE\" for all the info",
        "-c": "Force resume of partially downloaded files. By default, youtube-dl will resume\n downloads if possible.",
        "--download-archive": "Download only videos not listed in the archive file. Record the IDs of all\n downloaded videos in it.",
        "--no-post-overwrites": "Do not overwrite post-processed files; the post-processed files are overwritten by\n default",
        "-i": "Continue on download errors, for example to skip unavailable videos in a playlist"
      }
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Extract the sound from a video and save it as MP3",
      "Most Similar TLDR Script": "ffmpeg -i {{video.mp4}} -vn {{sound}}.mp3",
      "Top-3 Similar Questions": [
        "au_634584: How to download youtube videos as a best quality audio mp3 using youtube-dl",
        "so_41310196: Bash: bash script to download trimmed mp3 from youtube url",
        "au_742083: How to download an entire YouTube playlist as a single mp3 file?"
      ],
      "Top-3 Scripts": [
        "au_634584: -x, --extract-audio                  Convert video files to audio-only files (requires ffmpeg or avconv and ffprobe or avprobe)\n    --audio-format FORMAT            Specify audio format: \"best\", \"aac\", \"vorbis\", \"mp3\", \"m4a\", \"opus\", or \"wav\"; \"best\" by default\n    --audio-quality QUALITY          Specify ffmpeg/avconv audio quality, insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K (default",
        "so_41310196: mytrim() {\n    local downloaded_file\n    youtube-dl --extract-audio --embed-thumbnail --audio-format mp3 -o \"%(title)s.%(ext)s\" $1\n    downloaded_file=$(youtube-dl --get-filename --extract-audio --embed-thumbnail --audio-format mp3 -o \"%(title)s.%(ext)s\" $1)\n    ffmpeg -ss $2 -i \"${downloaded_file}\" -acodec copy -y temp.mp3\n    mv temp.mp3 \"${downloaded_file}\"\n}",
        "au_742083: printf \"file '%s'\\n\" *.mp3 | ffmpeg -f concat -i - -codec copy all.mp3"
      ],
      "Explanations about Options": {
        "-ss": "When used as an input option (before \"-i\"), seeks in this input file to position. Note\n that in most formats it is not possible to seek exactly, so ffmpeg will seek to the\n closest seek point before position. When transcoding and -accurate_seek is enabled\n (the default), this extra segment between the seek point and position will be decoded\n and discarded. When doing stream copy or when -noaccurate_seek is used, it will be\n preserved.",
        "-": "Use a completely zeroed out quantization matrix. This increases PSNR but\n might reduce perception. Use in bogus benchmarks.",
        "-y": "Overwrite output files without asking.",
        "-acodec": "Set the audio codec. This is an alias for \"-codec:a\".",
        "-i": "input file url"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Store a formatted message in a variable (does not work on zsh)",
      "Most Similar TLDR Script": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}",
      "Top-3 Similar Questions": [
        "au_742083: How to download an entire YouTube playlist as a single mp3 file?"
      ],
      "Top-3 Scripts": [
        "au_742083: printf \"file '%s'\\n\" *.mp3 | ffmpeg -f concat -i - -codec copy all.mp3\n\navconv -i \"concat:$(printf '%s|' *.mp3 | head -c -1)\" -codec copy all.mp3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Top-3 Similar Questions": [
        "ul_272868: Download only format mp4 on youtube-dl",
        "au_948516: How do I download with youtube-dl to get video title as filename?",
        "au_964835: How to download newly uploaded videos from a youtube channel?"
      ],
      "Top-3 Scripts": [
        "ul_272868: ",
        "au_948516: ",
        "au_964835: --playlist-start NUMBER\n          Playlist video to start at (default is 1)\n--playlist-end NUMBER\n          Playlist video to end at (default is last)\n--date DATE\n          Download only videos uploaded in this date\n--dateafter DATE\n          Download only videos uploaded on or after this date (i.e.  inclusive)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Top-3 Similar Questions": [
        "so_38546166: get newest additions to a youtube playlist using youtube-dl",
        "au_857989: Download YouTube videos from start of batch to end of batch that is part of a playlist",
        "au_674916: How to download all the vidoes in a youtube playlist in linux?"
      ],
      "Top-3 Scripts": [
        "so_38546166: youtube-dl --download-archive /path/to/the/archive/file playlist_url",
        "au_857989: --output '%(title)s.%(ext)s'  \n    output file name(s) as the name of the video, followed by a dot character and the video's extension  \n\nfind -type f \n    Find all files.\n\ny/source/destination/  \n    Transliterate the characters in the pattern space which appear in source   \n    to the corresponding character in destination.",
        "au_674916: "
      ],
      "Explanations about Options": {}
    }
  ]
}