{
  "Query": "Determining what process is bound to a port",
  "Answers": [
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Signal the operating system to immediately terminate a program (which gets no chance to capture the signal)",
      "Most Similar TLDR Script": "kill -{{9|KILL}} {{process_id}}",
      "Top-3 Similar Questions": [
        "so_39974335: How to determine which process is using a port in Linux",
        "ul_266100: How can I determine if a process is running unseen in terminal?",
        "ul_594141: What determines whether a script's background processes get a terminal's SIGINT signal?"
      ],
      "Top-3 Scripts": [
        "so_39974335: 1.  lsof -i:8080\n2.  kill $(lsof -t -i:8080)\nor\n2 . kill -9 $(lsof -t -i:8080)",
        "ul_266100: $ for job in $(jobs -p); do kill $job; wait $job; done",
        "ul_594141: kill -s INT <pid_here>\n\nkill -s INT -- -<pid_here>"
      ],
      "Explanations about Options": {
        "-s": " Specify the signal to be sent. The signal can be specified by using name or\n number. The behavior of signals is explained in signal(7) manual page."
      }
    },
    {
      "Command": "fuser",
      "MP Summary": "identify processes using files or sockets",
      "Most Similar TLDR Task": "Identify processes using a TCP socket",
      "Most Similar TLDR Script": "fuser --namespace tcp {{port}}",
      "Top-3 Similar Questions": [
        "su_97844: How can I determine what process has a file open in Linux?"
      ],
      "Top-3 Scripts": [
        "su_97844: ~> less .vimrc\n# put in background\n~> fuser .vimrc\n.vimrc:              28135\n~> ps 28135\n  PID TTY      STAT   TIME COMMAND\n28135 pts/36   T      0:00 less .vimrc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pidof",
      "MP Summary": "find the process ID of a running program.",
      "Most Similar TLDR Task": "List process IDs including scripts with given name",
      "Most Similar TLDR Script": "pidof -x {{script.py}}",
      "Top-3 Similar Questions": [
        "so_9117507: Linux/Unix command to determine if process is running?"
      ],
      "Top-3 Scripts": [
        "so_9117507: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "telnet",
      "MP Summary": "user interface to the TELNET protocol",
      "Most Similar TLDR Task": "Telnet to a specific port of a host",
      "Most Similar TLDR Script": "telnet {{ip_address}} {{port}}",
      "Top-3 Similar Questions": [
        "so_25004021: telnet to determine open ports (shell script)"
      ],
      "Top-3 Scripts": [
        "so_25004021: name=$(echo exit | telnet $1 $2 2>/dev/null | grep \"Connected\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tcpdump",
      "MP Summary": "dump traffic on a network",
      "Most Similar TLDR Task": "Capture the traffic from a specific interface, source, destination and destination port",
      "Most Similar TLDR Script": "tcpdump -i {{eth0}} src {{192.168.1.1}} and dst {{192.168.1.2}} and dst port {{80}}",
      "Top-3 Similar Questions": [
        "su_403139: How to determine which process sends UDP packets periodically to an IP address?"
      ],
      "Top-3 Scripts": [
        "su_403139: "
      ],
      "Explanations about Options": {}
    }
  ]
}