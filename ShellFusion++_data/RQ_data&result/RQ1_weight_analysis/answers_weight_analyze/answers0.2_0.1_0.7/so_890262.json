{
  "Query": "Integer ASCII value to character in BASH using printf",
  "Answers": [
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Top-3 Similar Questions": [
        "so_15840182: Why using variable in awk printf doesn't work?",
        "so_38551256: printf using in /bin/bash",
        "ul_202638: bash - Why does type -a execute \"$(printf 'a')\" and is it possible to get back the original alias?"
      ],
      "Top-3 Scripts": [
        "so_15840182: tr -d \";\"",
        "so_38551256: latest_version=$((curl -s http://java.com/en/download/installed8.jsp 2>/dev/null || wget -q -O - http://java.com/en/download/installed8.jsp) | grep 'latest8' |sed -E \"s/.*= //\" |tr -d \"';\\r\")\nprintf \"%s \\n\" $latest_version",
        "ul_202638: catvu () {\n    LC_ALL=C sed \"$(printf 's/[^\\t -\\176\\200-\\377]/^&/g')\" \"$@\" | LC_ALL=C tr '\\0-\\10\\13-\\37\\177' '@-HK-_?'\n}"
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "so_25958430: While using printf how to escape special characters in shell script?",
        "so_57171953: How to correctly use printf for strings on multiple lines?",
        "so_18500582: Using a variable's value to use that variables value"
      ],
      "Top-3 Scripts": [
        "so_25958430: ",
        "so_57171953: for i in {1..5}; do echo \"ERROR\"; done",
        "so_18500582: echo -e\n\nblack='\\E[30;47m'\n...\nwhite='\\E[37;47m'\n\n...\ncolor=\"$2\"\n...\n\necho -e \"${!color}\""
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Store a formatted message in a variable (does not work on zsh)",
      "Most Similar TLDR Script": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}",
      "Top-3 Similar Questions": [
        "su_1360901: Using printf to output a variable",
        "so_28322040: How to use printf with conditional arguments",
        "so_25438150: using printf to create a header"
      ],
      "Top-3 Scripts": [
        "su_1360901: printf -- \"$SS\"",
        "so_28322040: printf \"The search found %d file%.*s.\\n\" $files $((files != 1)) \"s\"\n\nformats=(\"is %d file\" \"are %d files\")\nprintf \"There ${formats[files!=1]}.\\n\" $files",
        "so_25438150: dashes=$(printf \"%0.s-\" {1..55})\nprintf \"#$dashes\\n#TEXT1%32s#TEXT2\\n#$dashes-\\n\" \" \"\n\ndashes=$(printf \"%0.s-\" {1..55})\nprintf \"#$dashes\\n#TEXT1\\t\\t\\t#TEXT2\\n#$dashes-\\n\" \" \""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Top-3 Similar Questions": [
        "ul_170700: How to use printf to show the results of a calculation?"
      ],
      "Top-3 Scripts": [
        "ul_170700: #!/bin/sh\nprintf 'Please enter salary amount: '\nread salary\nTAX=$(printf '%s * %s\\n' \"$salary\" \"0.15\" | bc)\nNET=$(printf '%s + %s\\n' \"$salary\" \"$TAX\" | bc)\n\nprintf \"Net Salary= %.2f\\n\" $NET"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Top-3 Similar Questions": [
        "so_57747932: in bash printf format how to use the same value in muliples placeholders"
      ],
      "Top-3 Scripts": [
        "so_57747932: printf '%s lines: %s\\n' \"$(wc -l <\"$1\")\"{,}"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    }
  ]
}