{
  "Query": "How to download playlist to mp3 format with youtube-dl?",
  "Answers": [
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Most Similar TLDR Task": "Download a playlist and extract mp3 from it",
      "Most Similar TLDR Script": "youtube-dl -i --extract-audio --audio-format mp3 -o \"%(title)s.%(ext)s\" '{{url to playlist}}'",
      "Top-3 Similar Questions": [
        "au_694848: How to download a youtube playlist with numbered prefix via youtube-dl?",
        "au_673442: Downloading youtube playlist with youtube-dl, skipping existing files",
        "au_948516: How do I download with youtube-dl to get video title as filename?"
      ],
      "Top-3 Scripts": [
        "au_694848: youtube-dl -o \"%(playlist_index)s-%(title)s.%(ext)s\" <playlist_link>",
        "au_673442: youtube-dl --download-archive downloaded.txt --no-post-overwrites -ciwx --audio-format mp3 -o \"%(title)s.%(ext)s\" <em>[path here]</em>",
        "au_948516: man youtube-dl\n\nyoutube-dl -o '%(title)s.%(ext)s' <URL-of-video>"
      ],
      "Explanations about Options": {
        "-o": "Output filename template, see the \"OUTPUT TEMPLATE\" for all the info",
        "--download-archive": "Download only videos not listed in the archive file. Record the IDs of all\n downloaded videos in it.",
        "--no-post-overwrites": "Do not overwrite post-processed files; the post-processed files are overwritten by\n default",
        "-w": "Do not overwrite files",
        "--audio-format": "Specify audio format: \"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or\n \"wav\"; \"best\" by default; No effect without -x",
        "-c": "Force resume of partially downloaded files. By default, youtube-dl will resume\n downloads if possible.",
        "-i": "Continue on download errors, for example to skip unavailable videos in a playlist"
      }
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download the contents of an URL to a file",
      "Most Similar TLDR Script": "curl {{http://example.com}} -o {{filename}}",
      "Top-3 Similar Questions": [
        "ul_462646: A file on AkamaiGlobalHost downloads with a browser but not with curl",
        "au_285976: Download ZIP file with curl command",
        "ul_198326: Download an article with cURL given a dynamic download link"
      ],
      "Top-3 Scripts": [
        "ul_462646: ",
        "au_285976: curl -LO",
        "ul_198326: curl -L --referer \";auto\" -o test.pdf URL-for-direct-download"
      ],
      "Explanations about Options": {
        "--referer": "(HTTP) Sends the \"Referrer Page\" information to the HTTP server. This can also be\n set with the -H, --header flag of course. When used with -L, --location you can\n append \";auto\" to the -e, --referer URL to make curl automatically set the previous\n URL when it follows a Location: header. The \";auto\" string can be used alone, even\n if you don't set an initial -e, --referer.",
        "-O": "Write output to a local file named like the remote file we get. (Only the file part\n of the remote file is used, the path is cut off.)",
        "-o": "Write output to <file> instead of stdout. If you are using {} or [] to fetch\n multiple documents, you can use '#' followed by a number in the <file> specifier.\n That variable will be replaced with the current string for the URL being fetched.\n Like in:"
      }
    },
    {
      "Command": "aria2c",
      "MP Summary": "The ultra fast download utility",
      "Most Similar TLDR Task": "Download the contents of an URL to a file",
      "Most Similar TLDR Script": "aria2c -o {{filename}} {{url}}",
      "Top-3 Similar Questions": [
        "so_22114610: Downloading a file with wget using multiple connections"
      ],
      "Top-3 Scripts": [
        "so_22114610: aria2c -x 16 [url] #where 16 is the number of connections"
      ],
      "Explanations about Options": {
        "-x": "The maximum number of connections to one server for each download. Default: 1"
      }
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Top-3 Similar Questions": [
        "au_948516: How do I download with youtube-dl to get video title as filename?",
        "ul_272868: Download only format mp4 on youtube-dl"
      ],
      "Top-3 Scripts": [
        "au_948516: ",
        "ul_272868: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Top-3 Similar Questions": [
        "so_69870022: How to get the file format from a link with powershell",
        "ul_462646: A file on AkamaiGlobalHost downloads with a browser but not with curl",
        "ul_303985: Download just one tumblr page with wget"
      ],
      "Top-3 Scripts": [
        "so_69870022: $DownloadFolder = $Env:AppData + \"\\DownloadFolder\\\"\n# Create a Download Folder if not exist yet to store files that will be downloaded in the future\nIf ((Test-Path -Path $DownloadFolder) -eq 0) { New-Item -Path $DownloadFolder -ItemType Directory | Out-Null }\n$url = Read-Host 'URL'\n$FileName = $url.Split(\"/\")[-1]\nif ( $url -eq \"\"){exit}\n$FilePath = $DownloadFolder+$FileName\nWrite-Host \"The file will be saved in this path \"\"$FilePath\"\"\" -Fore Green \nIf ($FileName -eq \"\"){Exit} Else {Invoke-WebRequest -Uri \"$url\" -OutFile \"$FilePath\"}",
        "ul_462646: ",
        "ul_303985: -i file\n\n--input-file=file"
      ],
      "Explanations about Options": {}
    }
  ]
}