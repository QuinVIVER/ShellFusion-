{
  "Query": "Argument string to integer in bash",
  "Answers": [
    {
      "Command": "expr",
      "MP Summary": "evaluate arguments as an expression",
      "Most Similar TLDR Task": "Get position of the first character in 'string' that matches 'substring'",
      "Most Similar TLDR Script": "echo $(expr index {{string}} {{substring}})",
      "Top-3 Similar Questions": [
        "so_41980134: bash allow only positive integer or positive integer with decimal point"
      ],
      "Top-3 Scripts": [
        "so_41980134: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "ul_478831: determine if output is string or integer",
        "ul_468429: Bash compare string and integer together as multi-conditions",
        "so_43459844: Why Can I add a String and a Int in Bash"
      ],
      "Top-3 Scripts": [
        "ul_478831: if ! [[ $( xargs <<< \"$count\" ) =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi\n\nif ! [[ \"${count// /}\" =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi",
        "ul_468429: if true && if true; then false; fi; then echo foo; else echo bar; fi\n\nif (true && (if true; then false; fi)); then echo foo; else echo bar; fi",
        "so_43459844: a=1\nb=2\ndeclare -i var\nvar=a+b+3\necho $var # Prints 6"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Use standard input to count lines, words and characters (bytes) in that order",
      "Most Similar TLDR Script": "{{find .}} | wc",
      "Top-3 Similar Questions": [
        "so_32826395: Bash Script with Parsing Argument in Linux"
      ],
      "Top-3 Scripts": [
        "so_32826395: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "yes",
      "MP Summary": "output a string repeatedly until killed",
      "Most Similar TLDR Task": "Repeatedly output \"message\"",
      "Most Similar TLDR Script": "yes {{message}}",
      "Top-3 Similar Questions": [
        "ul_396895: String comparison with integer in [[ test",
        "su_820982: Float integer division and setting variable value"
      ],
      "Top-3 Scripts": [
        "ul_396895: $ [ \"2 + 2\" -eq 4 ] && echo yes\nbash: [: 2 + 2: integer expression expected\n$ [[ \"2 + 2\" -eq 4 ]] && echo yes\nyes\n\n$ x=\"\"; echo $((0 + x))\n0\n$ [[ \"\" -eq 0 ]] && echo yes\nyes\n\nx='a[$(rm -i *)]'\n[[ x -eq 0 ]] && echo yes\n\n$ x='a[$(rm -i *)]'\n$ [ \"$x\" -eq 0 ] && echo yes\nbash: [: a[$(rm -i *)]: integer expression expected",
        "su_820982: $ offset=1.25; result=1.33\n$ echo \"$offset < $result\" | bc -l | grep -q 1 && echo yes || echo no\nyes\n$ offset=1.35\n$ echo \"$offset < $result\" | bc -l | grep -q 1 && echo yes || echo no\nno\n\necho \"if ($offset < $result) print 1 else print 0 \" | bc -l | grep -q 1 && echo yes || echo no"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Top-3 Similar Questions": [
        "so_65895041: Validating bash script argument by flag name and value"
      ],
      "Top-3 Scripts": [
        "so_65895041: # To run it as sh-script (POSIX shell)\np=THIS_IS_MY_PASSWORD sh myscript.sh \n\n# To run it as bash-script, if the script is executable\np=THIS_IS_MY_PASSWORD ./myscript.sh\n\n# To run it as bash-script, if the script is not executable\np=THIS_IS_MY_PASSWORD bash myscript.sh"
      ],
      "Explanations about Options": {}
    }
  ]
}