{
  "Query": "How to download an MP3 track from a YouTube video",
  "Answers": [
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Most Similar TLDR Task": "Download the audio from a video and convert it to an MP3",
      "Most Similar TLDR Script": "youtube-dl -x --audio-format {{mp3}} '{{url}}'",
      "Top-3 Similar Questions": [
        "au_401550: How can i download youtube videos one after another automatically from terminal",
        "au_964835: How to download newly uploaded videos from a youtube channel?",
        "au_705166: How can I download an entire playlist from youtube even it exceeds 25 videos?"
      ],
      "Top-3 Scripts": [
        "au_401550: youtube-dl http://www.youtube.com/watch?v=CP8CNp-vksc http://www.youtube.com/watch?v=JmOXHH3DTwg",
        "au_964835: sudo apt remove youtube-dl # uninstall the repo version\nsudo wget https://yt-dl.org/latest/youtube-dl -O /usr/local/bin/youtube-dl # download\nsudo chmod a+x /usr/local/bin/youtube-dl # make it executable\nhash -r # hash\n\nsudo youtube-dl -U\n\nyoutube-dl --date now -- 'PLFs4vir_WsTyXrrpFstD64Qj95vpy-yo1'\n\nyoutube-dl --dateafter now-7days -a file\n\nyoutube-dl --dateafter now-1month -a file -w\n\nman youtube-dl",
        "au_705166: sudo apt-get purge youtube-dl\n\nsudo rm /usr/local/bin/youtube-dl\n\nsudo wget https://yt-dl.org/downloads/2015.11.27.1/youtube-dl -O /usr/local/bin/youtube-dl\n\nsudo chmod a+rx /usr/local/bin/youtube-dl\n\nyoutube-dl https://www.youtube.com/playlist?list=PLKopOf5__2tjZ3oHnreRYjxGW_7yXV0OS\n\nyoutube-dl -U\n\nyoutube-dl --help"
      ],
      "Explanations about Options": {
        "--help": "Print this help text and exit"
      }
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Extract the sound from a video and save it as MP3",
      "Most Similar TLDR Script": "ffmpeg -i {{video.mp4}} -vn {{sound}}.mp3",
      "Top-3 Similar Questions": [
        "so_41310196: Bash: bash script to download trimmed mp3 from youtube url",
        "au_928583: extract a segment from some mp3 file",
        "so_56088966: Quickly extract multiple frames from multiple videos"
      ],
      "Top-3 Scripts": [
        "so_41310196: mytrim() {\n    local downloaded_file\n    youtube-dl --extract-audio --embed-thumbnail --audio-format mp3 -o \"%(title)s.%(ext)s\" $1\n    downloaded_file=$(youtube-dl --get-filename --extract-audio --embed-thumbnail --audio-format mp3 -o \"%(title)s.%(ext)s\" $1)\n    ffmpeg -ss $2 -i \"${downloaded_file}\" -acodec copy -y temp.mp3\n    mv temp.mp3 \"${downloaded_file}\"\n}",
        "au_928583: ffmpeg -ss 00:01:20 -t 00:01:20 -acodec copy -i /path/to/input.mp3 /path/to/output.mp3",
        "so_56088966: ffmpeg -nostdin -loglevel fatal\n       -ss 15     -i \"${filename}\"\n       -sseof -15 -i \"${filename}\"\n       -ss 15     -i \"${filename2}\"\n       -sseof -15 -i \"${filename2}\"\n       -map 0:v:0 -frames:v 1 \"${file1-head}\"\n       -map 1:v:0 -frames:v 1 \"${file1-tail}\"\n       -map 2:v:0 -frames:v 1 \"${file2-head}\"\n       -map 3:v:0 -frames:v 1 \"${file2-tail}\"\n..."
      ],
      "Explanations about Options": {
        "-t": "When used as an input option (before \"-i\"), limit the duration of data read from the\n input file.",
        "-acodec": "Set the audio codec. This is an alias for \"-codec:a\".",
        "-ss": "When used as an input option (before \"-i\"), seeks in this input file to position. Note\n that in most formats it is not possible to seek exactly, so ffmpeg will seek to the\n closest seek point before position. When transcoding and -accurate_seek is enabled\n (the default), this extra segment between the seek point and position will be decoded\n and discarded. When doing stream copy or when -noaccurate_seek is used, it will be\n preserved.",
        "-y": "Overwrite output files without asking.",
        "-loglevel": "Set logging level and flags used by the library.",
        "-i": "input file url",
        "-n": "Do not overwrite output files, and exit immediately if a specified output file already\n exists."
      }
    },
    {
      "Command": "eyeD3",
      "MP Summary": "displays and manipulates id3-tags on mp3 files",
      "Most Similar TLDR Task": "Set the title of an MP3 file",
      "Most Similar TLDR Script": "eyeD3 --title \"{{A Title}}\" {{filename.mp3}}",
      "Top-3 Similar Questions": [
        "ul_41287: How to Extract Album Cover Image from MP3 file?"
      ],
      "Top-3 Scripts": [
        "ul_41287: eyeD3 --write-images=DIR mp3_file"
      ],
      "Explanations about Options": {
        "--write-images": "Causes all attached images (APIC frames) to be written to the specified directory."
      }
    },
    {
      "Command": "vlc",
      "MP Summary": "the VLC media player",
      "Most Similar TLDR Task": "Play video from a URL",
      "Most Similar TLDR Script": "vlc {{https://www.youtube.com/watch?v=oHg5SJYRHA0}}",
      "Top-3 Similar Questions": [
        "au_953631: Read .mp3 files from an USB stick, is it possible?",
        "au_206824: How to watch Apple keynote videos from the website",
        "so_38171169: How to play mp3 from URL"
      ],
      "Top-3 Scripts": [
        "au_953631: sudo apt-get update\nsudo apt-get install vlc\n\nsudo add-apt-repository universe  # and press Enter\nsudo apt-get update\nsudo apt-get install vlc\nsudo apt-get install pulseaudio pavucontrol",
        "au_206824: vlc --ffmpeg-threads=1 'http://qthttp.apple.com.edgesuite.net/1210pibasdfvoihbadsv/sl_vod_mvp.m3u8'",
        "so_38171169: import vlc\np = vlc.MediaPlayer(\"http://your_mp3_url\")\np.play()"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "convert",
      "MP Summary": "convert between image formats as well as resize an image, blur, crop, despeckle, dither, draw on, flip, join, re-sample, and much more.",
      "Most Similar TLDR Task": "Convert an image from JPG to PNG",
      "Most Similar TLDR Script": "convert {{image.jpg}} {{image.png}}",
      "Top-3 Similar Questions": [
        "su_594008: Bash script to extract audio from video"
      ],
      "Top-3 Scripts": [
        "su_594008: #!/bin/bash\nFOLDER_SRC=\"/home/J/Music/TestBatchConv\"\nfind \"$FOLDER_SRC\" -type f -print0 | while IFS= read -r -d '' myvid; do\n  echo \"Trying to convert $myvid\"\n  avconv -i \"$myvid\" -c:a libmp3lame -q:a 4 \"${myvid%.*}.mp3\" 2>/dev/null || echo \"$myvid is not a valid file.\"\ndone"
      ],
      "Explanations about Options": {}
    }
  ]
}