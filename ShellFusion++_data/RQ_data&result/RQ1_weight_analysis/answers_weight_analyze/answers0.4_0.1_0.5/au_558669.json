{
  "Query": "Renaming user name",
  "Answers": [
    {
      "Command": "usermod",
      "MP Summary": "modify a user account",
      "Most Similar TLDR Task": "Change a user's name",
      "Most Similar TLDR Script": "usermod -l {{newname}} {{user}}",
      "Top-3 Similar Questions": [
        "ul_629: Is it possible to rename a Unix user account?"
      ],
      "Top-3 Scripts": [
        "ul_629: usermod --move-home --login <new-login-name> --home <new-home-dir> <old-login-name>\n\nman usermod"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Calculate the parent directory of multiple paths",
      "Most Similar TLDR Script": "dirname {{path/to/file_a}} {{path/to/directory_b}}",
      "Top-3 Similar Questions": [
        "au_1159225: Rename folders from file name [script]",
        "so_31343309: Rename filename to another name",
        "ul_183021: Rename file by its folder name"
      ],
      "Top-3 Scripts": [
        "au_1159225: #!/bin/bash\nfor i in Folder*/*\ndo\n    FILE=\"$(basename \"$i\")\"\n    mv \"$(dirname \"$i\")\" \"${FILE%.*}\"\ndone\n\n#!/bin/bash\nfor i in Folder*/*\ndo\n    if [[ $i =~ (jpg|png)$ ]]\n    then\n        FILE=\"$(basename \"$i\")\"\n        mv \"$(dirname \"$i\")\" \"${FILE%.*}\"\n    fi\ndone\n\necho mv \"$(dirname \"$i\")\" \"${FILE%.*}\"",
        "so_31343309: ",
        "ul_183021: mkdir -p result || exit 1\nfor pathname in \"$insub_FIM_M_1\"/*/file.txt; do\n    cp \"$pathname\" \"result/$( basename \"$( dirname \"$pathname\" )\" )_file.txt\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "basename",
      "MP Summary": "strip directory and suffix from filenames",
      "Most Similar TLDR Task": "Show only the file name from a path, with a suffix removed",
      "Most Similar TLDR Script": "basename {{path/to/file}} {{suffix}}",
      "Top-3 Similar Questions": [
        "au_1159225: Rename folders from file name [script]",
        "so_31343309: Rename filename to another name",
        "ul_183021: Rename file by its folder name"
      ],
      "Top-3 Scripts": [
        "au_1159225: #!/bin/bash\nfor i in Folder*/*\ndo\n    FILE=\"$(basename \"$i\")\"\n    mv \"$(dirname \"$i\")\" \"${FILE%.*}\"\ndone\n\n#!/bin/bash\nfor i in Folder*/*\ndo\n    if [[ $i =~ (jpg|png)$ ]]\n    then\n        FILE=\"$(basename \"$i\")\"\n        mv \"$(dirname \"$i\")\" \"${FILE%.*}\"\n    fi\ndone",
        "so_31343309: ",
        "ul_183021: mkdir -p result || exit 1\nfor pathname in \"$insub_FIM_M_1\"/*/file.txt; do\n    cp \"$pathname\" \"result/$( basename \"$( dirname \"$pathname\" )\" )_file.txt\"\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Top-3 Similar Questions": [
        "ul_183021: Rename file by its folder name",
        "au_1229152: Rename files of the same name in multiple subdirectories"
      ],
      "Top-3 Scripts": [
        "ul_183021: mkdir -p result || exit 1\nfor pathname in \"$insub_FIM_M_1\"/*/file.txt; do\n    cp \"$pathname\" \"result/$( basename \"$( dirname \"$pathname\" )\" )_file.txt\"\ndone",
        "au_1229152: for d in A???; do echo cp \"$d/files/aseg.mgz\" \"collated_aseg/$d.mgz\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Top-3 Similar Questions": [
        "so_14306117: Rename files in multiple directories to the name of the directory",
        "au_529542: Renaming multiple files",
        "ul_449965: Copy files under modified name"
      ],
      "Top-3 Scripts": [
        "so_14306117: find . -type d -not -empty -exec echo mv \\{\\}/file.txt \\{\\}.txt \\;",
        "au_529542: find $katalog -name '*.dav.avi' -execdir rename .dav.avi .avi {} \\;\n\nfind . -name \"*.dav.avi\" | while read file; do newFile=`echo $file | awk '{ print substr($0,1,match($0,\"\\\\[\")-1) \".avi\"; }'`; mv $file $newFile; done",
        "ul_449965: find $folder -maxdepth 1 -type f -name \"*-[0-9].jpg\" -exec \\\nbash -c 'cp \"$1\" \"${1:0:-4}-mini.jpg\"' _ {} \\;"
      ],
      "Explanations about Options": {
        "-empty": "File is empty and is either a regular file or a directory.",
        "-not": "Same as ! expr, but not POSIX compliant.",
        "-type": "File is of type c:",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils."
      }
    }
  ]
}