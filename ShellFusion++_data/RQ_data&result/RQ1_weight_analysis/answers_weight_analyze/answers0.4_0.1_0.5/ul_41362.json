{
  "Query": "View pdf file in terminal",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "au_1163711: Opening a PDF File by script, printing it, and closing it",
        "ul_138933: Concatenate in a PDF the first page of several odt files alphabetically",
        "so_51168569: Removing last page of PDF using Python or Bash"
      ],
      "Top-3 Scripts": [
        "au_1163711: find . -maxdepth 1 -type f -exec echo {} \\;",
        "ul_138933: ",
        "so_51168569: #!/bin/bash\n\nfor file in *.pdf\ndo\n    page_nb=$(pdfinfo $file | awk '/^Pages/ { print $2 }')\n\n    file_name=$(echo $file | cut -d'.' -f 1)\n\n    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dFirstPage=1 -dLastPage=$(expr $page_nb - 1) -sOutputFile=$file_name\"_without_last_page.pdf\" $file\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Top-3 Similar Questions": [
        "au_624120: Is it possible to view Google Chrome bookmarks and history from the terminal",
        "au_1163711: Opening a PDF File by script, printing it, and closing it",
        "so_30345709: Unable to extract text and images from specific PDF"
      ],
      "Top-3 Scripts": [
        "au_624120: $ file ~/.config/google-chrome-beta/Default/Bookmarks\n.config/google-chrome-beta/Default/Bookmarks: UTF-8 Unicode text\n\n$ file ~/.config/google-chrome-beta/Default/History           \n.config/google-chrome-beta/Default/History: SQLite 3.x database",
        "au_1163711: lpr: No such file or directory",
        "so_30345709: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pdfimages",
      "MP Summary": "Portable Document Format (PDF) image extractor (version 3.03)",
      "Most Similar TLDR Task": "Extract all images from a PDF file and save them as PNGs",
      "Most Similar TLDR Script": "pdfimages -png {{path/to/file.pdf}} {{filename_prefix}}",
      "Top-3 Similar Questions": [
        "so_30345709: Unable to extract text and images from specific PDF"
      ],
      "Top-3 Scripts": [
        "so_30345709: pdfimages -f 4 -l 7 -j the.pdf myprefix--"
      ],
      "Explanations about Options": {
        "-l": "Specifies the last page to scan.",
        "-j": "Write images in JPEG format as JPEG files instead of the default format. The JPEG\n file is identical to the JPEG data stored in the PDF.",
        "-f": "Specifies the first page to scan."
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Top-3 Similar Questions": [
        "ul_383552: Adding tags to files (PDFs) and process from the command-line or script"
      ],
      "Top-3 Scripts": [
        "ul_383552: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gs",
      "MP Summary": "Ghostscript (PostScript and PDF language interpreter and previewer)",
      "Most Similar TLDR Task": "Merge PDF files",
      "Most Similar TLDR Script": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input1.pdf}} {{input2.pdf}}",
      "Top-3 Similar Questions": [
        "so_51168569: Removing last page of PDF using Python or Bash"
      ],
      "Top-3 Scripts": [
        "so_51168569: #!/bin/bash\n\nfor file in *.pdf\ndo\n    page_nb=$(pdfinfo $file | awk '/^Pages/ { print $2 }')\n\n    file_name=$(echo $file | cut -d'.' -f 1)\n\n    gs -sDEVICE=pdfwrite -dNOPAUSE -dQUIET -dBATCH -dFirstPage=1 -dLastPage=$(expr $page_nb - 1) -sOutputFile=$file_name\"_without_last_page.pdf\" $file\ndone"
      ],
      "Explanations about Options": {
        "-sDEVICE": "Selects an alternate initial output device, as described above.",
        "-dNOPAUSE": "Disables the prompt and pause at the end of each page. This may be desirable for\n applications where another program is driving Ghostscript.",
        "-P": "Makes Ghostscript to look first in the current directory for library files. By\n default, Ghostscript no longer looks in the current directory, unless, of course,\n the first explicitly supplied directory is \".\" in -I. See also the INITIALIZATION\n FILES section below, and bundled Use.htm for detailed discussion on search paths\n and how Ghostcript finds files."
      }
    }
  ]
}