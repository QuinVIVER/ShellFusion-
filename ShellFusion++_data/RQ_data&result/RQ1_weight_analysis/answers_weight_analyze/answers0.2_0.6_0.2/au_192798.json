{
  "Query": "Is it possible to read the output from any process using its PID?",
  "Answers": [
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a program using the default SIGTERM (terminate) signal",
      "Most Similar TLDR Script": "kill {{process_id}}",
      "Top-3 Similar Questions": [
        "so_7925951: killing the process with pid using a single line",
        "so_61770892: Is it possible for bash to \"interactively\" alternate between reading from and writing to a child process via stdin/stdout?"
      ],
      "Top-3 Scripts": [
        "so_7925951: pgrep -f raj | xargs kill\n\nps -ef | grep raj | awk '{print $2}' | xargs kill",
        "so_61770892: kill \"$COPROC_PID\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Top-3 Similar Questions": [
        "so_42635451: How to read input from Stdin with fork()",
        "so_44016803: Reading input using fgets returns duplicate lines in C",
        "so_5436193: Read up to a null-terminator using read()"
      ],
      "Top-3 Scripts": [
        "so_42635451: Child: read [Monday]\nParent: read [Tuesday]\nParent: read [Wednesday]\n\nread(STDIN_FILENO, &c, 1)",
        "so_44016803: ....\nif (read(0, buf, nbuf) == 0) {\n....\nwhile(getcmd(buf, 7, pid) >= 0) {\n....",
        "so_5436193: read()"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
      "Most Similar TLDR Script": "wait {{pid}}",
      "Top-3 Similar Questions": [
        "so_42635451: How to read input from Stdin with fork()",
        "ul_6301: How do I read from /proc/$pid/mem under Linux?"
      ],
      "Top-3 Scripts": [
        "so_42635451: ",
        "ul_6301: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Most Similar TLDR Task": "Terminate a process using the default SIGTERM (terminate) signal",
      "Most Similar TLDR Script": "killall {{process_name}}",
      "Top-3 Similar Questions": [
        "so_17856928: How to terminate process from Python using pid?"
      ],
      "Top-3 Scripts": [
        "so_17856928: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Top-3 Similar Questions": [
        "so_7925951: killing the process with pid using a single line"
      ],
      "Top-3 Scripts": [
        "so_7925951: pgrep -f raj | xargs kill\n\npgrep -f raj | xargs ps"
      ],
      "Explanations about Options": {
        "-f": "The pattern is normally only matched against the process name. When -f is set, the\n full command line is used."
      }
    }
  ]
}