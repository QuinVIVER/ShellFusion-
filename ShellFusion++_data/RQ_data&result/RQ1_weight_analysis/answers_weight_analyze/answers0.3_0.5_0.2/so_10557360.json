{
  "Query": "Convert xlsx to csv in Linux with command line",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?",
        "so_22635338: Convert an HTML expandable list into tabular or csv format",
        "so_30296245: Convert OWL/XML in RDF/XML with a simple command line in shell"
      ],
      "Top-3 Scripts": [
        "so_11310750: ",
        "so_22635338: while read -r prefix content\ndo\n     echo \"do something with a line >>$content<< with a prefix >>$prefix<<\"\ndone\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")",
        "so_30296245: "
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Top-3 Similar Questions": [
        "ul_147816: Convert key=value blocks to CSV",
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?",
        "so_22635338: Convert an HTML expandable list into tabular or csv format"
      ],
      "Top-3 Scripts": [
        "ul_147816: ",
        "so_11310750: ",
        "so_22635338: while read -r prefix content\ndo\n     echo \"do something with a line >>$content<< with a prefix >>$prefix<<\"\ndone\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Top-3 Similar Questions": [
        "so_22635338: Convert an HTML expandable list into tabular or csv format",
        "so_17273304: BASH: Convert multi lined (JSON) block into a single line string",
        "ul_618491: Bash: Convert lines to array elements"
      ],
      "Top-3 Scripts": [
        "so_22635338: sed '/^[#!+]/d'\n\nsed 's/<[^>]*>//g'\n\nsed 's/^./& /'\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")",
        "so_17273304: sed -rn '/\"description\": *\"Reads 95%\",/,/],/{/statistics|description/!{1h; 1!H;};/],/{x;s/ *\\n *|^ *|],//gp;};}' out\n\n# gives 304000,0,8.7931875,7.948696618436826,6907.677974959667,13594.0",
        "ul_618491: $ awk -F'[ :]' 'BEGIN{printf \"[\"}NR>1{printf \"[%s,%s,%s],\",$3,$4,$5}END{printf \"]\\n\"}' file | sed 's/,\\]$/]/'\n[[118.851979,120.668604,84.472229],[126.789728,149.506520,103.196917],[126.379687,149.382354,104.504792],[126.989312,149.372811,103.499396],[126.330563,149.373374,103.956438],[127.238791,149.458749,103.198541],[125.263833,132.658750,88.320687],[126.828000,148.570000,98.722229],[125.042667,147.087896,98.871813],[124.392521,148.656792,103.744938],[115.969084,131.787022,91.721250],[125.385521,135.633751,91.044167],[125.046354,149.432500,104.132167],[126.368354,149.454480,103.942208],[126.454229,149.583730,104.462458],[114.102083,134.422916,93.555625],[127.905604,138.012417,85.556396],[126.362271,149.187688,104.087229],[115.580250,133.450563,93.011062],[125.555854,133.653730,88.441501]]\n\nsed 's/,\\]$/]/'\n\nawk -F'[ :]' 'BEGIN{\n                printf \"[\"\n              }\n              NR>1{\n                printf \"[%s,%s,%s],\",$3,$4,$5\n              }\n              END{\n                printf \"]\\n\"\n              }' file | sed 's/,\\]$/]/'"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Top-3 Similar Questions": [
        "so_68795784: Convert XLSX to CSV (SaveAs) changes date format"
      ],
      "Top-3 Scripts": [
        "so_68795784: Import-Excel C:\\temp\\TestDates.xlsx | \nSelect-Object Number,@{Name = 'Date'; Expression = { $_.Date.ToString('mm/dd/yyyy')}} | \nExport-Csv C:\\temp\\TestDates.csv -NoTypeInformation"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "au_1187830: How to find the delimiter used in a txt file and convert it to comma separated csv?"
      ],
      "Top-3 Scripts": [
        "au_1187830: perl -alne 'print join \",\", @F' moth_gt.txt"
      ],
      "Explanations about Options": {}
    }
  ]
}