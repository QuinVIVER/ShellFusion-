{
  "Query": "Downloading multiple files with youtube-dl",
  "Answers": [
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Most Similar TLDR Task": "Download a video or playlist at a specific quality",
      "Most Similar TLDR Script": "youtube-dl --format \"{{best[height<=480]}}\" '{{https://www.youtube.com/watch?v=oHg5SJYRHA0}}'",
      "Top-3 Similar Questions": [
        "au_673442: Downloading youtube playlist with youtube-dl, skipping existing files",
        "au_166488: Downloading youtube videos with minitube",
        "au_948516: How do I download with youtube-dl to get video title as filename?"
      ],
      "Top-3 Scripts": [
        "au_673442: youtube-dl --download-archive downloaded.txt --no-post-overwrites -ciwx --audio-format mp3 -o \"%(title)s.%(ext)s\" <em>[path here]</em>",
        "au_166488: sudo apt-get install youtube-dl\n\nyoutube-dl http://www.youtube.com/watch?v=yQEaXAoB6Ck",
        "au_948516: man youtube-dl\n\nyoutube-dl -o '%(title)s.%(ext)s' <URL-of-video>"
      ],
      "Explanations about Options": {
        "-w": "Do not overwrite files",
        "--audio-format": "Specify audio format: \"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or\n \"wav\"; \"best\" by default; No effect without -x",
        "-o": "Output filename template, see the \"OUTPUT TEMPLATE\" for all the info",
        "-c": "Force resume of partially downloaded files. By default, youtube-dl will resume\n downloads if possible.",
        "--download-archive": "Download only videos not listed in the archive file. Record the IDs of all\n downloaded videos in it.",
        "--no-post-overwrites": "Do not overwrite post-processed files; the post-processed files are overwritten by\n default",
        "-i": "Continue on download errors, for example to skip unavailable videos in a playlist"
      }
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download a file, saving the output under the filename indicated by the URL",
      "Most Similar TLDR Script": "curl -O {{http://example.com/filename}}",
      "Top-3 Similar Questions": [
        "au_285976: Download ZIP file with curl command",
        "ul_243134: curl download multiple files with brace syntax",
        "ul_198326: Download an article with cURL given a dynamic download link"
      ],
      "Top-3 Scripts": [
        "au_285976: curl -LO",
        "ul_243134: curl http://{one,two}.site.com -o \"file_#1.txt\"\n\ncurl http://{site,host}.host[1-5].com -o \"#1_#2\"",
        "ul_198326: curl -L --referer \";auto\" -o test.pdf URL-for-direct-download"
      ],
      "Explanations about Options": {
        "--referer": "(HTTP) Sends the \"Referrer Page\" information to the HTTP server. This can also be\n set with the -H, --header flag of course. When used with -L, --location you can\n append \";auto\" to the -e, --referer URL to make curl automatically set the previous\n URL when it follows a Location: header. The \";auto\" string can be used alone, even\n if you don't set an initial -e, --referer.",
        "-O": "Write output to a local file named like the remote file we get. (Only the file part\n of the remote file is used, the path is cut off.)",
        "-o": "Write output to <file> instead of stdout. If you are using {} or [] to fetch\n multiple documents, you can use '#' followed by a number in the <file> specifier.\n That variable will be replaced with the current string for the URL being fetched.\n Like in:"
      }
    },
    {
      "Command": "scp",
      "MP Summary": "secure copy (remote file copy program)",
      "Most Similar TLDR Task": "Use a specific username when connecting to the remote host",
      "Most Similar TLDR Script": "scp {{path/to/local_file}} {{remote_username}}@{{remote_host}}:{{path/to/remote_directory}}",
      "Top-3 Similar Questions": [
        "so_7353583: Download non web accessible file with wget",
        "so_13742296: How to get files list downloaded with scp -r"
      ],
      "Top-3 Scripts": [
        "so_7353583: scp myuser@mycomp:/home/myuser/test.file test.newext",
        "so_13742296: scp -rv $USERNAME@HOSTNAME:~/backups/ . 2> scp.output"
      ],
      "Explanations about Options": {
        "-v": "Verbose mode. Causes scp and ssh(1) to print debugging messages about their\n progress. This is helpful in debugging connection, authentication, and\n configuration problems.",
        "-r": "Recursively copy entire directories. Note that scp follows symbolic links\n encountered in the tree traversal."
      }
    },
    {
      "Command": "aria2c",
      "MP Summary": "The ultra fast download utility",
      "Most Similar TLDR Task": "Download from multiple sources",
      "Most Similar TLDR Script": "aria2c {{url_1}} {{url_2}}",
      "Top-3 Similar Questions": [
        "so_22114610: Downloading a file with wget using multiple connections"
      ],
      "Top-3 Scripts": [
        "so_22114610: aria2c -x 16 [url] #where 16 is the number of connections"
      ],
      "Explanations about Options": {
        "-x": "The maximum number of connections to one server for each download. Default: 1"
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
      "Most Similar TLDR Script": "rm -i {{file(s)}}",
      "Top-3 Similar Questions": [
        "so_60960027: Bash script for downloading multiple files from a list"
      ],
      "Top-3 Scripts": [
        "so_60960027: "
      ],
      "Explanations about Options": {}
    }
  ]
}