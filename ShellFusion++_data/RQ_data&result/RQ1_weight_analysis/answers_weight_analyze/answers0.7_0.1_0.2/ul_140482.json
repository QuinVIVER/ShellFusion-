{
  "Query": "Kill any service running at a specific port",
  "Answers": [
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Most Similar TLDR Task": "Force kill a process",
      "Most Similar TLDR Script": "killall -KILL {{process_name}}",
      "Top-3 Similar Questions": [
        "so_13952269: Stop ssh service at specific port",
        "ul_296250: How to stop an ssh server on arch linux",
        "su_575734: kill process on external script run as a service"
      ],
      "Top-3 Scripts": [
        "so_13952269: killall sshd",
        "ul_296250: killall sshd",
        "su_575734: killall testftp.sh"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nc",
      "MP Summary": "arbitrary TCP and UDP connections and listens",
      "Most Similar TLDR Task": "Listen on a specified port and print any data received",
      "Most Similar TLDR Script": "nc -l {{port}}",
      "Top-3 Similar Questions": [
        "ul_246903: Kill process on specific port"
      ],
      "Top-3 Scripts": [
        "ul_246903: # Start a process (nc) that listens on port 8080\n$ nc -l 8080 & bg\n[1] 17454\n[1] nc -l 8080\n\n# Get the process listening on port 8080:\n$ fstat | grep :8080\ncmihai   nc         17454    3* internet stream tcp 0x0 *:8080\n\n$ kill $(portpid 8080)\n[1] + Terminated           nc -l 8080"
      ],
      "Explanations about Options": {
        "-l": "Listen for an incoming connection rather than initiating a connection to a remote\n host. The destination and port to listen on can be specified either as non-optional\n arguments, or with options -s and -p respectively. Cannot be used together with -x\n or -z. Additionally, any timeouts specified with the -w option are ignored."
      }
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "Start/Stop/Restart/Reload service (start/stop should always be available)",
      "Most Similar TLDR Script": "service {{service_name}} {{start|stop|restart|reload}}",
      "Top-3 Similar Questions": [
        "so_56081527: how to stop multiple services running exclude services which are specified in file"
      ],
      "Top-3 Scripts": [
        "so_56081527: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Top-3 Similar Questions": [
        "au_1056644: linux command to kill a process in a running port",
        "so_9346211: How to kill a process on a port on ubuntu",
        "au_187344: Why does this 'kill' command log me out of the computer?"
      ],
      "Top-3 Scripts": [
        "au_1056644: for p in `sudo lsof -n -i:8080 | grep LISTEN | awk '{print $2}'`; do sudo kill -9 $p; done",
        "so_9346211: sudo kill -9 `sudo lsof -t -i:9001`\n\nsudo kill -9 $(sudo lsof -t -i:9001)",
        "au_187344: "
      ],
      "Explanations about Options": {
        "-t": "Run the command with an SELinux security context that includes the specified\n type. If no type is specified, the default type is derived from the role."
      }
    },
    {
      "Command": "firewall-cmd",
      "MP Summary": "firewalld command line client",
      "Most Similar TLDR Task": "Permanently close the port for a service in the specified zone (like port `80` when in the `public` zone)",
      "Most Similar TLDR Script": "firewall-cmd --permanent --zone={{public}} --remove-service={{http}}",
      "Top-3 Similar Questions": [
        "ul_508696: Firewalld: block outgoing connections on specific port"
      ],
      "Top-3 Scripts": [
        "ul_508696: firewall-cmd --permanent --direct --add-rule ipv4 filter OUTPUT 0 -p tcp -m tcp --dport=9000 -j DROP\nfirewall-cmd --permanent --direct --add-rule ipv4 filter OUTPUT 1 -j ACCEPT\n\nfirewall-cmd --reload"
      ],
      "Explanations about Options": {
        "--reload": "Reload firewall rules and keep state information. Current permanent configuration will\n become new runtime configuration, i.e. all runtime only changes done until reload are\n lost with reload if they have not been also in permanent configuration."
      }
    }
  ]
}