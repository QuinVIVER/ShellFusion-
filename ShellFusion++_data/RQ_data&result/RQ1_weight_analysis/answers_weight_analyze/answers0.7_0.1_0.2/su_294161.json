{
  "Query": "Unix/Linux find and sort by date modified",
  "Answers": [
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
      "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
      "Top-3 Similar Questions": [
        "so_18339307: Find files in created between a date range",
        "su_1598430: Date, find out the number of days in a month",
        "so_41015725: find a date in a powershell variable"
      ],
      "Top-3 Scripts": [
        "so_18339307: find ~/ -mtime $(echo $(date +%s) - $(date +%s -d\"Dec 31, 2009 23:59:59\") | bc -l | awk '{print $1 / 86400}' | bc -l)\n\nfind . -mtime $(date +%s -d\"Aug 10, 2013 23:59:59\") -mtime $(date +%s -d\"Aug 1, 2013 23:59:59\")",
        "su_1598430: month=$(date +%m)\nmaxDayThisMonth=$(( for d in {00..31}; do date -d \"+$d days\" +%m-%d ; done ; ) | grep -Po \"(?<=$month-)\\d+\" | sort -rn | head -1)\n\nnextMonth=$(printf \"%02d\" $(( ($month+1) % 12 )) )\nmaxDayNextMonth=$(( for d in {01..62}; do date -d \"+$d days\" +%m-%d ; done ; ) | grep -Po \"(?<=$nextMonth-)\\d+\" | sort -rn | head -1)",
        "so_41015725: $sel -match $regex\n$date = $matches[0]"
      ],
      "Explanations about Options": {
        "-d": "display time described by STRING, not 'now'"
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort a file preserving only unique lines",
      "Most Similar TLDR Script": "sort -u {{path/to/file}}",
      "Top-3 Similar Questions": [
        "au_61179: Find the latest file by modified date",
        "so_29526886: unix find oldest file in directory by date in filename",
        "so_16858013: sort files found by command 'find'"
      ],
      "Top-3 Scripts": [
        "au_61179: find /path -printf '%T+ %p\\n' | sort -r | head",
        "so_29526886: ls -1 | sed 's/^\\([^0-9]*\\)\\([0-9]\\+\\.txt\\)/\\2\\1/g' | sort -n | head -1 | sed 's/^\\([0-9]\\+\\.txt\\)\\(.*\\)/\\2\\1/g'",
        "so_16858013: find ... -print0 |\nsort -z -t_ -k6n -k3n |\nxargs -r0 ./myScript.py --takeFiles"
      ],
      "Explanations about Options": {
        "-z": "line delimiter is NUL, not newline",
        "-r": "reverse the result of comparisons",
        "-n": "compare according to string numerical value"
      }
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Set the times on a file to a specific date and time",
      "Most Similar TLDR Script": "touch -t {{YYYYMMDDHHMM.SS}} {{filename}}",
      "Top-3 Similar Questions": [
        "so_29526886: unix find oldest file in directory by date in filename",
        "so_16757326: Linux Find: How to find .PDF files created after a specific year?",
        "so_9090901: Finding files in subdirectories created after a certain date"
      ],
      "Top-3 Scripts": [
        "so_29526886: ",
        "so_16757326: tmp=$(mktemp /tmp/time-XXXXXXXX)\ntouch -t 200801010000 \"$tmp\"\nfind . -type f -iname '*.pdf' -newer \"$tmp\"\nrm \"$tmp\"",
        "so_9090901: DATE=<<date>>\nSEARCH_PATH=/images/\nDATE=`echo $DATE|sed 's/-//g'`\nDATE=$DATE\"0000\"\nFILE=~/timecheck_${RANDOM}_$(date +\"%Y%m%d%H%M\")\ntouch -t $DATE $FILE\nfind $SEARCH_PATH -newer $FILE 2>/dev/null|awk 'BEGIN{f=0}{if(f==1)printf(\"\\\"%s\\\", \",l);l=$0;f=1}END{printf(\"\\\"%s\\\"\",l)}'\nrm -f $FILE"
      ],
      "Explanations about Options": {
        "-t": "STAMP\n use [[CC]YY]MMDDhhmm[.ss] instead of current time"
      }
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
      "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
      "Top-3 Similar Questions": [
        "au_61179: Find the latest file by modified date",
        "so_9705579: Find files modified between two dates on Linux machine",
        "so_12586584: Find file by -m not finding files modified within date"
      ],
      "Top-3 Scripts": [
        "au_61179: find /path -printf '%T+ %p\\n' | sort -r | head",
        "so_9705579: find /home -iname \".c\" -mtime 2 -mtime -4",
        "so_12586584: find \"/path-to-file/pdfs/\" -mtime -56 -mtime +27"
      ],
      "Explanations about Options": {
        "-printf": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:",
        "-iname": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
        "-mtime": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times."
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Top-3 Similar Questions": [
        "so_16858013: sort files found by command 'find'",
        "ul_545179: Finding files based on the date contained in their filenames",
        "su_1598430: Date, find out the number of days in a month"
      ],
      "Top-3 Scripts": [
        "so_16858013: ",
        "ul_545179: ",
        "su_1598430: month=$(date +%m)\nmaxDayThisMonth=$(( for d in {00..31}; do date -d \"+$d days\" +%m-%d ; done ; ) | grep -Po \"(?<=$month-)\\d+\" | sort -rn | head -1)\n\nnextMonth=$(printf \"%02d\" $(( ($month+1) % 12 )) )\nmaxDayNextMonth=$(( for d in {01..62}; do date -d \"+$d days\" +%m-%d ; done ; ) | grep -Po \"(?<=$nextMonth-)\\d+\" | sort -rn | head -1)"
      ],
      "Explanations about Options": {}
    }
  ]
}