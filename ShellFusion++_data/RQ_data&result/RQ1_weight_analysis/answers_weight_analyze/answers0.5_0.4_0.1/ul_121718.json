{
  "Query": "How to parse JSON with shell scripting in Linux?",
  "Answers": [
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output the value of multiple keys as a new JSON object (assuming the input JSON has the keys `key_name` and `other_key_name`)",
      "Most Similar TLDR Script": "cat {{file.json}} | jq '{{{my_new_key}}: .{{key_name}}, {{my_other_key}}: .{{other_key_name}}}'",
      "Top-3 Similar Questions": [
        "so_62263081: How to parse multi properties with spacing in jq json bash script?",
        "so_65014334: parse JSON Array with spaces in bash",
        "so_53508885: How to parse JSON in shell script?"
      ],
      "Top-3 Scripts": [
        "so_62263081: readarray z_array < <(echo \"${json}\" | jq -c '.x[] | .z')\n\ndeclare -a array\nwhile read v\ndo\n    array+=(\"$v\")\ndone < <(echo \"${json}\" | jq -c '.x[] | .z')",
        "so_65014334: ",
        "so_53508885: {\n  IFS= read -r -d '' status1\n  IFS= read -r -d '' details1\n} < <(jq -r '.status + \"\\u0000\" + .details + \"\\u0000\"' <<<\"$response\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Execute a command",
      "Most Similar TLDR Script": "sh -c {{command}}",
      "Top-3 Similar Questions": [
        "ul_101642: Correctly parse arguments in script behaving like a shell called through SSH"
      ],
      "Top-3 Scripts": [
        "ul_101642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Top-3 Similar Questions": [
        "so_24644520: How to parse json response in the shell script?",
        "so_20662343: Parsing oracle SQLPLUS error message in shell script for emailing",
        "ul_101642: Correctly parse arguments in script behaving like a shell called through SSH"
      ],
      "Top-3 Scripts": [
        "so_24644520: case \"$KEY\" in\nsuccess)\n    echo \"Success message: $MESSAGE\"\n    exit 0\n    ;;\nerror)\n    echo \"Error message: $MESSAGE\"\n    exit 1\n    ;;\nesac\n\nIFS=\\\" read __ KEY __ MESSAGE __ <<< \"$DATA\"\necho \"$DATA\"  ## Your really need to show $DATA and not $MESSAGE right?\n[[ $KEY == success ]]\nexit  ## Exits with code based from current $?. Not necessary if you're on the last line of the script.",
        "so_20662343: ",
        "ul_101642: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xmllint",
      "MP Summary": "command line XML tool",
      "Most Similar TLDR Task": "Check that a XML file meets the requirements of its DOCTYPE declaration",
      "Most Similar TLDR Script": "xmllint --valid {{source_file.xml}}",
      "Top-3 Similar Questions": [
        "so_16711592: parsing xml file in unix"
      ],
      "Top-3 Scripts": [
        "so_16711592: xmllint --xpath '//Read[@IsIndexedRead = \"Y\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'\n\nxmllint --xpath '//Read[@IsIndexedRead = \"N\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'"
      ],
      "Explanations about Options": {
        "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
      }
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Execute command passed as parameter",
      "Most Similar TLDR Script": "zsh -c {{command}}",
      "Top-3 Similar Questions": [
        "ul_101642: Correctly parse arguments in script behaving like a shell called through SSH"
      ],
      "Top-3 Scripts": [
        "ul_101642: "
      ],
      "Explanations about Options": {}
    }
  ]
}