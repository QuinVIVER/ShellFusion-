{
  "Query": "How to use a shell command to only show the first column and last column in a text file?",
  "Answers": [
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output the first few lines of a file",
      "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
      "Top-3 Similar Questions": [
        "so_18515889: How can I use awk to sort columns by the last value of a column?",
        "so_14095011: Using awk to align columns in text file?",
        "so_54912228: How can I send the last column of the first line to standard output?"
      ],
      "Top-3 Scripts": [
        "so_18515889: tail -n+$L|head -n1",
        "so_14095011: $ head -1 file; tail -n+2 file | rev | column -t | rev\ntesting speed of encryption\ntest   0   (64  bit  key,    16  byte  blocks):  2250265  operations  in  1  seconds  (36004240  bytes)\ntest   1  (128  bit  key,    64  byte  blocks):   879149  operations  in  1  seconds  (56265536  bytes)\ntest   2  (128  bit  key,   256  byte  blocks):   258978  operations  in  1  seconds  (66298368  bytes)\ntest   3  (128  bit  key,  1024  byte  blocks):    68218  operations  in  1  seconds  (69855232  bytes)\ntest   4  (128  bit  key,  8192  byte  blocks):     8614  operations  in  1  seconds  (70565888  bytes)\ntest  10  (256  bit  key,    16  byte  blocks):  1790881  operations  in  1  seconds   (3654096  bytes)",
        "so_54912228: head -1 file | cut -d'|' -f5\n\nhead -1 file | rev | cut -f1 -d'|' | rev"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tail",
      "MP Summary": "output the last part of files",
      "Most Similar TLDR Task": "Show last 'num' lines in file",
      "Most Similar TLDR Script": "tail -n {{num}} {{file}}",
      "Top-3 Similar Questions": [
        "so_18515889: How can I use awk to sort columns by the last value of a column?",
        "so_14095011: Using awk to align columns in text file?",
        "so_1143718: Print last 10 rows of specific columns using awk"
      ],
      "Top-3 Scripts": [
        "so_18515889: tail -n1\n\n$ echo \"{print $(printf '$%d%.0s\\n' \\\n                      $(i=0; for x in $(tail -n1 test.dat); do\n                               echo $((++i)) $x\n                             done |\n                      sort -k2g) | paste -sd,)}\" test.dat\n{print $3,$1,$2} test.dat\n\ntail -n+$L|head -n1",
        "so_14095011: $ head -1 file; tail -n+2 file | rev | column -t | rev\ntesting speed of encryption\ntest   0   (64  bit  key,    16  byte  blocks):  2250265  operations  in  1  seconds  (36004240  bytes)\ntest   1  (128  bit  key,    64  byte  blocks):   879149  operations  in  1  seconds  (56265536  bytes)\ntest   2  (128  bit  key,   256  byte  blocks):   258978  operations  in  1  seconds  (66298368  bytes)\ntest   3  (128  bit  key,  1024  byte  blocks):    68218  operations  in  1  seconds  (69855232  bytes)\ntest   4  (128  bit  key,  8192  byte  blocks):     8614  operations  in  1  seconds  (70565888  bytes)\ntest  10  (256  bit  key,    16  byte  blocks):  1790881  operations  in  1  seconds   (3654096  bytes)",
        "so_1143718: tail -10 foofile | awk '{print \"<category label=\\\"\" $13 \" \" $14 \" \" $15 \"\\\"/>\"}'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out the 2nd and 10th fields of each line, using a semicolon as a delimiter",
      "Most Similar TLDR Script": "cut -d'{{;}}' -f{{2,10}}",
      "Top-3 Similar Questions": [
        "so_38583426: How to use cut for showing the first field of a file",
        "so_54912228: How can I send the last column of the first line to standard output?"
      ],
      "Top-3 Scripts": [
        "so_38583426: cut -f1 -d'   ' sname\n\ncut -f1 -d$'\\t' sname\n\nsed 's/ \\+/ /g' sname | cut -f2 -d\" \"",
        "so_54912228: head -1 file | cut -d'|' -f5\n\nhead -1 file | rev | cut -f1 -d'|' | rev"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a text message. Note: quotes are optional",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\"",
      "Top-3 Similar Questions": [
        "ul_198245: Get first/second file column",
        "so_46768042: Printing a column to a text using bash",
        "so_18515889: How can I use awk to sort columns by the last value of a column?"
      ],
      "Top-3 Scripts": [
        "ul_198245: #!/bin/bash\n\nwhile IFS=' ' read -r -a arr; do\n    while read j; do\n        if [ \"${arr[0]}\" = \"$j\" ]; then\n            echo \"${arr[0]} ${arr[1]}\"\n        fi\n    done < secondFile.txt\ndone < firstFile.txt",
        "so_46768042: for i in {1..174492}  \ndo  \n    for j in {0..14000..100}  \n    do  \n        echo \"$j\"  \n    done  \ndone >> \"depth\"",
        "so_18515889: $ echo \"{print $(printf '$%d%.0s\\n' \\\n                      $(i=0; for x in $(tail -n1 test.dat); do\n                               echo $((++i)) $x\n                             done |\n                      sort -k2g) | paste -sd,)}\" test.dat\n{print $3,$1,$2} test.dat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort the passwd file by the 3rd field, numerically",
      "Most Similar TLDR Script": "sort -t: -k 3n /etc/passwd",
      "Top-3 Similar Questions": [
        "so_18515889: How can I use awk to sort columns by the last value of a column?",
        "so_63475448: Can I use 'column' in bash where a column has a newline?",
        "au_1123499: using sort command while strings in first column repeats"
      ],
      "Top-3 Scripts": [
        "so_18515889: $ echo \"{print $(printf '$%d%.0s\\n' \\\n                      $(i=0; for x in $(tail -n1 test.dat); do\n                               echo $((++i)) $x\n                             done |\n                      sort -k2g) | paste -sd,)}\" test.dat\n{print $3,$1,$2} test.dat",
        "so_63475448: printf %s\\\\n \"${!myItems[@]}\" | sort |\nwhile IFS= read -r key; do\n   ...\n\nprintf %s\\\\0 \"${!myItems[@]}\" | sort -z |\nwhile IFS= read -rd '' key; do\n   paste <(printf %s \"$key\") <(printf %s \"${myItems[$key]}\")\ndone |\nsed 's/^/_/' | column -ts $'\\t' | sed 's/^_//'",
        "au_1123499: sort -k 1\n\n$ sort --stable -k 1,1 data\nALIC 5.55 2.65 3.45\nALIC 2.56 2.78 3.99\nALIC 1.00 1.00 1.00\nALIC 0.95 1.00 1.00\nAMC4 3.55 3.66 4.88\nAMC4 3.00 3.67 4.78\nAMC4 0.50 1.00 1.00\nAMC4 0.01 1.00 1.00"
      ],
      "Explanations about Options": {
        "--stable": "stabilize sort by disabling last-resort comparison",
        "-k": "sort via a key; KEYDEF gives location and type",
        "-z": "line delimiter is NUL, not newline"
      }
    }
  ]
}