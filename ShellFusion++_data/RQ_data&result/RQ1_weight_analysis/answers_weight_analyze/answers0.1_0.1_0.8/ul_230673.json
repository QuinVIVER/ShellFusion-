{
  "Query": "How to generate a random string?",
  "Answers": [
    {
      "Command": "shuf",
      "MP Summary": "generate random permutations",
      "Most Similar TLDR Task": "Generate random numbers in range",
      "Most Similar TLDR Script": "shuf -i {{1-10}}",
      "Top-3 Similar Questions": [
        "ul_430056: Generate random number after value in bash",
        "so_54554364: Generate random number except values in bash",
        "so_37127924: How to generate random numbers from a given range with provided distribution probability"
      ],
      "Top-3 Scripts": [
        "ul_430056: shuf file | xargs wget\n\nman 1 shuf\n\nshuf file | while read url; do\n    wget --user-agent=\"$(shuf -n1 uas)\" \"$url\"\ndone",
        "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(printf %s\\\\n 1 2 4 5 6 7 9)\n\nshuf -n 1 <(printf %s\\\\n 1 2 {4..7} 9)\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)",
        "so_37127924: $ awk -F'[ ()]' '{for (i=1;i<=$(NF-1);i++) print $1}' file |shuf | head -n1\nfileD"
      ],
      "Explanations about Options": {
        "-n": "output at most COUNT lines"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Top-3 Similar Questions": [
        "so_66460929: How to generate a random string in bash?",
        "so_58894982: How to generate a random string in a specific range (bash)",
        "so_59038617: Creating a custom random variable"
      ],
      "Top-3 Scripts": [
        "so_66460929: ",
        "so_58894982: #! /bin/bash\n\nsymbols='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVYXWZ~#$&_+-=/\\'  # Stupid SO: '\ncount_symbols=${#symbols}\n(( length = RANDOM % 6 + 10 ))\npassword=\"\"\nfor i in $(seq 1 $length) ; do\n    password+=${symbols:RANDOM % count_symbols:1}\ndone\necho \"$password\"",
        "so_59038617: function RANDOM(){\n    rando=$( head -100 /dev/urandom | tr -dc a-zA-Z0-9 | fold -w ${1:-15} | head -1 )\n    echo $rando\n}\n\nRANDOM\nRANDOM 4\nRANDOM 40"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strings",
      "MP Summary": "print the strings of printable characters in files.",
      "Most Similar TLDR Task": "Print all strings in a binary",
      "Most Similar TLDR Script": "strings {{file}}",
      "Top-3 Similar Questions": [
        "so_62005971: Generate strings of varying in boundaries with bash script"
      ],
      "Top-3 Scripts": [
        "so_62005971: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Separate the output with a space instead of a newline",
      "Most Similar TLDR Script": "seq -s \" \" 5 3 20",
      "Top-3 Similar Questions": [
        "so_58894982: How to generate a random string in a specific range (bash)",
        "ul_430056: Generate random number after value in bash",
        "so_54554364: Generate random number except values in bash"
      ],
      "Top-3 Scripts": [
        "so_58894982: #! /bin/bash\n\nsymbols='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVYXWZ~#$&_+-=/\\'  # Stupid SO: '\ncount_symbols=${#symbols}\n(( length = RANDOM % 6 + 10 ))\npassword=\"\"\nfor i in $(seq 1 $length) ; do\n    password+=${symbols:RANDOM % count_symbols:1}\ndone\necho \"$password\"",
        "ul_430056: for i in $(seq 0 $((${#data_link[@]} -1)) | shuf); do\n    wget -U \"${user_agent[RANDOM % ${#user_agent[@]}]}\" \"${data_link[i]}\"\ndone",
        "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wc",
      "MP Summary": "print newline, word, and byte counts for each file",
      "Most Similar TLDR Task": "Count characters (bytes) in file",
      "Most Similar TLDR Script": "wc -c {{file}}",
      "Top-3 Similar Questions": [
        "so_25613429: Generate ID number from a name in bash"
      ],
      "Top-3 Scripts": [
        "so_25613429: wc -l"
      ],
      "Explanations about Options": {
        "-l": "print the newline counts"
      }
    }
  ]
}