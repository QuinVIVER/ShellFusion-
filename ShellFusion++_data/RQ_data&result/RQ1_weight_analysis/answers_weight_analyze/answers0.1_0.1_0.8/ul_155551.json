{
  "Query": "How to debug a bash script?",
  "Answers": [
    {
      "Command": "strace",
      "MP Summary": "trace system calls and signals",
      "Most Similar TLDR Task": "Start tracing a program by executing it",
      "Most Similar TLDR Script": "strace {{program}}",
      "Top-3 Similar Questions": [
        "so_25995606: Howto debug running bash script",
        "ul_49095: Debugging hanging bash process"
      ],
      "Top-3 Scripts": [
        "so_25995606: sudo strace -p $PID",
        "ul_49095: strace -p 14229"
      ],
      "Explanations about Options": {
        "-p": "Attach to the process with the process ID pid and begin tracing. The trace\n may be terminated at any time by a keyboard interrupt signal (CTRL-C). strace\n will respond by detaching itself from the traced process(es) leaving it (them)\n to continue running. Multiple -p options can be used to attach to many\n processes in addition to command (which is optional if at least one -p option\n is given). -p \"`pidof PROG`\" syntax is supported."
      }
    },
    {
      "Command": "zsh",
      "MP Summary": "the Z shell",
      "Most Similar TLDR Task": "Run commands from file (script)",
      "Most Similar TLDR Script": "zsh {{file}}",
      "Top-3 Similar Questions": [
        "so_21837656: How to debug Shell command after customization"
      ],
      "Top-3 Scripts": [
        "so_21837656: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "sh {{file.sh}}",
      "Top-3 Similar Questions": [
        "so_951336: How can I debug a Bash script?",
        "so_3356476: Debugging monit"
      ],
      "Top-3 Scripts": [
        "so_951336: sh -x script [arg1 ...]\nbash -x script [arg1 ...]\n\n/bin/sh\n\n'#!/bin/sh",
        "so_3356476: # monit runs as superuser\n$ sudo su\n\n# the -i option ignores the inherited environment\n# this PATH is what monit supplies by default\n$ env -i PATH=/bin:/usr/bin:/sbin:/usr/sbin /bin/sh\n\n# try running start/stop program here\n$"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "env",
      "MP Summary": "run a program in a modified environment",
      "Most Similar TLDR Task": "Run a program. Often used in scripts after the shebang (#!) for looking up the path to the program",
      "Most Similar TLDR Script": "env {{program}}",
      "Top-3 Similar Questions": [
        "so_3356476: Debugging monit"
      ],
      "Top-3 Scripts": [
        "so_3356476: # monit runs as superuser\n$ sudo su\n\n# the -i option ignores the inherited environment\n# this PATH is what monit supplies by default\n$ env -i PATH=/bin:/usr/bin:/sbin:/usr/sbin /bin/sh\n\n# try running start/stop program here\n$"
      ],
      "Explanations about Options": {
        "-i": "start with an empty environment"
      }
    },
    {
      "Command": "python",
      "MP Summary": "an interpreted, interactive, object-oriented programming language",
      "Most Similar TLDR Task": "Interactively debug a Python script",
      "Most Similar TLDR Script": "python -m pdb {{script.py}}",
      "Top-3 Similar Questions": [
        "so_26459760: Debugging Python File in Linux"
      ],
      "Top-3 Scripts": [
        "so_26459760: python -m pudb.run my-script.py\n\npython -m pudb.run file.py json_file.json"
      ],
      "Explanations about Options": {
        "-m": "Searches sys.path for the named module and runs the corresponding .py file as a\n script."
      }
    }
  ]
}