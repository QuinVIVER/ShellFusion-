{
  "Query": "How to change the title of the current terminal tab using only the command line",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "au_918610: Can I change the colour of the terminal tab based on the title?",
        "so_2388090: How to delete and replace last line in the terminal using bash?",
        "au_1357423: Is it possible to close a terminal tab from the command line by targeting its title?"
      ],
      "Top-3 Scripts": [
        "au_918610: echo -ne '\\e]11;#abcdef\\a'",
        "so_2388090: seq 1 1000000 | while read i; do echo -en \"\\r$i\"; done",
        "au_1357423: killpid() {\n     PID=`ps -aux | grep \"commandnamehere\" | grep -v \"grep\" | awk '{print $2}'`;\n     if [ ! -z \"$PID\" ]\n     then\n         echo \"killing commandnamehere - $PID\";\n         echo $PID | xargs kill;\n     fi\n }"
      ],
      "Explanations about Options": {
        "-n": "do not output the trailing newline",
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "gnome-terminal",
      "MP Summary": "is a terminal emulation application.",
      "Most Similar TLDR Task": "Set the title of the new tab",
      "Most Similar TLDR Script": "gnome-terminal --tab --title \"{{title}}\"",
      "Top-3 Similar Questions": [
        "au_918610: Can I change the colour of the terminal tab based on the title?",
        "so_16573498: Ubuntu: How to I add string to terminal window title from command line?",
        "au_446041: Setting Terminal tab titles"
      ],
      "Top-3 Scripts": [
        "au_918610: ",
        "so_16573498: export mytitle=WINDOW1 && gnome-terminal\nexport mytitle=WINDOW2 && gnome-terminal",
        "au_446041: gnome-terminal --tab -t X -e \"env MYTAB=X bash\" --tab -t Y -e \"env MYTAB=Y bash\""
      ],
      "Explanations about Options": {
        "-e": "Execute the argument to this option inside the terminal."
      }
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
      "Top-3 Similar Questions": [
        "au_1357423: Is it possible to close a terminal tab from the command line by targeting its title?"
      ],
      "Top-3 Scripts": [
        "au_1357423: ps -aux | grep \"commandnamehere\" | grep -v \"grep\" | awk '{print $2}' | xargs kill\n\nkillpid() {\n     PID=`ps -aux | grep \"commandnamehere\" | grep -v \"grep\" | awk '{print $2}'`;\n     if [ ! -z \"$PID\" ]\n     then\n         echo \"killing commandnamehere - $PID\";\n         echo $PID | xargs kill;\n     fi\n }"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Top-3 Similar Questions": [
        "so_2388090: How to delete and replace last line in the terminal using bash?"
      ],
      "Top-3 Scripts": [
        "so_2388090: seq 1 1000000 | while read i; do echo -en \"\\r$i\"; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Top-3 Similar Questions": [
        "ul_11906: How to change the target directory for tab completion?"
      ],
      "Top-3 Scripts": [
        "ul_11906: _notes() {\nlocal cur\n    cur=${COMP_WORDS[COMP_CWORD]}\n    COMPREPLY=( $(compgen -f $HOME/n/$cur | cut -d\"/\" -f5 ) )\n    }\n   complete -o filenames -F _notes n"
      ],
      "Explanations about Options": {}
    }
  ]
}