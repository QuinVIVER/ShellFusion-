{
  "Query": "How to recursively find and list the latest modified files in a directory with subdirectories and times?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Top-3 Similar Questions": [
        "nl2bash_5159: Find grub.conf files in entire file system discarding errors in csh or tcsh shell",
        "nl2bash_5158: Find grub.conf files in entire file system discarding errors",
        "nl2bash_4789: Find files accessed at 23:59"
      ],
      "Top-3 Scripts": [
        "nl2bash_5159: find / -name grub.conf >& /dev/null",
        "nl2bash_5158: find / -name grub.conf 2>/dev/null",
        "nl2bash_4789: find . -atime -1 -print"
      ],
      "Explanations about Options": {
        "-atime": "File was last accessed n*24 hours ago. When find figures out how many 24-hour\n periods ago the file was last accessed, any fractional part is ignored, so to match\n -atime +1, a file has to have been accessed at least two days ago.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print."
      }
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Recursively remove a directory and all its subdirectories",
      "Most Similar TLDR Script": "rm -r {{path/to/directory}}",
      "Top-3 Similar Questions": [
        "so_23562236: find in list of directories saved to a file",
        "so_8296585: Find subdirectories with find command"
      ],
      "Top-3 Scripts": [
        "so_23562236: FILE_LIST=`mktemp --suffix=.list`\nfind ~/udit65_backup/ -maxdepth 1 -iname \"$PREFIX-*\" -type d -mtime +$NDAYS -print0 > $FILE_LIST\n# Make unwritable files... writable\nxargs -I {} -0r -a $FILE_LIST find {} ! -perm -u+w -print0 | xargs -0r chmod -R 700 -v\nxargs -0r -a $FILE_LIST rm -rf -v\nrm -f $FILE_LIST",
        "so_8296585: find <directory_name> -type d -exec sh -c \"cd {} && [ -d live ] && [ -d test ] && echo \\\"Deleting test from {}\\\" && rm -rvi test \" {} \\;\n\nfind <directory_name> -type d -exec sh -c \"cd {} && [ -d live ] && [ -d test ] && cd ../ && echo \\\"Deleting {}\\\" && rm -rvi {} \" {} \\;"
      ],
      "Explanations about Options": {
        "-v": "explain what is being done",
        "-i": "prompt before every removal",
        "-r": "remove directories and their contents recursively",
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    },
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Top-3 Similar Questions": [
        "ul_287863: \"find\" doesn't list all files under specific directories",
        "au_61179: Find the latest file by modified date",
        "so_38895490: bash finding files in directories recursively"
      ],
      "Top-3 Scripts": [
        "ul_287863: ls -ld /bin /sbin",
        "au_61179: ",
        "so_38895490: "
      ],
      "Explanations about Options": {
        "-l": "use a long listing format",
        "-d": "list directories themselves, not their contents"
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
      "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
      "Top-3 Similar Questions": [
        "nl2bash_4331: Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/"
      ],
      "Top-3 Scripts": [
        "nl2bash_4331: find $DIR/tmp/daily/ -type f -printf \"%p\\n\" | sort -rn | head -n 2 | xargs -I{} cp {} $DIR/tmp/weekly/"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Package and compress multiple directories and files",
      "Most Similar TLDR Script": "zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}",
      "Top-3 Similar Questions": [
        "nl2bash_3096: Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths"
      ],
      "Top-3 Scripts": [
        "nl2bash_3096: find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90 -printf \"%h\\n\" | sort | uniq"
      ],
      "Explanations about Options": {
        "-n": " Do not attempt to compress files named with the given suffixes. Such files are\n simply stored (0% compression) in the output zip file, so that zip doesn't waste\n its time trying to compress them. The suffixes are separated by either colons or\n semicolons. For example:",
        "-p": "Include relative file paths as part of the names of files stored in the archive.\n This is the default. The -j option junks the paths and just stores the names of\n the files.",
        "-t": " Do not operate on files modified prior to the specified date, where mm is the month\n (00-12), dd is the day of the month (01-31), and yyyy is the year. The ISO 8601\n date format yyyy-mm-dd is also accepted. For example:",
        "-m": "Move the specified files into the zip archive; actually, this deletes the target\n directories/files after making the specified zip archive. If a directory becomes\n empty after removal of the files, the directory is also removed. No deletions are\n done until zip has created the archive without error. This is useful for\n conserving disk space, but is potentially dangerous so it is recommended to use it\n in combination with -T to test the archive before removing all input files.",
        "-e": "Encrypt the contents of the zip archive using a password which is entered on the\n terminal in response to a prompt (this will not be echoed; if standard error is not\n a tty, zip will exit with an error). The password prompt is repeated to save the\n user from typing errors.",
        "-y": "For UNIX and VMS (V8.3 and later), store symbolic links as such in the zip archive,\n instead of compressing and storing the file referred to by the link. This can\n avoid multiple copies of files being included in the archive as zip recurses the\n directory trees and accesses files directly and by links.",
        "-i": " Include only the specified files, as in:",
        "-r": "Travel the directory structure recursively; for example:",
        "-f": "Replace (freshen) an existing entry in the zip archive only if it has been modified\n more recently than the version already in the zip archive; unlike the update option\n (-u) this will not add files that are not already in the zip archive. For example:"
      }
    }
  ]
}