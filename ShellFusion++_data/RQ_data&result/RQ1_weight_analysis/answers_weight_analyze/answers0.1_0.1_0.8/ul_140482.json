{
  "Query": "Kill any service running at a specific port",
  "Answers": [
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Most Similar TLDR Task": "Force kill a process",
      "Most Similar TLDR Script": "killall -KILL {{process_name}}",
      "Top-3 Similar Questions": [
        "so_13952269: Stop ssh service at specific port",
        "ul_296250: How to stop an ssh server on arch linux",
        "so_1516458: Kill process in bash that runs more than specified time?"
      ],
      "Top-3 Scripts": [
        "so_13952269: killall sshd",
        "ul_296250: killall sshd",
        "so_1516458: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Most Similar TLDR Task": "Run a command as another user and/or group",
      "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
      "Top-3 Similar Questions": [
        "so_9346211: How to kill a process on a port on ubuntu",
        "so_47467248: How to kill processes running on a port only if the port is open?",
        "au_1056644: linux command to kill a process in a running port"
      ],
      "Top-3 Scripts": [
        "so_9346211: sudo kill -9 `sudo lsof -t -i:9001`\n\nsudo kill -9 $(sudo lsof -t -i:9001)",
        "so_47467248: sudo lsof -i:9005 -t | xargs -r sudo kill\n\nif pids=$(sudo lsof -i:9005 -t); then\n    sudo kill $pids\nfi",
        "au_1056644: for p in `sudo lsof -n -i:8080 | grep LISTEN | awk '{print $2}'`; do sudo kill -9 $p; done"
      ],
      "Explanations about Options": {
        "-t": "Run the command with an SELinux security context that includes the specified\n type. If no type is specified, the default type is derived from the role."
      }
    },
    {
      "Command": "fuser",
      "MP Summary": "identify processes using files or sockets",
      "Most Similar TLDR Task": "Kill all processes accessing a file or directory (sends the `SIGKILL` signal)",
      "Most Similar TLDR Script": "fuser --kill {{path/to/file_or_directory}}",
      "Top-3 Similar Questions": [
        "au_207609: I can't kill a port process",
        "so_41523255: Kill process that is taking specific port",
        "so_45399359: how to kill port 80 in ubuntu"
      ],
      "Top-3 Scripts": [
        "au_207609: fuser -k -n tcp 3000",
        "so_41523255: fuser -k [-<SIGNAL>] <port>/<proto>\nfuser -n <proto> -k [-<SIGNAL>] <port>\n\nfuser -k 12345/tcp\nfuser -n udp -k -KILL 23456\n\nfuser -v <port>/<proto>",
        "so_45399359: fuser -k -n tcp 80"
      ],
      "Explanations about Options": {
        "-k": "Kill processes accessing the file. Unless changed with -SIGNAL, SIGKILL is sent.\n An fuser process never kills itself, but may kill other fuser processes. The\n effective user ID of the process executing fuser is set to its real user ID before\n attempting to kill.",
        "-n": "Select a different name space. The name spaces file (file names, the default), udp\n (local UDP ports), and tcp (local TCP ports) are supported. For ports, either the\n port number or the symbolic name can be specified. If there is no ambiguity, the\n shortcut notation name/space (e.g., 80/tcp) can be used."
      }
    },
    {
      "Command": "nc",
      "MP Summary": "arbitrary TCP and UDP connections and listens",
      "Most Similar TLDR Task": "Listen on a specified port and print any data received",
      "Most Similar TLDR Script": "nc -l {{port}}",
      "Top-3 Similar Questions": [
        "ul_246903: Kill process on specific port"
      ],
      "Top-3 Scripts": [
        "ul_246903: # Start a process (nc) that listens on port 8080\n$ nc -l 8080 & bg\n[1] 17454\n[1] nc -l 8080\n\n# Get the process listening on port 8080:\n$ fstat | grep :8080\ncmihai   nc         17454    3* internet stream tcp 0x0 *:8080\n\n$ kill $(portpid 8080)\n[1] + Terminated           nc -l 8080"
      ],
      "Explanations about Options": {
        "-l": "Listen for an incoming connection rather than initiating a connection to a remote\n host. The destination and port to listen on can be specified either as non-optional\n arguments, or with options -s and -p respectively. Cannot be used together with -x\n or -z. Additionally, any timeouts specified with the -w option are ignored."
      }
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Most Similar TLDR Task": "Start/Stop/Restart/Reload service (start/stop should always be available)",
      "Most Similar TLDR Script": "service {{service_name}} {{start|stop|restart|reload}}",
      "Top-3 Similar Questions": [
        "so_56081527: how to stop multiple services running exclude services which are specified in file"
      ],
      "Top-3 Scripts": [
        "so_56081527: "
      ],
      "Explanations about Options": {}
    }
  ]
}