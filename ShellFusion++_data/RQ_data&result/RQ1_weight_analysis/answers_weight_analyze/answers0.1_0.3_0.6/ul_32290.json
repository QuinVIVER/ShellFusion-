{
  "Query": "Pass command line arguments to bash script",
  "Answers": [
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Call `echo` with the \"foo\" argument",
      "Most Similar TLDR Script": "eval \"{{echo foo}}\"",
      "Top-3 Similar Questions": [
        "so_64667638: Appending command line arguments to a Bash array",
        "ul_644911: Passing a command with arguments and redirection to a function",
        "ul_213750: Split command and arguments, and put into variable in a bash script"
      ],
      "Top-3 Scripts": [
        "so_64667638: ",
        "ul_644911: eval \"$@\"\n\n#!/bin/bash\n\nf() {\n  echo \"command: $@\"\n  eval \"$@\"\n}",
        "ul_213750: eval $_rscmd --exclude=alternatives /etc/ $_mn | eval $_grep >> \"$_rslog\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run a command using the input data as arguments",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs {{command}}",
      "Top-3 Similar Questions": [
        "so_65825618: How to pass arguments to bash command",
        "ul_61183: Bash script that reads filenames from a pipe or from command line args?",
        "so_21716789: BASH Set multiple variables depending on number of lines then pass them as command arguments"
      ],
      "Top-3 Scripts": [
        "so_65825618: cat asnlookups_domains_ip.txt | awk '{print $1}' | xargs -n1 amass intel -whois -d",
        "ul_61183: ",
        "so_21716789: xargs -n 4"
      ],
      "Explanations about Options": {
        "-i": "This option is a synonym for -Ireplace-str if replace-str is specified. If the\n replace-str argument is missing, the effect is the same as -I{}. This option is\n deprecated; use -I instead.",
        "-n": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit.",
        "-o": "Reopen stdin as /dev/tty in the child process before executing the command. This\n is useful if you want xargs to run an interactive application."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "so_23866255: Bash shell argument passing...?",
        "so_24522187: How to pass and get array as an argument to shell script",
        "so_809333: Powershell Command Processing (Passing in Variables)"
      ],
      "Top-3 Scripts": [
        "so_23866255: ./foo ; echo \"y\" | ./bar ; ./baz",
        "so_24522187: #!/bin/bash\necho 'Alright! Here we can retrieve some arguments!'\necho \"Here we go: $@\" # that is including 'Wheeee' from the previous script. But we can use the same trick from above if we want to.",
        "so_809333: > cmd \"/c echo foo\"\nfoo\"\n\n49> $param = \"/c echo foo\"\n50> echoargs $param\nArg 0 is </c echo foo>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Top-3 Similar Questions": [
        "so_48110439: Argument isn't passed (bash)",
        "so_1355247: Passing BASH arguments",
        "so_64667638: Appending command line arguments to a Bash array"
      ],
      "Top-3 Scripts": [
        "so_48110439: [-z: command not found",
        "so_1355247: $ ./myscript.sh 25\nFound somestuff\n./myscript.sh: line 6: 25: command not found\n$",
        "so_64667638: #!/bin/bash\n\ndeclare -a COMMANDS=( )\n\nprintf -v command '%q ' \"/path/to/myscript\" \"$@\"\nCOMMANDS+=( \"$command\" )\nCMD_COUNT=${#COMMANDS[@]}\necho \"$CMD_COUNT\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sh",
      "MP Summary": "MirBSD Korn shell",
      "Most Similar TLDR Task": "Run commands from a file",
      "Most Similar TLDR Script": "sh {{file.sh}}",
      "Top-3 Similar Questions": [
        "so_46816671: Passing Scripts as Arguments Bash"
      ],
      "Top-3 Scripts": [
        "so_46816671: [ sh $1 $2 -eq A]\n\n[ $(sh $1 $2) == A ]\n\n[ $(sh $1 $files) == A ]\n\n[ \"$(sh \"$1\" \"$files\")\" == A ]\n\n[ \"$(sh \"$script\" \"$file\")\" == A ]"
      ],
      "Explanations about Options": {}
    }
  ]
}