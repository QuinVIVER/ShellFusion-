{
  "Query": "Copy to USB memory stick really slow?",
  "Answers": [
    {
      "Command": "fdisk",
      "MP Summary": "manipulate disk partition table",
      "Most Similar TLDR Task": "Start the partition manipulator",
      "Most Similar TLDR Script": "fdisk {{/dev/sda}}",
      "Top-3 Similar Questions": [
        "su_1041163: How do I clone a USB stick including partitions?",
        "so_22375238: How to copy data to USB device",
        "au_632775: How to copy a file from USB drive"
      ],
      "Top-3 Scripts": [
        "su_1041163: fdisk -l",
        "so_22375238: sudo fdisk /dev/<device>\n\nsudo mkfs.ext4 /dev/<device>",
        "au_632775: sudo fdisk -l /dev/sdc"
      ],
      "Explanations about Options": {
        "-l": "List the partition tables for the specified devices and then exit. If no devices\n are given, those mentioned in /proc/partitions (if that file exists) are used."
      }
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Top-3 Similar Questions": [
        "so_26282486: Copy linux partition on a usb stick",
        "ul_457124: dd copy a HDD to USB but fail to boot?",
        "au_88885: How to copy usb stick with multiple partitions?"
      ],
      "Top-3 Scripts": [
        "so_26282486: dd if=/dev/sda of=/dev/sdf bs=512",
        "ul_457124: ",
        "au_88885: sudo dd if=/dev/sdb of=/dev/sdc bs=4096 conv=notrunc,noerror\n\nsudo dd if=/dev/sdb ibs=4096 conv=noerror | gzip > your_image.gz\n\ndd if=your_image.gz | gunzip | dd of=/dev/sdc"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Top-3 Similar Questions": [
        "so_24526154: How to copy all the data from usb to specific location on OS X using terminal",
        "ul_503115: Copy specified subdirectories",
        "au_802672: How to properly copy files from hard drive to USB flash drive in tty4 terminal?"
      ],
      "Top-3 Scripts": [
        "so_24526154: cp -R /Volumes/pendrive ~/somewhereinyourhome",
        "ul_503115: cp -r --parents */H* destination/",
        "au_802672: "
      ],
      "Explanations about Options": {
        "-R": "copy directories recursively",
        "--parents": "use full source file name under DIRECTORY",
        "-r": "copy directories recursively"
      }
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Generate output faster by skipping whitespace and comment preprocessing. (Should only be used for trusted compilers)",
      "Most Similar TLDR Script": "as -f {{file.s}}",
      "Top-3 Similar Questions": [
        "au_752261: How to efficiently copy only modified files from a disk to external usb?",
        "so_38445884: Script that detect usb when it is inserted and copy files from usb to computer"
      ],
      "Top-3 Scripts": [
        "au_752261: Rsync  finds  files  that  need to be transferred using a \"quick\n   check\" algorithm (by default) that looks  for  files  that  have\n   changed  in  size  or in last-modified time.  Any changes in the\n   other preserved attributes (as requested by options) are made on\n   the  destination  file  directly  when the quick check indicates\n   that the file\u2019s data does not need to be updated.",
        "so_38445884: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sync",
      "MP Summary": "Synchronize cached writes to persistent storage",
      "Most Similar TLDR Task": "Flush all pending write operations on a single file to disk",
      "Most Similar TLDR Script": "sync {{path/to/file}}",
      "Top-3 Similar Questions": [
        "au_975788: Slow copy speed from SSD to HDD"
      ],
      "Top-3 Scripts": [
        "au_975788: "
      ],
      "Explanations about Options": {}
    }
  ]
}