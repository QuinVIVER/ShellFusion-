{
  "Query": "How to set all elements of an array to zero or any same value?",
  "Answers": [
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Top-3 Similar Questions": [
        "so_11087918: How can I assign a value to an array in Bash?",
        "so_20446193: Assign values to dynamic arrays"
      ],
      "Top-3 Scripts": [
        "so_11087918: ",
        "so_20446193: read -a myArray$i <<<\"a b c\"\n\nread -a varname\n\nread -a myArray$i <<<\"$(sed '/^\\#/d' $propertiesFile | grep$lookupProperty  | tail -n 1 | cut -d \"=\" -f2- | seds/^[[:space:]]*//;s/[[:space:]]*$//')\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Format output width to a minimum of 4 digits padding with zeros as necessary",
      "Most Similar TLDR Script": "seq -f \"%04g\" 5 3 20",
      "Top-3 Similar Questions": [
        "so_12466177: Assign value to element of an array inside a loop in bash",
        "ul_542611: BASH script: How to assign each line of command output to values in an array?",
        "so_57508297: How to set array total elements in for loop"
      ],
      "Top-3 Scripts": [
        "so_12466177: ",
        "ul_542611: $ readarray -t my_array < <( seq 10 | sed '1~2d' )",
        "so_57508297: for i in $(seq ${#SECTION[@]})\ndo \n    echo \"${SECTION[$i]}\"\n    echo \"${PATH[$i]}\" \ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "so_48694446: Assign Element of Array to Variable Bash",
        "so_38007281: How to set a range of array elements in bash",
        "ul_456826: How to set empty array elements set to zero?"
      ],
      "Top-3 Scripts": [
        "so_48694446: constraints=(A B C E Q P S)\nrand=$(( RANDOM % ${#constraints[@]} ))\nconstraint=${constraints[${rand}]}\necho \"$constraint\"\n\necho $var",
        "so_38007281: for i in {1..100}; do echo 0; done\n\n$ declare -i start=12\n$ declare -i end=12\n$ eval $(eval echo \"MY_ARRAY[{$start..$end}]=1;\")",
        "ul_456826: somearray=(1 \"\" \"\" 4)\nfor i in \"${!somearray[@]}\"; do\n    if [[ -z \"${somearray[$i]}\" ]]; then\n        somearray[$i]=0;\n    fi;\ndone\necho \"${somearray[@]}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "set",
      "MP Summary": "set or unset options and positional parameters",
      "Most Similar TLDR Task": "Display the names and values of shell variables",
      "Most Similar TLDR Script": "set",
      "Top-3 Similar Questions": [
        "so_20916050: how to set the environment value manually to integer zero in C"
      ],
      "Top-3 Scripts": [
        "so_20916050: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strings",
      "MP Summary": "print the strings of printable characters in files.",
      "Most Similar TLDR Task": "Print all strings in a binary",
      "Most Similar TLDR Script": "strings {{file}}",
      "Top-3 Similar Questions": [
        "so_20916050: how to set the environment value manually to integer zero in C"
      ],
      "Top-3 Scripts": [
        "so_20916050: BUGS\n\n   Because sprintf() and vsprintf() assume an arbitrarily long string, callers  must\n   be  careful not to overflow the actual space; this is often impossible to assure.\n   Note that the length of the strings produced is locale-dependent and difficult to\n   predict.    Use   snprintf()   and   vsnprintf()   instead  (or  asprintf(3)  and\n   vasprintf(3)).\n\nDESCRIPTION\n   The  setenv()  function  adds the variable name to the environment with the value\n   value, if name does not already exist.  If name does exist  in  the  environment,\n   then its value is changed to value if overwrite is nonzero; if overwrite is zero,\n   then the value of name is not changed.  This function makes copies of the strings\n   pointed to by name and value (by contrast with putenv(3)).\n\n\n  setenv (\"ENVIRONMENT\", \"0\", 0);\n                              \u00af"
      ],
      "Explanations about Options": {}
    }
  ]
}