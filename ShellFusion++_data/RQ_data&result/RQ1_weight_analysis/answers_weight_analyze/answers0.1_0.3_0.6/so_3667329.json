{
  "Query": "Listing only directories in UNIX",
  "Answers": [
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Most Similar TLDR Task": "List all files, with trailing `/` added to directory names",
      "Most Similar TLDR Script": "ls -F",
      "Top-3 Similar Questions": [
        "so_36149066: list the multiple file in directory",
        "so_52929029: List only numerical directory names in linux",
        "so_3151338: List only numeric file names in directory"
      ],
      "Top-3 Scripts": [
        "so_36149066: ls -lrt test_$(date +\"%Y%m%d\")\n              \u2191              \u2191",
        "so_52929029: ls -d ./*/ | sed 's/\\.\\///g' | sed 's/\\///g' | grep -E '^[0-9]+$'\n\nls -llh | grep '^d' | awk '{print $9}'",
        "so_3151338: ls [0-9]*\n\nls -al | grep -E '^[0-9]+\\.php$'"
      ],
      "Explanations about Options": {
        "-a": "do not ignore entries starting with .",
        "-t": "sort by modification time , newest first",
        "-h": "with -l and -s, print sizes like 1K 234M 2G etc.",
        "-l": "use a long listing format",
        "-r": "reverse order while sorting"
      }
    },
    {
      "Command": "mkdir",
      "MP Summary": "make directories",
      "Most Similar TLDR Task": "Create a directory in current directory or given path",
      "Most Similar TLDR Script": "mkdir {{directory}}",
      "Top-3 Similar Questions": [
        "so_42666143: List all file, but not directories, recursively in BASh",
        "nl2bash_12904: Create directorie(s) 'some/path' as required in the current directory"
      ],
      "Top-3 Scripts": [
        "so_42666143: $ mkdir temp\n$ touch temp/passwd.list\n$ touch log.txt\n$ touch foo.txt\n$ find . -type f\n./foo.txt\n./log.txt\n./temp/passwd.list",
        "nl2bash_12904: mkdir -p ./some/path"
      ],
      "Explanations about Options": {
        "-p": "no error if existing, make parent directories as needed"
      }
    },
    {
      "Command": "tree",
      "MP Summary": "list contents of directories in a tree-like format.",
      "Most Similar TLDR Task": "Print directories only",
      "Most Similar TLDR Script": "tree -d",
      "Top-3 Similar Questions": [
        "so_3745744: list directory entries in the svn repository?"
      ],
      "Top-3 Scripts": [
        "so_3745744: svnlook tree $REPO_DIR --full-paths | egrep \"/$\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Top-3 Similar Questions": [
        "so_42666143: List all file, but not directories, recursively in BASh",
        "so_27920757: bash scripts list files in a directory",
        "so_13257573: listing the files in a current directory with same permission"
      ],
      "Top-3 Scripts": [
        "so_42666143: find . -type f\n\n$ mkdir temp\n$ touch temp/passwd.list\n$ touch log.txt\n$ touch foo.txt\n$ find . -type f\n./foo.txt\n./log.txt\n./temp/passwd.list",
        "so_27920757: filear=($(find path/ -name \"*\\.xx\"))\nfilears=()\nfor f in ${filear[@]}; do filears[${#filears[@]}]=${f%\\.*}; done",
        "so_13257573: find . -maxdepth 1 -perm 644 -exec ls -ld {} \\;"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000)."
      }
    },
    {
      "Command": "mktemp",
      "MP Summary": "create a temporary file or directory",
      "Most Similar TLDR Task": "Create a temporary directory and return the absolute path to it",
      "Most Similar TLDR Script": "mktemp -d",
      "Top-3 Similar Questions": [
        "nl2bash_13099: Generates temporary file in a '/dev/shm' folder and saves path to it in a 'tFile' variable."
      ],
      "Top-3 Scripts": [
        "nl2bash_13099: tFile=$(mktemp --tmpdir=/dev/shm)"
      ],
      "Explanations about Options": {
        "--tmpdir": "interpret TEMPLATE relative to DIR; if DIR is not specified, use $TMPDIR if set,\n else /tmp. With this option, TEMPLATE must not be an absolute name; unlike with\n -t, TEMPLATE may contain slashes, but mktemp creates only the final component"
      }
    }
  ]
}