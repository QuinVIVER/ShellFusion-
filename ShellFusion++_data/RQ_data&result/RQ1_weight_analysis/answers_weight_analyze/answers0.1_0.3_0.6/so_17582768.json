{
  "Query": "How to ignore conflicts in rpm installs",
  "Answers": [
    {
      "Command": "dpkg",
      "MP Summary": "package manager for Debian",
      "Most Similar TLDR Task": "Install a package",
      "Most Similar TLDR Script": "dpkg -i {{path/to/file.deb}}",
      "Top-3 Similar Questions": [
        "au_346032: Can't install bitcoind in upgraded system due package conflicts",
        "au_1040532: How can I ignore a package dependency?"
      ],
      "Top-3 Scripts": [
        "au_346032: sudo dpkg -i --force-overwrite /var/cache/apt/archives/bitcoind_0.8.5-precise1_amd64.deb",
        "au_1040532: dpkg --ignore-depends=openssl -i mssql-server.deb"
      ],
      "Explanations about Options": {
        "--ignore-depends": "Ignore dependency-checking for specified packages (actually, checking is performed,\n but only warnings about conflicts are given, nothing else). This affects the\n Pre-Depends, Depends and Breaks fields.",
        "-i": "Install the package. If --recursive or -R option is specified, package-file must\n refer to a directory instead."
      }
    },
    {
      "Command": "apt-get",
      "MP Summary": "APT package handling utility - command-line interface",
      "Most Similar TLDR Task": "Upgrade installed packages (like `upgrade`), but remove obsolete packages and install additional packages to meet new dependencies",
      "Most Similar TLDR Script": "apt-get dist-upgrade",
      "Top-3 Similar Questions": [
        "au_57892: How do I ignore a conflicting package on a regex match in apt-get?",
        "so_28229024: How to install .rpm on Ubuntu?"
      ],
      "Top-3 Scripts": [
        "au_57892: apt-get install $(apt-cache r-cran- | grep -Fvx r-cran-vr)",
        "so_28229024: sudo apt-get install alien\nsudo alien -i package_file.rpm"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "aptitude",
      "MP Summary": "high-level interface to the package manager",
      "Most Similar TLDR Task": "Remove a package and all packages depending on it",
      "Most Similar TLDR Script": "aptitude remove {{package}}",
      "Top-3 Similar Questions": [
        "au_57892: How do I ignore a conflicting package on a regex match in apt-get?"
      ],
      "Top-3 Scripts": [
        "au_57892: aptitude '~n^r-cran-.*'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-cache",
      "MP Summary": "query the APT cache",
      "Most Similar TLDR Task": "Show packages that depend on a particular package",
      "Most Similar TLDR Script": "apt-cache rdepends {{package}}",
      "Top-3 Similar Questions": [
        "au_57892: How do I ignore a conflicting package on a regex match in apt-get?"
      ],
      "Top-3 Scripts": [
        "au_57892: apt-cache r-cran-\n\napt-get install $(apt-cache r-cran- | grep -Fvx r-cran-vr)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Include a given path to the list of directories to search for files specified in .include directives",
      "Most Similar TLDR Script": "as -I {{path/to/directory}} {{file.s}}",
      "Top-3 Similar Questions": [
        "au_613218: What are packages called in Ubuntu?"
      ],
      "Top-3 Scripts": [
        "au_613218: "
      ],
      "Explanations about Options": {}
    }
  ]
}