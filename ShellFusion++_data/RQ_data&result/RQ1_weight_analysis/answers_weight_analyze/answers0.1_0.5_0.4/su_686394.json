{
  "Query": "scp between two remote hosts from my (third) pc",
  "Answers": [
    {
      "Command": "scp",
      "MP Summary": "secure copy (remote file copy program)",
      "Most Similar TLDR Task": "Copy a file between two remote hosts transferring through the local host",
      "Most Similar TLDR Script": "scp -3 {{host1}}:{{path/to/remote_file}} {{host2}}:{{path/to/remote_directory}}",
      "Top-3 Similar Questions": [
        "ul_678412: scp when both hosts are remote and use different ports",
        "su_344967: Copying a folder from one server to another using scp",
        "so_34039796: How to copy files and folders from one remote server to another remote server using scp command?"
      ],
      "Top-3 Scripts": [
        "ul_678412: scp -3 scp://host1:port1//path/to/file  scp://host2:port2//path/to/file",
        "su_344967: scp -r",
        "so_34039796: scp -r root@64.211.219.95:/var/www/ root@42.11.37.153:/var/www/project_dir"
      ],
      "Explanations about Options": {
        "-r": "Recursively copy entire directories. Note that scp follows symbolic links\n encountered in the tree traversal.",
        "-3": "Copies between two remote hosts are transferred through the local host. Without\n this option the data is copied directly between the two remote hosts. Note that\n this option disables the progress meter."
      }
    },
    {
      "Command": "ssh-copy-id",
      "MP Summary": "use locally available keys to authorise logins on a remote machine",
      "Most Similar TLDR Task": "Copy the given public key to the remote with specific port",
      "Most Similar TLDR Script": "ssh-copy-id -i {{path/to/certificate}} -p {{port}} {{username}}@{{remote_host}}",
      "Top-3 Similar Questions": [
        "au_726893: Remote controlling my PC securely",
        "ul_141296: Shell Script - how to scp into remote server and download files and protect password",
        "so_15144401: How to trigger remote bash script"
      ],
      "Top-3 Scripts": [
        "au_726893: ssh-copy-id -p <Port number> <User name>@<Host (localhost)>",
        "ul_141296: ",
        "so_15144401: $ ssh-copy-id -i ~/.ssh/id_rsa.pub HOST_A\n$ ssh-copy-id -i ~/.ssh/id_rsa.pub HOST_B"
      ],
      "Explanations about Options": {
        "-p": "These two options are simply passed through untouched, along with their argument, to\n allow one to set the port or other ssh(1) options, respectively.",
        "-i": "Use only the key(s) contained in identity_file (rather than looking for identities\n via ssh-add(1) or in the default_ID_file). If the filename does not end in .pub\n this is added. If the filename is omitted, the default_ID_file is used."
      }
    },
    {
      "Command": "ssh-keyscan",
      "MP Summary": "gather SSH public keys from servers",
      "Most Similar TLDR Task": "Retrieve all public ssh keys of a remote host",
      "Most Similar TLDR Script": "ssh-keyscan {{host}}",
      "Top-3 Similar Questions": [
        "ul_379495: host key verification failed when I use scp"
      ],
      "Top-3 Scripts": [
        "ul_379495: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Ping host, specifying the interval in seconds between requests (default is 1 second)",
      "Most Similar TLDR Script": "ping -i {{seconds}} {{host}}",
      "Top-3 Similar Questions": [
        "au_564349: Remote monitor PC status"
      ],
      "Top-3 Scripts": [
        "au_564349: ping -c1 ipadress\n\n#!/bin/bash\n\n# machine 1\nping -c1 ipadress &> /dev/null && echo \"machine 1 is up\" || echo \"machine 1 is down\"\n\n# machine 2\nping -c1 ipadress &> /dev/null && echo \"machine 2 is up\" || echo \"machine 2 is down\"\n# .."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "fping",
      "MP Summary": "send ICMP ECHO_REQUEST packets to network hosts",
      "Most Similar TLDR Task": "List alive hosts within a subnet generated from an IP range",
      "Most Similar TLDR Script": "fping -a -g 192.168.1.1 192.168.1.254",
      "Top-3 Similar Questions": [
        "so_42809767: Bash ping two hosts and execute command based on status"
      ],
      "Top-3 Scripts": [
        "so_42809767: "
      ],
      "Explanations about Options": {}
    }
  ]
}