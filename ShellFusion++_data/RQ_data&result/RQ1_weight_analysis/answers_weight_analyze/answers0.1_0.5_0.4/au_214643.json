{
  "Query": "Help with creating a symbolic link",
  "Answers": [
    {
      "Command": "ln",
      "MP Summary": "make links between files",
      "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
      "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
      "Top-3 Similar Questions": [
        "ul_331381: Creating symbolic link",
        "ul_159843: Creating symbolic link recursively",
        "au_430957: failed to create symbolic link"
      ],
      "Top-3 Scripts": [
        "ul_331381: $ mv /home/app/var/cache /mnt/new_cache_folder\n$ ln -s /mnt/new_cache_folder /home/app/var/cache",
        "ul_159843: ",
        "au_430957: for i in /opt/metasploit-framework/*msf; do ln -s \"$i\" /usr/local/bin/; done\n\nls -1 /opt/metasploit-framework/*msf | while IFS= read -r msf; do \n    ln -s /opt/metasploit-framework/\"$i\" /usr/local/bin/; done"
      ],
      "Explanations about Options": {
        "-s": "make symbolic links instead of hard links"
      }
    },
    {
      "Command": "link",
      "MP Summary": "call the link function to create a link to a file",
      "Most Similar TLDR Task": "Create a hard link from a new file to an existing file",
      "Most Similar TLDR Script": "link {{path/to/existing_file}} {{path/to/new_file}}",
      "Top-3 Similar Questions": [
        "ul_507529: Error to Create symbolic binary link",
        "su_426162: Use a symbolic link to create a new symbolic link",
        "so_15664957: force symbolic only links"
      ],
      "Top-3 Scripts": [
        "ul_507529: [root@vvek-workstation grep]# ln -ss ./vi ./vim \nln: failed to create symbolic link \u2018./vim\u2019: File exists\n[root@vvek-workstation grep]# ln -sf ./vi ./vim \n[root@vvek-workstation grep]# ls -lart\ntotal 0\ndrwxr-xr-x. 9 root root 228 Mar 20 15:20 ..\n-rw-r--r--  1 root root   0 Mar 20 16:00 vi\nlrwxrwxrwx  1 root root   4 Mar 20 16:00 vim -> ./vi\ndrwxr-xr-x  2 root root  27 Mar 20 16:00 .",
        "su_426162: <i>link name:                link target:    absolute target:</i>\n\"<b>/somedir/LALA/</b>apache2\" + \"FOO/apache2\" = \"<b>/somedir/LALA/</b>FOO/apache2\"\n\n<i>link name:                link target:       absolute target:</i>\n\"<b>/somedir/LALA/</b>apache2\" + \"../FOO/apache2\" = \"<b>/somedir/LALA/</b>../FOO/apache2\"\n                                           \u2192 \"/somedir/FOO/apache2\"",
        "so_15664957: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gcc",
      "MP Summary": "GNU project C and C++ compiler",
      "Most Similar TLDR Task": "Compile source code without linking",
      "Most Similar TLDR Script": "gcc -c {{source.c}}",
      "Top-3 Similar Questions": [
        "so_49313434: Fail to create an executable file linking a static library",
        "so_12235622: linking library for creating static library"
      ],
      "Top-3 Scripts": [
        "so_49313434: gcc -v -c hello.c\n\ngcc -v -o Cuteee main.o -L. -lhello",
        "so_12235622: gcc myotherprogram.c -o myotherprogram -L/some/path -lxyz\n\ngcc myotherprogram.c -o myotherprogram -L/some/path -lxyz -lm"
      ],
      "Explanations about Options": {
        "-z": " in the documentation of your linker for permitted values and their meanings.",
        "-e": " Specify that the program entry point is entry. The argument is interpreted by the\n linker; the GNU linker accepts either a symbol name or an address.",
        "-o": "Place output in file file. This applies to whatever sort of output is being produced,\n whether it be an executable file, an object file, an assembler file or preprocessed C\n code.",
        "-l": "Search the library named library when linking. (The second alternative with the\n library as a separate argument is only for POSIX compliance and is not recommended.)",
        "-x": "Turn off any specification of a language, so that subsequent files are handled\n according to their file name suffixes (as they are if -x has not been used at all).",
        "-v": "Print (on standard error output) the commands executed to run the stages of\n compilation. Also print the version number of the compiler driver program and of the\n preprocessor and the compiler proper."
      }
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Dereference symbolic links before copying",
      "Most Similar TLDR Script": "cp -L {{link}} {{path/to/target_directory}}",
      "Top-3 Similar Questions": [
        "nl2bash_10630: Copy directory hierarchy \"dir\" and all its .txt files to \"dir_txt\""
      ],
      "Top-3 Scripts": [
        "nl2bash_10630: find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents"
      ],
      "Explanations about Options": {
        "-a": "same as -dR --preserve=all",
        "--parents": "use full source file name under DIRECTORY",
        "--target-directory": "copy all SOURCE arguments into DIRECTORY"
      }
    },
    {
      "Command": "readlink",
      "MP Summary": "print resolved symbolic links or canonical file names",
      "Most Similar TLDR Task": "Get the absolute path to a file",
      "Most Similar TLDR Script": "readlink -f {{filename}}",
      "Top-3 Similar Questions": [
        "so_17826143: resolve all symbolic links"
      ],
      "Top-3 Scripts": [
        "so_17826143: readlink -f A"
      ],
      "Explanations about Options": {
        "-f": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
      }
    }
  ]
}