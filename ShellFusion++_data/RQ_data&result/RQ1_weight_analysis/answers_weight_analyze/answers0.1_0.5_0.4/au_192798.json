{
  "Query": "Is it possible to read the output from any process using its PID?",
  "Answers": [
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a program using the default SIGTERM (terminate) signal",
      "Most Similar TLDR Script": "kill {{process_id}}",
      "Top-3 Similar Questions": [
        "so_7925951: killing the process with pid using a single line",
        "so_52508561: Get pids of all child/grandchild processes created from parent process"
      ],
      "Top-3 Scripts": [
        "so_7925951: pgrep -f raj | xargs kill\n\nps -ef | grep raj | awk '{print $2}' | xargs kill",
        "so_52508561: #!/usr/bin/env bash\n\nnode foo.js &\npid=$!\n\nsleep 5;\n\npgrep -P $pid | xargs kill -INT"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Top-3 Similar Questions": [
        "so_7925951: killing the process with pid using a single line",
        "so_52508561: Get pids of all child/grandchild processes created from parent process"
      ],
      "Top-3 Scripts": [
        "so_7925951: pgrep -f raj | xargs kill\n\npgrep -f raj | xargs ps",
        "so_52508561: #!/usr/bin/env bash\n\nnode foo.js &\npid=$!\n\nsleep 5;\n\npgrep -P $pid | xargs kill -INT"
      ],
      "Explanations about Options": {
        "-f": "The pattern is normally only matched against the process name. When -f is set, the\n full command line is used.",
        "-P": "Only match processes whose parent process ID is listed."
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Specify the number of maximum characters to be read",
      "Most Similar TLDR Script": "read -n {{character_count}} {{variable}}",
      "Top-3 Similar Questions": [
        "so_42635451: How to read input from Stdin with fork()",
        "so_44016803: Reading input using fgets returns duplicate lines in C",
        "so_58067471: problem getting forked process to read from STDIN using pipes"
      ],
      "Top-3 Scripts": [
        "so_42635451: Child: read [Monday]\nParent: read [Tuesday]\nParent: read [Wednesday]\n\nread(STDIN_FILENO, &c, 1)",
        "so_44016803: ....\nif (read(0, buf, nbuf) == 0) {\n....\nwhile(getcmd(buf, 7, pid) >= 0) {\n....",
        "so_58067471: cmd1  cmd2  cmd3\n                     |  w--r  w--r  |\n                 stdin              read output into program\nor fed by your program"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Print standard input to the terminal, and also pipe it into another program for further processing",
      "Most Similar TLDR Script": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}",
      "Top-3 Similar Questions": [
        "so_37535170: Capturing stdout of a Linux Process with Python using its PID"
      ],
      "Top-3 Scripts": [
        "so_37535170: $ cat out.txt\ncat: out.txt: No such file or directory\n$ echo \"This is a test.\" | tee out.txt | wc\n      1       4      16\n$ cat out.txt\nThis is a test.\n\ntee -a <filename>"
      ],
      "Explanations about Options": {
        "-a": "append to the given FILEs, do not overwrite"
      }
    },
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Most Similar TLDR Task": "Terminate a process using the default SIGTERM (terminate) signal",
      "Most Similar TLDR Script": "killall {{process_name}}",
      "Top-3 Similar Questions": [
        "so_17856928: How to terminate process from Python using pid?"
      ],
      "Top-3 Scripts": [
        "so_17856928: "
      ],
      "Explanations about Options": {}
    }
  ]
}