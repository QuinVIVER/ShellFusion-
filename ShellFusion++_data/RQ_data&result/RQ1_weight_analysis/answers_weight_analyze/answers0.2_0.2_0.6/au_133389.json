{
  "Query": "No such file or directory? But the file exists!",
  "Answers": [
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
      "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
      "Top-3 Similar Questions": [
        "so_32802997: How to copy all the files that do not exist in a directory in Linux?",
        "so_48350769: Check file exists in source before copying",
        "so_30382268: If a file exists, copy another file, but don't overwrite"
      ],
      "Top-3 Scripts": [
        "so_32802997: cp -nr /some/directory /some/backup directory",
        "so_48350769: $files = @(\"abc.ps1\", \"def.ps1\")\n$files | ?{ Test-Path $_ } | %{ $file = gi $_; cp $file.FullName \"destinationlocation\\$_\" -Force; }",
        "so_30382268: for d in ./Event_*/; do\nset -- \"$d/\"*.mcp\nif [ -e \"$1\" ]; then\n    cp -rp -v -- \"$d/KNYN.BHZ\" \"./newdir/KNYN.`echo $d | sed 's/[\\.\\/]//g;s/Event_//:'`.BHZ\"\nfi\ndone\n\ni=0;\nfor d in ./Event_*/; do\nset -- \"$d/\"*.mcp\nif [ -e \"$1\" ]; then\n    cp -rp -v -- \"$d/KNYN.BHZ\" \"./newdir/KNYN-$((++i)).BHZ\"\nfi\ndone\n\nfor d in ./Event_*/; do\nset -- \"$d/\"*.mcp\nif [ -e \"$1\" ]; then\n    cp -rp -v -- \"$d/KNYN.BHZ\" \"./newdir/KNYN.`echo $d | sed 's/[\\.\\/]//g;s/Event_//:'`_`date '+%Y-%m-%d'`.BHZ\"\nfi\ndone"
      ],
      "Explanations about Options": {
        "-v": "explain what is being done",
        "-p": "same as --preserve=mode , ownership , timestamps",
        "-r": "copy directories recursively",
        "-n": "do not overwrite an existing file (overrides a previous -i option)"
      }
    },
    {
      "Command": "mv",
      "MP Summary": "move (rename) files",
      "Most Similar TLDR Task": "Do not overwrite existing files at the target",
      "Most Similar TLDR Script": "mv -n {{source}} {{target}}",
      "Top-3 Similar Questions": [
        "so_51698898: How to overwrite file without deleting existing file?",
        "so_26540919: Bash loop - creating a folder for each existing txt file in a directory"
      ],
      "Top-3 Scripts": [
        "so_51698898: mv tempfile outputfile",
        "so_26540919: FILE_PATH=\"/media/sf_linux_sandbox/videos/\"\nfor file in \"$FILE_PATH\"/*.mp4; do\n    tmp=${file#*-}; head=${file%-\"$tmp\"}\n    mid=${tmp%-*}; tail=${tmp#\"$mid\"-}\n    base=\"${head,,}-${tail,,}\"\n    dir=${base%.mp4}\n    mkdir -p \"$dir\"\n    mv \"$file\" \"$dir/$base\"\n    echo \"$mid\" >\"$dir\"/info.txt\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Remove files from arbitrary locations",
      "Most Similar TLDR Script": "rm {{path/to/file}} {{path/to/another/file}}",
      "Top-3 Similar Questions": [
        "so_42655177: How can I delete a file only if it exists?",
        "so_68128730: Remove file if a file with the same name but different extension doesn't exist in another directory",
        "so_26689759: makefile for creating (.so) file from existing files"
      ],
      "Top-3 Scripts": [
        "so_42655177: rm -f -- filename.log\n\n[ -e filename.log ] && rm -- filename.log",
        "so_68128730: for xml in sample/xml/*; do\n  jpg=${xml%.*}.jpg\n  jpg=${xml%/*/*}/clean_raw/${jpg##*/}\n  if ! test -f \"$jpg\"; then\n    echo rm \"$xml\"\n  fi\ndone",
        "so_26689759: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "Most Similar TLDR Script": "touch {{filename}}",
      "Top-3 Similar Questions": [
        "so_3993225: In C, how can I create a file from a filepath, even if the directories are not existing?",
        "su_139046: Linux: can I create directories that don't exist while creating a new file?"
      ],
      "Top-3 Scripts": [
        "so_3993225: touch mydir/NewDir/FileB",
        "su_139046: mktouch() {\n  mkdir -p \"$(dirname \"$1\")\"\n  touch \"$1\"\n}"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Top-3 Similar Questions": [
        "nl2bash_12682: change to a directory and search for a file in that directory",
        "nl2bash_9880: Print the list of files changed within the last minute",
        "nl2bash_3641: Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC'"
      ],
      "Top-3 Scripts": [
        "nl2bash_12682: cd /nfs//office/ && find . -name '.user.log'",
        "nl2bash_9880: find / -newerct '1 minute ago' -print",
        "nl2bash_3641: find /usr/ports/ -name Makefile\\* -exec grep -l QMAKESPEC '{}' '+' | wc -l"
      ],
      "Explanations about Options": {
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print.",
        "-n": "for less than n ,"
      }
    }
  ]
}