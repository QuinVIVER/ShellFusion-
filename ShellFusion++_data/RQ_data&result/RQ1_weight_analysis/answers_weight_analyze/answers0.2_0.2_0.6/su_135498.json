{
  "Query": "Run VirtualBox in background, without a window?",
  "Answers": [
    {
      "Command": "fg",
      "MP Summary": "run jobs in the foreground",
      "Most Similar TLDR Task": "Bring most recently suspended background job to foreground",
      "Most Similar TLDR Script": "fg",
      "Top-3 Similar Questions": [
        "su_873745: Run shell commands in windows background"
      ],
      "Top-3 Scripts": [
        "su_873745: $ fg 'jobnumber'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Start a new screen session",
      "Most Similar TLDR Script": "screen",
      "Top-3 Similar Questions": [
        "so_17151141: Running Bash Script Without ending it on Exit",
        "so_22961122: Linux background a running app"
      ],
      "Top-3 Scripts": [
        "so_17151141: screen -dr YOUR_PID",
        "so_22961122: screen -SU myscript\n# opens new shell\n# run you script here\n# press ctrl + a, d (ctrl+a then just d) to leave your script running in background\n\n# to open the screen again type:\nscreen -x myscript"
      ],
      "Explanations about Options": {
        "-x": "Attach to a not detached screen session. (Multi display mode). Screen refuses to\n attach from within itself. But when cascading multiple screens, loops are not\n detected; take care.",
        "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:",
        "-U": "Run screen in UTF-8 mode. This option tells screen that your terminal sends and\n understands UTF-8 encoded characters. It also sets the default encoding for new\n windows to `utf8'.",
        "-S": "When creating a new session, this option can be used to specify a meaningful name for\n the session. This name identifies the session for \"screen -list\" and \"screen -r\"\n actions. It substitutes the default [tty.host] suffix.",
        "-r": " resumes a detached screen session. No other options (except combinations with -d/-D)\n may be specified, though an optional prefix of [pid.]tty.host may be needed to\n distinguish between multiple detached screen sessions. The second form is used to\n connect to another user's screen session which runs in multiuser mode. This indicates\n that screen should look for sessions in another user's directory. This requires\n setuid-root."
      }
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Top-3 Similar Questions": [
        "so_2970937: How to run a linux app in background process?",
        "so_6800305: Running program in background",
        "so_24843614: Execute process in background, without printing \"Done\", and get PID"
      ],
      "Top-3 Scripts": [
        "so_2970937: ",
        "so_6800305: ",
        "so_24843614: $ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active."
      ],
      "Explanations about Options": {
        "-s": " Specify the signal to be sent. The signal can be specified by using name or\n number. The behavior of signals is explained in signal(7) manual page."
      }
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display running processes",
      "Most Similar TLDR Script": "jobs -r",
      "Top-3 Similar Questions": [
        "su_873745: Run shell commands in windows background"
      ],
      "Top-3 Scripts": [
        "su_873745: $ jobs"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Most Similar TLDR Task": "Capture a specific window, given its ID as displayed by `xwininfo`, into the JPEG format",
      "Most Similar TLDR Script": "import -window {{window_id}} {{output.jpg}}",
      "Top-3 Similar Questions": [
        "so_52729207: Bash script not running in background with nohup"
      ],
      "Top-3 Scripts": [
        "so_52729207: #!/usr/bin/python\nfrom datetime import datetime\nimport time\nwith open(\"test.txt\", \"a\") as myfile:\n   for x in range(15):\n      myfile.write('appended text %s \\n' %datetime.now())\n      time.sleep(2)"
      ],
      "Explanations about Options": {}
    }
  ]
}