{
  "Query": "How to extract the first two characters of a string in shell scripting?",
  "Answers": [
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files on the first (default) field",
      "Most Similar TLDR Script": "join {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "so_64231182: How to match a column and extract values between two files in Shell",
        "so_21587962: Extracting A String Between Two Characters in Bash"
      ],
      "Top-3 Scripts": [
        "so_64231182: join <(sort file2) <(sort file1)",
        "so_21587962: s='430438229200740352 2014-02-03 14:30:45 CST <HorizonAwon> @SawBlastt @WereAutomatic 101 for me to join as well'\ngrep -oP '@\\K[^ ]*' <<< \"$s\"\nSawBlastt\nWereAutomatic"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Top-3 Similar Questions": [
        "so_45545735: How to extract first character from a string in Shell?",
        "so_21599316: How to extract a part of the string between two characters in bash?",
        "so_34798963: Extract the two first words of a string in bash"
      ],
      "Top-3 Scripts": [
        "so_45545735: echo 'A - one,B - two,C - three' | awk -F ',' '{OFS = \",\"} {for(i=1;i<=NF; i++) {$i=substr($i,1,1) }; print $0}'",
        "so_21599316: ",
        "so_34798963: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Delimit output with a NUL character instead of a newline (useful when combining with `xargs`)",
      "Most Similar TLDR Script": "dirname --zero {{path/to/directory_a}} {{path/to/file_b}}",
      "Top-3 Similar Questions": [
        "so_49527596: Extract specific word of String in bash",
        "so_33380032: Extracting a string between last two slashes in Bash"
      ],
      "Top-3 Scripts": [
        "so_49527596: $ input=\"xxx/yyy/zzz/foo.txt\"; echo $(basename $(dirname $input))\nzzz",
        "so_33380032: dir=$(basename -- \"$(dirname -- \"$str\")\")\necho \"$dir\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Top-3 Similar Questions": [
        "so_20970975: get the first 5 characters from each line in shell script",
        "so_43754540: Extract the first character after the first number",
        "so_68648599: How to extract n character from string in BOURNE SHELL?"
      ],
      "Top-3 Scripts": [
        "so_20970975: var=$(cut -c-5 <<< \"$line\")\n\nid= cut -c-5 $line\n\n#!/bin/bash\n\nfilename='sample.txt'\nwhile read -r line\ndo\n  id=$(cut -c-5 <<< \"$line\")\n  echo $id\n  #code for passing id to other script file as parameter\ndone < \"$filename\"",
        "so_43754540: s=\"1478456=Good bye 1 2\"\necho ${s//[[:digit:]]/} | cut -c1\n=",
        "so_68648599: mac_substr=$(printf \"%s\\n\" \"$mac\" | cut -b 1-9)"
      ],
      "Explanations about Options": {
        "-b": "select only these bytes"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Top-3 Similar Questions": [
        "so_21599316: How to extract a part of the string between two characters in bash?",
        "so_30844696: How to extract first letters of dashed separated words in a bash variable?",
        "so_54696472: How do I extract everything in a file after the first null character from shell"
      ],
      "Top-3 Scripts": [
        "so_21599316: ",
        "so_30844696: IFS=- read -a words <<< $MY_TEXT\nfor word in \"${words[@]}\"; do MY_INITIALS+=${word:0:1}; done",
        "so_54696472: { IFS= read -r -d '' _; cat; } <yourfile\n\nread -d ''\n\nprintf '%s\\0' one two three | { IFS= read -r -d '' _; hexdump -C; }"
      ],
      "Explanations about Options": {}
    }
  ]
}