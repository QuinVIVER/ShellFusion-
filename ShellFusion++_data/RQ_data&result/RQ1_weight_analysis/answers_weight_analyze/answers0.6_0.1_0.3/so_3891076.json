{
  "Query": "How to convert Windows end of line in Unix end of line (CR/LF to LF)",
  "Answers": [
    {
      "Command": "iconv",
      "MP Summary": "convert text from one character encoding to another",
      "Most Similar TLDR Task": "Convert file to a specific encoding, and print to `stdout`",
      "Most Similar TLDR Script": "iconv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}",
      "Top-3 Similar Questions": [
        "su_792367: What is the easiest way to convert a bunch of text files from LF (Unix) to CRLF (Windows) in a single run?",
        "au_181694: Replacing LF, NEL line endings in text file with CR+LF"
      ],
      "Top-3 Scripts": [
        "su_792367: ",
        "au_181694: iconv -f cp850 -t utf-8"
      ],
      "Explanations about Options": {
        "-t": "Use to-encoding for output characters.",
        "-f": "Use from-encoding for input characters."
      }
    },
    {
      "Command": "dos2unix",
      "MP Summary": "DOS/Mac to Unix and vice versa text file format converter",
      "Most Similar TLDR Task": "Change the line endings of a file",
      "Most Similar TLDR Script": "dos2unix {{filename}}",
      "Top-3 Similar Questions": [
        "so_27459148: convert the CR/LF line terminators in that file to Unix-style LF line terminators?"
      ],
      "Top-3 Scripts": [
        "so_27459148: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "so_26055366: Replace string '\\n' (not 'end of line') in bash script",
        "so_48562082: how to convert a one row input into multiple lines in the shell",
        "so_26985278: script to convert from ASCII to Unix-style LF"
      ],
      "Top-3 Scripts": [
        "so_26055366: $ echo \"\\\\n\"\n\\n\n\n$ x=\"\\\\n\"\n$ echo $x\n\\n\n\n$ echo $rep_old\n\\\\n\n\nwhile read line <-- this is already eating the \\n as it is reading that as an escape\ndo\n  echo -e \"$line\"",
        "so_48562082: $ cat foo.sh\n#!/bin/bash\n\ndeclare -a ips=( \"$@\" )\n\nfor ip in \"${ips[@]}\"\ndo\n  echo $ip\ndone",
        "so_26985278: "
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Store each of the next lines you enter as values of an array",
      "Most Similar TLDR Script": "read -a {{array}}",
      "Top-3 Similar Questions": [
        "so_26055366: Replace string '\\n' (not 'end of line') in bash script",
        "so_16685586: Unix command to convert multiple line data in a single line along with delimiter"
      ],
      "Top-3 Scripts": [
        "so_26055366: while read line <-- this is already eating the \\n as it is reading that as an escape\ndo\n  echo -e \"$line\"\n\nwhile read -r line",
        "so_16685586: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Strip out non-printable characters from a file",
      "Most Similar TLDR Script": "tr -cd \"[:print:]\" < {{filename}}",
      "Top-3 Similar Questions": [
        "so_4594319: shell replace cr\\lf by comma"
      ],
      "Top-3 Scripts": [
        "so_4594319: tr '\\n' ',' < input.txt > output.txt"
      ],
      "Explanations about Options": {}
    }
  ]
}