{
  "Query": "How to download playlist to mp3 format with youtube-dl?",
  "Answers": [
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Most Similar TLDR Task": "Download a playlist and extract mp3 from it",
      "Most Similar TLDR Script": "youtube-dl -i --extract-audio --audio-format mp3 -o \"%(title)s.%(ext)s\" '{{url to playlist}}'",
      "Top-3 Similar Questions": [
        "au_673442: Downloading youtube playlist with youtube-dl, skipping existing files",
        "ul_272868: Download only format mp4 on youtube-dl",
        "au_694848: How to download a youtube playlist with numbered prefix via youtube-dl?"
      ],
      "Top-3 Scripts": [
        "au_673442: youtube-dl --download-archive downloaded.txt --no-post-overwrites -ciwx --audio-format mp3 -o \"%(title)s.%(ext)s\" <em>[path here]</em>",
        "ul_272868: youtube-dl -F url\n\nyoutube-dl -f 11 url\n\nyoutube-dl -F http://www.youtube.com/watch?v=3JZ_D3ELwOQ\n\nyoutube-dl -f 22 http://www.youtube.com/watch?v=3JZ_D3ELwOQ\n\nyoutube-dl -f 137+140 http://www.youtube.com/watch?v=3JZ_D3ELwOQ",
        "au_694848: youtube-dl -o \"%(playlist_index)s-%(title)s.%(ext)s\" <playlist_link>"
      ],
      "Explanations about Options": {
        "-w": "Do not overwrite files",
        "--audio-format": "Specify audio format: \"best\", \"aac\", \"flac\", \"mp3\", \"m4a\", \"opus\", \"vorbis\", or\n \"wav\"; \"best\" by default; No effect without -x",
        "-o": "Output filename template, see the \"OUTPUT TEMPLATE\" for all the info",
        "-c": "Force resume of partially downloaded files. By default, youtube-dl will resume\n downloads if possible.",
        "--download-archive": "Download only videos not listed in the archive file. Record the IDs of all\n downloaded videos in it.",
        "--no-post-overwrites": "Do not overwrite post-processed files; the post-processed files are overwritten by\n default",
        "-i": "Continue on download errors, for example to skip unavailable videos in a playlist"
      }
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Extract the sound from a video and save it as MP3",
      "Most Similar TLDR Script": "ffmpeg -i {{video.mp4}} -vn {{sound}}.mp3",
      "Top-3 Similar Questions": [
        "au_634584: How to download youtube videos as a best quality audio mp3 using youtube-dl",
        "so_41310196: Bash: bash script to download trimmed mp3 from youtube url",
        "au_742083: How to download an entire YouTube playlist as a single mp3 file?"
      ],
      "Top-3 Scripts": [
        "au_634584: -x, --extract-audio                  Convert video files to audio-only files (requires ffmpeg or avconv and ffprobe or avprobe)\n    --audio-format FORMAT            Specify audio format: \"best\", \"aac\", \"vorbis\", \"mp3\", \"m4a\", \"opus\", or \"wav\"; \"best\" by default\n    --audio-quality QUALITY          Specify ffmpeg/avconv audio quality, insert a value between 0 (better) and 9 (worse) for VBR or a specific bitrate like 128K (default",
        "so_41310196: mytrim() {\n    local downloaded_file\n    youtube-dl --extract-audio --embed-thumbnail --audio-format mp3 -o \"%(title)s.%(ext)s\" $1\n    downloaded_file=$(youtube-dl --get-filename --extract-audio --embed-thumbnail --audio-format mp3 -o \"%(title)s.%(ext)s\" $1)\n    ffmpeg -ss $2 -i \"${downloaded_file}\" -acodec copy -y temp.mp3\n    mv temp.mp3 \"${downloaded_file}\"\n}",
        "au_742083: printf \"file '%s'\\n\" *.mp3 | ffmpeg -f concat -i - -codec copy all.mp3"
      ],
      "Explanations about Options": {
        "-ss": "When used as an input option (before \"-i\"), seeks in this input file to position. Note\n that in most formats it is not possible to seek exactly, so ffmpeg will seek to the\n closest seek point before position. When transcoding and -accurate_seek is enabled\n (the default), this extra segment between the seek point and position will be decoded\n and discarded. When doing stream copy or when -noaccurate_seek is used, it will be\n preserved.",
        "-": "Use a completely zeroed out quantization matrix. This increases PSNR but\n might reduce perception. Use in bogus benchmarks.",
        "-y": "Overwrite output files without asking.",
        "-acodec": "Set the audio codec. This is an alias for \"-codec:a\".",
        "-i": "input file url"
      }
    },
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Download the contents of an URL to a file",
      "Most Similar TLDR Script": "curl {{http://example.com}} -o {{filename}}",
      "Top-3 Similar Questions": [
        "ul_462646: A file on AkamaiGlobalHost downloads with a browser but not with curl",
        "au_285976: Download ZIP file with curl command",
        "ul_198326: Download an article with cURL given a dynamic download link"
      ],
      "Top-3 Scripts": [
        "ul_462646: ",
        "au_285976: curl -LO",
        "ul_198326: curl -L --referer \";auto\" -o test.pdf URL-for-direct-download"
      ],
      "Explanations about Options": {
        "--referer": "(HTTP) Sends the \"Referrer Page\" information to the HTTP server. This can also be\n set with the -H, --header flag of course. When used with -L, --location you can\n append \";auto\" to the -e, --referer URL to make curl automatically set the previous\n URL when it follows a Location: header. The \";auto\" string can be used alone, even\n if you don't set an initial -e, --referer.",
        "-O": "Write output to a local file named like the remote file we get. (Only the file part\n of the remote file is used, the path is cut off.)",
        "-o": "Write output to <file> instead of stdout. If you are using {} or [] to fetch\n multiple documents, you can use '#' followed by a number in the <file> specifier.\n That variable will be replaced with the current string for the URL being fetched.\n Like in:"
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Store a formatted message in a variable (does not work on zsh)",
      "Most Similar TLDR Script": "printf -v {{myvar}} {{\"This is %s = %d\\n\" \"a year\" 2016}}",
      "Top-3 Similar Questions": [
        "au_742083: How to download an entire YouTube playlist as a single mp3 file?"
      ],
      "Top-3 Scripts": [
        "au_742083: printf \"file '%s'\\n\" *.mp3 | ffmpeg -f concat -i - -codec copy all.mp3\n\navconv -i \"concat:$(printf '%s|' *.mp3 | head -c -1)\" -codec copy all.mp3"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "aria2c",
      "MP Summary": "The ultra fast download utility",
      "Most Similar TLDR Task": "Download the contents of an URL to a file",
      "Most Similar TLDR Script": "aria2c -o {{filename}} {{url}}",
      "Top-3 Similar Questions": [
        "so_22114610: Downloading a file with wget using multiple connections"
      ],
      "Top-3 Scripts": [
        "so_22114610: aria2c -x 16 [url] #where 16 is the number of connections"
      ],
      "Explanations about Options": {
        "-x": "The maximum number of connections to one server for each download. Default: 1"
      }
    }
  ]
}