{
  "Query": "Capture RTSP stream from IP Camera and store",
  "Answers": [
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Most Similar TLDR Task": "Convert frames from a video or GIF into individual numbered images",
      "Most Similar TLDR Script": "ffmpeg -i {{video.mpg|video.gif}} {{frame_%d.png}}",
      "Top-3 Similar Questions": [
        "su_109548: Movie clips capture from camcorders over firewire in Debian testing/unstable",
        "ul_655667: Why can't receive rtp stream on Ubuntu?"
      ],
      "Top-3 Scripts": [
        "su_109548: dvgrab -format dv1 - | ffmpeg -f dv -i - -target ntsc-vcd foo.mpg",
        "ul_655667: ffmpeg -f x11grab -framerate 25 -video_size 1920x1080 -i :1.0 -c:v libx264 -preset fast -pix_fmt bgr0 -b:v 3M -g 25 -an -f rtp_mpegts rtp://a.b.c.d:5005"
      ],
      "Explanations about Options": {
        "-": "Use a completely zeroed out quantization matrix. This increases PSNR but\n might reduce perception. Use in bogus benchmarks.",
        "-preset": "Configuration preset. This does some automatic settings based on the general type of\n the image.",
        "-video_size": "Set the video frame size.",
        "-framerate": "Set the grabbing frame rate. Default is \"ntsc\", corresponding to a frame rate of\n \"30000/1001\".",
        "-target": "Specify target file type (\"vcd\", \"svcd\", \"dvd\", \"dv\", \"dv50\"). type may be prefixed\n with \"pal-\", \"ntsc-\" or \"film-\" to use the corresponding standard. All the format\n options (bitrate, codecs, buffer sizes) are then set automatically. You can just type:",
        "-i": "input file url",
        "-an": "As an input option, blocks all audio streams of a file from being filtered or being\n automatically selected or mapped for any output. See \"-discard\" option to disable\n streams individually."
      }
    },
    {
      "Command": "tcpdump",
      "MP Summary": "dump traffic on a network",
      "Most Similar TLDR Task": "Capture the traffic of a specific interface",
      "Most Similar TLDR Script": "tcpdump -i {{eth0}}",
      "Top-3 Similar Questions": [
        "au_635525: How to capture output from tcpdump",
        "ul_29367: tcpdump: \"packets captured\" vs \"packets received by filter\""
      ],
      "Top-3 Scripts": [
        "au_635525: sudo tcpdump -l -q ip | awk '{system(\"echo \" $0 \" > out\")}'\n\nsudo tcpdump -l -q ip | awk '{print $3}'\n\nsudo tcpdump -l -q ip | awk '/tcp/ {print $0}'\n\nsudo tcpdump -l -q ip | awk '/tcp/ {\"echo \" $0 \" > out\"}'\n\nman tcpdump\n\n-l     Make  stdout  line  buffered.\n          Useful if you want to see the data while capturing it.\n          E.g.,\n                 tcpdump -l | tee dat\n          or\n                 tcpdump -l > dat & tail -f dat",
        "ul_29367: tcpdump -r capture.cap | wc -l"
      ],
      "Explanations about Options": {
        "-l": "Make stdout line buffered. Useful if you want to see the data while capturing it.\n E.g.,",
        "-r": "Read packets from file (which was created with the -w option or by other tools that\n write pcap or pcap-ng files). Standard input is used if file is ``-''."
      }
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Print standard input to the terminal, and also pipe it into another program for further processing",
      "Most Similar TLDR Script": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}",
      "Top-3 Similar Questions": [
        "au_140782: How can I capture text from my terminal without redirecting it to a text file?",
        "au_635525: How to capture output from tcpdump"
      ],
      "Top-3 Scripts": [
        "au_140782: | tee [output file]\n\nsudo apt-get update | tee out.log",
        "au_635525: -l     Make  stdout  line  buffered.\n          Useful if you want to see the data while capturing it.\n          E.g.,\n                 tcpdump -l | tee dat\n          or\n                 tcpdump -l > dat & tail -f dat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tshark",
      "MP Summary": "Dump and analyze network traffic",
      "Most Similar TLDR Task": "Write captured packet to a file",
      "Most Similar TLDR Script": "tshark -w {{path/to/file}}",
      "Top-3 Similar Questions": [
        "au_784827: How to get all the mac address from captured package?"
      ],
      "Top-3 Scripts": [
        "au_784827: sudo apt-get install tshark\n\ntshark -r all.cap -i eth0 -nn -e eth.src -Tfields\n\ntshark -r aalmac.pcap -i eth0 -nn -e ip.src -e eth.src -Tfield\n\ntshark -r all.cap -i eth0 -nn -e eth.src -Tfields | sort | uniq"
      ],
      "Explanations about Options": {
        "-n": "Disable network object name resolution (such as hostname, TCP and UDP port names); the\n -N option might override this one.",
        "-d": "Like Wireshark's Decode As... feature, this lets you specify how a layer type should\n be dissected. If the layer type in question (for example, tcp.port or udp.port for a\n TCP or UDP port number) has the specified selector value, packets should be dissected\n as the specified protocol.",
        "-e": "Add a field to the list of fields to display if -T ek|fields|json|pdml is selected.\n This option can be used multiple times on the command line. At least one field must\n be provided if the -T fields option is selected. Column names may be used prefixed\n with \"_ws.col.\"",
        "-s": "Set the default snapshot length to use when capturing live data. No more than snaplen\n bytes of each network packet will be read into memory, or saved to disk. A value of 0\n specifies a snapshot length of 262144, so that the full packet is captured; this is\n the default.",
        "-T": "Set the format of the output when viewing decoded packet data. The options are one\n of:",
        "-i": "Set the name of the network interface or pipe to use for live packet capture.",
        "-r": "Read packet data from infile, can be any supported capture file format (including\n gzipped files). It is possible to use named pipes or stdin (-) here but only with\n certain (not compressed) capture file formats (in particular: those that can be read\n without seeking backwards).",
        "-f": "Set the capture filter expression."
      }
    },
    {
      "Command": "rtmpdump",
      "MP Summary": "RTMP streaming media client",
      "Most Similar TLDR Task": "Download a file from a server that requires a referrer",
      "Most Similar TLDR Script": "rtmpdump --rtmp {{rtmp://example.com/path/to/video}} --pageUrl {{http://example.com/webpage}} -o {{file.ext}}",
      "Top-3 Similar Questions": [
        "ul_272398: How to download rtmp video stream on linux?"
      ],
      "Top-3 Scripts": [
        "ul_272398: $ rtmpdump -r rtmp://video4.earthcam.com/archives/MP4:abbeyroad_archives/2016/03/26/1700.mp4 -y MP4:abbeyroad_archives/2016/03/26/1700.mp4 -o ~/2016-03-26_1700.mp4"
      ],
      "Explanations about Options": {}
    }
  ]
}