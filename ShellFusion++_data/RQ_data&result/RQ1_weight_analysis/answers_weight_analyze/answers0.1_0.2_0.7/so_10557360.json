{
  "Query": "Convert xlsx to csv in Linux with command line",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?",
        "so_22635338: Convert an HTML expandable list into tabular or csv format",
        "so_30296245: Convert OWL/XML in RDF/XML with a simple command line in shell"
      ],
      "Top-3 Scripts": [
        "so_11310750: ",
        "so_22635338: while read -r prefix content\ndo\n     echo \"do something with a line >>$content<< with a prefix >>$prefix<<\"\ndone\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")",
        "so_30296245: "
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Top-3 Similar Questions": [
        "ul_147816: Convert key=value blocks to CSV",
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?",
        "so_22635338: Convert an HTML expandable list into tabular or csv format"
      ],
      "Top-3 Scripts": [
        "ul_147816: ",
        "so_11310750: ",
        "so_22635338: while read -r prefix content\ndo\n     echo \"do something with a line >>$content<< with a prefix >>$prefix<<\"\ndone\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Top-3 Similar Questions": [
        "so_22635338: Convert an HTML expandable list into tabular or csv format",
        "so_17273304: BASH: Convert multi lined (JSON) block into a single line string",
        "su_662327: How to convert column of text to CSV"
      ],
      "Top-3 Scripts": [
        "so_22635338: sed '/^[#!+]/d'\n\nsed 's/<[^>]*>//g'\n\nsed 's/^./& /'\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")",
        "so_17273304: sed -rn '/\"description\": *\"Reads 95%\",/,/],/{/statistics|description/!{1h; 1!H;};/],/{x;s/ *\\n *|^ *|],//gp;};}' out\n\n# gives 304000,0,8.7931875,7.948696618436826,6907.677974959667,13594.0",
        "su_662327: # echo '\"10\"\n\"30\"\n\"u\"\n\"hello\"' | tr '\\n' ',' | sed s/',$'/\\\\n/g\n\n\"10\",\"30\",\"u\",\"hello\""
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Top-3 Similar Questions": [
        "so_68795784: Convert XLSX to CSV (SaveAs) changes date format"
      ],
      "Top-3 Scripts": [
        "so_68795784: Import-Excel C:\\temp\\TestDates.xlsx | \nSelect-Object Number,@{Name = 'Date'; Expression = { $_.Date.ToString('mm/dd/yyyy')}} | \nExport-Csv C:\\temp\\TestDates.csv -NoTypeInformation"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cut",
      "MP Summary": "remove sections from each line of files",
      "Most Similar TLDR Task": "Cut out everything from the 3rd character to the end of each line",
      "Most Similar TLDR Script": "cut -c {{3-}}",
      "Top-3 Similar Questions": [
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?"
      ],
      "Top-3 Scripts": [
        "so_11310750: "
      ],
      "Explanations about Options": {}
    }
  ]
}