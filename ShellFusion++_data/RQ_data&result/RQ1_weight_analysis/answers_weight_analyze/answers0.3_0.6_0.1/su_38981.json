{
  "Query": "How can I find only the executable files under a certain directory in Linux?",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files by extension",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}'",
      "Top-3 Similar Questions": [
        "nl2bash_3460: Find all files under /somefolder matching the extended case insensitive regex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$' in their paths",
        "nl2bash_2719: Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree",
        "so_8607888: Finding all files with certain extension in Unix?"
      ],
      "Top-3 Scripts": [
        "nl2bash_3460: find -E /somefolder -type f -iregex '\\./(.*\\.error.*|second.*log|.*FFPC\\.log)$'",
        "nl2bash_2719: find /path/to/look/in/ -type d | grep .texturedata",
        "so_8607888: find .\n\nfind / -type f -name \"*.jdk\"\n\nfind / -type f -name \"*.jdk\" 2> /dev/null"
      ],
      "Explanations about Options": {
        "-iregex": "Like -regex, but the match is case insensitive.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Top-3 Similar Questions": [
        "so_40775912: How do I find instances of a file in directory/sub-directories in C?"
      ],
      "Top-3 Scripts": [
        "so_40775912: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file into another directory, keeping the filename",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_parent_directory}}",
      "Top-3 Similar Questions": [
        "so_25821119: Find files in multiple directories taken from list in a file?"
      ],
      "Top-3 Scripts": [
        "so_25821119: for line in \"`cat fromDirs.txt`\"; do find \"$line\" -type f \\( -name '*good*' -o -exec grep -F \"(NODES_'TASK')\" {} \\; \\) -exec cp {} /tmp/ \\;; done"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Top-3 Similar Questions": [
        "so_16787916: Find the files existing in one directory but not in the other"
      ],
      "Top-3 Scripts": [
        "so_16787916: diff -r dir1 dir2 | grep dir1 | awk '{print $4}' > difference1.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rm",
      "MP Summary": "remove files or directories",
      "Most Similar TLDR Task": "Recursively remove a directory and all its subdirectories",
      "Most Similar TLDR Script": "rm -r {{path/to/directory}}",
      "Top-3 Similar Questions": [
        "so_4093882: How can I find all files with a certain line in the source?"
      ],
      "Top-3 Scripts": [
        "so_4093882: grep --recursive --files-with-matches Hello $HOME | xargs -d '\\n' rm -f"
      ],
      "Explanations about Options": {
        "-f": "ignore nonexistent files and arguments, never prompt"
      }
    }
  ]
}