{
  "Query": "How do I divide in the Linux console?",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "so_30398014: Divide two variables in bash",
        "so_24093798: How to divide variable by 10",
        "so_24103647: Dividing double-precision shell variables in a shell script"
      ],
      "Top-3 Scripts": [
        "so_30398014: var1=8\nvar2=4\necho $((var1 / var2))\n\nvar1=3\nvar2=4\necho $((var1 / var2))\n\necho \"scale=2 ; $var1 / $var2\" | bc",
        "so_24093798: echo \"scale=1; $RX/10\" | bc",
        "so_24103647: C=$(echo \"$A / $B\" | bc -l)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Copy a file to another location",
      "Most Similar TLDR Script": "cp {{path/to/source_file.ext}} {{path/to/target_file.ext}}",
      "Top-3 Similar Questions": [
        "so_30234984: dividing outputs in make by filename"
      ],
      "Top-3 Scripts": [
        "so_30234984: %.output1: %.input\n    # If the stem that matched the '%' is equal to 'filename1'\n    if [ filename1 = '$*' ]; then\n        # Then copy the prerequisite/input file to the output file name.\n        cp $< $@\n    fi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "calc",
      "MP Summary": "arbitrary precision calculator",
      "Most Similar TLDR Task": "Perform a calculation in non-interactive mode",
      "Most Similar TLDR Script": "calc -p '{{85 * (36 / 4)}}'",
      "Top-3 Similar Questions": [
        "so_27359546: Divide column values of different files by a constant then output one minus the other"
      ],
      "Top-3 Scripts": [
        "so_27359546: awk -v c=10 -v k=20 '                        ;# pass values to awk variables\n    /^#/ {next}                              ;# skip headers\n    FNR==NR {val[$1]=$2; next}               ;# store values from file1\n    $1 in val {print $1, (val[$1]/c - $2/k)} ;# perform the calc and print\n' file1 file2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "column",
      "MP Summary": "columnate lists",
      "Most Similar TLDR Task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
      "Most Similar TLDR Script": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
      "Top-3 Similar Questions": [
        "so_49538596: How to divide columns by a constant in bash"
      ],
      "Top-3 Scripts": [
        "so_49538596: $ awk ... | column -t\nERR843978.746   5        18       23.6667\nERR843978.1705  2.33333  15       17\nERR843978.5030  1        15.3333  19.3333"
      ],
      "Explanations about Options": {
        "-t": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays."
      }
    },
    {
      "Command": "pass",
      "MP Summary": "stores, retrieves, generates, and synchronizes passwords securely",
      "Most Similar TLDR Task": "Edit an entry",
      "Most Similar TLDR Script": "pass edit {{path/to/data}}",
      "Top-3 Similar Questions": [
        "so_27359546: Divide column values of different files by a constant then output one minus the other"
      ],
      "Top-3 Scripts": [
        "so_27359546: awk -v c=10 -v k=20 '                        ;# pass values to awk variables\n    /^#/ {next}                              ;# skip headers\n    FNR==NR {val[$1]=$2; next}               ;# store values from file1\n    $1 in val {print $1, (val[$1]/c - $2/k)} ;# perform the calc and print\n' file1 file2"
      ],
      "Explanations about Options": {}
    }
  ]
}