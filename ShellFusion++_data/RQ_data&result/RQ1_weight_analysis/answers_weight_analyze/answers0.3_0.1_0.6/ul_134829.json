{
  "Query": "compare two columns of different files and print if it matches",
  "Answers": [
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "ul_419239: match two columns from one file to three columns from another file, print out lines from the file with two columns",
        "so_49958479: compare two columns in two different files in shell script",
        "ul_633241: Compare three columns of two files"
      ],
      "Top-3 Scripts": [
        "ul_419239: join --nocheck-order -j 1 A B | \nwhile read a b c d ; do \n    [[ ( b -le d && b -ge c ) || ( b -le c && b -ge d ) ]] && echo $a $b\ndone",
        "so_49958479: join -t',' -a 1 -a 2 -j 2 file1 file2\n2018042100,21,45\n2018042101,22\n2018042102,87,86\n2018042103,98,87\n\njoin -t',' -a 1 -a 2 -e \"0\" -j 2 file1 file2  | sed -r 's/^[^,]+,[^,]+$/&,0/'\n2018042100,21,45\n2018042101,22,0\n2018042102,87,86\n2018042103,98,87",
        "ul_633241: function join(start, end, sep,       str, i) {\n    if (!sep) sep = OFS\n    str = $start\n    for (i = start + 1; i <= end; i++) str = str sep $i\n    return str\n}\n \n          { key = $1 OFS $2 OFS $3 }\nNR == FNR { f1[key] = join(4, NF); next }\nkey in f1 { print key, f1[key], join(4, NF) }"
      ],
      "Explanations about Options": {
        "-a": "FILENUM\n also print unpairable lines from file FILENUM, where FILENUM is 1 or 2,\n corresponding to FILE1 or FILE2",
        "-j": "FIELD\n equivalent to '-1 FIELD -2 FIELD'",
        "-e": "EMPTY\n replace missing input fields with EMPTY",
        "--nocheck-order": "do not check that the input is correctly sorted"
      }
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Top-3 Similar Questions": [
        "so_27066633: compare if two columns of a file is identiical in linux",
        "su_1329584: How to compare two columns of two different files",
        "so_28215871: Comparing 2 files in linux for different word"
      ],
      "Top-3 Scripts": [
        "so_27066633: diff <(awk '{print $1}' data) <(awk '{print $4}' data)\n\nif diff <(awk '{print $1}' data) <(awk '{print $4}' data) >& /dev/null;\nthen \n    echo same; \nelse \n    echo different; \nfi",
        "su_1329584: diff <(sort file1 | cut -d , -f 1-2) <(sort file2 | cut -d , -f 1-2)",
        "so_28215871: $ diff a.txt b.txt\n\n$ diff -u a.txt b.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "paste",
      "MP Summary": "merge lines of files",
      "Most Similar TLDR Task": "Merge two files, with lines added alternatively",
      "Most Similar TLDR Script": "paste -d '\\n' {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "au_1251013: How to compare two columns from two different files?",
        "so_37951225: Compare two files field by field in Unix"
      ],
      "Top-3 Scripts": [
        "au_1251013: paste file1 file2 | awk '{print $2, $14 == $3 ? \"OK\" : \"error\"}'",
        "so_37951225: paste/awk\n\n$ paste -d'|' file1 file2 | \n  awk -F'|' '{w=NF/2; \n              for(i=1;i<=w;i++) \n                 if($i!=$(i+w)) printf \"%d %d %s %s\", NR,i,$i,$(i+w); \n              print \"\"}'\n\n1 5 lmn 123"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
      "Most Similar TLDR Script": "comm {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "so_14450562: Compare lines of two files, print lines unique to first file"
      ],
      "Top-3 Scripts": [
        "so_14450562: comm -23 \"File 1\" \"File 2\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "ul_419239: match two columns from one file to three columns from another file, print out lines from the file with two columns",
        "so_27066633: compare if two columns of a file is identiical in linux",
        "au_899774: Recursively compare counts of specific files between two directories"
      ],
      "Top-3 Scripts": [
        "ul_419239: join --nocheck-order -j 1 A B | \nwhile read a b c d ; do \n    [[ ( b -le d && b -ge c ) || ( b -le c && b -ge d ) ]] && echo $a $b\ndone",
        "so_27066633: if diff <(awk '{print $1}' data) <(awk '{print $4}' data) >& /dev/null;\nthen \n    echo same; \nelse \n    echo different; \nfi",
        "au_899774: for dir in DIRECTORY01/*/ ; do fcount=$(find \"$dir\" -maxdepth 1 -type f \\( -name '*.flac' -o -name '*.m4a' -o -name '*.mp3' \\) -printf . | wc -c) ; ocount=$(find \"${dir/DIRECTORY01/DIRECTORY02}\" -maxdepth 1 -type f -name '*.ogg' -printf . | wc -c); if [[ \"$fcount\" -ne \"$ocount\" ]]; then echo \"$dir has $fcount .flac .m4a and .mp3 files but ${dir/DIRECTORY01/DIRECTORY02} has $ocount .ogg files\" ; fi ; done\n\nfor dir in DIRECTORY01/*/ ; do\n  fcount=$(find \"$dir\" -maxdepth 1 -type f \\( -name '*.flac' -o -name '*.m4a' -o -name '*.mp3' \\) -printf . | wc -c)\n  ocount=$(find \"${dir/DIRECTORY01/DIRECTORY02}\" -maxdepth 1 -type f -name '*.ogg' -printf . | wc -c)\n  if [[ \"$fcount\" -ne \"$ocount\" ]]; then\n    echo \"$dir has $fcount .flac .m4a and .mp3 files but ${dir/DIRECTORY01/DIRECTORY02} has $ocount .ogg files\"\n  fi\ndone"
      ],
      "Explanations about Options": {}
    }
  ]
}