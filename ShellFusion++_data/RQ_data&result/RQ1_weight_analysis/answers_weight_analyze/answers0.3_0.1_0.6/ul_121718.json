{
  "Query": "How to parse JSON with shell scripting in Linux?",
  "Answers": [
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output the value of multiple keys as a new JSON object (assuming the input JSON has the keys `key_name` and `other_key_name`)",
      "Most Similar TLDR Script": "cat {{file.json}} | jq '{{{my_new_key}}: .{{key_name}}, {{my_other_key}}: .{{other_key_name}}}'",
      "Top-3 Similar Questions": [
        "so_33537039: Json parsing with Linux shell script",
        "so_53508885: How to parse JSON in shell script?",
        "so_46257850: Parsing multiple json values in linux jq"
      ],
      "Top-3 Scripts": [
        "so_33537039: jq '.entries[0].author.value' /tmp/data.json \n\"plugin-demo Administrator\"",
        "so_53508885: {\n  IFS= read -r -d '' status1\n  IFS= read -r -d '' details1\n} < <(jq -r '.status + \"\\u0000\" + .details + \"\\u0000\"' <<<\"$response\")",
        "so_46257850: while read -r user query; do \n    echo \"user->$user\"\n    echo \"query->$query\"\ndone < <( jq -r '.[] | \"\\(.user) \\(.userQuery)\"' <<< \"$jstring\" )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the specified exit code",
      "Most Similar TLDR Script": "exit {{exit_code}}",
      "Top-3 Similar Questions": [
        "so_24644520: How to parse json response in the shell script?",
        "so_22235637: How to execute a url and parse it from bash shell script?"
      ],
      "Top-3 Scripts": [
        "so_24644520: case \"$KEY\" in\nsuccess)\n    echo \"Success message: $MESSAGE\"\n    exit 0\n    ;;\nerror)\n    echo \"Error message: $MESSAGE\"\n    exit 1\n    ;;\nesac\n\nIFS=\\\" read __ KEY __ MESSAGE __ <<< \"$DATA\"\necho \"$DATA\"  ## Your really need to show $DATA and not $MESSAGE right?\n[[ $KEY == success ]]\nexit  ## Exits with code based from current $?. Not necessary if you're on the last line of the script.",
        "so_22235637: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "perl",
      "MP Summary": "The Perl 5 language interpreter",
      "Most Similar TLDR Task": "Parse and execute a Perl script",
      "Most Similar TLDR Script": "perl {{script.pl}}",
      "Top-3 Similar Questions": [
        "so_40848249: Parse json from bash script variable for a string"
      ],
      "Top-3 Scripts": [
        "so_40848249: perl -lne 'print \"$1\" if /.*\\\"_id\\\" : \\\"([[:alnum:]]+)\\\".*/' file\n579289cc0\n5792892323\n57923320"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ruby",
      "MP Summary": "Interpreted object-oriented scripting language",
      "Most Similar TLDR Task": "Execute a Ruby script",
      "Most Similar TLDR Script": "ruby {{script.rb}}",
      "Top-3 Similar Questions": [
        "so_33537039: Json parsing with Linux shell script"
      ],
      "Top-3 Scripts": [
        "so_33537039: ruby -e 'require \"json\"; puts JSON.parse(File.read(\"data.json\"))[\"entries\"][0][\"author\"][\"value\"]'"
      ],
      "Explanations about Options": {
        "-e": "Specifies script from command-line while telling Ruby not to search the rest\n of the arguments for a script file name."
      }
    },
    {
      "Command": "xmllint",
      "MP Summary": "command line XML tool",
      "Most Similar TLDR Task": "Check that a XML file meets the requirements of its DOCTYPE declaration",
      "Most Similar TLDR Script": "xmllint --valid {{source_file.xml}}",
      "Top-3 Similar Questions": [
        "so_16711592: parsing xml file in unix"
      ],
      "Top-3 Scripts": [
        "so_16711592: xmllint --xpath '//Read[@IsIndexedRead = \"Y\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'\n\nxmllint --xpath '//Read[@IsIndexedRead = \"N\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'"
      ],
      "Explanations about Options": {
        "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
      }
    }
  ]
}