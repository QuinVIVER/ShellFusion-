{
  "Query": "Convert xlsx to csv in Linux with command line",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Append a message to the file",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\" >> {{file.txt}}",
      "Top-3 Similar Questions": [
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?",
        "ul_673960: Convert to csv file with same name using AWK command",
        "so_22635338: Convert an HTML expandable list into tabular or csv format"
      ],
      "Top-3 Scripts": [
        "so_11310750: ",
        "ul_673960: for f in /FILES/detail*; do awk -f test.awk $f > $(echo $f | sed -e 's/^\\/FILES\\///' -e 's/:/_/').csv; done",
        "so_22635338: while read -r prefix content\ndo\n     echo \"do something with a line >>$content<< with a prefix >>$prefix<<\"\ndone\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")"
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "xmllint",
      "MP Summary": "command line XML tool",
      "Most Similar TLDR Task": "Return human-readable (indented) XML from file",
      "Most Similar TLDR Script": "xmllint --format {{source_file.xml}}",
      "Top-3 Similar Questions": [
        "so_50903945: script to convert Csv to xml"
      ],
      "Top-3 Scripts": [
        "so_50903945: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dd",
      "MP Summary": "convert and copy a file",
      "Most Similar TLDR Task": "Check progress of an ongoing dd operation (Run this command from another shell)",
      "Most Similar TLDR Script": "kill -USR1 $(pgrep ^dd)",
      "Top-3 Similar Questions": [
        "so_68795784: Convert XLSX to CSV (SaveAs) changes date format"
      ],
      "Top-3 Scripts": [
        "so_68795784: Import-Excel C:\\temp\\TestDates.xlsx | \nSelect-Object Number,@{Name = 'Date'; Expression = { $_.Date.ToString('mm/dd/yyyy')}} | \nExport-Csv C:\\temp\\TestDates.csv -NoTypeInformation"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Most Similar TLDR Task": "Use a specific character as a delimiter instead of a new line",
      "Most Similar TLDR Script": "read -d {{new_delimiter}} {{variable}}",
      "Top-3 Similar Questions": [
        "ul_147816: Convert key=value blocks to CSV",
        "so_11310750: How to convert a group of csv files to another group of csv files(with different filenames and format)?",
        "so_22635338: Convert an HTML expandable list into tabular or csv format"
      ],
      "Top-3 Scripts": [
        "ul_147816: ",
        "so_11310750: ",
        "so_22635338: while read -r prefix content\ndo\n     echo \"do something with a line >>$content<< with a prefix >>$prefix<<\"\ndone\n\nkegfile=\"KEG\"\nwhile read -r prefix content\ndo\n    case \"$prefix\" in\n        A) col1=\"$content\" ;;\n        B) col2=\"$content\" ;;\n        C) echo -e \"$col1\\t$col2\\t$content\";;\n    esac\ndone < <(sed '/^[#!+]/d;s/<[^>]*>//g;s/^./& /' < \"$kegfile\")"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "in2csv",
      "MP Summary": "manual page for in2csv 1.0.2",
      "Most Similar TLDR Task": "Convert a specific sheet from an XLSX file to CSV",
      "Most Similar TLDR Script": "in2csv --sheet={{sheet_name}} {{data.xlsx}}",
      "Top-3 Similar Questions": [
        "au_973534: Convert .xls/.xlsx spreadsheets to multiple .csv's based on a list"
      ],
      "Top-3 Scripts": [
        "au_973534: while IFS= read -r file; do\n    while IFS= read -r sheet; do\n        in2csv --sheet \"$sheet\" \"$file\" > \"${file%.*}-${sheet}.csv\"\n    done < <(in2csv -n \"$file\")\ndone < <(find . -name '*.xls' -o -name '*.xlsx')"
      ],
      "Explanations about Options": {
        "--sheet": "SHEET\n The name of the Excel sheet to operate on.",
        "-n": "Display sheet names from the input Excel file."
      }
    }
  ]
}