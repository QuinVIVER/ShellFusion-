{
  "Query": "Wait for a process to finish",
  "Answers": [
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Most Similar TLDR Task": "Wait for all processes known to the invoking shell to finish",
      "Most Similar TLDR Script": "wait",
      "Top-3 Similar Questions": [
        "so_44509440: Bash script, can't wait for eval command to finish when called in a function",
        "so_23906392: How to wait for any job to finished using shell script?",
        "so_57263534: Why doesn't bash script wait for its child processes to finish before exiting the parent script on receiving Sigterm?"
      ],
      "Top-3 Scripts": [
        "so_44509440: sleep 5 & pid=$!\nwait $pid &\n\nsleep 5 & pid=$!\nwaitForCommand() { wait \"$@\"; }\nwaitForCommand \"$pid\"\n\nsleep 5 & pid=$!\nwaitForCommand() { wait \"$@\"; }\nwaitForCommand \"$pid\" &\n\nwait()",
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "so_57263534: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Top-3 Similar Questions": [
        "ul_602274: Bash function that will wait for a process to be finished before starting a new one",
        "so_23906392: How to wait for any job to finished using shell script?",
        "so_29889074: how to wait for first command to finish?"
      ],
      "Top-3 Scripts": [
        "ul_602274: ",
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "so_29889074: while kill -0 $BACK_PID ; do\n    echo \"Process is still active...\"\n    sleep 1\n    # You can add a timeout here if you want\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display stopped processes",
      "Most Similar TLDR Script": "jobs -s",
      "Top-3 Similar Questions": [
        "ul_656103: Waiting for any process to finish in bash script",
        "so_62937344: Shell script: Wait for any process in a group to finish",
        "so_37205010: wait one process to finish and execute another process"
      ],
      "Top-3 Scripts": [
        "ul_656103: ",
        "so_62937344: for i in {1..9}; do\n  ( for p in 32 16 8; do\n      srun ... & jobs+=($!)\n    done\n    wait -n  \"${jobs[@]}\" # Wait for one of the preceding 3 jobs to complete\n    kill \"${jobs[@]}\"     # Kill the other two\n  ) &\ndone\n\nwait  # Wait for each of the 9 groups to complete",
        "so_37205010: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Most Similar TLDR Task": "Force kill a process",
      "Most Similar TLDR Script": "killall -KILL {{process_name}}",
      "Top-3 Similar Questions": [
        "ul_55558: How can I kill and wait for background processes to finish in a shell script when I Ctrl+C it?"
      ],
      "Top-3 Scripts": [
        "ul_55558: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Return PIDs of any running processes with a matching command string",
      "Most Similar TLDR Script": "pgrep {{process_name}}",
      "Top-3 Similar Questions": [
        "so_8038723: Wait for all processes with a certain name to finish (in bash)",
        "ul_530457: Script hanging when using tee and wait, why?"
      ],
      "Top-3 Scripts": [
        "so_8038723: wait $(pgrep programName)",
        "ul_530457: exec {out}>&1 {err}>&2\nexec > >(tee -a output) 2>&1\n...\nexec >&$out 2>&$err\nwait $(pgrep -P \"$$\")\n\nwait $(pgrep -P \"$$\")\n\npgrep -P"
      ],
      "Explanations about Options": {
        "-P": "Only match processes whose parent process ID is listed."
      }
    }
  ]
}