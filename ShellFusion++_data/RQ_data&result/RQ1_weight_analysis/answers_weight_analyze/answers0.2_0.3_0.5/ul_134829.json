{
  "Query": "compare two columns of different files and print if it matches",
  "Answers": [
    {
      "Command": "join",
      "MP Summary": "join lines of two files on a common field",
      "Most Similar TLDR Task": "Join two files using a comma (instead of a space) as the field separator",
      "Most Similar TLDR Script": "join -t {{','}} {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "ul_454678: compare first column of 2 file : while second have 2 column but first have one column",
        "ul_419239: match two columns from one file to three columns from another file, print out lines from the file with two columns",
        "so_49958479: compare two columns in two different files in shell script"
      ],
      "Top-3 Scripts": [
        "ul_454678: ",
        "ul_419239: join --nocheck-order -j 1 A B | \nwhile read a b c d ; do \n    [[ ( b -le d && b -ge c ) || ( b -le c && b -ge d ) ]] && echo $a $b\ndone",
        "so_49958479: join -t',' -a 1 -a 2 -j 2 file1 file2\n2018042100,21,45\n2018042101,22\n2018042102,87,86\n2018042103,98,87\n\njoin -t',' -a 1 -a 2 -e \"0\" -j 2 file1 file2  | sed -r 's/^[^,]+,[^,]+$/&,0/'\n2018042100,21,45\n2018042101,22,0\n2018042102,87,86\n2018042103,98,87"
      ],
      "Explanations about Options": {
        "-a": "FILENUM\n also print unpairable lines from file FILENUM, where FILENUM is 1 or 2,\n corresponding to FILE1 or FILE2",
        "-j": "FIELD\n equivalent to '-1 FIELD -2 FIELD'",
        "-e": "EMPTY\n replace missing input fields with EMPTY",
        "--nocheck-order": "do not check that the input is correctly sorted"
      }
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Top-3 Similar Questions": [
        "su_1329584: How to compare two columns of two different files",
        "au_1067061: How to compare the output of the \"head\" command applied to two different files?",
        "so_28215871: Comparing 2 files in linux for different word"
      ],
      "Top-3 Scripts": [
        "su_1329584: diff <(sort file1 | cut -d , -f 1-2) <(sort file2 | cut -d , -f 1-2)",
        "au_1067061: # lines different, have output\n$ diff <(head -n 1 /etc/passwd) <(head -n1 input.txt)\n1c1\n< root:x:0:0:root:/root:/bin/bash\n---\n> hello world\n# same file, first lines aren't different, no output\n$ diff <(head -n 1 /etc/passwd) <(head -n1 passwd.copy)\n$\n\n$ diff <(head -n 1 /etc/passwd) <(head -n1 passwd.copy)\n1c1\n< root:x:0:0:root:/root:/bin/bash\n---\n> root:x:0:0:root:/root:/bin/bash",
        "so_28215871: $ diff a.txt b.txt\n\n$ diff -u a.txt b.txt"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Append several files into the target file",
      "Most Similar TLDR Script": "cat {{file1}} {{file2}} >> {{target_file}}",
      "Top-3 Similar Questions": [
        "so_18592736: awk compare columns from two files, impute values of another column",
        "so_54485639: How to compare parts of lines of two txt files?"
      ],
      "Top-3 Scripts": [
        "so_18592736: ",
        "so_54485639: $ cat a\naaaa   bbbb\ncccc   dddd\n$ cat b\naaaa   eeee\nffff   gggg\n$ join a b\naaaa bbbb eeee"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "comm",
      "MP Summary": "select or reject lines common to two files",
      "Most Similar TLDR Task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
      "Most Similar TLDR Script": "comm {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "so_14450562: Compare lines of two files, print lines unique to first file"
      ],
      "Top-3 Scripts": [
        "so_14450562: comm -23 \"File 1\" \"File 2\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Top-3 Similar Questions": [
        "so_24587197: How to compare a list of variables in bash?"
      ],
      "Top-3 Scripts": [
        "so_24587197: saveVars=\"`grep -vxFe \"$initialVars\" <<<\"$(set -o posix ; set)\"| grep -v ^initialVars=`\"\n\ngrep -vxFe \"$initialVars\" <<<\"$(set -o posix ; set)\"| grep -v ^initialVars= > snapshot.sav"
      ],
      "Explanations about Options": {
        "-x": "Select only those matches that exactly match the whole line. For a regular\n expression pattern, this is like parenthesizing the pattern and then surrounding it\n with ^ and $.",
        "-v": "Invert the sense of matching, to select non-matching lines.",
        "-F": "Interpret PATTERNS as fixed strings, not regular expressions."
      }
    }
  ]
}