{
  "Query": "How to compare two floating point numbers in Bash?",
  "Answers": [
    {
      "Command": "cmp",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Find the byte number and differing bytes of every difference",
      "Most Similar TLDR Script": "cmp -l {{file1}} {{file2}}",
      "Top-3 Similar Questions": [
        "so_48491662: Comparing two version numbers in a shell script",
        "so_36270264: How to compare two large files in Linux?"
      ],
      "Top-3 Scripts": [
        "so_48491662: if cmp -s <(cut -d: -f2 infile) <(cut -d: -f2 infile | sort -V); then\n    echo 'FAILURE'\nelse\n    echo 'SUCCESS'\nfi",
        "so_36270264: $ cmp -l file1.txt file2.txt\n12 170 161\n18  67  61\n19  66  62"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Most Similar TLDR Task": "Calculate expression and force number of decimal places to 10",
      "Most Similar TLDR Script": "bc <<< \"scale=10; 5 / 3\"",
      "Top-3 Similar Questions": [
        "so_39799064: [: missing `]' error while comparing variables with floating point numbers in a bash script",
        "so_55595636: Comparing floating-point numbers in an `if` statement in bash",
        "so_29956696: Comparing float values in bash"
      ],
      "Top-3 Scripts": [
        "so_39799064: ",
        "so_55595636: ",
        "so_29956696: if [ $(echo \" 0.5 > $X \" | bc -l )==1 ]; then\n  echo grande\nfi\n\nif [ \"$(echo \" 0.5 > $X \" | bc -l )\" == 1 ]; then\n  echo grande\nfi"
      ],
      "Explanations about Options": {
        "-l": "Define the standard math library."
      }
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a float number with the unicode Euro sign",
      "Most Similar TLDR Script": "printf \"{{\\u20AC %.2f\\n}}\" {{123.4}}",
      "Top-3 Similar Questions": [
        "au_611600: How to compare float variables in awk?",
        "so_28304185: Determining the number of decimals in a float number",
        "so_48491662: Comparing two version numbers in a shell script"
      ],
      "Top-3 Scripts": [
        "au_611600: ",
        "so_28304185: printf -v v '6.%03d' $((i*20))",
        "so_48491662: CurrV='1.5.2'\nExpecV='1.8.1'\nprintf -v versions '%s\\n%s' \"$CurrV\" \"$ExpecV\"\nif [[ $versions = \"$(sort -V <<< \"$versions\")\" ]]; then\n    echo 'FAILURE'\nelse\n    echo 'SUCCESS'\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
      "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
      "Top-3 Similar Questions": [
        "so_36270264: How to compare two large files in Linux?"
      ],
      "Top-3 Scripts": [
        "so_36270264: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Most Similar TLDR Task": "Sort numbers with exponents",
      "Most Similar TLDR Script": "sort --general-numeric-sort {{path/to/file}}",
      "Top-3 Similar Questions": [
        "so_48491662: Comparing two version numbers in a shell script"
      ],
      "Top-3 Scripts": [
        "so_48491662: if cmp -s <(cut -d: -f2 infile) <(cut -d: -f2 infile | sort -V); then\n    echo 'FAILURE'\nelse\n    echo 'SUCCESS'\nfi\n\nCurrV='1.5.2'\nExpecV='1.8.1'\nprintf -v versions '%s\\n%s' \"$CurrV\" \"$ExpecV\"\nif [[ $versions = \"$(sort -V <<< \"$versions\")\" ]]; then\n    echo 'FAILURE'\nelse\n    echo 'SUCCESS'\nfi"
      ],
      "Explanations about Options": {
        "-V": "natural sort of (version) numbers within text"
      }
    }
  ]
}