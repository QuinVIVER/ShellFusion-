{
  "Query": "Run VirtualBox in background, without a window?",
  "Answers": [
    {
      "Command": "fg",
      "MP Summary": "run jobs in the foreground",
      "Most Similar TLDR Task": "Bring most recently suspended background job to foreground",
      "Most Similar TLDR Script": "fg",
      "Top-3 Similar Questions": [
        "su_873745: Run shell commands in windows background",
        "su_435187: Execute background program in bash without job control"
      ],
      "Top-3 Scripts": [
        "su_873745: $ fg 'jobnumber'",
        "su_435187: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "gnome-terminal",
      "MP Summary": "is a terminal emulation application.",
      "Most Similar TLDR Task": "Run a specific command in a new terminal window",
      "Most Similar TLDR Script": "gnome-terminal -- {{command}}",
      "Top-3 Similar Questions": [
        "au_20330: How to run a script without closing the terminal?",
        "au_512545: How to run a command without keyboard?"
      ],
      "Top-3 Scripts": [
        "au_20330: gconftool --set /apps/gnome-terminal/global/confirm_window_close --type boolean false",
        "au_512545: #/bin/bash\n\ngnome-terminal -e \"command-to-execute-which-has-output\""
      ],
      "Explanations about Options": {
        "-e": "Execute the argument to this option inside the terminal."
      }
    },
    {
      "Command": "login",
      "MP Summary": "begin session on the system",
      "Most Similar TLDR Task": "Login as user without authentication if user is preauthenticated",
      "Most Similar TLDR Script": "login -f {{user}}",
      "Top-3 Similar Questions": [
        "ul_381286: Is it possible to run xserver without any window?",
        "ul_382829: How can I run bash without running initialization/configuration scripts?"
      ],
      "Top-3 Scripts": [
        "ul_381286: xterm -geometry +1+1 -n login -display :0",
        "ul_382829: -i        If the -i option is present, the shell is interactive.\n   -l        Make bash act as if it had been invoked as a login shell (see INVOCATION below).\n\n(...)\n\n   --noprofile\n          Do  not  read  either  the  system-wide  startup  file  /etc/profile  or  any  of  the  personal initialization files ~/.bash_profile,\n          ~/.bash_login, or ~/.profile.  By default, bash reads these files when it is invoked as a login shell (see INVOCATION below)."
      ],
      "Explanations about Options": {
        "-p": "Preserve environment."
      }
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Top-3 Similar Questions": [
        "so_24843614: Execute process in background, without printing \"Done\", and get PID",
        "au_20330: How to run a script without closing the terminal?",
        "so_2970937: How to run a linux app in background process?"
      ],
      "Top-3 Scripts": [
        "so_24843614: $ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active.",
        "au_20330: There is still a process running in this terminal\nClosing the terminal will kill it.",
        "so_2970937: "
      ],
      "Explanations about Options": {
        "-s": " Specify the signal to be sent. The signal can be specified by using name or\n number. The behavior of signals is explained in signal(7) manual page."
      }
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Start a new screen session",
      "Most Similar TLDR Script": "screen",
      "Top-3 Similar Questions": [
        "so_17151141: Running Bash Script Without ending it on Exit"
      ],
      "Top-3 Scripts": [
        "so_17151141: screen -dr YOUR_PID"
      ],
      "Explanations about Options": {
        "-r": " resumes a detached screen session. No other options (except combinations with -d/-D)\n may be specified, though an optional prefix of [pid.]tty.host may be needed to\n distinguish between multiple detached screen sessions. The second form is used to\n connect to another user's screen session which runs in multiuser mode. This indicates\n that screen should look for sessions in another user's directory. This requires\n setuid-root.",
        "-d": "does not start screen, but detaches the elsewhere running screen session. It has the\n same effect as typing \"C-a d\" from screen's controlling terminal. -D is the\n equivalent to the power detach key. If no session can be detached, this option is\n ignored. In combination with the -r/-R option more powerful effects can be achieved:"
      }
    }
  ]
}