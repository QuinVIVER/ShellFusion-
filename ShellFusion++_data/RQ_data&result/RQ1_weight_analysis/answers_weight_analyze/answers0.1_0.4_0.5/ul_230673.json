{
  "Query": "How to generate a random string?",
  "Answers": [
    {
      "Command": "shuf",
      "MP Summary": "generate random permutations",
      "Most Similar TLDR Task": "Generate random numbers in range",
      "Most Similar TLDR Script": "shuf -i {{1-10}}",
      "Top-3 Similar Questions": [
        "au_638524: Create Random non words",
        "ul_301315: Execute random command"
      ],
      "Top-3 Scripts": [
        "au_638524: shuf -i 1-10 -n1",
        "ul_301315: COMMANDS=(\"command1\" \"command2\" \"command3\")\n$(shuf -n1 -e \"${COMMANDS[@]}\")"
      ],
      "Explanations about Options": {
        "-i": "treat each number LO through HI as an input line",
        "-e": "treat each ARG as an input line"
      }
    },
    {
      "Command": "apg",
      "MP Summary": "generates several random passwords",
      "Most Similar TLDR Task": "Create random passwords (default password length is 8)",
      "Most Similar TLDR Script": "apg",
      "Top-3 Similar Questions": [
        "tldr_3170: Create random passwords (default password length is 8)"
      ],
      "Top-3 Scripts": [
        "tldr_3170: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
      "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
      "Top-3 Similar Questions": [
        "so_59038617: Creating a custom random variable",
        "so_66460929: How to generate a random string in bash?",
        "so_40277918: Shell script to generate random hex numbers"
      ],
      "Top-3 Scripts": [
        "so_59038617: function RANDOM(){\n    rando=$( head -100 /dev/urandom | tr -dc a-zA-Z0-9 | fold -w ${1:-15} | head -1 )\n    echo $rando\n}\n\nRANDOM\nRANDOM 4\nRANDOM 40",
        "so_66460929: ",
        "so_40277918: echo \"#$(openssl rand -hex 3)\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Most Similar TLDR Task": "Separate the output with a space instead of a newline",
      "Most Similar TLDR Script": "seq -s \" \" 5 3 20",
      "Top-3 Similar Questions": [
        "so_58894982: How to generate a random string in a specific range (bash)",
        "ul_254962: How to implement \"generators\" like $RANDOM?"
      ],
      "Top-3 Scripts": [
        "so_58894982: #! /bin/bash\n\nsymbols='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVYXWZ~#$&_+-=/\\'  # Stupid SO: '\ncount_symbols=${#symbols}\n(( length = RANDOM % 6 + 10 ))\npassword=\"\"\nfor i in $(seq 1 $length) ; do\n    password+=${symbols:RANDOM % count_symbols:1}\ndone\necho \"$password\"",
        "ul_254962: $ fifo=~/.generators/incr\n$ (umask  077 && mkdir -p $fifo:h && rm -f $fifo && mkfifo $fifo)\n$ seq infinity > $fifo &\n$ exec 3< $fifo\n$ IFS= read -rneu3\n1\n$ IFS= read -rneu3\n2"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "mknod",
      "MP Summary": "make block or character special files",
      "Most Similar TLDR Task": "Create a block device",
      "Most Similar TLDR Script": "sudo mknod {{path/to/device_file}} b {{major_device_number}} {{minor_device_number}}",
      "Top-3 Similar Questions": [
        "tldr_3769: Create a block device",
        "ul_254962: How to implement \"generators\" like $RANDOM?"
      ],
      "Top-3 Scripts": [
        "tldr_3769: sudo mknod {{path/to/device_file}} b {{major_device_number}} {{minor_device_number}}",
        "ul_254962: mknod()"
      ],
      "Explanations about Options": {}
    }
  ]
}