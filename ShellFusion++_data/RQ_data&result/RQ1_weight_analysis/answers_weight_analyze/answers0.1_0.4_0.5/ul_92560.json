{
  "Query": "List all connected SSH sessions?",
  "Answers": [
    {
      "Command": "autossh",
      "MP Summary": "monitor and restart ssh sessions",
      "Most Similar TLDR Task": "Open an SSH session, restarting when a monitoring port fails return data",
      "Most Similar TLDR Script": "autossh -M {{monitor_port}} {{ssh_command}}",
      "Top-3 Similar Questions": [
        "su_350745: Automatically reconnect interactive SSH session"
      ],
      "Top-3 Scripts": [
        "su_350745: autossh -t you@somehost.example.com 'screen -R'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Most Similar TLDR Task": "Kill the current screen session",
      "Most Similar TLDR Script": "Ctrl + A, K",
      "Top-3 Similar Questions": [
        "su_350745: Automatically reconnect interactive SSH session",
        "so_20070824: Session screen - how to get session list",
        "so_13546651: Killing ssh session kills running process"
      ],
      "Top-3 Scripts": [
        "su_350745: screen -R",
        "so_20070824: screen -ls | grep $'^\\t' | while read name _rest ; do\n    # Process $name\ndone",
        "so_13546651: screen -S some_name\n\nscreen -rd some_name\n\nscreen -ls"
      ],
      "Explanations about Options": {
        "-l": "turns login mode on or off (for /run/utmp updating). This can also be defined\n through the \"deflogin\" .screenrc command.",
        "-s": "sets the default shell to the program specified, instead of the value in the\n environment variable $SHELL (or \"/bin/sh\" if not defined). This can also be defined\n through the \"shell\" .screenrc command. See also there."
      }
    },
    {
      "Command": "ssh",
      "MP Summary": "OpenSSH SSH client (remote login program)",
      "Most Similar TLDR Task": "Connect to a remote server",
      "Most Similar TLDR Script": "ssh {{username}}@{{remote_host}}",
      "Top-3 Similar Questions": [
        "so_3214512: in my bash loop over a list of some servers, if the ssh connects the bash script exits",
        "ul_287517: Connect To A Specific Host",
        "su_350745: Automatically reconnect interactive SSH session"
      ],
      "Top-3 Scripts": [
        "so_3214512: ssh -n -q -oPasswordAuthentication=no -i id_dsa user1@${line} date",
        "ul_287517: ssh user@loki",
        "su_350745: "
      ],
      "Explanations about Options": {
        "-a": "Disables forwarding of the authentication agent connection.",
        "-q": "Quiet mode. Causes most warning and diagnostic messages to be suppressed.",
        "-A": "Enables forwarding of the authentication agent connection. This can also be\n specified on a per-host basis in a configuration file.",
        "-t": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty.",
        "-o": "Can be used to give options in the format used in the configuration file. This is\n useful for specifying options for which there is no separate command-line flag. For\n full details of the options listed below, and their possible values, see\n ssh_config(5).",
        "-e": "Sets the escape character for sessions with a pty (default: \u2018~\u2019). The escape\n character is only recognized at the beginning of a line. The escape character\n followed by a dot (\u2018.\u2019) closes the connection; followed by control-Z suspends the\n connection; and followed by itself sends the escape character once. Setting the\n character to \u201cnone\u201d disables any escapes and makes the session fully transparent.",
        "-s": "May be used to request invocation of a subsystem on the remote system. Subsystems\n facilitate the use of SSH as a secure transport for other applications (e.g.\n sftp(1)). The subsystem is specified as the remote command.",
        "-w": "Requests tunnel device forwarding with the specified tun(4) devices between the\n client (local_tun) and the server (remote_tun).",
        "-c": "Selects the cipher specification for encrypting the session."
      }
    },
    {
      "Command": "sftp",
      "MP Summary": "OpenSSH secure file transfer",
      "Most Similar TLDR Task": "Connect to a remote server and enter an interactive command mode",
      "Most Similar TLDR Script": "sftp {{remote_user}}@{{remote_host}}",
      "Top-3 Similar Questions": [
        "au_944811: sftp - how to connect to non-default port?"
      ],
      "Top-3 Scripts": [
        "au_944811: sftp -oPort=port_number host_name\n\nsftp -oPort=24"
      ],
      "Explanations about Options": {
        "-t": "Sort the listing by last modification time.",
        "-o": "Can be used to pass options to ssh in the format used in ssh_config(5). This is\n useful for specifying options for which there is no separate sftp command-line flag.\n For example, to specify an alternate port use: sftp -oPort=24. For full details of\n the options listed below, and their possible values, see ssh_config(5).",
        "-r": "Reverse the sort order of the listing.",
        "-P": "Specifies the port to connect to on the remote host."
      }
    },
    {
      "Command": "tmux",
      "MP Summary": "terminal multiplexer",
      "Most Similar TLDR Task": "Attach to a named session",
      "Most Similar TLDR Script": "tmux attach-session -t {{name}}",
      "Top-3 Similar Questions": [
        "au_821724: recover ssh session connection"
      ],
      "Top-3 Scripts": [
        "au_821724: $ tmux      /* starts new shell, with tmux status bar at the bottom of terminal window */\n$           /* do stuff */\n$ Ctrl-b d  /* key escape sequence to detach from tmux session */\n$ exit\n\n            /* ... time passes; much later you ssh back in ... */\n\n$ tmux attach\n\n            /* and you're back on the session you detached from */"
      ],
      "Explanations about Options": {}
    }
  ]
}