{
  "Query": "Get exit code of a background process",
  "Answers": [
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Top-3 Similar Questions": [
        "ul_116098: reliable return code of background process",
        "ul_302762: Get the exit code of processes forked from the master process",
        "ul_96209: Get exit code of command executed by the linux script command"
      ],
      "Top-3 Scripts": [
        "ul_116098: bash -c '(exit 12; foo) & pid=$!\n         while : bar & [ \"$pid\" != \"$!\" ]; do :;done\n         wait \"$pid\"; echo \"$?\"'",
        "ul_302762: ",
        "ul_96209: -e, --return\n         Return the exit code of the child process.  Uses the same format\n         as bash termination on signal termination exit code is 128+n."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bg",
      "MP Summary": "run jobs in the background",
      "Most Similar TLDR Task": "Resume a specific job (use `jobs -l` to get its ID) and run it in the background",
      "Most Similar TLDR Script": "bg {{job_id}}",
      "Top-3 Similar Questions": [
        "su_234389: \"pull\" process/job into the background",
        "so_6197165: Getting a PID from a Background Process Run as Another User"
      ],
      "Top-3 Scripts": [
        "su_234389: ",
        "so_6197165: su - joe -c \"/path/to/my_daemon & echo \\$! > /tmp/su.joe.$$\"\nbg=$(</tmp/su.joe.$$)\nrm -f /tmp/su.joe.$$   # Probably fails - joe owns it, dex does not\n\nsu - joe -c \"/path/to/my_daemon 3>&- & echo \\$! 1>&3\" 3>/tmp/su.joe.$$\nbg=$(</tmp/su.joe.$$)\nrm -f /tmp/su.joe.$$\n\ntmp=/tmp/su.joe.$$\ntrap \"rm -f $tmp; exit 1\" 0 1 2 3 13 15\nsu - joe -c \"/path/to/my_daemon 3>&- & echo \\$! 1>&3\" 3>$tmp\nbg=$(<$tmp)\nrm -f $tmp\ntrap 0 1 2 3 13 15"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "false",
      "MP Summary": "return false value",
      "Most Similar TLDR Task": "Return an exit code of 1",
      "Most Similar TLDR Script": "false",
      "Top-3 Similar Questions": [
        "so_55157581: bash - how to process exit code when using set -e and get output of command",
        "ul_14270: Get exit status of process that's piped to another",
        "so_3299502: How to return spawned process exit code in Expect script?"
      ],
      "Top-3 Scripts": [
        "so_55157581: if true; then\n    false\nfi",
        "ul_14270: $ false | true\n$ echo \"${PIPESTATUS[0]} ${PIPESTATUS[1]}\"\n1 0\n\n$ false | true\n$ echo \"${pipestatus[1]} ${pipestatus[2]}\"\n1 0\n\n$ false | true\n$ retval_bash=\"${PIPESTATUS[0]}\" retval_zsh=\"${pipestatus[1]}\" retval_final=$?\n$ echo $retval_bash $retval_zsh $retval_final\n1 0",
        "so_3299502: spawn false\nexpect eof\ncatch wait result\nexit [lindex $result 3]"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Terminate a background job",
      "Most Similar TLDR Script": "kill %{{job_id}}",
      "Top-3 Similar Questions": [
        "so_1908610: How to get process ID of background process?",
        "so_45006761: How to get pid of last background process in SSH"
      ],
      "Top-3 Scripts": [
        "so_1908610: foo &\nFOO_PID=$!\n# do other stuff\nkill $FOO_PID",
        "so_45006761: pid=$!\nsleep 3\nkill $pid\n\npid=\"\\$!\"\nsleep 3\nkill \"\\$pid\"\n\nssh -i mycert.pem testuser@myserver.com <<'SSHBLOCK'\npm2 logs --lines 100&\npid=$!\nsleep 3\nkill $pid\nSSHBLOCK"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jobs",
      "MP Summary": "display status of jobs in the current session",
      "Most Similar TLDR Task": "Display running processes",
      "Most Similar TLDR Script": "jobs -r",
      "Top-3 Similar Questions": [
        "su_234389: \"pull\" process/job into the background",
        "so_60959707: bash getting background process id gives parent pid"
      ],
      "Top-3 Scripts": [
        "su_234389: ",
        "so_60959707: jobs -l"
      ],
      "Explanations about Options": {}
    }
  ]
}