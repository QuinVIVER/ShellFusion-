{
  "Query": "How to monitor incoming http requests",
  "Answers": [
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send a request with an extra header, using a custom HTTP method",
      "Most Similar TLDR Script": "curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}",
      "Top-3 Similar Questions": [
        "ul_497706: Does `curl -v` show the complete HTTP request including the body?",
        "su_373590: How to see HTTP request header by curl?",
        "ul_105134: Type URL and show HTTP status"
      ],
      "Top-3 Scripts": [
        "ul_497706: curl --data \"user=user&password=password\" --trace google.log http://google.com/",
        "su_373590: -v/--verbose\n          Makes the fetching more verbose/talkative. Mostly useful for debugging. A line  starting\n          with '>' means \"header data\" sent by curl, '<' means \"header data\" received by curl that\n          is hidden in normal cases, and a line starting with '*' means additional  info  provided\n          by curl.",
        "ul_105134: url=$1\ncurl -sL $url -w \"%{http_code} %{url_effective}\\\\n\" \"URL\" -o /dev/null"
      ],
      "Explanations about Options": {
        "-w": "Make curl display information on stdout after a completed transfer. The format is a\n string that may contain plain text mixed with any number of variables. The format\n can be specified as a literal \"string\", or you can have curl read the format from a\n file with \"@filename\" and to tell curl to read the format from stdin you write\n \"@-\".",
        "-o": "Write output to <file> instead of stdout. If you are using {} or [] to fetch\n multiple documents, you can use '#' followed by a number in the <file> specifier.\n That variable will be replaced with the current string for the URL being fetched.\n Like in:",
        "--trace": "Enables a full trace dump of all incoming and outgoing data, including descriptive\n information, to the given output file. Use \"-\" as filename to have the output sent\n to stdout. Use \"%\" as filename to have the output sent to stderr.",
        "--data": "(HTTP) Sends the specified data in a POST request to the HTTP server, in the same\n way that a browser does when a user has filled in an HTML form and presses the\n submit button. This will cause curl to pass the data to the server using the\n content-type application/x-www-form-urlencoded. Compare to -F, --form.",
        "-s": "Silent or quiet mode. Don't show progress meter or error messages. Makes Curl\n mute. It will still output the data you ask for, potentially even to the\n terminal/stdout unless you redirect it."
      }
    },
    {
      "Command": "tcpdump",
      "MP Summary": "dump traffic on a network",
      "Most Similar TLDR Task": "Capture the traffic from a specific interface, source, destination and destination port",
      "Most Similar TLDR Script": "tcpdump -i {{eth0}} src {{192.168.1.1}} and dst {{192.168.1.2}} and dst port {{80}}",
      "Top-3 Similar Questions": [
        "au_93861: Monitor all incoming pings/requests",
        "su_348327: Linux: How to monitor incoming pings",
        "ul_8568: How can I see dumps of whol\u0435 HTTP packets?"
      ],
      "Top-3 Scripts": [
        "au_93861: tcpdump ip proto \\\\icmp",
        "su_348327: tcpdump ip proto \\\\icmp",
        "ul_8568: tcpdump -w httpdebug.pcap -i eth0 port 80"
      ],
      "Explanations about Options": {
        "-w": "Write the raw packets to file rather than parsing and printing them out. They can\n later be printed with the -r option. Standard output is used if file is ``-''.",
        "-i": " Listen on interface. If unspecified, tcpdump searches the system interface list\n for the lowest numbered, configured up interface (excluding loopback), which may\n turn out to be, for example, ``eth0''."
      }
    },
    {
      "Command": "iotop",
      "MP Summary": "simple top-like I/O monitor",
      "Most Similar TLDR Task": "Start top-like I/O monitor",
      "Most Similar TLDR Script": "iotop",
      "Top-3 Similar Questions": [
        "ul_266728: Monitor hard disk activity",
        "ul_158819: Remote monitoring Linux server from Ubuntu workstation via SSH"
      ],
      "Top-3 Scripts": [
        "ul_266728: sudo apt-get install iotop\n\nsudo iotop --only",
        "ul_158819: "
      ],
      "Explanations about Options": {
        "--only": "Only show processes or threads actually doing I/O, instead of showing all processes\n or threads. This can be dynamically toggled by pressing o."
      }
    },
    {
      "Command": "ping",
      "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
      "Most Similar TLDR Task": "Also display a message if no response was received",
      "Most Similar TLDR Script": "ping -O {{host}}",
      "Top-3 Similar Questions": [
        "au_564349: Remote monitor PC status"
      ],
      "Top-3 Scripts": [
        "au_564349: ping -c1 ipadress\n\n#!/bin/bash\n\n# machine 1\nping -c1 ipadress &> /dev/null && echo \"machine 1 is up\" || echo \"machine 1 is down\"\n\n# machine 2\nping -c1 ipadress &> /dev/null && echo \"machine 2 is up\" || echo \"machine 2 is down\"\n# .."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nc",
      "MP Summary": "arbitrary TCP and UDP connections and listens",
      "Most Similar TLDR Task": "Listen on a specified port and print any data received",
      "Most Similar TLDR Script": "nc -l {{port}}",
      "Top-3 Similar Questions": [
        "ul_125557: simple script for monitoring a mailserver"
      ],
      "Top-3 Scripts": [
        "ul_125557: $ nc -w 5 mail.mydom.com 25 << EOF\nHELO mail.mydom.com\nQUIT\nEOF\n\n$ echo \"QUIT\" | nc -w 5 mail.mydom.com 25\n\n$ echo \"QUIT\" | nc -w 5 mail.bubba.net 25\n220 bubba.net ESMTP Sendmail 8.14.3/8.14.3; Sat, 19 Apr 2014 16:31:44 -0400\n221 2.0.0 bubba.net closing connection\n$\n\n$ echo QUIT | nc -w5 localhost 25\nNcat: Connection refused.\n$"
      ],
      "Explanations about Options": {}
    }
  ]
}