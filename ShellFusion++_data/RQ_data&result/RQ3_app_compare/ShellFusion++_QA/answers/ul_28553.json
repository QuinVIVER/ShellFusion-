{
  "Query": "How to read the local DNS cache contents?",
  "Answers": [
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "ul_551762: How to read keyboard input and assign it to a local variable?",
        "so_28499979: Read a remote file and use the contents on remote machine itself via Linux bash",
        "au_579599: Playonlinux website wont load? - change DNS nameserver"
      ],
      "Top-3 Scripts": [
        "ul_551762: #!/bin/bash\n\nread _test\necho \"_test: $_test\"\n\nmy_read () {\n  local _test\n  read _test\n  echo \"_test: $_test\"\n}\n\n#!/bin/bash\n\nread local _test\necho \"_test: $_test\"\necho \"local: $local\"",
        "so_28499979: ssh $USER@$HOST bash -c \"'\n# ...\n    echo \"Copying $FILENAME\"\n'\"\n\nssh $USER@$HOST bash -c \"'\n# ...\n    echo \"Copying \\$FILENAME\"\n'\"",
        "au_579599: sudo echo \"#!/bin/sh \ncp /etc/resolv.default /etc/resolv.conf\" > /etc/network/if-up.d/setnameserver.sh"
      ]
    },
    {
      "Command": "read",
      "Top-3 Similar Questions": [
        "ul_558611: Read file and print out ip-address to another file",
        "ul_551762: How to read keyboard input and assign it to a local variable?",
        "so_36843703: batch file to read file contents and iterate"
      ],
      "Top-3 Scripts": [
        "ul_558611: #!/bin/bash\nwhile IFS= read -r host\ndo\n    if [[ -n \"$host\" ]]\n    then\n        ips=$(dig +short \"$host\" | grep '^[[:digit:].]*$' | xargs)\n        printf \"%s\\t%s\\n\" \"$host\" \"$ips\"\n    fi\ndone <hosts >ips",
        "ul_551762: #!/bin/bash\n\nread _test\necho \"_test: $_test\"\n\nmy_read () {\n  local _test\n  read _test\n  echo \"_test: $_test\"\n}\n\n#!/bin/bash\n\nread local _test\necho \"_test: $_test\"\necho \"local: $local\"",
        "ul_501828: read()\n\nIFS= read -rd '' meminfo < /proc/meminfo\nmemfree=${meminfo#*MemFree:}\nmemfree=${memfree%%$'\\n'*}\nmemfree=${memfree#\"${memfree%%[! ]*}\"}"
      ]
    },
    {
      "Command": "file",
      "Top-3 Similar Questions": [
        "so_63831080: Read a file and then move the content from one folder to another using Powershell script",
        "so_26963871: NASM, read a file and print the content",
        "so_27511461: Read folder content and finds lastwritetime of today if finds file which was lastwritetime of today email it"
      ],
      "Top-3 Scripts": [
        "so_26963871: mov ebx, [file] ; name of the file  \nmov eax, 5  \nmov ecx, 0  \nint 80h\n\nmov ebx, file ; const char *filename\nmov eax, 5  \nmov ecx, 0  \nint 80h",
        "so_34353146: \"processing \"$file",
        "ul_190178: Elf64_Off p_offset;       /* Segment file offset */\n  Elf64_Xword   p_filesz;       /* Segment size in file */"
      ]
    },
    {
      "Command": "printf",
      "Top-3 Similar Questions": [
        "ul_558611: Read file and print out ip-address to another file",
        "ul_501828: Why is opening a file faster than reading variable content?",
        "ul_169192: Read file and find all occurrences and generate hash for the content between the occurrences"
      ],
      "Top-3 Scripts": [
        "ul_558611: #!/bin/bash\nwhile IFS= read -r host\ndo\n    if [[ -n \"$host\" ]]\n    then\n        ips=$(dig +short \"$host\" | grep '^[[:digit:].]*$' | xargs)\n        printf \"%s\\t%s\\n\" \"$host\" \"$ips\"\n    fi\ndone <hosts >ips",
        "ul_501828: printf '%s\\n' \"$a\" | grep '^MemFree'",
        "so_34353146: printf \"%s\\n\" \"$file\""
      ]
    },
    {
      "Command": "print",
      "Top-3 Similar Questions": [
        "so_69554704: How to read CSV file content and find out between based on string value in shell script",
        "so_26203282: perl program for reading file contents",
        "ul_169192: Read file and find all occurrences and generate hash for the content between the occurrences"
      ],
      "Top-3 Scripts": [
        "so_69554704: awk '\nBEGIN{\n  FS=OFS=\",\"\n  print \"department,name,amount\"\n}\n/Marketing Total/                          { exit                  }\n/Finance Total/ || ($2==\"nan\" || $3==\"nan\"){ next                  }\n/Finance,Amount/ || /Marketing,Amount/     { found=1;first=$1;next }\nfound                                      { print first,$0        }\n'  Input_file\n\nawk '\nBEGIN{\n  FS=OFS=\",\"\n  print \"department,name,amount\"\n}\n/Marketing Total/                                            { exit                  }\n/Finance Total/ || (tolower($2)==\"nan\" || tolower($3)==\"nan\"){ next                  }\n/Finance,Amount/ || /Marketing,Amount/                       { found=1;first=$1;next }\nfound                                                        { print first,$0        }\n'  Input_file",
        "so_58860796: file_name=$(echo \"$line\" | sed 's/# file:\\(.*\\)/\\1/g' | awk '{print $1}')"
      ]
    }
  ]
}