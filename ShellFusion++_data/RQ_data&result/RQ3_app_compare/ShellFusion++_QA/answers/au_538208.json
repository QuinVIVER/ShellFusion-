{
  "Query": "How to check opened/closed ports on my computer?",
  "Answers": [
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_40662480: Checking remote port status in bash script",
        "so_59993231: Checking open ports using ss",
        "so_50335620: checking information of different computers in a network using bash script"
      ],
      "Top-3 Scripts": [
        "so_40662480: SERVER=google.com\nPORT=443\nstate=`nmap -p $PORT $SERVER | grep \"$PORT\" | grep open`\nif [ -z \"$state\" ]; then\n  echo \"Connection to $SERVER on port $PORT has failed\"\nelse\n  echo \"Connection to $SERVER on port $PORT was successful\"\n  exit 1\nfi",
        "so_59993231: #!/bin/bash\n\nfor i in {0..255}\ndo\n  echo \"$i\"\n  ss -ant \"( src 192.168.1.$i or dst 192.168.1.$i ) and ( ( dport = :80 or dport = :443 ) or ( sport = :443 or sport = :80 ) )\"\ndone",
        "so_22506749: $op=invoke-command -computername test -scriptblock{\n    & \"cmd.exe\" /c c:\\temp\\psbatch.bat 2>&1 \n    $LASTEXITCODE \n}\nif (@($op)[-1] -eq 0) {echo \"success\"}\nelse {echo \"failure\"}"
      ]
    },
    {
      "Command": "grep",
      "Top-3 Similar Questions": [
        "ul_350490: How to check port opened on running a service?",
        "au_832464: Is it possible to check the BIOS version of my computer on Ubuntu?",
        "so_40662480: Checking remote port status in bash script"
      ],
      "Top-3 Scripts": [
        "ul_350490: [root@localhost ~]# lsof -Pi | grep myprog\nmyprog  23411  user    9u  IPv6 9828537      0t0  TCP 1.2.3.167:51163->1.2.3.54:8090 (ESTABLISHED)\nmyprog  23411  user   16u  IPv4 9827813      0t0  TCP 1.2.3.167:60783->1.2.3.186:23 (ESTABLISHED)\nmyprog  23411  user   23u  IPv4 9827817      0t0  TCP 192.168.2.8:37435->192.168.2.1:20003 (ESTABLISHED)\nmyprog  23411  user   24u  IPv4 9827815      0t0  TCP 192.168.2.8:38942->192.168.2.1:20001 (ESTABLISHED)\nmyprog  23411  user   30u  IPv4 9849168      0t0  TCP 1.2.3.167:52352 (LISTEN)\nmyprog  23411  user   31u  IPv4 9849242      0t0  TCP 1.2.3.167:52352->1.2.3.186:59323 (ESTABLISHED)\nmyprog  23411  user   33u  IPv4 9852370      0t0  TCP 1.2.3.167:40328 (LISTEN)\n[root@localhost ~]#",
        "au_832464: sudo dmidecode -t 0\nsudo dmidecode -t 0 | grep 'Version:'\n\nsudo dmidecode -t bios\nsudo dmidecode -t bios | grep 'Version:'",
        "so_40662480: SERVER=google.com\nPORT=443\nstate=`nmap -p $PORT $SERVER | grep \"$PORT\" | grep open`\nif [ -z \"$state\" ]; then\n  echo \"Connection to $SERVER on port $PORT has failed\"\nelse\n  echo \"Connection to $SERVER on port $PORT was successful\"\n  exit 1\nfi"
      ]
    },
    {
      "Command": "dev",
      "Top-3 Similar Questions": [
        "so_46976882: Check certain USB port to get device fd on C Linux",
        "ul_420609: Checking serial ports by script",
        "ul_354576: check IPs with multiple ports from csv"
      ],
      "Top-3 Scripts": [
        "so_46976882: /dev/input/eventX",
        "ul_413321: if ( nc -zv localhost 19997 2>&1 >/dev/null ); then\n    echo 'Online'\nelse\n    echo 'Offline'\nfi",
        "su_136677: /dev/sr*"
      ]
    },
    {
      "Command": "sudo",
      "Top-3 Similar Questions": [
        "au_901381: Checking startup files on opening Terminal",
        "au_832464: Is it possible to check the BIOS version of my computer on Ubuntu?",
        "au_869793: Detect port scans performed by own computer"
      ],
      "Top-3 Scripts": [
        "au_901381: sudo apt install bash-doc",
        "au_832464: sudo dmidecode -t 0\nsudo dmidecode -t 0 | grep 'Version:'\n\nsudo dmidecode -t bios\nsudo dmidecode -t bios | grep 'Version:'",
        "au_869793: sudo kill -9 $PID\n\nsudo apt install lsof tcpdump"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "so_46976882: Check certain USB port to get device fd on C Linux",
        "so_40662480: Checking remote port status in bash script",
        "ul_274469: Check presence of a hostname under custom port in known_hosts"
      ],
      "Top-3 Scripts": [
        "so_40662480: SERVER=google.com\nPORT=443\nstate=`nmap -p $PORT $SERVER | grep \"$PORT\" | grep open`\nif [ -z \"$state\" ]; then\n  echo \"Connection to $SERVER on port $PORT has failed\"\nelse\n  echo \"Connection to $SERVER on port $PORT was successful\"\n  exit 1\nfi",
        "ul_274469: $ echo \"[hostname]:2121 ssh-rsa AAA...==\" > known_hosts\n$ ssh-keygen -Hf known_hosts \nknown_hosts updated.\nOriginal contents retained as known_hosts.old\nWARNING: known_hosts.old contains unhashed entries\nDelete this file to ensure privacy of hostnames\n$ ssh-keygen -H -F \"[hostname]:2121\" -f known_hosts\n|1|R21497dX9jN052A92GSoVFbuTPM=|lRtIr6O564EaFG0SsIulNAWpcrM= ssh-rsa AAA...==",
        "tldr_6166: zsteg --all {{path/to/image.bmp}}"
      ]
    }
  ]
}