{
  "Query": "Turn a simple socket into an SSL socket",
  "Answers": [
    {
      "Command": "socket",
      "Top-3 Similar Questions": [
        "so_9312113: Why can we cast sockaddr to sockaddr_in",
        "so_47881656: How to transfer cv::VideoCapture frames through socket in client-server model (OpenCV C++)?",
        "so_34099772: Changing socket options dynamically"
      ],
      "Top-3 Scripts": [
        "so_9312113: socket structure\n\ninternet socket structure",
        "so_51783036: int sockfd_udp = socket(AF_INET, SOCK_DGRAM, 0);\n...\nint sockfd_tcp = socket(AF_INET, SOCK_STREAM, 0);\ndup2(sockfd_tcp, sockfd_udp);\nclose(sockfd_tcp);\nsockfd_tcp = sockfd_udp;",
        "so_42519342: socket(2)"
      ]
    },
    {
      "Command": "sockaddr",
      "Top-3 Similar Questions": [
        "so_20812461: cannot convert to a pointer type socket programming in C",
        "so_11684008: how do you cast sockaddr structure to a sockaddr_in - C++ networking sockets ubuntu UDP",
        "so_9312113: Why can we cast sockaddr to sockaddr_in"
      ],
      "Top-3 Scripts": [
        "so_20812461: struct sockaddr"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "so_20812461: cannot convert to a pointer type socket programming in C",
        "so_27628757: Unable to cast object to System.Net.Sockets.Socket",
        "so_11684008: how do you cast sockaddr structure to a sockaddr_in - C++ networking sockets ubuntu UDP"
      ],
      "Top-3 Scripts": [
        "so_20812461: char * fromClient;\n\nfromClient=(char*)malloc(MAXSIZE * sizeof(char))\n/* no need to cast, check the result, and sizeof(char) is always 1 */\n...\nscanf(\"%s\",&fromClient);\n/* scanf expects a pointer and fromClient is already a pointer */",
        "so_27628757: (new-tcpclient -RemoteHost thing.server.com -Port 1234)[0]\nCreating a TCP connection to 'thing.server.com' ...\n\n...\nWrite-Host \"Creating a TCP connection to '$RemoteHost' ...\"\n$TcpClient = New-Object System.Net.Sockets.TcpClient($RemoteHost, $Port)\nif ($TcpClient.Connected) {\n    Write-Host  \"A connection to '$RemoteHost' on port '$Port' was successful.\"\n...\n\nPS C:\\Users\\mcameron> (new-tcpclient -RemoteHost thing.server.com -Port 1234).GetType().FullName\nCreating a TCP connection to 'thing.server.com' ...\nA connection to 'thing.server.com' on port '1234' was successful.\nSystem.Net.Sockets.Socket"
      ]
    },
    {
      "Command": "send",
      "Top-3 Similar Questions": [
        "so_59784401: Force a non-blocking UDP socket to raise BlockingIOError on sendto",
        "so_47881656: How to transfer cv::VideoCapture frames through socket in client-server model (OpenCV C++)?",
        "so_37497556: multi-threaded file transfer with socket"
      ],
      "Top-3 Scripts": [
        "so_59784401: send()"
      ]
    },
    {
      "Command": "and",
      "Top-3 Similar Questions": [
        "so_20812461: cannot convert to a pointer type socket programming in C",
        "so_37497556: multi-threaded file transfer with socket",
        "so_19758270: Read \"varint\" from linux sockets"
      ],
      "Top-3 Scripts": [
        "so_20812461: char * fromClient;\n\nfromClient=(char*)malloc(MAXSIZE * sizeof(char))\n/* no need to cast, check the result, and sizeof(char) is always 1 */\n...\nscanf(\"%s\",&fromClient);\n/* scanf expects a pointer and fromClient is already a pointer */",
        "so_1683246: File descriptors open in the calling process image remain open in the new\n process image, except for those for which the close-on-exec flag is set\n (see close(2) and fcntl(2)).  Descriptors that remain open are unaffected\n by execve()."
      ]
    }
  ]
}