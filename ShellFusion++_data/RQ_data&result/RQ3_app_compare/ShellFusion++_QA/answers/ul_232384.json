{
  "Query": "Argument string to integer in bash",
  "Answers": [
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "ul_478831: determine if output is string or integer",
        "ul_468429: Bash compare string and integer together as multi-conditions",
        "so_43459844: Why Can I add a String and a Int in Bash"
      ],
      "Top-3 Scripts": [
        "ul_478831: if ! [[ $( xargs <<< \"$count\" ) =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi\n\nif ! [[ \"${count// /}\" =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi",
        "ul_468429: if true && if true; then false; fi; then echo foo; else echo bar; fi\n\nif (true && (if true; then false; fi)); then echo foo; else echo bar; fi",
        "so_43459844: a=1\nb=2\ndeclare -i var\nvar=a+b+3\necho $var # Prints 6"
      ]
    },
    {
      "Command": "then",
      "Top-3 Similar Questions": [
        "so_42172698: split a string into string and integer bash",
        "ul_478831: determine if output is string or integer",
        "ul_468429: Bash compare string and integer together as multi-conditions"
      ],
      "Top-3 Scripts": [
        "so_42172698: if [[ \" $file_content \" =~ ${myArray[i]} ]]; then\n\nre=\"(^| )${myArray[i]} ([0-9]*)( |$)\"\nif [[ $file_content =~ $re ]]; then",
        "ul_478831: if ! [[ $( xargs <<< \"$count\" ) =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi\n\nif ! [[ \"${count// /}\" =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi",
        "ul_468429: if [ \"${GtkTheme}\" != \"${NightTheme}\" ] && ((${TimeHr}>=19 || ${TimeHr}<=5)); then\n\nif true && if true; then false; fi; then echo foo; else echo bar; fi\n\nif (true && (if true; then false; fi)); then echo foo; else echo bar; fi"
      ]
    },
    {
      "Command": "bash",
      "Top-3 Similar Questions": [
        "so_48612001: `echo` (shell bash) sending integer values and not only chars and strings. Is it possible?",
        "so_39213690: How should I treat return value of command or function? As string or integer?",
        "so_58398558: Separate \"Source\" arguments and \"Parent Script\" arguments in bash"
      ],
      "Top-3 Scripts": [
        "so_39213690: bash some_function\nreturn_value=$?\nif [ $return_value -eq 1 ]; then\n  exit 1\nfi",
        "so_58398558: bash script2.sh 1 2 cat\nscript1 got 2 args: 1 2 cat arg1\nscript2 got 3 args: 1 2 cat\n\nman bash",
        "ul_396895: man bash"
      ]
    },
    {
      "Command": "printf",
      "Top-3 Similar Questions": [
        "so_48612001: `echo` (shell bash) sending integer values and not only chars and strings. Is it possible?",
        "so_32826395: Bash Script with Parsing Argument in Linux",
        "so_33467770: String manipulation in Bash with prefixes"
      ],
      "Top-3 Scripts": [
        "so_48612001: printf '\\x01' > /dev/LED\n\nprintf '\\001' > /dev/LED",
        "so_32178204: printf \"${menuCode[0]}  |\\t${menuItems[0]}\\t| ${menuItemsCost[0]} |\\n\"\n\nprintf '%s  |\\t%s\\t| %s |\\n' \"${menuCode[0]}\" \"${menuItems[0]}\" \"${menuItemsCost[0]}\"",
        "so_21820240: cmd=( \"$@\" )\nprintf '%q\\n' \"${cmd[@]}\"\nnohup \"${cmd[@]}\""
      ]
    },
    {
      "Command": "read",
      "Top-3 Similar Questions": [
        "so_67168041: Check if it is an integer or not",
        "so_26151375: Parse two integers in a string and assign them to two bash variables?",
        "so_22899346: Too many arguments in find"
      ],
      "Top-3 Scripts": [
        "so_67168041: #!/bin/bash\nread -p \"Number: \" number\n\nwhile [[ ! \"$number\" =~ ^[0-9]+$ ]];\ndo\n    read -p \"Reenter the number: \" number\ndone",
        "so_26151375: $ out=\"56 2\"\n$ read i j <<<\"$out\"\n$ echo i=$i j=$j\ni=56 j=2\n\n$ read i j < <(date +'%H %M')\n$ echo i=$i j=$j\ni=15 j=45",
        "so_22899346: #!/bin/bash\n\nread DIR\nread SEARCH\n\n[[ $(find \"$DIR\" -type f -exec grep \"$SEARCH\" {} \\;) ]] && echo \"Find\"\n# or\n[[ -n $(find \"$DIR\" -type f -exec grep \"$SEARCH\" {} \\;) ]] && echo \"Find\"\n# or\n[[ $(find \"$DIR\" -type f -exec grep \"$SEARCH\" {} \\;) != \"\" ]] && echo \"Find\""
      ]
    }
  ]
}