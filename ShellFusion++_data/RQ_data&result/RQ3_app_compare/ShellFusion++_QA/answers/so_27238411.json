{
  "Query": "Display curl output in readable JSON format in Unix shell script",
  "Answers": [
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_14422065: How to print echo statement in formatted as cat command in shell scripting?",
        "so_64271111: Getting output of curl command in a variable"
      ],
      "Top-3 Scripts": [
        "so_60816352: parset myarr \\\n  -a input.csv \\\n  --jobs 0 \\\n  --timeout $parallel_timeout \\\n  get_data.sh {}\n\necho \"${myarr[3]}\"\n\necho www.google.com > input.txt\necho www.bing.com >> input.txt\n\n# Search for both foo and bar on all sites\nparset output curl https://{1}/?search={2} :::: input.txt ::: foo bar\n\necho \"${output[1]}\"\necho \"${output[2]}\"",
        "so_14422065: o=`cat xyz.log`\necho \"$o\"\n# ---^--^",
        "so_64271111: out=$(curl -u user:password -k ${second_url})\n# or \nout=$(curl -u user:password -k abc.com/${jobid}/result/ --get -d output=json) \n# and\necho \"$out\""
      ]
    },
    {
      "Command": "curl",
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_33670959: Running curl in a loop results in unexpected output"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_60816352: echo www.google.com > input.txt\necho www.bing.com >> input.txt\n\n# Search for both foo and bar on all sites\nparset output curl https://{1}/?search={2} :::: input.txt ::: foo bar\n\necho \"${output[1]}\"\necho \"${output[2]}\"",
        "so_33670959: (set -x; curl ${auth_header} -s http://${h}/${p} -o /dev/null ${out_parms})\n\n++ curl -u admin:secret -s http://test.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://test.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://a1.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://a1.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://p.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://p.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000\n\ncurl ${auth_header} -s http://${h}/${p} -o /dev/null -w \"%{http_code} %{url_effective}\\n\"\n\ncurl ${auth_header} -s http://${h}/${p} -o /dev/null \"${out_parms}\""
      ]
    },
    {
      "Command": "awk",
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_44389011: how to display output in the following format in unix",
        "so_60816352: How to store curl output in multiple variables in Bash"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_44389011: awk -F  \"-\" '{if(NR%2){printf $1 \" \" $2 \" -before load cnt: \" $3}else{printf \" after load cnt: \" $3 \"\\n\"}}' filename",
        "so_32893570: last -w -F | awk '{print $1\",\"$3\",\"$5$6$7$8\",\"$11$12$13$14\",\"$15}' | tac | tr ',' '\\t'"
      ]
    },
    {
      "Command": "jq",
      "Top-3 Similar Questions": [
        "so_47018863: Parsing and storing the json output of a curl command in bash",
        "so_59992159: Sending JSON with curl request in BASH File / SHELL script: JSON_PARSING_ERROR: Unexpected character (')",
        "so_47187191: Getting jq output in single line for JSON output using Bash"
      ],
      "Top-3 Scripts": [
        "so_47018863: curl '...' | jq --raw-output '.AssetID'\n\nasset_ID=$( curl '...' | jq --raw-output '.AssetID' )",
        "so_47187191: curl ... | jq -r '.[] | (.id | tostring) + \", \" + (.test_id | tostring)'",
        "so_70082914: #!/bin/bash\nchanging_stuff='Active-2021-xy Part YX'\ntotal_number=`Command_xy show base name \"$changing_stuff\" limit 1 --format json | jq '.total'`"
      ]
    },
    {
      "Command": "dev",
      "Top-3 Similar Questions": [
        "au_714458: Bash script -- store `curl` output in variable, then format against string in variable",
        "so_60816352: How to store curl output in multiple variables in Bash",
        "so_33670959: Running curl in a loop results in unexpected output"
      ],
      "Top-3 Scripts": [
        "au_714458: var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n<<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\n% var=\"$(curl ipinfo.io/\"8.8.8.8\" 2>/dev/null)\"\n% <<<\"$var\" awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\n\ncurl ipinfo.io/\"8.8.8.8\" 2>/dev/null | awk -F'\"' '$2==\"city\"{printf(\"%s, \", $4)}$2==\"region\"{print $4}'\nMountain View, California",
        "so_60816352: mkdir /dev/shm/mydir\nparset output --tmpdir /dev/shm/mydir ...",
        "so_33670959: (set -x; curl ${auth_header} -s http://${h}/${p} -o /dev/null ${out_parms})\n\n++ curl -u admin:secret -s http://test.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://test.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://a1.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://a1.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://p.app.com/doSomething -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000++ curl -u admin:secret -s http://p.app.com/doSomethingElse -o /dev/null -w '\"%{http_code}' '%{url_effective}\\\\n\"'\n\"301\"000\n\ncurl ${auth_header} -s http://${h}/${p} -o /dev/null -w \"%{http_code} %{url_effective}\\n\"\n\ncurl ${auth_header} -s http://${h}/${p} -o /dev/null \"${out_parms}\""
      ]
    }
  ]
}