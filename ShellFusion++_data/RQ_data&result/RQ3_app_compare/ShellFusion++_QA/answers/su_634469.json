{
  "Query": "need iptables rule to accept all incoming traffic",
  "Answers": [
    {
      "Command": "sudo",
      "Top-3 Similar Questions": [
        "so_51222938: Auto accept \"Configuring iptables-persistent\"",
        "su_910146: Why doesn't iptables accept IP address as source?",
        "au_425085: Did I accept the ttf-mscorefonts-installer EULA?"
      ],
      "Top-3 Scripts": [
        "so_51222938: sudo tmux -L dialog-session new-session -d service netfilter-persistent save\nsudo tmux -L dialog-session send-keys Enter",
        "su_910146: sudo iptables -t nat -A PREROUTING -i eth1 ! -s 192.168.178.30 -p tcp --dport 80 -j DNAT --to 192.168.178.30:3128\n\nsudo iptables -t nat -A PREROUTING -i eth1 -s ! 192.168.178.30 -p tcp --dport 80 -j DNAT --to 192.168.178.30:3128",
        "au_425085: $ sudo debconf-get-selections | grep 'msttcorefonts/accepted-mscorefonts-eula'\nttf-mscorefonts-installer       msttcorefonts/accepted-mscorefonts-eula boolean true"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_1774367: An script that accepts a command",
        "ul_280982: Why does this script not accept two arguments?",
        "ul_572281: Why awk not accept ! as field seprator?"
      ],
      "Top-3 Scripts": [
        "ul_280982: [ $# -lt 2 ] || echo \"At least 2 arguments are needed\" && exit 1\n\n[ $# -lt 2 ] && echo \"At least 2 arguments are needed\" && exit 1\n\nif [ $# -ne 2 ]; then\n    echo \"Exactly 2 filenames are needed\"\n    exit 1\nfi",
        "ul_572281: $ echo 'aa!bb' | awk -F! '{print $1}' \naa",
        "so_32563714: Last_IP=$(echo $Last_IP|tr -d '\\n')"
      ]
    },
    {
      "Command": "nat",
      "Top-3 Similar Questions": [
        "su_1184378: Will this iptables rule accept all traffic, making my other rules useless?",
        "su_910146: Why doesn't iptables accept IP address as source?",
        "ul_104609: No internet even with iptables ACCEPT all"
      ],
      "Top-3 Scripts": [
        "su_1184378: iptables -A FORWARD -j ACCEPT \niptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE",
        "su_910146: sudo iptables -t nat -A PREROUTING -i eth1 ! -s 192.168.178.30 -p tcp --dport 80 -j DNAT --to 192.168.178.30:3128\n\nsudo iptables -t nat -A PREROUTING -i eth1 -s ! 192.168.178.30 -p tcp --dport 80 -j DNAT --to 192.168.178.30:3128",
        "ul_104609: -t nat"
      ]
    },
    {
      "Command": "then",
      "Top-3 Similar Questions": [
        "so_1774367: An script that accepts a command",
        "ul_230528: Best practises: Applying iptables firewall rules for SSH",
        "ul_280982: Why does this script not accept two arguments?"
      ],
      "Top-3 Scripts": [
        "ul_230528: iptables-apply will  try  to  apply  a  new  rulesfile  (as  output  by\n   iptables-save,  read by iptables-restore) or run a command to configure\n   iptables and then prompt the user whether the changes are okay. If  the\n   new  iptables  rules  cut the existing connection, the user will not be\n   able to answer affirmatively. In this case, the script  rolls  back  to\n   the previous working iptables rules after the timeout expires.",
        "ul_280982: if [ $# -ne 2 ]; then\n    echo \"Exactly 2 filenames are needed\"\n    exit 1\nfi"
      ]
    },
    {
      "Command": "iptables-restore",
      "Top-3 Similar Questions": [
        "au_1086637: iptables rules applied multiple times",
        "so_25144598: failed to apply firewall rules with iptables-restore"
      ],
      "Top-3 Scripts": [
        "so_25144598: iptables-restore < /etc/sysconfig/iptables"
      ]
    }
  ]
}