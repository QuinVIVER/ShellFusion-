{
  "Query": "How to send many commands to shell and wait for the command behind ends",
  "Answers": [
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "ul_427360: How send multiple command as input in a program?",
        "ul_196271: how to use ssh command to connect to multiple computers and send different commands to each computers at same time",
        "so_24587007: send EXIT code as variable to next command in a pipeline [bash]"
      ],
      "Top-3 Scripts": [
        "ul_427360: { echo one; echo two; } |program",
        "ul_196271: ssh -f <my computer> 'sleep 30 && echo \"hello $(pstree -p | grep sshd | wc -l) person in ssh!\"'",
        "so_24587007: $ false | echo \"${PIPESTATUS[0]}\"\n0"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "ul_196271: how to use ssh command to connect to multiple computers and send different commands to each computers at same time",
        "so_46631920: Silently send command to comint without printing prompt",
        "ul_108222: Linux - Sending a command to a screen through a shell script?"
      ],
      "Top-3 Scripts": [
        "ul_196271: -f      Requests ssh to go to background just before command execution.\n             This is useful if ssh is going to ask for passwords or\n             passphrases, but the user wants it in the background.",
        "ul_108222: screen -r -S \"<screenName>\" \"command/or/script/to/execute\"\n\nscreen -A -m -d -S \"<screenName>\" \"command/or/script/to/execute\"",
        "so_17813587: (defvar terminal-process)\n(defun terminal ()\n  \"Switch to terminal. Launch if nonexistant.\"\n  (interactive)\n  (if (get-buffer \"*terminal*\")\n      (switch-to-buffer \"*terminal*\")\n    (term \"/bin/bash\"))\n  (setq terminal-process (get-buffer-process \"*terminal*\")))\n\n(global-set-key \"\\C-t\" 'terminal)\n\n(defun terminal ()\n  \"Switch to terminal. Launch if nonexistant.\"\n  (interactive)\n  (if (get-buffer \"*terminal*\")\n      (switch-to-buffer \"*terminal*\")\n    (term \"/bin/bash\"))\n  (setq terminal-process (get-buffer-process \"*terminal*\")))"
      ]
    },
    {
      "Command": "command",
      "Top-3 Similar Questions": [
        "ul_196271: how to use ssh command to connect to multiple computers and send different commands to each computers at same time",
        "so_24587007: send EXIT code as variable to next command in a pipeline [bash]",
        "so_46631920: Silently send command to comint without printing prompt"
      ],
      "Top-3 Scripts": [
        "ul_196271: ssh -f user@host '<your command here>'\n\n-f      Requests ssh to go to background just before command execution.\n             This is useful if ssh is going to ask for passwords or\n             passphrases, but the user wants it in the background.",
        "so_24587007: while read line; do\n    stdout=$(command $line)\n    case $? in\n        0) awk -v l=\"$line\" -f horsepower <<< \"$stdout\" ;;\n        # other cases, as needed\n    esac\ndone",
        "so_38592192: if wait \"$ssh_pid\"; then\n  echo \"Remote command exited with a successful exit status\" >&2\nelse\n  echo \"Remote command exited with a failed exit status\" >&2\nfi\noutput=$(<enroller.log)"
      ]
    },
    {
      "Command": "printf",
      "Top-3 Similar Questions": [
        "so_48236537: Send a sequence of commands to a new terminal from a script",
        "so_24587007: send EXIT code as variable to next command in a pipeline [bash]",
        "so_59870456: How do you send commands with arguments already inside them to GNU parallel?"
      ],
      "Top-3 Scripts": [
        "so_24587007: $ stdout=$(grep root /etc/passwd); \\\n  awk -v status=$? \\\n      -v stdout=\"$stdout\" \\\n  'BEGIN {printf \"Status: %s\\nVariable: %s\\n\", status, stdout}'\nStatus: 0\nVariable: root:x:0:0:root,,,:/root:/bin/bash",
        "so_59870456: printf '%s\\n' \"${nodes[@]}\" | parallel\n\nprintf '%s\\n' \"${nodes[@]}\" | parallel python {=uq=}",
        "au_879414: printf \"%s\\n\" \"${array[@]}\" | ..."
      ]
    },
    {
      "Command": "wait",
      "Top-3 Similar Questions": [
        "so_65374164: How can I send a signal without the shell waiting for the currently running program to finish?",
        "so_68497109: Sending commands to \"application's shell\" using \"bash script\"",
        "so_38592192: How can I send an ssh command to the background in bash"
      ],
      "Top-3 Scripts": [
        "so_65374164: sleep 1000 &\n    p=$!\n    wait \"$p\"",
        "so_68497109: catch wait result",
        "so_38592192: if wait \"$ssh_pid\"; then\n  echo \"Remote command exited with a successful exit status\" >&2\nelse\n  echo \"Remote command exited with a failed exit status\" >&2\nfi\noutput=$(<enroller.log)"
      ]
    }
  ]
}