{
  "Query": "How to compare two dates in a shell?",
  "Answers": [
    {
      "Command": "then",
      "Top-3 Similar Questions": [
        "so_29310990: Compare two dates in shell script",
        "au_1137981: Compare two dates in the shell",
        "so_52878320: Comparing two dates in Linux bash shell script"
      ],
      "Top-3 Scripts": [
        "so_29310990: d1=\"2015-03-31\" d2=\"2015-04-01\"\nif [ \"$d1\" = \"$d2\" ]; then\n    echo \"same day\"\nelif expr \"$d1\" \"<\" \"$d2\" >/dev/null; then\n    echo \"d1 is earlier than d2\"\nelse\n    echo \"d1 is later than d2\"\nfi",
        "ul_502208: if [ $(date +%s -r file) -ge $(date +%s) ]; then \n    # do something\nfi",
        "so_8436881: if [ \"X${NOW}X\" != \"X${VALUE}X\" ] ; then ...."
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_29310990: Compare two dates in shell script",
        "au_1137981: Compare two dates in the shell",
        "so_52878320: Comparing two dates in Linux bash shell script"
      ],
      "Top-3 Scripts": [
        "so_29310990: d1=\"2015-03-31\" d2=\"2015-04-01\"\nif [ \"$d1\" = \"$d2\" ]; then\n    echo \"same day\"\nelif expr \"$d1\" \"<\" \"$d2\" >/dev/null; then\n    echo \"d1 is earlier than d2\"\nelse\n    echo \"d1 is later than d2\"\nfi",
        "au_1137981: $ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n000000\n\n$ peak_time=\"10:05:31\"\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n100531",
        "ul_330774: if [[ \"1000\" > \"200\" ]]; then\n  echo \"Statement is true\"\nelse\n  echo \"Statement is false\"\nfi\n\nif [[ \"$CURREPOCH\" -gt \"$KRBEXPEPOCH\" ]]; then echo \"expired\"; fi\nif (( $CURREPOCH > $KRBEXPEPOCH )); then echo \"expired\"; fi"
      ]
    },
    {
      "Command": "date",
      "Top-3 Similar Questions": [
        "au_1137981: Compare two dates in the shell",
        "so_52878320: Comparing two dates in Linux bash shell script",
        "ul_502208: How to compare two dates in bash script?"
      ],
      "Top-3 Scripts": [
        "au_1137981: peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n000000\n\n$ peak_time=\"10:05:31\"\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n100531",
        "ul_502208: date +%s\n\nif [ $(date +%s -r file) -ge $(date +%s) ]; then \n    # do something\nfi",
        "so_34025510: date=\"$(sed -re 's_(..)/(..)/(....) _\\3-\\2-\\1 _' <<<\"$date\")\""
      ]
    },
    {
      "Command": "awk",
      "Top-3 Similar Questions": [
        "so_10754788: Comparing values in two files",
        "so_13393233: comparing 2 dates in the log file",
        "so_45227668: Comparing two numeric variables in Linux"
      ],
      "Top-3 Scripts": [
        "so_10754788: #!/bin/bash\nrm -f binary\nfor i in $(cat file1); do\n     awk 'BEGIN {isthere=0;} { if ($1==\"'$i'\") isthere=1;} END { print \"'$i'\",isthere}' < file2 >> binary\ndone",
        "so_13393233: awk -F '[[:space:][]+' '\n    $6 > $1 {$6 = $1} \n    {\n        for (i=7; i<NF; i++) {$i = $(i+1)}; NF--   # delete time field 7\n        for (i=2; i<NF; i++) {$i = $(i+1)}; NF--   # delete time field 2\n        print\n    } \n' <<< \"2012-01-30 12:41:06,214 app10 device INFO [2222-33-44 12:40:46,214] info1 info2 info3 ...\"",
        "so_45227668: #                                  v-- Here\nremote_file_size=$(curl -sI $URL | tr -d '\\r' | grep -i content-length | awk '{print $2}')"
      ]
    },
    {
      "Command": "print",
      "Top-3 Similar Questions": [
        "so_10754788: Comparing values in two files",
        "so_13393233: comparing 2 dates in the log file",
        "so_45227668: Comparing two numeric variables in Linux"
      ],
      "Top-3 Scripts": [
        "so_10754788: #!/bin/bash\nrm -f binary\nfor i in $(cat file1); do\n     awk 'BEGIN {isthere=0;} { if ($1==\"'$i'\") isthere=1;} END { print \"'$i'\",isthere}' < file2 >> binary\ndone",
        "so_13393233: awk -F '[[:space:][]+' '\n    $6 > $1 {$6 = $1} \n    {\n        for (i=7; i<NF; i++) {$i = $(i+1)}; NF--   # delete time field 7\n        for (i=2; i<NF; i++) {$i = $(i+1)}; NF--   # delete time field 2\n        print\n    } \n' <<< \"2012-01-30 12:41:06,214 app10 device INFO [2222-33-44 12:40:46,214] info1 info2 info3 ...\"",
        "so_45227668: #                                  v-- Here\nremote_file_size=$(curl -sI $URL | tr -d '\\r' | grep -i content-length | awk '{print $2}')"
      ]
    }
  ]
}