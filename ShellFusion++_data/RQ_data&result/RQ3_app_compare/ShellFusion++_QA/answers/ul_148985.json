{
  "Query": "How to get a response from any URL?",
  "Answers": [
    {
      "Command": "grep",
      "Top-3 Similar Questions": [
        "ul_267712: How do I extract specific URLs from an HTML file",
        "so_38732398: How do get the stream urls from kinox.to?",
        "ul_606937: Extract URLs from a large file"
      ],
      "Top-3 Scripts": [
        "ul_267712: grep -o \"https://sitename.com/.+/ending\" somefile.html\n\ngrep -wEo \"https://sitename\\.com/[^/]+/ending\" somefile.html",
        "ul_606937: grep -o -E \"https?://[][[:alnum:]._~:/?#@!$&'()*+,;%-]+\" file",
        "so_32744303: grep -o\n\n#!/bin/bash\noutput='Array { Dict { Name = afp://or-fs-001/vol1 URL = afp://or-fs-001/vol1 } Dict { Name = smb://or-fs-001/vol1 URL = smb://or-fs-001/vol1 } Dict { Name = vnc://or-fs-001/vol1 URL = vnc://or-fs-001/vol1 } Dict { Name = ftp://or-fs-001/vol1 URL = ftp://or-fs-001/vol1 } }'\n\ncount=$(echo \"$output\" | grep -o 'Name =' | wc -l)\nnames=($(grep -o 'Name = [^ ]\\+' <<< \"$output\" | cut -f3- -d' '))\necho $count = ${#names[@]}\nfor name in \"${names[@]}\" ; do\n    echo \"$name\"\ndone"
      ]
    },
    {
      "Command": "print",
      "Top-3 Similar Questions": [
        "so_32796453: Extract URLs (multiple lines) from texttable",
        "ul_347732: Extracting substring from environment variable",
        "so_69346007: How to get original URL from the cURL output log entry?"
      ],
      "Top-3 Scripts": [
        "so_32796453: awk -F '[[:blank:]]*\\\\|[[:blank:]]*' 'NR<3 || NF<5{next}\n   $2{if (url) print url; url=$5; next}\n   {url=url $5}\n   END{print url}' file",
        "ul_347732: $ echo \"$FOO\" | python -c 'import urlparse; import sys;  print urlparse.urlparse(sys.stdin.read()).netloc' \nunix.stackexchange.com",
        "so_69346007: while read LINE ; do\n    print \"REQUESTED URL: $LINE\" >> output.txt;\n    curl $LINE >> output.txt 2>&1;\ndone < url-list.txt"
      ]
    },
    {
      "Command": "curl",
      "Top-3 Similar Questions": [
        "so_53144136: How do I get a string from a curl response for a variable in bash?",
        "so_38732398: How do get the stream urls from kinox.to?",
        "so_69346007: How to get original URL from the cURL output log entry?"
      ],
      "Top-3 Scripts": [
        "so_53144136: code=$(curl ... | jq -r '.code')",
        "so_38732398: $ sh -x curl_stream_ex.sh futurama 7 2\n++ curl -sL 'http://kinox.to/Search.html?q=futurama'\n++ pcregrep -M 'lng\\/2\\.png(\\n|.)+?class=\"Title\"'\ncurl_stream_ex.sh: line 8: pcregrep: command not found\n\n$ curl -sL 'http://kinox.to/aGET/Mirror/Futurama_Into_the_Wild_Green_Yonder&Hoster=52&Mirror=2'\n{\"Stream\":\"<a href=\\\"http:\\/\\/shared.sx\\/992ba73be8\\\" target=\\\"_blank\\\"><img src=\\\"\\/gr\\/sys\\/player\\/default.flash.png\\\" usemap=\\\"#Link\\\" width=\\\"752\\\" height=\\\"370\\\" border=\\\"52\\\" \\/><\\/a><map name=\\\"Link\\\"><area shape=\\\"rect\\\" coords=\\\"220,250,515,310\\\" target=\\\"_blank\\\" href=\\\"\\\" alt=\\\"Download This Movie\\\" title=\\\"Download This Movie\\\"><\\/map>\",\"Replacement\":\"<li id=\\\"Hoster_52\\\" class=\\\"MirBtn MirBtnA MirBaseStyleflv MirStyle52\\\" rel=\\\"Futurama_Into_the_Wild_Green_Yonder&amp;Hoster=52&amp;Mirror=3\\\">\\t<div class=\\\"Named\\\">Shared.sx<\\/div>\\t<div class=\\\"Data\\\"><b>Mirror<\\/b>: 3\\/3<br \\/><b>Vom<\\/b>: 25.10.2015<\\/div><\\/li>\",\"HosterName\":\"Shared.sx\",\"HosterHome\":\"http:\\/\\/shared.sx\"}",
        "so_69346007: while read LINE ; do\n    print \"REQUESTED URL: $LINE\" >> output.txt;\n    curl $LINE >> output.txt 2>&1;\ndone < url-list.txt"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "ul_347732: Extracting substring from environment variable",
        "au_887234: How to get the URL from a firefox tab from the terminal?",
        "so_32744303: bash: extract URLs from a string"
      ],
      "Top-3 Scripts": [
        "ul_347732: $ export FOO=http://unix.stackexchange.com/questions/ask\n$ tmp=\"${FOO#*//}\" # remove http://\n$ echo \"${tmp%%/*}\" # remove everything after the first /\nunix.stackexchange.com\n\n$ echo \"$FOO\" | python -c 'import urlparse; import sys;  print urlparse.urlparse(sys.stdin.read()).netloc' \nunix.stackexchange.com",
        "au_887234: printf \"\\n# CurrentSession:\\n\"; \\\ncat $HOME/.mozilla/firefox/*.default/sessionstore-backups/recovery.js | \\\nsed \"s/\\\\_closedTabs/\\{\\\"url\\\":\\\"# ClosedTabs:\\\"attributes/g\" | \\\nsed \"s/\\\\lastSessionState/\\{\\\"url\\\":\\\"# LastSession:\\\"attributes/\" | \\\nsed \"s/{/\\n{/g\" | \\\negrep -o 'url\":\"*.*attributes*' | \\\ncut -d\\\" -f3 | \\\nsed \"s/#/\\n#/\" \\\n; echo\n\n; echo\n\nprintf \"\\n# CurrentSession:\\n\"; \\\ncat $HOME/.mozilla/firefox/*.default/sessionstore-backups/recovery.js | \\\nsed \"s/\\\\_closedTabs/\\{\\\"url\\\":\\\"# ClosedTabs:/g\" | \\\nsed \"s/\\\\lastSessionState/\\{\\\"url\\\":\\\"# LastSession:/\" | \\\nsed \"s/entries/url\\\":\\\"# TAB:/g\" | \\\nsed \"s/{/\\n{/g\" | \\\negrep 'url\":\"*' | \\\ncut -d\\\" -f4 | \\\nsed \"s/#/\\n#/\" \\\n; echo",
        "so_32744303: #!/bin/bash\noutput='Array { Dict { Name = afp://or-fs-001/vol1 URL = afp://or-fs-001/vol1 } Dict { Name = smb://or-fs-001/vol1 URL = smb://or-fs-001/vol1 } Dict { Name = vnc://or-fs-001/vol1 URL = vnc://or-fs-001/vol1 } Dict { Name = ftp://or-fs-001/vol1 URL = ftp://or-fs-001/vol1 } }'\n\ncount=$(echo \"$output\" | grep -o 'Name =' | wc -l)\nnames=($(grep -o 'Name = [^ ]\\+' <<< \"$output\" | cut -f3- -d' '))\necho $count = ${#names[@]}\nfor name in \"${names[@]}\" ; do\n    echo \"$name\"\ndone"
      ]
    },
    {
      "Command": "awk",
      "Top-3 Similar Questions": [
        "so_32796453: Extract URLs (multiple lines) from texttable",
        "so_51989188: bash get dirname from urls.txt",
        "ul_444630: Get the domain name from IP address"
      ],
      "Top-3 Scripts": [
        "so_32796453: awk -F '[[:blank:]]*\\\\|[[:blank:]]*' 'NR<3 || NF<5{next}\n   $2{if (url) print url; url=$5; next}\n   {url=url $5}\n   END{print url}' file",
        "so_51989188: awk 'BEGIN{FS=OFS=\"/\"}{NF--}1' <file>\n\nawk 'BEGIN{FS=OFS=\"/\"}{gsub(\"/+\",\"/\")}\n     {s=$0~/^\\//;NF-=$NF?1:2;$0=$0?$0:(s?\"/\":\".\")};1' <file>",
        "ul_444630: dig -x 8.8.8.8 +short | awk -F '.' '{print $2\".\"$3}'"
      ]
    }
  ]
}