{
  "Query": "How to parse XML in Bash?",
  "Answers": [
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_49322847: Parsing a XML file in command line (bash/python ideally)",
        "so_4286469: How to parse a CSV file in Bash?"
      ],
      "Top-3 Scripts": [
        "so_4286469: while IFS=, read -r col1 col2\ndo\n    echo \"I got:$col1|$col2\"\ndone < myfile.csv",
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}'\nyo,el,ella\n\n[user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_46565306: cat script.ksh\nvar=$1\nPWD=`pwd`\necho \"$PWD\" | awk -v VAR=\"$var\" -F\"/\" '{for(i=2;i<=(NF-VAR);i++){if($i){printf(\"%s%s\",i==2?\"/\"$i:$i,i==(NF-VAR)?RS:\"/\")}}}'"
      ]
    },
    {
      "Command": "awk",
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_345518: parsing a line in bash",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}'\nyo,el,ella\n\n[user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_46565306: cat script.ksh\nvar=$1\nPWD=`pwd`\necho \"$PWD\" | awk -v VAR=\"$var\" -F\"/\" '{for(i=2;i<=(NF-VAR);i++){if($i){printf(\"%s%s\",i==2?\"/\"$i:$i,i==(NF-VAR)?RS:\"/\")}}}'",
        "so_12520203: $ awk '$1 ~ /^(Version|[0-9])/ { print }' file\n10.113.193.70\nVersion: 47.80.99.08"
      ]
    },
    {
      "Command": "print",
      "Top-3 Similar Questions": [
        "so_13306457: parse a special xml in python",
        "so_345518: parsing a line in bash",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}'\nyo,el,ella\n\n[user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_12520203: $ awk '$1 ~ /^(Version|[0-9])/ { print }' file\n10.113.193.70\nVersion: 47.80.99.08",
        "so_20231136: awk '{print $2}' FILENAME"
      ]
    },
    {
      "Command": "read",
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_4286469: How to parse a CSV file in Bash?",
        "so_12520203: parsing file in bash"
      ],
      "Top-3 Scripts": [
        "so_4286469: while IFS=, read -r col1 col2\ndo\n    echo \"I got:$col1|$col2\"\ndone < myfile.csv",
        "so_12520203: #!/usr/bin/env bash\nwhile read -r\ndo [[ $REPLY =~ ^(Version|[[:digit:]]) ]] && echo \"$REPLY\"\ndone < file",
        "so_11821979: #!/bin/bash\n(cat test.csv ; echo) | while IFS=',' read -r last first\ndo\n    echo \"$last $first\"\ndone\n\n!/bin/bash\n(cat test.csv ; echo) | while IFS=',' read -r last first\ndo\n    if [[ $last != \"\" ]] ; then\n        echo \"$last $first\"\n    fi\ndone\n\n#!/bin/bash\nwhile IFS=',' read -r last first\ndo\n    echo \"$last $first\"\ndone <test.csv\nif [[ $last != \"\" ]] ; then\n    echo \"$last $first\"\nfi"
      ]
    },
    {
      "Command": "then",
      "Top-3 Similar Questions": [
        "so_34076263: Parsing text in BASH",
        "so_49322847: Parsing a XML file in command line (bash/python ideally)",
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_11821979: !/bin/bash\n(cat test.csv ; echo) | while IFS=',' read -r last first\ndo\n    if [[ $last != \"\" ]] ; then\n        echo \"$last $first\"\n    fi\ndone\n\n#!/bin/bash\nwhile IFS=',' read -r last first\ndo\n    echo \"$last $first\"\ndone <test.csv\nif [[ $last != \"\" ]] ; then\n    echo \"$last $first\"\nfi",
        "so_44181624: getValueForKey(){\n    while IFS== read -r key value;\n    do\n        if [ \"$2\" = \"$key\" ]; then\n            echo \"$value\"\n        fi;\n\n    done < \"$1\"\n}"
      ]
    }
  ]
}