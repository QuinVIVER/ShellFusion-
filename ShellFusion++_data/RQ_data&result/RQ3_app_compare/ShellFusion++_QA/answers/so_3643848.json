{
  "Query": "Copy files from one directory into an existing directory",
  "Answers": [
    {
      "Command": "cp",
      "Top-3 Similar Questions": [
        "so_30382268: If a file exists, copy another file, but don't overwrite",
        "so_29955443: Copying multiple files into same directory while changing filename",
        "au_1159468: Copying directories in linux only if it contains the specified file"
      ],
      "Top-3 Scripts": [
        "so_30382268: for d in ./Event_*/; do\nset -- \"$d/\"*.mcp\nif [ -e \"$1\" ]; then\n    cp -rp -v -- \"$d/KNYN.BHZ\" \"./newdir/KNYN.`echo $d | sed 's/[\\.\\/]//g;s/Event_//:'`.BHZ\"\nfi\ndone\n\ni=0;\nfor d in ./Event_*/; do\nset -- \"$d/\"*.mcp\nif [ -e \"$1\" ]; then\n    cp -rp -v -- \"$d/KNYN.BHZ\" \"./newdir/KNYN-$((++i)).BHZ\"\nfi\ndone\n\nfor d in ./Event_*/; do\nset -- \"$d/\"*.mcp\nif [ -e \"$1\" ]; then\n    cp -rp -v -- \"$d/KNYN.BHZ\" \"./newdir/KNYN.`echo $d | sed 's/[\\.\\/]//g;s/Event_//:'`_`date '+%Y-%m-%d'`.BHZ\"\nfi\ndone",
        "so_29955443: ls 'foo*' | % {$newName = $_.name -replace 'foo','moo'; cp $_ $newName ; }",
        "au_1159468: $ (cd src && cp -v --parents */123.dat ../dest)\n\n$ (cd src && find . -maxdepth 2  -type f -name '123.dat' -exec cp -v -t \"../dest\" --parents {} +)"
      ]
    },
    {
      "Command": "find",
      "Top-3 Similar Questions": [
        "tldr_5832: Find files matching a given pattern, excluding specific paths",
        "nl2bash_8056: find regular files and directories that have been modified in the last seven days",
        "au_1159468: Copying directories in linux only if it contains the specified file"
      ],
      "Top-3 Scripts": [
        "tldr_5832: find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
        "nl2bash_8056: find . -mtime -7 -type f",
        "au_1159468: $ (cd src && find . -maxdepth 2  -type f -name '123.dat' -exec cp -v -t \"../dest\" --parents {} +)\n\n$ find dest\ndest\ndest/b\ndest/b/123.dat\ndest/a\ndest/a/123.dat"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "so_24445575: Copy all files in directory except \".txt\" and not to replace existing files",
        "tldr_5839: Find square images",
        "so_36142838: Copy files from list while keeping subdirectory structure"
      ],
      "Top-3 Scripts": [
        "so_24445575: rsync -vaz --exclude \"*.txt\" /path/to/source/ /path/to/destination/",
        "tldr_5839: fselect path from {{path/to/directory}} where width = height",
        "so_36142838: --parents                 -- append source path to target directory\n\ncat /path/to/files | xargs cp --parents -t new_directory\n\n/path/to/files.txt\n\nwhile read -r file; do\n    new_dir=\"new_directory/$(dirname \"$file\")\"\n    #        ^ this is the new directory root\n    mkdir -p \"$new_dir\"\n    cp \"$file\" \"$new_dir/$file\"\ndone < <(cat /path/to/files.txt)"
      ]
    },
    {
      "Command": "file",
      "Top-3 Similar Questions": [
        "su_1643084: How to NOT overwrite existing files",
        "so_18771291: Copy files from source directory to target directory and exclude specific file types from specified directories",
        "so_42827465: Comparing the file's existence from a file and in current directory using shell script"
      ],
      "Top-3 Scripts": [
        "so_42827465: #!/bin/bash\n\ndateToday=\"$(date +%d%m%Y)\"\n\nwhile IFS= read -r file; do\n    [ -f \"$file\" ] && printf \"%s\\n\"  \"$file$dateToday\" >> files.OK || printf \"%s\\n\"  \"$file\" >> files.NOK\ndone < files.txt",
        "so_19913855: $files = Get-Content C:\\script\\hname.txt\nforeach ($file in $files) {\n    $src = $file.Replace(\"\\\\nas001\\DATA\\IQC\",\"\\\\nas001\\IQC_restore\")\n    Copy-Item $src -Destination $file -Force\n}",
        "au_1159468: building file list ... done\ncreated directory dest\n./\na/\na/123.dat\nb/\nb/123.dat\n\nsent 205 bytes  received 90 bytes  590.00 bytes/sec\ntotal size is 0  speedup is 0.00"
      ]
    },
    {
      "Command": "rm",
      "Top-3 Similar Questions": [
        "au_526174: Cannot delete Directory, doesn't exist?",
        "nl2bash_11597: Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'",
        "so_17959317: Delete all files and directories but certain ones using Bash"
      ],
      "Top-3 Scripts": [
        "au_526174: root@dsadwsd:/home/user/Downloads/manual# rm -rf \" \"",
        "nl2bash_11597: rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1",
        "so_17959317: rm -rf !(mysql|init)"
      ]
    }
  ]
}