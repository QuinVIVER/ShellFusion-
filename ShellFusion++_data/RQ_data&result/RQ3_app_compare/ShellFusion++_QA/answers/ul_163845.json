{
  "Query": "Using jq to extract values and format in CSV",
  "Answers": [
    {
      "Command": "jq",
      "Top-3 Similar Questions": [
        "ul_542185: Using jq to create comma separated list fields in JSON array",
        "so_23598328: Using jq to parse JSON in launchd",
        "ul_404699: Using multiple wildcards in jq to select objects in a JSON file"
      ],
      "Top-3 Scripts": [
        "ul_542185: jq -r '.hardware | join(\", \")'",
        "so_23598328: JQ=/usr/local/bin/jq",
        "ul_404699: $ jq -c 'select(.st1 <= .st2 and \n                .st1 > 0 and .st2 > 0 and \n                .st1 < 2147483647 and .st2 < 2147483647)' file.json \n{\"in\":5,\"li\":[{\"st\":1508584161,\"abc\":128416626,\"ta\":33888}],\"usr\":{\"is\":\"222108923573880\",\"ie\":\"222108923573880\"},\"st2\":1508584161,\"ei\":{\"ev\":0,\"rt\":10},\"rn\":947794,\"st1\":1508584161}\n{\"in\":5,\"li\":[{\"st\":1508584145,\"abc\":279682,\"ta\":50000}],\"usr\":{\"is\":\"222108923573880\",\"ie\":\"222108923573880\"},\"st2\":1508584145,\"ei\":{\"ev\":0,\"rt\":18},\"rn\":947796,\"st1\":1508584145}\n\njq -c 'select ...' file.json > out.json\nprintf '{\"nt\":%i}\\n' `wc -l < out.json` >> out.json"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_14492590: using bash (sed/awk) to extract rows AND columns in CSV files?",
        "so_56392038: Use data from a CSV file as values of a variable in a loop in Bash",
        "so_69179552: How to use variable with jq cmd in shell"
      ],
      "Top-3 Scripts": [
        "so_14492590: #!/bin/bash\nwhile IFS=',' read -r rank name school major year; do\n    echo -e \"Rank\\t: $rank\\nName\\t: $name\\nSchool\\t: $school\\nMajor\\t: $major\\nYear\\t: $year\\n\"\ndone < file.csv\nIFS=$' \\t\\n'",
        "so_56392038: #!/bin/bash\n\nwhile IFS=', ' read -r NAME IP TYPE\ndo\n    #You can do your processing here, e.g.\n    echo \"name=$NAME ip=$IP type=$TYPE\"\ndone < data.csv\n\nexit 0",
        "so_63347170: $ var=\"$(jq \"[.folder]\" test.json)\"\n$ echo \"$var\"\n[\n  {\n    \"name\": \"Desktop\",\n    \"path\": \"Users/user/Desktop\",\n    \"executable\": false\n  }\n]"
      ]
    },
    {
      "Command": "read",
      "Top-3 Similar Questions": [
        "so_14492590: using bash (sed/awk) to extract rows AND columns in CSV files?",
        "so_43982839: How can I use sed to extract a single value in command line?",
        "so_56392038: Use data from a CSV file as values of a variable in a loop in Bash"
      ],
      "Top-3 Scripts": [
        "so_14492590: #!/bin/bash\nwhile IFS=',' read -r rank name school major year; do\n    echo -e \"Rank\\t: $rank\\nName\\t: $name\\nSchool\\t: $school\\nMajor\\t: $major\\nYear\\t: $year\\n\"\ndone < file.csv\nIFS=$' \\t\\n'\n\n#!/bin/bash\ndeclare -a arr\nwhile read -r line; do\n    arr=(${line//,/ })\n    printf \"Rank\\t: %s\\nName\\t: %s\\nSchool\\t: %s\\nMajor\\t: %s\\nYear\\t: %s\\n\" ${arr[@]}\ndone < file.csv",
        "so_43982839: IFS=. read MAJOR_VERSION MINOR_VERSION PATCH_VERSION <<< \"$TRAVIS_TAG\"\n\nIFS=. read MAJOR_VERSION MINOR_VERSION PATCH_VERSION <<< \"${TRAVIS_TAG#v}\"",
        "so_56392038: #!/bin/bash\n\nwhile IFS=', ' read -r NAME IP TYPE\ndo\n    #You can do your processing here, e.g.\n    echo \"name=$NAME ip=$IP type=$TYPE\"\ndone < data.csv\n\nexit 0"
      ]
    },
    {
      "Command": "as",
      "Top-3 Similar Questions": [
        "so_45579569: Using $ variables in jq from PowerShell",
        "so_51914316: Use jq in Bash to sort object properties by descending length of their value",
        "so_59127004: Use variable in jq read query"
      ],
      "Top-3 Scripts": [
        "so_45579569: jq -r '(map(keys) | add | unique) as $cols | \n       map(. as $row | $cols | map($row[.])) as $rows | \n         $cols, $rows[] | @csv' output2.json > output3.csv",
        "so_51914316: with_entries(.key as $k | .key=.value | .value=$k )\n\nto_entries\n| map(.key as $k | .key=.value | .value=$k )\n| sort_by(.key|length)\n| reverse\n| from_entries",
        "so_59127004: % jq -r 'keys[] as $user | .[$user][] | \"User \\($user) has role \\(.)\"' permissions.json\nUser foo1.bar1@email.com has role projects/development/roles/superadmin\nUser foo1.bar1@email.com has role compute.networkAdmin\nUser foo2.bar2@email.co has role compute.networkAdmin"
      ]
    },
    {
      "Command": "cat",
      "Top-3 Similar Questions": [
        "so_45486380: Using jq to store part of JSON in variable",
        "so_53369090: How to use jq to fetch attribute from json",
        "so_33247228: How to use `jq` in a shell pipeline?"
      ],
      "Top-3 Scripts": [
        "so_45486380: variable=$(cat \"$file\" | jq -j \".rows[].example\")",
        "so_33247228: curl -s https://api.github.com/users/octocat/repos | jq '.' | cat",
        "so_39204158: $ cat my_script\njq -r '.Volumes[] | .VolumeId + \" \" + .Tags[].Value' volumes.json \\\n| while IFS= read -r volumeId tagValue; do\n  other_command \"$volumeId\" \"$tagValue\"\ndone"
      ]
    }
  ]
}