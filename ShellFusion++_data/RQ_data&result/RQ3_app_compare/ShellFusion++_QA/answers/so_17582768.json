{
  "Query": "How to ignore conflicts in rpm installs",
  "Answers": [
    {
      "Command": "grep",
      "Top-3 Similar Questions": [
        "au_57892: How do I ignore a conflicting package on a regex match in apt-get?",
        "ul_513108: Is grep documentation about ignoring case wrong, since it doesn't ignore case in filenames?",
        "so_1892293: Automatically ignore files in grep"
      ],
      "Top-3 Scripts": [
        "au_57892: apt-get install $(apt-cache r-cran- | grep -Fvx r-cran-vr)",
        "ul_513108: grep(1)",
        "so_1892293: grep  perl * --exclude=try* --exclude=tk*"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "so_29743194: ignore provided input in python",
        "su_800098: 'apt-get install' ignores my specification to install particular version of package",
        "su_997187: How to ignore parent directories with wget?"
      ],
      "Top-3 Scripts": [
        "so_29743194: pipelst = str(raw_input('Enter pipe separated list  : ')).split('|')\nfilepath = 'test.txt'   # specify path to your file here\nfor lns in open(filepath):\n    split_pipe = lns.split(':', 1)\n    if split_pipe[0] in pipelst:\n        print split_pipe[0], ' details : ', split_pipe[1]\n        pipelst.remove(split_pipe[0])\nfor lns in pipelst : print lns,' is wrong input'",
        "su_997187: -nd\n  --no-directories\n      Do not create a hierarchy of directories when retrieving\n      recursively.  With this option turned on, all files will get saved\n      to the current directory, without clobbering (if a name shows up\n      more than once, the filenames will get extensions .n).",
        "so_58539724: get-childitem -filter *.txt,*.ps1\nGet-ChildItem : Cannot convert 'System.Object[]' to the type 'System.String' required by parameter 'Filter'. Specified method is not supported."
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_61001020: How to ignore reboot prompt in a ShellScript",
        "so_45213240: Ignore \"$\" at the beginning of the command in Bash",
        "so_5935742: How to ignore all lines before a match occurs in bash?"
      ],
      "Top-3 Scripts": [
        "so_61001020: #!/bin/bash    \nif rpm -q ip-client-install\nthen\necho no | ipa-client-install --uninstall\nelse \necho \"Package not found\"\nfi\n/usr/local/sbin/new-clone.sh -i aws -s aws-dev",
        "so_45213240: $ echo foo bar\nfoo bar\n$ $ echo foo bar\nfoo bar\n$ $ $ echo foo bar\nfoo bar\n$ $ $ $ echo foo bar\nfoo bar\n\n$ foo=bar\n$ echo $foo\nbar\n$ $ foo=qux\n/home/jackman/bin/$: line 2: exec: foo=qux: not found\n\n$ { echo hello; }\nhello\n$ $ { echo hello; }\nbash: syntax error near unexpected token `}'",
        "so_5935742: PATTERN=\"R2-01.sql\"\n(echo \"dummy-line-to-the-start\" ; cat - ) < list.txt | sed \"1,/$PATTERN/d\""
      ]
    },
    {
      "Command": "cd",
      "Top-3 Similar Questions": [
        "au_1130672: How to ignore case in directory paths?",
        "ul_445778: DEB: multi-package, ignore installation of some files during packages building",
        "so_14145273: Ignore $ in first of commands"
      ],
      "Top-3 Scripts": [
        "au_1130672: cd fold<kbd>Tab</kbd>/fold<kbd>Tab</kbd>",
        "ul_445778: override_dh_install:\n        dh_install\n        cd debian/A/scripts; find . -type f -exec rm -f ../B/scripts/{} \\;",
        "so_14145273: cd ~/bin\ncat <<'EOF' > \\$\n#!/bin/sh\n\"$@\"\nEOF"
      ]
    },
    {
      "Command": "file",
      "Top-3 Similar Questions": [
        "so_29743194: ignore provided input in python",
        "so_41782862: Ignore case sensitive in AWK Shell",
        "so_57439085: Why bash ignored the quotation in ls output?"
      ],
      "Top-3 Scripts": [
        "so_29743194: pipelst = str(raw_input('Enter pipe separated list  : ')).split('|')\nfilepath = 'test.txt'   # specify path to your file here\nfor lns in open(filepath):\n    split_pipe = lns.split(':', 1)\n    if split_pipe[0] in pipelst:\n        print split_pipe[0], ' details : ', split_pipe[1]\n        pipelst.remove(split_pipe[0])\nfor lns in pipelst : print lns,' is wrong input'",
        "so_41782862: awk -F\":\" -v name=\"$name\" 'tolower($1) ~ tolower(name)' file\nMay:Math:99:John\nMay:Sci:76:John\n\nawk -F\":\" -v name=\"$name\" 'BEGIN{IGNORECASE=1} $1 ~ name' file\nMay:Math:99:John\nMay:Sci:76:John",
        "so_57439085: ls -1 --quote-name *.txt |\nwhile IFS= read -r file; do\n  eval file=\"$file\"\n  ls -l \"$file\"\ndone"
      ]
    }
  ]
}