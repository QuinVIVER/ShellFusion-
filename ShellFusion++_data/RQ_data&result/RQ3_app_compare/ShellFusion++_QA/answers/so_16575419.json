{
  "Query": "PowerShell   retrieve JSON object by field value",
  "Answers": [
    {
      "Command": "jq",
      "Top-3 Similar Questions": [
        "so_64149031: Looping through a json file and retrieving the values into bash variables",
        "so_67404726: Retrieving required set-off json objects using through \"Jq\" method",
        "so_62467225: Find value in JSON string"
      ],
      "Top-3 Scripts": [
        "so_64149031: $ ID=$(cat data.json | jq .Item.ID.S -r)\n$ no=$(cat data.json | jq .Item.no.N -r)\n$ echo $ID $no\n4869949 2",
        "so_67404726: cat input | jq --slurp -c .[] | head -5 | jq . > FirstTopObject.json\ncat input | jq --slurp -c .[] | sed '6,10!d' | jq . > SecondTopObject.json\ncat input | jq --slurp -c .[] | tail -5 | jq . > ThirdTopObject.json",
        "so_62467225: $ jq '.[].ItemsQueued' file\n0\n0"
      ]
    },
    {
      "Command": "sed",
      "Top-3 Similar Questions": [
        "so_67836241: Retrieve JSON Object Key Values using SED command",
        "so_67404726: Retrieving required set-off json objects using through \"Jq\" method",
        "so_55678289: How to retrieve the metadata associated with the highest numbered JSON timestamp?"
      ],
      "Top-3 Scripts": [
        "so_67836241: sed -n 's/^[[:space:]]*\"name\": \"\\(.*\\)\",/\\1/p' output.txt\n# With GNU sed:\nsed -n 's/^\\s*\"name\":\\s*\"\\(.*\\)\",/\\1/p' output.txt\n\nsed -z 's/.*\"fields\":\\s*{\\s*\"status\": {.*\\s*name\": \"\\([^\"]*\\)\".*/\\1/' output.txt",
        "so_67404726: cat input | jq --slurp -c .[] | head -5 | jq . > FirstTopObject.json\ncat input | jq --slurp -c .[] | sed '6,10!d' | jq . > SecondTopObject.json\ncat input | jq --slurp -c .[] | tail -5 | jq . > ThirdTopObject.json",
        "so_55678289: curl -v --silent http://player.listenlive.co/41851/en/songhistory |\nsed -nr 's/^.*\\s*var songs\\s*=\\s*(\\[[^]]+\\]).*$/\\1/p' |\njq -r '.[length-1]'"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_64149031: Looping through a json file and retrieving the values into bash variables",
        "so_32172066: retrieve multiple values from json array using bash",
        "so_56242621: Finding highest value in a specific JSON field in bash"
      ],
      "Top-3 Scripts": [
        "so_64149031: $ ID=$(cat data.json | jq .Item.ID.S -r)\n$ no=$(cat data.json | jq .Item.no.N -r)\n$ echo $ID $no\n4869949 2",
        "so_40988026: echo  \"${!servername_value}\""
      ]
    },
    {
      "Command": "print",
      "Top-3 Similar Questions": [
        "so_53106897: Bash & cURL: Retrieve JSON from web API and search it for specific key:value pairs",
        "ul_582248: Retrieve first two fields from the first column",
        "so_6358436: How would I find a variable in a line and use cut to retrieve the value"
      ],
      "Top-3 Scripts": [
        "so_53106897: curl ... | \n  python -c 'import json,sys; x=\"[%s]\"%(\",\".join(sys.stdin),); print(max(y[\"id\"] for y in json.loads(x)))'",
        "ul_582248: awk -F':[^a-z]+' '{print $1, $2}' file1",
        "so_6358436: awk  '/Disktype/{print $2}' RS=\" \" FS=="
      ]
    },
    {
      "Command": "curl",
      "Top-3 Similar Questions": [
        "so_55678289: How to retrieve the metadata associated with the highest numbered JSON timestamp?",
        "so_53106897: Bash & cURL: Retrieve JSON from web API and search it for specific key:value pairs",
        "so_48196080: How to pipe JSON output of curl to query a JSON value using python"
      ],
      "Top-3 Scripts": [
        "so_55678289: curl -v --silent http://player.listenlive.co/41851/en/songhistory |\nsed -nr 's/^.*\\s*var songs\\s*=\\s*(\\[[^]]+\\]).*$/\\1/p' |\njq -r '.[length-1]'",
        "so_53106897: max_id=$(curl ... | jq -s 'map(.id) | max')\n\ncurl ... | \n  python -c 'import json,sys; x=\"[%s]\"%(\",\".join(sys.stdin),); print(max(y[\"id\"] for y in json.loads(x)))'",
        "so_48196080: curl ... | python -c \\\n   'import sys, json; print(json.load(sys.stdin)[sys.argv[1]][\"stage\"])' \"$i\"\n\ncurl ... | python -c \\\n            'import sys, json; print(json.load(sys.stdin)['\"$i\"'][\"stage\"])'"
      ]
    }
  ]
}