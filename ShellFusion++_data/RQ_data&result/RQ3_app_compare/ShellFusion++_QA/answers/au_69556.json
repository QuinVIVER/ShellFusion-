{
  "Query": "How do I check the battery's status via the terminal?",
  "Answers": [
    {
      "Command": "sudo",
      "Top-3 Similar Questions": [
        "su_864606: How to check network status using terminal?",
        "au_769128: 16.04 - Battery not detected until plugged in via AC",
        "au_104755: How to check Internet Speed via Terminal?"
      ],
      "Top-3 Scripts": [
        "su_864606: sudo ifconfig wlan0 up",
        "au_769128: sudo update-grub",
        "au_104755: sudo apt install speedtest-cli\nspeedtest-cli"
      ]
    },
    {
      "Command": "dev",
      "Top-3 Similar Questions": [
        "au_144655: How to check bluetooth status via terminal",
        "so_28740780: Checking root integrity via a script",
        "so_35289767: Check status of GMediaRenderer"
      ],
      "Top-3 Scripts": [
        "au_144655: hcitool dev",
        "so_35289767: gssdp-discover -i wlan0  --timeout=3 --target=urn:av-openhome-org:service:Info:1 | grep available &> /dev/null\nif [ $? == 0 ]; then\n    echo \"OpenHome renderer is already running\"\nelse\n   echo \"restarting gmediarenderer\"\n   /etc/init.d/gmediarenderer stop\n   /etc/init.d/gmediarenderer start\nfi",
        "au_716312: sudo apt-get install byobu -y\nbyobu-enable\nbyobu\nsudo badblocks -sv /dev/sdb"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "so_45744704: Check Teamspeak status via Shellscript (Ubuntu)",
        "so_31533945: How to check file exists via bash script?",
        "so_35289767: Check status of GMediaRenderer"
      ],
      "Top-3 Scripts": [
        "so_45744704: #!/bin/bash\na=$(sh /home/teamspeak3/ts3/teamspeak3-\nserver_linux_amd64/ts3server_startscript.sh status)\necho \"$a\"\nif [ \"$a\" -ne \"Server is running\" ]; then\n    echo \"...\"\nfi\nexit 0",
        "so_31533945: INFER_PATH=\"./infer/infer/bin/infer\"\n[ -e ${INFER_PATH} ] && echo \"Infer downloaded successfully\" || echo \"Something went wrong :(\"",
        "so_35289767: gssdp-discover -i wlan0  --timeout=3 --target=urn:av-openhome-org:service:Info:1 | grep available &> /dev/null\nif [ $? == 0 ]; then\n    echo \"OpenHome renderer is already running\"\nelse\n   echo \"restarting gmediarenderer\"\n   /etc/init.d/gmediarenderer stop\n   /etc/init.d/gmediarenderer start\nfi"
      ]
    },
    {
      "Command": "grep",
      "Top-3 Similar Questions": [
        "so_30588871: check difference via minus between two file",
        "so_53740372: Check Java version via Ansible playbook",
        "au_767045: How to check computer's timezone through Terminal?"
      ],
      "Top-3 Scripts": [
        "so_30588871: $ grep -vFf test2 test1\nfoo",
        "au_767045: timedatectl status | grep \"Time zone\"",
        "so_35289767: gssdp-discover -i wlan0  --timeout=3 --target=urn:av-openhome-org:service:Info:1 | grep available &> /dev/null\nif [ $? == 0 ]; then\n    echo \"OpenHome renderer is already running\"\nelse\n   echo \"restarting gmediarenderer\"\n   /etc/init.d/gmediarenderer stop\n   /etc/init.d/gmediarenderer start\nfi"
      ]
    },
    {
      "Command": "then",
      "Top-3 Similar Questions": [
        "so_45744704: Check Teamspeak status via Shellscript (Ubuntu)",
        "so_28740780: Checking root integrity via a script",
        "so_35289767: Check status of GMediaRenderer"
      ],
      "Top-3 Scripts": [
        "so_45744704: #!/bin/bash\na=$(sh /home/teamspeak3/ts3/teamspeak3-\nserver_linux_amd64/ts3server_startscript.sh status)\necho \"$a\"\nif [ \"$a\" -ne \"Server is running\" ]; then\n    echo \"...\"\nfi\nexit 0",
        "so_28740780: for ((i=0;i<${#path_ary[@]};++i)); do\n    if [[ ${path_ary[i]} = ?(.) ]]; then\n        printf 'Warning: the entry %d contains the current dir\\n' \"$i\"\n    elif [[ ${path_ary[i]} != /* ]]; then\n        printf 'Warning: the entry %s is not an absolute path\\n' \"$i\"\n    fi\ndone\n\nelif [[ ! -d ${path_ary[i]} ]]; then\n    printf 'Warning: the entry %s is not a directory\\n' \"$i\"\n\nelif [[ $owner_id != 0 ]]; then\n    printf 'Warning: the entry %s is not owned by root\\n' \"$i\"\nelif ((0022&8#$perms)); then\n    printf 'Warning: the entry %s has group or other write permission\\n' \"$i\"\n\nelse\n    # In the else statement, the corresponding entry is good\n    unset_it=false\nfi\nif $unset_it; then\n    printf 'Unsetting entry %s: %s\\n' \"$i\" \"${path_ary[i]}\"\n    unset path_ary[i]\nfi",
        "so_35289767: gssdp-discover -i wlan0  --timeout=3 --target=urn:av-openhome-org:service:Info:1 | grep available &> /dev/null\nif [ $? == 0 ]; then\n    echo \"OpenHome renderer is already running\"\nelse\n   echo \"restarting gmediarenderer\"\n   /etc/init.d/gmediarenderer stop\n   /etc/init.d/gmediarenderer start\nfi"
      ]
    }
  ]
}