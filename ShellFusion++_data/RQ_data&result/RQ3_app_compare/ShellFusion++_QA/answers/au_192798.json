{
  "Query": "Is it possible to read the output from any process using its PID?",
  "Answers": [
    {
      "Command": "read",
      "Top-3 Similar Questions": [
        "so_42635451: How to read input from Stdin with fork()",
        "so_44016803: Reading input using fgets returns duplicate lines in C",
        "so_42908401: read variable into file used in process substitution"
      ],
      "Top-3 Scripts": [
        "so_42635451: Child: read [Monday]\nParent: read [Tuesday]\nParent: read [Wednesday]\n\nread(STDIN_FILENO, &c, 1)",
        "so_44016803: ....\nif (read(0, buf, nbuf) == 0) {\n....\nwhile(getcmd(buf, 7, pid) >= 0) {\n....",
        "so_42908401: declare -A mapArray ## needs to be associative for the below to work\n\nfilename=$(awk 'END{print}' /home/cmccabe/medex.logs/analysis.log)\nwhile IFS= read -r  line; do\n  mapArray[\"${line%_*}\"]=\"$line\"\ndone < <(tail -n +3 \"/home/cmccabe/Desktop/NGS/API/$filename/analysis.txt\")"
      ]
    },
    {
      "Command": "line",
      "Top-3 Similar Questions": [
        "so_1154846: Continuously read from STDOUT of external process in Ruby",
        "so_42635451: How to read input from Stdin with fork()",
        "so_44016803: Reading input using fgets returns duplicate lines in C"
      ],
      "Top-3 Scripts": [
        "so_1154846: IO.popen( \"ruby random.rb\") do |random|\n  random.each { |line| puts line }\nend",
        "so_44016803: > strace -f ./a.out < temp 2>&1 | less\n....\nwrite(2, \"pid: 29487 -- getcmd buf =======\"..., 45pid: 29487 -- getcmd buf ======= --> line 1\nclone(child_stack=0,flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD,child_tidptr=0x7f34940f19d0) = 29488\nProcess 29488 attached\n[pid 29487] wait4(-1,  <unfinished ...>\n[pid 29488] lseek(0, -14, SEEK_CUR)     = 7\n[pid 29488] exit_group(0)               = ?\n[pid 29488] +++ exited with 0 +++\n<... wait4 resumed> [{WIFEXITED(s) && WEXITSTATUS(s) == 0}], 0, NULL) = 29488",
        "au_1195707: sensors | grep \"Core\" | while IFS= read -r line\ndo\n    command\ndone"
      ]
    },
    {
      "Command": "printf",
      "Top-3 Similar Questions": [
        "so_42635451: How to read input from Stdin with fork()",
        "so_49047646: Reading a multi-line output stops after reading after first line in shell script",
        "so_61770892: Is it possible for bash to \"interactively\" alternate between reading from and writing to a child process via stdin/stdout?"
      ],
      "Top-3 Scripts": [
        "so_49047646: printf '%s\\n' \"${arrayStorage[@]}\"",
        "so_61770892: printf 'foo' >&${COPROC[1]}\n\ncoproc ./myProgram \n\nfor ((i=1; i<=10; i++)); do\n    read -u \"${COPROC[0]}\" var\n    if [[ $var = \"C\" ]]; then\n        printf 'C' >&${COPROC[1]}\n    elif [[ $var = \"D\" ]]; then\n        printf 'E' >&${COPROC[1]}\n    fi\ndone",
        "so_34966914: printf()"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "au_1195707: Possible to read \"lines\" from a variable?",
        "ul_644909: how to read two input files using sed processing through the bash loop?",
        "so_56647242: Read file by line then process as different variable"
      ],
      "Top-3 Scripts": [
        "au_1195707: input=$(sensors | grep Core)\n$ while IFS= read -r line; do echo \"$line\"; done <<<\"$input\"\nCore 0: +80.0\u00b0C (high = +100.0\u00b0C, crit = +100.0\u00b0C)\nCore 1: +80.0\u00b0C (high = +100.0\u00b0C, crit = +100.0\u00b0C)\nCore 2: +81.0\u00b0C (high = +100.0\u00b0C, crit = +100.0\u00b0C)\nCore 3: +80.0\u00b0C (high = +100.0\u00b0C, crit = +100.0\u00b0C)",
        "ul_644909: if [[ ! -e $sample.fa ]] ; then\n        echo \"$sample.fa missing, skipped.\" >&2\n        continue\n    fi",
        "so_56647242: CURNT_JOB_STRIPED=$(echo \"${LINE}\" | awk -F \".tar\" '{print $1}')"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "so_49674516: read stdout of a process in itself using c++",
        "so_42635451: How to read input from Stdin with fork()",
        "so_42908401: read variable into file used in process substitution"
      ],
      "Top-3 Scripts": [
        "so_42908401: declare -A mapArray ## needs to be associative for the below to work\n\nfilename=$(awk 'END{print}' /home/cmccabe/medex.logs/analysis.log)\nwhile IFS= read -r  line; do\n  mapArray[\"${line%_*}\"]=\"$line\"\ndone < <(tail -n +3 \"/home/cmccabe/Desktop/NGS/API/$filename/analysis.txt\")"
      ]
    }
  ]
}