{
  "Query": "Wait for a process to finish",
  "Answers": [
    {
      "Command": "wait",
      "Top-3 Similar Questions": [
        "so_23906392: How to wait for any job to finished using shell script?",
        "ul_656103: Waiting for any process to finish in bash script",
        "so_29256233: Bash function is waiting for its subprocess to finish"
      ],
      "Top-3 Scripts": [
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "so_29256233: test_fn() {\n    sleep 10 >&- &  # close stdout for sleep, or redirect if desired\n    echo $!\n}\n\npid=$(test_fn)\necho \"waiting\"\nwait",
        "so_29889074: wait $BACK_PID"
      ]
    },
    {
      "Command": "echo",
      "Top-3 Similar Questions": [
        "ul_602274: Bash function that will wait for a process to be finished before starting a new one",
        "so_23906392: How to wait for any job to finished using shell script?",
        "ul_656103: Waiting for any process to finish in bash script"
      ],
      "Top-3 Scripts": [
        "so_23906392: mkfifo starter\n{ MyScript1.sh; echo foo > starter; } &\n{ MyScript2.sh; echo foo > starter; } &\n{ MyScript3.sh; echo foo > starter; } &\nread < starter && MyScript4.sh",
        "so_57691080: echo \"${jobs}\" | xargs -P3 -I{} gnome-terminal --wait -e 'bash -c \"my_profiler {}\"'\n\necho \"${jobs}\" | ...",
        "so_29256233: test_fn() {\n    sleep 10 >&- &  # close stdout for sleep, or redirect if desired\n    echo $!\n}\n\npid=$(test_fn)\necho \"waiting\"\nwait"
      ]
    },
    {
      "Command": "sleep",
      "Top-3 Similar Questions": [
        "ul_602274: Bash function that will wait for a process to be finished before starting a new one",
        "so_23906392: How to wait for any job to finished using shell script?",
        "ul_656103: Waiting for any process to finish in bash script"
      ],
      "Top-3 Scripts": [
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "so_29256233: test_fn() {\n    sleep 10 >&- &  # close stdout for sleep, or redirect if desired\n    echo $!\n}\n\npid=$(test_fn)\necho \"waiting\"\nwait",
        "so_29889074: while kill -0 $BACK_PID ; do\n    echo \"Process is still active...\"\n    sleep 1\n    # You can add a timeout here if you want\ndone"
      ]
    },
    {
      "Command": "kill",
      "Top-3 Similar Questions": [
        "ul_602274: Bash function that will wait for a process to be finished before starting a new one",
        "so_23906392: How to wait for any job to finished using shell script?",
        "so_29889074: how to wait for first command to finish?"
      ],
      "Top-3 Scripts": [
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "so_29889074: while kill -0 $BACK_PID ; do\n    echo \"Process is still active...\"\n    sleep 1\n    # You can add a timeout here if you want\ndone",
        "so_1157700: kill(pid, 0)"
      ]
    },
    {
      "Command": "to",
      "Top-3 Similar Questions": [
        "ul_656103: Waiting for any process to finish in bash script",
        "so_35722491: Parent process waits for all child processes to finish before continuing",
        "so_8665642: Why do I have to `wait()` for child processes?"
      ],
      "Top-3 Scripts": [
        "so_62937344: for i in {1..9}; do\n  ( for p in 32 16 8; do\n      srun ... & jobs+=($!)\n    done\n    wait -n  \"${jobs[@]}\" # Wait for one of the preceding 3 jobs to complete\n    kill \"${jobs[@]}\"     # Kill the other two\n  ) &\ndone\n\nwait  # Wait for each of the 9 groups to complete"
      ]
    }
  ]
}