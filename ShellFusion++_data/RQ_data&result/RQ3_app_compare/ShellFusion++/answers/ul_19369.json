{
  "Query": "How to find the installation path for a software under linux?",
  "Answers": [
    {
      "Command": "pwd",
      "MP Summary": "print name of current/working directory",
      "Most Similar TLDR Task": "Print the current directory, and resolve all symlinks (i.e. show the \"physical\" path)",
      "Most Similar TLDR Script": "pwd -P",
      "Top-3 Similar Questions": [
        "ul_312548: How do you find the path of a directory?",
        "su_521966: Linux: find first result from specified search path"
      ],
      "Top-3 Scripts": [
        "ul_312548: cd pig-0.16.0 && pwd",
        "su_521966: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Top-3 Similar Questions": [
        "so_31026599: Find files whose path doesn't contain a word",
        "nl2bash_2558: Find all 400 permission files under /data directory and change their permission to 755",
        "so_21683897: Find command to delete all directories under a path but not the path itself"
      ],
      "Top-3 Scripts": [
        "so_31026599: find -name '*.hpp' -not -path '*/folder2/*'\n\nfind -name '*.hpp' -not -path '*/folder2/*' -not -path '*/folder3/*'\n\nfind -name '*.hpp' -not -regex '.*/\\(folder2\\|folder3\\)/.*'",
        "nl2bash_2558: find /data -type f -perm 400 -print | xargs chmod 755",
        "so_21683897: find /home/chidori/ -maxdepth 1 -mindepth 1 -type d -mtime +5 -exec rm -rf {} \\;\n\nfind /home/chidori/ -maxdepth 1 -mindepth 1 -type d -mtime +5 -exec echo {} \\;"
      ],
      "Explanations about Options": {
        "-perm": "Any of the permission bits mode are set for the file. Symbolic modes are accepted\n in this form. You must specify `u', `g' or `o' if you use a symbolic mode. See\n the EXAMPLES section for some illustrative examples. If no permission bits in mode\n are set, this test matches any file (the idea here is to be consistent with the\n behaviour of -perm -000).",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-mindepth": "Do not apply any tests or actions at levels less than levels (a non-negative\n integer). -mindepth 1 means process all files except the starting-points.",
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-type": "File is of type c:",
        "-print": "Quoting is handled in the same way as for -printf and -fprintf. If you are using\n find in a script or in a situation where the matched files might have arbitrary\n names, you should consider using -print0 instead of -print.",
        "-regex": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option.",
        "-mtime": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
        "-not": "Same as ! expr, but not POSIX compliant."
      }
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "If there are multiple executables which match, display all",
      "Most Similar TLDR Script": "which -a {{executable}}",
      "Top-3 Similar Questions": [
        "au_945141: how to find the installing path of some install application?",
        "au_1046848: How to find the path of a specific application (Google Chrome)?",
        "ul_28555: How to find application's path from command line?"
      ],
      "Top-3 Scripts": [
        "au_945141: which code",
        "au_1046848: which google-chrome-stable",
        "ul_28555: which git"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dpkg",
      "MP Summary": "package manager for Debian",
      "Most Similar TLDR Task": "Find out which package owns a file",
      "Most Similar TLDR Script": "dpkg -S {{filename}}",
      "Top-3 Similar Questions": [
        "su_1624657: Where can I find software images for shortcuts",
        "su_314454: How to find installation path for packages installed through apt-get in Ubuntu?",
        "ul_573409: How to find out where different packages are installed?"
      ],
      "Top-3 Scripts": [
        "su_1624657: dpkg -S  /full/path/to/executable\n\ndpkg -L packagename",
        "su_314454: dpkg -L <package_name>",
        "ul_573409: dpkg -L xbindkeys"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "apt-file",
      "MP Summary": "APT package searching utility - command-line interface",
      "Most Similar TLDR Task": "Search for packages that contain the specified file or path",
      "Most Similar TLDR Script": "apt-file search {{part/of/filename}}",
      "Top-3 Similar Questions": [
        "ul_573409: How to find out where different packages are installed?"
      ],
      "Top-3 Scripts": [
        "ul_573409: apt-file list xbindkeys"
      ],
      "Explanations about Options": {}
    }
  ]
}