{
  "Query": "how do i find which process is leaking memory",
  "Answers": [
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Most Similar TLDR Task": "Signal the operating system to pause a program until a SIGCONT (\"continue\") signal is received",
      "Most Similar TLDR Script": "kill -{{17|STOP}} {{process_id}}",
      "Top-3 Similar Questions": [
        "au_180336: How to find the Process ID (PID) of a running terminal program?",
        "so_42118992: Find process by port"
      ],
      "Top-3 Scripts": [
        "au_180336: kill pid\n\nkill -HUP pid\n\nkill -KILL pid\n\nkill -9 pid",
        "so_42118992: for i in $(pgrep -f \"server.php\"); do\n    pidtime=$(stat -c '%Y' /proc/$i)\n    now=$(date +%s)\n    ((now - pidtime >= 6)) && {\n      kill $i;\n      sleep 1;\n      kill &>/dev/null -9 $i;\n    }\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ps",
      "MP Summary": "report a snapshot of the current processes.",
      "Most Similar TLDR Task": "Search for a process that matches a string",
      "Most Similar TLDR Script": "ps aux | grep {{string}}",
      "Top-3 Similar Questions": [
        "su_1528525: how to find the specific program that's running on a process\uff1f",
        "ul_4999: How to find which processes are taking all the memory?",
        "so_38090621: Command to find Linux terminal of the process"
      ],
      "Top-3 Scripts": [
        "su_1528525: ps -ef |grep test.py\n\nps -auxf",
        "ul_4999: $ ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5",
        "so_38090621: ps -o tty -p $pid"
      ],
      "Explanations about Options": {
        "-a": "Select all processes except both session leaders (see getsid(2)) and processes not\n associated with a terminal.",
        "-f": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm.",
        "-u": "Select by effective user ID (EUID) or name. This selects the processes whose\n effective user name or ID is in userlist.",
        "-e": "Select all processes. Identical to -A."
      }
    },
    {
      "Command": "top",
      "MP Summary": "display Linux processes",
      "Most Similar TLDR Task": "Do not show any idle or zombie processes",
      "Most Similar TLDR Script": "top -i",
      "Top-3 Similar Questions": [
        "ul_4999: How to find which processes are taking all the memory?",
        "su_470181: How can I find the processes which use the most memory?",
        "au_180336: How to find the Process ID (PID) of a running terminal program?"
      ],
      "Top-3 Scripts": [
        "ul_4999: ",
        "su_470181: top -c",
        "au_180336: "
      ],
      "Explanations about Options": {
        "-c": "Starts top with the last remembered `c' state reversed. Thus, if top was displaying\n command lines, now that field will show program names, and vice versa. See the `c'\n interactive command for additional information."
      }
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search for process run by a specific user",
      "Most Similar TLDR Script": "pgrep -u root {{process_name}}",
      "Top-3 Similar Questions": [
        "so_38368927: finding the process numbers of a multithread application",
        "so_42118992: Find process by port"
      ],
      "Top-3 Scripts": [
        "so_38368927: pgrep -P $$",
        "so_42118992: for i in $(pgrep -f \"server.php\"); do\n    pidtime=$(stat -c '%Y' /proc/$i)\n    now=$(date +%s)\n    ((now - pidtime >= 6)) && {\n      kill $i;\n      sleep 1;\n      kill &>/dev/null -9 $i;\n    }\ndone"
      ],
      "Explanations about Options": {
        "-f": "The pattern is normally only matched against the process name. When -f is set, the\n full command line is used.",
        "-P": "Only match processes whose parent process ID is listed."
      }
    },
    {
      "Command": "pstree",
      "MP Summary": "display a tree of processes",
      "Most Similar TLDR Task": "Display all process trees rooted at processes owned by specified user",
      "Most Similar TLDR Script": "pstree {{user}}",
      "Top-3 Similar Questions": [
        "so_34499251: How to find out where the process comes from in Linux?",
        "su_137462: How do you find the parent process of a zombie process?",
        "ul_486215: Find process source which executing python scripts"
      ],
      "Top-3 Scripts": [
        "so_34499251: $ pstree\n\n$ pstree | grep <proc_name> -B 10",
        "su_137462: $ pstree -p dharris\nscreen(17796)\u2500\u252c\u2500bash(4467)\u2500\u2500\u2500emacs(4498)\u2500\u2500\u2500sh(3344)\u2500\u2500\u2500sh(3345)\n              \u251c\u2500bash(4532)\u2500\u2500\u2500su(31037)\u2500\u2500\u2500bash(31041)\n              \u251c\u2500bash(4916)\u2500\u2500\u2500pstree(26456)\n              \u251c\u2500bash(13547)\u2500\u2500\u2500su(20442)\u2500\u2500\u2500bash(20443)\n              \u2514\u2500bash(17797)\n\nsshd(25813)\u2500\u2500\u2500bash(25817)\u2500\u2500\u2500screen(25870)",
        "ul_486215: pstree -p"
      ],
      "Explanations about Options": {
        "-p": "Show PIDs. PIDs are shown as decimal numbers in parentheses after each process\n name. -p implicitly disables compaction."
      }
    }
  ]
}