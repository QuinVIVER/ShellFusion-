{
  "Query": "How to grep and replace",
  "Answers": [
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Strip out non-printable characters from a file",
      "Most Similar TLDR Script": "tr -cd \"[:print:]\" < {{filename}}",
      "Top-3 Similar Questions": [
        "so_35801134: Replacing a delimiter",
        "ul_90530: How to grep, then search and replace on the output?"
      ],
      "Top-3 Scripts": [
        "so_35801134: tr '\\001' '|'",
        "ul_90530: iconv -l | grep ISO |head -5 |tr '/' '-'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Delete lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
      "Top-3 Similar Questions": [
        "so_32724468: grep in file and replace string",
        "so_8035539: Sitewide find and replace",
        "so_43483261: bash: recursively grep and replace string"
      ],
      "Top-3 Scripts": [
        "so_32724468: | sed 'N;s/\\n/ /'",
        "so_8035539: find /home/weby/zkouska -type f -name \"*.php\" | xargs sed -i.bckp 's/global $sessdt_o; if(!$sessdt_o) { $sessdt_o = 1; $sessdt_k = \"lb11\";.*$//g'",
        "so_43483261: find . -maxdepth 1 -type f | xargs sed -i \"s/<Route component={P} path=\\\"p.html\\\" routeName=\\\"p\\\" \\/>/<Route component={L} path=\\\"$VARIABLE_TO_INSERT\\\" routeName=\\\"L\\\" \\/>/g\"\n#                                            |                                                      | |                                                                   |\n#                                            +-------------------- replace this --------------------+ +---------------------------- with this ----------------------------+\n\nsed -i \"s/.../.../g\""
      ],
      "Explanations about Options": {
        "-i": "edit files in place (makes backup if SUFFIX supplied)"
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a text message. Note: quotes are optional",
      "Most Similar TLDR Script": "echo \"{{Hello World}}\"",
      "Top-3 Similar Questions": [
        "so_4766546: grep on unix / linux: how to replace or capture text?",
        "au_379815: Did grep change how it uses regexp?",
        "so_29060762: Bash script to replace or append"
      ],
      "Top-3 Scripts": [
        "so_4766546: $ echo \"my #1 example!\" | sed s/[^a-zA-Z0-9\\_]//g\nmy1example\n$\n\n$ text=\"my #1 example!\"\n\n# non-global replacement. Only the space is delete.\n$ echo ${text/[^a-zA-Z0-9_]/''}\nmy#1 example!\n\n# global replacement by adding an additional / \n$ echo ${text//[^a-zA-Z0-9_]/''}\nmy1example\n\n# swap foo and bar's number using capturing and back reference.\n$ echo 'foo1 bar2' | sed -r 's/foo([0-9]+) bar([0-9]+)/foo\\2 bar\\1/'\nfoo2 bar1\n$",
        "au_379815: echo grep sd*",
        "so_29060762: if ! sed -i \"/$2/{s//$3/;h};\"'${x;/./{x;q0};x;q1}' $1\nthen\n    echo \"$3\" >> $1\nfi\n\nif grep -q \"^$2\" $1\nthen\n    sed -i \"s/^$2.*$/$3/\" $1\nelse\n    echo \"$3\" >>$1\nfi"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "grep",
      "MP Summary": "print lines that match patterns",
      "Most Similar TLDR Task": "Invert match for excluding specific strings",
      "Most Similar TLDR Script": "grep -v {{search_pattern}}",
      "Top-3 Similar Questions": [
        "so_51281851: Why grep is not recursing",
        "so_60678339: Why does sed sometimes truncate when replacing?",
        "so_6178498: Using grep and sed to find and replace a string"
      ],
      "Top-3 Scripts": [
        "so_51281851: grep -r --include=\"*.go\" \"closer\" .",
        "so_60678339: resultinglink=$(curl -s -D - \"$link\" | grep location: | sed -e 's/^location: //' -e $'s/\\\\\\r//')",
        "so_6178498: "
      ],
      "Explanations about Options": {
        "-r": "Read all files under each directory, recursively, following symbolic links only if\n they are on the command line. Note that if no file operand is given, grep searches\n the working directory. This is equivalent to the -d recurse option.",
        "--include": "Search only files whose base name matches GLOB (using wildcard matching as\n described under --exclude)."
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Number all output lines",
      "Most Similar TLDR Script": "cat -n {{file}}",
      "Top-3 Similar Questions": [
        "ul_32497: Grep: search and replace full line",
        "so_5932320: Replacing text and duplicates",
        "so_67721096: Bash don't replace $"
      ],
      "Top-3 Scripts": [
        "ul_32497: $ cat foo.sed\n/foo/ { c \\\nanother string\n}\n\n$ sed -i -f foo.sed myfile.txt",
        "so_5932320: ",
        "so_67721096: cat << \\EOF >> NEWFILE.sh\npathmunge () { case \":${LD_LIBRARY_PATH}:\" in *:\"$1\":*) ;;\n*) LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH${LD_LIBRARY_PATH:+:}$1\";; esac; }\npathmunge $HOME/SOME/PATH\nexport LD_LIBRARY_PATH\nEOF"
      ],
      "Explanations about Options": {}
    }
  ]
}