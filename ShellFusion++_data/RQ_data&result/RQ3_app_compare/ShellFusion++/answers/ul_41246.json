{
  "Query": "how to redirect output to multiple log files",
  "Answers": [
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Print standard input to the terminal, and also pipe it into another program for further processing",
      "Most Similar TLDR Script": "echo \"example\" | tee {{/dev/tty}} | {{xargs printf \"[%s]\"}}",
      "Top-3 Similar Questions": [
        "so_25872130: Linux redirect to multiple targets",
        "so_28671962: redirect stderr stdout both on console and log file",
        "so_8124220: Redirecting stdout/stderr to multiple files"
      ],
      "Top-3 Scripts": [
        "so_25872130: seq 50 | tee copy1 copy2 >((echo Original linecount: $(grep -c ''))>&2) | grep '9'\n\nseq 50 | tee copy1 copy2 >((echo Original linecount: $(grep -c ''))>&2) | grep '9' | wc -l",
        "so_28671962: ./BT_API connect $2 | bluetoothctl 2>&1 | tee /tmp/BT_TMP",
        "so_8124220: perl script.pl 2>&1 >errorTestnormal.out | tee -a errorTestnormal.out > errorTest.out"
      ],
      "Explanations about Options": {
        "-a": "append to the given FILEs, do not overwrite"
      }
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Most Similar TLDR Task": "Number all output lines",
      "Most Similar TLDR Script": "cat -n {{file}}",
      "Top-3 Similar Questions": [
        "so_31960057: Why shell output redirect to a random name file?",
        "so_43156702: Cant redirect output to a file",
        "au_693536: Unable to redirect the output of a file"
      ],
      "Top-3 Scripts": [
        "so_31960057: #!/bin/sh\n{\n    date\n    tmp1=$(mktemp) && curl ... > \"$tmp1\" &\n    tmp2=$(mktemp) && curl ... > \"$tmp2\" &\n    tmp3=$(mktemp) && curl ... > \"$tmp3\" &\n    wait\n    cat \"$tmp1\" \"$tmp2\" \"$tmp3\"\n } > /tmp/log\n rm \"$tmp1\" \"$tmp2\" \"$tmp3\"",
        "so_43156702: ",
        "au_693536: xieerqi:$ xterm -e \"printf hello world > /home/xieerqi/REDIR \"\n\nxieerqi:$ cat REDIR\nhello\nxieerqi:$ xterm -e printf hello world two > /home/xieerqi/REDIR   \n\nxieerqi:$ cat REDIR\n\nxieerqi:$"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "write",
      "MP Summary": "send a message to another user",
      "Most Similar TLDR Task": "Send message to \"testuser\" on terminal \"/dev/tty/5\"",
      "Most Similar TLDR Script": "write {{testuser}} {{tty/5}}",
      "Top-3 Similar Questions": [
        "so_34908588: How to redirect program output to text file"
      ],
      "Top-3 Scripts": [
        "so_34908588: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Most Similar TLDR Task": "Run multiple chained commands on the input data",
      "Most Similar TLDR Script": "{{arguments_source}} | xargs sh -c \"{{command1}} && {{command2}} | {{command3}}\"",
      "Top-3 Similar Questions": [
        "su_398883: redirecting output from several piped commands"
      ],
      "Top-3 Scripts": [
        "su_398883: $ find . -type f -print0 | xargs -0 md5sum | sort"
      ],
      "Explanations about Options": {
        "-0": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode."
      }
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Strip out non-printable characters from a file",
      "Most Similar TLDR Script": "tr -cd \"[:print:]\" < {{filename}}",
      "Top-3 Similar Questions": [
        "so_38683196: Another way to redirect output in Bash"
      ],
      "Top-3 Scripts": [
        "so_38683196: eval {cat,input} \"$(echo _/dev/null | tr _ '\\076')\""
      ],
      "Explanations about Options": {}
    }
  ]
}