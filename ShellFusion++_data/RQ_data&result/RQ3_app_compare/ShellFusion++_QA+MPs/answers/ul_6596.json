{
  "Query": "How do I zip/unzip on the unix command line?",
  "Answers": [
    {
      "Command": "unar",
      "MP Summary": "extract archive file contents",
      "Top-3 Similar Questions": [
        "ul_489445: Unzip to a folder with the same name as the file (without the .zip extension)"
      ],
      "Top-3 Scripts": [
        "ul_489445: unar foo.zip\n\nunar -d foo.zip"
      ],
      "Explanations about Options": {
        "-d": "Always create a containing directory for the contents of the unpacked archive. By\n default, a directory is created if there is more than one top-level file or folder."
      }
    },
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Top-3 Similar Questions": [
        "ul_676052: Unzip & Rename a File in One Command",
        "ul_198492: Unzip specific files from multiple zip files",
        "ul_586576: Unzip files into a new directory"
      ],
      "Top-3 Scripts": [
        "ul_676052: $ unzip -p datasets/youtube_videos.csv.zip videos_data.csv > target/youtube_videos.csv\n\n$ unzip -p datasets/youtube_videos.csv.zip > target/youtube_videos.csv",
        "ul_198492: find . -type f -name '*.zip' -exec unzip {}  '*CTL*' -d \"$target_dir\" \\;",
        "ul_586576: for file in *.zip; do\n    [ -f \"$file\" ] || continue\n    unzip \"$file\" -d \"${file%%.zip}\"\ndone"
      ],
      "Explanations about Options": {
        "-p": "extract files to pipe (stdout). Nothing but the file data is sent to stdout , and\n the files are always extracted in binary format, just as they are stored (no\n conversions)."
      }
    },
    {
      "Command": "zcat",
      "MP Summary": "decompress and concatenate files to standard output",
      "Top-3 Similar Questions": [
        "au_500249: Unzip 5GB zip file",
        "so_42552694: Unzip then process in linux",
        "nl2bash_14660: Unzip \"file.gz\", list the unique lines matching regex pattern '\"searchstring\":\"[^\"]*\"' prefixed by the number of occurrences, sort from least frequent to most frequent"
      ],
      "Top-3 Scripts": [
        "au_500249: zcat file.zip > file.unzipped",
        "so_42552694: fastqc <(zcat path/to/file.gz)\n\nfastqc <(zcat path/to/file.gz | tee file)",
        "nl2bash_14660: zcat file.gz | grep -o '\"searchstring\":\"[^\"]*\"'| sort | uniq -c | sort -n"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Top-3 Similar Questions": [
        "ul_586576: Unzip files into a new directory",
        "ul_321683: Unzip all files into directories with the same name",
        "so_60930401: Unzip archive zip file into folder with same name as archive zip file"
      ],
      "Top-3 Scripts": [
        "ul_586576: ",
        "ul_321683: for d in *.zip\ndo\n  dir=/home/usrname/anotherdir/zip${d%%.zip}\n  unzip -d \"$dir\" \"$d\"\ndone",
        "so_60930401: $filePath = \"s:\\Download Data Feed\\\"\n$zip = Get-ChildItem -File -Recurse -Path $filePath | Where-Object { $_.Extension -eq \".zip\" }\n\nforeach ($file in $zip) { \n    $target = Join-Path $filePath $file.BaseName\n    if (!(Test-Path $target -PathType Container)) {\n        $null = New-Item -ItemType Directory -Path $target\n    }\n    Expand-7Zip -ArchiveFileName $file -Password \"Password\" -TargetPath $target\n}\n\n$zip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xmllint",
      "MP Summary": "command line XML tool",
      "Top-3 Similar Questions": [
        "so_45669063: Unzip - how do I put inflated files into an array"
      ],
      "Top-3 Scripts": [
        "so_45669063: # Unzip the xlsx files into folders\nunzip -aqd foo foo.xlsx\nunzip -aqd bar bar.xlsx\n\n# Pretty print all .xml and .rels files\nfind foo bar \\( -name '*.xml' -o -name '*.rels' \\) -exec xmllint --format {} --output {} \\;\n\n# Now you can recursively diff them\ndiff -urN foo bar"
      ],
      "Explanations about Options": {
        "--output": "Define a file path where xmllint will save the result of parsing. Usually the programs\n build a tree and save it on stdout, with this option the result XML instance will be\n saved onto a file.",
        "--format": "Reformat and reindent the output. The XMLLINT_INDENT environment variable controls the\n indentation. The default value is two spaces \" \")."
      }
    }
  ]
}