{
  "Query": "How to have two versions of PHP installed and switch easily between them?",
  "Answers": [
    {
      "Command": "a2dismod",
      "MP Summary": "enable or disable an apache2 module",
      "Top-3 Similar Questions": [
        "so_55603615: Change my PHP version on my Ubuntu server"
      ],
      "Top-3 Scripts": [
        "so_55603615: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "a2enmod",
      "MP Summary": "enable or disable an apache2 module",
      "Top-3 Similar Questions": [
        "so_55603615: Change my PHP version on my Ubuntu server"
      ],
      "Top-3 Scripts": [
        "so_55603615: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bin",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Top-3 Similar Questions": [
        "so_59856882: How to switch between different java versions in Linux?",
        "ul_526568: switch between multiple versions of software",
        "so_43040685: How can I change php-cli version on Ubuntu 14.04?"
      ],
      "Top-3 Scripts": [
        "so_59856882: $ curl -s \"https://get.sdkman.io\" | bash\n$ source \"$HOME/.sdkman/bin/sdkman-init.sh\"",
        "ul_526568: update-alternatives --install /usr/bin/A A /path/to/version1.0/bin/A 1 \\\n  --slave /usr/bin/B B /path/to/version1.0/bin/B \\\n  --slave /usr/bin/C C /path/to/version1.0/bin/C\n\n/path/to/versionX/bin",
        "so_43040685: sudo update-alternatives --set php /usr/bin/php5.6"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "installed",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Top-3 Similar Questions": [
        "ul_456854: Fedora: How do I force all installed packages to a single release version?"
      ],
      "Top-3 Scripts": [
        "ul_456854: dnf distro-sync [<package-spec>...]\n          As  necessary  upgrades,  downgrades or keeps selected installed\n          packages to match the latest version available from any  enabled\n          repository.  If  no package is given, all installed packages are\n          considered."
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "then",
      "MP Summary": "presumably creating or updating package.json and running any other initialization-related operations. The init command is transformed to a corresponding npx operation as follows: \u00b7 npm init foo -> npx create-foo \u00b7 npm init @usr/foo -> npx @usr/create-foo \u00b7 npm init @usr -> npx @usr/create Any  additional  options  will  be passed directly to the command, so npm init foo --hello will map to npx create-foo --hello. If the initializer is omitted (by just calling npm init), init will fall  back  to  legacy init  behavior.  It  will  ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on  existing  fields,  dependencies, and  options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use -y/--yes to skip the questionnaire altogether.  If  you pass --scope, it will create a scoped package. See Also \u00b7 https://github.com/isaacs/init-package-json \u00b7 npm help package.json \u00b7 npm help version \u00b7 npm help scope April 2020                                NPM-INIT(1)",
      "Top-3 Similar Questions": [
        "au_237835: Script to switch between two sound devices"
      ],
      "Top-3 Scripts": [
        "au_237835: "
      ],
      "Explanations about Options": {}
    }
  ]
}