{
  "Query": "Wait for a process to finish",
  "Answers": [
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Top-3 Similar Questions": [
        "ul_602274: Bash function that will wait for a process to be finished before starting a new one",
        "so_23906392: How to wait for any job to finished using shell script?",
        "so_29889074: how to wait for first command to finish?"
      ],
      "Top-3 Scripts": [
        "ul_602274: ",
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "so_29889074: while kill -0 $BACK_PID ; do\n    echo \"Process is still active...\"\n    sleep 1\n    # You can add a timeout here if you want\ndone"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "killall",
      "MP Summary": "kill processes by name",
      "Top-3 Similar Questions": [
        "ul_55558: How can I kill and wait for background processes to finish in a shell script when I Ctrl+C it?"
      ],
      "Top-3 Scripts": [
        "ul_55558: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "init",
      "MP Summary": "a UNIX process no 1",
      "Top-3 Similar Questions": [
        "so_8665642: Why do I have to `wait()` for child processes?",
        "so_22514121: How can I wait for child processes?"
      ],
      "Top-3 Scripts": [
        "so_8665642: ",
        "so_22514121: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "wait",
      "MP Summary": "await process completion",
      "Top-3 Similar Questions": [
        "so_23906392: How to wait for any job to finished using shell script?",
        "ul_656103: Waiting for any process to finish in bash script",
        "so_29256233: Bash function is waiting for its subprocess to finish"
      ],
      "Top-3 Scripts": [
        "so_23906392: # Assuming that 100,000 seconds is long enough \n# for at least one bg job to complete\nsleep 100000 & sleep_pid=$!\n\n{ MyScript1.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript2.sh; kill $sleep_pid 2>/dev/null; } &\n{ MyScript3.sh; kill $sleep_pid 2>/dev/null; } &\nwait $sleep_pid\nMyScript4.sh",
        "ul_656103: ",
        "so_29256233: test_fn() {\n    sleep 10 >&- &  # close stdout for sleep, or redirect if desired\n    echo $!\n}\n\npid=$(test_fn)\necho \"waiting\"\nwait"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "send",
      "MP Summary": "send an nmh message",
      "Top-3 Similar Questions": [
        "ul_55558: How can I kill and wait for background processes to finish in a shell script when I Ctrl+C it?",
        "so_57857905: Does poll(2) wait for an operation on a fd to be finished?",
        "ul_429523: Bash Script to Wait for Part of Process"
      ],
      "Top-3 Scripts": [
        "ul_55558: ",
        "so_57857905: ",
        "ul_429523: #!/usr/bin/expect\nexpect \"Prompt: \"\nsend \"my input\\r\"\nexpect eof"
      ],
      "Explanations about Options": {}
    }
  ]
}