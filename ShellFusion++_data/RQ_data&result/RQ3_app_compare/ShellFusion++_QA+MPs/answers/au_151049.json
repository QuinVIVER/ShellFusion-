{
  "Query": "How to deal with a frozen screen?",
  "Answers": [
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Top-3 Similar Questions": [
        "ul_293279: Scrolling with mouse wheel inside screen",
        "so_22102473: Start a screen then run a command from the screen",
        "su_485884: Can a process be frozen temporarily in linux?"
      ],
      "Top-3 Scripts": [
        "ul_293279: ",
        "so_22102473: screen -x\n\nscreen -X 'cd /ftb; java -Xms2048m -Xmx2048m -jar mcpc.jar'\nscreen -x",
        "su_485884: #!/bin/bash\n#This is the process you want to suspend.\nscreen -mdS child bash -c \"cat /dev/urandom | base64\"\n#This is the process ID of the child process\nTHEPID=$(screen -list | grep child | cut -f1 -d'.' | sed 's/\\W//g')\n#Send SIGSTOP to the child process.\nkill -SIGSTOP ${THEPID}\n#Now it is suspended. This process will sleep for 10 seconds asynchronously, then resume the process.\nscreen -mdS monitor bash -c \"sleep 10; kill -SIGCONT ${THEPID}\"\n\nscreen -rS child"
      ],
      "Explanations about Options": {
        "-X": "Send the specified command to a running screen session. You may use the -S option to\n specify the screen session if you have several screen sessions running. You can use\n the -d or -r option to tell screen to look only for attached or detached screen\n sessions. Note that this command doesn't work if the session is password protected.",
        "-x": "Attach to a not detached screen session. (Multi display mode). Screen refuses to\n attach from within itself. But when cascading multiple screens, loops are not\n detected; take care.",
        "-r": " resumes a detached screen session. No other options (except combinations with -d/-D)\n may be specified, though an optional prefix of [pid.]tty.host may be needed to\n distinguish between multiple detached screen sessions. The second form is used to\n connect to another user's screen session which runs in multiuser mode. This indicates\n that screen should look for sessions in another user's directory. This requires\n setuid-root.",
        "-S": "When creating a new session, this option can be used to specify a meaningful name for\n the session. This name identifies the session for \"screen -list\" and \"screen -r\"\n actions. It substitutes the default [tty.host] suffix.",
        "-a": "include all capabilities (with some minor exceptions) in each window's termcap , even\n if screen must redraw parts of the display in order to implement a function."
      }
    },
    {
      "Command": "clear",
      "MP Summary": "clear the terminal screen",
      "Top-3 Similar Questions": [
        "so_18937058: Clear screen in shell"
      ],
      "Top-3 Scripts": [
        "so_18937058: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Top-3 Similar Questions": [
        "so_18937058: Clear screen in shell"
      ],
      "Top-3 Scripts": [
        "so_18937058: import subprocess as sp\nsp.call('cls', shell=True)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "reptyr",
      "MP Summary": "Reparent a running program to a new terminal",
      "Top-3 Similar Questions": [
        "ul_234369: put a running program into background like screen"
      ],
      "Top-3 Scripts": [
        "ul_234369: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bg",
      "MP Summary": "run jobs in the background",
      "Top-3 Similar Questions": [
        "ul_234369: put a running program into background like screen"
      ],
      "Top-3 Scripts": [
        "ul_234369: "
      ],
      "Explanations about Options": {}
    }
  ]
}