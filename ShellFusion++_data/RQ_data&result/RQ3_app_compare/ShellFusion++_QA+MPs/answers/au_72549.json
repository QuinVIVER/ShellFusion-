{
  "Query": "How to determine which window manager is running",
  "Answers": [
    {
      "Command": "cas",
      "MP Summary": "c aMule statistics",
      "Top-3 Similar Questions": [
        "ul_288298: How to determine which script is being executed by bash?"
      ],
      "Top-3 Scripts": [
        "ul_288298: ps ww -u cas\n\n$ ps ww -U cas | grep bash\n 1350 pts/0    Ss     0:00 -bash\n18345 pts/34   S      0:00 /bin/bash /home/cas/bin/myscript.sh\n21293 pts/34   Ss+    0:00 bash"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xwininfo",
      "MP Summary": "window information utility for X",
      "Top-3 Similar Questions": [
        "ul_288232: How can I determine if the desktop window is visible in Xfce?",
        "au_30147: Command to determine whether a fullscreen application is running?"
      ],
      "Top-3 Scripts": [
        "ul_288232: xwininfo -tree -root",
        "au_30147: "
      ],
      "Explanations about Options": {
        "-tree": "This option is like -children but displays all children recursively.",
        "-root": "This option specifies that X's root window is the target window. This is useful\n in situations where the root window is completely obscured."
      }
    },
    {
      "Command": "import",
      "MP Summary": "saves any visible window on an X server and outputs it as an image file. You can capture a single window, the entire screen, or any rectangular portion of the screen.",
      "Top-3 Similar Questions": [
        "so_4719063: Can python detect which OS is it running under?"
      ],
      "Top-3 Scripts": [
        "so_4719063: import os\nif os.name == 'nt':\n    pass # Windows\nelse:\n    pass # other (unix)\n\nfrom time import strftime\nimport os\n\nif os.name == 'nt': # Windows\n    basePath = 'C:\\\\working\\\\'\nelse:\n    basePath = '/working/'\n\nFn = '%sSetup%s.csv' % ( basePath, strftime( '%y%m%d' ) )"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "print",
      "MP Summary": "execute programs via entries in the mailcap file",
      "Top-3 Similar Questions": [
        "ul_521715: How to determine which modules are responsible for spectre_v2?",
        "ul_102608: How to determine which host generated a core file?",
        "au_30147: Command to determine whether a fullscreen application is running?"
      ],
      "Top-3 Scripts": [
        "ul_521715: SERVER:~ # awk '{module=$1; retpcheck=\"modinfo \"module\" | grep -c retpoline\"; retpcheck | getline found;  close(retpcheck); if (!found) {print \"VULNERABLE - No Retpoline found - \"module}}' /proc/modules\nVULNERABLE - No Retpoline found - mlx4_ib\nVULNERABLE - No Retpoline found - mlx4_en\nVULNERABLE - No Retpoline found - mlx4_core\nVULNERABLE - No Retpoline found - mlx5_ib\nVULNERABLE - No Retpoline found - mlx5_core\nVULNERABLE - No Retpoline found - mlxfw\nVULNERABLE - No Retpoline found - mlx_compat\nSERVER:~ #",
        "ul_102608: $ gdb /usr/bin/sleep core\n[... snip ...]\n(gdb) print (char ***) &environ\n$1 = (char ***) 0x600bf8\n(gdb) print $1[0][0]@10\n$2 = {0x7fffffffd9c9 \"HOST=myhostname\", 0x7fffffffd9d9 \"TERM=screen\", \n0x7fffffffd9e5 \"SHELL=/bin/csh\", \n[...]",
        "au_30147: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "screen",
      "MP Summary": "screen manager with VT100/ANSI terminal emulation",
      "Top-3 Similar Questions": [
        "au_30147: Command to determine whether a fullscreen application is running?"
      ],
      "Top-3 Scripts": [
        "au_30147: if is-full-screen ; then echo yup, full screen ; fi"
      ],
      "Explanations about Options": {}
    }
  ]
}