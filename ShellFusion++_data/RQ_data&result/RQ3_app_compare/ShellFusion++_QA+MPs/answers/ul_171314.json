{
  "Query": "How to grep for same string but multiple files at the same time?",
  "Answers": [
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Top-3 Similar Questions": [
        "ul_195279: how to grep for specific time period in a log"
      ],
      "Top-3 Scripts": [
        "ul_195279: limit1=$(date -d \"20150408 13:29:28\" +\"%s\")\nlimit2=$(date -d \"20150408 17:55:02\" +\"%s\")\nwhile read -r logdate logtime logline\ndo\n    logsec=$(date -d \"$logdate $logtime\" +\"%s\")\n    if [ $limit1 -le $logsec -a $limit2 -ge $logsec ]\n    then\n        echo $logdate $logtime $logline\n    fi\ndone < log_files"
      ],
      "Explanations about Options": {
        "-d": "display time described by STRING, not 'now'"
      }
    },
    {
      "Command": "pcregrep",
      "MP Summary": "a grep with Perl-compatible regular expressions.",
      "Top-3 Similar Questions": [
        "ul_168813: How do I grep for multiple patterns on multiple lines?"
      ],
      "Top-3 Scripts": [
        "ul_168813: pcregrep -M '(?s)^begin$.*?^end$'\n\n(seq 12091; echo begin; seq 4315; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'\n\n(seq 12091; echo begin; seq 4316; echo end; seq 10) |\n   pcregrep -M '(?s)^begin$.*?^end$'"
      ],
      "Explanations about Options": {
        "-M": "Allow patterns to match more than one line. When this option is given, patterns\n may usefully contain literal newline characters and internal occurrences of ^\n and $ characters. The output for a successful match may consist of more than one\n line, the last of which is the one in which the match ended. If the matched\n string ends with a newline sequence the output ends at the end of that line."
      }
    },
    {
      "Command": "sort",
      "MP Summary": "sort lines of text files",
      "Top-3 Similar Questions": [
        "au_551338: How do I grep for multiple patterns on multiple lines?",
        "so_19972928: grep multiple strings, count lines, echo output for each string"
      ],
      "Top-3 Scripts": [
        "au_551338: ",
        "so_19972928: cat  mylog.log |   grep  \"Error code\" | sort | uniq -c"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "strings",
      "MP Summary": "print the strings of printable characters in files.",
      "Top-3 Similar Questions": [
        "so_3242873: Grep for literal strings"
      ],
      "Top-3 Scripts": [
        "so_3242873: -F, --fixed-strings       PATTERN is a set of newline-separated fixed strings"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "match",
      "MP Summary": "Match strings against glob patterns",
      "Top-3 Similar Questions": [
        "so_42928882: openstack neutron command, grep for exact string",
        "so_36443934: grep Command for Files with \"String1\" AND NOT \"String2\""
      ],
      "Top-3 Scripts": [
        "so_42928882: grep -w 'router_dallas' input \n\n\nfrom grep help -w, --word-regexp         force PATTERN to match only whole words",
        "so_36443934: -L, --files-without-match  print only names of FILEs containing no match"
      ],
      "Explanations about Options": {}
    }
  ]
}