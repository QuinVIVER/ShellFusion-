{
  "Query": "How to stream music over the network to multiple computers?",
  "Answers": [
    {
      "Command": "ppmtoy4m",
      "MP Summary": "Convert PPM images to YUV4MPEG2 stream",
      "Top-3 Similar Questions": [
        "so_13790486: Stream chain after Untar"
      ],
      "Top-3 Scripts": [
        "so_13790486: tar -xzf Monitor-1-xx.tar.gz --wildcards '*.jpeg' \\\n    --to-command=\"jpegtopnm|ppmtoy4m -F 4:1| x264 --crf 24 -o ../xx.mp4 --stdin y4m -\"\n\ntar -xzf Monitor-1-xx.tar.gz --wildcards '*.jpeg' \\\n    --to-command=\"jpegtopnm|ppmtoy4m -F 4:1| x264 --crf 24 -o ../xx-`date +%H%M%S%N`.mp4 --stdin y4m -\""
      ],
      "Explanations about Options": {
        "-F": "n:d\n Set framerate encoded in output stream, as an exact integer ratio. (default:\n 30000:1001) Common rates are:\n 24000:1001 - NTSC 3:2 pulldown converted film\n 24:1 - native film\n 25:1 - PAL/SECAM\n 30000:1001 - NTSC video\n 50:1 - PAL field rate\n 60000:1001 - NTSC field rate"
      }
    },
    {
      "Command": "MPD",
      "MP Summary": "A daemon for playing music",
      "Top-3 Similar Questions": [
        "au_428788: Streaming music like a radio show"
      ],
      "Top-3 Scripts": [
        "au_428788: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "vlc",
      "MP Summary": "the VLC media player",
      "Top-3 Similar Questions": [
        "su_411015: Stream video file in debian?",
        "au_86926: How to stream a video with VLC in a LAN",
        "ul_291975: How do I stream to Chromecast using VLC?"
      ],
      "Top-3 Scripts": [
        "su_411015: apt-get build-dep vlc",
        "au_86926: vlc v4l2:// :v4l2-dev=/dev/video0 :v4l2-width=640 :v4l2-height=480 --sout=\"#transcode{vcodec=h264,vb=800,scale=1,acodec=mp4a,ab=128,channels=2,samplerate=44100}:rtp{sdp=rtsp://:8554/live.ts}\" -I dummy",
        "ul_291975: $ vlc --sout=\"#chromecast{ip=ip_address}\" ./video.mp4\n\n$ vlc --sout=\"#duplicate{dst=display,#chromecast{ip=ip_address}}\" ./video.mp4\n\n$ vlc --sout=\"#duplicate{dst=display{delay=3100},#chromecast{ip=ip_address}}\" ./video.mp4"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ffmpeg",
      "MP Summary": "ffmpeg video converter",
      "Top-3 Similar Questions": [
        "au_1276243: Stream a recoreded Video to youtube",
        "au_516899: How do I stream computer audio only with ffmpeg?",
        "so_49273070: ffmpeg stream video file from ubuntu to youtube"
      ],
      "Top-3 Scripts": [
        "au_1276243: ",
        "au_516899: ffmpeg \\\n-f alsa -ac 2 -i \"$INAUD\" \\\n-f x11grab -video_size \"$INRES\" -framerate \"$FPS\" -i :0.0 \\\n-vcodec libx264 -s \"$OUTRES\" -preset \"$QUAL\" -maxrate 1000k -bufsize 2000k -g 50 -pix_fmt yuv420p \\\n-acodec libmp3lame -ar 44100 -b:a 128k \\\n-f flv \"$STREAM_URL\"",
        "so_49273070: ffmpeg -re -i video.flv -c copy -f flv rtmp://a.rtmp.youtube.com/live2/XXXXXX\n\nffmpeg -re -i video.flv -c:v libx264 -b:v 4000k -maxrate 4000k -bufsize 6000k -pix_fmt yuv420p -g 60 -c:a aac -f flv rtmp://a.rtmp.youtube.com/live2/XXXXXX"
      ],
      "Explanations about Options": {
        "-re": "Read input at native frame rate. Mainly used to simulate a grab device, or live input\n stream (e.g. when reading from a file). Should not be used with actual grab devices or\n live input streams (where it can cause packet loss). By default ffmpeg attempts to\n read the input(s) as fast as possible. This option will slow down the reading of the\n input(s) to the native frame rate of the input(s). It is useful for real-time output\n (e.g. live streaming).",
        "-i": "input file url",
        "-t": "When used as an input option (before \"-i\"), limit the duration of data read from the\n input file."
      }
    },
    {
      "Command": "youtube-dl",
      "MP Summary": "download videos from youtube.com or other video platforms",
      "Top-3 Similar Questions": [
        "au_518932: Stream audio from youtube"
      ],
      "Top-3 Scripts": [
        "au_518932: "
      ],
      "Explanations about Options": {}
    }
  ]
}