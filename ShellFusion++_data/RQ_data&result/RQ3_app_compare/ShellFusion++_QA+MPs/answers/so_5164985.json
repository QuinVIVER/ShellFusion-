{
  "Query": "How can I use nohup to run process as a background process in linux?",
  "Answers": [
    {
      "Command": "background",
      "MP Summary": "manage terminal background",
      "Top-3 Similar Questions": [
        "su_1118204: How to use Ctrl+C to kill all background processes started in a Bash script?",
        "so_44107048: Python: Run bash command with redirection in background and get the process id"
      ],
      "Top-3 Scripts": [
        "su_1118204: trap 'kill $BGPID; exit' INT\nsleep 1024 &    # background command\nBGPID=$!\nsleep 1024      # foreground command of the script",
        "so_44107048: import subprocess\n with open(\"ls.output.txt\", \"w\") as f:\n     # This is the way you'd run \"ls -al > ls.output.txt\" in the background\n     p = subprocess.Popen([\"ls\", \"-al\"], stdout=f) # This will run in the background\n\n p.wait() # Wait till process completes\n\n with open(\"ls.output.txt\") as f:\n        print (f.readline()) # Will print first line of ls -al output (total 2657828)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "kill",
      "MP Summary": "send a signal to a process",
      "Top-3 Similar Questions": [
        "su_1118204: How to use Ctrl+C to kill all background processes started in a Bash script?",
        "so_2970937: How to run a linux app in background process?",
        "so_24843614: Execute process in background, without printing \"Done\", and get PID"
      ],
      "Top-3 Scripts": [
        "su_1118204: ",
        "so_2970937: ",
        "so_24843614: $ function x { for A in {1..100}; do echo \"$A\"; sleep 1s; done }\n$ read pid < <(x & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess died.\n$ read pid < <(x > /dev/null & echo $!)\n$ kill -s 0 \"$pid\" &>/dev/null && echo \"Process active.\" || echo \"Process died.\"\nProcess active."
      ],
      "Explanations about Options": {
        "-s": " Specify the signal to be sent. The signal can be specified by using name or\n number. The behavior of signals is explained in signal(7) manual page."
      }
    },
    {
      "Command": "setsid",
      "MP Summary": "run a program in a new session",
      "Top-3 Similar Questions": [
        "au_106351: Running programs in the background from terminal",
        "so_29658335: Running a process in the background with input/output redirection"
      ],
      "Top-3 Scripts": [
        "au_106351: setsid gnome-calculator",
        "so_29658335: setsid python script.py < /dev/zero & > log.txt &\nsetsid python script.py & < /dev/zero > log.txt\n\nsetsid python script.py < /dev/zero &\n> log.txt &\n\nsetsid python script.py &\n< /dev/zero > log.txt\n\nsetsid python script.py < /dev/zero &> log.txt &\n\nsetsid python script.py < /dev/zero > log.txt &"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "daemonize",
      "MP Summary": "run a program as a Unix daemon",
      "Top-3 Similar Questions": [
        "so_10037357: Running a script from a script in android"
      ],
      "Top-3 Scripts": [
        "so_10037357: Usage: daemonize [-f logfile] [-a] [-d delay] <program>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Top-3 Similar Questions": [
        "su_1118204: How to use Ctrl+C to kill all background processes started in a Bash script?",
        "ul_675911: How to run this simple command in the background",
        "so_59169174: Use of '&' in a python subprocess for background process"
      ],
      "Top-3 Scripts": [
        "su_1118204: trap 'kill $BGPID; exit' INT\nsleep 1024 &    # background command\nBGPID=$!\nsleep 1024      # foreground command of the script",
        "ul_675911: o some command script\n\nsome command script",
        "so_59169174: command 2> error.txt"
      ],
      "Explanations about Options": {}
    }
  ]
}