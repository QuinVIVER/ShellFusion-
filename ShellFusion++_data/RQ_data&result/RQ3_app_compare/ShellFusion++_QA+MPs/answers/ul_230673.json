{
  "Query": "How to generate a random string?",
  "Answers": [
    {
      "Command": "shuf",
      "MP Summary": "generate random permutations",
      "Top-3 Similar Questions": [
        "au_638524: Create Random non words"
      ],
      "Top-3 Scripts": [
        "au_638524: shuf -i 1-10 -n1"
      ],
      "Explanations about Options": {
        "-i": "treat each number LO through HI as an input line"
      }
    },
    {
      "Command": "apg",
      "MP Summary": "generates several random passwords",
      "Top-3 Similar Questions": [
        "tldr_3170: Create random passwords (default password length is 8)"
      ],
      "Top-3 Scripts": [
        "tldr_3170: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "rand",
      "MP Summary": "generate pseudo-random bytes",
      "Top-3 Similar Questions": [
        "so_40277918: Shell script to generate random hex numbers",
        "ul_547338: How could a sequence of random dates be generated, given year interval?",
        "so_42660218: Bash. Generate random mac address (unicast)"
      ],
      "Top-3 Scripts": [
        "so_40277918: echo \"#$(openssl rand -hex 3)\"",
        "ul_547338: rand()",
        "so_42660218: #!/bin/bash\nhexdump -n 6 -ve '1/1 \"%.2x \"' /dev/random | awk -v a=\"2,6,a,e\" -v r=\"$RANDOM\" 'BEGIN{srand(r);}NR==1{split(a,b,\",\");r=int(rand()*4+1);printf \"%s%s:%s:%s:%s:%s:%s\\n\",substr($1,0,1),b[r],$2,$3,$4,$5,$6}'"
      ],
      "Explanations about Options": {
        "-hex": "Show the output as a hex string."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Top-3 Similar Questions": [
        "so_59038617: Creating a custom random variable",
        "so_40277918: Shell script to generate random hex numbers",
        "so_29463778: How to create a bash variable like $RANDOM"
      ],
      "Top-3 Scripts": [
        "so_59038617: function RANDOM(){\n    rando=$( head -100 /dev/urandom | tr -dc a-zA-Z0-9 | fold -w ${1:-15} | head -1 )\n    echo $rando\n}\n\nRANDOM\nRANDOM 4\nRANDOM 40",
        "so_40277918: echo \"#$(openssl rand -hex 3)\"",
        "so_29463778: now() {\n    date +%s\n}\n\necho $(now)"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "seq",
      "MP Summary": "print a sequence of numbers",
      "Top-3 Similar Questions": [
        "so_58894982: How to generate a random string in a specific range (bash)",
        "ul_254962: How to implement \"generators\" like $RANDOM?"
      ],
      "Top-3 Scripts": [
        "so_58894982: #! /bin/bash\n\nsymbols='0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVYXWZ~#$&_+-=/\\'  # Stupid SO: '\ncount_symbols=${#symbols}\n(( length = RANDOM % 6 + 10 ))\npassword=\"\"\nfor i in $(seq 1 $length) ; do\n    password+=${symbols:RANDOM % count_symbols:1}\ndone\necho \"$password\"",
        "ul_254962: $ fifo=~/.generators/incr\n$ (umask  077 && mkdir -p $fifo:h && rm -f $fifo && mkfifo $fifo)\n$ seq infinity > $fifo &\n$ exec 3< $fifo\n$ IFS= read -rneu3\n1\n$ IFS= read -rneu3\n2"
      ],
      "Explanations about Options": {}
    }
  ]
}