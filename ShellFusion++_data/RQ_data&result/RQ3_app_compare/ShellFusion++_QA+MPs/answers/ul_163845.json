{
  "Query": "Using jq to extract values and format in CSV",
  "Answers": [
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Top-3 Similar Questions": [
        "so_14492590: using bash (sed/awk) to extract rows AND columns in CSV files?",
        "ul_404699: Using multiple wildcards in jq to select objects in a JSON file",
        "so_69407077: jq format when running from a bash script with variable expansion"
      ],
      "Top-3 Scripts": [
        "so_14492590: #!/bin/bash\ndeclare -a arr\nwhile read -r line; do\n    arr=(${line//,/ })\n    printf \"Rank\\t: %s\\nName\\t: %s\\nSchool\\t: %s\\nMajor\\t: %s\\nYear\\t: %s\\n\" ${arr[@]}\ndone < file.csv",
        "ul_404699: jq -c 'select ...' file.json > out.json\nprintf '{\"nt\":%i}\\n' `wc -l < out.json` >> out.json",
        "so_69407077: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Top-3 Similar Questions": [
        "so_45486380: Using jq to store part of JSON in variable",
        "so_53369090: How to use jq to fetch attribute from json",
        "so_33247228: How to use `jq` in a shell pipeline?"
      ],
      "Top-3 Scripts": [
        "so_45486380: variable=$(cat \"$file\" | jq -j \".rows[].example\")",
        "so_53369090: ",
        "so_33247228: curl -s https://api.github.com/users/octocat/repos | jq '.' | cat"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Top-3 Similar Questions": [
        "so_14492590: using bash (sed/awk) to extract rows AND columns in CSV files?",
        "so_56392038: Use data from a CSV file as values of a variable in a loop in Bash",
        "so_69179552: How to use variable with jq cmd in shell"
      ],
      "Top-3 Scripts": [
        "so_14492590: #!/bin/bash\nwhile IFS=',' read -r rank name school major year; do\n    echo -e \"Rank\\t: $rank\\nName\\t: $name\\nSchool\\t: $school\\nMajor\\t: $major\\nYear\\t: $year\\n\"\ndone < file.csv\nIFS=$' \\t\\n'",
        "so_56392038: #!/bin/bash\n\nwhile IFS=', ' read -r NAME IP TYPE\ndo\n    #You can do your processing here, e.g.\n    echo \"name=$NAME ip=$IP type=$TYPE\"\ndone < data.csv\n\nexit 0",
        "so_69179552: "
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "dos2unix",
      "MP Summary": "DOS/Mac to Unix and vice versa text file format converter",
      "Top-3 Similar Questions": [
        "so_49920852: Looping over a list of keys to extract from a JSON file with jq"
      ],
      "Top-3 Scripts": [
        "so_49920852: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "col",
      "MP Summary": "filter reverse line feeds from input",
      "Top-3 Similar Questions": [
        "so_25622621: How to use awk to get the result of computation of column1 value of the same column2 value in 2 csv files in Ubuntu?"
      ],
      "Top-3 Scripts": [
        "so_25622621: a[first col]=second col"
      ],
      "Explanations about Options": {}
    }
  ]
}