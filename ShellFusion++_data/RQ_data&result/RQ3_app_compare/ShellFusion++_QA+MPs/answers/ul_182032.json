{
  "Query": "Zip the contents of a folder without including the folder itself",
  "Answers": [
    {
      "Command": "ls",
      "MP Summary": "list directory contents",
      "Top-3 Similar Questions": [
        "so_10721874: As soon as I try to include a file inside a folder, my relative paths break?",
        "au_719912: How to find all empty files and folders in a specific directory including files which just look empty but are not?"
      ],
      "Top-3 Scripts": [
        "so_10721874: ls -l /var/www/site | grep \"test\"",
        "au_719912: %y     File's type (like in ls -l), U=unknown type (shouldn't happen)\n\nfind ~/lists -empty -exec ls -Fd {} \\;\n\nfind ~/list \\( -empty -o \\( -type f -a ! -exec grep -qm1 '[^[:blank:]]' {} \\; \\) \\) -exec ls -Fd {} \\;"
      ],
      "Explanations about Options": {
        "-F": "append indicator (one of */=>@|) to entries",
        "-d": "list directories themselves, not their contents",
        "-l": "use a long listing format"
      }
    },
    {
      "Command": "dir",
      "MP Summary": "list directory contents",
      "Top-3 Similar Questions": [
        "so_50296317: Zip command on Linux includes whole folder structure"
      ],
      "Top-3 Scripts": [
        "so_50296317: <exec executable=\"/usr/bin/zip\" \n                  dir=\"/var/...more directories.../repo/master/ProjectBuild/tmp/\"\n                  failonerror=\"true\">\n    <arg line=\"-r /var/...more directories.../repo/master/ProjectBuild/tmp/release.zip release -P PASSWORD_GOES_HERE\" />\n</exec>\n\n<exec executable=\"/usr/bin/zip\" \n                  dir=\"/var/...more directories.../repo/master/ProjectBuild/tmp/release\"\n                  failonerror=\"true\">\n    <arg line=\"-r /var/...more directories.../repo/master/ProjectBuild/tmp/release.zip . -P PASSWORD_GOES_HERE\" />\n</exec>"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Top-3 Similar Questions": [
        "so_67683870: Count lines of code recursively, including compressed (zip) files",
        "so_3703156: zip archive from a directory tree but only include files with extensions xx1,xx2,...?",
        "su_1556223: Rename files which have $'\\r at end of file name (including recursive in folders) without using rename"
      ],
      "Top-3 Scripts": [
        "so_67683870: find . -name \\*.java -print \\\n    -o -name \\*.zip -exec zipinfo -1 {} '*.java' \\; |\nwc -l\n\nfind . -name \\*.xyz -exec cat {} \\; | wc -l",
        "so_3703156: cd DIRECTORY/..\nfind DIRECTORY -type f '(' -name '*.ext1' -or -name '*.ext2' ')' | xargs zip OUTPUT",
        "su_1556223: find media -name '*'$'\\r' -print0 |\nwhile IFS= read -r -d '' file\ndo    mv \"$file\" \"${file%?}\"\ndone"
      ],
      "Explanations about Options": {
        "-print0": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "mktemp",
      "MP Summary": "create a temporary file or directory",
      "Top-3 Similar Questions": [
        "ul_259981: diff without including removed content"
      ],
      "Top-3 Scripts": [
        "ul_259981: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unar",
      "MP Summary": "extract archive file contents",
      "Top-3 Similar Questions": [
        "so_67459734: change unzipped folder name"
      ],
      "Top-3 Scripts": [
        "so_67459734: "
      ],
      "Explanations about Options": {}
    }
  ]
}