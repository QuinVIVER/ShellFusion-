{
  "Query": "Assigning the output of a SQL query to variable",
  "Answers": [
    {
      "Command": "cat",
      "MP Summary": "concatenate files and print on the standard output",
      "Top-3 Similar Questions": [
        "so_2019989: How to assign the output of a command to a Makefile variable",
        "so_11527899: Assigning output of a command to a variable(BASH)",
        "so_37854393: How to assign the output of a background job into a bash variable?"
      ],
      "Top-3 Scripts": [
        "so_2019989: me@Zack:~$ cat Makefile \nMY_VAR := $(shell echo whatever)\n\nall:\n    @echo MY_VAR IS $(MY_VAR)",
        "so_11527899: # Second step : awk has a powerful regular expression engine ^^\nUUID=$(cat /etc/fstab|awk '/UUID.*ext4/ {print substr($1,6)}')",
        "so_37854393: $ mkfifo pipo\n $ sleep 4s && echo \"this is not fair\" > pipo & \n [1] 25356\n\n $ back_var=$(cat pipo)\n [1]+  Done                    sleep 4s && echo \"this is not fair\" > pipo\n\n $ echo $back_var\n this is not fair"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Top-3 Similar Questions": [
        "ul_365512: assign number of output lines to a variable"
      ],
      "Top-3 Scripts": [
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Top-3 Similar Questions": [
        "so_26032752: Assign output of sql query to a variable in unix",
        "so_48500178: assign the multiline output of command to a variable",
        "so_30049179: How to assign the output of calculation to a shell variable"
      ],
      "Top-3 Scripts": [
        "so_26032752: count=`sqlplus -s ${DB_USER}/${DB_PASS}@${DB_INST} <<END\nset pages 0 echo off feed off\nSELECT COUNT(column_name)\nexit;\nEND`",
        "so_48500178: output=`echo abc && uncrustify -c ~/.uncrustify.cfg --check filename && echo def`\n\noutput=\"$(echo abc)\\n$(uncrustify -c ~/.uncrustify.cfg --check filename 2>&1)\\n$(echo def)\"\necho -e \"$output\"",
        "so_30049179: echo $((dec))"
      ],
      "Explanations about Options": {
        "-e": "enable interpretation of backslash escapes"
      }
    },
    {
      "Command": "from",
      "MP Summary": "print names of those who have sent mail",
      "Top-3 Similar Questions": [
        "so_14397393: How to assign the result of a shell command to a MySQL variable?",
        "so_57363793: Shell Script assigning sql query to variable"
      ],
      "Top-3 Scripts": [
        "so_14397393: ",
        "so_57363793: $count = $dbh->do(\"SELECT COUNT(*) from (\n           SELECT column1 from table\n       )\");\nif($count>1)\n    do X;\nelse\n    do Y;"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "read",
      "MP Summary": "read a line from standard input",
      "Top-3 Similar Questions": [
        "so_29989457: Assign variable the grep value of command output",
        "ul_365512: assign number of output lines to a variable",
        "so_2454660: How to assign the output of a command to a variable?"
      ],
      "Top-3 Scripts": [
        "so_29989457: read variable\n\ndeclare -A details\nwhile IFS== read field value; do\n  details[$field]=\"$value\"\ndone < <(ffprobe -i \"$file\" -show_format -v quiet | grep '.=.')\n\necho \"${details[duration]}\"",
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5",
        "so_2454660: read ENE <<<$(awk '{print $1}' file)\n\n$ declare -a array\n$ read -a array <<<$(<file)\n$ echo ${array[6]}"
      ],
      "Explanations about Options": {}
    }
  ]
}