{
  "Query": "Pass command line arguments to bash script",
  "Answers": [
    {
      "Command": "args",
      "MP Summary": "manipulate and output command arguments.",
      "Top-3 Similar Questions": [
        "so_58836535: bash - passing optional arguments to script - parametername + string_value",
        "so_9185124: powershell pass command line arguments",
        "so_68519873: Passing arguments to shell command"
      ],
      "Top-3 Scripts": [
        "so_58836535: ",
        "so_9185124: Invoke-Command -ArgumentList $args",
        "so_68519873: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Top-3 Similar Questions": [
        "so_44215554: bash: How to pass arguments containing spaces",
        "so_58836535: bash - passing optional arguments to script - parametername + string_value",
        "ul_466919: Pass function argument to defined variable"
      ],
      "Top-3 Scripts": [
        "so_44215554: ",
        "so_58836535: ",
        "ul_466919: mood='i am $1 happy'\n\nhappy ()\n{\n    eval echo \"$mood\"\n}\n\nhappy \"very\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xargs",
      "MP Summary": "build and execute command lines from standard input",
      "Top-3 Similar Questions": [
        "so_65825618: How to pass arguments to bash command",
        "ul_551001: Pass positional arguments"
      ],
      "Top-3 Scripts": [
        "so_65825618: cat asnlookups_domains_ip.txt | awk '{print $1}' | xargs -n1 amass intel -whois -d",
        "ul_551001: echo a b c d  | xargs -I VALUES sh -c \"echo \\$4 \\$3 \\$2 \\$1\" command VALUES\n\necho 1 2 3 4 | xargs sh -c \"echo \\$4 \\$3 \\$2 \\$1\" command\n\necho 1 2 3 4 | xargs -I sh -c \"echo \\$4 \\$3 \\$2 \\$1\" command '{}'"
      ],
      "Explanations about Options": {
        "-I": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
        "-o": "Reopen stdin as /dev/tty in the child process before executing the command. This\n is useful if you want xargs to run an interactive application.",
        "-i": "This option is a synonym for -Ireplace-str if replace-str is specified. If the\n replace-str argument is missing, the effect is the same as -I{}. This option is\n deprecated; use -I instead."
      }
    },
    {
      "Command": "getopt",
      "MP Summary": "parse command options (enhanced)",
      "Top-3 Similar Questions": [
        "so_58836535: bash - passing optional arguments to script - parametername + string_value"
      ],
      "Top-3 Scripts": [
        "so_58836535: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expr",
      "MP Summary": "evaluate arguments as an expression",
      "Top-3 Similar Questions": [
        "so_52256988: AWK in single line pass multiple commands"
      ],
      "Top-3 Scripts": [
        "so_52256988: value = expr\n\nlvalue = expr"
      ],
      "Explanations about Options": {}
    }
  ]
}