{
  "Query": "How do I check the version of Ubuntu I am running?",
  "Answers": [
    {
      "Command": "sudo",
      "MP Summary": "execute a command as another user",
      "Top-3 Similar Questions": [
        "au_832464: Is it possible to check the BIOS version of my computer on Ubuntu?",
        "au_701249: How to check the integrity of Live USB in Ubuntu",
        "au_448267: To check code execution flow of C program in ubuntu"
      ],
      "Top-3 Scripts": [
        "au_832464: sudo dmidecode -t 0\nsudo dmidecode -t 0 | grep 'Version:'\n\nsudo dmidecode -t bios\nsudo dmidecode -t bios | grep 'Version:'",
        "au_701249: sudo dd if=/dev/sdc iflag=fullblock count=$((689963008/512)) 2>/dev/null | md5sum -\n\nsudo apt-get install pv\n\nsudo dd if=/dev/sdc iflag=fullblock count=$((689963008/512)) 2>/dev/null | pv -s 689963008 | md5sum -",
        "au_448267: sudo apt-get install gdb"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Top-3 Similar Questions": [
        "so_46314895: how to check a container run out of memory in container"
      ],
      "Top-3 Scripts": [
        "so_46314895: journalctl -k \\\n           --since \"`date -r file \"+%Y-%m-%d %H:%M:%S\"`\" \\\n           --until \"`date \"+%Y-%m-%d %H:%M:%S\"`\" | grep -q -F \\\n           -e 'Out of memory' \\\n           -e 'invoked oom-killer: gfp_mask=0x' \\\n           -e ': page allocation failure: order:'"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "service",
      "MP Summary": "run a System V init script",
      "Top-3 Similar Questions": [
        "au_832464: Is it possible to check the BIOS version of my computer on Ubuntu?"
      ],
      "Top-3 Scripts": [
        "au_832464: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "test",
      "MP Summary": "check file types and compare values",
      "Top-3 Similar Questions": [
        "so_44620150: How do I check result of `npm run test` in bash conditional statement"
      ],
      "Top-3 Scripts": [
        "so_44620150: VALID=\"$(npm test | grep -o 'failing')\"\n\nVALID=\"$(npm test | grep -o '  0 passing')\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sha256sum",
      "MP Summary": "compute and check SHA256 message digest",
      "Top-3 Similar Questions": [
        "au_1311183: Do I need to check the integrity of a Ubuntu install?"
      ],
      "Top-3 Scripts": [
        "au_1311183: "
      ],
      "Explanations about Options": {}
    }
  ]
}