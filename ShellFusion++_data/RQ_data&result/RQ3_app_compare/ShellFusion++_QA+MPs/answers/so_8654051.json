{
  "Query": "How to compare two floating point numbers in Bash?",
  "Answers": [
    {
      "Command": "cmp",
      "MP Summary": "compare two files",
      "Top-3 Similar Questions": [
        "so_48491662: Comparing two version numbers in a shell script",
        "so_36270264: How to compare two large files in Linux?"
      ],
      "Top-3 Scripts": [
        "so_48491662: if cmp -s <(cut -d: -f2 infile) <(cut -d: -f2 infile | sort -V); then\n    echo 'FAILURE'\nelse\n    echo 'SUCCESS'\nfi",
        "so_36270264: $ cmp -l file1.txt file2.txt\n12 170 161\n18  67  61\n19  66  62"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "diff",
      "MP Summary": "compare two files",
      "Top-3 Similar Questions": [
        "so_36270264: How to compare two large files in Linux?"
      ],
      "Top-3 Scripts": [
        "so_36270264: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "bc",
      "MP Summary": "An arbitrary precision calculator language",
      "Top-3 Similar Questions": [
        "so_39799064: [: missing `]' error while comparing variables with floating point numbers in a bash script",
        "so_55595636: Comparing floating-point numbers in an `if` statement in bash",
        "so_29956696: Comparing float values in bash"
      ],
      "Top-3 Scripts": [
        "so_39799064: ",
        "so_55595636: ",
        "so_29956696: if [ $(echo \" 0.5 > $X \" | bc -l )==1 ]; then\n  echo grande\nfi\n\nif [ \"$(echo \" 0.5 > $X \" | bc -l )\" == 1 ]; then\n  echo grande\nfi"
      ],
      "Explanations about Options": {
        "-l": "Define the standard math library."
      }
    },
    {
      "Command": "date",
      "MP Summary": "print or set the system date and time",
      "Top-3 Similar Questions": [
        "so_52878320: Comparing two dates in Linux bash shell script",
        "au_1137981: Compare two dates in the shell"
      ],
      "Top-3 Scripts": [
        "so_52878320: ",
        "au_1137981: peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n000000\n\n$ peak_time=\"10:05:31\"\n$ peak_time=$(date -d \"$peak_time\" '+%H%M%S');\n$ echo $peak_time \n100531"
      ],
      "Explanations about Options": {
        "-d": "display time described by STRING, not 'now'"
      }
    },
    {
      "Command": "NF",
      "MP Summary": "awk and print a column (based on the name of the program, 1-9)",
      "Top-3 Similar Questions": [
        "so_20456610: unable to compare two floating point variables in awk?",
        "so_25894094: Compare two files in bash",
        "so_22596113: Comparing numbers in a column"
      ],
      "Top-3 Scripts": [
        "so_20456610: > weight=31.33\n> awk -v val=$weight '$NF > val' weight_chart.txt\njohny    12    35.45\njenny    16    38.23",
        "so_25894094: awk -F/ 'FNR==NR {a[$1];next} $NF in a {print $NF \": \" $(NF-1)}' tmp1.txt tmp2.txt\naaa.txt: test1\nbbb.txt: test2\nccc.txt: test1",
        "so_22596113: "
      ],
      "Explanations about Options": {}
    }
  ]
}