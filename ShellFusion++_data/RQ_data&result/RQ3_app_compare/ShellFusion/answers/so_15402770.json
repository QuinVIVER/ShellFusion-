{
    "Answers": [
        {
            "Command": "tr",
            "Explanations about Options": {},
            "MP Summary": "translate or delete characters",
            "Most Similar TLDR Script": "tr {{find_character}} {{replace_character}} < {{filename}}",
            "Most Similar TLDR Task": "Replace all occurrences of a character in a file, and print the result",
            "Top-3 Scripts": [
                "ul_90530: iconv -l | grep ISO |head -5 |tr '/' '-'",
                "so_35801134: tr '\\001' '|'",
                "ul_569007: tr '-' ' ' < file"
            ],
            "Top-3 Similar Questions": [
                "ul_90530: How to grep, then search and replace on the output?",
                "so_35801134: Replacing a delimiter",
                "ul_569007: need to replace a pattern in a file with spaces"
            ]
        },
        {
            "Command": "sed",
            "Explanations about Options": {
                "-i(M)": "edit files in place (makes backup if SUFFIX supplied)"
            },
            "MP Summary": "stream editor for filtering and transforming text",
            "Most Similar TLDR Script": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
            "Most Similar TLDR Task": "Replace only on lines matching the line pattern",
            "Top-3 Scripts": [
                "ul_90530: iconv -l | grep ISO |head -5 | sed 's/\\//-/g'\n# or, to avoid needing to escape the backslashes:\niconv -l | grep ISO |head -5 | sed 's#/#-#g'",
                "so_20781760: sed -i '/AB_/s//YZ_/g' *",
                "ul_373420: sed 's/old/new/'"
            ],
            "Top-3 Similar Questions": [
                "ul_90530: How to grep, then search and replace on the output?",
                "so_20781760: Replace string using grep and sed",
                "ul_373420: search and replace using grep (not sed)"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-H(M)": "Print the file name for each match. This is the default when there is more than\n one file to search.",
                "-P(M)": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file.",
                "-o(M)": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
            "Top-3 Scripts": [
                "ul_90530: iconv -l | grep ISO |head -5 |tr '/' '-'\n\niconv -l | grep ISO |head -5 | sed 's/\\//-/g'\n# or, to avoid needing to escape the backslashes:\niconv -l | grep ISO |head -5 | sed 's#/#-#g'",
                "so_7488905: find -type f | xargs grep foo",
                "so_23729211: sudo sed -i \"s/127.0.1.1/$(ifconfig | grep -oP 'inet addr:\\K(.*)?(?=  P-t-P)')/g\" /etc/hosts"
            ],
            "Top-3 Similar Questions": [
                "ul_90530: How to grep, then search and replace on the output?",
                "ul_373420: search and replace using grep (not sed)",
                "so_7488905: \"grep -R\" replacement?"
            ]
        },
        {
            "Command": "xargs",
            "Explanations about Options": {
                "-0(M)": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
                "-I(M)": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "MP Summary": "build and execute command lines from standard input",
            "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
            "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
            "Top-3 Scripts": [
                "so_7488905: find -type f | xargs grep foo",
                "ul_419517: grep -r --color -L \"class public interface\" * | xargs grep -l \"authenticate\"`\n\nxargs -0",
                "ul_244764: grep -l word * | xargs grep word2\n\ngrep -lZ word ./* | xargs -r0 grep word2\n\nxargs -0"
            ],
            "Top-3 Similar Questions": [
                "so_7488905: \"grep -R\" replacement?",
                "ul_419517: grep not match and match",
                "ul_244764: How to grep the result of a grep?"
            ]
        },
        {
            "Command": "uniq",
            "Explanations about Options": {
                "-c(M)": "prefix lines by the number of occurrences"
            },
            "MP Summary": "report or omit repeated lines",
            "Most Similar TLDR Script": "sort {{file}} | uniq -c",
            "Most Similar TLDR Task": "Display number of occurrences of each line along with that line",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_11536975: Using grep and sed to replace one string with another"
            ]
        }
    ],
    "Query": "How to grep and replace"
}