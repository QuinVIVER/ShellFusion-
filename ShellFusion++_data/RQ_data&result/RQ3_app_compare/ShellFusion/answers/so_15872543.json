{
    "Answers": [
        {
            "Command": "mysqldump",
            "Explanations about Options": {
                "--databases(M)": "Dump several databases. Normally, mysqldump treats the first name argument on the\n command line as a database name and following names as table names. With this option,\n it treats all name arguments as database names. CREATE DATABASE and USE statements\n are included in the output before each new database.\n This option may be used to dump the performance_schema database, which normally is not\n dumped even with the --all-databases option. (Also use the --skip-lock-tables option.)",
                "--routines(M)": "Include stored routines (procedures and functions) for the dumped databases in the\n output. This option requires the global SELECT privilege.\n The output generated by using --routines contains CREATE PROCEDURE and CREATE FUNCTION\n statements to create the routines.",
                "--user(M)": "The user name of the MySQL account to use for connecting to the server.",
                "-R(M)": "Include stored routines (procedures and functions) for the dumped databases in the\n output. This option requires the global SELECT privilege.\n The output generated by using --routines contains CREATE PROCEDURE and CREATE FUNCTION\n statements to create the routines.",
                "-d(M)": "Do not write any table row information (that is, do not dump table contents). This is\n useful if you want to dump only the CREATE TABLE statement for the table (for example,\n to create an empty copy of the table by loading the dump file).",
                "-e(M)": "Write INSERT statements using multiple-row syntax that includes several VALUES lists.\n This results in a smaller dump file and speeds up inserts when the file is reloaded.",
                "-h(M)": "Dump data from the MySQL server on the given host. The default host is localhost.",
                "-n(M)": "Suppress the CREATE DATABASE statements that are otherwise included in the output if\n the --databases or --all-databases option is given.",
                "-p(C)": " If you want to run it automatically you have to write the password next to the -p parameter.",
                "-r(M)": "Direct output to the named file. The result file is created and its previous contents\n overwritten, even if an error occurs while generating the dump.\n This option should be used on Windows to prevent newline \\n characters from being\n converted to \\r\\n carriage return/newline sequences.",
                "-t(M)": "Do not write CREATE TABLE statements that create each dumped table.\n Note\n This option does not exclude statements creating log file groups or tablespaces\n from mysqldump output; however, you can use the --no-tablespaces option for this\n purpose.",
                "-u(M)": "The user name of the MySQL account to use for connecting to the server."
            },
            "MP Summary": "a database backup program",
            "Most Similar TLDR Script": "mysqldump --user {{user}} --password --all-databases > {{path/to/file.sql}}",
            "Most Similar TLDR Task": "Backup all databases redirecting the output to a file (user will be prompted for a password)",
            "Top-3 Scripts": [
                "so_5836383: mysqldump --all-databases --routines -h <ip-address> -u <user> -p > dump.sql",
                "so_23668261: ssh -p $Port $Username@$Hostname << SSH\nIgnore=$(mysql --user=root --password=$Password -BNe \"SELECT CONCAT( TABLE_SCHEMA , '.' ,  TABLE_NAME ) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'rec%' ORDER BY CONCAT( TABLE_SCHEMA , '.' , TABLE_NAME );\" | awk '{ printf \" --ignore-table=%s\", \\$0 }')\nmysql --user=root --password=$Password -e \"SHOW DATABASES;\" | grep -Ev \"information_schema|mysql|performance_schema\" | xargs mysqldump --force --user=root --password=$Password \\$Ignore --databases | gzip > $Location/full.sql.gz",
                "so_40397675: mysqldump -uRemoteusername -pRemotepassword -h192.168.1.19 RemoteDB RemoteTable  --set-gtid-purged=OFF  | mysql -h192.168.1.35 -uLocalname -pLocalpassword   LocalDB"
            ],
            "Top-3 Similar Questions": [
                "so_5836383: Backing up a MySQL database remotely to a local machine with a shell command",
                "so_23668261: Script to import databases from a remote server",
                "so_40397675: How can I insert MySQL remote database table into local database table?"
            ]
        },
        {
            "Command": "mysql",
            "Explanations about Options": {
                "--skip-column-names(M)": "Do not write column names in results.",
                "-D(M)": "The database to use. This is useful primarily in an option file.",
                "-e(M)": "Execute the statement and quit. The default output format is like that produced with\n --batch. See Section 4.2.2.1, “Using Options on the Command Line”, for some examples.\n With this option, mysql does not use the history file.",
                "-h(M)": "Connect to the MySQL server on the given host.",
                "-t(M)": "Display output in table format. This is the default for interactive use, but can be\n used to produce table output in batch mode.",
                "-u(M)": "The user name of the MySQL account to use for connecting to the server."
            },
            "MP Summary": "the MySQL command-line client",
            "Most Similar TLDR Script": "mysql {{database_name}}",
            "Most Similar TLDR Task": "Connect to a database",
            "Top-3 Scripts": [
                "so_5809064: mysql -u user -p dbnane",
                "so_38018379: some_db=\"somedb\"\nisAnythingToProcess=$(mysql -uroot -proot -h REMOTE_IP -D$some_db -e \"$checkSearch\");",
                "so_47551109: CMD=\"ssh -p 12345 $HOST mysql -u$HOST -p$PASS --skip-column-names -e \\\"SELECT table_schema \\\"$DB\\\", sum(data_length + index_length)/1024/1024  FROM information_schema.TABLES WHERE table_schema='radius' GROUP BY table_schema;\\\"\""
            ],
            "Top-3 Similar Questions": [
                "so_5809064: How to access mysql database using shell script?",
                "so_38018379: Querying remote MySql database with bash",
                "so_47551109: ssh to remote Linux for mysql query command"
            ]
        },
        {
            "Command": "ssh",
            "Explanations about Options": {
                "-A(M)": "Enables forwarding of the authentication agent connection. This can also be\n specified on a per-host basis in a configuration file.",
                "-p(M)": "Port to connect to on the remote host. This can be specified on a per-host basis in\n the configuration file.",
                "-t(M)": "Force pseudo-terminal allocation. This can be used to execute arbitrary screen-\n based programs on a remote machine, which can be very useful, e.g. when implementing\n menu services. Multiple -t options force tty allocation, even if ssh has no local\n tty.",
                "-w(M)": "Requests tunnel device forwarding with the specified tun(4) devices between the\n client (local_tun) and the server (remote_tun)."
            },
            "MP Summary": "OpenSSH SSH client (remote login program)",
            "Most Similar TLDR Script": "ssh {{remote_host}} {{command -with -flags}}",
            "Most Similar TLDR Task": "Run a command on a remote server",
            "Top-3 Scripts": [
                "so_47818496: ssh -A $domainname@35.163.55.57 -e \"$sqlstatement\"\n\nssh -A $domainname@35.163.55.57 \"$sqlstatement\"",
                "so_23668261: ssh -p $Port $Username@$Hostname << SSH\nIgnore=$(mysql --user=root --password=$Password -BNe \"SELECT CONCAT( TABLE_SCHEMA , '.' ,  TABLE_NAME ) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME LIKE 'rec%' ORDER BY CONCAT( TABLE_SCHEMA , '.' , TABLE_NAME );\" | awk '{ printf \" --ignore-table=%s\", \\$0 }')\nmysql --user=root --password=$Password -e \"SHOW DATABASES;\" | grep -Ev \"information_schema|mysql|performance_schema\" | xargs mysqldump --force --user=root --password=$Password \\$Ignore --databases | gzip > $Location/full.sql.gz",
                "so_49577753: ssh root@host \"mysql database < filename.sql\"\n\nssh root@host \"mysql database\" < filename.sql"
            ],
            "Top-3 Similar Questions": [
                "so_47818496: Run Remote Mysql Command with Shell Script",
                "so_23668261: Script to import databases from a remote server",
                "so_12905077: Create mySQL database through ssh in a bash script"
            ]
        },
        {
            "Command": "sudo",
            "Explanations about Options": {},
            "MP Summary": "execute a command as another user",
            "Most Similar TLDR Script": "sudo -u {{user}} -g {{group}} {{id -a}}",
            "Most Similar TLDR Task": "Run a command as another user and/or group",
            "Top-3 Scripts": [
                "au_398006: sudo apt-get install vsftpd\n\nsudo nano /etc/vsftpd.conf\n\nsudo /etc/init.d/vsftpd restart\n\nsudo apt-get install gftp",
                "au_387090: sudo /etc/init.d/mysql restart"
            ],
            "Top-3 Similar Questions": [
                "au_398006: what is the command to connect a database remotely from other PC",
                "au_387090: How to allow all people to access mysql database?"
            ]
        },
        {
            "Command": "scp",
            "Explanations about Options": {},
            "MP Summary": "secure copy (remote file copy program)",
            "Most Similar TLDR Script": "scp {{path/to/local_file}} {{remote_host}}:{{path/to/remote_file}}",
            "Most Similar TLDR Task": "Copy a local file to a remote host",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_12905077: Create mySQL database through ssh in a bash script"
            ]
        }
    ],
    "Query": "Access mysql remote database from command line"
}