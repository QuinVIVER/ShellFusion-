{
    "Answers": [
        {
            "Command": "touch",
            "Explanations about Options": {
                "-r(M)": "use this file's times instead of current time",
                "-t(M)": "STAMP\n use [[CC]YY]MMDDhhmm[.ss] instead of current time"
            },
            "MP Summary": "change file timestamps",
            "Most Similar TLDR Script": "touch -r {{filename}} {{filename2}}",
            "Most Similar TLDR Task": "Use the times from a file to set the times on a second file",
            "Top-3 Scripts": [
                "su_236484: touch file{001..010}.txt",
                "ul_29245: touch -t 201112220000 start\ntouch -t 201112240000 stop\nfind . -newer start \\! -newer stop"
            ],
            "Top-3 Similar Questions": [
                "su_236484: list files numbered in a specific range",
                "ul_29245: How to list files that were changed in a certain range of time?"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-newer(M)": "Time of the last data modification of the current file is more recent than that of\n the last data modification of the reference file. If reference is a symbolic link\n and the -H option or the -L option is in effect, then the time of the last data\n modification of the file it points to is always used.",
                "-regextype(M)": "Changes the regular expression syntax understood by -regex and -iregex tests which\n occur later on the command line. To see which regular expression types are known,\n use -regextype help. The Texinfo documentation (see SEE ALSO) explains the meaning\n of and differences between the various types of regular expression.",
                "-size(M)": "File uses n units of space, rounding up. The following suffixes can be used:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -size {{+500k}} -size {{-10M}}",
            "Most Similar TLDR Task": "Find files matching a given size range",
            "Top-3 Scripts": [
                "so_51893233: find <path> -regextype egrep -regex '.*file([0-5][0-9]|6[0-7])\\.txt'",
                "ul_29245: touch -t 201112220000 start\ntouch -t 201112240000 stop\nfind . -newer start \\! -newer stop"
            ],
            "Top-3 Similar Questions": [
                "so_51893233: 'find' files containing an integer in a specified range (in bash)",
                "so_62466326: find files modified within given time range",
                "ul_29245: How to list files that were changed in a certain range of time?"
            ]
        },
        {
            "Command": "file",
            "Explanations about Options": {},
            "MP Summary": "determine file type",
            "Most Similar TLDR Script": "file {{filename}}",
            "Most Similar TLDR Task": "Give a description of the type of the specified file. Works fine for files with no file extension",
            "Top-3 Scripts": [
                "au_1038429: uncompress codg0010.17i.Z # This archive has only 1 file in it named codg0010.17i. \nsed -ni '/START OF TEC MAP/,/END OF TEC MAP/p' codg0010.17i\n\nsed -n '/WORD1/,/WORD2/p' /path/to/file\n\n/path/to/file",
                "su_236484: for file in file{18..31}.txt\n\ntouch file{001..010}.txt\n\nfor file in file{001..010}.txt; do echo \"$file\"; done",
                "ul_114928: start cmd:> sed -n -e /12:00:03/,/12:00:09/p file\n01-02-1988     12:00:03    I start\n01-02-1988     12:00:04    I start \n01-02-1988     12:00:05    I start\n01-02-1988     12:00:06    I start \n01-02-1988     12:00:07    I start\n01-02-1988     12:00:08    I start \n01-02-1988     12:00:09    I start\n\nawk -v starttime=\"12:00:03\" -v stoptime=\"12:00:09\" \\\n  'BEGIN {FS=\":\"; $0=starttime; startts=$1*3600+$2*60+$3; '\\\n  '$0=stoptime; stopts=$1*3600+$2*60+$3; FS=\" \";}; ' \\\n  '{line=$0; FS=\":\"; $0=$2; secs=$1*3600+$2*60+$3; if (secs>stopts) exit; '\\\n  'if (secs>=startts) print line; FS=\" \";}' file\n\nawk -v starttime=\"12:00:03\" -v stoptime=\"12:00:09\" \\\n  '{line=$0; if ($2>stoptime) exit; '\\\n  'if ($2>=starttime) print line; FS=\" \";}' file"
            ],
            "Top-3 Similar Questions": [
                "au_1038429: How can I extract data from UNIX file?",
                "su_236484: list files numbered in a specific range",
                "ul_114928: comparing user given time for log file time"
            ]
        },
        {
            "Command": "column",
            "Explanations about Options": {
                "-t(M)": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays."
            },
            "MP Summary": "columnate lists",
            "Most Similar TLDR Script": "printf \"header1,header2\\nbar,foo\\n\" | column -t -s{{,}}",
            "Most Similar TLDR Task": "Specify column delimiter character for the -t option (e.g. \",\" for csv); default is whitespace",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_61378790: Log file data extraction into csv file"
            ]
        },
        {
            "Command": "wc",
            "Explanations about Options": {
                "-l(M)": "print the newline counts"
            },
            "MP Summary": "print newline, word, and byte counts for each file",
            "Most Similar TLDR Script": "wc -l {{file}}",
            "Most Similar TLDR Task": "Count lines in file",
            "Top-3 Scripts": [
                "so_57403282: ls -l *.lu | grep -E '15:[2-3][0-9]|15:1[7-9]|15:4[0-7]' | wc -l\n\nls -l *.lu | grep '15:[2-3][0-9]\\|15:1[7-9]\\|15:4[0-7]' | wc -l\n\nls -l *.lu 2> /dev/null | grep '15:[2-3][0-9]\\|15:1[7-9]\\|15:4[0-7]' | wc -l"
            ],
            "Top-3 Similar Questions": [
                "so_57403282: Count the number of files that modified in specif range of time"
            ]
        }
    ],
    "Query": "Extract data from log file in specified range of time"
}