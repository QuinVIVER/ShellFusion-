{
    "Answers": [
        {
            "Command": "tr",
            "Explanations about Options": {
                "-d(M)": "delete characters in SET1, do not translate"
            },
            "MP Summary": "translate or delete characters",
            "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
            "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
            "Top-3 Scripts": [
                "so_38562710: tr -d '\\000\\200-\\377' <file >file.new"
            ],
            "Top-3 Similar Questions": [
                "so_38562710: special character removal 'sed'"
            ]
        },
        {
            "Command": "echo",
            "Explanations about Options": {
                "-e(C)": "When the \"sh -c\" shell interprets the string, it sees \"sed -e 's/${window.location.hostname}:8000/localhost:6301/g'\" and the \"$\" is within single quotes and therefore not special.",
                "-e(M)": "enable interpretation of backslash escapes"
            },
            "MP Summary": "display a line of text",
            "Most Similar TLDR Script": "echo -e \"{{Column 1\\tColumn 2}}\"",
            "Most Similar TLDR Task": "Enable interpretation of backslash escapes (special characters)",
            "Top-3 Scripts": [
                "so_28914002: date=$(date \"+%d/%m/%Y %H:%M\")\necho \"DATE\" | sed -e \"s|\\bDATE|${date}|g\"",
                "au_1064018: echo 'Aug 09 19:46:15 inspire NetworkManager[747]: <info>  [1533861975.9201] dhcp4 (wlp3s0b1): state changed unknown' | \n  sed 's/.*] //'\ndhcp4 (wlp3s0b1): state changed unknown",
                "so_65886855: $ echo 'http://${window.location.hostname}:8000/' |\n> /opt/gnu/bin/sed -e 's/${window.location.hostname}:8000/localhost:6301/g'\nhttp://localhost:6301/\n$\n\n$ echo 'http://${window.location.hostname}:8000/' |\n> sh -c \"sed -e 's/\\${window.location.hostname}:8000/localhost:6301/g'\"\nhttp://localhost:6301/\n$\n\n$ echo 'http://${window.location.hostname}:8000/' |\n> sh -c 'sed -e '\\''s/${window.location.hostname}:8000/localhost:6301/g'\\'''\nhttp://localhost:6301/\n$ echo 'http://${window.location.hostname}:8000/' |\n> sh -c 'sed -e '\\''s/${window.location.hostname}:8000/localhost:6301/g'\\'\nhttp://localhost:6301/\n$"
            ],
            "Top-3 Similar Questions": [
                "so_28914002: sed replace with special characters",
                "au_1064018: how can i use sed to remove a ] special character",
                "so_65886855: Use sed to replace multiple special characters"
            ]
        },
        {
            "Command": "cat",
            "Explanations about Options": {
                "-e(M)": "equivalent to -vE",
                "-t(M)": "equivalent to -vT",
                "-v(M)": "use ^ and M- notation, except for LFD and TAB"
            },
            "MP Summary": "concatenate files and print on the standard output",
            "Most Similar TLDR Script": "cat -v -t -e {{file}}",
            "Most Similar TLDR Task": "Display non-printable and whitespace characters (with `M-` prefix if non-ASCII)",
            "Top-3 Scripts": [
                "so_54268722: cat Input_file\nsingh is king bla bla 4328\"  +  base64_encode\\(\"\\x86\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x25\\x07\\x2E\\x01\\x02\\x03\\x04\\xBB\\x01\\x62\\x1A\\x01\\x01",
                "so_34566907: cat newurl.txt | sed 's/\\&/\\\\\\\\&/g' | xargs  -I {} sed -r -- 's!url[^\"[:space:]]+!{}!g' oldurl.txt\n\n$ cat newurl.txt | sed 's/\\&/\\\\\\\\&/g' | xargs  -I {} sed -r -i -- 's!url[^\"[:space:]]+!{}!g' oldurl.txt",
                "so_48308267: $ cat 48308267\n\"homepage\": \"http://localhost:123/\",<br>\n\"proxy\": \"http://localhost:123\",\n$ sed -i '/^[[:blank:]]*\"homepage\"/s#:123/#:123/newpath#' 48308267\n# the -i option writes the changes to the file itself\n$ cat 48308267\n\"homepage\": \"http://localhost:123/newpath\",<br>\n\"proxy\": \"http://localhost:123\",\n\n$ cat 48308267\n\"homepage\": \"http://localhost:123/\",<br>\n\"proxy\": \"http://localhost:123\",\n$ sed -iE '/^[[:blank:]]*\"homepage\"/s#(:[[:digit:]]+/)#\\1newpath#' 48308267\n$ cat 48308267\n\"homepage\": \"http://localhost:123/newpath\",<br>\n\"proxy\": \"http://localhost:123\","
            ],
            "Top-3 Similar Questions": [
                "so_54268722: sed replace string with numbers special characters",
                "so_24192611: Replace Text With Spaces & Special Characters",
                "so_34566907: How to replace string or url containing special character(&) with sed?"
            ]
        },
        {
            "Command": "xargs",
            "Explanations about Options": {
                "-I(M)": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1."
            },
            "MP Summary": "build and execute command lines from standard input",
            "Most Similar TLDR Script": "{{arguments_source}} | xargs -I _ {{command}} _ {{optional_extra_arguments}}",
            "Most Similar TLDR Task": "Execute the command once for each input line, replacing any occurrences of the placeholder (here marked as `_`) with the input line",
            "Top-3 Scripts": [
                "so_34566907: cat newurl.txt | sed 's/\\&/\\\\\\\\&/g' | xargs  -I {} sed -r -- 's!url[^\"[:space:]]+!{}!g' oldurl.txt\n\n$ cat newurl.txt | sed 's/\\&/\\\\\\\\&/g' | xargs  -I {} sed -r -i -- 's!url[^\"[:space:]]+!{}!g' oldurl.txt"
            ],
            "Top-3 Similar Questions": [
                "so_34566907: How to replace string or url containing special character(&) with sed?"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file.",
                "-v(M)": "Invert the sense of matching, to select non-matching lines."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -v {{search_pattern}}",
            "Most Similar TLDR Task": "Invert match for excluding specific strings",
            "Top-3 Scripts": [
                "so_33276225: grep -ne '^\\*.*|' \"${filename}\""
            ],
            "Top-3 Similar Questions": [
                "so_33276225: search a line that contain a special character using sed or awk"
            ]
        }
    ],
    "Query": "Using sed to replace special characters"
}