{
    "Answers": [
        {
            "Command": "ln",
            "Explanations about Options": {
                "-r(C)": "For example, \"ln -r -s FOO/apache2 LALA/apache2\" would work correctly.",
                "-r(M)": "create symbolic links relative to link location",
                "-s(M)": "make symbolic links instead of hard links"
            },
            "MP Summary": "make links between files",
            "Most Similar TLDR Script": "ln -s {{path/to/file_or_directory}} {{path/to/symlink}}",
            "Most Similar TLDR Task": "Create a symbolic link to a file or directory",
            "Top-3 Scripts": [
                "su_426162: ln -s\n\nln -r -s FOO/apache2 LALA/apache2",
                "so_27347465: ln -s /usr/local/var /var/run",
                "so_51474495: #!/usr/bin/env bash \n\nwhile IFS= read -r file; do\n    [[ -e /some/path/$file ]] && ln -s \"/some/path/$file\" /dest/path\ndone < file_list"
            ],
            "Top-3 Similar Questions": [
                "su_426162: Use a symbolic link to create a new symbolic link",
                "so_27347465: Create symbolic link of a folder",
                "so_51474495: Create symbolic links from list of files"
            ]
        },
        {
            "Command": "link",
            "Explanations about Options": {},
            "MP Summary": "call the link function to create a link to a file",
            "Most Similar TLDR Script": "link {{path/to/existing_file}} {{path/to/new_file}}",
            "Most Similar TLDR Task": "Create a hard link from a new file to an existing file",
            "Top-3 Scripts": [
                "su_426162: <i>link name:                link target:    absolute target:</i>\n\"<b>/somedir/LALA/</b>apache2\" + \"FOO/apache2\" = \"<b>/somedir/LALA/</b>FOO/apache2\"\n\n<i>link name:                link target:       absolute target:</i>\n\"<b>/somedir/LALA/</b>apache2\" + \"../FOO/apache2\" = \"<b>/somedir/LALA/</b>../FOO/apache2\"\n                                           â†’ \"/somedir/FOO/apache2\"",
                "ul_358690: $ ln -s /etc/shadow foo\n$ file foo\nfoo: symbolic link to /etc/shadow\n$ cat foo\ncat: foo: Permission denied\n\n$ ln -s /etc/nonexistent bar\n$ file bar\nbar: broken symbolic link to /etc/nonexistent",
                "su_335466: ln -s $(pwd)/F /full/path/to/A/link"
            ],
            "Top-3 Similar Questions": [
                "su_426162: Use a symbolic link to create a new symbolic link",
                "ul_358690: Can I create a symbolic link to a file I can't access?",
                "su_335466: How to create a symbolic link in an other directory?"
            ]
        },
        {
            "Command": "cp",
            "Explanations about Options": {
                "--remove-destination(M)": "remove each existing destination file before attempting to open it (contrast with\n --force)",
                "-L(C)": "When the -L option is in effect, the -type predicate will always match against the type of the file that a symbolic link points to rather than the link itself (unless the symbolic link is broken). Using -L causes the -lname and -ilname predicates always to return false. If -L is in effect and find discovers a symbolic link to a subdirectory during its search, the subdirectory pointed to by the symbolic link will be searched. From \"man find\", ubuntu manpages version: .   -L Follow symbolic links. So \"find -L /usr/hdp/2.6.3.0-235 -type f -name \"*.jar\" -exec cp {} /tmp/jar263 \\;\" should do the trick.",
                "-L(M)": "always follow symbolic links in SOURCE"
            },
            "MP Summary": "copy files and directories",
            "Most Similar TLDR Script": "cp -L {{link}} {{path/to/target_directory}}",
            "Most Similar TLDR Task": "Dereference symbolic links before copying",
            "Top-3 Scripts": [
                "so_10738690: cp(1)",
                "so_21238570: cp --remove-destination \"$(readlink file1)\" file1",
                "ul_435295: find -L /usr/hdp/2.6.3.0-235 -type f -name \"*.jar\" -exec cp {} /tmp/jar263 \\;"
            ],
            "Top-3 Similar Questions": [
                "so_10738690: How to copy contents from a directory and not symbolic link?",
                "so_21238570: Copy symbolic link to same file name",
                "ul_435295: Question related to symbolic links and copying"
            ]
        },
        {
            "Command": "readlink",
            "Explanations about Options": {
                "-e(M)": "canonicalize by following every symlink in every component of the given name\n recursively, all components must exist",
                "-f(M)": "canonicalize by following every symlink in every component of the given name\n recursively; all but the last component must exist"
            },
            "MP Summary": "print resolved symbolic links or canonical file names",
            "Most Similar TLDR Script": "readlink {{filename}}",
            "Most Similar TLDR Task": "Get the actual file to which the symlink points",
            "Top-3 Scripts": [
                "so_3862179: ln -s \"$(readlink -e \"$2\")\" \"$1/link\"",
                "so_21238570: cp --remove-destination \"$(readlink file1)\" file1",
                "so_17826143: readlink -f A"
            ],
            "Top-3 Similar Questions": [
                "so_3862179: Creating a symbolic link in a bash script in a different folder",
                "so_21238570: Copy symbolic link to same file name",
                "su_303559: Replace Symbolic Links with Files"
            ]
        },
        {
            "Command": "mkdir",
            "Explanations about Options": {
                "-p(C)": "See above Assuming the project name can be extracted thinking positionally from your examples (meaning not only does the project name follows a strict 7-character format, but what precedes it in the outgoing file also does): .    \"mkdir -p /projects/$i/incoming/\" creates directory \"/projects/012-dfd/incoming/\" if \"i = 012-dfd\",  \"ln -s /incoming/foo /projects/$i/incoming/foo\" creates a symbolic link from the latter argument, to the preexisting, former file \"/incoming/foo\".",
                "-p(M)": "no error if existing, make parent directories as needed"
            },
            "MP Summary": "make directories",
            "Most Similar TLDR Script": "mkdir {{directory}}",
            "Most Similar TLDR Task": "Create a directory in current directory or given path",
            "Top-3 Scripts": [
                "so_8645329: mkdir -p /projects/$i/incoming/"
            ],
            "Top-3 Similar Questions": [
                "so_8645329: linux server create symbolic links from filenames"
            ]
        }
    ],
    "Query": "Help with creating a symbolic link"
}