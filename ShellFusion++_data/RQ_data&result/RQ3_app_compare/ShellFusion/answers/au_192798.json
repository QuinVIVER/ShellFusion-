{
    "Answers": [
        {
            "Command": "pgrep",
            "Explanations about Options": {
                "-P(C)": "If your platform has the nonstandard \"pgrep\" utility (comes with many Linux distros and BSD/macOS platforms), use: \"pgrep -P $!\".",
                "-P(M)": "Only match processes whose parent process ID is listed.",
                "-f(C)": "Invoke with \"time php -d max_execution_time=5 -f sleep3.php\".",
                "-f(M)": "The pattern is normally only matched against the process name. When -f is set, the\n full command line is used."
            },
            "MP Summary": "look up or signal processes based on name and other attributes",
            "Most Similar TLDR Script": "pgrep {{process_name}}",
            "Most Similar TLDR Task": "Return PIDs of any running processes with a matching command string",
            "Top-3 Scripts": [
                "so_44248932: pgrep -P $!\n\n# Send the timed `cp` command to the background with a trailing `&`\n{ time cp \"$PWD/my_file\" \"$PWD/new_file\"; } 2> my_log.log &\n\n# Get the `cp` comand's PID via its parent PID, $!\ncpPid=$(pgrep -P $!)",
                "so_7925951: pgrep -f raj | xargs kill\n\npgrep -f raj | xargs ps",
                "ul_87753: kill -USR1 $(pgrep sleep)"
            ],
            "Top-3 Similar Questions": [
                "so_44248932: Get PID of a timed process, along with the output of time",
                "so_7925951: killing the process with pid using a single line",
                "ul_87753: Get return value of process by PID"
            ]
        },
        {
            "Command": "ps",
            "Explanations about Options": {
                "-e(M)": "Select all processes. Identical to -A.",
                "-f(M)": "Do full-format listing. This option can be combined with many other UNIX-style\n options to add additional columns. It also causes the command arguments to be\n printed. When used with -L, the NLWP (number of threads) and LWP (thread ID)\n columns will be added. See the c option, the format keyword args, and the format\n keyword comm.",
                "-o(C)": "Otherwise, use the following POSIX-compliant approach: \"ps -o pid=,ppid= | awk -v ppid=$! '$2 == ppid { print $1 }'\".",
                "-p(M)": "Select by PID. This selects the processes whose process ID numbers appear in\n pidlist. Identical to p and --pid."
            },
            "MP Summary": "report a snapshot of the current processes.",
            "Most Similar TLDR Script": "ps -o ppid= -p {{pid}}",
            "Most Similar TLDR Task": "Get the parent pid of a process",
            "Top-3 Scripts": [
                "so_17440585: ps axf | grep <process name> | grep -v grep | awk '{print \"kill -9 \" $1}'\n\nps axf | grep <process name> | grep -v grep | awk '{print \"kill -9 \" $1}' | sh",
                "so_44248932: ps -o pid=,ppid= | awk -v ppid=$! '$2 == ppid { print $1 }'",
                "so_7925951: pgrep -f raj | xargs ps\n\nps -ef | grep raj | awk '{print $2}' | xargs kill"
            ],
            "Top-3 Similar Questions": [
                "so_17440585: How to get PID of process by specifying process name and store it in a variable to use further?",
                "so_44248932: Get PID of a timed process, along with the output of time",
                "so_7925951: killing the process with pid using a single line"
            ]
        },
        {
            "Command": "pidof",
            "Explanations about Options": {},
            "MP Summary": "find the process ID of a running program.",
            "Most Similar TLDR Script": "kill \"$(pidof {{name}})\"",
            "Most Similar TLDR Task": "Kill all processes with given name",
            "Top-3 Scripts": [
                "ul_193575: pidof avconv | tr ' ' '\\n'",
                "so_38634575: $ pidof cron\n22434"
            ],
            "Top-3 Similar Questions": [
                "ul_193575: Getting the pid's of a program line by line",
                "so_38634575: how to extract the PID of a process by command line"
            ]
        },
        {
            "Command": "pstree",
            "Explanations about Options": {
                "-p(M)": "Show PIDs. PIDs are shown as decimal numbers in parentheses after each process\n name. -p implicitly disables compaction."
            },
            "MP Summary": "display a tree of processes",
            "Most Similar TLDR Script": "pstree -p",
            "Most Similar TLDR Task": "Display a tree of processes with PIDs",
            "Top-3 Scripts": [
                "so_42675166: run_process &\npid=${!}\npstree -p \"${pid}\"\nwait # wait for run_process to finish"
            ],
            "Top-3 Similar Questions": [
                "so_42675166: PID of all child processes of a command"
            ]
        },
        {
            "Command": "fuser",
            "Explanations about Options": {},
            "MP Summary": "identify processes using files or sockets",
            "Most Similar TLDR Script": "fuser --verbose {{path/to/file_or_directory}}",
            "Most Similar TLDR Task": "Show more fields (`USER`, `PID`, `ACCESS` and `COMMAND`)",
            "Top-3 Scripts": [
                "so_23154547: fuser - identify processes using files or sockets\n\nfuser filename"
            ],
            "Top-3 Similar Questions": [
                "so_23154547: Get history command of a process"
            ]
        }
    ],
    "Query": "Is it possible to read the output from any process using its PID?"
}