{
    "Answers": [
        {
            "Command": "shuf",
            "Explanations about Options": {
                "-i(M)": "treat each number LO through HI as an input line",
                "-n(M)": "output at most COUNT lines"
            },
            "MP Summary": "generate random permutations",
            "Most Similar TLDR Script": "shuf -i {{1-10}}",
            "Most Similar TLDR Task": "Generate random numbers in range",
            "Top-3 Scripts": [
                "ul_430056: shuf file | xargs wget\n\nman 1 shuf\n\nshuf file | while read url; do\n    wget --user-agent=\"$(shuf -n1 uas)\" \"$url\"\ndone",
                "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(printf %s\\\\n 1 2 4 5 6 7 9)\n\nshuf -n 1 <(printf %s\\\\n 1 2 {4..7} 9)\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)",
                "so_46943836: $ seq 48 | shuf | head -6\n\n\n18\n10\n17\n3\n11\n6\n\nshuf -i 1-48 -n 6\n\ndeclare -a randarray\nreadarray randarray < <(seq 48 | shuf | head -6)"
            ],
            "Top-3 Similar Questions": [
                "ul_430056: Generate random number after value in bash",
                "so_54554364: Generate random number except values in bash",
                "so_46943836: Generate random numbers without collisions"
            ]
        },
        {
            "Command": "wc",
            "Explanations about Options": {
                "-l(M)": "print the newline counts",
                "-w(M)": "print the word counts"
            },
            "MP Summary": "print newline, word, and byte counts for each file",
            "Most Similar TLDR Script": "wc -w {{file}}",
            "Most Similar TLDR Task": "Count words in file",
            "Top-3 Scripts": [
                "so_25613429: wc -l"
            ],
            "Top-3 Similar Questions": [
                "so_36146465: Bash script - Generating random integers and writing to file",
                "so_25613429: Generate ID number from a name in bash"
            ]
        },
        {
            "Command": "strings",
            "Explanations about Options": {},
            "MP Summary": "print the strings of printable characters in files.",
            "Most Similar TLDR Script": "strings {{file}}",
            "Most Similar TLDR Task": "Print all strings in a binary",
            "Top-3 Scripts": [
                "su_1376374: man 1 strings"
            ],
            "Top-3 Similar Questions": [
                "so_62005971: Generate strings of varying in boundaries with bash script",
                "su_1376374: using urandom to generate random strings takes forever"
            ]
        },
        {
            "Command": "nl",
            "Explanations about Options": {
                "-b(M)": "use STYLE for numbering body lines"
            },
            "MP Summary": "number lines of files",
            "Most Similar TLDR Script": "nl -b a {{file}}",
            "Most Similar TLDR Task": "Number all lines including blank lines",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "ul_6549: How can I randomize file names in a given directory?"
            ]
        },
        {
            "Command": "cut",
            "Explanations about Options": {
                "-f(M)": "select only these fields; also print any line that contains no delimiter\n character, unless the -s option is specified"
            },
            "MP Summary": "remove sections from each line of files",
            "Most Similar TLDR Script": "cut -d'{{ }}' -f{{3-}}",
            "Most Similar TLDR Task": "Cut out the fields 3 through to the end of each line, using a space as a delimiter",
            "Top-3 Scripts": [
                "so_41193146: cat /dev/urandom | xxd -b | cut -d\" \" -f 2-7 | tr \"\\n\" \" \"\n\ncat /dev/urandom | xxd -b | head |  cut -d\" \" -f 2-7 | tr -d \"\\n \"\n1000110001000101011111000010011011011111111001000000011000000100111101000001110110011011000000001101111111011000000100101001001110110001111000010100100100010110110000100111111110111011111100101000011000010010111010010001001001111000010101000110010010011011110000000011100110000000100111010001110000000011001011010101111001"
            ],
            "Top-3 Similar Questions": [
                "so_41193146: Optimised random number generation in bash"
            ]
        }
    ],
    "Query": "How to generate a random string?"
}