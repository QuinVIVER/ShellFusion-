{
    "Answers": [
        {
            "Command": "diff",
            "Explanations about Options": {},
            "MP Summary": "compare two files",
            "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
            "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
            "Top-3 Scripts": [
                "so_34582665: diff file1.txt file2.txt"
            ],
            "Top-3 Similar Questions": [
                "so_34582665: Bash script to compare two text files"
            ]
        },
        {
            "Command": "comm",
            "Explanations about Options": {},
            "MP Summary": "select or reject lines common to two files",
            "Most Similar TLDR Script": "comm {{file1}} {{file2}}",
            "Most Similar TLDR Task": "Produce three tab-separated columns: lines only in first file, lines only in second file and common lines",
            "Top-3 Scripts": [
                "so_27690630: sort < file1 > fileresult\nfor i in {2..204}; do\n    comm -12 fileresult <(sort < file$i) > fileresult.tmp\n    mv fileresult.tmp fileresult\ndone",
                "so_28903613: array1=(0 1 2 3 4 5 6 7 8 9 10 11 12)\narray2=(0 1 3 4 6 7 10 12)\n\ncomm -23 <(printf \"%s\\n\" \"${array1[@]}\" | sort) <(printf \"%s\\n\" \"${array2[@]}\" | sort) | sort -n\n\n2\n5\n8\n9\n11"
            ],
            "Top-3 Similar Questions": [
                "so_27690630: Bash command to compare more than two files",
                "so_28903613: shell script compare two array of number"
            ]
        },
        {
            "Command": "uniq",
            "Explanations about Options": {
                "-u(M)": "only print unique lines"
            },
            "MP Summary": "report or omit repeated lines",
            "Most Similar TLDR Script": "sort {{file}} | uniq -u",
            "Most Similar TLDR Task": "Display only unique lines",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_64164984: Comparing two string arrays in Bash and getting the difference"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-H(M)": "Print the file name for each match. This is the default when there is more than\n one file to search.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
            "Top-3 Scripts": [
                "ul_96458: /bin/grep",
                "so_22631415: echo \"abc-vcu def\" | grep -F -w \"abc.vcu\"\n\nman grep",
                "ul_83254: while read line do\n    grep \"^$line$\" file2.txt >>matches.txt\ndone < file1.txt"
            ],
            "Top-3 Similar Questions": [
                "ul_96458: Bash : compare two strings with space",
                "so_22631415: compare two strings using grep",
                "ul_83254: Comparing two files in a script"
            ]
        },
        {
            "Command": "wc",
            "Explanations about Options": {
                "-w(M)": "print the word counts"
            },
            "MP Summary": "print newline, word, and byte counts for each file",
            "Most Similar TLDR Script": "wc -w {{file}}",
            "Most Similar TLDR Task": "Count words in file",
            "Top-3 Scripts": [
                "so_50895414: if [[ $(pgrep -f \"$DAEMON\" | wc -l) -eq 0 ]]; then"
            ],
            "Top-3 Similar Questions": [
                "so_50895414: Compare 2 strings"
            ]
        }
    ],
    "Query": "Comparing two strings in Bash"
}