{
    "Answers": [
        {
            "Command": "test",
            "Explanations about Options": {
                "-e(M)": "FILE\n FILE exists"
            },
            "MP Summary": "check file types and compare values",
            "Most Similar TLDR Script": "test -e {{filename}}",
            "Most Similar TLDR Task": "Test if file exists",
            "Top-3 Scripts": [
                "so_30992072: man test"
            ],
            "Top-3 Similar Questions": [
                "so_59897745: checking if a string exists in an array of strings in bash",
                "so_30992072: How do I check whether a file or file directory exist in bash?",
                "so_14681391: shell create new directory and check whether it exists"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-mtime(M)": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
                "-n(M)": "for less than n ,",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-not(M)": "Same as ! expr, but not POSIX compliant.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
            "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
            "Top-3 Scripts": [
                "ul_19056: find some/dir \\\n    -exec grep -q \"replace me\" {} \\; \\\n    -exec cp some/new/filename.php {} \\;",
                "so_62267714: find . -type f -exec grep -L \"finished without error\" {} \\;",
                "so_13930501: find . -type f -name '*20121218*' -exec fgrep -l \"MY:STRING\" {} \\;\n\n$ find . -type f -mtime -18"
            ],
            "Top-3 Similar Questions": [
                "ul_19056: List all files containing a specific string",
                "so_62267714: bash check if the outputs (.txts) in multiple directories contained certain string",
                "so_13930501: How to search for a string in files with name containing a specific string in linux?"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-F(M)": "Interpret PATTERNS as fixed strings, not regular expressions.",
                "-q(M)": "Quiet; do not write anything to standard output. Exit immediately with zero status\n if any match is found, even if an error was detected. Also see the -s or\n --no-messages option.",
                "-v(M)": "Invert the sense of matching, to select non-matching lines."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -v {{search_pattern}}",
            "Most Similar TLDR Task": "Invert match for excluding specific strings",
            "Top-3 Scripts": [
                "so_50240872: if (( $(grep -c -- \"LineString\" \"$file\") >= 2 )); then\n  # your logic\nfi\n\n#!/bin/bash\nshopt -s nullglob # make glob expand to nothing if there are no matching files\nfor file in *; do\n    [[ -f $file ]] || continue\n    if (( $(grep -c -- \"LineString\" \"$file\") >= 2 )); then\n      # your logic\n    fi\ndone\n\ngrep -cm 2\n\n#!/bin/bash\nshopt -s nullglob\nfor file in *; do\n    [[ -f $file ]] || continue\n    if (( $(grep -cm 2 -- \"LineString\" \"$file\") >= 2 )); then\n      # your logic\n    fi\ndone",
                "so_64358254: cd $inputDir/$reviewDir\nls | grep \"RDR_Config_Summary\" > /dev/null 2>&1\n[ $? -ne 0 ] && echo -e \"\\nError: RDR Config Summary file was not found\\n\" && exit 1",
                "so_17486005: Folder_name=/newfolder/xxx\necho \"enter keyword\"\nread string\nif grep -q -F \"$string\" \"$Folder_name\"/*\nthen echo yes\nelse echo no\nfi"
            ],
            "Top-3 Similar Questions": [
                "so_50240872: Check all files in directory whether they contain specific string two or more times",
                "so_64358254: How to check if a file with a certain string in its filename exists in bash?",
                "so_17486005: How to check whether any file in the directory has a given string"
            ]
        },
        {
            "Command": "fgrep",
            "Explanations about Options": {
                "-l(M)": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "fgrep -c {{search_string}} {{path/to/file}}",
            "Most Similar TLDR Task": "Count the number of lines that match the given string in a file",
            "Top-3 Scripts": [
                "so_13930501: find . -type f -name '*20121218*' -exec fgrep -l \"MY:STRING\" {} \\;"
            ],
            "Top-3 Similar Questions": [
                "so_13930501: How to search for a string in files with name containing a specific string in linux?"
            ]
        },
        {
            "Command": "mv",
            "Explanations about Options": {
                "-n(M)": "do not overwrite an existing file"
            },
            "MP Summary": "move (rename) files",
            "Most Similar TLDR Script": "mv -n {{source}} {{target}}",
            "Most Similar TLDR Task": "Do not overwrite existing files at the target",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_14681391: shell create new directory and check whether it exists"
            ]
        }
    ],
    "Query": "Check if file exists and whether it contains a specific string"
}