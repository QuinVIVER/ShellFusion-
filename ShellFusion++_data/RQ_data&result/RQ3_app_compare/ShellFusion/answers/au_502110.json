{
    "Answers": [
        {
            "Command": "chown",
            "Explanations about Options": {
                "-R(C)": "Grant yourself (technically, the group \"www-data\") write permissions: \"sudo chmod -R g+w /var/www\". Add yourself to the \"www-data\" group: \"sudo adduser $USER www-data\" Change the ownership of the files in \"/var/www\": \"sudo chown -R www-data:www-data /var/www\" Change the umask, so newly created files by Apache grants write permissions to the group too.",
                "-R(M)": "operate on files and directories recursively"
            },
            "MP Summary": "change file owner and group",
            "Most Similar TLDR Script": "chown -R {{user}} {{path/to/directory}}",
            "Most Similar TLDR Task": "Recursively change the owner of a directory and its contents",
            "Top-3 Scripts": [
                "au_685730: find . -type f -exec chown newowner {} +",
                "au_30629: sudo chown -R www-data:www-data /var/www",
                "ul_215598: chown -R username:username /path/directory"
            ],
            "Top-3 Similar Questions": [
                "au_685730: Change owner of files recursively, but not directories",
                "au_30629: How can I recursively change the permissions of files and directories?",
                "ul_215598: How to Change Owner of a Directory"
            ]
        },
        {
            "Command": "chgrp",
            "Explanations about Options": {
                "-R(C)": "When you do \"chown -R myuser\", you set \"myuser\" as the owner of that particular file. If you want the folder to be owned by root again, just do a \"chown -R root\" on it. You also need to change the group of the folder with \"chgrp -R root\" for this to work. Let the user own the folder with \"chown -R myuser\", and make sure the folder has read, write and execute access for that particular user, e.g.",
                "-R(M)": "operate on files and directories recursively"
            },
            "MP Summary": "change group ownership",
            "Most Similar TLDR Script": "chgrp -R {{group}} {{path/to/directory}}",
            "Most Similar TLDR Task": "Recursively change the owner group of a directory and its contents",
            "Top-3 Scripts": [
                "su_570925: chgrp -R root"
            ],
            "Top-3 Similar Questions": [
                "ul_358224: Who can change the permissions of a file/directory?",
                "su_570925: Chown in Linux and permissions",
                "au_95985: Is it possible to change ownership of a file without root access?"
            ]
        },
        {
            "Command": "cd",
            "Explanations about Options": {},
            "MP Summary": "change the working directory",
            "Most Similar TLDR Script": "cd ..",
            "Most Similar TLDR Task": "Go up to the parent of the current directory",
            "Top-3 Scripts": [
                "ul_83531: #!/bin/bash\n\ncd /home &&    \nfor h in *\n  do \n    chown -R \"$h:$h\" \"$h\"; \n  done",
                "ul_44260: cd A\nrsync -a --link-dest=$PWD . ../B"
            ],
            "Top-3 Similar Questions": [
                "ul_83531: chowning each home user to itself recursively",
                "ul_44260: chown not permitted, but I have write access. How can I take recursive ownership?"
            ]
        },
        {
            "Command": "mkdir",
            "Explanations about Options": {
                "-p(M)": "no error if existing, make parent directories as needed"
            },
            "MP Summary": "make directories",
            "Most Similar TLDR Script": "mkdir -p {{path/to/directory}}",
            "Most Similar TLDR Task": "Create directories recursively (useful for creating nested dirs)",
            "Top-3 Scripts": [
                "ul_173938: mkdir /tmp/chroot\nmount -o .. -t .. /dev/... /tmp/chroot"
            ],
            "Top-3 Similar Questions": [
                "ul_173938: Change file ownership recursively without errors"
            ]
        },
        {
            "Command": "setfacl",
            "Explanations about Options": {
                "-d(M)": "All operations apply to the Default ACL. Regular ACL entries in the input set are\n promoted to Default ACL entries. Default ACL entries in the input set are discarded.\n (A warning is issued if that happens)."
            },
            "MP Summary": "set file access control lists",
            "Most Similar TLDR Script": "setfacl -d -m u::rw {{file}}",
            "Most Similar TLDR Task": "Modify default ACL of a file for all users",
            "Top-3 Scripts": [
                "su_808345: chmod g+s <directory>  //set gid \nsetfacl -d -m g::rwx /<directory>  //set group to rwx default \nsetfacl -d -m o::rx /<directory>   //set other"
            ],
            "Top-3 Similar Questions": [
                "su_808345: Change default permissions for new files and folders"
            ]
        }
    ],
    "Query": "chown recursively changed permissions"
}