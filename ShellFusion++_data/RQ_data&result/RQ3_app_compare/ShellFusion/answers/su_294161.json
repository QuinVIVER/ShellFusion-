{
    "Answers": [
        {
            "Command": "date",
            "Explanations about Options": {
                "--utc(M)": "print or set Coordinated Universal Time (UTC)",
                "-d(M)": "display time described by STRING, not 'now'",
                "-f(M)": "like --date; once for each line of DATEFILE"
            },
            "MP Summary": "print or set the system date and time",
            "Most Similar TLDR Script": "date -d \"{{2018-09-01 00:00}}\" +%s --utc",
            "Most Similar TLDR Task": "Convert a specific date to the Unix timestamp format",
            "Top-3 Scripts": [
                "so_41446577: $ while read d t s f; do printf \"%s %20d %s\\n\" \"$(date -jf '%m-%d-%y %I:%M%p' \"$d $t\" '+%F %T')\" \"$s\" \"$f\"; done < input.txt | sort\n2017-01-03 00:00:43                 3442 data_03012017_00_00_02.csv\n2017-01-03 00:30:43                 1753 data_03012017_00_30_00.csv\n2017-01-03 10:30:43                 1367 data_03012017_10_30_02.csv\n2017-01-03 11:00:43                   32 data_03012017_11_00_02.csv\n2017-01-03 11:30:43                 7532 data_03012017_11_30_03.csv\n2017-01-03 12:00:43                 9715 data_03012017_12_00_03.csv\n2017-01-03 12:30:43                 5857 data_03012017_12_30_03.csv\n\nwhile read d t s f; do\n  printf \"%s %20d %s\\n\" \\\n    \"$(date -jf '%m-%d-%y %I:%M%p' \"$d $t\" '+%F %T')\" \\\n    \"$s\" \\\n    \"$f\"\ndone < input.txt | sort",
                "so_21778284: #!/bin/sh\ntouch /tmp/date.changed\n/bin/date \"$@\"",
                "so_43697746: date -d\n\nwhile read -r line; do \n    echo $(date -d \"$line\" +%Y-%m-%d); \ndone < file.txt"
            ],
            "Top-3 Similar Questions": [
                "so_41446577: Sort data of date time Using sort in UNIX",
                "so_21778284: Find out when the date was changed",
                "so_43697746: How to change date format in linux/unix text file"
            ]
        },
        {
            "Command": "sort",
            "Explanations about Options": {
                "-n(M)": "compare according to string numerical value",
                "-r(M)": "reverse the result of comparisons"
            },
            "MP Summary": "sort lines of text files",
            "Most Similar TLDR Script": "sort {{path/to/file}}",
            "Most Similar TLDR Task": "Sort a file in ascending order",
            "Top-3 Scripts": [
                "so_34474016: find . -type f -print0 | xargs -0 stat -f\"%m %Sm %N\" | sort -rn",
                "so_41446577: $ while read d t s f; do printf \"%s %20d %s\\n\" \"$(date -jf '%m-%d-%y %I:%M%p' \"$d $t\" '+%F %T')\" \"$s\" \"$f\"; done < input.txt | sort\n2017-01-03 00:00:43                 3442 data_03012017_00_00_02.csv\n2017-01-03 00:30:43                 1753 data_03012017_00_30_00.csv\n2017-01-03 10:30:43                 1367 data_03012017_10_30_02.csv\n2017-01-03 11:00:43                   32 data_03012017_11_00_02.csv\n2017-01-03 11:30:43                 7532 data_03012017_11_30_03.csv\n2017-01-03 12:00:43                 9715 data_03012017_12_00_03.csv\n2017-01-03 12:30:43                 5857 data_03012017_12_30_03.csv\n\nwhile read d t s f; do\n  printf \"%s %20d %s\\n\" \\\n    \"$(date -jf '%m-%d-%y %I:%M%p' \"$d $t\" '+%F %T')\" \\\n    \"$s\" \\\n    \"$f\"\ndone < input.txt | sort",
                "ul_404060: find . -regex \".*/[0-9.]+\" -printf \"%T@ %f\\n\" | sort | cut -d' ' -f2\n\nfind . -regex \".*/[0-9.]+\" -printf \"%T@ %f\\n\" | sort -k1,1r | cut -d' ' -f2"
            ],
            "Top-3 Similar Questions": [
                "so_34474016: Find and sort files by date modified",
                "so_41446577: Sort data of date time Using sort in UNIX",
                "ul_404060: How to sort results of Find statement by date?"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-d(M)": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
                "-iname(M)": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
                "-mtime(C)": "If you want to do it on the Unix command line, try using find with the -mtime option.",
                "-mtime(M)": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
                "-print0(M)": "Always print the exact filename, unchanged, even if the output is going to a\n terminal.",
                "-printf(M)": "True; print format on the standard output, interpreting `\\' escapes and `%'\n directives. Field widths and precisions can be specified as with the `printf' C\n function. Please note that many of the fields are printed as %s rather than %d,\n and this may mean that flags don't work as you might expect. This also means that\n the `-' flag does work (it forces fields to be left-aligned). Unlike -print,\n -printf does not add a newline at the end of the string. The escapes and\n directives are:",
                "-regex(M)": "File name matches regular expression pattern. This is a match on the whole path,\n not a search. For example, to match a file named `./fubar3', you can use the\n regular expression `.*bar.' or `.*b.*3', but not `f.*r3'. The regular expressions\n understood by find are by default Emacs Regular Expressions (except that `.'\n matches newline), but this can be changed with the -regextype option.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
            "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
            "Top-3 Scripts": [
                "so_34474016: find . -type f -print0 | xargs -0 stat -f\"%m %Sm %N\" | sort -rn",
                "so_9705579: find /home -iname \".c\" -mtime 2 -mtime -4",
                "ul_404060: find . -regex \".*/[0-9.]+\" -printf \"%T@ %f\\n\" | sort | cut -d' ' -f2\n\nfind . -regex \".*/[0-9.]+\" -printf \"%T@ %f\\n\" | sort -k1,1r | cut -d' ' -f2"
            ],
            "Top-3 Similar Questions": [
                "so_34474016: Find and sort files by date modified",
                "so_9705579: Find files modified between two dates on Linux machine",
                "ul_404060: How to sort results of Find statement by date?"
            ]
        },
        {
            "Command": "ls",
            "Explanations about Options": {
                "-a(M)": "do not ignore entries starting with .",
                "-l(M)": "use a long listing format",
                "-m(M)": "fill width with a comma separated list of entries",
                "-n(C)": "For example, to sort everything you can do this: .  \"sort -n -k1,1\" sorts the lines in stdin numerically on the first column (and only the first column).",
                "-n(M)": "like -l, but list numeric user and group IDs",
                "-p(M)": "append / indicator to directories",
                "-r(M)": "reverse order while sorting",
                "-t(M)": "sort by modification time , newest first",
                "-w(M)": "set output width to COLS. 0 means no limit"
            },
            "MP Summary": "list directory contents",
            "Most Similar TLDR Script": "ls -ltr",
            "Most Similar TLDR Task": "Long format list of all files, sorted by modification date (oldest first)",
            "Top-3 Scripts": [
                "so_49872339: xargs ls\n\nls -tr `find -type f -newermt \"2018-04-09 00:00:00\"`",
                "so_42884952: ls -al\n\n/bin/ls -latr | grep '^-'",
                "so_5581250: xarg ls -t\n\nfind /tmp/logs/ -maxdepth 1 -mindepth 1 -type d -mtime -30 | xargs ls -td1"
            ],
            "Top-3 Similar Questions": [
                "so_34474016: Find and sort files by date modified",
                "so_49872339: Shell script to find files after certain modified date and sort them in order of modified date",
                "so_42884952: How to get sorted output from find"
            ]
        },
        {
            "Command": "touch",
            "Explanations about Options": {
                "-t(M)": "STAMP\n use [[CC]YY]MMDDhhmm[.ss] instead of current time"
            },
            "MP Summary": "change file timestamps",
            "Most Similar TLDR Script": "touch -t {{YYYYMMDDHHMM.SS}} {{filename}}",
            "Most Similar TLDR Task": "Set the times on a file to a specific date and time",
            "Top-3 Scripts": [
                "so_21778284: #!/bin/sh\ntouch /tmp/date.changed\n/bin/date \"$@\""
            ],
            "Top-3 Similar Questions": [
                "so_21778284: Find out when the date was changed"
            ]
        }
    ],
    "Query": "Unix/Linux find and sort by date modified"
}