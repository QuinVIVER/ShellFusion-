{
    "Answers": [
        {
            "Command": "unzip",
            "Explanations about Options": {
                "-c(M)": "extract files to stdout/screen (``CRT''). This option is similar to the -p option\n except that the name of each file is printed as it is extracted, the -a option is\n allowed, and ASCII-EBCDIC conversion is automatically performed if appropriate.\n This option is not listed in the unzip usage screen.",
                "-j(M)": "junk paths. The archive's directory structure is not recreated; all files are\n deposited in the extraction directory (by default, the current one)."
            },
            "MP Summary": "list, test and extract compressed files in a ZIP archive",
            "Most Similar TLDR Script": "unzip {{compressed_file(s)}} -d {{/path/to/put/extracted_file(s)}}",
            "Most Similar TLDR Task": "Extract zip files(s) to given path",
            "Top-3 Scripts": [
                "so_12268454: searchdir='/home/username/'\noutputtxt='/home/username/out.txt'\n\nfor jar in $(find \"$searchdir\" -iname '*.jar'); do\n  for txt in $(unzip -l \"$jar\" | awk '/\\.txt$/ {print $NF}'); do\n    unzip -c \"$jar\" \"$txt\" | tail -n +3 >> \"$outputtxt\"\n  done\ndone",
                "ul_84093: jar -xvf Sample.war\nunzip Sample.war",
                "su_273874: unzip -jd <some_path> test.zip"
            ],
            "Top-3 Similar Questions": [
                "so_12268454: Extracting txt files from a jar",
                "so_31561577: How to replace the manifest of a war file from bash?",
                "ul_84093: How to read a .war file?"
            ]
        },
        {
            "Command": "tar",
            "Explanations about Options": {
                "-v(M)": "Verbosely list files processed.",
                "-x(M)": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted."
            },
            "MP Summary": "an archiving utility",
            "Most Similar TLDR Script": "tar xf {{source.tar}} {{source.tar/path/to/extract}} --strip-components={{depth_to_strip}}",
            "Most Similar TLDR Task": "Extract a specific file without preserving the folder structure",
            "Top-3 Scripts": [
                "so_23333631: tar command\n\ntar -xvf xyz.tar |grep '\\.tar$' | xargs -n 1 | tar -xvf"
            ],
            "Top-3 Similar Questions": [
                "so_23333631: Extract tar file using bash script",
                "so_1586130: How to extract archive from this script (using tar)",
                "so_42903822: Download, extract and copy file from a folder that has a version in its name"
            ]
        },
        {
            "Command": "zip",
            "Explanations about Options": {
                "-d(M)": "Remove (delete) entries from a zip archive. For example:"
            },
            "MP Summary": "package and compress (archive) files",
            "Most Similar TLDR Script": "zip {{compressed.zip}} {{path/to/file}}",
            "Most Similar TLDR Task": "Add files to an existing zip file",
            "Top-3 Scripts": [
                "so_4520822: zip -d file.jar unwanted_file.txt",
                "so_50424083: apk add zip"
            ],
            "Top-3 Similar Questions": [
                "so_31561577: How to replace the manifest of a war file from bash?",
                "so_4520822: Is there a quick way to delete a file from a Jar / war without having to extract the jar and recreate it?",
                "so_50424083: Edit a file inside war file in a docker container"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-iname(M)": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
                "-maxdepth(M)": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
                "-n(C)": "You can also omit \"| tail -n +3\" from the inner most loop if you wish to include the unzip header in the output file.",
                "-n(M)": "for less than n ,",
                "-name(C)": "for i in \"find . -name \"*.txt\"\"; do echo $i; fname=\"echo $i|sed 's/\\//-/g'\"; echo $fname; cp $i ./newdir/$fname; done.",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
            "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
            "Top-3 Scripts": [
                "so_12268454: searchdir='/home/username/'\noutputtxt='/home/username/out.txt'\n\nfor jar in $(find \"$searchdir\" -iname '*.jar'); do\n  for txt in $(unzip -l \"$jar\" | awk '/\\.txt$/ {print $NF}'); do\n    unzip -c \"$jar\" \"$txt\" | tail -n +3 >> \"$outputtxt\"\n  done\ndone",
                "so_63752888: find . -name \"*.txt\"",
                "so_18050426: find /var/lib/tomcat6/webapps -maxdepth 1 -type d"
            ],
            "Top-3 Similar Questions": [
                "so_12268454: Extracting txt files from a jar",
                "so_63752888: How to extract the file with same name from different directories in linux?",
                "so_18050426: How can I generate a list of directories, while ignoring .war files?"
            ]
        },
        {
            "Command": "diff",
            "Explanations about Options": {},
            "MP Summary": "compare two files",
            "Most Similar TLDR Script": "diff -rq {{old_directory}} {{new_directory}}",
            "Most Similar TLDR Task": "Compare directories, only showing the names of files that differ",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_31561577: How to replace the manifest of a war file from bash?"
            ]
        }
    ],
    "Query": "Linux command for extracting war file?"
}