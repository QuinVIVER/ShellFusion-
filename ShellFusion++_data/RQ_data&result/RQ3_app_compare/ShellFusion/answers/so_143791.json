{
    "Answers": [
        {
            "Command": "ps",
            "Explanations about Options": {
                "--sort(M)": "Specify sorting order. Sorting syntax is [+|-]key[,[+|-]key[,...]]. Choose a\n multi-letter key from the STANDARD FORMAT SPECIFIERS section. The \"+\" is optional\n since default direction is increasing numerical or lexicographic order. Identical\n to k. For example: ps jax --sort=uid,-ppid,+pid",
                "-e(M)": "Select all processes. Identical to -A.",
                "-s(M)": "Select by session ID. This selects the processes with a session ID specified in\n sesslist."
            },
            "MP Summary": "report a snapshot of the current processes.",
            "Most Similar TLDR Script": "ps --sort size",
            "Most Similar TLDR Task": "Sort processes by memory consumption",
            "Top-3 Scripts": [
                "ul_137301: while [ true ]\ndo\n  printf \"\\n\\n\" >> /root/psaux_analysis\n  echo \"--------------------------------------\" >> /root/psaux_analysis\n  date >> /root/psaux_analysis\n  echo \"--------------------------------------\" >> /root/psaux_analysis\n  printf \"\\n\" >> /root/psaux_analysis\n  ps aux >> /root/psaux_analysis\n  sleep 30;\ndone",
                "ul_4999: $ ps -eo pmem,pcpu,vsize,pid,cmd | sort -k 1 -nr | head -5",
                "ul_92493: ps aux --sort -rss"
            ],
            "Top-3 Similar Questions": [
                "ul_137301: How to figure out memory leaks?",
                "ul_4999: How to find which processes are taking all the memory?",
                "so_3098655: pthread_create memory leak"
            ]
        },
        {
            "Command": "top",
            "Explanations about Options": {
                "-H(M)": "Instructs top to display individual threads. Without this command-line option a\n summation of all threads in each process is shown. Later this can be changed with\n the `H' interactive command.",
                "-p(M)": ":Monitor-PIDs mode as: -pN1 -pN2 ... or -pN1 , N2 , N3 ...\n Monitor only processes with specified process IDs. This option can be given up to 20\n times, or you can provide a comma delimited list with up to 20 pids. Co-mingling\n both approaches is permitted."
            },
            "MP Summary": "display Linux processes",
            "Most Similar TLDR Script": "top -Hp {{process_id}}",
            "Most Similar TLDR Task": "Show the individual threads of a given process",
            "Top-3 Scripts": [
                "ul_599350: man top"
            ],
            "Top-3 Similar Questions": [
                "ul_4999: How to find which processes are taking all the memory?",
                "ul_599350: Does Pulseaudio leak memory?",
                "su_398862: Linux: find out what process is using all the RAM?"
            ]
        },
        {
            "Command": "valgrind",
            "Explanations about Options": {},
            "MP Summary": "a suite of tools for debugging and profiling programs",
            "Most Similar TLDR Script": "valgrind --leak-check=full --show-leak-kinds=all {{program}}",
            "Most Similar TLDR Task": "Use Memcheck to report all possible memory leaks of `program` in full detail",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_3098655: pthread_create memory leak"
            ]
        },
        {
            "Command": "wait",
            "Explanations about Options": {},
            "MP Summary": "await process completion",
            "Most Similar TLDR Script": "wait {{pid}}",
            "Most Similar TLDR Task": "Wait for a process to finish given its process ID (PID) and return its exit status",
            "Top-3 Scripts": [
                "so_6737808: wait()"
            ],
            "Top-3 Similar Questions": [
                "so_6737808: Question about memory leak happening in the child process"
            ]
        },
        {
            "Command": "kill",
            "Explanations about Options": {},
            "MP Summary": "send a signal to a process",
            "Most Similar TLDR Script": "kill -{{SIGUSR1}} -{{group_id}}",
            "Most Similar TLDR Task": "Send a `SIGUSR1` signal to all processes with the given GID (group id)",
            "Top-3 Scripts": [
                "ul_504597: kill -TSTP $pid\n\nkill -CONT $pid"
            ],
            "Top-3 Similar Questions": [
                "ul_504597: How to limit a process' memory usage while it is running?"
            ]
        }
    ],
    "Query": "how do i find which process is leaking memory"
}