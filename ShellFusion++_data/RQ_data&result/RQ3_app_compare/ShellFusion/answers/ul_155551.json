{
    "Answers": [
        {
            "Command": "gdb",
            "Explanations about Options": {},
            "MP Summary": "The GNU Debugger",
            "Most Similar TLDR Script": "gdb {{executable}}",
            "Most Similar TLDR Task": "Debug an executable",
            "Top-3 Scripts": [
                "so_5048112: gdb progname 1234",
                "so_47961855: #!/bin/sh\n exec gdb --args /usr/bin/openssl.exe \"$@\""
            ],
            "Top-3 Similar Questions": [
                "so_5048112: Use GDB to debug a C++ program called from a shell script",
                "so_47961855: How to debug a C program which execute bash shell script with GDB?"
            ]
        },
        {
            "Command": "exit",
            "Explanations about Options": {},
            "MP Summary": "cause the shell to exit",
            "Most Similar TLDR Script": "exit",
            "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
            "Top-3 Scripts": [
                "au_716772: if [ -z $currextip ]; then\n    echo \"Something went wrong with ipinfo.io!\"\n    exit\nfi",
                "ul_297758: #! /bin/sh -\nprintf '%s\\n' \"I was invoked by $INVOKER\"\n# and in this case, we'll probably find the parent process is 1\n# (if not now, at least one second later) as script1 exited just after\n# invoking script2:\nps -fp \"$$\"\nsleep 1\nps -fp \"$$\"\nexit"
            ],
            "Top-3 Similar Questions": [
                "so_14089630: Debug a Perl script",
                "ul_499144: How to debug a script by removing the \"if\"?",
                "au_716772: Help debugging my bash script"
            ]
        },
        {
            "Command": "zsh",
            "Explanations about Options": {},
            "MP Summary": "the Z shell",
            "Most Similar TLDR Script": "zsh {{file}}",
            "Most Similar TLDR Task": "Run commands from file (script)",
            "Top-3 Scripts": [
                "ul_297758: zsh/system"
            ],
            "Top-3 Similar Questions": [
                "ul_297758: Is there a way for shell script to know which program has executed it?",
                "so_21837656: How to debug Shell command after customization"
            ]
        },
        {
            "Command": "python",
            "Explanations about Options": {
                "-m(C)": "Once you install the pudb package via pip, you simply run the script with the command \"python -m pudb.run my-script.py\" (or specifically, for your example above, \"python -m pudb.run file.py json_file.json\") and the debugger is loaded, at which point you can set breakpoints, run to cursor, inspect variables, drop into an interactive shell, etc.",
                "-m(M)": "Searches sys.path for the named module and runs the corresponding .py file as a\n script."
            },
            "MP Summary": "an interpreted, interactive, object-oriented programming language",
            "Most Similar TLDR Script": "python -m pdb {{script.py}}",
            "Most Similar TLDR Task": "Interactively debug a Python script",
            "Top-3 Scripts": [
                "so_26459760: python -m pudb.run my-script.py\n\npython -m pudb.run file.py json_file.json"
            ],
            "Top-3 Similar Questions": [
                "so_26459760: Debugging Python File in Linux"
            ]
        },
        {
            "Command": "eval",
            "Explanations about Options": {},
            "MP Summary": "construct command by concatenating arguments",
            "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
            "Most Similar TLDR Task": "Set a variable in the current shell",
            "Top-3 Scripts": [
                "so_45483612: function parser {\n    set +x\n    IFS= read -r input\n    if ! [ -z \"$input\" ]; then\n        printf \"Going to do: >%s\\n\" $input\n        eval \"$input\"\n    fi\n    set -x\n}",
                "so_7502323: eval bsub $job_opts"
            ],
            "Top-3 Similar Questions": [
                "so_45483612: How can you modify interactively a shell script during the debugging?",
                "so_48923315: BASH debugging curl",
                "so_7502323: BASH quotes in debug mode"
            ]
        }
    ],
    "Query": "How to debug a bash script?"
}