{
    "Answers": [
        {
            "Command": "apt-get",
            "Explanations about Options": {},
            "MP Summary": "APT package handling utility - command-line interface",
            "Most Similar TLDR Script": "apt-get upgrade",
            "Most Similar TLDR Task": "Upgrade all installed packages to their newest available versions",
            "Top-3 Scripts": [
                "au_169613: sudo apt-get install tunesviewer",
                "au_117325: sudo apt-get install forked-daapd"
            ],
            "Top-3 Similar Questions": [
                "au_169613: How do I download iTunes podcasts with hpodder or other software?",
                "au_117325: How do I get mt-daapd?"
            ]
        },
        {
            "Command": "apt-cache",
            "Explanations about Options": {},
            "MP Summary": "query the APT cache",
            "Most Similar TLDR Script": "apt-cache policy {{package}}",
            "Most Similar TLDR Task": "Show whether a package is installed and up to date",
            "Top-3 Scripts": [
                "au_117325: apt-cache search keyword-here\n\napt-cache search daapd"
            ],
            "Top-3 Similar Questions": [
                "au_117325: How do I get mt-daapd?"
            ]
        },
        {
            "Command": "VBoxManage",
            "Explanations about Options": {},
            "MP Summary": "x86 virtualization solution",
            "Most Similar TLDR Script": "VBoxManage list vms",
            "Most Similar TLDR Task": "List all VirtualBox virtual machines",
            "Top-3 Scripts": [
                "au_797038: VBoxManage modifyhd MSEdge\\ -\\ Win10TH2-disk1.vdi --resize 128000"
            ],
            "Top-3 Similar Questions": [
                "au_797038: How to manage and restore a modern iPhone or iDevice on ubuntu with iTunes"
            ]
        },
        {
            "Command": "as",
            "Explanations about Options": {},
            "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: · The project must have an existing package-lock.json or npm-shrinkwrap.json. · If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. · npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. · If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. · It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also · npm help install · npm help package-locks April 2020                                  NPM-CI(1)",
            "Most Similar TLDR Script": "as -f {{file.s}}",
            "Most Similar TLDR Task": "Generate output faster by skipping whitespace and comment preprocessing. (Should only be used for trusted compilers)",
            "Top-3 Scripts": [
                "so_19187142: set posixPath to \"/path/to/folder/fileName.m3u\"\nset fileSpecifier to (POSIX file posixPath) as text\ntell application \"iTunes\"\n    open file fileSpecifier\n    delay 1 -- delay however many seconds needed to allow the playlist to be created\n    play playlist \"fileName\"\nend tell"
            ],
            "Top-3 Similar Questions": [
                "so_19187142: Tell iTunes to open a .m3u playlist file"
            ]
        },
        {
            "Command": "and",
            "Explanations about Options": {},
            "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: · The project must have an existing package-lock.json or npm-shrinkwrap.json. · If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. · npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. · If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. · It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also · npm help install · npm help package-locks April 2020                                  NPM-CI(1)",
            "Most Similar TLDR Script": "",
            "Most Similar TLDR Task": "",
            "Top-3 Scripts": [
                "au_117325: forked-daapd - media server with support for RSP, DAAP, DACP and AirTunes",
                "au_124352: Mac OS X: /Users/username/Music/iTunes/\nWindows XP: C:\\Documents and Settings\\username\\My Documents\\My Music\\iTunes\\\nWindows Vista: C:\\Users\\username\\Music\\iTunes\\\nWindows 7: C:\\Users\\username\\My Music\\iTunes\\\nWindows 8: C:\\Users\\username\\My Music\\iTunes\\"
            ],
            "Top-3 Similar Questions": [
                "au_117325: How do I get mt-daapd?",
                "au_124352: Can I connect to iTunes music shares using Amarok?"
            ]
        }
    ],
    "Query": "How do I install iTunes on Ubuntu?"
}