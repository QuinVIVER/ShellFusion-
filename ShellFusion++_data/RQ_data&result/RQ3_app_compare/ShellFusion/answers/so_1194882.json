{
    "Answers": [
        {
            "Command": "shuf",
            "Explanations about Options": {
                "-i(M)": "treat each number LO through HI as an input line",
                "-n(M)": "output at most COUNT lines"
            },
            "MP Summary": "generate random permutations",
            "Most Similar TLDR Script": "shuf -i {{1-10}}",
            "Most Similar TLDR Task": "Generate random numbers in range",
            "Top-3 Scripts": [
                "ul_430056: shuf file | xargs wget\n\nman 1 shuf\n\nshuf file | while read url; do\n    wget --user-agent=\"$(shuf -n1 uas)\" \"$url\"\ndone",
                "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(printf %s\\\\n 1 2 4 5 6 7 9)\n\nshuf -n 1 <(printf %s\\\\n 1 2 {4..7} 9)\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)",
                "so_40033918: angle=$(seq -30 30 | shuf -n 1)"
            ],
            "Top-3 Similar Questions": [
                "ul_430056: Generate random number after value in bash",
                "so_54554364: Generate random number except values in bash",
                "so_40033918: Bash Generate a random number between a positive and a negative"
            ]
        },
        {
            "Command": "sort",
            "Explanations about Options": {
                "--general-numeric-sort(M)": "compare according to general numerical value",
                "-R(M)": "shuffle, but group identical keys. See shuf(1)"
            },
            "MP Summary": "sort lines of text files",
            "Most Similar TLDR Script": "sort --general-numeric-sort {{path/to/file}}",
            "Most Similar TLDR Task": "Sort numbers with exponents",
            "Top-3 Scripts": [
                "ul_430056: sort -R",
                "so_25613429: file=\"./somefile\"\npaste  -d\"\\0\\n\" <(seq -f \"%04g\" 9999 | sort -R | head -$(grep -c '' \"$file\")) <(grep -oP '\\d+' \"$file\")\n\nsort -R",
                "so_22536746: seq 2014 2044 | sort -R"
            ],
            "Top-3 Similar Questions": [
                "ul_430056: Generate random number after value in bash",
                "so_25613429: Generate ID number from a name in bash",
                "so_22536746: bash script random number not entirely random"
            ]
        },
        {
            "Command": "wc",
            "Explanations about Options": {
                "-l(M)": "print the newline counts"
            },
            "MP Summary": "print newline, word, and byte counts for each file",
            "Most Similar TLDR Script": "wc -l {{file}}",
            "Most Similar TLDR Task": "Count lines in file",
            "Top-3 Scripts": [
                "so_25613429: wc -l"
            ],
            "Top-3 Similar Questions": [
                "so_25613429: Generate ID number from a name in bash",
                "so_36146465: Bash script - Generating random integers and writing to file"
            ]
        },
        {
            "Command": "seq",
            "Explanations about Options": {
                "-f(M)": "use printf style floating-point FORMAT"
            },
            "MP Summary": "print a sequence of numbers",
            "Most Similar TLDR Script": "seq 5 3 20",
            "Most Similar TLDR Task": "Every 3rd number from 5 to 20",
            "Top-3 Scripts": [
                "ul_430056: for i in $(seq 0 $((${#data_link[@]} -1)) | shuf); do\n    wget -U \"${user_agent[RANDOM % ${#user_agent[@]}]}\" \"${data_link[i]}\"\ndone",
                "so_25613429: file=\"./somefile\"\npaste  -d\"\\0\\n\" <(seq -f \"%04g\" 9999 | sort -R | head -$(grep -c '' \"$file\")) <(grep -oP '\\d+' \"$file\")\n\npaste  -d\"\\0\\n\" <(\n    seq -f \"%04g\" 9999 | gsort -R | head -$(grep -c '' \"$file\")\n) <(\n    grep -oP '\\d+' \"$file\"\n)",
                "so_54554364: shuf -n 1 <(seq 9 | grep -Fxv -e{3,8})\n\nshuf -n 1 <(seq 2; seq 4 7; echo 9)"
            ],
            "Top-3 Similar Questions": [
                "ul_430056: Generate random number after value in bash",
                "so_25613429: Generate ID number from a name in bash",
                "so_54554364: Generate random number except values in bash"
            ]
        },
        {
            "Command": "split",
            "Explanations about Options": {
                "-n(M)": "generate CHUNKS output files; see explanation below"
            },
            "MP Summary": "split a file into pieces",
            "Most Similar TLDR Script": "split -n {{5}} {{filename}}",
            "Most Similar TLDR Task": "Split a file into 5 files. File is split such that each split has same size (except the last split)",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "ul_474057: Random mutagenesis with bash"
            ]
        }
    ],
    "Query": "How to generate random number in Bash?"
}