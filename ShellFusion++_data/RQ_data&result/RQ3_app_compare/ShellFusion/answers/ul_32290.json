{
    "Answers": [
        {
            "Command": "eval",
            "Explanations about Options": {},
            "MP Summary": "construct command by concatenating arguments",
            "Most Similar TLDR Script": "eval \"{{echo foo}}\"",
            "Most Similar TLDR Task": "Call `echo` with the \"foo\" argument",
            "Top-3 Scripts": [
                "so_2732699: eval $1",
                "so_42111441: while IFS= read -r line\ndo\n  eval args=\\(\"$line\"\\)\n  command_or_function \"${args[@]}\"\ndone<file.txt",
                "so_52414123: args=\"\"\nwhile IFS= read -r line; do \n     args+=\" -n $(printf %q \"$line\")\"; \ndone < input.sh\neval consume.sh \"$args\""
            ],
            "Top-3 Similar Questions": [
                "so_2732699: Command passed as argument to shell script",
                "ul_176226: Passing a command with arguments to a script",
                "so_42111441: How to pass command line arguments with spaces through a variable in bash"
            ]
        },
        {
            "Command": "xargs",
            "Explanations about Options": {
                "-I(M)": "Replace occurrences of replace-str in the initial-arguments with names read from\n standard input. Also, unquoted blanks do not terminate input items; instead the\n separator is the newline character. Implies -x and -L 1.",
                "-a(M)": "Read items from file instead of standard input. If you use this option, stdin\n remains unchanged when commands are run. Otherwise, stdin is redirected from\n /dev/null.",
                "-i(M)": "This option is a synonym for -Ireplace-str if replace-str is specified. If the\n replace-str argument is missing, the effect is the same as -I{}. This option is\n deprecated; use -I instead.",
                "-o(M)": "Reopen stdin as /dev/tty in the child process before executing the command. This\n is useful if you want xargs to run an interactive application."
            },
            "MP Summary": "build and execute command lines from standard input",
            "Most Similar TLDR Script": "{{arguments_source}} | xargs {{command}}",
            "Most Similar TLDR Task": "Run a command using the input data as arguments",
            "Top-3 Scripts": [
                "so_29972466: xargs -d '\\n' -a file.txt command",
                "so_65825618: cat asnlookups_domains_ip.txt | awk '{print $1}' | xargs -n1 amass intel -whois -d",
                "so_40850638: xargs -I{} sh script.sh 55{} go < numbers.txt\n\nxargs -I{} echo number is: {} < input"
            ],
            "Top-3 Similar Questions": [
                "so_29972466: Pass each line of a file as an argument to a command?",
                "so_65825618: How to pass arguments to bash command",
                "so_40850638: Shell Script: Passing each line as an argument to another script"
            ]
        },
        {
            "Command": "command",
            "Explanations about Options": {},
            "MP Summary": "execute a simple command",
            "Most Similar TLDR Script": "command -v {{command_name}}",
            "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
            "Top-3 Scripts": [
                "so_29972466: xargs -d '\\n' -a file.txt command\n\n(IFS=$'\\n'; command $(< file.txt))",
                "so_1355247: $ ./myscript.sh 25\nFound somestuff\n./myscript.sh: line 6: 25: command not found\n$",
                "so_37939468: kent$  \"ls -l\"\nzsh: command not found: ls -l #it thinks a command is \"ls(space)-l\"\n\nkent$  \"ls\" \"-l\"\ntotal xx\n<file lists>"
            ],
            "Top-3 Similar Questions": [
                "so_29972466: Pass each line of a file as an argument to a command?",
                "so_1355247: Passing BASH arguments",
                "so_37939468: Passing argument to command in bash shell script"
            ]
        },
        {
            "Command": "which",
            "Explanations about Options": {
                "-a(M)": "print all matching pathnames of each argument"
            },
            "MP Summary": "locate a command",
            "Most Similar TLDR Script": "which -a {{executable}}",
            "Most Similar TLDR Task": "If there are multiple executables which match, display all",
            "Top-3 Scripts": [
                "so_48110439: [ string ]    # which is equivalent to\n[ -n string ]"
            ],
            "Top-3 Similar Questions": [
                "so_48110439: Argument isn't passed (bash)"
            ]
        },
        {
            "Command": "sh",
            "Explanations about Options": {
                "-c(C)": "This has the advantage that the user can pass arguments to that command without worrying about quoting; the user can invoke a shell explicitly (\"sh -c …\" if they want).",
                "-c(M)": "Impose a size limit of n blocks on the size of core dumps."
            },
            "MP Summary": "MirBSD Korn shell",
            "Most Similar TLDR Script": "sh -c {{command}}",
            "Most Similar TLDR Task": "Execute a command",
            "Top-3 Scripts": [
                "so_46816671: [ sh $1 $2 -eq A]\n\n[ $(sh $1 $2) == A ]\n\n[ $(sh $1 $files) == A ]\n\n[ \"$(sh \"$1\" \"$files\")\" == A ]\n\n[ \"$(sh \"$script\" \"$file\")\" == A ]",
                "so_40850638: xargs -I{} sh script.sh 55{} go < numbers.txt\n\nsh script.sh 55{} go",
                "ul_176226: sh -c …\n\n#!/bin/zsh\ntask_name=$1\nsh -c \"$2\""
            ],
            "Top-3 Similar Questions": [
                "so_46816671: Passing Scripts as Arguments Bash",
                "so_13487073: Pass parameters from the command line in shell",
                "so_40850638: Shell Script: Passing each line as an argument to another script"
            ]
        }
    ],
    "Query": "Pass command line arguments to bash script"
}