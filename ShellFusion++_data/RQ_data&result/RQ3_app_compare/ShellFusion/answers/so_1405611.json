{
    "Answers": [
        {
            "Command": "cut",
            "Explanations about Options": {
                "-c(M)": "select only these characters",
                "-d(M)": "use DELIM instead of TAB for field delimiter"
            },
            "MP Summary": "remove sections from each line of files",
            "Most Similar TLDR Script": "cut -c {{1-16}} {{file}}",
            "Most Similar TLDR Task": "Cut out the first sixteen characters of each line of the given files",
            "Top-3 Scripts": [
                "so_43754540: s=\"1478456=Good bye 1 2\"\necho ${s//[[:digit:]]/} | cut -c1\n=",
                "so_15148796: cut -d \"=\" -f2 <<< \"$your_str\"\n\ncut -d \"=\" -f2- <<< \"$your_str\"",
                "so_55101106: echo \"<tag>Hello world </tag> blah blah blah <tag> Good night ls -ltrh cptrade* </tag>\" | cut -d'>' -f2 | cut -d'<' -f1"
            ],
            "Top-3 Similar Questions": [
                "so_43754540: Extract the first character after the first number",
                "so_15148796: Get string after character",
                "so_55101106: Extract text between two strings but only the first occurrence using sed?"
            ]
        },
        {
            "Command": "head",
            "Explanations about Options": {
                "-n(M)": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            },
            "MP Summary": "output the first part of files",
            "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
            "Most Similar TLDR Task": "Output the first few lines of a file",
            "Top-3 Scripts": [
                "so_30600399: head -n1 *.txt | grep -ve ^= -e ^$ > first.txt",
                "so_36696424: while read line; do\n  status=`grep -oP '(?<=Operation status:).*?(?=Sent)' <<< \"$line\"`\n  user=`grep -oP '(?<=username=).*?(?=})' <<< \"$line\" | head -n 1`\n  echo \"Operation status:\" $status \"username=\"$user\ndone < file.txt"
            ],
            "Top-3 Similar Questions": [
                "so_30600399: Extract line from a file in shell script",
                "so_36696424: Extract two substrings from line in bash then concatenate them"
            ]
        },
        {
            "Command": "join",
            "Explanations about Options": {},
            "MP Summary": "join lines of two files on a common field",
            "Most Similar TLDR Script": "join {{file1}} {{file2}}",
            "Most Similar TLDR Task": "Join two files on the first (default) field",
            "Top-3 Scripts": [
                "so_21587962: s='430438229200740352 2014-02-03 14:30:45 CST <HorizonAwon> @SawBlastt @WereAutomatic 101 for me to join as well'\ngrep -oP '@\\K[^ ]*' <<< \"$s\"\nSawBlastt\nWereAutomatic",
                "so_64231182: join <(sort file2) <(sort file1)"
            ],
            "Top-3 Similar Questions": [
                "so_21587962: Extracting A String Between Two Characters in Bash",
                "so_64231182: How to match a column and extract values between two files in Shell"
            ]
        },
        {
            "Command": "tr",
            "Explanations about Options": {
                "-d(M)": "delete characters in SET1, do not translate"
            },
            "MP Summary": "translate or delete characters",
            "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
            "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
            "Top-3 Scripts": [
                "so_52424905: str=\"Release Enterprise Production\"\negrep -o '\\<...' <<< \"$str\" | tr -d '\\n'"
            ],
            "Top-3 Similar Questions": [
                "so_52424905: Extract first three characters of a string with words with bash, f.ex. with sed"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-F(M)": "Interpret PATTERNS as fixed strings, not regular expressions.",
                "-P(M)": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
                "-i(M)": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
                "-o(M)": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -F {{exact_string}} {{path/to/file}}",
            "Most Similar TLDR Task": "Search for an exact string",
            "Top-3 Scripts": [
                "so_41470654: grep -o\n\ngrep -o 'tmp[0-9]*' file\ntmp8\ntmp28\ntmp2\ntmp10\ntmp8",
                "so_21587962: s='430438229200740352 2014-02-03 14:30:45 CST <HorizonAwon> @SawBlastt @WereAutomatic 101 for me to join as well'\ngrep -oP '@\\K[^ ]*' <<< \"$s\"\nSawBlastt\nWereAutomatic",
                "so_51735069: #!/usr/bin/env bash\nlogFileName=$1\n\ndatasource_re='jdbc:mondrian:DataSource=([[:alnum:]]+)_datasource'\nwhile read -r errorLogLine; do\n  if [[ \"$errorLogLine\" =~ $datasource_re ]]; then\n    echo \"Found source: ${BASH_REMATCH[1]}\"\n  fi\ndone < <(grep -i \"_datasource\" \"$logFileName\")"
            ],
            "Top-3 Similar Questions": [
                "so_21599316: How to extract a part of the string between two characters in bash?",
                "so_41470654: Extract pattern from a string in a bash script",
                "so_21587962: Extracting A String Between Two Characters in Bash"
            ]
        }
    ],
    "Query": "How to extract the first two characters of a string in shell scripting?"
}