{
    "Answers": [
        {
            "Command": "killall",
            "Explanations about Options": {
                "-I(M)": "Do case insensitive process name match."
            },
            "MP Summary": "kill processes by name",
            "Most Similar TLDR Script": "killall -KILL {{process_name}}",
            "Most Similar TLDR Task": "Force kill a process",
            "Top-3 Scripts": [
                "ul_257666: killall -9 chrome",
                "so_12445331: killall php\n\nkillall -9 php"
            ],
            "Top-3 Similar Questions": [
                "ul_65902: Why does bash show 'Terminated' after killing a process?",
                "ul_257666: Why does killall command kill only one instance of the process?",
                "su_365483: How can I kill Firefox by console?"
            ]
        },
        {
            "Command": "pkill",
            "Explanations about Options": {
                "-f(M)": "The pattern is normally only matched against the process name. When -f is set, the\n full command line is used."
            },
            "MP Summary": "look up or signal processes based on name and other attributes",
            "Most Similar TLDR Script": "pkill -9 {{process_name}}",
            "Most Similar TLDR Task": "Kill all processes which match",
            "Top-3 Scripts": [
                "ul_21258: pkill name_of_process_to_kill",
                "ul_622159: pkill -f bonansa",
                "au_680489: pkill -f 'java.*(core|nimbus)'"
            ],
            "Top-3 Similar Questions": [
                "ul_21258: Terminate Root Processes",
                "ul_622159: Kill only one Java process by grep",
                "au_680489: How to filter & kill some java processes using terminal?"
            ]
        },
        {
            "Command": "nohup",
            "Explanations about Options": {},
            "MP Summary": "run a command immune to hangups, with output to a non-tty",
            "Most Similar TLDR Script": "nohup {{command options}}",
            "Most Similar TLDR Task": "Run process that can live beyond the terminal",
            "Top-3 Scripts": [
                "ul_260584: #!/bin/sh\nnohup sxhkd </dev/null >/dev/null 2>/dev/null &\nnohup panel </dev/null >/dev/null 2>/dev/null &",
                "ul_636180: #! /bin/sh\n\nexport PATH=gcc-arm-8.2-2019.01-x86_64-arm-linux-gnueabi/bin:$PATH\nnohup arm-linux-gnueabi-gdb --command=/home/null/Desktop/Gem5/gem5/patch.gdbinit &>/dev/null",
                "so_2278281: nohup child&"
            ],
            "Top-3 Similar Questions": [
                "ul_260584: Kill command also kills other process",
                "ul_636180: How to kill an orphan Terminal process",
                "so_2278281: does linux kill command terminate child processes?"
            ]
        },
        {
            "Command": "fg",
            "Explanations about Options": {},
            "MP Summary": "run jobs in the foreground",
            "Most Similar TLDR Script": "fg",
            "Most Similar TLDR Task": "Bring most recently suspended background job to foreground",
            "Top-3 Scripts": [
                "au_704939: $ fg\n<kbd>Ctrl</kbd>+<kbd>c</kbd>"
            ],
            "Top-3 Similar Questions": [
                "au_704939: How to kill a process in state \"T\" (Terminated)",
                "su_1188206: How can I kill the parent shell script process without killing child process?"
            ]
        },
        {
            "Command": "screen",
            "Explanations about Options": {
                "-S(M)": "When creating a new session, this option can be used to specify a meaningful name for\n the session. This name identifies the session for \"screen -list\" and \"screen -r\"\n actions. It substitutes the default [tty.host] suffix.",
                "-X(M)": "Send the specified command to a running screen session. You may use the -S option to\n specify the screen session if you have several screen sessions running. You can use\n the -d or -r option to tell screen to look only for attached or detached screen\n sessions. Note that this command doesn't work if the session is password protected."
            },
            "MP Summary": "screen manager with VT100/ANSI terminal emulation",
            "Most Similar TLDR Script": "screen -X -S {{session_name}} quit",
            "Most Similar TLDR Task": "Kill a detached screen",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "au_1201252: How do I kill a screen session if it has no running processes?"
            ]
        }
    ],
    "Query": "How do I kill this tomcat process in Terminal?"
}