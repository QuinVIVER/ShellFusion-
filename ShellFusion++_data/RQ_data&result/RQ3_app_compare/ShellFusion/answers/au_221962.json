{
    "Answers": [
        {
            "Command": "pdfimages",
            "Explanations about Options": {
                "-j(M)": "Write images in JPEG format as JPEG files instead of the default format. The JPEG\n file is identical to the JPEG data stored in the PDF.",
                "-list(M)": "Instead of writing the images, list the images along with various information for\n each image. Do not specify an image-root with this option.",
                "-p(M)": "Include page numbers in output file names."
            },
            "MP Summary": "Portable Document Format (PDF) image extractor (version 3.03)",
            "Most Similar TLDR Script": "pdfimages -p {{path/to/file.pdf}} {{filename_prefix}}",
            "Most Similar TLDR Task": "Extract images from a PDF file and include the page number in the output filenames",
            "Top-3 Scripts": [
                "au_959551: pdfimages -j file.pdf ./",
                "so_14977038: $ pdfimages -list file.pdf\npage   num  type   width height color comp bpc  enc interp  object ID\n---------------------------------------------------------------------\n   1     0 image     200   197  rgb     3   8  jpeg   no         7  0"
            ],
            "Top-3 Similar Questions": [
                "au_959551: How to extract a JPEG from a PDF",
                "so_14977038: Get PDF pages which contain images",
                "so_34826823: Sort PDF pages by shell script"
            ]
        },
        {
            "Command": "pdfgrep",
            "Explanations about Options": {},
            "MP Summary": "search PDF files for a regular expression",
            "Most Similar TLDR Script": "pdfgrep {{pattern}} {{file.pdf}}",
            "Most Similar TLDR Task": "Find lines that match pattern in a PDF",
            "Top-3 Scripts": [
                "au_1227543: pdfgrep 'pattern' yourfile.pdf"
            ],
            "Top-3 Similar Questions": [
                "au_454934: How can I extract pages containing a given string from a PDF file?",
                "ul_457778: How can I search a string in a pdf file, and find the physical page number of each page where the string appears?",
                "au_1227543: search all pages of long pdf for string"
            ]
        },
        {
            "Command": "pdftotext",
            "Explanations about Options": {
                "-f(M)": "Specifies the first page to convert.",
                "-l(M)": "Specifies the last page to convert.",
                "-layout(M)": "Maintain (as best as possible) the original physical layout of the text. The\n default is to Â´undo' physical layout (columns, hyphenation, etc.) and output the\n text in reading order."
            },
            "MP Summary": "Portable Document Format (PDF) to text converter (version 3.03)",
            "Most Similar TLDR Script": "pdftotext -f {{2}} -l {{4}} {{input.pdf}} {{output.txt}}",
            "Most Similar TLDR Task": "Convert pages 2, 3 and 4 of input.pdf to plain text and save them as output.txt",
            "Top-3 Scripts": [
                "au_1227543: pdftotext yourfile.pdf - | grep 'pattern'",
                "ul_20408: #!/bin/bash\nif=\"$1\"\npages=$(pdfinfo \"$if\" | sed -nre 's/^Pages: +([0-9]+)$/\\1/p')\nfor ((i=1; i<=$pages; i++)) ;do\n    printf \"%s %d\\n\" \"$(pdftotext -f $i -l $i -layout \"$if\" - | head -n 1)\" $i\ndone"
            ],
            "Top-3 Similar Questions": [
                "au_1227543: search all pages of long pdf for string",
                "au_1195340: Extract a specific pdf from a zip file with lots of pdfs",
                "ul_20408: Possible to extract title and pagenum of each page in a pdf file"
            ]
        },
        {
            "Command": "gs",
            "Explanations about Options": {
                "-P(M)": "Makes Ghostscript to look first in the current directory for library files. By\n default, Ghostscript no longer looks in the current directory, unless, of course,\n the first explicitly supplied directory is \".\" in -I. See also the INITIALIZATION\n FILES section below, and bundled Use.htm for detailed discussion on search paths\n and how Ghostcript finds files.",
                "-dNOPAUSE(M)": "Disables the prompt and pause at the end of each page. This may be desirable for\n applications where another program is driving Ghostscript."
            },
            "MP Summary": "Ghostscript (PostScript and PDF language interpreter and previewer)",
            "Most Similar TLDR Script": "gs -dQUIET -dBATCH -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile={{output.pdf}} {{input.pdf}}",
            "Most Similar TLDR Task": "Extract pages from a PDF file",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "ul_182485: Combine parts of pages of a PDF document",
                "ul_507521: Ghostscrip Extract every nth Pages from PDF"
            ]
        },
        {
            "Command": "qpdf",
            "Explanations about Options": {},
            "MP Summary": "PDF transformation software",
            "Most Similar TLDR Script": "qpdf --empty --pages {{file1.pdf}} {{1,6-8}} {{file2.pdf}} {{3,4,5}} -- {{output.pdf}}",
            "Most Similar TLDR Task": "Merge (concatenate) given pages from a list of PDF files and save the result as a new PDF",
            "Top-3 Scripts": [
                "ul_482699: fd -e pdf -x echo {} | while read -r line; do \n    var1=\"$line\" && var2=$(qpdf --show-npages \"$line\"); \n    echo \"var1,var2\" > myfile.csv;\ndone"
            ],
            "Top-3 Similar Questions": [
                "ul_482699: Extract the number of pages of PDFs recursively and dump them to a CSV"
            ]
        }
    ],
    "Query": "How can I extract a page range / a part of a PDF?"
}