{
    "Answers": [
        {
            "Command": "dig",
            "Explanations about Options": {
                "-t(C)": "DNS records are likely cached by your provider's DNS servers so if you want to check if the DNS changes you made were successful you can interrogate a DNS server from your domain hosting service with dig: .  \"dig -t a ns1.myhostingcompany.com @domain_registrar_dns_server\"."
            },
            "MP Summary": "DNS lookup utility",
            "Most Similar TLDR Script": "dig @{{8.8.8.8}} {{example.com}}",
            "Most Similar TLDR Task": "Specify an alternate DNS server to query",
            "Top-3 Scripts": [
                "au_2219: dig -t a ns1.myhostingcompany.com @domain_registrar_dns_server",
                "au_1021584: dig SOA copyleaks.com\n\ndig A copyleaks.com",
                "au_22750: dig ubuntu.com"
            ],
            "Top-3 Similar Questions": [
                "au_2219: How do I clear the DNS cache?",
                "au_1021584: How to set up dns cache time?",
                "au_22750: Best way to set up DNS caching?"
            ]
        },
        {
            "Command": "ping",
            "Explanations about Options": {},
            "MP Summary": "send ICMP ECHO_REQUEST to network hosts",
            "Most Similar TLDR Script": "ping {{host}}",
            "Most Similar TLDR Task": "Ping host",
            "Top-3 Scripts": [
                "su_429487: $ ping alyx"
            ],
            "Top-3 Similar Questions": [
                "su_429487: How to configure 'local' DNS?",
                "ul_140318: My Centos Server cannot resolve the DNS host name"
            ]
        },
        {
            "Command": "sync",
            "Explanations about Options": {},
            "MP Summary": "Synchronize cached writes to persistent storage",
            "Most Similar TLDR Script": "sync",
            "Most Similar TLDR Task": "Flush all pending write operations on all disks",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_55680975: How to flush the dirty pages of OS file cache to disks?"
            ]
        },
        {
            "Command": "host",
            "Explanations about Options": {},
            "MP Summary": "DNS lookup utility",
            "Most Similar TLDR Script": "host {{domain}} {{8.8.8.8}}",
            "Most Similar TLDR Task": "Specify an alternate DNS server to query",
            "Top-3 Scripts": [
                "au_51367: $ host www.dnssec-failed.org\nHost www.dnssec-failed.org not found: 3(NXDOMAIN)"
            ],
            "Top-3 Similar Questions": [
                "au_51367: How do I configure my caching nameserver to validate DNSSEC?"
            ]
        },
        {
            "Command": "curl",
            "Explanations about Options": {
                "--cert(M)": "(TLS) Tells curl to use the specified client certificate file when getting a file\n with HTTPS, FTPS or another SSL-based protocol. The certificate must be in PKCS#12\n format if using Secure Transport, or PEM format if using any other engine. If the\n optional password isn't specified, it will be queried for on the terminal. Note\n that this option assumes a \"certificate\" file that is the private key and the\n client certificate concatenated! See -E, --cert and --key to specify them\n independently.",
                "--insecure(M)": "(TLS) By default, every SSL connection curl makes is verified to be secure. This\n option allows curl to proceed and operate even for server connections otherwise\n considered insecure.",
                "--key(M)": "(TLS SSH) Private key file name. Allows you to provide your private key in this\n separate file. For SSH, if not specified, curl tries the following candidates in\n order: '~/.ssh/id_rsa', '~/.ssh/id_dsa', './id_rsa', './id_dsa'.",
                "--resolve(M)": ", address]...>\n Provide a custom address for a specific host and port pair. Using this, you can\n make the curl requests(s) use a specified address and prevent the otherwise\n normally resolved address to be used. Consider it a sort of /etc/hosts alternative\n provided on the command line. The port number should be the number used for the\n specific protocol the host will be used for. It means you need several entries if\n you want to provide address for the same host but different ports.",
                "--verbose(M)": "Makes curl verbose during the operation. Useful for debugging and seeing what's\n going on \"under the hood\". A line starting with '>' means \"header data\" sent by\n curl, '<' means \"header data\" received by curl that is hidden in normal cases, and\n a line starting with '*' means additional info provided by curl.",
                "-I(M)": "(HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the command HEAD which\n this uses to get nothing but the header of a document. When used on an FTP or FILE\n file, curl displays the file size and last modification time only.",
                "-S(M)": "When used with -s, --silent, it makes curl show an error message if it fails.",
                "-s(M)": "Silent or quiet mode. Don't show progress meter or error messages. Makes Curl\n mute. It will still output the data you ask for, potentially even to the\n terminal/stdout unless you redirect it."
            },
            "MP Summary": "transfer a URL",
            "Most Similar TLDR Script": "curl --cert {{client.pem}} --key {{key.pem}} --insecure {{https://example.com}}",
            "Most Similar TLDR Task": "Pass client certificate and key for a resource, skipping certificate validation",
            "Top-3 Scripts": [
                "au_587898: curl -s -S -I -H \"Host: example.com\" --resolve example.com:80:1.1.1.1 --verbose http://www.example.com/\n\ncurl -s -S -I -H \"Host: example.com\" --resolve example.com:80:1.1.1.1 --verbose http://example.com/"
            ],
            "Top-3 Similar Questions": [
                "au_587898: curl --resolve option not working: \"Hostname was NOT found in DNS cache\""
            ]
        }
    ],
    "Query": "How to flush local DNS cache in CentOS"
}