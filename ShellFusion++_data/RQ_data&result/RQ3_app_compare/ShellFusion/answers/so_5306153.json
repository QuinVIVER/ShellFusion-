{
    "Answers": [
        {
            "Command": "base64",
            "Explanations about Options": {
                "--wrap(M)": "wrap encoded lines after COLS character (default 76). Use 0 to disable line\n wrapping",
                "-d(M)": "decode data"
            },
            "MP Summary": "base64 encode/decode data and print to standard output",
            "Most Similar TLDR Script": "base64 {{filename}}",
            "Most Similar TLDR Task": "Encode a file",
            "Top-3 Scripts": [
                "so_50635141: USER64=$(echo $USER | base64 --wrap=0)",
                "so_61084657: <<<'H4sICJVHi14AA2ZsYWcyLnR4dAAzsvLzdHb193O1Kkktyk3KzLNKLjMp4gIAtRX2oBcAAAA=' base64 -d | hexdump -C\n00000000  1f 8b 08 08 95 47 8b 5e  00 03 66 6c 61 67 32 2e  |.....G.^..flag2.|\n00000010  74 78 74 00 33 b2 f2 f3  74 76 f5 f7 73 b5 2a 49  |txt.3...tv..s.*I|\n00000020  2d ca 4d ca cc b3 4a 2e  33 29 e2 02 00 b5 15 f6  |-.M...J.3)......|\n00000030  a0 17 00 00 00                                    |.....|\n00000035\n\n<<<'H4sICJVHi14AA2ZsYWcyLnR4dAAzsvLzdHb193O1Kkktyk3KzLNKLjMp4gIAtRX2oBcAAAA=' base64 -d | strings\nflag2.txt\nJ.3)\n\n<<<'H4sICJVHi14AA2ZsYWcyLnR4dAAzsvLzdHb193O1Kkktyk3KzLNKLjMp4gIAtRX2oBcAAAA=' >file.bin base64 -d\n\n<<<'H4sICJVHi14AA2ZsYWcyLnR4dAAzsvLzdHb193O1Kkktyk3KzLNKLjMp4gIAtRX2oBcAAAA=' base64 -d | gunzip\n2:NICEONE:termbin:cv4r"
            ],
            "Top-3 Similar Questions": [
                "so_50635141: Escape newline character while encoding in base64",
                "so_61084657: how to decode a base64 string into human readable characters on gnome terminal"
            ]
        },
        {
            "Command": "iconv",
            "Explanations about Options": {
                "-f(M)": "Use from-encoding for input characters.",
                "-l(M)": "List all known character set encodings.",
                "-t(M)": "Use to-encoding for output characters."
            },
            "MP Summary": "convert text from one character encoding to another",
            "Most Similar TLDR Script": "iconv -f {{from_encoding}} -t {{to_encoding}} {{input_file}}",
            "Most Similar TLDR Task": "Convert file to a specific encoding, and print to `stdout`",
            "Top-3 Scripts": [
                "so_14126272: <file.in iconv -f UTF-16le -t UTF-8 \\\n   | perl -CSDA -pe'$_=\"$. $_\";' \\\n     | iconv -f UTF-8 -t UTF-16le \\\n       >file.out\n\n<file.in iconv -f UTF-16le -t UTF-8 \\\n   | perl -pe'$_=\"$. $_\";' \\\n     | iconv -f UTF-8 -t UTF-16le \\\n       >file.out\n\n<file.in iconv -f UTF-16le -t UTF-8 \\\n   | nl \\\n     | iconv -f UTF-8 -t UTF-16le \\\n       >file.out",
                "au_35708: iconv --from-code $enc input-file |\n    sed 's/é/\\\\'\\''e/;s/ü/\\\\\"e/;s/ã/\\\\~a/' |\n    iconv -to-code $enc >converted-input-file\n\niconv -l",
                "so_11050502: wget -qO- tetristv.com/zapni.tv.php | iconv -f cp1252"
            ],
            "Top-3 Similar Questions": [
                "so_14126272: Why does this line numbering command mangle the character encoding?",
                "au_35708: Read character encoding with sed",
                "so_11050502: Cygwin terminal not displaying certain characters?"
            ]
        },
        {
            "Command": "wc",
            "Explanations about Options": {
                "-c(M)": "print the byte counts",
                "-m(M)": "print the character counts"
            },
            "MP Summary": "print newline, word, and byte counts for each file",
            "Most Similar TLDR Script": "wc -c {{file}}",
            "Most Similar TLDR Task": "Count characters (bytes) in file",
            "Top-3 Scripts": [
                "so_31563546: $ echo -n \"你好\" | wc -m"
            ],
            "Top-3 Similar Questions": [
                "so_31563546: how to use shell to count Chinese characters in file encoded in UTF-8"
            ]
        },
        {
            "Command": "strings",
            "Explanations about Options": {
                "-n(M)": " Print sequences of characters that are at least min-len characters long, instead of\n the default 4."
            },
            "MP Summary": "print the strings of printable characters in files.",
            "Most Similar TLDR Script": "strings -n {{length}} {{file}}",
            "Most Similar TLDR Task": "Limit results to strings at least *length* characters long",
            "Top-3 Scripts": [
                "so_61084657: <<<'H4sICJVHi14AA2ZsYWcyLnR4dAAzsvLzdHb193O1Kkktyk3KzLNKLjMp4gIAtRX2oBcAAAA=' base64 -d | strings\nflag2.txt\nJ.3)"
            ],
            "Top-3 Similar Questions": [
                "so_61084657: how to decode a base64 string into human readable characters on gnome terminal"
            ]
        },
        {
            "Command": "hexdump",
            "Explanations about Options": {
                "-C(M)": "Canonical hex+ASCII display. Display the input offset in hexadecimal , followed by\n sixteen space-separated, two column, hexadecimal bytes, followed by the same sixteen\n bytes in %_p format enclosed in ``|'' characters."
            },
            "MP Summary": "ASCII, decimal, hexadecimal, octal dump",
            "Most Similar TLDR Script": "hexdump -C {{file}}",
            "Most Similar TLDR Task": "Display the input offset in hexadecimal and its ASCII representation in two columns",
            "Top-3 Scripts": [
                "so_61084657: <<<'H4sICJVHi14AA2ZsYWcyLnR4dAAzsvLzdHb193O1Kkktyk3KzLNKLjMp4gIAtRX2oBcAAAA=' base64 -d | hexdump -C\n00000000  1f 8b 08 08 95 47 8b 5e  00 03 66 6c 61 67 32 2e  |.....G.^..flag2.|\n00000010  74 78 74 00 33 b2 f2 f3  74 76 f5 f7 73 b5 2a 49  |txt.3...tv..s.*I|\n00000020  2d ca 4d ca cc b3 4a 2e  33 29 e2 02 00 b5 15 f6  |-.M...J.3)......|\n00000030  a0 17 00 00 00                                    |.....|\n00000035"
            ],
            "Top-3 Similar Questions": [
                "so_61084657: how to decode a base64 string into human readable characters on gnome terminal"
            ]
        }
    ],
    "Query": "How to get terminal's Character Encoding"
}