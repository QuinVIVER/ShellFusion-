{
    "Answers": [
        {
            "Command": "head",
            "Explanations about Options": {
                "-n(M)": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            },
            "MP Summary": "output the first part of files",
            "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
            "Most Similar TLDR Task": "Output the first few lines of a file",
            "Top-3 Scripts": [
                "so_13361361: head -1\n\n$ date=`cat myfile.csv | head -1 | grep -o -e \"[0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\}\" | head -1`\n$ echo $date\n2012-11-01\n$ mv myfile.csv myfile.$date.csv",
                "so_35582765: $start=$(head -n2 file.csv | tail -n1 | cut -d',' -f1)\n$end=$(tail -n1 file.csv | cut -d',' -f1)",
                "so_29539300: head -1\n\n{ head -1; tail -1; } < text.txt\n\ncat text.txt | { head -1; tail -1; }\n\n{ head -1; tail -1; } < <(cat text.txt)"
            ],
            "Top-3 Similar Questions": [
                "so_13361361: How to get a specific column from the first row of a .csv file in bash?",
                "so_35582765: How to get first and last element from a csv column",
                "so_29539300: How to output a text's first line and last line to the terminal as a single command"
            ]
        },
        {
            "Command": "cut",
            "Explanations about Options": {},
            "MP Summary": "remove sections from each line of files",
            "Most Similar TLDR Script": "cut -d'{{:}}' -f{{5}}",
            "Most Similar TLDR Task": "Cut out the fifth field of each line, using a colon as a field delimiter (default delimiter is tab)",
            "Top-3 Scripts": [
                "so_23279001: cut -f2- -d\\; filename.txt\n\necho \"abc; def; ghi; jkl\" | cut -f2- -d\\;",
                "so_35582765: $start=$(head -n2 file.csv | tail -n1 | cut -d',' -f1)\n$end=$(tail -n1 file.csv | cut -d',' -f1)",
                "so_65150581: paste -d' ' <(cut -d' ' -f1 \"$txt\") \"$txt\" > \"$txt.new\" && mv \"$txt.new\" \"$txt\""
            ],
            "Top-3 Similar Questions": [
                "so_57330884: Command 'cut' doesn't show last column CSV",
                "so_46976425: bash CSV last column",
                "so_23279001: Print all columns but first delimited by pattern, bash"
            ]
        },
        {
            "Command": "column",
            "Explanations about Options": {
                "-c(M)": "Output is formatted for a display columns wide.",
                "-t(M)": "Determine the number of columns the input contains and create a table. Columns are\n delimited with whitespace, by default, or with the characters supplied using the -s\n option. Useful for pretty-printing displays.",
                "-x(M)": "Fill columns before filling rows."
            },
            "MP Summary": "columnate lists",
            "Most Similar TLDR Script": "printf \"header1\\nbar\\nfoobar\\n\" | column -c {{30}} -x",
            "Most Similar TLDR Task": "Fill columns before filling rows",
            "Top-3 Scripts": [
                "so_44042255: column -tx\n\nawk '{suffix=substr($1,1,length($1)-1); for(i=2;i<=NF;i++) $i=$i\"_\"suffix}1' file | column -tx",
                "so_38449522: awk -F \"delimiter\" '\n{\nprint $1,$2 ,$3 #Where $1,$2 and so are column numbers\n}' filename > newfile",
                "so_32340645: NR==FNR           # Execute next block for the 1st file in the list (i.e. file2)\n{search[$1];next} # store first column in search array and move to next record\n$1 in search      # for next file in the list if first col exists in search array\nkey=$1 SEP $4     # make key variable as $1, $4\nif(!(key in data))# if key is not in data array\nc[++n]=key        # store in array c with an incrementing index\ndata[key]=$0}     # not store full record in data array with index=key\nEND               # run this block at the end"
            ],
            "Top-3 Similar Questions": [
                "so_44042255: how to append the text in the first column to all columns linux",
                "so_38449522: Shell script copying all columns of text file instead of specified ones",
                "so_32340645: Retrieving multiple last rows of occurences of a column based on same first column"
            ]
        },
        {
            "Command": "tail",
            "Explanations about Options": {
                "-n(M)": "output the last NUM lines, instead of the last 10; or use -n +NUM to output\n starting with line NUM"
            },
            "MP Summary": "output the last part of files",
            "Most Similar TLDR Script": "tail -n {{num}} {{file}}",
            "Most Similar TLDR Task": "Show last 'num' lines in file",
            "Top-3 Scripts": [
                "so_35582765: $start=$(head -n2 file.csv | tail -n1 | cut -d',' -f1)\n$end=$(tail -n1 file.csv | cut -d',' -f1)",
                "so_29539300: tail -1\n\n{ head -1; tail -1; } < text.txt\n\ncat text.txt | { head -1; tail -1; }\n\n{ head -1; tail -1; } < <(cat text.txt)"
            ],
            "Top-3 Similar Questions": [
                "so_35582765: How to get first and last element from a csv column",
                "so_29539300: How to output a text's first line and last line to the terminal as a single command"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-H(M)": "Print the file name for each match. This is the default when there is more than\n one file to search.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file.",
                "-o(M)": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
            "Top-3 Scripts": [
                "so_13361361: grep -o\n\n$ date=`cat myfile.csv | head -1 | grep -o -e \"[0-9]\\{4\\}-[0-9]\\{2\\}-[0-9]\\{2\\}\" | head -1`\n$ echo $date\n2012-11-01\n$ mv myfile.csv myfile.$date.csv",
                "so_57370070: grep \"^9963\" input.txt"
            ],
            "Top-3 Similar Questions": [
                "so_13361361: How to get a specific column from the first row of a .csv file in bash?",
                "so_57370070: To grep for a particular string in the first column of a text file in shell/linux"
            ]
        }
    ],
    "Query": "How to use a shell command to only show the first column and last column in a text file?"
}