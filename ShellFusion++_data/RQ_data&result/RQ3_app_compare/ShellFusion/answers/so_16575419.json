{
    "Answers": [
        {
            "Command": "jq",
            "Explanations about Options": {},
            "MP Summary": "Command-line JSON processor",
            "Most Similar TLDR Script": "jq '.[]' {{file.json}}",
            "Most Similar TLDR Task": "Output all elements from arrays (or all the values from objects) in a JSON file",
            "Top-3 Scripts": [
                "ul_614238: jq -r '.' file.json\n\njq -r '.message | fromjson | [.first_name, .last_name, .phone]|@csv' file.json\n\"xaa\",\"xz\",\"989123930793\"",
                "so_55060292: jq --arg myarg \"foo\" '\n  .[$myarg] as $v | {} | .[$myarg] = $v'\n\nmyarg=foo ; jq \"{ $myarg }\"",
                "so_64149031: $ ID=$(cat data.json | jq .Item.ID.S -r)\n$ no=$(cat data.json | jq .Item.no.N -r)\n$ echo $ID $no\n4869949 2"
            ],
            "Top-3 Similar Questions": [
                "ul_614238: How to extract fields from encoded JSON object",
                "so_54601240: Using jq to change json object and field value from variable",
                "so_55060292: Get field from JSON object using jq and command line argument"
            ]
        },
        {
            "Command": "cut",
            "Explanations about Options": {},
            "MP Summary": "remove sections from each line of files",
            "Most Similar TLDR Script": "cut -d'{{:}}' -f{{5}}",
            "Most Similar TLDR Task": "Cut out the fifth field of each line, using a colon as a field delimiter (default delimiter is tab)",
            "Top-3 Scripts": [
                "au_1203818: man cut\n\nregCode=\"$( aws iot get-registration-code |\\\n    tr -d '{}' |\\\n    cut '-d\"' -f4 )\"\n\ncode=\"${regCode}.registrationCode\""
            ],
            "Top-3 Similar Questions": [
                "au_1203818: How to retrieve a value from a JSON using bash?"
            ]
        },
        {
            "Command": "id",
            "Explanations about Options": {
                "-g(M)": "print only the effective group ID"
            },
            "MP Summary": "print real and effective user and group IDs",
            "Most Similar TLDR Script": "id -g",
            "Most Similar TLDR Task": "Display the current group identity as a number",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_61782147: How to retrieve field from json file",
                "so_44597175: Creating a JSON string, PowerShell object",
                "so_59835482: converting system.array object into json object in powershell"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-H(M)": "Print the file name for each match. This is the default when there is more than\n one file to search.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
            "Top-3 Scripts": [
                "ul_459805: $ grep -B2 -A3 '\"name\" : \"Admin_UserGroup\"' File\n\n$ sed -E 's/\\},\\s*\\{/\\},\\n\\{/g' File | grep  '\"name\" : \"Admin_UserGroup\"'\n\n$ echo \"$Group_ID\" | grep ..."
            ],
            "Top-3 Similar Questions": [
                "ul_459805: How to retrieve values from json object using awk or sed"
            ]
        },
        {
            "Command": "tr",
            "Explanations about Options": {
                "-d(M)": "delete characters in SET1, do not translate"
            },
            "MP Summary": "translate or delete characters",
            "Most Similar TLDR Script": "tr {{find_character}} {{replace_character}} < {{filename}}",
            "Most Similar TLDR Task": "Replace all occurrences of a character in a file, and print the result",
            "Top-3 Scripts": [
                "au_1203818: man tr\n\nregCode=\"$( aws iot get-registration-code |\\\n    tr -d '{}' |\\\n    cut '-d\"' -f4 )\"\n\ncode=\"${regCode}.registrationCode\""
            ],
            "Top-3 Similar Questions": [
                "au_1203818: How to retrieve a value from a JSON using bash?"
            ]
        }
    ],
    "Query": "PowerShell   retrieve JSON object by field value"
}