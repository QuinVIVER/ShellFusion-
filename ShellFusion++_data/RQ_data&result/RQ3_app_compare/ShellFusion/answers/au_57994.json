{
    "Answers": [
        {
            "Command": "df",
            "Explanations about Options": {
                "-h(M)": "print sizes in powers of 1024 (e.g., 1023M)"
            },
            "MP Summary": "report file system disk space usage",
            "Most Similar TLDR Script": "df",
            "Most Similar TLDR Task": "Display all filesystems and their disk usage",
            "Top-3 Scripts": [
                "so_12244281: df -h",
                "so_8110530: df -k .\n\ndf -k /some/dir",
                "ul_429155: $ strace df / |& grep -i ext\nstatfs(\"/\", {f_type=EXT2_SUPER_MAGIC, f_bsize=4096, f_blocks=4611519, f_bfree=864281, f_bavail=624269, f_files=1179648, f_ffree=620737, f_fsid={126240841, 1491846125}, f_namelen=255, f_frsize=4096, f_flags=ST_VALID|ST_RELATIME}) = 0"
            ],
            "Top-3 Similar Questions": [
                "so_12244281: Query drive free space",
                "so_8110530: Check free disk space for current partition in bash",
                "ul_429155: How is free disk space on ext4 calculated?"
            ]
        },
        {
            "Command": "fdisk",
            "Explanations about Options": {
                "-l(C)": "Answering your first question: given you have an MBR there, I suggest you do something like \"dd\"'ing the first megabyte of the original drive (that contains the boot record and possibly the boot loader), then iterating over the partitions contained therein: \"dev=/dev/sda fdisk -l \"$dev\" | sed -ne '/^\\//s,\\(^[^ ]*\\) .*,\\1,p' | while read part do dd \"if=$part\" \"of=$(basename \"$part\")\" done\" And after you record the first megabyte to the target drive, ask the kernel to read the partition table with \"partprobe\" or \"kpartx\".",
                "-l(M)": "List the partition tables for the specified devices and then exit. If no devices\n are given, those mentioned in /proc/partitions (if that file exists) are used."
            },
            "MP Summary": "manipulate disk partition table",
            "Most Similar TLDR Script": "fdisk -l",
            "Most Similar TLDR Task": "List partitions",
            "Top-3 Scripts": [
                "ul_450844: dev=/dev/sda\nfdisk -l \"$dev\" | sed -ne '/^\\//s,\\(^[^ ]*\\) .*,\\1,p' | while read part\ndo dd \"if=$part\" \"of=$(basename \"$part\")\"\ndone",
                "au_1186145: fdisk -l"
            ],
            "Top-3 Similar Questions": [
                "ul_450844: disk image without free space",
                "su_1461834: How can I create a new partition in physical free space of SSD?",
                "au_1186145: Understanding disk space partitioning"
            ]
        },
        {
            "Command": "lvextend",
            "Explanations about Options": {
                "--size(M)": "Specifies the new size of the LV. The --size and --extents options are alternate\n methods of specifying size. The total number of physical extents used will be\n greater when redundant data is needed for RAID levels. When the plus + or minus -\n prefix is used, the value is not an absolute size, but is relative and added or\n subtracted from the current size."
            },
            "MP Summary": "Add space to a logical volume",
            "Most Similar TLDR Script": "lvextend --size {{100}}%FREE {{logical_volume}}",
            "Most Similar TLDR Task": "Increase a volume's size to 100% of the free phyiscal volume space",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "ul_281554: moving free space before other partition (to resize the root part.)"
            ]
        },
        {
            "Command": "lvcreate",
            "Explanations about Options": {
                "-n(M)": "Specifies the name of a new LV. When unspecified, a default name of \"lvol#\" is\n generated, where # is a number generated by LVM."
            },
            "MP Summary": "Create a logical volume",
            "Most Similar TLDR Script": "lvcreate -l {{100%FREE}} -n {{mylv}} {{vg1}}",
            "Most Similar TLDR Task": "Create a logical volume called mylv that uses all of the unallocated space in the volume group vg1",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "ul_603615: Multiple Free Space Disk Partition"
            ]
        },
        {
            "Command": "mdadm",
            "Explanations about Options": {
                "--detail(M)": "Print details of one or more md devices.",
                "-r(M)": "remove listed devices. They must not be active. i.e. they should be failed or\n spare devices."
            },
            "MP Summary": "manage MD devices aka Linux Software RAID",
            "Most Similar TLDR Script": "mdadm {{/path/to/raid_device_file}} -r {{/path/to/disk_device_file}}",
            "Most Similar TLDR Task": "Remove disk",
            "Top-3 Scripts": [
                "au_1186145: mdadm --detail /dev/md1"
            ],
            "Top-3 Similar Questions": [
                "au_1186145: Understanding disk space partitioning"
            ]
        }
    ],
    "Query": "Root drive is running out of disk space. How can I free up space?"
}