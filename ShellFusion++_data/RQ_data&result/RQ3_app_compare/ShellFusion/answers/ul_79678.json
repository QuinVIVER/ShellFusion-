{
    "Answers": [
        {
            "Command": "cp",
            "Explanations about Options": {
                "--help(M)": "display this help and exit",
                "--interactive(M)": "prompt before overwrite (overrides a previous -n option)",
                "-n(M)": "do not overwrite an existing file (overrides a previous -i option)",
                "-r(M)": "copy directories recursively"
            },
            "MP Summary": "copy files and directories",
            "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
            "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
            "Top-3 Scripts": [
                "so_17619678: echo 'n' | cp --interactive ~/somefile.txt ~/somefile_already_exists.txt",
                "so_53721774: cp -r\n\ncp --help",
                "ul_128617: $ nohup cp -ia foo/* bar/\n\n$ nohup cp -ia foo/* bar/ 2>nohup.out && rm nohup.out || cat nohup.out\n\n$ cp -ia foo/* bar/ </dev/null\n\n$ cp -n foo/* bar/"
            ],
            "Top-3 Similar Questions": [
                "so_17619678: BASH: How to copy a file without overwriting older files",
                "so_53721774: Can not overwrite folder from source to destination",
                "ul_128617: Copy directory, but fail if file already exists at destination"
            ]
        },
        {
            "Command": "rsync",
            "Explanations about Options": {
                "--delete(C)": "rsync man .   --delete.",
                "-a(M)": "This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and\n want to preserve almost everything (with -H being a notable omission). The only\n exception to the above equivalence is when --files-from is specified, in which case\n -r is not implied.",
                "-e(M)": "This option allows you to choose an alternative remote shell program to use for\n communication between the local and remote copies of rsync. Typically, rsync is\n configured to use ssh by default, but you may prefer to use rsh on a local network."
            },
            "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
            "Most Similar TLDR Script": "rsync -e ssh --delete {{remote_host}}:{{path/to/remote_file}} {{path/to/local_file}}",
            "Most Similar TLDR Task": "Transfer file over SSH and delete local files that do not exist on remote host",
            "Top-3 Scripts": [
                "ul_188026: rsync --â€¦ oldroot/etc etc\n\nrsync -a oldroot/etc .\n\nrsync -a oldroot/etc/ etc",
                "ul_354796: rsync --delete",
                "ul_175466: rm rsync.log; rsync [OPTION...] SRC... [DEST]"
            ],
            "Top-3 Similar Questions": [
                "ul_188026: Rsync not overwriting files",
                "ul_354796: rsync doesn't delete files in destination directory",
                "ul_175466: Rsync : overwrite log file"
            ]
        },
        {
            "Command": "mv",
            "Explanations about Options": {
                "--backup(M)": "make a backup of each existing destination file",
                "-n(M)": "do not overwrite an existing file"
            },
            "MP Summary": "move (rename) files",
            "Most Similar TLDR Script": "mv -n {{source}} {{target}}",
            "Most Similar TLDR Task": "Do not overwrite existing files at the target",
            "Top-3 Scripts": [
                "ul_107812: mv --backup=numbered"
            ],
            "Top-3 Similar Questions": [
                "ul_107812: How to force overwrite non-empty directories using `mv`"
            ]
        },
        {
            "Command": "install",
            "Explanations about Options": {},
            "MP Summary": "copy files and set attributes",
            "Most Similar TLDR Script": "install {{path/to/source}} {{path/to/destination}}",
            "Most Similar TLDR Task": "Copy files to destination",
            "Top-3 Scripts": [
                "so_33923035: /etc/ansible/xenhost/xen/files/install/usr/lib64\n\n/etc/ansible/xenhost/xen/files/install/lib64"
            ],
            "Top-3 Similar Questions": [
                "so_33923035: Ansible 'synchronize' overwrites folder even though delete=no"
            ]
        },
        {
            "Command": "ln",
            "Explanations about Options": {
                "-f(M)": "remove existing destination files",
                "-s(M)": "make symbolic links instead of hard links"
            },
            "MP Summary": "make links between files",
            "Most Similar TLDR Script": "ln -sf {{path/to/new_file}} {{path/to/symlink}}",
            "Most Similar TLDR Task": "Overwrite an existing symbolic to point to a different file",
            "Top-3 Scripts": [
                "ul_303306: ln(1)"
            ],
            "Top-3 Similar Questions": [
                "ul_303306: cp overwriting without overwriting hardlinks to destination"
            ]
        }
    ],
    "Query": "force rsync to overwrite files at destination even if they're newer"
}