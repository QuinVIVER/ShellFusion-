{
    "Answers": [
        {
            "Command": "rsync",
            "Explanations about Options": {
                "-a(M)": "This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and\n want to preserve almost everything (with -H being a notable omission). The only\n exception to the above equivalence is when --files-from is specified, in which case\n -r is not implied.",
                "-e(M)": "This option allows you to choose an alternative remote shell program to use for\n communication between the local and remote copies of rsync. Typically, rsync is\n configured to use ssh by default, but you may prefer to use rsh on a local network.",
                "-r(M)": "This tells rsync to copy directories recursively. See also --dirs (-d)."
            },
            "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
            "Most Similar TLDR Script": "rsync -e ssh --delete {{remote_host}}:{{path/to/remote_file}} {{path/to/local_file}}",
            "Most Similar TLDR Task": "Transfer file over SSH and delete local files that do not exist on remote host",
            "Top-3 Scripts": [
                "ul_287821: rsync -a /home/me/source/Electronica  /media/externalDrive/dest/Electronica\n\nrsync -a /home/me/source/Electronica/  /media/externalDrive/dest/Electronica",
                "ul_193368: $ rsync -r local-dir remote-machine:path",
                "so_28410692: man rsync\n\nSYNOPSIS\n        Local:  rsync [OPTION...] SRC... [DEST]\n\n        Access via remote shell:\n          Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]\n          Push: rsync [OPTION...] SRC... [USER@]HOST:DEST\n\n        [...]"
            ],
            "Top-3 Similar Questions": [
                "ul_287821: rsync wants to copy files that already exist in the destination directory",
                "ul_580277: rsync only existing subdirectories in destination",
                "ul_193368: Can scp create a directory if it doesn't exist?"
            ]
        },
        {
            "Command": "tar",
            "Explanations about Options": {
                "--show-transformed-names(M)": "Show file or archive names after transformation by --strip and --transform options.",
                "--transform(M)": "Use sed replace EXPRESSION to transform file names.",
                "-C(M)": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow.",
                "-T(M)": "Get names to extract or create from FILE.",
                "-c(M)": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
                "-v(M)": "Verbosely list files processed.",
                "-x(M)": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted."
            },
            "MP Summary": "an archiving utility",
            "Most Similar TLDR Script": "tar xf {{source.tar}} {{source.tar/path/to/extract}} --strip-components={{depth_to_strip}}",
            "Most Similar TLDR Task": "Extract a specific file without preserving the folder structure",
            "Top-3 Scripts": [
                "so_41632945: tar -C /u07/retail/ -c Bundle_{de,as,pt,op}.properties | ssh user@remote_host tar -C /u01/projects/ --transform 's/.*/MultiSolution\\&/' --show-transformed-names -xv\n\ncd /u07/retail/ && tar -c Bundle_*.properties | ssh user@remote_host tar -C /u01/projects/ --transform 's/.*/MultiSolution\\&/' --show-transformed-names -xv",
                "su_115997: tar cvzf - -T list_of_filenames | ssh hostname tar xzf -"
            ],
            "Top-3 Similar Questions": [
                "so_41632945: scp multiple files with different names from source and destination",
                "su_115997: How can I copy multiple files over scp in one command?"
            ]
        },
        {
            "Command": "scp",
            "Explanations about Options": {
                "-p(M)": "Preserves modification times, access times, and modes from the original file.",
                "-r(M)": "Recursively copy entire directories. Note that scp follows symbolic links\n encountered in the tree traversal."
            },
            "MP Summary": "secure copy (remote file copy program)",
            "Most Similar TLDR Script": "scp {{remote_host}}:{{path/to/remote_file}} {{path/to/local_directory}}",
            "Most Similar TLDR Task": "Copy a file from a remote host to a local directory",
            "Top-3 Scripts": [
                "so_31328968: scp -rp \"DAILY_TEST_FOLDER\" \"root@${IPADDRESS}:/home/root/\"",
                "ul_387859: scp somefile username@server:",
                "au_389816: scp server:~/Area?? /location/to/your/computer"
            ],
            "Top-3 Similar Questions": [
                "ul_193368: Can scp create a directory if it doesn't exist?",
                "so_31328968: how to replace files in subfolder with scp?",
                "so_28410692: rsync to remote without destination directory"
            ]
        },
        {
            "Command": "cp",
            "Explanations about Options": {
                "-n(M)": "do not overwrite an existing file (overrides a previous -i option)",
                "-r(M)": "copy directories recursively"
            },
            "MP Summary": "copy files and directories",
            "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
            "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
            "Top-3 Scripts": [
                "ul_128617: $ nohup cp -ia foo/* bar/\n\n$ nohup cp -ia foo/* bar/ 2>nohup.out && rm nohup.out || cat nohup.out\n\n$ cp -ia foo/* bar/ </dev/null\n\n$ cp -n foo/* bar/"
            ],
            "Top-3 Similar Questions": [
                "ul_128617: Copy directory, but fail if file already exists at destination"
            ]
        },
        {
            "Command": "mv",
            "Explanations about Options": {
                "-n(M)": "do not overwrite an existing file",
                "-v(M)": "explain what is being done"
            },
            "MP Summary": "move (rename) files",
            "Most Similar TLDR Script": "mv -n {{source}} {{target}}",
            "Most Similar TLDR Task": "Do not overwrite existing files at the target",
            "Top-3 Scripts": [
                "ul_248544: mv -vn file1 file2"
            ],
            "Top-3 Similar Questions": [
                "ul_248544: mv: Move file only if destination does not exist"
            ]
        }
    ],
    "Query": "scp without replacing existing files in the destination"
}