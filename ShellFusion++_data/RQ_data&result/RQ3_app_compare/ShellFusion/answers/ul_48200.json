{
    "Answers": [
        {
            "Command": "rm",
            "Explanations about Options": {
                "-f(M)": "ignore nonexistent files and arguments, never prompt",
                "-i(M)": "prompt before every removal",
                "-r(M)": "remove directories and their contents recursively"
            },
            "MP Summary": "remove files or directories",
            "Most Similar TLDR Script": "rm -i {{file(s)}}",
            "Most Similar TLDR Task": "Interactively remove multiple files, with a prompt before every removal",
            "Top-3 Scripts": [
                "so_51718727: -execdir rm -rf\n\nrm -rf\n\nfind . -maxdepth 1 -type d -name '*[0-9]*' -execdir rm -rf  -- '{}' \\;",
                "so_29482817: sed 2d file.csv > file.csv.bak &&\nmv file.csv.bak file.csv            # Oops; there went the links\n\nsed 2d file.csv > file.csv.bak &&\ncp file.csv.bak file.csv\nrm -f file.csv.bak",
                "so_37948714: cd ..\nrm -fr PROJECT_NAME"
            ],
            "Top-3 Similar Questions": [
                "so_51718727: Mac shell script to delete files",
                "so_19659839: how to script folder deletion on MAC",
                "so_29482817: Unix script to delete the first line of a file on a Mac"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-d(M)": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
                "-iname(M)": "Like -name, but the match is case insensitive. For example, the patterns `fo*' and\n `F??' match the file names `Foo', `FOO', `foo', `fOo', etc. The pattern `*foo*`\n will also match a file called '.foobar'.",
                "-maxdepth(M)": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
                "-mtime(M)": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -mtime {{-7}} -delete",
            "Most Similar TLDR Task": "Find files modified in the last 7 days, and delete them",
            "Top-3 Scripts": [
                "so_51718727: find /path/to/files/ -type d -mtime +5 -name '*[0-9]*'\n\nfind . -maxdepth 1 -type d -name '*[0-9]*' -execdir rm -rf  -- '{}' \\;",
                "so_66084431: cd <your directory>\nfind . -type f ! -iname \"*.pdf\" -delete",
                "so_30483670: find . -name \".DS_Store\" -delete"
            ],
            "Top-3 Similar Questions": [
                "so_51718727: Mac shell script to delete files",
                "so_66084431: Delete some files using the linux Command line",
                "so_30483670: Delete .DS_STORE files in current folder and all subfolders from command line on Mac"
            ]
        },
        {
            "Command": "sed",
            "Explanations about Options": {
                "-e(M)": "add the script to the commands to be executed",
                "-i(M)": "edit files in place (makes backup if SUFFIX supplied)"
            },
            "MP Summary": "stream editor for filtering and transforming text",
            "Most Similar TLDR Script": "sed '/{{line_pattern}}/d' {{filename}}",
            "Most Similar TLDR Task": "Delete lines matching the line pattern",
            "Top-3 Scripts": [
                "so_29482817: sed -i .bak -e 2d file.csv\n\nsed -i.bak -e 2d file.csv\n\nsed 2d file.csv > file.csv.bak &&\nmv file.csv.bak file.csv            # Oops; there went the links\n\nsed 2d file.csv > file.csv.bak &&\ncp file.csv.bak file.csv\nrm -f file.csv.bak",
                "so_55293911: cat /tmp/data.txt | tr '\\n@' '@\\n' | sed 's/000@//' | \\\n    tr '\\n@' '@\\n' | sed '/^@$/d'\n\ncat /tmp/data.txt | tr '\\n@' '@\\n' | sed 's/000@*/@/' | \\\n    tr '\\n@' '@\\n' | sed '/^@$/d'",
                "ul_197559: find -type f -exec sh -c '[[ $(sed -n $= $0) -eq 2 ]]' {} \\; -exec sed -i '1!d' {} +"
            ],
            "Top-3 Similar Questions": [
                "so_29482817: Unix script to delete the first line of a file on a Mac",
                "so_55293911: How to use sed on mac to delete part of a line and the next line",
                "ul_197559: Delete line from files"
            ]
        },
        {
            "Command": "tr",
            "Explanations about Options": {
                "-d(M)": "delete characters in SET1, do not translate"
            },
            "MP Summary": "translate or delete characters",
            "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
            "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
            "Top-3 Scripts": [
                "so_55293911: cat /tmp/data.txt | tr '\\n@' '@\\n' | sed 's/000@//' | \\\n    tr '\\n@' '@\\n' | sed '/^@$/d'\n\ncat /tmp/data.txt | tr '\\n@' '@\\n' | sed 's/000@*/@/' | \\\n    tr '\\n@' '@\\n' | sed '/^@$/d'"
            ],
            "Top-3 Similar Questions": [
                "so_55293911: How to use sed on mac to delete part of a line and the next line"
            ]
        },
        {
            "Command": "xargs",
            "Explanations about Options": {
                "-0(M)": "Input items are terminated by a null character instead of by whitespace, and the\n quotes and backslash are not special (every character is taken literally).\n Disables the end of file string, which is treated like any other argument. Useful\n when input items might contain white space, quote marks, or backslashes. The GNU\n find -print0 option produces input suitable for this mode.",
                "-a(M)": "Read items from file instead of standard input. If you use this option, stdin\n remains unchanged when commands are run. Otherwise, stdin is redirected from\n /dev/null.",
                "-e(M)": "This option is a synonym for the -E option. Use -E instead, because it is POSIX\n compliant while this option is not. If eof-str is omitted, there is no end of file\n string. If neither -E nor -e is used, no end of file string is used.",
                "-n(M)": "Use at most max-args arguments per command line. Fewer than max-args arguments\n will be used if the size (see the -s option) is exceeded, unless the -x option is\n given, in which case xargs will exit."
            },
            "MP Summary": "build and execute command lines from standard input",
            "Most Similar TLDR Script": "find . -name {{'*.backup'}} -print0 | xargs -0 rm -v",
            "Most Similar TLDR Task": "Delete all files with a `.backup` extension (`-print0` uses a null character to split file names, and `-0` uses it as delimiter)",
            "Top-3 Scripts": [
                "so_33728181: find parent_dir -name .DS_Store -print0 | xargs -0 rm -f"
            ],
            "Top-3 Similar Questions": [
                "so_33728181: how to delete a file recursively from folders on mac / unix"
            ]
        }
    ],
    "Query": "Recovered deleted files on Mac by command line"
}