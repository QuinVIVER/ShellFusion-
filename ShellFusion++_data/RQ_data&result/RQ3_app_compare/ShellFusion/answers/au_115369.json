{
    "Answers": [
        {
            "Command": "flac",
            "Explanations about Options": {
                "-c(M)": "Write output to stdout",
                "-d(M)": "Decode (the default behavior is to encode)"
            },
            "MP Summary": "Free Lossless Audio Codec",
            "Most Similar TLDR Script": "flac {{path/to/file.wav}}",
            "Most Similar TLDR Task": "Encode a wav file to flac (this will create a flac file in the same location as the wav file)",
            "Top-3 Scripts": [
                "so_66269365: #!/bin/bash\n\nshopt -s globstar\nfor f in **/*.flac; do\n    flac -cd \"$f\" | lame -b 320 - \"${f%.*}\".mp3 # && rm \"$f\"\ndone",
                "ul_37701: flac -c -d -force-raw-format --endian=little --signed=unsigned input.flac | \\\n  lame -r --little-endian --unsigned \\\n       -s 44.1 [other encoding options here] - output.mp3"
            ],
            "Top-3 Similar Questions": [
                "so_66269365: How do I convert a directory (including multiple subdirectories) of .flac files to .mp3s using Bash?",
                "ul_37701: How to encode huge FLAC files into MP3 and other files like AAC?"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-H(M)": "Print the file name for each match. This is the default when there is more than\n one file to search.",
                "-P(M)": "Interpret PATTERNS as Perl-compatible regular expressions (PCREs). This option is\n experimental when combined with the -z (--null-data) option, and grep -P may warn\n of unimplemented features.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file.",
                "-o(M)": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep -Hn {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Print file name with the corresponding line number for each match",
            "Top-3 Scripts": [
                "so_33131513: for name in *.mp3; \ndo \n  a=$(ffmpeg -i \"$name\" 2>&1|grep -o -P \"(?<=Input #0, mp3, from').*)(?=.mp3':)\"\n  b=$(ffmpeg -i \"$name\" 2>&1|grep -o -P '(?<=Duration: 00:).*(?=.[0-9]{2}, start)')\n  echo \"$b $a\"\ndone;"
            ],
            "Top-3 Similar Questions": [
                "su_663247: Is it possible to delete an MP3 file currently played in mplayer?",
                "so_33131513: Create directory list where each line in list consists of mp3 file name and mp3 duration",
                "so_23726872: Script that will search for MP3 using id3"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-n(M)": "for less than n ,",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -name '{{*.ext}}' -exec {{wc -l {} }}\\;",
            "Most Similar TLDR Task": "Run a command for each file (use `{}` within the command to access the filename)",
            "Top-3 Scripts": [
                "su_831167: find . -type d -exec\n        sh -c '<b>shopt -s nullglob;</b> set -- \"$0\"/*.mp3; [ $# -eq 1 ]' {} \\; -print\n\nfind . -type d -exec\n        sh -c 'shopt -s nullglob; set -- \"$0\"/*.mp3; [ $# -eq 1 ] <b>&& echo \"$1\"</b>' {} \\;"
            ],
            "Top-3 Similar Questions": [
                "ul_49502: Search MP3/Ogg files by tags/parameters from the command line",
                "su_831167: On Linux or Windows, how do I find the path for all mp3s that are the only mp3 in that directory?",
                "so_23726872: Script that will search for MP3 using id3"
            ]
        },
        {
            "Command": "vlc",
            "Explanations about Options": {},
            "MP Summary": "the VLC media player",
            "Most Similar TLDR Script": "vlc {{path/to/file}}",
            "Most Similar TLDR Task": "Play a file",
            "Top-3 Scripts": [
                "so_38171169: import vlc\np = vlc.MediaPlayer(\"http://your_mp3_url\")\np.play()"
            ],
            "Top-3 Similar Questions": [
                "so_38171169: How to play mp3 from URL"
            ]
        },
        {
            "Command": "zsh",
            "Explanations about Options": {},
            "MP Summary": "the Z shell",
            "Most Similar TLDR Script": "zsh {{file}}",
            "Most Similar TLDR Task": "Run commands from file (script)",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "au_820102: Play command and its output"
            ]
        }
    ],
    "Query": "How to play mp3 files from the command line?"
}