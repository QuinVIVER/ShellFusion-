{
    "Answers": [
        {
            "Command": "grep",
            "Explanations about Options": {
                "--include(M)": "Search only files whose base name matches GLOB (using wildcard matching as\n described under --exclude).",
                "-R(C)": "\"grep -R src/*\".",
                "-R(M)": "Read all files under each directory, recursively. Follow all symbolic links,\n unlike -r.",
                "-f(M)": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing.",
                "-i(M)": "Ignore case distinctions in patterns and input data, so that characters that differ\n only in case match each other.",
                "-l(M)": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file.",
                "-o(M)": "Print only the matched (non-empty) parts of a matching line, with each such part on\n a separate output line."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Search for a pattern within a file",
            "Top-3 Scripts": [
                "so_27665377: grep -Rl 'author' --include='*.txt' .",
                "au_89490: grep -R src/*",
                "so_39015974: grep `tail -n 1000 -f logfile.log | grep -i \"host\" | grep -o \"[a-f0-9][a-f0-9][a-f0-9][a-f0-9]\\.[a-f0-9][a-f0-9][a-f0-9][a-f0-9]\\.[a-f0-9][a-f0-9][a-f0-9][a-f0-9]\"` anotherfile"
            ],
            "Top-3 Similar Questions": [
                "so_27665377: Search files without specific string under current directory",
                "au_89490: How to search for a string inside of multiple files (in nested folder structure)?",
                "so_39015974: Grep search for a string by pattern and then find part of this string inside of another file"
            ]
        },
        {
            "Command": "fgrep",
            "Explanations about Options": {
                "-l(M)": "Suppress normal output; instead print the name of each input file from which output\n would normally have been printed. The scanning will stop on the first match.",
                "-q(M)": "Quiet; do not write anything to standard output. Exit immediately with zero status\n if any match is found, even if an error was detected. Also see the -s or\n --no-messages option."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "fgrep {{search_string}} {{path/to/file}}",
            "Most Similar TLDR Task": "Search for an exact string in a file",
            "Top-3 Scripts": [
                "so_13930501: find . -type f -name '*20121218*' -exec fgrep -l \"MY:STRING\" {} \\;",
                "so_32750126: while read name; do\n  fgrep -q $name alldata.txt || echo $name\ndone < students.txt"
            ],
            "Top-3 Similar Questions": [
                "so_13930501: How to search for a string in files with name containing a specific string in linux?",
                "so_32750126: Search for multiple strings (from a file) in another file and list the missing strings"
            ]
        },
        {
            "Command": "find",
            "Explanations about Options": {
                "-mtime(M)": "File's data was last modified n*24 hours ago. See the comments for -atime to\n understand how rounding affects the interpretation of file modification times.",
                "-n(M)": "for less than n ,",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -name '{{*pattern_1*}}' -or -name '{{*pattern_2*}}'",
            "Most Similar TLDR Task": "Find files by matching multiple patterns",
            "Top-3 Scripts": [
                "so_14282623: find . -name '*.[ch]*' | xargs grep some_search_term",
                "so_13930501: find . -type f -name '*20121218*' -exec fgrep -l \"MY:STRING\" {} \\;\n\n$ find . -type f -mtime -18",
                "so_64105239: find . -name '*cat*' -type f -exec bash -c 'r=$1;shift;for p;do o=${p##*/};d=${p%/*};echo mv -- \"$p\" \"$d/${o/cat/\"$r\"}\";done' _ dog {} \\+;"
            ],
            "Top-3 Similar Questions": [
                "so_14282623: Linux file and string search",
                "so_13930501: How to search for a string in files with name containing a specific string in linux?",
                "so_64105239: Search and replace string in file names without affecting folder names which contains same string"
            ]
        },
        {
            "Command": "unzip",
            "Explanations about Options": {
                "-d(C)": "It's actually quite simple .  \"for i in `find . -name \"*zip\"`; do unzip -o $i \"*partnumber*\" -d /tmp/ ; done\". for example, this code .  \"for i in `find . -name \"*zip\"`; do unzip -o $i \"*3460*\" -d /tmp/ ; done\".",
                "-o(M)": "overwrite existing files without prompting. This is a dangerous option , so use it\n with care. (It is often used with -f, however, and is the only way to overwrite\n directory EAs under OS/2.)"
            },
            "MP Summary": "list, test and extract compressed files in a ZIP archive",
            "Most Similar TLDR Script": "unzip -l {{file.zip}}",
            "Most Similar TLDR Task": "List the contents of a zip file without extracting",
            "Top-3 Scripts": [
                "so_16923977: for i in `find . -name \"*zip\"`; do unzip -o $i \"*partnumber*\" -d /tmp/ ; done\n\nfor i in `find . -name \"*zip\"`; do unzip -o $i \"*3460*\" -d /tmp/ ; done"
            ],
            "Top-3 Similar Questions": [
                "so_16923977: bash search inside ZIP files with keyword?"
            ]
        },
        {
            "Command": "test",
            "Explanations about Options": {},
            "MP Summary": "check file types and compare values",
            "Most Similar TLDR Script": "test $MY_VAR == '/bin/zsh'",
            "Most Similar TLDR Task": "Test if given variable is equal to given string",
            "Top-3 Scripts": [
                "au_430980: find / -type d -name test"
            ],
            "Top-3 Similar Questions": [
                "au_430980: finding specific files and data inside files"
            ]
        }
    ],
    "Query": "How to search strings inside files like in Windows without search monkey?"
}