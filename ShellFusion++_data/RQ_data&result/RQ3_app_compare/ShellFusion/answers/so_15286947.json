{
    "Answers": [
        {
            "Command": "tar",
            "Explanations about Options": {
                "-C(M)": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow.",
                "-O(M)": "Extract files to standard output.",
                "-c(M)": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given.",
                "-v(M)": "Verbosely list files processed."
            },
            "MP Summary": "an archiving utility",
            "Most Similar TLDR Script": "tar xf {{source.tar[.gz|.bz2|.xz]}} -C {{directory}}",
            "Most Similar TLDR Task": "Extract a (compressed) archive into the target directory",
            "Top-3 Scripts": [
                "so_2407111: tar xvf  test.tar -O | awk '/pattern/{print}'\n\ntar xvf  test.tar -O | grep \"pattern\"\n\ntar tf myarchive.tar | while read -r FILE\ndo\n    if tar xf test.tar $FILE  -O | grep \"pattern\" ;then\n        echo \"found pattern in : $FILE\"\n    fi\ndone",
                "su_235455: basedir=$1\nfor dir in \"$basedir\"/*; do\n    if test -d \"$dir\"; then\n        tar -cvf \"$dir\".tar \"$dir\"\n        rm -r \"$dir\"\n    fi\ndone\n\ntar -cvf\n\nbasedir=$1\nfor dir in $(find \"$basedir\" -mindepth 1 -maxdepth 1 -type d); do\n    tar -cvf \"$dir.tar\" \"$dir\"\n    rm -r \"$dir\"\ndone"
            ],
            "Top-3 Similar Questions": [
                "so_2407111: Performing grep operation in tar files without extracting",
                "su_235455: Bash script to perform an action on each subdirectory in a directory"
            ]
        },
        {
            "Command": "zip",
            "Explanations about Options": {
                "-r(M)": "Travel the directory structure recursively; for example:"
            },
            "MP Summary": "package and compress (archive) files",
            "Most Similar TLDR Script": "zip -r {{compressed.zip}} {{/path/to/dir1 /path/to/dir2 /path/to/file}}",
            "Most Similar TLDR Task": "Package and compress multiple directories and files",
            "Top-3 Scripts": [
                "so_40361698: for file in \"$currdir\"/*.zip; do\n  [ -e \"$file\" ] || continue\n  echo the zip is \"${file##*/}\"\ndone"
            ],
            "Top-3 Similar Questions": [
                "so_40361698: Bash get list of zip files in dir and perform some operations on each of them"
            ]
        },
        {
            "Command": "zgrep",
            "Explanations about Options": {
                "-e(M)": "use <pattern> as the pattern to match"
            },
            "MP Summary": "search compressed files for a regular expression",
            "Most Similar TLDR Script": "zgrep -e \"{{pattern_1}}\" -e \"{{pattern_2}}\" {{path/to/compressed/file}}",
            "Most Similar TLDR Task": "Grep a compressed file for multiple patterns",
            "Top-3 Scripts": [
                "so_25201085: zgrep \"Error\" /your_dir/*tgz"
            ],
            "Top-3 Similar Questions": [
                "so_25201085: Performing \"grep\" on multiple *.tar files and *.tgz"
            ]
        },
        {
            "Command": "fd",
            "Explanations about Options": {},
            "MP Summary": "find entries in the filesystem",
            "Most Similar TLDR Script": "fd {{pattern}}",
            "Most Similar TLDR Task": "Recursively find files matching the given pattern in the current directory",
            "Top-3 Scripts": [
                "ul_146263: /dev/fd\n\n/dev/fd/<the-file-descriptor-of-the-pipe>\n\n/dev/fd/<file-descriptor-number"
            ],
            "Top-3 Similar Questions": [
                "ul_146263: Why is `tac file | grep foo' (piping) faster than `grep foo < <(tac file)' (process substitution)?"
            ]
        },
        {
            "Command": "unzip",
            "Explanations about Options": {},
            "MP Summary": "list, test and extract compressed files in a ZIP archive",
            "Most Similar TLDR Script": "unzip {{file(s)}}",
            "Most Similar TLDR Task": "Extract zip file(s) (for multiple files, separate file paths by spaces)",
            "Top-3 Scripts": [
                "su_21680: ls *.zip | foreach-object { unzip $_ }"
            ],
            "Top-3 Similar Questions": [
                "su_21680: Powershell: Perform an operation on all files in a directory (foreach)"
            ]
        }
    ],
    "Query": "how perform grep operation on all files in a directory"
}