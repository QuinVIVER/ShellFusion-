{
    "Answers": [
        {
            "Command": "wc",
            "Explanations about Options": {
                "-l(M)": "print the newline counts"
            },
            "MP Summary": "print newline, word, and byte counts for each file",
            "Most Similar TLDR Script": "wc -l {{file}}",
            "Most Similar TLDR Task": "Count lines in file",
            "Top-3 Scripts": [
                "so_55635446: count=\"$(grep -ow WORD1 FileName | wc -l)\"",
                "so_32202892: # put the name that belongs to the domain=yahoo in a file\ngrep -n \"domain=yahoo\" file1 | cut -d = -f3 > result\n# initialize counter\ntotal=0\n# loop over file with names and increment the counter with the number of matches\nfor name in $(cat result); do\n    ((total+=$(grep -n \"$name\" file2 | wc -l)))\ndone",
                "so_60818568: nr_lines = $(wc -l < file.txt)\n\nnr_lines=$(wc -l < file.txt)\n\ntouch file.txt\necho \"hello\" > file.txt\nnr_lines=$(wc -l < file.txt)\nif [ $nr_lines -le 20 ]; then\n  echo \"number of lines is less than 20.\"\nfi"
            ],
            "Top-3 Similar Questions": [
                "so_55635446: calculate the number of a word in a txt file at linux terminal",
                "so_32202892: bash : calculate number using result of another file",
                "so_60818568: Count number of lines of a file and comparing"
            ]
        },
        {
            "Command": "uniq",
            "Explanations about Options": {
                "-c(M)": "prefix lines by the number of occurrences"
            },
            "MP Summary": "report or omit repeated lines",
            "Most Similar TLDR Script": "sort {{file}} | uniq -c",
            "Most Similar TLDR Task": "Display number of occurrences of each line along with that line",
            "Top-3 Scripts": [
                "so_32202892: grep \"domain=yahoo\" file1 |     # search for the pattern \\\n    cut -d = -f3 |              # get the third field (name) from the output \\\n    grep -v '^$'  |             # remove any blank lines that might creep in \\\n    sort |                      # sort the result, so we can see duplicates \\\n    uniq > result               # remove duplicates and write the results to a file\n\ngrep --count --file=result file2",
                "so_19012581: sort a.dat | uniq -c | awk '{print $2, \":\", $1}'\n\nsort a.dat | uniq -c | awk '{print $2\":\"$1}'",
                "so_8627014: tr '[A-Z]' '[a-z]' < input | \\\n     egrep -v \"^ *(join date|age|posts|location|re):\" | \\\n     sort | \\\n     uniq -c"
            ],
            "Top-3 Similar Questions": [
                "so_32202892: bash : calculate number using result of another file",
                "so_19012581: how do I count numbers from command line?",
                "so_8627014: Count number of similar lines in a file"
            ]
        },
        {
            "Command": "head",
            "Explanations about Options": {
                "-n(M)": "print the first NUM lines instead of the first 10; with the leading '-', print all\n but the last NUM lines of each file"
            },
            "MP Summary": "output the first part of files",
            "Most Similar TLDR Script": "head -n {{count_of_lines}} {{filename}}",
            "Most Similar TLDR Task": "Output the first few lines of a file",
            "Top-3 Scripts": [
                "so_33805146: first_res_atombumb= grep 'TER' tata_sbox_cuda.pdb | head -n 2 | tail -1 |tr -s ' '| cut -f 2 -d ' '\n# .................^...............................................................................^\necho $((first_res_atombumb-1))\n\nfirst_res_atombumb=$(grep 'TER' tata_sbox_cuda.pdb | head -n 2 | tail -1 |tr -s ' '| cut -f 2 -d ' ')\n# .................^^...............................................................................^"
            ],
            "Top-3 Similar Questions": [
                "so_33805146: bash calculations with numbers from files",
                "so_11387350: Comparing fields in two files with calculations"
            ]
        },
        {
            "Command": "bc",
            "Explanations about Options": {},
            "MP Summary": "An arbitrary precision calculator language",
            "Most Similar TLDR Script": "bc <<< \"(1 + 2) * 2 ^ 2\"",
            "Most Similar TLDR Task": "Calculate the result of an expression",
            "Top-3 Scripts": [
                "au_785038: paste -sd+ file.txt | bc\n\ngrep .... | paste -sd+ | bc",
                "so_2401997: exec 4<\"file1\"\nwhile read -r line\ndo\n    read -r s <&4\n    echo \"${line}-${s}\" | bc\ndone <\"file2\"\nexec >&4-"
            ],
            "Top-3 Similar Questions": [
                "au_785038: How can I sum numbers on lines in a file",
                "so_2401997: Calculate difference of numbers in two files",
                "so_20509541: Bash - Calculate the Average of Numbers Inputted"
            ]
        },
        {
            "Command": "nl",
            "Explanations about Options": {
                "-b(M)": "use STYLE for numbering body lines",
                "-d(M)": "use CC for logical page delimiters"
            },
            "MP Summary": "number lines of files",
            "Most Similar TLDR Script": "nl -b a {{file}}",
            "Most Similar TLDR Task": "Number all lines including blank lines",
            "Top-3 Scripts": [
                "ul_324057: nl file\n\nnl -ba -d '\n' text.txt > newfile"
            ],
            "Top-3 Similar Questions": [
                "ul_324057: number lines in a file"
            ]
        }
    ],
    "Query": "Calculating the number of lines in a file?"
}