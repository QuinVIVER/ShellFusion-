{
    "Answers": [
        {
            "Command": "pandoc",
            "Explanations about Options": {
                "-f(C)": "This utility should cover any html email as well, although you'll want to specify the format manually since .eml isn't very standard when it comes to text data. .  \"pandoc -f html -o outputfile.pdf inputfile.eml\".",
                "-o(M)": "Write output to FILE instead of stdout. If FILE is -, output will go to stdout,\n even if a non-textual format (docx, odt, epub2, epub3) is specified."
            },
            "MP Summary": "general markup converter",
            "Most Similar TLDR Script": "pandoc {{input.md}} -o {{output.pdf}}",
            "Most Similar TLDR Task": "Convert file to pdf (the output format is determined by file extension)",
            "Top-3 Scripts": [
                "su_326710: pandoc -f html -o outputfile.pdf inputfile.eml",
                "so_9504917: pandoc  -s -S YOURTEXTFILE -o YOURDOC.docx"
            ],
            "Top-3 Similar Questions": [
                "so_8382366: Converting HTML to odt, doc, docx",
                "su_326710: How do I convert an HTML email saved as a text file to a PDF file from the Linux command line?",
                "so_9504917: Converting VIM text file to .doc or .docx"
            ]
        },
        {
            "Command": "pdftotext",
            "Explanations about Options": {},
            "MP Summary": "Portable Document Format (PDF) to text converter (version 3.03)",
            "Most Similar TLDR Script": "pdftotext {{filename.pdf}}",
            "Most Similar TLDR Task": "Convert filename.pdf to plain text and save it as filename.txt",
            "Top-3 Scripts": [
                "au_211870: for file in *.pdf; do pdftotext \"$file\" \"$file.txt\"; done"
            ],
            "Top-3 Similar Questions": [
                "au_211870: How to convert all pdf files to text (within a folder) with one command?"
            ]
        },
        {
            "Command": "pdfgrep",
            "Explanations about Options": {
                "-l(C)": "Also, \"pdfgrep\" has built-in recurse functionality via the \"-r\" flag, so you could simply do: .  \"pdfgrep -r -l \"taux\" Semaine_[1-8]\".",
                "-l(M)": "Suppress normal output. Instead print the name of each input file that contains a\n match. This works well with -Z, but many other output options like -n or -c are\n ignored when -l is specified."
            },
            "MP Summary": "search PDF files for a regular expression",
            "Most Similar TLDR Script": "pdfgrep {{pattern}} {{file.pdf}}",
            "Most Similar TLDR Task": "Find lines that match pattern in a PDF",
            "Top-3 Scripts": [
                "ul_617071: for i in 1 2 3 4 5 6 7 8; do  find Semaine_$i -iname '*.pdf' -exec pdfgrep \"taux\" {} +; done\n\nfind Semaine_[1-8] -iname '*.pdf' -exec pdfgrep \"taux\" {} \\; -print\n\nfind Semaine_[1-8] -iname '*.pdf' -exec pdfgrep -l \"taux\" {} \\;\n\npdfgrep -r -l \"taux\" Semaine_[1-8]"
            ],
            "Top-3 Similar Questions": [
                "ul_617071: Find word or a set of words in a set of pdf files"
            ]
        },
        {
            "Command": "pdfinfo",
            "Explanations about Options": {},
            "MP Summary": "Portable Document Format (PDF) document information extractor (version 3.03)",
            "Most Similar TLDR Script": "pdfinfo {{path/to/file.pdf}}",
            "Most Similar TLDR Task": "Print PDF file information",
            "Top-3 Scripts": [
                "so_11467369: pdfinfo file.pdf\npdfinfo file.pdf | grep Pages:\npdfinfo file.pdf | grep Pages: | awk '{print $2}'"
            ],
            "Top-3 Similar Questions": [
                "so_11467369: ImageMagick converting pdf to images, converted page count"
            ]
        },
        {
            "Command": "ebook-convert",
            "Explanations about Options": {},
            "MP Summary": "ebook-convert ebook-convert input_file output_file [options] Convert an e-book from one format to another. input_file is the input and output_file is the output. Both must be specified as the first two arguments to the command. The output e-book format is guessed from the file extension  of  output_file.  output_file can  also  be  of  the special format .EXT where EXT is the output file extension. In this case, the name of the output file is derived from the name of the input  file.  Note  that the filenames must not start with a hyphen. Finally, if output_file has no extension, then it is treated as a directory and an \"open  e-book\"  (OEB)  consisting  of  HTML  files  is written  to that directory. These files are the files that would normally have been passed to the output plugin. After specifying the input and output file you can customize the conversion by  specifying various  options.  The available options depend on the input and output file types. To get help on them specify the input and output file and then use the -h option. For full documentation of the conversion system see conversion Whenever you pass arguments to  ebook-convert  that  have  spaces  in  them,  enclose  the arguments in quotation marks. For example: \"/some path/with spaces\" The  options  and  default  values  for the options change depending on both the input and output formats, so you should always check with: ebook-convert myfile.input_format myfile.output_format -h Below are the options that are common to all conversion, followed by the options  specific to every input and output format. · EINGABE EINSTELLUNGEN · AUSGABE EINSTELLUNGEN · LOOK AND FEEL · HEURISTIC PROCESSING · SEARCH AND REPLACE · STRUCTURE DETECTION · TABLE OF CONTENTS · METADATA · DEBUG --help, -h show this help message and exit --input-profile Geben Sie das Eingabe Profil an. Das Eingabe Profil schreibt der Konvertierung vor, wie die verschiedenen Informationen aus  dem  Eingabe  Dokument  zu  interpretieren sind.  Zum  Beispiel  auflösungsabhängige  Längen  (z.B.  Längen in Punkt). Wählbar ist:cybookg3,  cybook_opus,  default,  hanlinv3,  hanlinv5,   illiad,   irexdr1000, irexdr800, kindle, msreader, mobipocket, nook, sony, sony300, sony900 --list-recipes List  builtin  recipe  names.  You  can create an e-book from a builtin recipe like this: ebook-convert \"Recipe Name.recipe\" output.epub --output-profile Specify the output profile. The output profile tells the conversion system  how  to optimize  the created document for the specified device (such as by resizing images for the device screen size). In some cases,  an  output  profile  can  be  used  to optimize  the output for a particular device, but this is rarely necessary. Choices are:cybookg3,     cybook_opus,     default,     generic_eink,      generic_eink_hd, generic_eink_large, hanlinv3, hanlinv5, illiad, ipad, ipad3, irexdr1000, irexdr800, jetbook5, kindle,  kindle_dx,  kindle_fire,  kindle_oasis,  kindle_pw,  kindle_pw3, kindle_voyage,   kobo,   msreader,   mobipocket,  nook,  nook_color,  nook_hd_plus, pocketbook_900, pocketbook_pro_912, galaxy, sony, sony300, sony900, sony-landscape, sonyt3, tablet --version show program's version number and exit",
            "Most Similar TLDR Script": "ebook-convert {{source}} {{destination}}",
            "Most Similar TLDR Task": "Convert an ebook into another format",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "au_52040: Is there a better pdf to text converter than pdftotext?"
            ]
        }
    ],
    "Query": "How to convert Word (doc) to PDF in linux?"
}