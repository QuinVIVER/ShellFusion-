{
    "Answers": [
        {
            "Command": "find",
            "Explanations about Options": {
                "-d(M)": "A synonym for -depth, for compatibility with FreeBSD, NetBSD, MacOS X and OpenBSD.",
                "-maxdepth(M)": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
                "-n(M)": "for less than n ,",
                "-name(M)": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
                "-not(M)": "Same as ! expr, but not POSIX compliant.",
                "-type(M)": "File is of type c:"
            },
            "MP Summary": "search for files in a directory hierarchy",
            "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
            "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
            "Top-3 Scripts": [
                "su_617050: find . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\;\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n  awk '$NF==10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF>=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{} '; ls '{}' | wc -l\" \\; | \n awk '$NF<=10'\n\nfind . -maxdepth 1 -type d -exec bash -c \"echo -ne '{}\\t'; ls '{}' | wc -l\" \\; | \n awk -F\"\\t\" '$NF<=10{print $1}'",
                "so_53016767: find \"$PWD\" -path \"*keyword*/*.txt*\" -execdir command {} new_file \\;",
                "so_62190904: find . -type d | grep -vE $(sep=; for f in `find . -type f -name hello`; do echo -n ${sep}${f%\\/hello}; sep='|'; done)"
            ],
            "Top-3 Similar Questions": [
                "su_617050: Find directories containing a certain number of files",
                "so_53016767: Find and execute command on all files in directory that have a specific folder name",
                "so_62190904: Finding folder which does not have certain file Bash (find command)"
            ]
        },
        {
            "Command": "grep",
            "Explanations about Options": {
                "-F(M)": "Interpret PATTERNS as fixed strings, not regular expressions.",
                "-f(M)": "Obtain patterns from FILE, one per line. If this option is used multiple times or\n is combined with the -e (--regexp) option, search for all patterns given. The\n empty file contains zero patterns, and therefore matches nothing.",
                "-n(M)": "Prefix each line of output with the 1-based line number within its input file.",
                "-q(M)": "Quiet; do not write anything to standard output. Exit immediately with zero status\n if any match is found, even if an error was detected. Also see the -s or\n --no-messages option.",
                "-v(M)": "Invert the sense of matching, to select non-matching lines.",
                "-x(M)": "Select only those matches that exactly match the whole line. For a regular\n expression pattern, this is like parenthesizing the pattern and then surrounding it\n with ^ and $.",
                "-y(M)": "Obsolete synonym for -i."
            },
            "MP Summary": "print lines that match patterns",
            "Most Similar TLDR Script": "grep {{search_pattern}} {{path/to/file}}",
            "Most Similar TLDR Task": "Search for a pattern within a file",
            "Top-3 Scripts": [
                "so_62190904: find . -type d | grep -vE $(sep=; for f in `find . -type f -name hello`; do echo -n ${sep}${f%\\/hello}; sep='|'; done)",
                "so_57411132: ... | grep -F -f blacklist.txt | sort ...",
                "so_60064937: find . -name subdir -prune -o -type f -exec \\\n    grep -q teststring \"{}\" \\; -exec cp \"{}\" subdir \\;"
            ],
            "Top-3 Similar Questions": [
                "so_62190904: Finding folder which does not have certain file Bash (find command)",
                "so_57411132: Execute script for all but certain files in directory",
                "so_60064937: Bash: Find files containing a certain string and copy them into a folder"
            ]
        },
        {
            "Command": "pwd",
            "Explanations about Options": {},
            "MP Summary": "print name of current/working directory",
            "Most Similar TLDR Script": "pwd",
            "Most Similar TLDR Task": "Print the current directory",
            "Top-3 Scripts": [
                "so_65544239: find . -name 'terragrunt.hcl' -execdir pwd \\;",
                "ul_279722: rm -rf $(find . -name thatcertainfile -execdir pwd \\;)"
            ],
            "Top-3 Similar Questions": [
                "so_65544239: Bash script to find a specific file in a directory and its subdirectories and execute 2 commands on that specific file",
                "ul_279722: Delete directories that contain a certain file"
            ]
        },
        {
            "Command": "cd",
            "Explanations about Options": {},
            "MP Summary": "change the working directory",
            "Most Similar TLDR Script": "cd {{path/to/directory}}",
            "Most Similar TLDR Task": "Go to the given directory",
            "Top-3 Scripts": [],
            "Top-3 Similar Questions": [
                "so_15591904: Execute something from path in a specific directory in linux"
            ]
        },
        {
            "Command": "mkdir",
            "Explanations about Options": {
                "-p(M)": "no error if existing, make parent directories as needed"
            },
            "MP Summary": "make directories",
            "Most Similar TLDR Script": "mkdir {{directory}}",
            "Most Similar TLDR Task": "Create a directory in current directory or given path",
            "Top-3 Scripts": [
                "ul_278752: mkdir -p a/@eaDir\n mkdir -p b/c/@eaDir\n mkdir -p d/e/f\n touch a/@eaDir/xxx\n touch b/yyy\n touch b/c/@eaDir/xxx\n touch d/e/f/yyy\n find . -name '@eaDir' -prune -o -print"
            ],
            "Top-3 Similar Questions": [
                "ul_278752: How do I get a count of files in a directory (recursively) but exclude directories with a certain name"
            ]
        }
    ],
    "Query": "How can I find only the executable files under a certain directory in Linux?"
}