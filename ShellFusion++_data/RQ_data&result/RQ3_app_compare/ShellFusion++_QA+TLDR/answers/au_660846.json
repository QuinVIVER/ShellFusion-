{
  "Query": "How to Zip and Unzip a directory and its files in Linux",
  "Answers": [
    {
      "Command": "unzip",
      "MP Summary": "list, test and extract compressed files in a ZIP archive",
      "Most Similar TLDR Task": "Extract zip file(s) (for multiple files, separate file paths by spaces)",
      "Most Similar TLDR Script": "unzip {{file(s)}}",
      "Top-3 Similar Questions": [
        "ul_321683: Unzip all files into directories with the same name",
        "ul_586576: Unzip files into a new directory",
        "ul_489445: Unzip to a folder with the same name as the file (without the .zip extension)"
      ],
      "Top-3 Scripts": [
        "ul_321683: for d in *.zip\ndo\n  dir=/home/usrname/anotherdir/zip${d%%.zip}\n  unzip -d \"$dir\" \"$d\"\ndone",
        "ul_586576: for file in *.zip; do\n    [ -f \"$file\" ] || continue\n    unzip \"$file\" -d \"${file%%.zip}\"\ndone",
        "ul_489445: unzd() {\n    if [[ $# != 1 ]]; then echo I need a single argument, the name of the archive to extract; return 1; fi\n    target=\"${1%.zip}\"\n    unzip \"$1\" -d \"${target##*/}\"\n}\n\nunzip $1 -d \"${target}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "zip",
      "MP Summary": "package and compress (archive) files",
      "Most Similar TLDR Task": "Delete files from an existing zip file",
      "Most Similar TLDR Script": "zip -d {{compressed.zip}} \"{{foo/*.tmp}}\"",
      "Top-3 Similar Questions": [
        "ul_321683: Unzip all files into directories with the same name",
        "ul_586576: Unzip files into a new directory",
        "so_60930401: Unzip archive zip file into folder with same name as archive zip file"
      ],
      "Top-3 Scripts": [
        "ul_321683: for d in *.zip\ndo\n  dir=/home/usrname/anotherdir/zip${d%%.zip}\n  unzip -d \"$dir\" \"$d\"\ndone",
        "ul_586576: ",
        "so_60930401: $filePath = \"s:\\Download Data Feed\\\"\n$zip = Get-ChildItem -File -Recurse -Path $filePath | Where-Object { $_.Extension -eq \".zip\" }\n\nforeach ($file in $zip) { \n    $target = Join-Path $filePath $file.BaseName\n    if (!(Test-Path $target -PathType Container)) {\n        $null = New-Item -ItemType Directory -Path $target\n    }\n    Expand-7Zip -ArchiveFileName $file -Password \"Password\" -TargetPath $target\n}\n\n$zip"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create a gzipped archive from a directory using relative paths",
      "Most Similar TLDR Script": "tar czf {{target.tar.gz}} -C {{path/to/directory}} .",
      "Top-3 Similar Questions": [
        "so_24355289: Unzip a single file in a tbz archive",
        "au_25347: What command do I need to unzip/extract a .tar.gz file?",
        "so_26081500: tar -zxvf cannot unzip file"
      ],
      "Top-3 Scripts": [
        "so_24355289: tar xjf archive.tbz filename\n\nbzip2 -dc archive.tbz | tar xvf - filename\n\ntar tjf archive.tbz",
        "au_25347: man tar\n\ntar -xvzf community_images.tar.gz\n\ntar -xvzf community_images.tar.gz -C some_custom_folder_name",
        "so_26081500: "
      ],
      "Explanations about Options": {
        "-v": "Verbosely list files processed.",
        "-z": "Filter the archive through gzip(1).",
        "-C": "Change to DIR before performing any operations. This option is order-sensitive,\n i.e. it affects all options that follow.",
        "-x": "Extract files from an archive. Arguments are optional. When given, they specify\n names of the archive members to be extracted."
      }
    },
    {
      "Command": "unar",
      "MP Summary": "extract archive file contents",
      "Most Similar TLDR Task": "Force rename if files to be unpacked already exist",
      "Most Similar TLDR Script": "unar -r {{archive}}",
      "Top-3 Similar Questions": [
        "ul_489445: Unzip to a folder with the same name as the file (without the .zip extension)"
      ],
      "Top-3 Scripts": [
        "ul_489445: unar foo.zip\n\nunar -d foo.zip"
      ],
      "Explanations about Options": {
        "-d": "Always create a containing directory for the contents of the unpacked archive. By\n default, a directory is created if there is more than one top-level file or folder."
      }
    },
    {
      "Command": "file",
      "MP Summary": "determine file type",
      "Most Similar TLDR Task": "Look inside a zipped file and determine the file type(s) inside",
      "Most Similar TLDR Script": "file -z {{foo.zip}}",
      "Top-3 Similar Questions": [
        "ul_586576: Unzip files into a new directory",
        "so_60930401: Unzip archive zip file into folder with same name as archive zip file",
        "so_48777193: Unzip ZIP files in separate folders using Powershell"
      ],
      "Top-3 Scripts": [
        "ul_586576: for file in *.zip; do\n    [ -f \"$file\" ] || continue\n    unzip \"$file\" -d \"${file%%.zip}\"\ndone",
        "so_60930401: $filePath = \"s:\\Download Data Feed\\\"\n$zip = Get-ChildItem -File -Recurse -Path $filePath | Where-Object { $_.Extension -eq \".zip\" }\n\nforeach ($file in $zip) { \n    $target = Join-Path $filePath $file.BaseName\n    if (!(Test-Path $target -PathType Container)) {\n        $null = New-Item -ItemType Directory -Path $target\n    }\n    Expand-7Zip -ArchiveFileName $file -Password \"Password\" -TargetPath $target\n}",
        "so_48777193: "
      ],
      "Explanations about Options": {
        "-d": "Prints internal debugging information to stderr.",
        "-e": "Exclude the test named in testname from the list of tests made to determine the file\n type. Valid test names are:",
        "-P": "Set various parameter limits.",
        "-r": "Don't translate unprintable characters to \\ooo. Normally file translates\n unprintable characters to their octal representation.",
        "-h": "option causes symlinks not to be followed (on systems that support symbolic links).\n This is the default if the environment variable POSIXLY_CORRECT is not defined."
      }
    }
  ]
}