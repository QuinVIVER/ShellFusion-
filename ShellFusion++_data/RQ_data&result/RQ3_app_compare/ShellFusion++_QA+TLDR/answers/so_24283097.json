{
  "Query": "Reusing output from last command in Bash",
  "Answers": [
    {
      "Command": "head",
      "MP Summary": "output the first part of files",
      "Most Similar TLDR Task": "Output everything but the last few lines of a file",
      "Most Similar TLDR Script": "head -n -{{count_of_lines}} {{filename}}",
      "Top-3 Similar Questions": [
        "so_20666412: How do I use line output from a command as separate file names in bash?",
        "so_64976537: Creating variable from bash command output in makefile"
      ],
      "Top-3 Scripts": [
        "so_20666412: xargs -a <(ls | head -23) -d '\\n' vim",
        "so_64976537: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exit",
      "MP Summary": "cause the shell to exit",
      "Most Similar TLDR Task": "Exit the shell with the exit code of the last command executed",
      "Most Similar TLDR Script": "exit",
      "Top-3 Similar Questions": [
        "so_48937182: Getting the output from first command to exit in Bash",
        "so_33299398: Get all output of bash command in Python"
      ],
      "Top-3 Scripts": [
        "so_48937182: ",
        "so_33299398: #!/bin/bash\n>&2 echo \"my Error on STDERR!\"\nexit 255"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "eval",
      "MP Summary": "construct command by concatenating arguments",
      "Most Similar TLDR Task": "Set a variable in the current shell",
      "Most Similar TLDR Script": "eval \"{{foo=bar}}\"",
      "Top-3 Similar Questions": [
        "so_39864837: Efficiently rereading (or otherwise reusing) content from an input file in bash",
        "ul_110146: How to start line with command from output of another command"
      ],
      "Top-3 Scripts": [
        "so_39864837: # read command_list.txt only once, storing its contents in an array\nreadarray -t eval_commands < command_list.txt\n\nwhile IFS= read -r -d '' t_file <&3; do          # iterate over filenames from find\n  for eval_command in \"${eval_commands[@]}\"; do  # iterate over your array\n    eval \"$eval_command\"\n  done\ndone 3< <(find target_dir -maxdepth 1 -type f -print0)\n\n# put the filename expansion in *single quotes*\neval \"$eval_command \"'\"$t_file\"'\n\n# generate a safe version of the filename\nprintf -v t_file_q '%q' \"$t_file\"\n\n# ...and use that safe version instead of the original\neval \"$eval_command $t_file_q\"\n\neval \"$eval_command $t_file\"",
        "ul_110146: eval \"$(htop 2>&1 | tail -1)\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tac",
      "MP Summary": "concatenate and print files in reverse",
      "Most Similar TLDR Task": "Print the contents of the standard input reversed to the standard output",
      "Most Similar TLDR Script": "{{command}} | tac",
      "Top-3 Similar Questions": [
        "so_8017456: Output file lines from last to first in Bash"
      ],
      "Top-3 Scripts": [
        "so_8017456: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command using the current environment variables",
      "Most Similar TLDR Script": "exec {{command -with -flags}}",
      "Top-3 Similar Questions": [
        "so_17094783: how to log all the command output to one single file in bash scripting"
      ],
      "Top-3 Scripts": [
        "so_17094783: exec > output.txt\n\nexec > /dev/tty"
      ],
      "Explanations about Options": {}
    }
  ]
}