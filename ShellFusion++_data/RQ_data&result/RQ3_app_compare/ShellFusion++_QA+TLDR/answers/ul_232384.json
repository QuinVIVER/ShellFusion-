{
  "Query": "Argument string to integer in bash",
  "Answers": [
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "ul_478831: determine if output is string or integer",
        "ul_468429: Bash compare string and integer together as multi-conditions",
        "so_43459844: Why Can I add a String and a Int in Bash"
      ],
      "Top-3 Scripts": [
        "ul_478831: if ! [[ $( xargs <<< \"$count\" ) =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi\n\nif ! [[ \"${count// /}\" =~ ^[0-9]+$ ]]\nthen\n    echo \"string\"\nelse\n    echo $count\nfi",
        "ul_468429: if true && if true; then false; fi; then echo foo; else echo bar; fi\n\nif (true && (if true; then false; fi)); then echo foo; else echo bar; fi",
        "so_43459844: a=1\nb=2\ndeclare -i var\nvar=a+b+3\necho $var # Prints 6"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "printf",
      "MP Summary": "format and print data",
      "Most Similar TLDR Task": "Print a text message composed with environment variables",
      "Most Similar TLDR Script": "printf \"{{var1: %s\\tvar2: %s\\n}}\" \"{{$VAR1}}\" \"{{$VAR2}}\"",
      "Top-3 Similar Questions": [
        "so_48612001: `echo` (shell bash) sending integer values and not only chars and strings. Is it possible?",
        "so_32826395: Bash Script with Parsing Argument in Linux",
        "so_33467770: String manipulation in Bash with prefixes"
      ],
      "Top-3 Scripts": [
        "so_48612001: printf '\\x01' > /dev/LED\n\nprintf '\\001' > /dev/LED",
        "so_32826395: ",
        "so_33467770: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace only on lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
      "Top-3 Similar Questions": [
        "so_28705539: how can i print a string that contains integers and commas only in unix?",
        "so_21869086: In Bash: Read two integers from a file while ignoring characters between them."
      ],
      "Top-3 Scripts": [
        "so_28705539: sed 's/[^0-9,]*//g' file",
        "so_21869086: #!/bin/bash\nline=$(cat testfile | sed 's/ //g')\nargs=(${line//,/ })\nx=\"${args[0]}\"\ny=\"${args[1]}\"\necho $x # 13\necho $y # 243"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "expr",
      "MP Summary": "evaluate arguments as an expression",
      "Most Similar TLDR Task": "Get position of the first character in 'string' that matches 'substring'",
      "Most Similar TLDR Script": "echo $(expr index {{string}} {{substring}})",
      "Top-3 Similar Questions": [
        "so_41980134: bash allow only positive integer or positive integer with decimal point"
      ],
      "Top-3 Scripts": [
        "so_41980134: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output the value of a given key to a string (and disable JSON output)",
      "Most Similar TLDR Script": "cat {{file.json}} | jq --raw-output '\"some text: \\(.{{key_name}})\"'",
      "Top-3 Similar Questions": [
        "ul_573845: Pass Bash associative arrays as argument to jq filter"
      ],
      "Top-3 Scripts": [
        "ul_573845: $ for k in \"${!States[@]}\"; do printf '{\"name\":\"%s\",\\n\"value\":\"%s\"}\\n' $k \"${States[$k]}\"; done | jq -s 'reduce .[] as $i ({}; .[$i.name] = $i.value)'\n{\n  \"GA\": \"Georgia\",\n  \"NY\": \"New York\",\n  \"ME\": \"Maine\"\n}\n\n$ jq -r --argjson states \\\n    \"$(for k in \"${!States[@]}\"; do printf '{\"name\":\"%s\",\\n\"value\":\"%s\"}\\n' $k \"${States[$k]}\"; done | jq -s 'reduce .[] as $i ({}; .[$i.name] = $i.value)')\" \\\n    '\"\\($states[.defaultState]), \\(.defaultState), \\(.defaultCity), \\(.zip5)\"' file.json\nGeorgia, GA, ATLANTA, 30301"
      ],
      "Explanations about Options": {}
    }
  ]
}