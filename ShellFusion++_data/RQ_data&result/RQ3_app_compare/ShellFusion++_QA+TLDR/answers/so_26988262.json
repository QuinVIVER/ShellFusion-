{
  "Query": "Best way to find os name and version in Unix/Linux platform",
  "Answers": [
    {
      "Command": "find",
      "MP Summary": "search for files in a directory hierarchy",
      "Most Similar TLDR Task": "Find files matching a given pattern, excluding specific paths",
      "Most Similar TLDR Script": "find {{root_path}} -name '{{*.py}}' -not -path '{{*/site-packages/*}}'",
      "Top-3 Similar Questions": [
        "so_20641415: best way to find the number of files in a directory in unix",
        "so_29682543: Fast way to find file names in Linux and specify directory",
        "so_38465846: finding latest version files in each directory"
      ],
      "Top-3 Scripts": [
        "so_20641415: find . -maxdepth 1 -name 'file*' -type f | wc -l\n\n`/home/charles/data/Study$ find . -maxdepth 1 -name CL* -type f | wc -l\nbash: /usr/bin/find: Argument list too long\n`/home/charles/data/Study$ find . -maxdepth 1 -name `CL*` -type f | wc -l\n318480",
        "so_29682543: find ~ -name 'program.c'\n\nfind /usr/src -name 'program.c'",
        "so_38465846: find /path/ -type f -name '*.[0-9][0-9]' |\nawk -F '.' '{k=$0; sub(/\\.[^.]+$/, \"\", k)} $NF>=max[k]{max[k]=$NF} \n      END{for (i in max) print i FS max[i]}'\n\n/path/pll/05E2.43\n/path/dphy/05E2.01"
      ],
      "Explanations about Options": {
        "-maxdepth": "Descend at most levels (a non-negative integer) levels of directories below the\n starting-points. -maxdepth 0 means only apply the tests and actions to the\n starting-points themselves.",
        "-name": "This option is supported, but POSIX conformance depends on the POSIX conformance of\n the system's fnmatch(3) library function. As of findutils-4.2.2, shell\n metacharacters (`*', `?' or `[]' for example) will match a leading `.', because\n IEEE PASC interpretation 126 requires this. This is a change from previous\n versions of findutils.",
        "-type": "File is of type c:"
      }
    },
    {
      "Command": "which",
      "MP Summary": "locate a command",
      "Most Similar TLDR Task": "Search the PATH environment variable and display the location of any matching executables",
      "Most Similar TLDR Script": "which {{executable}}",
      "Top-3 Similar Questions": [
        "so_44393550: Find all Java versions in the system path",
        "so_11124882: Find command in linux",
        "so_2778149: Finding File WIth Fixed File Size (>0) in Unix/Linux"
      ],
      "Top-3 Scripts": [
        "so_44393550: which -a java | xargs -I{} echo \"echo {};{} -version;echo\" | sh\n\nwhich -a python | xargs -I{} echo \"echo {};{} --version;echo\" | sh",
        "so_11124882: cd $(dirname $(which ssh));",
        "so_2778149: "
      ],
      "Explanations about Options": {
        "-a": "print all matching pathnames of each argument"
      }
    },
    {
      "Command": "uname",
      "MP Summary": "print system information",
      "Most Similar TLDR Task": "Print software-related information: operating system, release number, and version",
      "Most Similar TLDR Script": "uname -srv",
      "Top-3 Similar Questions": [
        "so_45181115: Portable way to find the number of processors/CPU's in a shell script?"
      ],
      "Top-3 Scripts": [
        "so_45181115: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "make",
      "MP Summary": "GNU make utility to maintain groups of programs",
      "Most Similar TLDR Task": "Call the first target specified in the Makefile (usually named \"all\")",
      "Most Similar TLDR Script": "make",
      "Top-3 Similar Questions": [
        "so_29153861: How can I find all the versions of a Unix program on a system?"
      ],
      "Top-3 Scripts": [
        "so_29153861: /usr/local/sbin/make\n\n/usr/local/bin/make\n\n/usr/bin/make\n\nwhich make"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "pgrep",
      "MP Summary": "look up or signal processes based on name and other attributes",
      "Most Similar TLDR Task": "Search full command line with parameters instead of just the process name",
      "Most Similar TLDR Script": "pgrep -f \"{{process_name}} {{parameter}}\"",
      "Top-3 Similar Questions": [
        "so_50982858: How to use \"which\" with regex, or other ways to find a command in the $PATH"
      ],
      "Top-3 Scripts": [
        "so_50982858: "
      ],
      "Explanations about Options": {}
    }
  ]
}