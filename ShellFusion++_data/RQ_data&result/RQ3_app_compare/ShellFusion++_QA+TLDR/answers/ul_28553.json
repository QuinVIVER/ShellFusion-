{
  "Query": "How to read the local DNS cache contents?",
  "Answers": [
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Top-3 Similar Questions": [
        "ul_169192: Read file and find all occurrences and generate hash for the content between the occurrences",
        "au_1063184: read file content in for/while loop, removing escape characters",
        "so_63887223: I'm trying to read content from a file but I'm not getting exact output"
      ],
      "Top-3 Scripts": [
        "ul_169192: system(echo $line | md5sum)",
        "au_1063184: $ while IFS= read -r line; do echo \"${line//\\\\[tn]/}\"; done < arq.txt \naaaaa\nbbbbb\nccccc\neeeee\nddddd\nfffff\nggggg\nhhhhh",
        "so_63887223: $line"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dig",
      "MP Summary": "DNS lookup utility",
      "Most Similar TLDR Task": "Specify an alternate DNS server to query",
      "Most Similar TLDR Script": "dig @{{8.8.8.8}} {{example.com}}",
      "Top-3 Similar Questions": [
        "ul_558611: Read file and print out ip-address to another file"
      ],
      "Top-3 Scripts": [
        "ul_558611: #!/bin/bash\nwhile IFS= read -r host\ndo\n    if [[ -n \"$host\" ]]\n    then\n        ips=$(dig +short \"$host\" | grep '^[[:digit:].]*$' | xargs)\n        printf \"%s\\t%s\\n\" \"$host\" \"$ips\"\n    fi\ndone <hosts >ips"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "cp",
      "MP Summary": "copy files and directories",
      "Most Similar TLDR Task": "Recursively copy a directory's contents to another location (if the destination exists, the directory is copied inside it)",
      "Most Similar TLDR Script": "cp -r {{path/to/source_directory}} {{path/to/target_directory}}",
      "Top-3 Similar Questions": [
        "au_579599: Playonlinux website wont load? - change DNS nameserver"
      ],
      "Top-3 Scripts": [
        "au_579599: sudo cp /etc/resolv.conf /etc/resolv.backup\n\nsudo cp /etc/resolv.conf /etc/resolv.default\n\nsudo echo \"#!/bin/sh \ncp /etc/resolv.default /etc/resolv.conf\" > /etc/network/if-up.d/setnameserver.sh\n\n#!/bin/sh<br>\ncp /etc/resolv.default /etc/resolv.conf"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "sponge",
      "MP Summary": "soak up standard input and write to a file",
      "Most Similar TLDR Task": "Append file content to the source file",
      "Most Similar TLDR Script": "cat {{path/to/file}} | sponge -a {{path/to/file}}",
      "Top-3 Similar Questions": [
        "so_9655657: Stdout to file from which is reading content"
      ],
      "Top-3 Scripts": [
        "so_9655657: cat FILE | cut -d':' -f2 | sponge FILE"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create an archive from files",
      "Most Similar TLDR Script": "tar cf {{target.tar}} {{file1}} {{file2}} {{file3}}",
      "Top-3 Similar Questions": [
        "ul_292154: How to load directory into filesystem cache?"
      ],
      "Top-3 Scripts": [
        "ul_292154: tar -cf - /mydirectory > /dev/zero"
      ],
      "Explanations about Options": {
        "-c": "Create a new archive. Arguments supply the names of the files to be archived.\n Directories are archived recursively, unless the --no-recursion option is given."
      }
    }
  ]
}