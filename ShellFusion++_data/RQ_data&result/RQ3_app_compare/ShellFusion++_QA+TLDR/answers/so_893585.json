{
  "Query": "How to parse XML in Bash?",
  "Answers": [
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output the value of multiple keys as a new JSON object (assuming the input JSON has the keys `key_name` and `other_key_name`)",
      "Most Similar TLDR Script": "cat {{file.json}} | jq '{{{my_new_key}}: .{{key_name}}, {{my_other_key}}: .{{other_key_name}}}'",
      "Top-3 Similar Questions": [
        "ul_593244: Parsing .json in Bash",
        "so_52664260: parsing results in bash"
      ],
      "Top-3 Scripts": [
        "ul_593244: jq \".episodes | .[0]\" jsonfile\n{\n  \"title\": \"Hired and Fired by Little Richard and Jimi\u2019s first trip on LSD\",\n  \"url\": \"https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW2392375869.mp3\",\n  \"downloaded\": true,\n  \"listened\": false,\n  \"published\": 1582203660\n}\n\njq \".episodes| .[0].title\" jsonfile\n\"Hired and Fired by Little Richard and Jimi\u2019s first trip on LSD\"\n\njq \".episodes| .[0].published\" jsonfile\n1582203660\n\njq '.episodes | .[] | select(.url==\"https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW2392375869.mp3\").title' jsonfile    \n\"Hired and Fired by Little Richard and Jimi\u2019s first trip on LSD\"    \n\njq '.episodes | .[] | select(.url==\"https://www.podtrac.com/pts/redirect.mp3/chtbl.com/track/5899E/traffic.megaphone.fm/HSW2392375869.mp3\").published' jsonfile\n1582203660",
        "so_52664260: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Replace all occurrences of a character from another command's output",
      "Most Similar TLDR Script": "echo {{text}} | tr {{find_character}} {{replace_character}}",
      "Top-3 Similar Questions": [
        "so_345518: parsing a line in bash",
        "so_11821979: Parsing .csv file in bash, not reading final line"
      ],
      "Top-3 Scripts": [
        "so_345518: [user@host]$ echo \"grp1:create,delete:yo,el,ella\" | awk -F ':' '{print $3}' | tr ',' '\\n'\nyo\nel\nella",
        "so_11821979: tr \",\" \" \" <test.csv"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "xmllint",
      "MP Summary": "command line XML tool",
      "Most Similar TLDR Task": "Check that a XML file meets the requirements of its DOCTYPE declaration",
      "Most Similar TLDR Script": "xmllint --valid {{source_file.xml}}",
      "Top-3 Similar Questions": [
        "so_16711592: parsing xml file in unix"
      ],
      "Top-3 Scripts": [
        "so_16711592: xmllint --xpath '//Read[@IsIndexedRead = \"Y\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'\n\nxmllint --xpath '//Read[@IsIndexedRead = \"N\"]/@NumCycles' RunInfo.xml | grep -o '[0-9]\\+'"
      ],
      "Explanations about Options": {
        "--xpath": "Run an XPath expression given as argument and print the result. In case of a nodeset\n result, each node in the node set is serialized in full in the output. In case of an\n empty node set the \"XPath set is empty\" result will be shown and an error exit code\n will be returned."
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace separator / by any other character not used in the find or replace patterns, e.g., #",
      "Most Similar TLDR Script": "sed 's#{{find}}#{{replace}}#' {{filename}}",
      "Top-3 Similar Questions": [
        "so_12520203: parsing file in bash",
        "so_30921027: Parsing String Variable in Bash Script",
        "so_52664260: parsing results in bash"
      ],
      "Top-3 Scripts": [
        "so_12520203: $ sed -n '/^\\(Version\\|[[:digit:]]\\)/p' file\n10.113.193.70\nVersion: 47.80.99.08",
        "so_30921027: ",
        "so_52664260: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "command",
      "MP Summary": "execute a simple command",
      "Most Similar TLDR Task": "Display the path to the executable or the alias definition of a specific command",
      "Most Similar TLDR Script": "command -v {{command_name}}",
      "Top-3 Similar Questions": [
        "so_46565306: Parsing a path in bash"
      ],
      "Top-3 Scripts": [
        "so_46565306: "
      ],
      "Explanations about Options": {}
    }
  ]
}