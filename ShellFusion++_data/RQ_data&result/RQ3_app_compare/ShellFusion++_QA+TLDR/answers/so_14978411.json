{
  "Query": "HTTP POST and GET using cURL in Linux",
  "Answers": [
    {
      "Command": "curl",
      "MP Summary": "transfer a URL",
      "Most Similar TLDR Task": "Send a request with an extra header, using a custom HTTP method",
      "Most Similar TLDR Script": "curl -H {{'X-My-Header: 123'}} -X {{PUT}} {{http://example.com}}",
      "Top-3 Similar Questions": [
        "so_46853407: How to get correct response from curl in executable bash script?",
        "so_64271111: Getting output of curl command in a variable",
        "so_52242133: How to get file from POST data in Bash CGI script?"
      ],
      "Top-3 Scripts": [
        "so_46853407: #!/bin/bash\nresult=\"$(curl -i -H \"Accept: application/json\" -H \"Content-Type: application/json\" https://jsonplaceholder.typicode.com/posts/1)\"\necho the result is: \"${result}\"",
        "so_64271111: out=$(curl -u user:password -k ${second_url})\n# or \nout=$(curl -u user:password -k abc.com/${jobid}/result/ --get -d output=json) \n# and\necho \"$out\"",
        "so_52242133: curl http://localhost:81/cgi-bin/wtf.sh -F \"MyFile=@myfile.txt\""
      ],
      "Explanations about Options": {
        "-d": "(HTTP) Sends the specified data in a POST request to the HTTP server, in the same\n way that a browser does when a user has filled in an HTML form and presses the\n submit button. This will cause curl to pass the data to the server using the\n content-type application/x-www-form-urlencoded. Compare to -F, --form.",
        "-F": "(HTTP SMTP IMAP) For HTTP protocol family, this lets curl emulate a filled-in form\n in which a user has pressed the submit button. This causes curl to POST data using\n the Content-Type multipart/form-data according to RFC 2388.",
        "--get": "When used, this option will make all data specified with -d, --data, --data-binary\n or --data-urlencode to be used in an HTTP GET request instead of the POST request\n that otherwise would be used. The data will be appended to the URL with a '?'\n separator.",
        "-u": "Specify the user name and password to use for server authentication. Overrides -n,\n --netrc and --netrc-optional.",
        "-k": "(TLS) By default, every SSL connection curl makes is verified to be secure. This\n option allows curl to proceed and operate even for server connections otherwise\n considered insecure.",
        "-i": "Include the HTTP response headers in the output. The HTTP response headers can\n include things like server name, cookies, date of the document, HTTP version and\n more..."
      }
    },
    {
      "Command": "php",
      "MP Summary": "PHP Command Line Interface 'CLI'",
      "Most Similar TLDR Task": "Get a list of installed PHP extensions",
      "Most Similar TLDR Script": "php -m",
      "Top-3 Similar Questions": [
        "su_344771: How to Download Through POST using wget"
      ],
      "Top-3 Scripts": [
        "su_344771: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "nc",
      "MP Summary": "arbitrary TCP and UDP connections and listens",
      "Most Similar TLDR Task": "Act as proxy and forward data from a local TCP port to the given remote host",
      "Most Similar TLDR Script": "nc -l {{local_port}} | nc {{hostname}} {{remote_port}}",
      "Top-3 Similar Questions": [
        "so_44663438: Get status starting Java HTTP server in shell script"
      ],
      "Top-3 Scripts": [
        "so_44663438: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "as",
      "MP Summary": "or  any situation  where  you want to make sure you're doing a clean install of your dependencies. It  can  be  significantly  faster  than  a  regular  npm  install  by  skipping   certain user-oriented  features.  It  is  also  more strict than a regular install, which can help catch errors or inconsistencies caused by the incrementally-installed  local  environments of most npm users. In short, the main differences between using npm install and npm ci are: \u00b7 The project must have an existing package-lock.json or npm-shrinkwrap.json. \u00b7 If dependencies in the package lock do not match those in package.json, npm ci will exit with an error, instead of updating the package lock. \u00b7 npm ci can only install entire projects at a time:  individual  dependencies  cannot  be added with this command. \u00b7 If  a  node_modules  is  already present, it will be automatically removed before npm ci begins its install. \u00b7 It will  never  write  to  package.json  or  any  of  the  package-locks:  installs  are essentially frozen. See Also \u00b7 npm help install \u00b7 npm help package-locks April 2020                                  NPM-CI(1)",
      "Most Similar TLDR Task": "Generate output faster by skipping whitespace and comment preprocessing. (Should only be used for trusted compilers)",
      "Most Similar TLDR Script": "as -f {{file.s}}",
      "Top-3 Similar Questions": [
        "so_43850604: Get curl error description in bash script?"
      ],
      "Top-3 Scripts": [
        "so_43850604: curl_codes=(\n  \"All fine. Proceed as usual.\"\n  \"The URL you passed to libcurl used a protocol that this libcurl does not support.\"\n  \"Something else\")\n\n[ $exit_code -eq 0 ] || echo \"Error $exit_code: ${curl_codes[$exit_code]}\""
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "ip",
      "MP Summary": "show / manipulate routing, network devices, interfaces and tunnels",
      "Most Similar TLDR Task": "Add/Delete an ip address to an interface",
      "Most Similar TLDR Script": "ip addr add/del {{ip}}/{{mask}} dev {{interface}}",
      "Top-3 Similar Questions": [
        "so_21101157: Getting correct output in a shell script from the curl command"
      ],
      "Top-3 Scripts": [
        "so_21101157: IPADDR=$(curl ipinfo.io/ip 2>/dev/null)"
      ],
      "Explanations about Options": {}
    }
  ]
}