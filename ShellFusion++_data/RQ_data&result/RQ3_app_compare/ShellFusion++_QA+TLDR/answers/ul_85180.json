{
  "Query": "Assigning the output of a SQL query to variable",
  "Answers": [
    {
      "Command": "line",
      "MP Summary": "cache line size",
      "Most Similar TLDR Task": "Read input",
      "Most Similar TLDR Script": "line",
      "Top-3 Similar Questions": [
        "so_14397393: How to assign the result of a shell command to a MySQL variable?"
      ],
      "Top-3 Scripts": [
        "so_14397393: "
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "exec",
      "MP Summary": "execute commands and open, close, or copy file descriptors",
      "Most Similar TLDR Task": "Replace with the specified command using the current environment variables",
      "Most Similar TLDR Script": "exec {{command -with -flags}}",
      "Top-3 Similar Questions": [
        "so_13370318: Bash: assigning the output of 'times' builtin to a variable"
      ],
      "Top-3 Scripts": [
        "so_13370318: exec ${co[1]}>&-"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "uncrustify",
      "MP Summary": "C, C++, C#, D, Java and Pawn source code beautifier",
      "Most Similar TLDR Task": "Explicitly set a configuration variable's value",
      "Most Similar TLDR Script": "uncrustify --set {{option}}={{value}}",
      "Top-3 Similar Questions": [
        "so_48500178: assign the multiline output of command to a variable"
      ],
      "Top-3 Scripts": [
        "so_48500178: output=`echo abc && uncrustify -c ~/.uncrustify.cfg --check filename && echo def`\n\noutput=\"$(echo abc)\\n$(uncrustify -c ~/.uncrustify.cfg --check filename 2>&1)\\n$(echo def)\"\necho -e \"$output\""
      ],
      "Explanations about Options": {
        "--check": "Do not output the new text, instead verify that nothing changes when the file(s)\n are processed. The status of every file is printed to stderr. The exit code is\n EXIT_SUCCESS if there were no changes, EXIT_FAILURE otherwise."
      }
    },
    {
      "Command": "tee",
      "MP Summary": "read from standard input and write to standard output and files",
      "Most Similar TLDR Task": "Create a directory called \"example\", count the number of characters in \"example\" and write \"example\" to the terminal",
      "Most Similar TLDR Script": "echo \"example\" | tee >(xargs mkdir) >(wc -c)",
      "Top-3 Similar Questions": [
        "ul_365512: assign number of output lines to a variable"
      ],
      "Top-3 Scripts": [
        "ul_365512: $ seq 1 5 2>&1 | tee >(wc -l | { read lines; echo Lines of output: $lines; })\n1\n2\n3\n4\n5\n$ Lines of output: 5"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "dirname",
      "MP Summary": "strip last component from file name",
      "Most Similar TLDR Task": "Delimit output with a NUL character instead of a newline (useful when combining with `xargs`)",
      "Most Similar TLDR Script": "dirname --zero {{path/to/directory_a}} {{path/to/file_b}}",
      "Top-3 Similar Questions": [
        "so_69569663: How to assign string outputs of expressions in variables without echo?"
      ],
      "Top-3 Scripts": [
        "so_69569663: somepath='/some/path'\nfilename=${somepath##*/}\ndirname=${somepath%/*}"
      ],
      "Explanations about Options": {}
    }
  ]
}