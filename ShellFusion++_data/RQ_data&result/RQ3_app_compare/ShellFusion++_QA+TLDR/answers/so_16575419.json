{
  "Query": "PowerShell   retrieve JSON object by field value",
  "Answers": [
    {
      "Command": "jq",
      "MP Summary": "Command-line JSON processor",
      "Most Similar TLDR Task": "Output all elements from arrays (or all the values from objects) in a JSON file",
      "Most Similar TLDR Script": "jq '.[]' {{file.json}}",
      "Top-3 Similar Questions": [
        "so_64149031: Looping through a json file and retrieving the values into bash variables",
        "so_67404726: Retrieving required set-off json objects using through \"Jq\" method",
        "so_62467225: Find value in JSON string"
      ],
      "Top-3 Scripts": [
        "so_64149031: $ ID=$(cat data.json | jq .Item.ID.S -r)\n$ no=$(cat data.json | jq .Item.no.N -r)\n$ echo $ID $no\n4869949 2",
        "so_67404726: cat input | jq --slurp -c .[] | head -5 | jq . > FirstTopObject.json\ncat input | jq --slurp -c .[] | sed '6,10!d' | jq . > SecondTopObject.json\ncat input | jq --slurp -c .[] | tail -5 | jq . > ThirdTopObject.json",
        "so_62467225: $ jq '.[].ItemsQueued' file\n0\n0"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "awk",
      "MP Summary": "pattern scanning and processing language",
      "Most Similar TLDR Task": "Print the last column of each line in a file, using a comma (instead of space) as a field separator",
      "Most Similar TLDR Script": "awk -F ',' '{print $NF}' {{filename}}",
      "Top-3 Similar Questions": [
        "ul_582248: Retrieve first two fields from the first column",
        "so_6358436: How would I find a variable in a line and use cut to retrieve the value"
      ],
      "Top-3 Scripts": [
        "ul_582248: awk -F':[^a-z]+' '{print $1, $2}' file1",
        "so_6358436: awk  '/Disktype/{print $2}' RS=\" \" FS=="
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "tr",
      "MP Summary": "translate or delete characters",
      "Most Similar TLDR Task": "Delete all occurrences of the specified set of characters from the input",
      "Most Similar TLDR Script": "tr -d '{{input_characters}}' < {{filename}}",
      "Top-3 Similar Questions": [
        "au_1203818: How to retrieve a value from a JSON using bash?",
        "so_6358436: How would I find a variable in a line and use cut to retrieve the value"
      ],
      "Top-3 Scripts": [
        "au_1203818: man tr\n\nregCode=\"$( aws iot get-registration-code |\\\n    tr -d '{}' |\\\n    cut '-d\"' -f4 )\"\n\ncode=\"${regCode}.registrationCode\"",
        "so_6358436: tr \" \" \"\\n\" | grep Disktype | cut -f 2 -d ="
      ],
      "Explanations about Options": {
        "-d": "delete characters in SET1, do not translate"
      }
    },
    {
      "Command": "sed",
      "MP Summary": "stream editor for filtering and transforming text",
      "Most Similar TLDR Task": "Replace only on lines matching the line pattern",
      "Most Similar TLDR Script": "sed '/{{line_pattern}}/s/{{find}}/{{replace}}/' {{filename}}",
      "Top-3 Similar Questions": [
        "so_67836241: Retrieve JSON Object Key Values using SED command",
        "so_67404726: Retrieving required set-off json objects using through \"Jq\" method",
        "so_55678289: How to retrieve the metadata associated with the highest numbered JSON timestamp?"
      ],
      "Top-3 Scripts": [
        "so_67836241: sed -n 's/^[[:space:]]*\"name\": \"\\(.*\\)\",/\\1/p' output.txt\n# With GNU sed:\nsed -n 's/^\\s*\"name\":\\s*\"\\(.*\\)\",/\\1/p' output.txt\n\nsed -z 's/.*\"fields\":\\s*{\\s*\"status\": {.*\\s*name\": \"\\([^\"]*\\)\".*/\\1/' output.txt",
        "so_67404726: cat input | jq --slurp -c .[] | head -5 | jq . > FirstTopObject.json\ncat input | jq --slurp -c .[] | sed '6,10!d' | jq . > SecondTopObject.json\ncat input | jq --slurp -c .[] | tail -5 | jq . > ThirdTopObject.json",
        "so_55678289: curl -v --silent http://player.listenlive.co/41851/en/songhistory |\nsed -nr 's/^.*\\s*var songs\\s*=\\s*(\\[[^]]+\\]).*$/\\1/p' |\njq -r '.[length-1]'"
      ],
      "Explanations about Options": {
        "-r": "use extended regular expressions in the script (for portability use POSIX -E)."
      }
    },
    {
      "Command": "echo",
      "MP Summary": "display a line of text",
      "Most Similar TLDR Task": "Print a message with environment variables",
      "Most Similar TLDR Script": "echo \"{{My path is $PATH}}\"",
      "Top-3 Similar Questions": [
        "so_64149031: Looping through a json file and retrieving the values into bash variables",
        "so_32172066: retrieve multiple values from json array using bash",
        "so_56242621: Finding highest value in a specific JSON field in bash"
      ],
      "Top-3 Scripts": [
        "so_64149031: $ ID=$(cat data.json | jq .Item.ID.S -r)\n$ no=$(cat data.json | jq .Item.no.N -r)\n$ echo $ID $no\n4869949 2",
        "so_32172066: ",
        "so_56242621: "
      ],
      "Explanations about Options": {}
    }
  ]
}