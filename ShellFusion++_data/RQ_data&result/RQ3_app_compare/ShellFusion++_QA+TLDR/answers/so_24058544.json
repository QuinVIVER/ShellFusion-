{
  "Query": "Speed up rsync with Simultaneous/Concurrent File Transfers?",
  "Answers": [
    {
      "Command": "rsync",
      "MP Summary": "a fast, versatile, remote (and local) file-copying tool",
      "Most Similar TLDR Task": "Transfer file from local to remote host",
      "Most Similar TLDR Script": "rsync {{path/to/local_file}} {{remote_host}}:{{path/to/remote_directory}}",
      "Top-3 Similar Questions": [
        "ul_78375: Move files and delete directories with rsync?",
        "au_251693: Copy a files with defined transfer rate",
        "au_1220537: Using rsync to back up /home folder with same permissions, recursive"
      ],
      "Top-3 Scripts": [
        "ul_78375: $ rsync -av --ignore-existing --remove-source-files source/ destination/ && \\\n  rsync -av --delete `mktemp -d`/ source/ && rmdir source/\n\n$ rsync -axvvES --remove-source-files source_directory /destination/ && \\\n  rm -rf source_directory",
        "au_251693: rsync /path/to/source /path/to/dest --bwlimit 2000 --progress",
        "au_1220537: sudo rsync -av /mnt/laptop/home/jonathan /mnt/external/home"
      ],
      "Explanations about Options": {
        "-v": "This option increases the amount of information you are given during the transfer.\n By default, rsync works silently. A single -v will give you information about what\n files are being transferred and a brief summary at the end. Two -v options will\n give you information on what files are being skipped and slightly more information\n at the end. More than two -v options should only be used if you are debugging\n rsync.",
        "-a": "This is equivalent to -rlptgoD. It is a quick way of saying you want recursion and\n want to preserve almost everything (with -H being a notable omission). The only\n exception to the above equivalence is when --files-from is specified, in which case\n -r is not implied.",
        "-E": "This option causes rsync to preserve the executability (or non-executability) of\n regular files when --perms is not enabled. A regular file is considered to be\n executable if at least one \u2019x\u2019 is turned on in its permissions. When an existing\n destination file\u2019s executability differs from that of the corresponding source\n file, rsync modifies the destination file\u2019s permissions as follows:",
        "-x": "This tells rsync to avoid crossing a filesystem boundary when recursing. This does\n not limit the user\u2019s ability to specify items to copy from multiple filesystems,\n just rsync\u2019s recursion through the hierarchy of each directory that the user\n specified, and also the analogous recursion on the receiving side during deletion.\n Also keep in mind that rsync treats a \"bind\" mount to the same device as being on\n the same filesystem.",
        "-S": "Try to handle sparse files efficiently so they take up less space on the\n destination. If combined with --inplace the file created might not end up with\n sparse blocks with some combinations of kernel version and/or filesystem type. If\n --whole-file is in effect (e.g. for a local copy) then it will always work because\n rsync truncates the file prior to writing out the updated version.",
        "--remove-source-files": "This tells rsync to remove from the sending side the files (meaning\n non-directories) that are a part of the transfer and have been successfully\n duplicated on the receiving side."
      }
    },
    {
      "Command": "tar",
      "MP Summary": "an archiving utility",
      "Most Similar TLDR Task": "Create a compressed archive, using archive suffix to determine the compression program",
      "Most Similar TLDR Script": "tar caf {{target.tar.xz}} {{file1}} {{file2}} {{file3}}",
      "Top-3 Similar Questions": [
        "so_53654550: showing status with large file transfers via netcat/nc"
      ],
      "Top-3 Scripts": [
        "so_53654550: tar cf - . | pv -b | nc -N [target server] 9000"
      ],
      "Explanations about Options": {}
    },
    {
      "Command": "unison",
      "MP Summary": "a file-synchronization tool for Unix and Windows",
      "Most Similar TLDR Task": "Sync two directories (creates log first time these two directories are synchronised)",
      "Most Similar TLDR Script": "unison {{path/to/directory_1}} {{path/to/directory_2}}",
      "Top-3 Similar Questions": [
        "ul_12197: Syncing directories in both directions with rsync"
      ],
      "Top-3 Scripts": [
        "ul_12197: $ sudo apt-get install unison\n$ unison MAC/ LINUX/\n\n$ unison -perms 0 vlc-2.2.0/ /media/sf_vlc/vlc\nContacting server...\nLooking for changes\nReconciling changes\n\nvlc-2.2.0      vlc                \nnew dir  ---->            /  [f] \n\nProceed with propagating updates? [] y\nPropagating updates"
      ],
      "Explanations about Options": {
        "-perms": "part of the permissions which is synchronized"
      }
    },
    {
      "Command": "pv",
      "MP Summary": "monitor the progress of data through a pipe",
      "Most Similar TLDR Task": "Measure the speed and amount of data flow between pipes (`-s` is optional)",
      "Most Similar TLDR Script": "command1 | pv -s {{expected_amount_of_data_for_eta}} | command2",
      "Top-3 Similar Questions": [
        "so_53654550: showing status with large file transfers via netcat/nc"
      ],
      "Top-3 Scripts": [
        "so_53654550: tar cf - . | pv -b | nc -N [target server] 9000"
      ],
      "Explanations about Options": {
        "-b": "Turn the total byte counter on. This will display the total amount of data\n transferred so far."
      }
    },
    {
      "Command": "touch",
      "MP Summary": "change file timestamps",
      "Most Similar TLDR Task": "Create a new empty file(s) or change the times for existing file(s) to current time",
      "Most Similar TLDR Script": "touch {{filename}}",
      "Top-3 Similar Questions": [
        "su_620652: Delete duplicate files with rsync"
      ],
      "Top-3 Scripts": [
        "su_620652: "
      ],
      "Explanations about Options": {}
    }
  ]
}